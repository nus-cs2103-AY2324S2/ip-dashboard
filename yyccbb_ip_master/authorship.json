[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"yyccbb"},"content":"# Nihao","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"yyccbb"},"content":"\u003e \"Say nihao to Nihao!\"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"yyccbb"},"content":"Nihao frees your mind of having to remember things you need to do. It\u0027s,","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"yyccbb"},"content":"* text-based","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"yyccbb"},"content":"  * easy to learn","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"yyccbb"},"content":"  * ~~FAST~~ SUPER FAST to use","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"yyccbb"},"content":"All you need to do is,","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"yyccbb"},"content":"1. download it from [here](https://github.com/yyccbb/ip/releases/tag/A-Jar).","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"yyccbb"},"content":"   2. double-click it.","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"yyccbb"},"content":"   3. add your tasks.","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"yyccbb"},"content":"   4. let it manage your tasks for you :pilot:","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"yyccbb"},"content":"And it is **FREE**!","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"yyccbb"},"content":"### Features:","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"yyccbb"},"content":"- [x] Managing tasks","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"yyccbb"},"content":"  - [x] Managing deadlines","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"yyccbb"},"content":"  - [ ] Reminders (coming soon)","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"yyccbb"},"content":"***","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"yyccbb"},"content":"If you are a Java programmer, you can use it to practice Java too. Here\u0027s the `main` method:","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"yyccbb"},"content":"```java","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"yyccbb"},"content":"public static void main(String[] args) {","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"yyccbb"},"content":"     DataHandler.read();","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"yyccbb"},"content":"     nihao.run();","lastModifiedDate":"2024-02-15"},{"lineNumber":29,"author":{"gitId":"yyccbb"},"content":"}","lastModifiedDate":"2024-02-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"yyccbb":25,"-":5}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"yyccbb"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"yyccbb"},"content":"    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.8.1\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"yyccbb"},"content":"    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.8.1\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"yyccbb"},"content":"    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.8.1\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"yyccbb"},"content":"    testImplementation \u0027junit:junit:4.13.1\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"yyccbb"},"content":"    implementation group: \u0027com.google.code.gson\u0027, name: \u0027gson\u0027, version: \u00272.10.1\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"yyccbb"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"yyccbb"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"yyccbb"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"yyccbb"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"yyccbb"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"yyccbb"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"yyccbb"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"yyccbb"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"yyccbb"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"yyccbb"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"yyccbb"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"yyccbb"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"yyccbb"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"yyccbb"},"content":"    mainClass.set(\"nihao.App\")","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"yyccbb"},"content":"checkstyle {","lastModifiedDate":"2024-02-18"},{"lineNumber":56,"author":{"gitId":"yyccbb"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-02-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"yyccbb"},"content":"    archiveBaseName \u003d \"nihao\"","lastModifiedDate":"2024-02-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":67,"author":{"gitId":"yyccbb"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-02-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"yyccbb":26,"-":42}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"yyccbb"},"content":"## Introduction","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"yyccbb"},"content":"Nihao is a desktop app for managing tasks, optimized for use via a Command Line Interface (CLI). If you can type fast, ","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"yyccbb"},"content":"Nihao can help you manage your tasks faster than traditional Graphical User Interface (GUI) apps. Currently, Nihao ","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"yyccbb"},"content":"supports three types of tasks: `todo`, `deadline` and `event`. Nihao also has a GUI which displays your queries and ","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"yyccbb"},"content":"its responses in a dialogue style.","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"yyccbb"},"content":"### List tasks","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"yyccbb"},"content":"List all tasks in the task list.","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":13,"author":{"gitId":"yyccbb"},"content":"### Add a task","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"yyccbb"},"content":"Add a task of the type `todo`, `deadline` or `event` to the task list.","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":16,"author":{"gitId":"yyccbb"},"content":"### Delete a task","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"yyccbb"},"content":"Delete a task at a specified index from the task list.","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":19,"author":{"gitId":"yyccbb"},"content":"### Mark a task as done/undone","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"yyccbb"},"content":"Mark a task at a specified index as done/undone.","lastModifiedDate":"2024-02-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":22,"author":{"gitId":"yyccbb"},"content":"### Find tasks","lastModifiedDate":"2024-02-28"},{"lineNumber":23,"author":{"gitId":"yyccbb"},"content":"Find tasks in the task list that contain a specified keyword.","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"yyccbb"},"content":"### `list` - List tasks","lastModifiedDate":"2024-02-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":29,"author":{"gitId":"yyccbb"},"content":"Displays all tasks in the task list.","lastModifiedDate":"2024-02-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":31,"author":{"gitId":"yyccbb"},"content":"Format: `list`","lastModifiedDate":"2024-02-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":33,"author":{"gitId":"yyccbb"},"content":"\u0026nbsp;","lastModifiedDate":"2024-02-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":35,"author":{"gitId":"yyccbb"},"content":"### `todo` - Add a todo task","lastModifiedDate":"2024-02-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":37,"author":{"gitId":"yyccbb"},"content":"Adds a todo task to the task list.","lastModifiedDate":"2024-02-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":39,"author":{"gitId":"yyccbb"},"content":"Format: `todo DESCRIPTION`","lastModifiedDate":"2024-02-28"},{"lineNumber":40,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":41,"author":{"gitId":"yyccbb"},"content":"Example of usage:","lastModifiedDate":"2024-02-28"},{"lineNumber":42,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":43,"author":{"gitId":"yyccbb"},"content":"`todo read book` adds a todo task with the description \"read book\".","lastModifiedDate":"2024-02-28"},{"lineNumber":44,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":45,"author":{"gitId":"yyccbb"},"content":"\u0026nbsp;","lastModifiedDate":"2024-02-28"},{"lineNumber":46,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":47,"author":{"gitId":"yyccbb"},"content":"### `deadline` - Add a deadline task","lastModifiedDate":"2024-02-28"},{"lineNumber":48,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":49,"author":{"gitId":"yyccbb"},"content":"Adds a deadline task to the task list.","lastModifiedDate":"2024-02-28"},{"lineNumber":50,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":51,"author":{"gitId":"yyccbb"},"content":"Format: `deadline DESCRIPTION /by DATETIME`","lastModifiedDate":"2024-02-28"},{"lineNumber":52,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":53,"author":{"gitId":"yyccbb"},"content":"Example of usage:","lastModifiedDate":"2024-02-28"},{"lineNumber":54,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":55,"author":{"gitId":"yyccbb"},"content":"`deadline return book /by 09/30/2023 2000` adds a deadline task with the description \"return book\" and the deadline ","lastModifiedDate":"2024-02-28"},{"lineNumber":56,"author":{"gitId":"yyccbb"},"content":"30 September 2023 2000 hrs.","lastModifiedDate":"2024-02-28"},{"lineNumber":57,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":58,"author":{"gitId":"yyccbb"},"content":"\u0026nbsp;","lastModifiedDate":"2024-02-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":60,"author":{"gitId":"yyccbb"},"content":"### `event` - Add an event task","lastModifiedDate":"2024-02-28"},{"lineNumber":61,"author":{"gitId":"yyccbb"},"content":"Adds an event task to the task list.","lastModifiedDate":"2024-02-28"},{"lineNumber":62,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":63,"author":{"gitId":"yyccbb"},"content":"Format: `event DESCRIPTION /from DATETIME /to DATETIME`","lastModifiedDate":"2024-02-28"},{"lineNumber":64,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":65,"author":{"gitId":"yyccbb"},"content":"Example of usage:","lastModifiedDate":"2024-02-28"},{"lineNumber":66,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":67,"author":{"gitId":"yyccbb"},"content":"`event project meeting /from 09/30/2023 1400 /to 09/30/2023 1600` adds an event task with the description \"project ","lastModifiedDate":"2024-02-28"},{"lineNumber":68,"author":{"gitId":"yyccbb"},"content":"meeting\" that starts at 30 September 2023 1400 hrs and ends at 30 September 2023 1600 hrs.","lastModifiedDate":"2024-02-28"},{"lineNumber":69,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":70,"author":{"gitId":"yyccbb"},"content":"\u0026nbsp;","lastModifiedDate":"2024-02-28"},{"lineNumber":71,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":72,"author":{"gitId":"yyccbb"},"content":"### `delete` - Delete a task","lastModifiedDate":"2024-02-28"},{"lineNumber":73,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":74,"author":{"gitId":"yyccbb"},"content":"Deletes a task at a specified index from the task list.","lastModifiedDate":"2024-02-28"},{"lineNumber":75,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":76,"author":{"gitId":"yyccbb"},"content":"Format: `delete INDEX` or `delete all`","lastModifiedDate":"2024-02-28"},{"lineNumber":77,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":78,"author":{"gitId":"yyccbb"},"content":"Example of usage:","lastModifiedDate":"2024-02-28"},{"lineNumber":79,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":80,"author":{"gitId":"yyccbb"},"content":"`delete 2` deletes the task at index 2 from the task list.","lastModifiedDate":"2024-02-28"},{"lineNumber":81,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":82,"author":{"gitId":"yyccbb"},"content":"`delete all` deletes all tasks from the task list.","lastModifiedDate":"2024-02-28"},{"lineNumber":83,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":84,"author":{"gitId":"yyccbb"},"content":"\u0026nbsp;","lastModifiedDate":"2024-02-28"},{"lineNumber":85,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":86,"author":{"gitId":"yyccbb"},"content":"### `mark` - Mark a task as done","lastModifiedDate":"2024-02-28"},{"lineNumber":87,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":88,"author":{"gitId":"yyccbb"},"content":"Marks a task at a specified index as done.","lastModifiedDate":"2024-02-28"},{"lineNumber":89,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":90,"author":{"gitId":"yyccbb"},"content":"Format: `mark INDEX`","lastModifiedDate":"2024-02-28"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":94,"author":{"gitId":"yyccbb"},"content":"`mark 3` marks the task at index 3 as done.","lastModifiedDate":"2024-02-28"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":96,"author":{"gitId":"yyccbb"},"content":"\u0026nbsp;","lastModifiedDate":"2024-02-28"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":98,"author":{"gitId":"yyccbb"},"content":"### `unmark` - Mark a task as undone","lastModifiedDate":"2024-02-28"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":100,"author":{"gitId":"yyccbb"},"content":"Marks a task at a specified index as undone.","lastModifiedDate":"2024-02-28"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":102,"author":{"gitId":"yyccbb"},"content":"Format: `unmark INDEX`","lastModifiedDate":"2024-02-28"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":104,"author":{"gitId":"yyccbb"},"content":"Example of usage:","lastModifiedDate":"2024-02-28"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":106,"author":{"gitId":"yyccbb"},"content":"`unmark 3` marks the task at index 3 as undone.","lastModifiedDate":"2024-02-28"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":108,"author":{"gitId":"yyccbb"},"content":"\u0026nbsp;","lastModifiedDate":"2024-02-28"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":110,"author":{"gitId":"yyccbb"},"content":"### `find` - Find tasks","lastModifiedDate":"2024-02-28"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":112,"author":{"gitId":"yyccbb"},"content":"Finds tasks in the task list that contain a specified keyword.","lastModifiedDate":"2024-02-28"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":114,"author":{"gitId":"yyccbb"},"content":"Format: `find KEYWORD`","lastModifiedDate":"2024-02-28"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":116,"author":{"gitId":"yyccbb"},"content":"Example of usage:","lastModifiedDate":"2024-02-28"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":118,"author":{"gitId":"yyccbb"},"content":"`find book` finds all tasks in the task list that contain the keyword \"book\".","lastModifiedDate":"2024-02-28"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":120,"author":{"gitId":"yyccbb"},"content":"\u0026nbsp;","lastModifiedDate":"2024-02-28"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":122,"author":{"gitId":"yyccbb"},"content":"### `bye` - Exit the program","lastModifiedDate":"2024-02-28"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":124,"author":{"gitId":"yyccbb"},"content":"Exits the program.","lastModifiedDate":"2024-02-28"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":126,"author":{"gitId":"yyccbb"},"content":"Format: `bye`","lastModifiedDate":"2024-02-28"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07"},{"lineNumber":128,"author":{"gitId":"yyccbb"},"content":"\u003e Note: `bye` also saves any changes made to the task list to the local storage. Exiting the program by simply ","lastModifiedDate":"2024-02-28"},{"lineNumber":129,"author":{"gitId":"yyccbb"},"content":"\u003e closing the window will cause any changes made to the task list to be lost.","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"yyccbb":91,"-":38}},{"path":"src/main/java/nihao/App.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyccbb"},"content":"package nihao;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"yyccbb"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"yyccbb"},"content":"import nihao.handler.DataHandler;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"yyccbb"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"yyccbb"},"content":" * Initializes the main components of the app.","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"yyccbb"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"yyccbb"},"content":"public class App {","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"yyccbb"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"yyccbb"},"content":"     * Runs the application.","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"yyccbb"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"yyccbb"},"content":"     * @param args CLI arguments.","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"yyccbb"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"yyccbb"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"yyccbb"},"content":"        DataHandler.read();","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"yyccbb"},"content":"        Application.launch(Nihao.class, args);","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"yyccbb"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"yyccbb":19}},{"path":"src/main/java/nihao/Nihao.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyccbb"},"content":"package nihao;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"yyccbb"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":5,"author":{"gitId":"yyccbb"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"yyccbb"},"content":"import javafx.application.Platform;","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"yyccbb"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"yyccbb"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"yyccbb"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"yyccbb"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"yyccbb"},"content":"import nihao.action.Action;","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"yyccbb"},"content":"import nihao.action.ExitAction;","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"yyccbb"},"content":"import nihao.handler.InputHandler;","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"yyccbb"},"content":"import nihao.handler.PrintHandler;","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"yyccbb"},"content":"import nihao.ui.MainWindowController;","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"yyccbb"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"yyccbb"},"content":" * Contains the main application logic for the Nihao app.","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"yyccbb"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"yyccbb"},"content":"public class Nihao extends Application {","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"yyccbb"},"content":"    public static final Nihao INSTANCE \u003d new Nihao();","lastModifiedDate":"2024-02-18"},{"lineNumber":22,"author":{"gitId":"yyccbb"},"content":"    public Nihao() {}","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"yyccbb"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"yyccbb"},"content":"     * Starts the application.","lastModifiedDate":"2024-02-26"},{"lineNumber":26,"author":{"gitId":"yyccbb"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":27,"author":{"gitId":"yyccbb"},"content":"     * @param stage the primary stage for this application, onto which","lastModifiedDate":"2024-02-26"},{"lineNumber":28,"author":{"gitId":"yyccbb"},"content":"     *              the application scene can be set.","lastModifiedDate":"2024-02-26"},{"lineNumber":29,"author":{"gitId":"yyccbb"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"yyccbb"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"yyccbb"},"content":"        try {","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"yyccbb"},"content":"            stage.setTitle(\"Nihao\");","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"yyccbb"},"content":"            stage.setResizable(false);","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"yyccbb"},"content":"            stage.setMinHeight(600);","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"yyccbb"},"content":"            stage.setMinWidth(400);","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"yyccbb"},"content":"            stage.getIcons().add(new javafx.scene.image.Image(","lastModifiedDate":"2024-02-26"},{"lineNumber":37,"author":{"gitId":"yyccbb"},"content":"                    this.getClass().getResourceAsStream(\"/images/logo_600.png\")","lastModifiedDate":"2024-02-26"},{"lineNumber":38,"author":{"gitId":"yyccbb"},"content":"            ));","lastModifiedDate":"2024-02-26"},{"lineNumber":39,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"yyccbb"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Nihao.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-19"},{"lineNumber":41,"author":{"gitId":"yyccbb"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"yyccbb"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-19"},{"lineNumber":43,"author":{"gitId":"yyccbb"},"content":"            String css \u003d this.getClass().getResource(\"/styles/cupertino-dark.css\").toExternalForm();","lastModifiedDate":"2024-02-19"},{"lineNumber":44,"author":{"gitId":"yyccbb"},"content":"            scene.getStylesheets().add(css);","lastModifiedDate":"2024-02-19"},{"lineNumber":45,"author":{"gitId":"yyccbb"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"yyccbb"},"content":"            fxmlLoader.\u003cMainWindowController\u003egetController().setNihao(Nihao.INSTANCE);","lastModifiedDate":"2024-02-23"},{"lineNumber":47,"author":{"gitId":"yyccbb"},"content":"            stage.show();","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"yyccbb"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":49,"author":{"gitId":"yyccbb"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-19"},{"lineNumber":50,"author":{"gitId":"yyccbb"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":51,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":52,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":53,"author":{"gitId":"yyccbb"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":54,"author":{"gitId":"yyccbb"},"content":"     * Gets the response from the app based on the user input.","lastModifiedDate":"2024-02-26"},{"lineNumber":55,"author":{"gitId":"yyccbb"},"content":"     * @param text the input text from the user","lastModifiedDate":"2024-02-26"},{"lineNumber":56,"author":{"gitId":"yyccbb"},"content":"     * @return the response from the app","lastModifiedDate":"2024-02-26"},{"lineNumber":57,"author":{"gitId":"yyccbb"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":58,"author":{"gitId":"yyccbb"},"content":"    public String getResponse(String text) {","lastModifiedDate":"2024-02-19"},{"lineNumber":59,"author":{"gitId":"yyccbb"},"content":"        assert text !\u003d null : \"text should not be null\";","lastModifiedDate":"2024-02-26"},{"lineNumber":60,"author":{"gitId":"yyccbb"},"content":"        try {","lastModifiedDate":"2024-02-19"},{"lineNumber":61,"author":{"gitId":"yyccbb"},"content":"            Action action \u003d InputHandler.handleInput(text);","lastModifiedDate":"2024-02-19"},{"lineNumber":62,"author":{"gitId":"yyccbb"},"content":"            if (action instanceof ExitAction) {","lastModifiedDate":"2024-02-23"},{"lineNumber":63,"author":{"gitId":"yyccbb"},"content":"                new java.util.Timer().schedule(","lastModifiedDate":"2024-02-23"},{"lineNumber":64,"author":{"gitId":"yyccbb"},"content":"                        new java.util.TimerTask() {","lastModifiedDate":"2024-02-23"},{"lineNumber":65,"author":{"gitId":"yyccbb"},"content":"                            @Override","lastModifiedDate":"2024-02-23"},{"lineNumber":66,"author":{"gitId":"yyccbb"},"content":"                            public void run() {","lastModifiedDate":"2024-02-23"},{"lineNumber":67,"author":{"gitId":"yyccbb"},"content":"                                Platform.exit();","lastModifiedDate":"2024-02-23"},{"lineNumber":68,"author":{"gitId":"yyccbb"},"content":"                                System.exit(0);","lastModifiedDate":"2024-02-23"},{"lineNumber":69,"author":{"gitId":"yyccbb"},"content":"                            }","lastModifiedDate":"2024-02-23"},{"lineNumber":70,"author":{"gitId":"yyccbb"},"content":"                        },","lastModifiedDate":"2024-02-23"},{"lineNumber":71,"author":{"gitId":"yyccbb"},"content":"                        3000","lastModifiedDate":"2024-02-23"},{"lineNumber":72,"author":{"gitId":"yyccbb"},"content":"                );","lastModifiedDate":"2024-02-23"},{"lineNumber":73,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":74,"author":{"gitId":"yyccbb"},"content":"            }","lastModifiedDate":"2024-02-23"},{"lineNumber":75,"author":{"gitId":"yyccbb"},"content":"            return action.execute();","lastModifiedDate":"2024-02-19"},{"lineNumber":76,"author":{"gitId":"yyccbb"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":77,"author":{"gitId":"yyccbb"},"content":"            return PrintHandler.printException(e);","lastModifiedDate":"2024-02-19"},{"lineNumber":78,"author":{"gitId":"yyccbb"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":79,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":80,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":81,"author":{"gitId":"yyccbb"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"yyccbb":81}},{"path":"src/main/java/nihao/action/Action.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyccbb"},"content":"package nihao.action;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"yyccbb"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"yyccbb"},"content":" * Represents an executable action.","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"yyccbb"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"yyccbb"},"content":"public interface Action {","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"yyccbb"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"yyccbb"},"content":"     * Executes the Action encapsulated.","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"yyccbb"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"yyccbb"},"content":"     * @throws Exception","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"yyccbb"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"yyccbb"},"content":"    public String execute() throws Exception;","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"yyccbb"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"yyccbb":13}},{"path":"src/main/java/nihao/action/DeleteAction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyccbb"},"content":"package nihao.action;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"yyccbb"},"content":"import nihao.action.task.Task;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"yyccbb"},"content":"import nihao.exception.IndexOutOfBoundsException;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"yyccbb"},"content":"import nihao.handler.DataHandler;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"yyccbb"},"content":"import nihao.handler.PrintHandler;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"yyccbb"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"yyccbb"},"content":" * Represents the delete action.","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"yyccbb"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"yyccbb"},"content":"public class DeleteAction implements Action {","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"yyccbb"},"content":"    private int index;","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"yyccbb"},"content":"    private boolean isAll;","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"yyccbb"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"yyccbb"},"content":"     * Constructor that specifies the index of the Task to be deleted.","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"yyccbb"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"yyccbb"},"content":"    public DeleteAction(String index) {","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"yyccbb"},"content":"        if (index.equals(\"all\")) {","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"yyccbb"},"content":"            this.index \u003d -1;","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"yyccbb"},"content":"            isAll \u003d true;","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"yyccbb"},"content":"        } else {","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"yyccbb"},"content":"            this.index \u003d Integer.parseInt(index);","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"yyccbb"},"content":"            isAll \u003d false;","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"yyccbb"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"yyccbb"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"yyccbb"},"content":"     * Deletes the Task at the given index and prints a notification.","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"yyccbb"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":31,"author":{"gitId":"yyccbb"},"content":"     * @throws IndexOutOfBoundsException When the index provided is more than the length of tasks.","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"yyccbb"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":33,"author":{"gitId":"yyccbb"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"yyccbb"},"content":"    public String execute() throws IndexOutOfBoundsException {","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"yyccbb"},"content":"        String message;","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"yyccbb"},"content":"        if (isAll) {","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"yyccbb"},"content":"            DataHandler.deleteAll();","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"yyccbb"},"content":"            message \u003d \"Deleted everything for you. It was tiring :\u003c\";","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"yyccbb"},"content":"        } else {","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"yyccbb"},"content":"            Task task \u003d DataHandler.getTask(index);","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"yyccbb"},"content":"            DataHandler.deleteTask(index);","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"yyccbb"},"content":"            int noOfTasks \u003d DataHandler.size();","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"yyccbb"},"content":"            message \u003d \"Fine. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2024-02-19"},{"lineNumber":44,"author":{"gitId":"yyccbb"},"content":"                    + \"   \" + task + \"\\n\"","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"yyccbb"},"content":"                    + \"Now you have \" + noOfTasks + \" tasks.\";","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"yyccbb"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"yyccbb"},"content":"        return PrintHandler.printWithDivider(message);","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"yyccbb"},"content":"    @Override","lastModifiedDate":"2024-02-09"},{"lineNumber":51,"author":{"gitId":"yyccbb"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-02-09"},{"lineNumber":52,"author":{"gitId":"yyccbb"},"content":"        return obj instanceof DeleteAction \u0026\u0026 ((DeleteAction) obj).index \u003d\u003d this.index;","lastModifiedDate":"2024-02-09"},{"lineNumber":53,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":54,"author":{"gitId":"yyccbb"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"yyccbb":54}},{"path":"src/main/java/nihao/action/ExitAction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyccbb"},"content":"package nihao.action;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"yyccbb"},"content":"import nihao.enums.SavedString;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"yyccbb"},"content":"import nihao.handler.DataHandler;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"yyccbb"},"content":"import nihao.handler.PrintHandler;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"yyccbb"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"yyccbb"},"content":" * Represents the exit action which is invoked by \"bye\" command.","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"yyccbb"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"yyccbb"},"content":"public class ExitAction implements Action {","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"yyccbb"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"yyccbb"},"content":"     * Prints the goodbye message.","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"yyccbb"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"yyccbb"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"yyccbb"},"content":"    public String execute() {","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"yyccbb"},"content":"        DataHandler.save();","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"yyccbb"},"content":"        return PrintHandler.printWithDivider(SavedString.GOODBYE.getContent());","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"yyccbb"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"yyccbb"},"content":"     * Two ExitAction objects are always equivalent.","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"yyccbb"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"yyccbb"},"content":"    @Override","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"yyccbb"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"yyccbb"},"content":"        return obj instanceof ExitAction;","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"yyccbb"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"yyccbb":27}},{"path":"src/main/java/nihao/action/FindAction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyccbb"},"content":"package nihao.action;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"yyccbb"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-18"},{"lineNumber":4,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":5,"author":{"gitId":"yyccbb"},"content":"import nihao.action.task.Task;","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"yyccbb"},"content":"import nihao.handler.DataHandler;","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"yyccbb"},"content":"import nihao.handler.PrintHandler;","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"yyccbb"},"content":"/**","lastModifiedDate":"2024-02-18"},{"lineNumber":10,"author":{"gitId":"yyccbb"},"content":" * Represents an Action that looks up the saved list of Tasks.","lastModifiedDate":"2024-02-18"},{"lineNumber":11,"author":{"gitId":"yyccbb"},"content":" */","lastModifiedDate":"2024-02-18"},{"lineNumber":12,"author":{"gitId":"yyccbb"},"content":"public class FindAction implements Action {","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"yyccbb"},"content":"    private String keyword;","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"yyccbb"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"yyccbb"},"content":"     * Constructor that specifies the keyword to search for in the list of Tasks.","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"yyccbb"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"yyccbb"},"content":"     * @param keyword The keyword to search for in the list of Tasks.","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"yyccbb"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"yyccbb"},"content":"    public FindAction(String keyword) {","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"yyccbb"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"yyccbb"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"yyccbb"},"content":"     * Finds the list of Tasks that match the keyword and returns a String representation of the list.","lastModifiedDate":"2024-02-26"},{"lineNumber":26,"author":{"gitId":"yyccbb"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":27,"author":{"gitId":"yyccbb"},"content":"     * @return A String representation of the list of Tasks that match the keyword.","lastModifiedDate":"2024-02-26"},{"lineNumber":28,"author":{"gitId":"yyccbb"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":29,"author":{"gitId":"yyccbb"},"content":"    @Override","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"yyccbb"},"content":"    public String execute() {","lastModifiedDate":"2024-02-26"},{"lineNumber":31,"author":{"gitId":"yyccbb"},"content":"        assert keyword !\u003d null : \"keyword should not be null\";","lastModifiedDate":"2024-02-26"},{"lineNumber":32,"author":{"gitId":"yyccbb"},"content":"        ArrayList\u003cTask\u003e result \u003d DataHandler.findTasks(keyword);","lastModifiedDate":"2024-02-12"},{"lineNumber":33,"author":{"gitId":"yyccbb"},"content":"        return PrintHandler.printNumberedDivider(result);","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"yyccbb"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"yyccbb":35}},{"path":"src/main/java/nihao/action/ListAction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyccbb"},"content":"package nihao.action;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"yyccbb"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"yyccbb"},"content":"import nihao.action.task.Task;","lastModifiedDate":"2024-02-18"},{"lineNumber":6,"author":{"gitId":"yyccbb"},"content":"import nihao.handler.DataHandler;","lastModifiedDate":"2024-02-18"},{"lineNumber":7,"author":{"gitId":"yyccbb"},"content":"import nihao.handler.PrintHandler;","lastModifiedDate":"2024-02-18"},{"lineNumber":8,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":9,"author":{"gitId":"yyccbb"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"yyccbb"},"content":" * Represents the list action.","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"yyccbb"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"yyccbb"},"content":"public class ListAction implements Action {","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"yyccbb"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"yyccbb"},"content":"     * Prints the tasks list.","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"yyccbb"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"yyccbb"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"yyccbb"},"content":"    public String execute() {","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"yyccbb"},"content":"        ArrayList\u003cTask\u003e data \u003d DataHandler.getData();","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"yyccbb"},"content":"        return PrintHandler.print(\"Here is your list of tasks:\") + PrintHandler.printNumberedDivider(data);","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"yyccbb"},"content":"    @Override","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"yyccbb"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"yyccbb"},"content":"        return obj instanceof ListAction;","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"yyccbb"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"yyccbb":26}},{"path":"src/main/java/nihao/action/MarkAction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyccbb"},"content":"package nihao.action;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"yyccbb"},"content":"import nihao.action.task.Task;","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"yyccbb"},"content":"import nihao.exception.IndexOutOfBoundsException;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"yyccbb"},"content":"import nihao.handler.DataHandler;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"yyccbb"},"content":"import nihao.handler.PrintHandler;","lastModifiedDate":"2024-02-18"},{"lineNumber":6,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"yyccbb"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"yyccbb"},"content":" * Represents a mark action.","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"yyccbb"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"yyccbb"},"content":"public class MarkAction implements Action {","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"yyccbb"},"content":"    private int index;","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"yyccbb"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"yyccbb"},"content":"     * Constructor that specifies the index of the task to be marked as completed.","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"yyccbb"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"yyccbb"},"content":"     * @param index The index of the task to be marked as completed.","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"yyccbb"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"yyccbb"},"content":"    public MarkAction(String index) {","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"yyccbb"},"content":"        this.index \u003d Integer.parseInt(index);","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"yyccbb"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"yyccbb"},"content":"     * Marks the Task at the given index as completed.","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"yyccbb"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"yyccbb"},"content":"     * @throws IndexOutOfBoundsException When the index provided is more than the length of tasks.","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"yyccbb"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"yyccbb"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"yyccbb"},"content":"    public String execute() throws IndexOutOfBoundsException {","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"yyccbb"},"content":"        assert index \u003e 0 : \"index should be more than 0\";","lastModifiedDate":"2024-02-26"},{"lineNumber":30,"author":{"gitId":"yyccbb"},"content":"        assert index \u003c\u003d DataHandler.getData().size() : \"index should be less than or equal to the size of tasks\";","lastModifiedDate":"2024-02-26"},{"lineNumber":31,"author":{"gitId":"yyccbb"},"content":"        DataHandler.markTask(index);","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"yyccbb"},"content":"        Task task \u003d DataHandler.getTask(index);","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"yyccbb"},"content":"        return PrintHandler.printWithDivider(\"Fine. I\u0027ve marked this as completed:\\n\"","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"yyccbb"},"content":"                + \"   \" + task);","lastModifiedDate":"2024-02-18"},{"lineNumber":35,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"yyccbb"},"content":"    @Override","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"yyccbb"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"yyccbb"},"content":"        return obj instanceof MarkAction \u0026\u0026 ((MarkAction) obj).index \u003d\u003d this.index;","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"yyccbb"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"yyccbb":41}},{"path":"src/main/java/nihao/action/TaskAction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyccbb"},"content":"package nihao.action;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"yyccbb"},"content":"import nihao.action.task.Task;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"yyccbb"},"content":"import nihao.handler.DataHandler;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"yyccbb"},"content":"import nihao.handler.PrintHandler;","lastModifiedDate":"2024-02-18"},{"lineNumber":6,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"yyccbb"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"yyccbb"},"content":" * Represents an action to add a Task to the tasks ArrayList.","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"yyccbb"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"yyccbb"},"content":"public class TaskAction implements Action {","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"yyccbb"},"content":"    private Task task;","lastModifiedDate":"2024-02-18"},{"lineNumber":12,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"yyccbb"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"yyccbb"},"content":"     * Constructor that specifies the Task to be added.","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"yyccbb"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"yyccbb"},"content":"    public TaskAction(Task task) {","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"yyccbb"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"yyccbb"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"yyccbb"},"content":"     * Adds the Task to the tasks ArrayList.","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"yyccbb"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"yyccbb"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"yyccbb"},"content":"    public String execute() {","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"yyccbb"},"content":"        assert task !\u003d null : \"task should not be null\";","lastModifiedDate":"2024-02-26"},{"lineNumber":26,"author":{"gitId":"yyccbb"},"content":"        DataHandler.addTask(task);","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"yyccbb"},"content":"        int noOfTasks \u003d DataHandler.size();","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"yyccbb"},"content":"        return PrintHandler.printWithDivider(\"Ok.. I\u0027ve added this task to your list:\\n\"","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"yyccbb"},"content":"                + \"   \" + task.toString() + \"\\n\"","lastModifiedDate":"2024-02-18"},{"lineNumber":30,"author":{"gitId":"yyccbb"},"content":"                + \"Now you have \" + noOfTasks + \" tasks.\");","lastModifiedDate":"2024-02-18"},{"lineNumber":31,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"yyccbb"},"content":"    @Override","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"yyccbb"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"yyccbb"},"content":"        return obj instanceof TaskAction \u0026\u0026 ((TaskAction) obj).task.equals(task);","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"yyccbb"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"yyccbb":37}},{"path":"src/main/java/nihao/action/UnmarkAction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyccbb"},"content":"package nihao.action;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"yyccbb"},"content":"import nihao.action.task.Task;","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"yyccbb"},"content":"import nihao.exception.IndexOutOfBoundsException;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"yyccbb"},"content":"import nihao.handler.DataHandler;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"yyccbb"},"content":"import nihao.handler.PrintHandler;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"yyccbb"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"yyccbb"},"content":" * Represents an unmark action.","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"yyccbb"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"yyccbb"},"content":"public class UnmarkAction implements Action {","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"yyccbb"},"content":"    private int index;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"yyccbb"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"yyccbb"},"content":"     * Constructor that specifies the index of the Task to be mark as uncompleted.","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"yyccbb"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"yyccbb"},"content":"    public UnmarkAction(String index) {","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"yyccbb"},"content":"        this.index \u003d Integer.parseInt(index);","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"yyccbb"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"yyccbb"},"content":"     * Marks the Task at the given index as uncompleted.","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"yyccbb"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"yyccbb"},"content":"     * @throws IndexOutOfBoundsException When the index provided is more than the length of tasks.","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"yyccbb"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"yyccbb"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"yyccbb"},"content":"    public String execute() throws IndexOutOfBoundsException {","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"yyccbb"},"content":"        assert index \u003e 0 : \"index should be more than 0\";","lastModifiedDate":"2024-02-26"},{"lineNumber":28,"author":{"gitId":"yyccbb"},"content":"        assert index \u003c\u003d DataHandler.getData().size() : \"index should be less than or equal to the size of tasks\";","lastModifiedDate":"2024-02-26"},{"lineNumber":29,"author":{"gitId":"yyccbb"},"content":"        DataHandler.unmarkTask(index);","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"yyccbb"},"content":"        Task task \u003d DataHandler.getTask(index);","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"yyccbb"},"content":"        return PrintHandler.printWithDivider(\"Fine. I\u0027ve marked this as uncompleted:\\n\"","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"yyccbb"},"content":"                + \"   \" + task);","lastModifiedDate":"2024-02-18"},{"lineNumber":33,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"yyccbb"},"content":"    @Override","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"yyccbb"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"yyccbb"},"content":"        return obj instanceof UnmarkAction \u0026\u0026 ((UnmarkAction) obj).index \u003d\u003d this.index;","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"yyccbb"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"yyccbb":39}},{"path":"src/main/java/nihao/action/task/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyccbb"},"content":"package nihao.action.task;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"yyccbb"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"yyccbb"},"content":"import nihao.handler.DateTimeHandler;","lastModifiedDate":"2024-02-18"},{"lineNumber":6,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":7,"author":{"gitId":"yyccbb"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"yyccbb"},"content":" * Represents a deadline task.","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"yyccbb"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"yyccbb"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"yyccbb"},"content":"    private LocalDateTime by;","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"yyccbb"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"yyccbb"},"content":"     * Constructor that specifies the name and due time of the task.","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"yyccbb"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"yyccbb"},"content":"    public DeadlineTask(String taskName, LocalDateTime by) {","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"yyccbb"},"content":"        super(taskName);","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"yyccbb"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"yyccbb"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":21,"author":{"gitId":"yyccbb"},"content":"     * Returns the String representation of the by LocalDateTime object.","lastModifiedDate":"2024-02-18"},{"lineNumber":22,"author":{"gitId":"yyccbb"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":23,"author":{"gitId":"yyccbb"},"content":"    public String getByString() {","lastModifiedDate":"2024-02-18"},{"lineNumber":24,"author":{"gitId":"yyccbb"},"content":"        return DateTimeHandler.formatOutput(by);","lastModifiedDate":"2024-02-18"},{"lineNumber":25,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":26,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":27,"author":{"gitId":"yyccbb"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"yyccbb"},"content":"     * Returns the String representation of the task.","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"yyccbb"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"yyccbb"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"yyccbb"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"yyccbb"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + getByString() + \")\";","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"yyccbb"},"content":"    @Override","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"yyccbb"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"yyccbb"},"content":"        return obj instanceof DeadlineTask \u0026\u0026 ((DeadlineTask) obj).taskName.equals(taskName)","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"yyccbb"},"content":"                \u0026\u0026 ((DeadlineTask) obj).by.equals(by);","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"yyccbb"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"yyccbb":40}},{"path":"src/main/java/nihao/action/task/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyccbb"},"content":"package nihao.action.task;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"yyccbb"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"yyccbb"},"content":"import nihao.handler.DateTimeHandler;","lastModifiedDate":"2024-02-18"},{"lineNumber":6,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":7,"author":{"gitId":"yyccbb"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"yyccbb"},"content":" * Represents an event task.","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"yyccbb"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"yyccbb"},"content":"public class EventTask extends Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"yyccbb"},"content":"    private LocalDateTime from;","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"yyccbb"},"content":"    private LocalDateTime to;","lastModifiedDate":"2024-02-18"},{"lineNumber":13,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":14,"author":{"gitId":"yyccbb"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":15,"author":{"gitId":"yyccbb"},"content":"     * Constructor that specifies the name of the event and both beginning and ending time of the event.","lastModifiedDate":"2024-02-18"},{"lineNumber":16,"author":{"gitId":"yyccbb"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":17,"author":{"gitId":"yyccbb"},"content":"    public EventTask(String taskName, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2024-02-18"},{"lineNumber":18,"author":{"gitId":"yyccbb"},"content":"        super(taskName);","lastModifiedDate":"2024-02-18"},{"lineNumber":19,"author":{"gitId":"yyccbb"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-18"},{"lineNumber":20,"author":{"gitId":"yyccbb"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-02-18"},{"lineNumber":21,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":22,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"yyccbb"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"yyccbb"},"content":"     * Returns the String representation of the from LocalDateTime object.","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"yyccbb"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"yyccbb"},"content":"    public String getFromString() {","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"yyccbb"},"content":"        return DateTimeHandler.formatOutput(from);","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"yyccbb"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":31,"author":{"gitId":"yyccbb"},"content":"     * Returns the String representation of the to LocalDateTime object.","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"yyccbb"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":33,"author":{"gitId":"yyccbb"},"content":"    public String getToString() {","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"yyccbb"},"content":"        return DateTimeHandler.formatOutput(to);","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"yyccbb"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"yyccbb"},"content":"     * Returns the String representation of the task.","lastModifiedDate":"2024-02-12"},{"lineNumber":39,"author":{"gitId":"yyccbb"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":40,"author":{"gitId":"yyccbb"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"yyccbb"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"yyccbb"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2024-02-18"},{"lineNumber":43,"author":{"gitId":"yyccbb"},"content":"                + \" (from: \" + getFromString()","lastModifiedDate":"2024-02-18"},{"lineNumber":44,"author":{"gitId":"yyccbb"},"content":"                + \" to: \" + getToString() + \")\";","lastModifiedDate":"2024-02-18"},{"lineNumber":45,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"yyccbb"},"content":"    @Override","lastModifiedDate":"2024-02-09"},{"lineNumber":48,"author":{"gitId":"yyccbb"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-02-09"},{"lineNumber":49,"author":{"gitId":"yyccbb"},"content":"        System.out.println(\"invoked eventtask.equals\");","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"yyccbb"},"content":"        return obj instanceof EventTask \u0026\u0026 ((EventTask) obj).taskName.equals(taskName)","lastModifiedDate":"2024-02-09"},{"lineNumber":51,"author":{"gitId":"yyccbb"},"content":"                \u0026\u0026 ((EventTask) obj).from.equals(from) \u0026\u0026 ((EventTask) obj).to.equals(to);","lastModifiedDate":"2024-02-09"},{"lineNumber":52,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":53,"author":{"gitId":"yyccbb"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"yyccbb":53}},{"path":"src/main/java/nihao/action/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyccbb"},"content":"package nihao.action.task;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"yyccbb"},"content":"/**","lastModifiedDate":"2024-02-18"},{"lineNumber":4,"author":{"gitId":"yyccbb"},"content":" * Represents a general task.","lastModifiedDate":"2024-02-18"},{"lineNumber":5,"author":{"gitId":"yyccbb"},"content":" */","lastModifiedDate":"2024-02-18"},{"lineNumber":6,"author":{"gitId":"yyccbb"},"content":"public class Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"yyccbb"},"content":"    protected String taskName;","lastModifiedDate":"2024-02-18"},{"lineNumber":8,"author":{"gitId":"yyccbb"},"content":"    private boolean isCompleted;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"yyccbb"},"content":"    public Task(String taskName) {","lastModifiedDate":"2024-02-18"},{"lineNumber":10,"author":{"gitId":"yyccbb"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2024-02-18"},{"lineNumber":11,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":12,"author":{"gitId":"yyccbb"},"content":"    public boolean getIsCompleted() {","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"yyccbb"},"content":"        return isCompleted;","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"yyccbb"},"content":"    public void setIsCompleted(boolean isCompleted) {","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"yyccbb"},"content":"        this.isCompleted \u003d isCompleted;","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"yyccbb"},"content":"    public String getTaskName() {","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"yyccbb"},"content":"        return taskName;","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"yyccbb"},"content":"    public void mark() {","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"yyccbb"},"content":"        isCompleted \u003d true;","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"yyccbb"},"content":"    public void unmark() {","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"yyccbb"},"content":"        isCompleted \u003d false;","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"yyccbb"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"yyccbb"},"content":"     * Returns if task name contains a given substring.","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"yyccbb"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":31,"author":{"gitId":"yyccbb"},"content":"    public boolean contains(String str) {","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"yyccbb"},"content":"        return taskName.contains(str);","lastModifiedDate":"2024-02-12"},{"lineNumber":33,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":34,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"yyccbb"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"yyccbb"},"content":"     * Returns the String representation of the task.","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"yyccbb"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"yyccbb"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"yyccbb"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"yyccbb"},"content":"        String isCompleted \u003d this.isCompleted ? \"X\" : \" \";","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"yyccbb"},"content":"        return \"[\" + isCompleted + \"] \" + taskName;","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"yyccbb"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"yyccbb":43}},{"path":"src/main/java/nihao/action/task/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyccbb"},"content":"package nihao.action.task;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"yyccbb"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"yyccbb"},"content":" * Represents a to-do task.","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"yyccbb"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"yyccbb"},"content":"public class TodoTask extends Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"yyccbb"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"yyccbb"},"content":"     * Constructor that specifies the name of the task.","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"yyccbb"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"yyccbb"},"content":"    public TodoTask(String taskName) {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"yyccbb"},"content":"        super(taskName);","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"yyccbb"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"yyccbb"},"content":"     * Returns the String representation of the task.","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"yyccbb"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"yyccbb"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"yyccbb"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"yyccbb"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"yyccbb"},"content":"    @Override","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"yyccbb"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"yyccbb"},"content":"        return obj instanceof TodoTask \u0026\u0026 ((TodoTask) obj).taskName.equals(taskName);","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"yyccbb"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"yyccbb":26}},{"path":"src/main/java/nihao/enums/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyccbb"},"content":"package nihao.enums;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"yyccbb"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"yyccbb"},"content":" * Represents a collection of accepted commands.","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"yyccbb"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"yyccbb"},"content":"public enum Command {","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"yyccbb"},"content":"    BYE,","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"yyccbb"},"content":"    LIST,","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"yyccbb"},"content":"    MARK,","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"yyccbb"},"content":"    UNMARK,","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"yyccbb"},"content":"    DELETE,","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"yyccbb"},"content":"    FIND,","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"yyccbb"},"content":"    TODO,","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"yyccbb"},"content":"    DEADLINE,","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"yyccbb"},"content":"    EVENT,","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"yyccbb"},"content":"    UNKNOWN;","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"yyccbb"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"yyccbb"},"content":"     * Takes in a String and returns the matching command.","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"yyccbb"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"yyccbb"},"content":"    public static Command getEnum(String str) {","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"yyccbb"},"content":"        switch (str) {","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"yyccbb"},"content":"        case \"bye\":","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"yyccbb"},"content":"            return BYE;","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"yyccbb"},"content":"        case \"list\":","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"yyccbb"},"content":"            // Fallthrough","lastModifiedDate":"2024-02-26"},{"lineNumber":27,"author":{"gitId":"yyccbb"},"content":"        case \"ls\":","lastModifiedDate":"2024-02-26"},{"lineNumber":28,"author":{"gitId":"yyccbb"},"content":"            return LIST;","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"yyccbb"},"content":"        case \"mark\":","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"yyccbb"},"content":"            // Fallthrough","lastModifiedDate":"2024-02-26"},{"lineNumber":31,"author":{"gitId":"yyccbb"},"content":"        case \"mk\":","lastModifiedDate":"2024-02-26"},{"lineNumber":32,"author":{"gitId":"yyccbb"},"content":"            return MARK;","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"yyccbb"},"content":"        case \"unmark\":","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"yyccbb"},"content":"            // Fallthrough","lastModifiedDate":"2024-02-26"},{"lineNumber":35,"author":{"gitId":"yyccbb"},"content":"        case \"um\":","lastModifiedDate":"2024-02-26"},{"lineNumber":36,"author":{"gitId":"yyccbb"},"content":"            return UNMARK;","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"yyccbb"},"content":"        case \"delete\":","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"yyccbb"},"content":"            // Fallthrough","lastModifiedDate":"2024-02-26"},{"lineNumber":39,"author":{"gitId":"yyccbb"},"content":"        case \"del\":","lastModifiedDate":"2024-02-26"},{"lineNumber":40,"author":{"gitId":"yyccbb"},"content":"            return DELETE;","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"yyccbb"},"content":"        case \"find\":","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"yyccbb"},"content":"            // Fallthrough","lastModifiedDate":"2024-02-26"},{"lineNumber":43,"author":{"gitId":"yyccbb"},"content":"        case \"f\":","lastModifiedDate":"2024-02-26"},{"lineNumber":44,"author":{"gitId":"yyccbb"},"content":"            return FIND;","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"yyccbb"},"content":"        case \"todo\":","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"yyccbb"},"content":"            // Fallthrough","lastModifiedDate":"2024-02-26"},{"lineNumber":47,"author":{"gitId":"yyccbb"},"content":"        case \"td\":","lastModifiedDate":"2024-02-26"},{"lineNumber":48,"author":{"gitId":"yyccbb"},"content":"            return TODO;","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"yyccbb"},"content":"        case \"deadline\":","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"yyccbb"},"content":"            // Fallthrough","lastModifiedDate":"2024-02-26"},{"lineNumber":51,"author":{"gitId":"yyccbb"},"content":"        case \"ddl\":","lastModifiedDate":"2024-02-26"},{"lineNumber":52,"author":{"gitId":"yyccbb"},"content":"            return DEADLINE;","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"yyccbb"},"content":"        case \"event\":","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"yyccbb"},"content":"            // Fallthrough","lastModifiedDate":"2024-02-26"},{"lineNumber":55,"author":{"gitId":"yyccbb"},"content":"        case \"ev\":","lastModifiedDate":"2024-02-26"},{"lineNumber":56,"author":{"gitId":"yyccbb"},"content":"            return EVENT;","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"yyccbb"},"content":"        default:","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"yyccbb"},"content":"            return UNKNOWN;","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"yyccbb"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"yyccbb"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"yyccbb":61}},{"path":"src/main/java/nihao/enums/SavedString.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyccbb"},"content":"package nihao.enums;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"yyccbb"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"yyccbb"},"content":" * Represents a collection of saved Strings for printing.","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"yyccbb"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"yyccbb"},"content":"public enum SavedString {","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"yyccbb"},"content":"    LOGO(\"::::    ::: ::::::::::: :::    :::     :::      ::::::::  \\n\"","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"yyccbb"},"content":"            + \":+:+:   :+:     :+:     :+:    :+:   :+: :+:   :+:    :+: \\n\"","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"yyccbb"},"content":"            + \":+:+:+  +:+     +:+     +:+    +:+  +:+   +:+  +:+    +:+ \\n\"","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"yyccbb"},"content":"            + \"+#+ +:+ +#+     +#+     +#++:++#++ +#++:++#++: +#+    +:+ \\n\"","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"yyccbb"},"content":"            + \"+#+  +#+#+#     +#+     +#+    +#+ +#+     +#+ +#+    +#+ \\n\"","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"yyccbb"},"content":"            + \"#+#   #+#+#     #+#     #+#    #+# #+#     #+# #+#    #+# \\n\"","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"yyccbb"},"content":"            + \"###    #### ########### ###    ### ###     ###  ########  \"),","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"yyccbb"},"content":"    GREETINGS(\"Hello! I\u0027m Nihao.\\nI\u0027m lazy and I don\u0027t want to do anything for you.\"),","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"yyccbb"},"content":"    GOODBYE(\"Hope to never see you again. Goodbye!\");","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"yyccbb"},"content":"    private final String content;","lastModifiedDate":"2024-02-18"},{"lineNumber":18,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"yyccbb"},"content":"    SavedString(String str) {","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"yyccbb"},"content":"        content \u003d str;","lastModifiedDate":"2024-02-18"},{"lineNumber":21,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"yyccbb"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"yyccbb"},"content":"     * Returns the String represented by the specific enum item.","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"yyccbb"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"yyccbb"},"content":"    public String getContent() {","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"yyccbb"},"content":"        return content;","lastModifiedDate":"2024-02-18"},{"lineNumber":28,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"yyccbb"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"yyccbb":29}},{"path":"src/main/java/nihao/exception/IllegalArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyccbb"},"content":"package nihao.exception;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"yyccbb"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"yyccbb"},"content":" * Represents an Exception thrown when a command gets an illegal set of arguments.","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"yyccbb"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"yyccbb"},"content":"public class IllegalArgumentException extends Exception {","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"yyccbb"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"yyccbb"},"content":"     * Constructor when the expected number of arguments is provided.","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"yyccbb"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"yyccbb"},"content":"     * @param commandName The name of the command.","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"yyccbb"},"content":"     * @param expected The expected number of arguments.","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"yyccbb"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"yyccbb"},"content":"    public IllegalArgumentException(String commandName, int expected) {","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"yyccbb"},"content":"        super(\"IllegalArgumentException: \" + commandName + \" expects \" + expected + \" arguments.\");","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"yyccbb"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"yyccbb"},"content":"     * Constructor when only a general piece of error information is provided.","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"yyccbb"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"yyccbb"},"content":"    public IllegalArgumentException(String errorMessage) {","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"yyccbb"},"content":"        super(\"IllegalArgumentException: \" + errorMessage + \".\");","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"yyccbb"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"yyccbb":23}},{"path":"src/main/java/nihao/exception/IncorrectDateTimeFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyccbb"},"content":"package nihao.exception;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"yyccbb"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"yyccbb"},"content":" * Represents an Exception thrown when the given String has a wrong format.","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"yyccbb"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"yyccbb"},"content":"public class IncorrectDateTimeFormatException extends Exception {","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"yyccbb"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"yyccbb"},"content":"     * Class constructor.","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"yyccbb"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"yyccbb"},"content":"    public IncorrectDateTimeFormatException() {","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"yyccbb"},"content":"        super(\"IncorrectDateTimeFormatException: \"","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"yyccbb"},"content":"                + \"only accepts \u0027dd/MM/yyyy HHmm\u0027 format\");","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"yyccbb"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"yyccbb":14}},{"path":"src/main/java/nihao/exception/IndexOutOfBoundsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyccbb"},"content":"package nihao.exception;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"yyccbb"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"yyccbb"},"content":" * Represents an Exception thrown when trying to access a non-existent element of an ArrayList.","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"yyccbb"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"yyccbb"},"content":"public class IndexOutOfBoundsException extends Exception {","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"yyccbb"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"yyccbb"},"content":"     * Class constructor specifying the provided index and the maximum size of the ArrayList.","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"yyccbb"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"yyccbb"},"content":"    public IndexOutOfBoundsException(int index, int size) {","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"yyccbb"},"content":"        super(\"IndexOutOfBoundsException: \" + \"index \" + index + \" out of bounds for size \" + size + \".\");","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"yyccbb"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"yyccbb":13}},{"path":"src/main/java/nihao/exception/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyccbb"},"content":"package nihao.exception;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"yyccbb"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"yyccbb"},"content":" * Represents an Exception thrown when the command provided is not recognized.","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"yyccbb"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"yyccbb"},"content":"public class UnknownCommandException extends Exception {","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"yyccbb"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"yyccbb"},"content":"     * Class constructor specifying the command name.","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"yyccbb"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"yyccbb"},"content":"    public UnknownCommandException(String commandName) {","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"yyccbb"},"content":"        super(\"UnknownCommandException: \" + \"\u0027\" + commandName + \"\u0027\"","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"yyccbb"},"content":"                + \" is unknown.\");","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"yyccbb"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"yyccbb":15}},{"path":"src/main/java/nihao/handler/DataHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyccbb"},"content":"package nihao.handler;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"yyccbb"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"yyccbb"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"yyccbb"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"yyccbb"},"content":"import java.lang.reflect.Type;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"yyccbb"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"yyccbb"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"yyccbb"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"yyccbb"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":12,"author":{"gitId":"yyccbb"},"content":"import com.google.gson.Gson;","lastModifiedDate":"2024-02-18"},{"lineNumber":13,"author":{"gitId":"yyccbb"},"content":"import com.google.gson.GsonBuilder;","lastModifiedDate":"2024-02-18"},{"lineNumber":14,"author":{"gitId":"yyccbb"},"content":"import com.google.gson.reflect.TypeToken;","lastModifiedDate":"2024-02-18"},{"lineNumber":15,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":16,"author":{"gitId":"yyccbb"},"content":"import nihao.action.task.Task;","lastModifiedDate":"2024-02-18"},{"lineNumber":17,"author":{"gitId":"yyccbb"},"content":"import nihao.exception.IndexOutOfBoundsException;","lastModifiedDate":"2024-02-18"},{"lineNumber":18,"author":{"gitId":"yyccbb"},"content":"import nihao.util.TaskTypeAdapter;","lastModifiedDate":"2024-02-18"},{"lineNumber":19,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":20,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":21,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"yyccbb"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"yyccbb"},"content":" * Manages all actions related to accessing runtime data and local data storage.","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"yyccbb"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"yyccbb"},"content":"public class DataHandler {","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"yyccbb"},"content":"    protected static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-18"},{"lineNumber":27,"author":{"gitId":"yyccbb"},"content":"    private static final String DIRECTORY_PATH \u003d \"data/\";","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"yyccbb"},"content":"    private static final String FILE_PATH \u003d \"data/PersistentData.json\";","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"yyccbb"},"content":"    private DataHandler() {};","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"yyccbb"},"content":"    private static void readFromJson() throws IOException {","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"yyccbb"},"content":"        FileReader fileReader \u003d new FileReader(FILE_PATH);","lastModifiedDate":"2024-02-10"},{"lineNumber":33,"author":{"gitId":"yyccbb"},"content":"        GsonBuilder gsonBuilder \u003d new GsonBuilder();","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"yyccbb"},"content":"        gsonBuilder.registerTypeHierarchyAdapter(Task.class, new TaskTypeAdapter());","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"yyccbb"},"content":"        Gson gson \u003d gsonBuilder.create();","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"yyccbb"},"content":"        // Alternative: Type objectType \u003d new TypeToken\u003cArrayList\u003cTask\u003e\u003e() {}.getType();","lastModifiedDate":"2024-02-18"},{"lineNumber":37,"author":{"gitId":"yyccbb"},"content":"        Type objectType \u003d TypeToken.getParameterized(ArrayList.class, Task.class).getType();","lastModifiedDate":"2024-02-18"},{"lineNumber":38,"author":{"gitId":"yyccbb"},"content":"        tasks \u003d gson.fromJson(fileReader, objectType);","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"yyccbb"},"content":"        fileReader.close();","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"yyccbb"},"content":"    private static void saveToJson() throws IOException {","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"yyccbb"},"content":"        FileWriter fileWriter \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2024-02-10"},{"lineNumber":44,"author":{"gitId":"yyccbb"},"content":"        GsonBuilder gsonBuilder \u003d new GsonBuilder();","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"yyccbb"},"content":"        gsonBuilder.registerTypeHierarchyAdapter(Task.class, new TaskTypeAdapter());","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"yyccbb"},"content":"        Gson gson \u003d gsonBuilder.create();","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"yyccbb"},"content":"        gson.toJson(tasks, fileWriter);","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"yyccbb"},"content":"        fileWriter.flush();","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"yyccbb"},"content":"        fileWriter.close();","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"yyccbb"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":53,"author":{"gitId":"yyccbb"},"content":"     * Reads from the local storage file specified by FILE_PATH and invokes","lastModifiedDate":"2024-02-12"},{"lineNumber":54,"author":{"gitId":"yyccbb"},"content":"     * readFromJson() to load the stored data into the tasks ArrayList.","lastModifiedDate":"2024-02-12"},{"lineNumber":55,"author":{"gitId":"yyccbb"},"content":"     * Creates the storage file and/or the directory if not found.","lastModifiedDate":"2024-02-12"},{"lineNumber":56,"author":{"gitId":"yyccbb"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":57,"author":{"gitId":"yyccbb"},"content":"    public static void read() {","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"yyccbb"},"content":"        Path filePath \u003d Paths.get(FILE_PATH);","lastModifiedDate":"2024-02-26"},{"lineNumber":59,"author":{"gitId":"yyccbb"},"content":"        Path directoryPath \u003d Paths.get(DIRECTORY_PATH);","lastModifiedDate":"2024-02-26"},{"lineNumber":60,"author":{"gitId":"yyccbb"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"yyccbb"},"content":"            readFromJson();","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"yyccbb"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"yyccbb"},"content":"            if (!Files.exists(directoryPath)) {","lastModifiedDate":"2024-02-26"},{"lineNumber":64,"author":{"gitId":"yyccbb"},"content":"                try {","lastModifiedDate":"2024-02-07"},{"lineNumber":65,"author":{"gitId":"yyccbb"},"content":"                    Files.createDirectories(directoryPath);","lastModifiedDate":"2024-02-26"},{"lineNumber":66,"author":{"gitId":"yyccbb"},"content":"                } catch (IOException exc) {","lastModifiedDate":"2024-02-10"},{"lineNumber":67,"author":{"gitId":"yyccbb"},"content":"                    PrintHandler.printException(exc);","lastModifiedDate":"2024-02-10"},{"lineNumber":68,"author":{"gitId":"yyccbb"},"content":"                    return;","lastModifiedDate":"2024-02-26"},{"lineNumber":69,"author":{"gitId":"yyccbb"},"content":"                }","lastModifiedDate":"2024-02-26"},{"lineNumber":70,"author":{"gitId":"yyccbb"},"content":"            }","lastModifiedDate":"2024-02-10"},{"lineNumber":71,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":72,"author":{"gitId":"yyccbb"},"content":"            try {","lastModifiedDate":"2024-02-26"},{"lineNumber":73,"author":{"gitId":"yyccbb"},"content":"                Files.createFile(filePath);","lastModifiedDate":"2024-02-26"},{"lineNumber":74,"author":{"gitId":"yyccbb"},"content":"            } catch (IOException ex) {","lastModifiedDate":"2024-02-26"},{"lineNumber":75,"author":{"gitId":"yyccbb"},"content":"                PrintHandler.printException(ex);","lastModifiedDate":"2024-02-26"},{"lineNumber":76,"author":{"gitId":"yyccbb"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":77,"author":{"gitId":"yyccbb"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":78,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":79,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":80,"author":{"gitId":"yyccbb"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":81,"author":{"gitId":"yyccbb"},"content":"     * Saves the content of tasks to the local storage file.","lastModifiedDate":"2024-02-12"},{"lineNumber":82,"author":{"gitId":"yyccbb"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":83,"author":{"gitId":"yyccbb"},"content":"    public static void save() {","lastModifiedDate":"2024-02-07"},{"lineNumber":84,"author":{"gitId":"yyccbb"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":85,"author":{"gitId":"yyccbb"},"content":"            saveToJson();","lastModifiedDate":"2024-02-07"},{"lineNumber":86,"author":{"gitId":"yyccbb"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":87,"author":{"gitId":"yyccbb"},"content":"            PrintHandler.printException(e);","lastModifiedDate":"2024-02-07"},{"lineNumber":88,"author":{"gitId":"yyccbb"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":89,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":90,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":91,"author":{"gitId":"yyccbb"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":92,"author":{"gitId":"yyccbb"},"content":"     * Adds a new Task to tasks.","lastModifiedDate":"2024-02-12"},{"lineNumber":93,"author":{"gitId":"yyccbb"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":94,"author":{"gitId":"yyccbb"},"content":"     * @param task Task to be added to tasks.","lastModifiedDate":"2024-02-12"},{"lineNumber":95,"author":{"gitId":"yyccbb"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":96,"author":{"gitId":"yyccbb"},"content":"    public static void addTask(Task task) {","lastModifiedDate":"2024-02-12"},{"lineNumber":97,"author":{"gitId":"yyccbb"},"content":"        tasks.add(task);","lastModifiedDate":"2024-02-05"},{"lineNumber":98,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":99,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":100,"author":{"gitId":"yyccbb"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":101,"author":{"gitId":"yyccbb"},"content":"     * Marks the Task at the given index as completed.","lastModifiedDate":"2024-02-26"},{"lineNumber":102,"author":{"gitId":"yyccbb"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":103,"author":{"gitId":"yyccbb"},"content":"     * @param index Index of the task to be marked as completed.","lastModifiedDate":"2024-02-12"},{"lineNumber":104,"author":{"gitId":"yyccbb"},"content":"     * @throws IndexOutOfBoundsException When the index provided is more than the length of tasks.","lastModifiedDate":"2024-02-12"},{"lineNumber":105,"author":{"gitId":"yyccbb"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":106,"author":{"gitId":"yyccbb"},"content":"    public static void markTask(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2024-02-07"},{"lineNumber":107,"author":{"gitId":"yyccbb"},"content":"        if (index \u003e size() || index \u003c\u003d 0) {","lastModifiedDate":"2024-02-05"},{"lineNumber":108,"author":{"gitId":"yyccbb"},"content":"            throw new IndexOutOfBoundsException(index, size());","lastModifiedDate":"2024-02-05"},{"lineNumber":109,"author":{"gitId":"yyccbb"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":110,"author":{"gitId":"yyccbb"},"content":"        tasks.get(index - 1).mark();","lastModifiedDate":"2024-02-05"},{"lineNumber":111,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":112,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":113,"author":{"gitId":"yyccbb"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":114,"author":{"gitId":"yyccbb"},"content":"     * Marks the Task at the given index as uncompleted.","lastModifiedDate":"2024-02-26"},{"lineNumber":115,"author":{"gitId":"yyccbb"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":116,"author":{"gitId":"yyccbb"},"content":"     * @param index Index of the task to be marked as uncompleted.","lastModifiedDate":"2024-02-12"},{"lineNumber":117,"author":{"gitId":"yyccbb"},"content":"     * @throws IndexOutOfBoundsException When the index provided is more than the length of tasks.","lastModifiedDate":"2024-02-12"},{"lineNumber":118,"author":{"gitId":"yyccbb"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":119,"author":{"gitId":"yyccbb"},"content":"    public static void unmarkTask(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2024-02-07"},{"lineNumber":120,"author":{"gitId":"yyccbb"},"content":"        if (index \u003e size() || index \u003c\u003d 0) {","lastModifiedDate":"2024-02-05"},{"lineNumber":121,"author":{"gitId":"yyccbb"},"content":"            throw new IndexOutOfBoundsException(index, size());","lastModifiedDate":"2024-02-05"},{"lineNumber":122,"author":{"gitId":"yyccbb"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":123,"author":{"gitId":"yyccbb"},"content":"        tasks.get(index - 1).unmark();","lastModifiedDate":"2024-02-05"},{"lineNumber":124,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":125,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":126,"author":{"gitId":"yyccbb"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":127,"author":{"gitId":"yyccbb"},"content":"     * Deletes the Task at the given index.","lastModifiedDate":"2024-02-26"},{"lineNumber":128,"author":{"gitId":"yyccbb"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":129,"author":{"gitId":"yyccbb"},"content":"     * @param index Index of the task to be deleted.","lastModifiedDate":"2024-02-12"},{"lineNumber":130,"author":{"gitId":"yyccbb"},"content":"     * @throws IndexOutOfBoundsException When the index provided is more than the length of tasks.","lastModifiedDate":"2024-02-12"},{"lineNumber":131,"author":{"gitId":"yyccbb"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":132,"author":{"gitId":"yyccbb"},"content":"    public static void deleteTask(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2024-02-07"},{"lineNumber":133,"author":{"gitId":"yyccbb"},"content":"        if (index \u003e size() || index \u003c\u003d 0) {","lastModifiedDate":"2024-02-05"},{"lineNumber":134,"author":{"gitId":"yyccbb"},"content":"            throw new IndexOutOfBoundsException(index, size());","lastModifiedDate":"2024-02-05"},{"lineNumber":135,"author":{"gitId":"yyccbb"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":136,"author":{"gitId":"yyccbb"},"content":"        tasks.remove(index - 1);","lastModifiedDate":"2024-02-05"},{"lineNumber":137,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":138,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":139,"author":{"gitId":"yyccbb"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":140,"author":{"gitId":"yyccbb"},"content":"     * Deletes all Tasks in tasks.","lastModifiedDate":"2024-02-26"},{"lineNumber":141,"author":{"gitId":"yyccbb"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":142,"author":{"gitId":"yyccbb"},"content":"    public static void deleteAll() {","lastModifiedDate":"2024-02-07"},{"lineNumber":143,"author":{"gitId":"yyccbb"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-07"},{"lineNumber":144,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":145,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":146,"author":{"gitId":"yyccbb"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":147,"author":{"gitId":"yyccbb"},"content":"     * Returns the number of elements of tasks.","lastModifiedDate":"2024-02-12"},{"lineNumber":148,"author":{"gitId":"yyccbb"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":149,"author":{"gitId":"yyccbb"},"content":"     * @return Number of elements of tasks.","lastModifiedDate":"2024-02-12"},{"lineNumber":150,"author":{"gitId":"yyccbb"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":151,"author":{"gitId":"yyccbb"},"content":"    public static int size() {","lastModifiedDate":"2024-02-07"},{"lineNumber":152,"author":{"gitId":"yyccbb"},"content":"        return tasks.size();","lastModifiedDate":"2024-02-05"},{"lineNumber":153,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":154,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":155,"author":{"gitId":"yyccbb"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":156,"author":{"gitId":"yyccbb"},"content":"     * Returns tasks.","lastModifiedDate":"2024-02-12"},{"lineNumber":157,"author":{"gitId":"yyccbb"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":158,"author":{"gitId":"yyccbb"},"content":"     * @return The tasks ArrayList.","lastModifiedDate":"2024-02-12"},{"lineNumber":159,"author":{"gitId":"yyccbb"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":160,"author":{"gitId":"yyccbb"},"content":"    public static ArrayList\u003cTask\u003e getData() {","lastModifiedDate":"2024-02-07"},{"lineNumber":161,"author":{"gitId":"yyccbb"},"content":"        return tasks;","lastModifiedDate":"2024-02-05"},{"lineNumber":162,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":163,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":164,"author":{"gitId":"yyccbb"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":165,"author":{"gitId":"yyccbb"},"content":"     * Returns the Task object at the given index.","lastModifiedDate":"2024-02-12"},{"lineNumber":166,"author":{"gitId":"yyccbb"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":167,"author":{"gitId":"yyccbb"},"content":"     * @param index Index of the Task object requested.","lastModifiedDate":"2024-02-12"},{"lineNumber":168,"author":{"gitId":"yyccbb"},"content":"     * @return The Task object.","lastModifiedDate":"2024-02-12"},{"lineNumber":169,"author":{"gitId":"yyccbb"},"content":"     * @throws IndexOutOfBoundsException When the index provided is more than the length of tasks.","lastModifiedDate":"2024-02-12"},{"lineNumber":170,"author":{"gitId":"yyccbb"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":171,"author":{"gitId":"yyccbb"},"content":"    public static Task getTask(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2024-02-07"},{"lineNumber":172,"author":{"gitId":"yyccbb"},"content":"        if (index \u003e size() || index \u003c\u003d 0) {","lastModifiedDate":"2024-02-05"},{"lineNumber":173,"author":{"gitId":"yyccbb"},"content":"            throw new IndexOutOfBoundsException(index, size());","lastModifiedDate":"2024-02-05"},{"lineNumber":174,"author":{"gitId":"yyccbb"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":175,"author":{"gitId":"yyccbb"},"content":"        return tasks.get(index - 1);","lastModifiedDate":"2024-02-05"},{"lineNumber":176,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":177,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":178,"author":{"gitId":"yyccbb"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":179,"author":{"gitId":"yyccbb"},"content":"     * Returns an ArrayList of Tasks that contain the given keyword in their task names.","lastModifiedDate":"2024-02-12"},{"lineNumber":180,"author":{"gitId":"yyccbb"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":181,"author":{"gitId":"yyccbb"},"content":"    public static ArrayList\u003cTask\u003e findTasks(String keyword) {","lastModifiedDate":"2024-02-12"},{"lineNumber":182,"author":{"gitId":"yyccbb"},"content":"        ArrayList\u003cTask\u003e returnList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-12"},{"lineNumber":183,"author":{"gitId":"yyccbb"},"content":"        tasks.stream().forEach(e -\u003e {","lastModifiedDate":"2024-02-12"},{"lineNumber":184,"author":{"gitId":"yyccbb"},"content":"            if (e.contains(keyword)) {","lastModifiedDate":"2024-02-12"},{"lineNumber":185,"author":{"gitId":"yyccbb"},"content":"                returnList.add(e);","lastModifiedDate":"2024-02-12"},{"lineNumber":186,"author":{"gitId":"yyccbb"},"content":"            }","lastModifiedDate":"2024-02-12"},{"lineNumber":187,"author":{"gitId":"yyccbb"},"content":"        });","lastModifiedDate":"2024-02-12"},{"lineNumber":188,"author":{"gitId":"yyccbb"},"content":"        return returnList;","lastModifiedDate":"2024-02-12"},{"lineNumber":189,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":190,"author":{"gitId":"yyccbb"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"yyccbb":190}},{"path":"src/main/java/nihao/handler/DateTimeHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyccbb"},"content":"package nihao.handler;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"yyccbb"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"yyccbb"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":6,"author":{"gitId":"yyccbb"},"content":"import nihao.exception.IncorrectDateTimeFormatException;","lastModifiedDate":"2024-02-18"},{"lineNumber":7,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"yyccbb"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"yyccbb"},"content":" * Handles conversion between String and LocalDateTime objects.","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"yyccbb"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"yyccbb"},"content":"public class DateTimeHandler {","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"yyccbb"},"content":"    private static final DateTimeFormatter INPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"yyccbb"},"content":"    private static final DateTimeFormatter OUTPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"yyccbb"},"content":"    private DateTimeHandler() {}","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"yyccbb"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"yyccbb"},"content":"     * Converts a String in a specified date time format into a LocalDateTime object.","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"yyccbb"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"yyccbb"},"content":"     * @param input The String.","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"yyccbb"},"content":"     * @return Converted LocalDateTime object.","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"yyccbb"},"content":"     * @throws IncorrectDateTimeFormatException When the input String is not of the correct pattern.","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"yyccbb"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"yyccbb"},"content":"    public static LocalDateTime handleInput(String input) throws IncorrectDateTimeFormatException {","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"yyccbb"},"content":"        LocalDateTime localDateTime;","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"yyccbb"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"yyccbb"},"content":"            localDateTime \u003d LocalDateTime.parse(input, INPUT_FORMATTER);","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"yyccbb"},"content":"            return localDateTime;","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"yyccbb"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"yyccbb"},"content":"            throw new IncorrectDateTimeFormatException();","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"yyccbb"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"yyccbb"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":34,"author":{"gitId":"yyccbb"},"content":"     * Converts a LocalDateTime object into a String of a specified pattern.","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"yyccbb"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"yyccbb"},"content":"     * @param input The LocalDateTime object.","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"yyccbb"},"content":"     * @return The converted String.","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"yyccbb"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":39,"author":{"gitId":"yyccbb"},"content":"    public static String formatOutput(LocalDateTime input) {","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"yyccbb"},"content":"        return input.format(OUTPUT_FORMATTER);","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"yyccbb"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"yyccbb"},"content":"     * Converts a String into a LocalDateTime object.","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"yyccbb"},"content":"     * Exclusively used for deserializing from JSON.","lastModifiedDate":"2024-02-12"},{"lineNumber":46,"author":{"gitId":"yyccbb"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"yyccbb"},"content":"     * @param dateTimeString The input String.","lastModifiedDate":"2024-02-12"},{"lineNumber":48,"author":{"gitId":"yyccbb"},"content":"     * @return The converted LocalDateTime object.","lastModifiedDate":"2024-02-12"},{"lineNumber":49,"author":{"gitId":"yyccbb"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":50,"author":{"gitId":"yyccbb"},"content":"    public static LocalDateTime deserialize(String dateTimeString) {","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"yyccbb"},"content":"        return LocalDateTime.parse(dateTimeString, OUTPUT_FORMATTER);","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"yyccbb"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"yyccbb":54}},{"path":"src/main/java/nihao/handler/InputHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyccbb"},"content":"package nihao.handler;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"yyccbb"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-18"},{"lineNumber":4,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":5,"author":{"gitId":"yyccbb"},"content":"import nihao.action.Action;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"yyccbb"},"content":"import nihao.action.DeleteAction;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"yyccbb"},"content":"import nihao.action.ExitAction;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"yyccbb"},"content":"import nihao.action.FindAction;","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"yyccbb"},"content":"import nihao.action.ListAction;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"yyccbb"},"content":"import nihao.action.MarkAction;","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"yyccbb"},"content":"import nihao.action.TaskAction;","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"yyccbb"},"content":"import nihao.action.UnmarkAction;","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"yyccbb"},"content":"import nihao.action.task.DeadlineTask;","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"yyccbb"},"content":"import nihao.action.task.EventTask;","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"yyccbb"},"content":"import nihao.action.task.TodoTask;","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"yyccbb"},"content":"import nihao.enums.Command;","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"yyccbb"},"content":"import nihao.exception.IllegalArgumentException;","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"yyccbb"},"content":"import nihao.exception.IncorrectDateTimeFormatException;","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"yyccbb"},"content":"import nihao.exception.UnknownCommandException;","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"yyccbb"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"yyccbb"},"content":" * Parses the input String and returns runnable Action objects.","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"yyccbb"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"yyccbb"},"content":"public class InputHandler {","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"yyccbb"},"content":"    InputHandler() {}","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"yyccbb"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"yyccbb"},"content":"     * @param input User input command.","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"yyccbb"},"content":"     * @return An executable action to run the specified command.","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"yyccbb"},"content":"     * @throws Exception When the command is not in an acceptable format.","lastModifiedDate":"2024-02-12"},{"lineNumber":31,"author":{"gitId":"yyccbb"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"yyccbb"},"content":"    public static Action handleInput(String input) throws Exception {","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"yyccbb"},"content":"        String[] parsedInput \u003d input.split(\" \");","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"yyccbb"},"content":"        String commandName \u003d parsedInput[0];","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"yyccbb"},"content":"        Command command \u003d Command.getEnum(commandName);","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"yyccbb"},"content":"        String taskName;","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"yyccbb"},"content":"        switch (command) {","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"yyccbb"},"content":"        case BYE:","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"yyccbb"},"content":"            if (parsedInput.length !\u003d 1) {","lastModifiedDate":"2024-02-26"},{"lineNumber":40,"author":{"gitId":"yyccbb"},"content":"                throw new IllegalArgumentException(\"bye\", 0);","lastModifiedDate":"2024-02-26"},{"lineNumber":41,"author":{"gitId":"yyccbb"},"content":"            }","lastModifiedDate":"2024-02-26"},{"lineNumber":42,"author":{"gitId":"yyccbb"},"content":"            return new ExitAction();","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"yyccbb"},"content":"        case LIST:","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"yyccbb"},"content":"            if (parsedInput.length !\u003d 1) {","lastModifiedDate":"2024-02-26"},{"lineNumber":45,"author":{"gitId":"yyccbb"},"content":"                throw new IllegalArgumentException(\"list\", 0);","lastModifiedDate":"2024-02-26"},{"lineNumber":46,"author":{"gitId":"yyccbb"},"content":"            }","lastModifiedDate":"2024-02-26"},{"lineNumber":47,"author":{"gitId":"yyccbb"},"content":"            return new ListAction();","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"yyccbb"},"content":"        case MARK:","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"yyccbb"},"content":"            if (parsedInput.length !\u003d 2) {","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"yyccbb"},"content":"                throw new IllegalArgumentException(\"mark\", 1);","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"yyccbb"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"yyccbb"},"content":"            return new MarkAction(parsedInput[1]);","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"yyccbb"},"content":"        case UNMARK:","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"yyccbb"},"content":"            if (parsedInput.length !\u003d 2) {","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"yyccbb"},"content":"                throw new IllegalArgumentException(\"unmark\", 1);","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"yyccbb"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"yyccbb"},"content":"            return new UnmarkAction(parsedInput[1]);","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"yyccbb"},"content":"        case DELETE:","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"yyccbb"},"content":"            if (parsedInput.length !\u003d 2) {","lastModifiedDate":"2024-02-05"},{"lineNumber":60,"author":{"gitId":"yyccbb"},"content":"                throw new IllegalArgumentException(\"delete\", 1);","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"yyccbb"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"yyccbb"},"content":"            return new DeleteAction(parsedInput[1]);","lastModifiedDate":"2024-02-05"},{"lineNumber":63,"author":{"gitId":"yyccbb"},"content":"        case FIND:","lastModifiedDate":"2024-02-12"},{"lineNumber":64,"author":{"gitId":"yyccbb"},"content":"            if (parsedInput.length !\u003d 2) {","lastModifiedDate":"2024-02-12"},{"lineNumber":65,"author":{"gitId":"yyccbb"},"content":"                throw new IllegalArgumentException(\"find\", 1);","lastModifiedDate":"2024-02-12"},{"lineNumber":66,"author":{"gitId":"yyccbb"},"content":"            }","lastModifiedDate":"2024-02-12"},{"lineNumber":67,"author":{"gitId":"yyccbb"},"content":"            return new FindAction(parsedInput[1]);","lastModifiedDate":"2024-02-12"},{"lineNumber":68,"author":{"gitId":"yyccbb"},"content":"        case TODO:","lastModifiedDate":"2024-02-05"},{"lineNumber":69,"author":{"gitId":"yyccbb"},"content":"            if (parsedInput.length \u003c 2) {","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"yyccbb"},"content":"                throw new IllegalArgumentException(\"todo requires at least 1 argument\");","lastModifiedDate":"2024-02-05"},{"lineNumber":71,"author":{"gitId":"yyccbb"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"yyccbb"},"content":"            taskName \u003d input.substring(5);","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"yyccbb"},"content":"            TodoTask todoTask \u003d new TodoTask(taskName);","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"yyccbb"},"content":"            return new TaskAction(todoTask);","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"yyccbb"},"content":"        case DEADLINE:","lastModifiedDate":"2024-02-05"},{"lineNumber":76,"author":{"gitId":"yyccbb"},"content":"            return deadlineActionBuilder(input, parsedInput);","lastModifiedDate":"2024-02-26"},{"lineNumber":77,"author":{"gitId":"yyccbb"},"content":"        case EVENT:","lastModifiedDate":"2024-02-05"},{"lineNumber":78,"author":{"gitId":"yyccbb"},"content":"            return eventActionBuilder(input, parsedInput);","lastModifiedDate":"2024-02-26"},{"lineNumber":79,"author":{"gitId":"yyccbb"},"content":"        default:","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"yyccbb"},"content":"            throw new UnknownCommandException(input);","lastModifiedDate":"2024-02-05"},{"lineNumber":81,"author":{"gitId":"yyccbb"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"yyccbb"},"content":"    private static int countByFlag(String[] parsedInput) {","lastModifiedDate":"2024-02-07"},{"lineNumber":85,"author":{"gitId":"yyccbb"},"content":"        int counter \u003d 0;","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"yyccbb"},"content":"        for (int i \u003d 0; i \u003c parsedInput.length; i++) {","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"yyccbb"},"content":"            if (parsedInput[i].equals(\"/by\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"yyccbb"},"content":"                counter++;","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"yyccbb"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"yyccbb"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"yyccbb"},"content":"        return counter;","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"yyccbb"},"content":"    private static int countFromFlag(String[] parsedInput) {","lastModifiedDate":"2024-02-07"},{"lineNumber":95,"author":{"gitId":"yyccbb"},"content":"        int counter \u003d 0;","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"yyccbb"},"content":"        for (int i \u003d 0; i \u003c parsedInput.length; i++) {","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"yyccbb"},"content":"            if (parsedInput[i].equals(\"/from\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"yyccbb"},"content":"                counter++;","lastModifiedDate":"2024-02-01"},{"lineNumber":99,"author":{"gitId":"yyccbb"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":100,"author":{"gitId":"yyccbb"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":101,"author":{"gitId":"yyccbb"},"content":"        return counter;","lastModifiedDate":"2024-02-01"},{"lineNumber":102,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":103,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":104,"author":{"gitId":"yyccbb"},"content":"    private static int countToFlag(String[] parsedInput) {","lastModifiedDate":"2024-02-07"},{"lineNumber":105,"author":{"gitId":"yyccbb"},"content":"        int counter \u003d 0;","lastModifiedDate":"2024-02-01"},{"lineNumber":106,"author":{"gitId":"yyccbb"},"content":"        for (int i \u003d 0; i \u003c parsedInput.length; i++) {","lastModifiedDate":"2024-02-01"},{"lineNumber":107,"author":{"gitId":"yyccbb"},"content":"            if (parsedInput[i].equals(\"/to\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":108,"author":{"gitId":"yyccbb"},"content":"                counter++;","lastModifiedDate":"2024-02-01"},{"lineNumber":109,"author":{"gitId":"yyccbb"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":110,"author":{"gitId":"yyccbb"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":111,"author":{"gitId":"yyccbb"},"content":"        return counter;","lastModifiedDate":"2024-02-01"},{"lineNumber":112,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":113,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":114,"author":{"gitId":"yyccbb"},"content":"    private static TaskAction deadlineActionBuilder(String input, String[] parsedInput)","lastModifiedDate":"2024-02-26"},{"lineNumber":115,"author":{"gitId":"yyccbb"},"content":"            throws IncorrectDateTimeFormatException, IllegalArgumentException {","lastModifiedDate":"2024-02-26"},{"lineNumber":116,"author":{"gitId":"yyccbb"},"content":"        if (countByFlag(parsedInput) !\u003d 1) {","lastModifiedDate":"2024-02-26"},{"lineNumber":117,"author":{"gitId":"yyccbb"},"content":"            throw new IllegalArgumentException(\"deadline requires exactly 1 /by flag\");","lastModifiedDate":"2024-02-26"},{"lineNumber":118,"author":{"gitId":"yyccbb"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":119,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":120,"author":{"gitId":"yyccbb"},"content":"        final int deadlineLength \u003d 9;","lastModifiedDate":"2024-02-26"},{"lineNumber":121,"author":{"gitId":"yyccbb"},"content":"        final int byLength \u003d 5;","lastModifiedDate":"2024-02-26"},{"lineNumber":122,"author":{"gitId":"yyccbb"},"content":"        int byIndex \u003d input.indexOf(\" /by \");","lastModifiedDate":"2024-02-26"},{"lineNumber":123,"author":{"gitId":"yyccbb"},"content":"        if (byIndex \u003c deadlineLength) {","lastModifiedDate":"2024-02-26"},{"lineNumber":124,"author":{"gitId":"yyccbb"},"content":"            throw new IllegalArgumentException(\"illegal use of /by flag\");","lastModifiedDate":"2024-02-26"},{"lineNumber":125,"author":{"gitId":"yyccbb"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":126,"author":{"gitId":"yyccbb"},"content":"        String taskName \u003d input.substring(deadlineLength, byIndex);","lastModifiedDate":"2024-02-26"},{"lineNumber":127,"author":{"gitId":"yyccbb"},"content":"        LocalDateTime by \u003d DateTimeHandler.handleInput(input.substring(byIndex + byLength));","lastModifiedDate":"2024-02-26"},{"lineNumber":128,"author":{"gitId":"yyccbb"},"content":"        DeadlineTask deadlineTask \u003d new DeadlineTask(taskName, by);","lastModifiedDate":"2024-02-26"},{"lineNumber":129,"author":{"gitId":"yyccbb"},"content":"        return new TaskAction(deadlineTask);","lastModifiedDate":"2024-02-26"},{"lineNumber":130,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":131,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":132,"author":{"gitId":"yyccbb"},"content":"    private static TaskAction eventActionBuilder(String input, String[] parsedInput)","lastModifiedDate":"2024-02-26"},{"lineNumber":133,"author":{"gitId":"yyccbb"},"content":"            throws IncorrectDateTimeFormatException, IllegalArgumentException {","lastModifiedDate":"2024-02-26"},{"lineNumber":134,"author":{"gitId":"yyccbb"},"content":"        if (countFromFlag(parsedInput) !\u003d 1 || countToFlag(parsedInput) !\u003d 1) {","lastModifiedDate":"2024-02-26"},{"lineNumber":135,"author":{"gitId":"yyccbb"},"content":"            throw new IllegalArgumentException(\"\u0027event\u0027 requires exactly 1 /from flag and 1 /to flag\");","lastModifiedDate":"2024-02-26"},{"lineNumber":136,"author":{"gitId":"yyccbb"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":137,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":138,"author":{"gitId":"yyccbb"},"content":"        final int eventLength \u003d 6;","lastModifiedDate":"2024-02-26"},{"lineNumber":139,"author":{"gitId":"yyccbb"},"content":"        final int fromLength \u003d 7;","lastModifiedDate":"2024-02-26"},{"lineNumber":140,"author":{"gitId":"yyccbb"},"content":"        final int toLength \u003d 5;","lastModifiedDate":"2024-02-26"},{"lineNumber":141,"author":{"gitId":"yyccbb"},"content":"        int fromIndex \u003d input.indexOf(\" /from \");","lastModifiedDate":"2024-02-26"},{"lineNumber":142,"author":{"gitId":"yyccbb"},"content":"        int toIndex \u003d input.indexOf(\" /to \");","lastModifiedDate":"2024-02-26"},{"lineNumber":143,"author":{"gitId":"yyccbb"},"content":"        if (fromIndex \u003c eventLength || toIndex \u003c fromIndex + fromLength) {","lastModifiedDate":"2024-02-26"},{"lineNumber":144,"author":{"gitId":"yyccbb"},"content":"            throw new IllegalArgumentException(\"illegal use of flags\");","lastModifiedDate":"2024-02-26"},{"lineNumber":145,"author":{"gitId":"yyccbb"},"content":"            // Todo: define allowable separation in tP","lastModifiedDate":"2024-02-28"},{"lineNumber":146,"author":{"gitId":"yyccbb"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":147,"author":{"gitId":"yyccbb"},"content":"        String taskName \u003d input.substring(6, fromIndex);","lastModifiedDate":"2024-02-26"},{"lineNumber":148,"author":{"gitId":"yyccbb"},"content":"        LocalDateTime from \u003d DateTimeHandler.handleInput(input.substring(fromIndex + fromLength, toIndex));","lastModifiedDate":"2024-02-26"},{"lineNumber":149,"author":{"gitId":"yyccbb"},"content":"        LocalDateTime to \u003d DateTimeHandler.handleInput(input.substring(toIndex + toLength));","lastModifiedDate":"2024-02-26"},{"lineNumber":150,"author":{"gitId":"yyccbb"},"content":"        EventTask eventTask \u003d new EventTask(taskName, from, to);","lastModifiedDate":"2024-02-26"},{"lineNumber":151,"author":{"gitId":"yyccbb"},"content":"        return new TaskAction(eventTask);","lastModifiedDate":"2024-02-26"},{"lineNumber":152,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":153,"author":{"gitId":"yyccbb"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"yyccbb":153}},{"path":"src/main/java/nihao/handler/PrintHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyccbb"},"content":"package nihao.handler;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"yyccbb"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-18"},{"lineNumber":4,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":5,"author":{"gitId":"yyccbb"},"content":"import nihao.action.task.Task;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"yyccbb"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"yyccbb"},"content":" * Handles all printing requests.","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"yyccbb"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"yyccbb"},"content":"public final class PrintHandler {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"yyccbb"},"content":"    private static final String DIVIDER \u003d \"------------------------------------\";","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"yyccbb"},"content":"    private PrintHandler() {}","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"yyccbb"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"yyccbb"},"content":"     * Simply prints the content received.","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"yyccbb"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"yyccbb"},"content":"     * @param msg Message to be printed.","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"yyccbb"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"yyccbb"},"content":"    public static String print(String msg) {","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"yyccbb"},"content":"        System.out.println(msg);","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"yyccbb"},"content":"        return msg + \"\\n\";","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"yyccbb"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"yyccbb"},"content":"     * Prints the content received and a DIVIDER.","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"yyccbb"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"yyccbb"},"content":"     * @param msg Message to be printed.","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"yyccbb"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"yyccbb"},"content":"    public static String printWithDivider(String msg) {","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"yyccbb"},"content":"        return print(msg);","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":33,"author":{"gitId":"yyccbb"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":34,"author":{"gitId":"yyccbb"},"content":"     * Prints an ArrayList of Tasks in a numbered format, with each entry on a new line.","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"yyccbb"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"yyccbb"},"content":"     * @param tasks ArrayList of Tasks that is to be printed.","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"yyccbb"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"yyccbb"},"content":"    public static String printNumberedDivider(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"yyccbb"},"content":"        String msg \u003d \"\";","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"yyccbb"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"yyccbb"},"content":"            int index \u003d i + 1;","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"yyccbb"},"content":"            msg +\u003d print(index + \". \" + tasks.get(i));","lastModifiedDate":"2024-02-23"},{"lineNumber":43,"author":{"gitId":"yyccbb"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"yyccbb"},"content":"        return msg;","lastModifiedDate":"2024-02-23"},{"lineNumber":45,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"yyccbb"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":48,"author":{"gitId":"yyccbb"},"content":"     * Prints the content of an Exception.","lastModifiedDate":"2024-02-12"},{"lineNumber":49,"author":{"gitId":"yyccbb"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":50,"author":{"gitId":"yyccbb"},"content":"     * @param e Exception to be printed","lastModifiedDate":"2024-02-12"},{"lineNumber":51,"author":{"gitId":"yyccbb"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":52,"author":{"gitId":"yyccbb"},"content":"    public static String printException(Exception e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":53,"author":{"gitId":"yyccbb"},"content":"        return printWithDivider(e.getMessage());","lastModifiedDate":"2024-02-19"},{"lineNumber":54,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"yyccbb"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"yyccbb":55}},{"path":"src/main/java/nihao/ui/DialogueBoxController.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyccbb"},"content":"package nihao.ui;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"yyccbb"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"yyccbb"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"yyccbb"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"yyccbb"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"yyccbb"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"yyccbb"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"yyccbb"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"yyccbb"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"yyccbb"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"yyccbb"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"yyccbb"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"yyccbb"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"yyccbb"},"content":" * Controller for DialogueBox.","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"yyccbb"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"yyccbb"},"content":"public class DialogueBoxController extends HBox {","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"yyccbb"},"content":"    @FXML","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"yyccbb"},"content":"    private Label text;","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"yyccbb"},"content":"    @FXML","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"yyccbb"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"yyccbb"},"content":"    @FXML","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"yyccbb"},"content":"    private HBox dialogueContainer;","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"yyccbb"},"content":"    private DialogueBoxController(String text, Image displayPicture) {","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"yyccbb"},"content":"        try {","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"yyccbb"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindowController.class.getResource(\"/view/DialogueBox.fxml\"));","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"yyccbb"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"yyccbb"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"yyccbb"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"yyccbb"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"yyccbb"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"yyccbb"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"yyccbb"},"content":"        this.text.setText(text);","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"yyccbb"},"content":"        this.displayPicture.setImage(displayPicture);","lastModifiedDate":"2024-02-19"},{"lineNumber":41,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":43,"author":{"gitId":"yyccbb"},"content":"    private void flip() {","lastModifiedDate":"2024-02-19"},{"lineNumber":44,"author":{"gitId":"yyccbb"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-19"},{"lineNumber":45,"author":{"gitId":"yyccbb"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"yyccbb"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"yyccbb"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":49,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":50,"author":{"gitId":"yyccbb"},"content":"    public static DialogueBoxController getUserDialogue(String l, Image iv) {","lastModifiedDate":"2024-02-19"},{"lineNumber":51,"author":{"gitId":"yyccbb"},"content":"        return new DialogueBoxController(l, iv);","lastModifiedDate":"2024-02-19"},{"lineNumber":52,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":53,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":54,"author":{"gitId":"yyccbb"},"content":"    public static DialogueBoxController getNihaoDialogue(String l, Image iv) {","lastModifiedDate":"2024-02-19"},{"lineNumber":55,"author":{"gitId":"yyccbb"},"content":"        DialogueBoxController db \u003d new DialogueBoxController(l, iv);","lastModifiedDate":"2024-02-19"},{"lineNumber":56,"author":{"gitId":"yyccbb"},"content":"        db.flip();","lastModifiedDate":"2024-02-19"},{"lineNumber":57,"author":{"gitId":"yyccbb"},"content":"        return db;","lastModifiedDate":"2024-02-19"},{"lineNumber":58,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":59,"author":{"gitId":"yyccbb"},"content":"}","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"yyccbb":59}},{"path":"src/main/java/nihao/ui/MainWindowController.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyccbb"},"content":"package nihao.ui;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"yyccbb"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"yyccbb"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"yyccbb"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"yyccbb"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"yyccbb"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"yyccbb"},"content":"import javafx.scene.input.KeyCode;","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"yyccbb"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"yyccbb"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"yyccbb"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"yyccbb"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"yyccbb"},"content":"import nihao.Nihao;","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"yyccbb"},"content":"import nihao.enums.SavedString;","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"yyccbb"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"yyccbb"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"yyccbb"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"yyccbb"},"content":"public class MainWindowController extends AnchorPane {","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"yyccbb"},"content":"    @FXML","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"yyccbb"},"content":"    private ScrollPane dialoguePane;","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"yyccbb"},"content":"    @FXML","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"yyccbb"},"content":"    private VBox dialogueContainer;","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"yyccbb"},"content":"    @FXML","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"yyccbb"},"content":"    private TextField inputField;","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"yyccbb"},"content":"    @FXML","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"yyccbb"},"content":"    private Button inputButton;","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"yyccbb"},"content":"    @FXML","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"yyccbb"},"content":"    private HBox inputBox;","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"yyccbb"},"content":"    private Nihao nihao;","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"yyccbb"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"yyccbb"},"content":"    private Image nihaoImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/logo_600.png\"));","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"yyccbb"},"content":"    @FXML","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"yyccbb"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"yyccbb"},"content":"        dialoguePane.vvalueProperty().bind(dialogueContainer.heightProperty());","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"yyccbb"},"content":"        String greetings \u003d SavedString.GREETINGS.getContent();","lastModifiedDate":"2024-02-28"},{"lineNumber":39,"author":{"gitId":"yyccbb"},"content":"        dialogueContainer.getChildren().add(DialogueBoxController.getNihaoDialogue(greetings, nihaoImage));","lastModifiedDate":"2024-02-28"},{"lineNumber":40,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":41,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"yyccbb"},"content":"    public void setNihao(Nihao nihao) {","lastModifiedDate":"2024-02-19"},{"lineNumber":43,"author":{"gitId":"yyccbb"},"content":"        this.nihao \u003d nihao;","lastModifiedDate":"2024-02-19"},{"lineNumber":44,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":45,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"yyccbb"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"yyccbb"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"yyccbb"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-19"},{"lineNumber":49,"author":{"gitId":"yyccbb"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":50,"author":{"gitId":"yyccbb"},"content":"    @FXML","lastModifiedDate":"2024-02-19"},{"lineNumber":51,"author":{"gitId":"yyccbb"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-19"},{"lineNumber":52,"author":{"gitId":"yyccbb"},"content":"        String userText \u003d inputField.getText();","lastModifiedDate":"2024-02-19"},{"lineNumber":53,"author":{"gitId":"yyccbb"},"content":"        if (userText.isEmpty()) {","lastModifiedDate":"2024-02-19"},{"lineNumber":54,"author":{"gitId":"yyccbb"},"content":"            return;","lastModifiedDate":"2024-02-19"},{"lineNumber":55,"author":{"gitId":"yyccbb"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":56,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":57,"author":{"gitId":"yyccbb"},"content":"        String nihaoText \u003d nihao.getResponse(inputField.getText());","lastModifiedDate":"2024-02-19"},{"lineNumber":58,"author":{"gitId":"yyccbb"},"content":"        dialogueContainer.getChildren().addAll(","lastModifiedDate":"2024-02-19"},{"lineNumber":59,"author":{"gitId":"yyccbb"},"content":"                DialogueBoxController.getUserDialogue(userText, userImage),","lastModifiedDate":"2024-02-19"},{"lineNumber":60,"author":{"gitId":"yyccbb"},"content":"                DialogueBoxController.getNihaoDialogue(nihaoText, nihaoImage)","lastModifiedDate":"2024-02-19"},{"lineNumber":61,"author":{"gitId":"yyccbb"},"content":"        );","lastModifiedDate":"2024-02-19"},{"lineNumber":62,"author":{"gitId":"yyccbb"},"content":"        inputField.clear();","lastModifiedDate":"2024-02-19"},{"lineNumber":63,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":64,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":65,"author":{"gitId":"yyccbb"},"content":"    @FXML","lastModifiedDate":"2024-02-19"},{"lineNumber":66,"author":{"gitId":"yyccbb"},"content":"    private void handleEnterReleased(KeyEvent event) {","lastModifiedDate":"2024-02-19"},{"lineNumber":67,"author":{"gitId":"yyccbb"},"content":"        if (event.getCode() \u003d\u003d KeyCode.ENTER) {","lastModifiedDate":"2024-02-19"},{"lineNumber":68,"author":{"gitId":"yyccbb"},"content":"            this.inputField.setEditable(true);","lastModifiedDate":"2024-02-19"},{"lineNumber":69,"author":{"gitId":"yyccbb"},"content":"            this.inputField.requestFocus();","lastModifiedDate":"2024-02-19"},{"lineNumber":70,"author":{"gitId":"yyccbb"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":71,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":72,"author":{"gitId":"yyccbb"},"content":"}","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"yyccbb":72}},{"path":"src/main/java/nihao/util/TaskTypeAdapter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyccbb"},"content":"package nihao.util;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"yyccbb"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-18"},{"lineNumber":4,"author":{"gitId":"yyccbb"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-18"},{"lineNumber":5,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":6,"author":{"gitId":"yyccbb"},"content":"import com.google.gson.TypeAdapter;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"yyccbb"},"content":"import com.google.gson.stream.JsonReader;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"yyccbb"},"content":"import com.google.gson.stream.JsonToken;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"yyccbb"},"content":"import com.google.gson.stream.JsonWriter;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"yyccbb"},"content":"import nihao.action.task.DeadlineTask;","lastModifiedDate":"2024-02-18"},{"lineNumber":12,"author":{"gitId":"yyccbb"},"content":"import nihao.action.task.EventTask;","lastModifiedDate":"2024-02-18"},{"lineNumber":13,"author":{"gitId":"yyccbb"},"content":"import nihao.action.task.Task;","lastModifiedDate":"2024-02-18"},{"lineNumber":14,"author":{"gitId":"yyccbb"},"content":"import nihao.action.task.TodoTask;","lastModifiedDate":"2024-02-18"},{"lineNumber":15,"author":{"gitId":"yyccbb"},"content":"import nihao.handler.DateTimeHandler;","lastModifiedDate":"2024-02-18"},{"lineNumber":16,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"yyccbb"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"yyccbb"},"content":" * Represents a custom TypeAdapter for serializing/deserializing JSON with Gson.","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"yyccbb"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"yyccbb"},"content":"public class TaskTypeAdapter extends TypeAdapter\u003cTask\u003e {","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"yyccbb"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"yyccbb"},"content":"    public void write(JsonWriter jsonWriter, Task task) throws IOException {","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"yyccbb"},"content":"        jsonWriter.beginObject();","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"yyccbb"},"content":"        jsonWriter.name(\"type\");","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"yyccbb"},"content":"        if (task instanceof TodoTask) {","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"yyccbb"},"content":"            jsonWriter.value(TodoTask.class.getSimpleName());","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"yyccbb"},"content":"        } else if (task instanceof DeadlineTask) {","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"yyccbb"},"content":"            jsonWriter.value(DeadlineTask.class.getSimpleName());","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"yyccbb"},"content":"        } else if (task instanceof EventTask) {","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"yyccbb"},"content":"            jsonWriter.value(EventTask.class.getSimpleName());","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"yyccbb"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"yyccbb"},"content":"        jsonWriter.name(\"taskName\");","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"yyccbb"},"content":"        jsonWriter.value(task.getTaskName());","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"yyccbb"},"content":"        jsonWriter.name(\"isCompleted\");","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"yyccbb"},"content":"        jsonWriter.value(task.getIsCompleted());","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"yyccbb"},"content":"        if (task instanceof TodoTask) {","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"yyccbb"},"content":"        } else if (task instanceof DeadlineTask) {","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"yyccbb"},"content":"            jsonWriter.name(\"by\");","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"yyccbb"},"content":"            jsonWriter.value(((DeadlineTask) task).getByString());","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"yyccbb"},"content":"        } else if (task instanceof EventTask) {","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"yyccbb"},"content":"            jsonWriter.name(\"from\");","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"yyccbb"},"content":"            jsonWriter.value(((EventTask) task).getFromString());","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"yyccbb"},"content":"            jsonWriter.name(\"to\");","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"yyccbb"},"content":"            jsonWriter.value(((EventTask) task).getToString());","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"yyccbb"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"yyccbb"},"content":"        jsonWriter.endObject();","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"yyccbb"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"yyccbb"},"content":"    public Task read(JsonReader jsonReader) throws IOException {","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"yyccbb"},"content":"        Task ret \u003d null;","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"yyccbb"},"content":"        jsonReader.beginObject();","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"yyccbb"},"content":"        String fieldName \u003d null;","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"yyccbb"},"content":"        JsonToken token \u003d jsonReader.peek();","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"yyccbb"},"content":"        if (token.equals(JsonToken.NAME)) {","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"yyccbb"},"content":"            fieldName \u003d jsonReader.nextName();","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"yyccbb"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"yyccbb"},"content":"        token \u003d jsonReader.peek();","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"yyccbb"},"content":"        String type \u003d jsonReader.nextString();","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"yyccbb"},"content":"        token \u003d jsonReader.peek();","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"yyccbb"},"content":"        fieldName \u003d jsonReader.nextName();","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"yyccbb"},"content":"        token \u003d jsonReader.peek();","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"yyccbb"},"content":"        String taskName \u003d jsonReader.nextString();","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"yyccbb"},"content":"        token \u003d jsonReader.peek();","lastModifiedDate":"2024-02-07"},{"lineNumber":65,"author":{"gitId":"yyccbb"},"content":"        fieldName \u003d jsonReader.nextName();","lastModifiedDate":"2024-02-07"},{"lineNumber":66,"author":{"gitId":"yyccbb"},"content":"        token \u003d jsonReader.peek();","lastModifiedDate":"2024-02-07"},{"lineNumber":67,"author":{"gitId":"yyccbb"},"content":"        boolean isCompleted \u003d jsonReader.nextBoolean();","lastModifiedDate":"2024-02-07"},{"lineNumber":68,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":69,"author":{"gitId":"yyccbb"},"content":"        switch (type) {","lastModifiedDate":"2024-02-07"},{"lineNumber":70,"author":{"gitId":"yyccbb"},"content":"        case \"TodoTask\":","lastModifiedDate":"2024-02-07"},{"lineNumber":71,"author":{"gitId":"yyccbb"},"content":"            ret \u003d new TodoTask(taskName);","lastModifiedDate":"2024-02-07"},{"lineNumber":72,"author":{"gitId":"yyccbb"},"content":"            ret.setIsCompleted(isCompleted);","lastModifiedDate":"2024-02-07"},{"lineNumber":73,"author":{"gitId":"yyccbb"},"content":"            break;","lastModifiedDate":"2024-02-07"},{"lineNumber":74,"author":{"gitId":"yyccbb"},"content":"        case \"DeadlineTask\":","lastModifiedDate":"2024-02-07"},{"lineNumber":75,"author":{"gitId":"yyccbb"},"content":"            token \u003d jsonReader.peek();","lastModifiedDate":"2024-02-07"},{"lineNumber":76,"author":{"gitId":"yyccbb"},"content":"            if (token.equals(JsonToken.NAME)) {","lastModifiedDate":"2024-02-07"},{"lineNumber":77,"author":{"gitId":"yyccbb"},"content":"                fieldName \u003d jsonReader.nextName();","lastModifiedDate":"2024-02-07"},{"lineNumber":78,"author":{"gitId":"yyccbb"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":79,"author":{"gitId":"yyccbb"},"content":"            token \u003d jsonReader.peek();","lastModifiedDate":"2024-02-07"},{"lineNumber":80,"author":{"gitId":"yyccbb"},"content":"            LocalDateTime by \u003d DateTimeHandler.deserialize(jsonReader.nextString());","lastModifiedDate":"2024-02-07"},{"lineNumber":81,"author":{"gitId":"yyccbb"},"content":"            ret \u003d new DeadlineTask(taskName, by);","lastModifiedDate":"2024-02-07"},{"lineNumber":82,"author":{"gitId":"yyccbb"},"content":"            ret.setIsCompleted(isCompleted);","lastModifiedDate":"2024-02-07"},{"lineNumber":83,"author":{"gitId":"yyccbb"},"content":"            break;","lastModifiedDate":"2024-02-07"},{"lineNumber":84,"author":{"gitId":"yyccbb"},"content":"        case \"EventTask\":","lastModifiedDate":"2024-02-07"},{"lineNumber":85,"author":{"gitId":"yyccbb"},"content":"            token \u003d jsonReader.peek();","lastModifiedDate":"2024-02-07"},{"lineNumber":86,"author":{"gitId":"yyccbb"},"content":"            fieldName \u003d jsonReader.nextName();","lastModifiedDate":"2024-02-07"},{"lineNumber":87,"author":{"gitId":"yyccbb"},"content":"            token \u003d jsonReader.peek();","lastModifiedDate":"2024-02-07"},{"lineNumber":88,"author":{"gitId":"yyccbb"},"content":"            LocalDateTime from \u003d DateTimeHandler.deserialize(jsonReader.nextString());","lastModifiedDate":"2024-02-07"},{"lineNumber":89,"author":{"gitId":"yyccbb"},"content":"            token \u003d jsonReader.peek();","lastModifiedDate":"2024-02-07"},{"lineNumber":90,"author":{"gitId":"yyccbb"},"content":"            fieldName \u003d jsonReader.nextName();","lastModifiedDate":"2024-02-07"},{"lineNumber":91,"author":{"gitId":"yyccbb"},"content":"            token \u003d jsonReader.peek();","lastModifiedDate":"2024-02-07"},{"lineNumber":92,"author":{"gitId":"yyccbb"},"content":"            LocalDateTime to \u003d DateTimeHandler.deserialize(jsonReader.nextString());","lastModifiedDate":"2024-02-07"},{"lineNumber":93,"author":{"gitId":"yyccbb"},"content":"            ret \u003d new EventTask(taskName, from, to);","lastModifiedDate":"2024-02-07"},{"lineNumber":94,"author":{"gitId":"yyccbb"},"content":"            ret.setIsCompleted(isCompleted);","lastModifiedDate":"2024-02-07"},{"lineNumber":95,"author":{"gitId":"yyccbb"},"content":"            break;","lastModifiedDate":"2024-02-07"},{"lineNumber":96,"author":{"gitId":"yyccbb"},"content":"        default:","lastModifiedDate":"2024-02-18"},{"lineNumber":97,"author":{"gitId":"yyccbb"},"content":"            throw new IllegalStateException(\"Unexpected value: \" + type);","lastModifiedDate":"2024-02-18"},{"lineNumber":98,"author":{"gitId":"yyccbb"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":99,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":100,"author":{"gitId":"yyccbb"},"content":"        jsonReader.endObject();","lastModifiedDate":"2024-02-07"},{"lineNumber":101,"author":{"gitId":"yyccbb"},"content":"        return ret;","lastModifiedDate":"2024-02-07"},{"lineNumber":102,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":103,"author":{"gitId":"yyccbb"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"yyccbb":103}},{"path":"src/main/resources/view/DialogueBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"yyccbb"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"yyccbb"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"yyccbb"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"yyccbb"},"content":"\u003c?import javafx.scene.control.Separator?\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"yyccbb"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"yyccbb"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"yyccbb"},"content":"\u003cfx:root fx:id\u003d\"dialogueContainer\" alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"-Infinity\" prefWidth\u003d\"380.0\" styleClass\u003d\"hbox-default\" stylesheets\u003d\"@../styles/cupertino-dark.css\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"yyccbb"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"yyccbb"},"content":"        \u003cLabel fx:id\u003d\"text\" prefWidth\u003d\"300.0\" styleClass\u003d\"tile\" text\u003d\"Label\" wrapText\u003d\"true\" HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"yyccbb"},"content":"      \u003cSeparator orientation\u003d\"VERTICAL\" prefWidth\u003d\"30.0\" /\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"yyccbb"},"content":"        \u003cImageView id\u003d\"image\" fx:id\u003d\"displayPicture\" fitHeight\u003d\"50.0\" fitWidth\u003d\"50.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" styleClass\u003d\"imageview\" HBox.hgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"yyccbb"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"yyccbb"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"yyccbb"},"content":"        \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"yyccbb"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"yyccbb"},"content":"   \u003copaqueInsets\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"yyccbb"},"content":"      \u003cInsets /\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"yyccbb"},"content":"   \u003c/opaqueInsets\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"yyccbb"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"yyccbb":21}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"yyccbb"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"yyccbb"},"content":"\u003c?import java.lang.String?\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"yyccbb"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"yyccbb"},"content":"\u003c?import javafx.scene.Cursor?\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"yyccbb"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"yyccbb"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"yyccbb"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"yyccbb"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"yyccbb"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"yyccbb"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"yyccbb"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" onKeyReleased\u003d\"#handleEnterReleased\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../styles/cupertino-dark.css\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"nihao.ui.MainWindowController\"\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"yyccbb"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"yyccbb"},"content":"      \u003cVBox spacing\u003d\"10.0\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"yyccbb"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"yyccbb"},"content":"              \u003cScrollPane fx:id\u003d\"dialoguePane\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefWidth\u003d\"385.0\" vvalue\u003d\"1.0\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"yyccbb"},"content":"                  \u003ccontent\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"yyccbb"},"content":"                      \u003cVBox fx:id\u003d\"dialogueContainer\" spacing\u003d\"10.0\" styleClass\u003d\"scrollable-content\"\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"yyccbb"},"content":"                     \u003cpadding\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"yyccbb"},"content":"                        \u003cInsets left\u003d\"10.0\" /\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"yyccbb"},"content":"                     \u003c/padding\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"yyccbb"},"content":"                  \u003c/VBox\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"yyccbb"},"content":"                  \u003c/content\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"yyccbb"},"content":"               \u003ccursor\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"yyccbb"},"content":"                  \u003cCursor fx:constant\u003d\"DEFAULT\" /\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"yyccbb"},"content":"               \u003c/cursor\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"yyccbb"},"content":"               \u003cVBox.margin\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"yyccbb"},"content":"                  \u003cInsets top\u003d\"5.0\" /\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"yyccbb"},"content":"               \u003c/VBox.margin\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"yyccbb"},"content":"                  ","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"yyccbb"},"content":"              \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"yyccbb"},"content":"              \u003cHBox fx:id\u003d\"inputBox\" spacing\u003d\"3.0\"\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"yyccbb"},"content":"                  \u003cchildren\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"yyccbb"},"content":"                      \u003cTextField fx:id\u003d\"inputField\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"40.0\" prefWidth\u003d\"320.0\"\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"yyccbb"},"content":"                     \u003cstyleClass\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"yyccbb"},"content":"                        \u003cString fx:value\u003d\"rounded\" /\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"yyccbb"},"content":"                        \u003cString fx:value\u003d\"text-field\" /\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"yyccbb"},"content":"                     \u003c/styleClass\u003e\u003c/TextField\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"yyccbb"},"content":"                      \u003cButton fx:id\u003d\"inputButton\" alignment\u003d\"CENTER\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"40.0\" prefWidth\u003d\"70.0\" styleClass\u003d\"rounded\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":41,"author":{"gitId":"yyccbb"},"content":"                  \u003c/children\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"yyccbb"},"content":"               \u003cVBox.margin\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":43,"author":{"gitId":"yyccbb"},"content":"                  \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" /\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":44,"author":{"gitId":"yyccbb"},"content":"               \u003c/VBox.margin\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":45,"author":{"gitId":"yyccbb"},"content":"          \u003c/HBox\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"yyccbb"},"content":"         \u003c/children\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"yyccbb"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"yyccbb"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":49,"author":{"gitId":"yyccbb"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"yyccbb":49}},{"path":"src/test/java/nihao/handler/DataHandlerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyccbb"},"content":"package nihao.handler;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"yyccbb"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-18"},{"lineNumber":4,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"yyccbb"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"yyccbb"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"yyccbb"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"yyccbb"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"yyccbb"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-18"},{"lineNumber":11,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":12,"author":{"gitId":"yyccbb"},"content":"import nihao.action.task.DeadlineTask;","lastModifiedDate":"2024-02-18"},{"lineNumber":13,"author":{"gitId":"yyccbb"},"content":"import nihao.action.task.EventTask;","lastModifiedDate":"2024-02-18"},{"lineNumber":14,"author":{"gitId":"yyccbb"},"content":"import nihao.action.task.Task;","lastModifiedDate":"2024-02-18"},{"lineNumber":15,"author":{"gitId":"yyccbb"},"content":"import nihao.exception.IndexOutOfBoundsException;","lastModifiedDate":"2024-02-18"},{"lineNumber":16,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"yyccbb"},"content":"class DataHandlerTest {","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"yyccbb"},"content":"    private String dateTime \u003d \"10/02/2024 2000\";","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"yyccbb"},"content":"    private LocalDateTime localDateTime \u003d LocalDateTime.parse(dateTime, DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"yyccbb"},"content":"    private DeadlineTask deadlineTask \u003d new DeadlineTask(\"homework\", localDateTime);","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"yyccbb"},"content":"    private EventTask eventTask \u003d new EventTask(\"concert\", localDateTime, localDateTime);","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"yyccbb"},"content":"    private Task[] taskArray \u003d {deadlineTask, eventTask};","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"yyccbb"},"content":"    private ArrayList\u003cTask\u003e lst \u003d new ArrayList\u003c\u003e(Arrays.asList(taskArray));","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"yyccbb"},"content":"    @Test","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"yyccbb"},"content":"    void handleData() {","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"yyccbb"},"content":"        ArrayList\u003cTask\u003e copy \u003d DataHandler.tasks;","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"yyccbb"},"content":"        ArrayList\u003cTask\u003e before \u003d DataHandler.tasks;","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"yyccbb"},"content":"        DataHandler.addTask(eventTask);","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"yyccbb"},"content":"        before.add(eventTask);","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"yyccbb"},"content":"        assertEquals(before, DataHandler.tasks);","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"yyccbb"},"content":"        DataHandler.tasks \u003d copy;","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"yyccbb"},"content":"    @Test","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"yyccbb"},"content":"    void getData() {","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"yyccbb"},"content":"        assertEquals(DataHandler.tasks, DataHandler.getData());","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"yyccbb"},"content":"    @Test","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"yyccbb"},"content":"    void size() {","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"yyccbb"},"content":"        assertEquals(DataHandler.tasks.size(), DataHandler.size());","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"yyccbb"},"content":"    @Test","lastModifiedDate":"2024-02-09"},{"lineNumber":46,"author":{"gitId":"yyccbb"},"content":"    void getTask_success() throws IndexOutOfBoundsException {","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"yyccbb"},"content":"        if (DataHandler.size() \u003e\u003d 1) {","lastModifiedDate":"2024-02-09"},{"lineNumber":48,"author":{"gitId":"yyccbb"},"content":"            assertEquals(DataHandler.tasks.get(0), DataHandler.getTask(1));","lastModifiedDate":"2024-02-09"},{"lineNumber":49,"author":{"gitId":"yyccbb"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":51,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":52,"author":{"gitId":"yyccbb"},"content":"    @Test","lastModifiedDate":"2024-02-09"},{"lineNumber":53,"author":{"gitId":"yyccbb"},"content":"    void getTask_exception() {","lastModifiedDate":"2024-02-09"},{"lineNumber":54,"author":{"gitId":"yyccbb"},"content":"        int index \u003d DataHandler.size() + 1;","lastModifiedDate":"2024-02-09"},{"lineNumber":55,"author":{"gitId":"yyccbb"},"content":"        try {","lastModifiedDate":"2024-02-09"},{"lineNumber":56,"author":{"gitId":"yyccbb"},"content":"            DataHandler.getTask(index);","lastModifiedDate":"2024-02-09"},{"lineNumber":57,"author":{"gitId":"yyccbb"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-09"},{"lineNumber":58,"author":{"gitId":"yyccbb"},"content":"            assertEquals(\"IndexOutOfBoundsException: \" + \"index \" + index + \" out of bounds for size \"","lastModifiedDate":"2024-02-09"},{"lineNumber":59,"author":{"gitId":"yyccbb"},"content":"                    + DataHandler.size() + \".\", e.getMessage());","lastModifiedDate":"2024-02-09"},{"lineNumber":60,"author":{"gitId":"yyccbb"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":61,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":62,"author":{"gitId":"yyccbb"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"yyccbb":62}},{"path":"src/test/java/nihao/handler/InputHandlerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyccbb"},"content":"package nihao.handler;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"yyccbb"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-18"},{"lineNumber":4,"author":{"gitId":"yyccbb"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-02-18"},{"lineNumber":5,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":6,"author":{"gitId":"yyccbb"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-18"},{"lineNumber":7,"author":{"gitId":"yyccbb"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-18"},{"lineNumber":8,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":9,"author":{"gitId":"yyccbb"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-18"},{"lineNumber":10,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":11,"author":{"gitId":"yyccbb"},"content":"import nihao.action.DeleteAction;","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"yyccbb"},"content":"import nihao.action.ExitAction;","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"yyccbb"},"content":"import nihao.action.ListAction;","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"yyccbb"},"content":"import nihao.action.MarkAction;","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"yyccbb"},"content":"import nihao.action.TaskAction;","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"yyccbb"},"content":"import nihao.action.UnmarkAction;","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"yyccbb"},"content":"import nihao.action.task.DeadlineTask;","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"yyccbb"},"content":"import nihao.action.task.EventTask;","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"yyccbb"},"content":"import nihao.action.task.TodoTask;","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"yyccbb"},"content":"class InputHandlerTest {","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"yyccbb"},"content":"    @Test","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"yyccbb"},"content":"    void handleInput_success() throws Exception {","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"yyccbb"},"content":"        // \"bye\" command","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"yyccbb"},"content":"        assertEquals(new ExitAction(), InputHandler.handleInput(\"bye\"));","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"yyccbb"},"content":"        // \"list\" command","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"yyccbb"},"content":"        assertEquals(new ListAction(), InputHandler.handleInput(\"list\"));","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"yyccbb"},"content":"        // \"mark\" command","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"yyccbb"},"content":"        assertEquals(new MarkAction(\"2\"), InputHandler.handleInput(\"mark 2\"));","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"yyccbb"},"content":"        // \"unmark\" command","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"yyccbb"},"content":"        assertEquals(new UnmarkAction(\"2\"), InputHandler.handleInput(\"unmark 2\"));","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"yyccbb"},"content":"        // \"delete\" command","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"yyccbb"},"content":"        assertEquals(new DeleteAction(\"3\"), InputHandler.handleInput(\"delete 3\"));","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"yyccbb"},"content":"        // \"todo\" command","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"yyccbb"},"content":"        assertEquals(new TaskAction(new TodoTask(\"morning\")), InputHandler.handleInput(\"todo morning\"));","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"yyccbb"},"content":"        String dateTime \u003d \"10/02/2024 2000\";","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"yyccbb"},"content":"        LocalDateTime localDateTime \u003d LocalDateTime.parse(dateTime, DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"yyccbb"},"content":"        // \"deadline\" command","lastModifiedDate":"2024-02-09"},{"lineNumber":46,"author":{"gitId":"yyccbb"},"content":"        assertEquals(new TaskAction(","lastModifiedDate":"2024-02-18"},{"lineNumber":47,"author":{"gitId":"yyccbb"},"content":"                new DeadlineTask(\"homework\", localDateTime)),","lastModifiedDate":"2024-02-18"},{"lineNumber":48,"author":{"gitId":"yyccbb"},"content":"                InputHandler.handleInput(\"deadline homework /by \" + dateTime));","lastModifiedDate":"2024-02-18"},{"lineNumber":49,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"yyccbb"},"content":"        // \"event\" command","lastModifiedDate":"2024-02-09"},{"lineNumber":51,"author":{"gitId":"yyccbb"},"content":"        assertEquals(new TaskAction(","lastModifiedDate":"2024-02-18"},{"lineNumber":52,"author":{"gitId":"yyccbb"},"content":"                new EventTask(\"homework\", localDateTime, localDateTime)),","lastModifiedDate":"2024-02-18"},{"lineNumber":53,"author":{"gitId":"yyccbb"},"content":"                InputHandler.handleInput(\"event homework /from \" + dateTime + \" /to \" + dateTime));","lastModifiedDate":"2024-02-18"},{"lineNumber":54,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":55,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":56,"author":{"gitId":"yyccbb"},"content":"    @Test","lastModifiedDate":"2024-02-09"},{"lineNumber":57,"author":{"gitId":"yyccbb"},"content":"    void handleInput_exceptionThrown() {","lastModifiedDate":"2024-02-09"},{"lineNumber":58,"author":{"gitId":"yyccbb"},"content":"        try {","lastModifiedDate":"2024-02-09"},{"lineNumber":59,"author":{"gitId":"yyccbb"},"content":"            InputHandler.handleInput(\"waibi babu\");","lastModifiedDate":"2024-02-09"},{"lineNumber":60,"author":{"gitId":"yyccbb"},"content":"            fail();","lastModifiedDate":"2024-02-09"},{"lineNumber":61,"author":{"gitId":"yyccbb"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-09"},{"lineNumber":62,"author":{"gitId":"yyccbb"},"content":"            assertEquals(\"UnknownCommandException: \u0027waibi babu\u0027 is unknown.\", e.getMessage());","lastModifiedDate":"2024-02-09"},{"lineNumber":63,"author":{"gitId":"yyccbb"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":64,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":65,"author":{"gitId":"yyccbb"},"content":"        try {","lastModifiedDate":"2024-02-09"},{"lineNumber":66,"author":{"gitId":"yyccbb"},"content":"            InputHandler.handleInput(\"mark 3 4\");","lastModifiedDate":"2024-02-09"},{"lineNumber":67,"author":{"gitId":"yyccbb"},"content":"            fail();","lastModifiedDate":"2024-02-09"},{"lineNumber":68,"author":{"gitId":"yyccbb"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-09"},{"lineNumber":69,"author":{"gitId":"yyccbb"},"content":"            assertEquals(\"IllegalArgumentException: mark expects 1 arguments.\", e.getMessage());","lastModifiedDate":"2024-02-09"},{"lineNumber":70,"author":{"gitId":"yyccbb"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":71,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":72,"author":{"gitId":"yyccbb"},"content":"        try {","lastModifiedDate":"2024-02-09"},{"lineNumber":73,"author":{"gitId":"yyccbb"},"content":"            InputHandler.handleInput(\"mark \");","lastModifiedDate":"2024-02-09"},{"lineNumber":74,"author":{"gitId":"yyccbb"},"content":"            fail();","lastModifiedDate":"2024-02-09"},{"lineNumber":75,"author":{"gitId":"yyccbb"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-09"},{"lineNumber":76,"author":{"gitId":"yyccbb"},"content":"            assertEquals(\"IllegalArgumentException: mark expects 1 arguments.\", e.getMessage());","lastModifiedDate":"2024-02-09"},{"lineNumber":77,"author":{"gitId":"yyccbb"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":78,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":79,"author":{"gitId":"yyccbb"},"content":"        try {","lastModifiedDate":"2024-02-09"},{"lineNumber":80,"author":{"gitId":"yyccbb"},"content":"            InputHandler.handleInput(\"todo\");","lastModifiedDate":"2024-02-09"},{"lineNumber":81,"author":{"gitId":"yyccbb"},"content":"            fail();","lastModifiedDate":"2024-02-09"},{"lineNumber":82,"author":{"gitId":"yyccbb"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-09"},{"lineNumber":83,"author":{"gitId":"yyccbb"},"content":"            assertEquals(\"IllegalArgumentException: todo requires at least 1 argument.\", e.getMessage());","lastModifiedDate":"2024-02-09"},{"lineNumber":84,"author":{"gitId":"yyccbb"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":85,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":86,"author":{"gitId":"yyccbb"},"content":"        try {","lastModifiedDate":"2024-02-09"},{"lineNumber":87,"author":{"gitId":"yyccbb"},"content":"            InputHandler.handleInput(\"deadline /by /by\");","lastModifiedDate":"2024-02-09"},{"lineNumber":88,"author":{"gitId":"yyccbb"},"content":"            fail();","lastModifiedDate":"2024-02-09"},{"lineNumber":89,"author":{"gitId":"yyccbb"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-09"},{"lineNumber":90,"author":{"gitId":"yyccbb"},"content":"            assertEquals(\"IllegalArgumentException: deadline requires exactly 1 /by flag.\", e.getMessage());","lastModifiedDate":"2024-02-09"},{"lineNumber":91,"author":{"gitId":"yyccbb"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":92,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":93,"author":{"gitId":"yyccbb"},"content":"        try {","lastModifiedDate":"2024-02-09"},{"lineNumber":94,"author":{"gitId":"yyccbb"},"content":"            InputHandler.handleInput(\"deadline ddl /by\");","lastModifiedDate":"2024-02-09"},{"lineNumber":95,"author":{"gitId":"yyccbb"},"content":"            fail();","lastModifiedDate":"2024-02-09"},{"lineNumber":96,"author":{"gitId":"yyccbb"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-09"},{"lineNumber":97,"author":{"gitId":"yyccbb"},"content":"            assertEquals(\"IllegalArgumentException: illegal use of /by flag.\", e.getMessage());","lastModifiedDate":"2024-02-09"},{"lineNumber":98,"author":{"gitId":"yyccbb"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":99,"author":{"gitId":"yyccbb"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":100,"author":{"gitId":"yyccbb"},"content":"        try {","lastModifiedDate":"2024-02-09"},{"lineNumber":101,"author":{"gitId":"yyccbb"},"content":"            InputHandler.handleInput(\"event /from /to 09/02/2024 2000\");","lastModifiedDate":"2024-02-09"},{"lineNumber":102,"author":{"gitId":"yyccbb"},"content":"            fail();","lastModifiedDate":"2024-02-09"},{"lineNumber":103,"author":{"gitId":"yyccbb"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-09"},{"lineNumber":104,"author":{"gitId":"yyccbb"},"content":"            assertEquals(\"IllegalArgumentException: illegal use of flags.\", e.getMessage());","lastModifiedDate":"2024-02-09"},{"lineNumber":105,"author":{"gitId":"yyccbb"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":106,"author":{"gitId":"yyccbb"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":107,"author":{"gitId":"yyccbb"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"yyccbb":107}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yyccbb"},"content":"delete all","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"yyccbb"},"content":"hello","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"yyccbb"},"content":"mark 2","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"yyccbb"},"content":"list","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"yyccbb"},"content":"deadline finish homework /by tomorrow","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"yyccbb"},"content":"deadline finish homework /by 07/02/2024 2000","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"yyccbb"},"content":"deadline finish homework /by","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"yyccbb"},"content":"event concert /from 10/02/2024 1900 /to 10/02/2024 2130","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"yyccbb"},"content":"mark 2 3","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"yyccbb"},"content":"mark 2","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"yyccbb"},"content":"list","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"yyccbb"},"content":"delete 4","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"yyccbb"},"content":"delete 2","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"yyccbb"},"content":"list","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"yyccbb"},"content":"bye","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"yyccbb":15}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"yyccbb"},"content":"java -classpath ..\\bin App \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"yyccbb":1,"-":20}}]
