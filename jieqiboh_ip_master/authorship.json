[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"jieqiboh"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"jieqiboh"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"jieqiboh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"jieqiboh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"jieqiboh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"jieqiboh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"jieqiboh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"jieqiboh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"jieqiboh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"jieqiboh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"jieqiboh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"jieqiboh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"jieqiboh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"jieqiboh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"jieqiboh"},"content":"checkstyle {","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"jieqiboh"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"jieqiboh"},"content":"}","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"jieqiboh"},"content":"    mainClass.set(\"duke.Launcher\")","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"jieqiboh"},"content":"    archiveBaseName \u003d \"steve\"","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jieqiboh":22,"-":40}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jieqiboh"},"content":"D | 1 | return book | Sunday","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"jieqiboh"},"content":"T | 1 | hi","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"jieqiboh"},"content":"T | 0 | hi","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"jieqiboh"},"content":"E | 1 | long project meeting  | 01 May 2000 00:01 | 01 May 2020 10:00","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"jieqiboh"},"content":"T | 0 | buy bread","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"jieqiboh"},"content":"T | 0 | buy bread","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"jieqiboh":6}},{"path":"data/duketest.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jieqiboh"},"content":"E | 0 | project meeting  | 01 October 2023 00:00 | 01 December 2024 23:59","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"jieqiboh"},"content":"E | 1 | long project meeting  | 01 May 2000 00:01 | 01 May 2020 10:00","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"jieqiboh"},"content":"D | 0 | return book | 01 May 2020 10:00","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"jieqiboh"},"content":"D | 0 | do homework | no idea :-p","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"jieqiboh"},"content":"E | 0 | project meeting 2  | Mon 2pm | 5pm","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"jieqiboh"},"content":"D | 0 | return book | today","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"jieqiboh":6}},{"path":"duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jieqiboh"},"content":"E | 0 | project meeting  | 01 October 2023 00:00 | 01 December 2024 23:59","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"jieqiboh"},"content":"E | 1 | long project meeting  | 01 May 2000 00:01 | 01 May 2020 10:00","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"jieqiboh"},"content":"D | 0 | return book | 01 May 2020 10:00","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"jieqiboh"},"content":"D | 0 | do homework | no idea :-p","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"jieqiboh"},"content":"E | 0 | project meeting 2  | Mon 2pm | 5pm","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"jieqiboh"},"content":"D | 0 | return book | today","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"jieqiboh":6}},{"path":"src/main/java/duke/Dates.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jieqiboh"},"content":"package duke;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"jieqiboh"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"jieqiboh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"jieqiboh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"jieqiboh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"jieqiboh"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"jieqiboh"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"jieqiboh"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"jieqiboh"},"content":" * Dates class handles validation and formatting of strings in input and database format.","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"jieqiboh"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"jieqiboh"},"content":"public class Dates {","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"jieqiboh"},"content":"    // Looks for pattern \"dd/MM/yyyy HHmm\", used for input purposes","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"jieqiboh"},"content":"    static final Pattern DATE_INPUT_PATTERN \u003d Pattern.compile(\"^(0?[1-9]|[12][0-9]|3[01])/(0?[1-9]|1[0-2])/\"","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"jieqiboh"},"content":"            + \"(\\\\d{4}) (\\\\d{4}$)\");","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"jieqiboh"},"content":"    // Looks for pattern \"dd Month yyyy HH:mm\", used for storing in db and output purposes","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"jieqiboh"},"content":"    static final Pattern DATE_DB_PATTERN \u003d Pattern.compile(\"\\\\d{1,2} \"","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"jieqiboh"},"content":"            + \"(January|February|March|April|May|June|July|August|September|October|November|December)\"","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"jieqiboh"},"content":"            + \" \\\\d{4} \\\\d{2}:\\\\d{2}\");","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"jieqiboh"},"content":"    // Used for parsing datetime string in input format, to a datetime object","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"jieqiboh"},"content":"    static final DateTimeFormatter DATE_INPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"jieqiboh"},"content":"    // Used for parsing a datetime string in db format, to a datetime object","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"jieqiboh"},"content":"    static final DateTimeFormatter DATE_DB_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd MMMM yyyy HH:mm\");","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"jieqiboh"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"jieqiboh"},"content":"     * Validates an input string and returns true if it matches.","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"jieqiboh"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"jieqiboh"},"content":"     * @param date is the date in \"dd/MM/yyyy HHmm\" format.","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"jieqiboh"},"content":"     * @return boolean if it matches.","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"jieqiboh"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"jieqiboh"},"content":"    public static boolean isValidInputDate(String date) {","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"jieqiboh"},"content":"        Matcher matcher \u003d Dates.DATE_INPUT_PATTERN.matcher(date);","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"jieqiboh"},"content":"        return matcher.matches();","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"jieqiboh"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"jieqiboh"},"content":"     * Checks that the db string date matches the db date pattern.","lastModifiedDate":"2024-02-06"},{"lineNumber":42,"author":{"gitId":"jieqiboh"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"jieqiboh"},"content":"     * @param date is the date in \"dd Month yyyy HH:mm\" format.","lastModifiedDate":"2024-02-06"},{"lineNumber":44,"author":{"gitId":"jieqiboh"},"content":"     * @return True if the date String matches the pattern.","lastModifiedDate":"2024-02-06"},{"lineNumber":45,"author":{"gitId":"jieqiboh"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"jieqiboh"},"content":"    public static boolean isValidDbDate(String date) {","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"jieqiboh"},"content":"        Matcher matcher \u003d DATE_DB_PATTERN.matcher(date);","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"jieqiboh"},"content":"        return matcher.matches();","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":51,"author":{"gitId":"jieqiboh"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"jieqiboh"},"content":"     * Creates a datetime object, using the input string formatter.","lastModifiedDate":"2024-02-06"},{"lineNumber":53,"author":{"gitId":"jieqiboh"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"jieqiboh"},"content":"     * @param date which is a string that has a valid input pattern.","lastModifiedDate":"2024-02-06"},{"lineNumber":55,"author":{"gitId":"jieqiboh"},"content":"     * @return LocalDateTime class based on the date String.","lastModifiedDate":"2024-02-06"},{"lineNumber":56,"author":{"gitId":"jieqiboh"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":57,"author":{"gitId":"jieqiboh"},"content":"    public static LocalDateTime inputStr2DateTime(String date) {","lastModifiedDate":"2024-01-27"},{"lineNumber":58,"author":{"gitId":"jieqiboh"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":59,"author":{"gitId":"jieqiboh"},"content":"            return LocalDateTime.parse(date, DATE_INPUT_FORMATTER);","lastModifiedDate":"2024-01-27"},{"lineNumber":60,"author":{"gitId":"jieqiboh"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":61,"author":{"gitId":"jieqiboh"},"content":"            System.out.println(\"Could not parse date\" + e.getMessage());","lastModifiedDate":"2024-01-27"},{"lineNumber":62,"author":{"gitId":"jieqiboh"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":63,"author":{"gitId":"jieqiboh"},"content":"        return null;","lastModifiedDate":"2024-01-27"},{"lineNumber":64,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":65,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":66,"author":{"gitId":"jieqiboh"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":67,"author":{"gitId":"jieqiboh"},"content":"     * Creates a datetime object, using the db string formatter.","lastModifiedDate":"2024-02-06"},{"lineNumber":68,"author":{"gitId":"jieqiboh"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":69,"author":{"gitId":"jieqiboh"},"content":"     * @param date which is a string that has a valid db pattern.","lastModifiedDate":"2024-02-06"},{"lineNumber":70,"author":{"gitId":"jieqiboh"},"content":"     * @return LocalDateTime class based on the date String.","lastModifiedDate":"2024-02-06"},{"lineNumber":71,"author":{"gitId":"jieqiboh"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":72,"author":{"gitId":"jieqiboh"},"content":"    public static LocalDateTime dbStr2DateTime(String date) {","lastModifiedDate":"2024-01-27"},{"lineNumber":73,"author":{"gitId":"jieqiboh"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":74,"author":{"gitId":"jieqiboh"},"content":"            return LocalDateTime.parse(date, DATE_DB_FORMATTER);","lastModifiedDate":"2024-01-27"},{"lineNumber":75,"author":{"gitId":"jieqiboh"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":76,"author":{"gitId":"jieqiboh"},"content":"            System.out.println(\"Could not parse date\" + e.getMessage());","lastModifiedDate":"2024-01-27"},{"lineNumber":77,"author":{"gitId":"jieqiboh"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":78,"author":{"gitId":"jieqiboh"},"content":"        return null;","lastModifiedDate":"2024-01-27"},{"lineNumber":79,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":80,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":81,"author":{"gitId":"jieqiboh"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":82,"author":{"gitId":"jieqiboh"},"content":"     * Converts a datetime object to its database string representation.","lastModifiedDate":"2024-02-06"},{"lineNumber":83,"author":{"gitId":"jieqiboh"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":84,"author":{"gitId":"jieqiboh"},"content":"     * @param datetime object","lastModifiedDate":"2024-01-28"},{"lineNumber":85,"author":{"gitId":"jieqiboh"},"content":"     * @return String representation for database dates.","lastModifiedDate":"2024-02-06"},{"lineNumber":86,"author":{"gitId":"jieqiboh"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":87,"author":{"gitId":"jieqiboh"},"content":"    public static String dateTime2DbStr(LocalDateTime datetime) {","lastModifiedDate":"2024-01-27"},{"lineNumber":88,"author":{"gitId":"jieqiboh"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":89,"author":{"gitId":"jieqiboh"},"content":"            return datetime.format(Dates.DATE_DB_FORMATTER);","lastModifiedDate":"2024-01-27"},{"lineNumber":90,"author":{"gitId":"jieqiboh"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":91,"author":{"gitId":"jieqiboh"},"content":"            System.out.println(\"Failed to format datetime: \" + e.getMessage());","lastModifiedDate":"2024-01-27"},{"lineNumber":92,"author":{"gitId":"jieqiboh"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":93,"author":{"gitId":"jieqiboh"},"content":"        return null;","lastModifiedDate":"2024-01-27"},{"lineNumber":94,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":95,"author":{"gitId":"jieqiboh"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"jieqiboh":95}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jieqiboh"},"content":"package duke;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"jieqiboh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"jieqiboh"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"jieqiboh"},"content":" * Deadline is a type of task with a by field that denotes by when it has to be completed.","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"jieqiboh"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"jieqiboh"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"jieqiboh"},"content":"    protected String by;","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"jieqiboh"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"jieqiboh"},"content":"     * Default constructor, isDone set to false.","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"jieqiboh"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"jieqiboh"},"content":"     * @param description of Deadline","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"jieqiboh"},"content":"     * @param by is the end of the deadline","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"jieqiboh"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"jieqiboh"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"jieqiboh"},"content":"        super(description);","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"jieqiboh"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"jieqiboh"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"jieqiboh"},"content":"     * Overloaded constructor, isDone can be set.","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"jieqiboh"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"jieqiboh"},"content":"     * @param description of Deadline","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"jieqiboh"},"content":"     * @param isDone sets the completion status of Deadline","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"jieqiboh"},"content":"     * @param by is the end of the deadline","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"jieqiboh"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"jieqiboh"},"content":"    public Deadline(String description, Boolean isDone, String by) {","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"jieqiboh"},"content":"        super(description, isDone);","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"jieqiboh"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"jieqiboh"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"jieqiboh"},"content":"     * Overloaded constructor.","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"jieqiboh"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"jieqiboh"},"content":"     * @param description of Deadline","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"jieqiboh"},"content":"     * @param by is the end of the deadline","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"jieqiboh"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"jieqiboh"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"jieqiboh"},"content":"        super(description);","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"jieqiboh"},"content":"        this.by \u003d Dates.dateTime2DbStr(by);","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":45,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"jieqiboh"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":47,"author":{"gitId":"jieqiboh"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":48,"author":{"gitId":"jieqiboh"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2024-01-23"},{"lineNumber":49,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":50,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":51,"author":{"gitId":"jieqiboh"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"jieqiboh"},"content":"     * Converts the database representation of Deadline to a Deadline Task.","lastModifiedDate":"2024-02-06"},{"lineNumber":53,"author":{"gitId":"jieqiboh"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"jieqiboh"},"content":"     * @param dbDeadline the string rep of Deadline in the database.","lastModifiedDate":"2024-02-06"},{"lineNumber":55,"author":{"gitId":"jieqiboh"},"content":"     * @return Task the Deadline Task object","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"jieqiboh"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":57,"author":{"gitId":"jieqiboh"},"content":"    public static Deadline db2Deadline(String dbDeadline) {","lastModifiedDate":"2024-01-27"},{"lineNumber":58,"author":{"gitId":"jieqiboh"},"content":"        // D | 0 | return book | June 6th","lastModifiedDate":"2024-01-27"},{"lineNumber":59,"author":{"gitId":"jieqiboh"},"content":"        String[] params \u003d dbDeadline.split(\" \\\\| \");","lastModifiedDate":"2024-01-27"},{"lineNumber":60,"author":{"gitId":"jieqiboh"},"content":"        Boolean isDone \u003d params[1].equals(\"1\") ? true : false; // if \"1\", means isDone","lastModifiedDate":"2024-01-27"},{"lineNumber":61,"author":{"gitId":"jieqiboh"},"content":"        String desc \u003d params[2];","lastModifiedDate":"2024-01-27"},{"lineNumber":62,"author":{"gitId":"jieqiboh"},"content":"        String by \u003d params[3];","lastModifiedDate":"2024-01-27"},{"lineNumber":63,"author":{"gitId":"jieqiboh"},"content":"        return new Deadline(desc, isDone, by);","lastModifiedDate":"2024-01-27"},{"lineNumber":64,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":65,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":66,"author":{"gitId":"jieqiboh"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":67,"author":{"gitId":"jieqiboh"},"content":"     * Converts a Deadline Task to the database representation of Deadline.","lastModifiedDate":"2024-02-06"},{"lineNumber":68,"author":{"gitId":"jieqiboh"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":69,"author":{"gitId":"jieqiboh"},"content":"     * @param deadlineTask the Deadline Task object","lastModifiedDate":"2024-01-28"},{"lineNumber":70,"author":{"gitId":"jieqiboh"},"content":"     * @return Task the string rep of Deadline in the database","lastModifiedDate":"2024-01-28"},{"lineNumber":71,"author":{"gitId":"jieqiboh"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":72,"author":{"gitId":"jieqiboh"},"content":"    public static String deadline2Db(Deadline deadlineTask) {","lastModifiedDate":"2024-01-27"},{"lineNumber":73,"author":{"gitId":"jieqiboh"},"content":"        // D | 0 | return book | June 6th","lastModifiedDate":"2024-01-27"},{"lineNumber":74,"author":{"gitId":"jieqiboh"},"content":"        String done \u003d deadlineTask.isDone ? \"1\" : \"0\";","lastModifiedDate":"2024-01-27"},{"lineNumber":75,"author":{"gitId":"jieqiboh"},"content":"        String desc \u003d deadlineTask.description;","lastModifiedDate":"2024-01-27"},{"lineNumber":76,"author":{"gitId":"jieqiboh"},"content":"        String by \u003d deadlineTask.by;","lastModifiedDate":"2024-01-27"},{"lineNumber":77,"author":{"gitId":"jieqiboh"},"content":"        return \"D\" + \" | \" + done + \" | \" + desc + \" | \" + by;","lastModifiedDate":"2024-01-27"},{"lineNumber":78,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":79,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":80,"author":{"gitId":"jieqiboh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-27"},{"lineNumber":81,"author":{"gitId":"jieqiboh"},"content":"        String dbDeadline \u003d \"D | 0 | return book | June 6th\";","lastModifiedDate":"2024-01-27"},{"lineNumber":82,"author":{"gitId":"jieqiboh"},"content":"        Deadline deadlineTask \u003d Deadline.db2Deadline(dbDeadline);","lastModifiedDate":"2024-01-27"},{"lineNumber":83,"author":{"gitId":"jieqiboh"},"content":"        deadlineTask.markAsDone();","lastModifiedDate":"2024-01-27"},{"lineNumber":84,"author":{"gitId":"jieqiboh"},"content":"        System.out.println(deadlineTask);","lastModifiedDate":"2024-01-27"},{"lineNumber":85,"author":{"gitId":"jieqiboh"},"content":"        System.out.println(Deadline.deadline2Db(deadlineTask));","lastModifiedDate":"2024-01-27"},{"lineNumber":86,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":87,"author":{"gitId":"jieqiboh"},"content":"        // Test creating a deadline with valid date","lastModifiedDate":"2024-01-27"},{"lineNumber":88,"author":{"gitId":"jieqiboh"},"content":"        String desc \u003d \"Buy Bread\";","lastModifiedDate":"2024-01-27"},{"lineNumber":89,"author":{"gitId":"jieqiboh"},"content":"        String validInputDate1 \u003d \"15/01/2023 1430\";","lastModifiedDate":"2024-01-27"},{"lineNumber":90,"author":{"gitId":"jieqiboh"},"content":"        if (Dates.isValidInputDate(validInputDate1)) {","lastModifiedDate":"2024-01-27"},{"lineNumber":91,"author":{"gitId":"jieqiboh"},"content":"            LocalDateTime validDate1 \u003d Dates.inputStr2DateTime(validInputDate1);","lastModifiedDate":"2024-01-27"},{"lineNumber":92,"author":{"gitId":"jieqiboh"},"content":"            Deadline d \u003d new Deadline(desc, validDate1); // Create date object","lastModifiedDate":"2024-01-27"},{"lineNumber":93,"author":{"gitId":"jieqiboh"},"content":"            d.markAsDone();","lastModifiedDate":"2024-01-27"},{"lineNumber":94,"author":{"gitId":"jieqiboh"},"content":"            System.out.println(Deadline.deadline2Db(d));","lastModifiedDate":"2024-01-27"},{"lineNumber":95,"author":{"gitId":"jieqiboh"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":96,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":97,"author":{"gitId":"jieqiboh"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"jieqiboh":97}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jieqiboh"},"content":"package duke;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"jieqiboh"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"jieqiboh"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"jieqiboh"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"jieqiboh"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"jieqiboh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"jieqiboh"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"jieqiboh"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"jieqiboh"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"jieqiboh"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"jieqiboh"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"jieqiboh"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"jieqiboh"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"jieqiboh"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"jieqiboh"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"jieqiboh"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"jieqiboh"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label.","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"jieqiboh"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"jieqiboh"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"jieqiboh"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"jieqiboh"},"content":"    @FXML","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"jieqiboh"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"jieqiboh"},"content":"    @FXML","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"jieqiboh"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"jieqiboh"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"jieqiboh"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"jieqiboh"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"jieqiboh"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"jieqiboh"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"jieqiboh"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"jieqiboh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"jieqiboh"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"jieqiboh"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"jieqiboh"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"jieqiboh"},"content":"        final Circle clip \u003d new Circle(50, 50, 50);","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"jieqiboh"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"jieqiboh"},"content":"        displayPicture.setClip(clip);","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"jieqiboh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"jieqiboh"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"jieqiboh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"jieqiboh"},"content":"    private void flip() {","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"jieqiboh"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"jieqiboh"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"jieqiboh"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"jieqiboh"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"jieqiboh"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"jieqiboh"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"jieqiboh"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"jieqiboh"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"jieqiboh"},"content":"        db.flip();","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"jieqiboh"},"content":"        return db;","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"jieqiboh"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"jieqiboh":64}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jieqiboh"},"content":"package duke;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"jieqiboh"},"content":"import java.io.OutputStream;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"jieqiboh"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"jieqiboh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"jieqiboh"},"content":"import java.util.List;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"jieqiboh"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"jieqiboh"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"jieqiboh"},"content":" * Duke is a simple task manager app","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"jieqiboh"},"content":" * The class does the initial setup for components for the main application","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"jieqiboh"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"jieqiboh"},"content":"    //    public static final String DB_PATH \u003d \"../data/duke.txt\"; // uncommment for runtest.sh","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"jieqiboh"},"content":"    public static final String DB_PATH \u003d \"data/duke.txt\";","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"jieqiboh"},"content":"    private Storage storage;","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"jieqiboh"},"content":"    private TaskList myTasks;","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"jieqiboh"},"content":"    private Ui ui;","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"jieqiboh"},"content":"    private Parser parser;","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"jieqiboh"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"jieqiboh"},"content":"     * Initialises a Duke instance, and loads tasks and components before starting up the app","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"jieqiboh"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"jieqiboh"},"content":"    public Duke() {","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"jieqiboh"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"jieqiboh"},"content":"        storage \u003d new Storage(DB_PATH);","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"jieqiboh"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"jieqiboh"},"content":"            myTasks \u003d new TaskList(storage.load());","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"jieqiboh"},"content":"            parser \u003d new Parser(new Scanner(System.in), this.myTasks);","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"jieqiboh"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"jieqiboh"},"content":"            ui.showLoadingError();","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"jieqiboh"},"content":"            myTasks \u003d new TaskList();","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"jieqiboh"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"jieqiboh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"jieqiboh"},"content":"     * Given a user input string, invokes the parser and returns the output in the UI.","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"jieqiboh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"jieqiboh"},"content":"    String getResponse(String input) {","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"jieqiboh"},"content":"        // Create a StringBuilder to hold the output","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"jieqiboh"},"content":"        StringBuilder outputBuilder \u003d new StringBuilder();","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"jieqiboh"},"content":"        // Create a PrintStream that writes to the StringBuilder","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"jieqiboh"},"content":"        PrintStream ps \u003d new PrintStream(new OutputStream() {","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"jieqiboh"},"content":"            @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"jieqiboh"},"content":"            public void write(int b) {","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"jieqiboh"},"content":"                outputBuilder.append((char) b);","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"jieqiboh"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"jieqiboh"},"content":"        });","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"jieqiboh"},"content":"        // Save the original System.out","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"jieqiboh"},"content":"        PrintStream prev \u003d System.out;","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"jieqiboh"},"content":"        // Set the System.out to the custom PrintStream","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"jieqiboh"},"content":"        System.setOut(ps);","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"jieqiboh"},"content":"        // process the user input","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"jieqiboh"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"jieqiboh"},"content":"            this.parser.processCmd(input);","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"jieqiboh"},"content":"            this.save();","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"jieqiboh"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"jieqiboh"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"jieqiboh"},"content":"        } finally {","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"jieqiboh"},"content":"            // Restore the original System.out","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"jieqiboh"},"content":"            System.setOut(prev);","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"jieqiboh"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"jieqiboh"},"content":"        // Return the captured output","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"jieqiboh"},"content":"        return outputBuilder.toString();","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"jieqiboh"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":71,"author":{"gitId":"jieqiboh"},"content":"     * Saves the current tasklist to the hard drive.","lastModifiedDate":"2024-02-06"},{"lineNumber":72,"author":{"gitId":"jieqiboh"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":73,"author":{"gitId":"jieqiboh"},"content":"    private void save() {","lastModifiedDate":"2024-01-28"},{"lineNumber":74,"author":{"gitId":"jieqiboh"},"content":"        List\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-28"},{"lineNumber":75,"author":{"gitId":"jieqiboh"},"content":"        for (Task t : this.myTasks.taskList) {","lastModifiedDate":"2024-01-28"},{"lineNumber":76,"author":{"gitId":"jieqiboh"},"content":"            String stringTask \u003d TaskList.task2Db(t);","lastModifiedDate":"2024-01-28"},{"lineNumber":77,"author":{"gitId":"jieqiboh"},"content":"            lines.add(stringTask);","lastModifiedDate":"2024-01-28"},{"lineNumber":78,"author":{"gitId":"jieqiboh"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":79,"author":{"gitId":"jieqiboh"},"content":"        this.storage.writeLinesToFile(lines);","lastModifiedDate":"2024-01-28"},{"lineNumber":80,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":81,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":82,"author":{"gitId":"jieqiboh"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"jieqiboh"},"content":"     * Starts up the bot and sets up the Parser and UI.","lastModifiedDate":"2024-02-06"},{"lineNumber":84,"author":{"gitId":"jieqiboh"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"jieqiboh"},"content":"    public void run() {","lastModifiedDate":"2024-01-28"},{"lineNumber":86,"author":{"gitId":"jieqiboh"},"content":"        String greeting \u003d \"____________________________________________________________\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"jieqiboh"},"content":"                + \" Hello! I\u0027m steve\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"jieqiboh"},"content":"                + \" What can I do for you?\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"jieqiboh"},"content":"                + \"____________________________________________________________\";","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":91,"author":{"gitId":"jieqiboh"},"content":"        String goodbye \u003d \" Bye. Hope to see you again soon!\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":92,"author":{"gitId":"jieqiboh"},"content":"                + \"____________________________________________________________\";","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"jieqiboh"},"content":"        ui.greet();","lastModifiedDate":"2024-01-28"},{"lineNumber":94,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":95,"author":{"gitId":"jieqiboh"},"content":"        Scanner scanner \u003d new Scanner(System.in); // Create a Scanner object","lastModifiedDate":"2024-01-22"},{"lineNumber":96,"author":{"gitId":"jieqiboh"},"content":"        String line \u003d scanner.nextLine(); // Get first input","lastModifiedDate":"2024-01-23"},{"lineNumber":97,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":98,"author":{"gitId":"jieqiboh"},"content":"        while (this.parser.processCmd(line)) {","lastModifiedDate":"2024-02-02"},{"lineNumber":99,"author":{"gitId":"jieqiboh"},"content":"            line \u003d scanner.nextLine();","lastModifiedDate":"2024-01-28"},{"lineNumber":100,"author":{"gitId":"jieqiboh"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":101,"author":{"gitId":"jieqiboh"},"content":"        // save the tasks from myTasks to duke.Storage","lastModifiedDate":"2024-01-28"},{"lineNumber":102,"author":{"gitId":"jieqiboh"},"content":"        this.save();","lastModifiedDate":"2024-01-28"},{"lineNumber":103,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":104,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":105,"author":{"gitId":"jieqiboh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-28"},{"lineNumber":106,"author":{"gitId":"jieqiboh"},"content":"        new Duke().run();","lastModifiedDate":"2024-01-31"},{"lineNumber":107,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":108,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"jieqiboh":107,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jieqiboh"},"content":"package duke;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"jieqiboh"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"jieqiboh"},"content":" * Constructs Exceptions that are specific to the Duke bot.","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"jieqiboh"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"jieqiboh"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"jieqiboh"},"content":"    // unknown command","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"jieqiboh"},"content":"    //  todo - no description","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"jieqiboh"},"content":"    // event - no description, no from, no to","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"jieqiboh"},"content":"    // deadline - no description, no by","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"jieqiboh"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"jieqiboh"},"content":"        super(message);","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"jieqiboh"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"jieqiboh"},"content":"     * An Exception for when an unknown command is given to the bot.","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"jieqiboh"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"jieqiboh"},"content":"    public static class UnknownCommandException extends DukeException {","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"jieqiboh"},"content":"        public UnknownCommandException() {","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"jieqiboh"},"content":"            super(\"Unknown command. Please enter a valid command :3\");","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"jieqiboh"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"jieqiboh"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"jieqiboh"},"content":"     * An Exception for when the arguments given to the find command are invalid.","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"jieqiboh"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"jieqiboh"},"content":"    public static class FindParamsException extends DukeException {","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"jieqiboh"},"content":"        public FindParamsException() {","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"jieqiboh"},"content":"            super(\"A string keyword is expected for a find command :3\");","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"jieqiboh"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"jieqiboh"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"jieqiboh"},"content":"     * An Exception for when the arguments given to the mark command are invalid.","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"jieqiboh"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"jieqiboh"},"content":"    public static class MarkParamsException extends DukeException {","lastModifiedDate":"2024-01-23"},{"lineNumber":38,"author":{"gitId":"jieqiboh"},"content":"        public MarkParamsException() {","lastModifiedDate":"2024-01-23"},{"lineNumber":39,"author":{"gitId":"jieqiboh"},"content":"            super(\"An integer argument is expected for a mark or unmark command :3\");","lastModifiedDate":"2024-01-23"},{"lineNumber":40,"author":{"gitId":"jieqiboh"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":41,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":42,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":43,"author":{"gitId":"jieqiboh"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"jieqiboh"},"content":"     * An Exception for when the arguments given to the delete command are invalid.","lastModifiedDate":"2024-02-06"},{"lineNumber":45,"author":{"gitId":"jieqiboh"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"jieqiboh"},"content":"    public static class DeleteParamsException extends DukeException {","lastModifiedDate":"2024-01-23"},{"lineNumber":47,"author":{"gitId":"jieqiboh"},"content":"        public DeleteParamsException() {","lastModifiedDate":"2024-01-23"},{"lineNumber":48,"author":{"gitId":"jieqiboh"},"content":"            super(\"An integer argument is expected for a delete command.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":49,"author":{"gitId":"jieqiboh"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":50,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":51,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":52,"author":{"gitId":"jieqiboh"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"jieqiboh"},"content":"     * An Exception for when the arguments given to the todo command are invalid or missing.","lastModifiedDate":"2024-02-06"},{"lineNumber":54,"author":{"gitId":"jieqiboh"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"jieqiboh"},"content":"    public static class TodoDescriptionMissingException extends DukeException {","lastModifiedDate":"2024-01-23"},{"lineNumber":56,"author":{"gitId":"jieqiboh"},"content":"        public TodoDescriptionMissingException() {","lastModifiedDate":"2024-01-23"},{"lineNumber":57,"author":{"gitId":"jieqiboh"},"content":"            super(\"The description for a todo task cannot be empty :3\");","lastModifiedDate":"2024-01-23"},{"lineNumber":58,"author":{"gitId":"jieqiboh"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":59,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":60,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":61,"author":{"gitId":"jieqiboh"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"jieqiboh"},"content":"     * An Exception for when the arguments given to the event command are invalid or missing.","lastModifiedDate":"2024-02-06"},{"lineNumber":63,"author":{"gitId":"jieqiboh"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"jieqiboh"},"content":"    public static class EventDetailsMissingException extends DukeException {","lastModifiedDate":"2024-01-23"},{"lineNumber":65,"author":{"gitId":"jieqiboh"},"content":"        public EventDetailsMissingException() {","lastModifiedDate":"2024-01-23"},{"lineNumber":66,"author":{"gitId":"jieqiboh"},"content":"            super(\"An event task must have a description, a \u0027from\u0027 time, and a \u0027to\u0027 time :3\");","lastModifiedDate":"2024-01-23"},{"lineNumber":67,"author":{"gitId":"jieqiboh"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":68,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":69,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":70,"author":{"gitId":"jieqiboh"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"jieqiboh"},"content":"     * An Exception for when the arguments given to the deadline command are invalid or missing.","lastModifiedDate":"2024-02-06"},{"lineNumber":72,"author":{"gitId":"jieqiboh"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"jieqiboh"},"content":"    public static class DeadlineDetailsMissingException extends DukeException {","lastModifiedDate":"2024-01-23"},{"lineNumber":74,"author":{"gitId":"jieqiboh"},"content":"        public DeadlineDetailsMissingException() {","lastModifiedDate":"2024-01-23"},{"lineNumber":75,"author":{"gitId":"jieqiboh"},"content":"            super(\"A deadline task must have a description and a \u0027by\u0027 time :3\");","lastModifiedDate":"2024-01-23"},{"lineNumber":76,"author":{"gitId":"jieqiboh"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":77,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":78,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":79,"author":{"gitId":"jieqiboh"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"jieqiboh"},"content":"     * An Exception for getTask where index is wrong, or the entry is not of type T, E, D.","lastModifiedDate":"2024-02-06"},{"lineNumber":81,"author":{"gitId":"jieqiboh"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"jieqiboh"},"content":"    public static class TaskNotFoundException extends DukeException {","lastModifiedDate":"2024-01-28"},{"lineNumber":83,"author":{"gitId":"jieqiboh"},"content":"        public TaskNotFoundException() {","lastModifiedDate":"2024-01-28"},{"lineNumber":84,"author":{"gitId":"jieqiboh"},"content":"            super(\"Could not find task!\");","lastModifiedDate":"2024-01-28"},{"lineNumber":85,"author":{"gitId":"jieqiboh"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":86,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":87,"author":{"gitId":"jieqiboh"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"jieqiboh":87}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jieqiboh"},"content":"package duke;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"jieqiboh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"jieqiboh"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"jieqiboh"},"content":" * Event class represents a task with a time range.","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"jieqiboh"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"jieqiboh"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"jieqiboh"},"content":"    protected String from;","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"jieqiboh"},"content":"    protected String to;","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"jieqiboh"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"jieqiboh"},"content":"     * Default constructor, isDone set to false.","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"jieqiboh"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"jieqiboh"},"content":"     * @param description of Event","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"jieqiboh"},"content":"     * @param from is the start time of event","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"jieqiboh"},"content":"     * @param to is the end time of event","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"jieqiboh"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"jieqiboh"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"jieqiboh"},"content":"        super(description);","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"jieqiboh"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"jieqiboh"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"jieqiboh"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"jieqiboh"},"content":"     * Overloaded constructor, isDone can be set.","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"jieqiboh"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"jieqiboh"},"content":"     * @param description of Event","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"jieqiboh"},"content":"     * @param isDone completion status of Event","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"jieqiboh"},"content":"     * @param from is the start time of event","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"jieqiboh"},"content":"     * @param to is the end time of event","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"jieqiboh"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"jieqiboh"},"content":"    public Event(String description, Boolean isDone, String from, String to) {","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"jieqiboh"},"content":"        super(description, isDone);","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"jieqiboh"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"jieqiboh"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"jieqiboh"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"jieqiboh"},"content":"     * Overloaded constructor.","lastModifiedDate":"2024-02-06"},{"lineNumber":42,"author":{"gitId":"jieqiboh"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":43,"author":{"gitId":"jieqiboh"},"content":"     * @param description of Event","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"jieqiboh"},"content":"     * @param from is the start time of event","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"jieqiboh"},"content":"     * @param to is the end time of event","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"jieqiboh"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"jieqiboh"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"jieqiboh"},"content":"        super(description);","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"jieqiboh"},"content":"        this.from \u003d Dates.dateTime2DbStr(from);","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"jieqiboh"},"content":"        this.to \u003d Dates.dateTime2DbStr(to);","lastModifiedDate":"2024-01-27"},{"lineNumber":51,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"jieqiboh"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":54,"author":{"gitId":"jieqiboh"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":55,"author":{"gitId":"jieqiboh"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2024-01-23"},{"lineNumber":56,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":57,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":58,"author":{"gitId":"jieqiboh"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":59,"author":{"gitId":"jieqiboh"},"content":"     * Converts the database representation of Event to a Event Task.","lastModifiedDate":"2024-02-06"},{"lineNumber":60,"author":{"gitId":"jieqiboh"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":61,"author":{"gitId":"jieqiboh"},"content":"     * @param dbEvent the string rep of Event in the database","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"jieqiboh"},"content":"     * @return Task the Event Task object","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"jieqiboh"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":64,"author":{"gitId":"jieqiboh"},"content":"    public static Event db2Event(String dbEvent) {","lastModifiedDate":"2024-01-27"},{"lineNumber":65,"author":{"gitId":"jieqiboh"},"content":"        // E | 0 | project meeting | Aug 6th 2 | 4pm","lastModifiedDate":"2024-01-27"},{"lineNumber":66,"author":{"gitId":"jieqiboh"},"content":"        String[] params \u003d dbEvent.split(\" \\\\| \");","lastModifiedDate":"2024-01-27"},{"lineNumber":67,"author":{"gitId":"jieqiboh"},"content":"        Boolean isDone \u003d params[1].equals(\"1\") ? true : false; // if \"1\", means isDone","lastModifiedDate":"2024-01-27"},{"lineNumber":68,"author":{"gitId":"jieqiboh"},"content":"        String desc \u003d params[2];","lastModifiedDate":"2024-01-27"},{"lineNumber":69,"author":{"gitId":"jieqiboh"},"content":"        String from \u003d params[3];","lastModifiedDate":"2024-01-27"},{"lineNumber":70,"author":{"gitId":"jieqiboh"},"content":"        String to \u003d params[4];","lastModifiedDate":"2024-01-27"},{"lineNumber":71,"author":{"gitId":"jieqiboh"},"content":"        return new Event(desc, isDone, from, to);","lastModifiedDate":"2024-01-27"},{"lineNumber":72,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":73,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":74,"author":{"gitId":"jieqiboh"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":75,"author":{"gitId":"jieqiboh"},"content":"     * Converts a Event Task to the database representation of Event.","lastModifiedDate":"2024-02-06"},{"lineNumber":76,"author":{"gitId":"jieqiboh"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":77,"author":{"gitId":"jieqiboh"},"content":"     * @param eventTask the Event Task object","lastModifiedDate":"2024-01-28"},{"lineNumber":78,"author":{"gitId":"jieqiboh"},"content":"     * @return Task the string rep of Event in the database","lastModifiedDate":"2024-01-28"},{"lineNumber":79,"author":{"gitId":"jieqiboh"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":80,"author":{"gitId":"jieqiboh"},"content":"    public static String event2Db(Event eventTask) {","lastModifiedDate":"2024-01-27"},{"lineNumber":81,"author":{"gitId":"jieqiboh"},"content":"        // E | 0 | project meeting | Aug 6th 2 | 4pm","lastModifiedDate":"2024-01-27"},{"lineNumber":82,"author":{"gitId":"jieqiboh"},"content":"        String done \u003d eventTask.isDone ? \"1\" : \"0\";","lastModifiedDate":"2024-01-27"},{"lineNumber":83,"author":{"gitId":"jieqiboh"},"content":"        String desc \u003d eventTask.description;","lastModifiedDate":"2024-01-27"},{"lineNumber":84,"author":{"gitId":"jieqiboh"},"content":"        String from \u003d eventTask.from;","lastModifiedDate":"2024-01-27"},{"lineNumber":85,"author":{"gitId":"jieqiboh"},"content":"        String to \u003d eventTask.to;","lastModifiedDate":"2024-01-27"},{"lineNumber":86,"author":{"gitId":"jieqiboh"},"content":"        return \"E\" + \" | \" + done + \" | \" + desc + \" | \" + from + \" | \" + to;","lastModifiedDate":"2024-01-27"},{"lineNumber":87,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":88,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":89,"author":{"gitId":"jieqiboh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-27"},{"lineNumber":90,"author":{"gitId":"jieqiboh"},"content":"        String dbEvent \u003d \"E | 0 | project meeting | Aug 6th 2 | 4pm\";","lastModifiedDate":"2024-01-27"},{"lineNumber":91,"author":{"gitId":"jieqiboh"},"content":"        Event eventTask \u003d Event.db2Event(dbEvent);","lastModifiedDate":"2024-01-27"},{"lineNumber":92,"author":{"gitId":"jieqiboh"},"content":"        eventTask.markAsDone();","lastModifiedDate":"2024-01-27"},{"lineNumber":93,"author":{"gitId":"jieqiboh"},"content":"        System.out.println(eventTask);","lastModifiedDate":"2024-01-27"},{"lineNumber":94,"author":{"gitId":"jieqiboh"},"content":"        System.out.println(Event.event2Db(eventTask));","lastModifiedDate":"2024-01-27"},{"lineNumber":95,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":96,"author":{"gitId":"jieqiboh"},"content":"        // Test creating an event with valid date","lastModifiedDate":"2024-01-27"},{"lineNumber":97,"author":{"gitId":"jieqiboh"},"content":"        String desc \u003d \"Buy Bread\";","lastModifiedDate":"2024-01-27"},{"lineNumber":98,"author":{"gitId":"jieqiboh"},"content":"        String validFromDate1 \u003d \"15/01/2023 1430\";","lastModifiedDate":"2024-01-27"},{"lineNumber":99,"author":{"gitId":"jieqiboh"},"content":"        String validToDate1 \u003d \"17/01/2023 2359\";","lastModifiedDate":"2024-01-27"},{"lineNumber":100,"author":{"gitId":"jieqiboh"},"content":"        if (Dates.isValidInputDate(validFromDate1) \u0026\u0026 Dates.isValidInputDate(validToDate1)) {","lastModifiedDate":"2024-01-27"},{"lineNumber":101,"author":{"gitId":"jieqiboh"},"content":"            LocalDateTime validFromDateObj1 \u003d Dates.inputStr2DateTime(validFromDate1);","lastModifiedDate":"2024-01-27"},{"lineNumber":102,"author":{"gitId":"jieqiboh"},"content":"            LocalDateTime validToDateObj1 \u003d Dates.inputStr2DateTime(validToDate1);","lastModifiedDate":"2024-01-27"},{"lineNumber":103,"author":{"gitId":"jieqiboh"},"content":"            Event e \u003d new Event(desc, validFromDateObj1, validToDateObj1); // Create date object","lastModifiedDate":"2024-01-27"},{"lineNumber":104,"author":{"gitId":"jieqiboh"},"content":"            e.markAsDone();","lastModifiedDate":"2024-01-27"},{"lineNumber":105,"author":{"gitId":"jieqiboh"},"content":"            System.out.println(Event.event2Db(e));","lastModifiedDate":"2024-01-27"},{"lineNumber":106,"author":{"gitId":"jieqiboh"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":107,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":108,"author":{"gitId":"jieqiboh"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"jieqiboh":108}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jieqiboh"},"content":"package duke;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"jieqiboh"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"jieqiboh"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"jieqiboh"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"jieqiboh"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"jieqiboh"},"content":"public class Launcher {","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"jieqiboh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"jieqiboh"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"jieqiboh"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"jieqiboh":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jieqiboh"},"content":"package duke;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"jieqiboh"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"jieqiboh"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"jieqiboh"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"jieqiboh"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"jieqiboh"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"jieqiboh"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"jieqiboh"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"jieqiboh"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"jieqiboh"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"jieqiboh"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"jieqiboh"},"content":"    private final Duke duke \u003d new Duke();","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"jieqiboh"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"jieqiboh"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"jieqiboh"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"jieqiboh"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"jieqiboh"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"jieqiboh"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"jieqiboh"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"jieqiboh"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"jieqiboh"},"content":"            stage.setTitle(\"steve\");","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"jieqiboh"},"content":"            stage.show();","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"jieqiboh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"jieqiboh"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"jieqiboh"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"jieqiboh"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"jieqiboh":32}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jieqiboh"},"content":"package duke;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"jieqiboh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"jieqiboh"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"jieqiboh"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"jieqiboh"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"jieqiboh"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"jieqiboh"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"jieqiboh"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"jieqiboh"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"jieqiboh"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"jieqiboh"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"jieqiboh"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"jieqiboh"},"content":"    public static final String USERIMGPATH \u003d \"/images/user.png\";","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"jieqiboh"},"content":"    public static final String STEVEIMGPATH \u003d \"/images/steve.png\";","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"jieqiboh"},"content":"    @FXML","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"jieqiboh"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"jieqiboh"},"content":"    @FXML","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"jieqiboh"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"jieqiboh"},"content":"    @FXML","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"jieqiboh"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"jieqiboh"},"content":"    @FXML","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"jieqiboh"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"jieqiboh"},"content":"    private Duke duke;","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"jieqiboh"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(USERIMGPATH));","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"jieqiboh"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(STEVEIMGPATH));","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"jieqiboh"},"content":"    @FXML","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"jieqiboh"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"jieqiboh"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"jieqiboh"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"jieqiboh"},"content":"        duke \u003d d;","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"jieqiboh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"jieqiboh"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"jieqiboh"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"jieqiboh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"jieqiboh"},"content":"    @FXML","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"jieqiboh"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"jieqiboh"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"jieqiboh"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"jieqiboh"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"jieqiboh"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"jieqiboh"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"jieqiboh"},"content":"        );","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"jieqiboh"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"jieqiboh"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"jieqiboh":54}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jieqiboh"},"content":"package duke;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"jieqiboh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"jieqiboh"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"jieqiboh"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"jieqiboh"},"content":" * Takes in and processes user input according to the available bot command.","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"jieqiboh"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"jieqiboh"},"content":"public class Parser {","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"jieqiboh"},"content":"    private TaskList myTasks;","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"jieqiboh"},"content":"    public Parser(Scanner scanner, TaskList myTasks) {","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"jieqiboh"},"content":"        this.myTasks \u003d myTasks;","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"jieqiboh"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"jieqiboh"},"content":"     * Processes a single command.","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"jieqiboh"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"jieqiboh"},"content":"     * @param command taken in by scanner","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"jieqiboh"},"content":"     * @return boolean that denotes whether to continue processing","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"jieqiboh"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"jieqiboh"},"content":"    public boolean processCmd(String command) {","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"jieqiboh"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"jieqiboh"},"content":"            String cmd \u003d command.split(\" \")[0];","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"jieqiboh"},"content":"            String params \u003d command.substring(cmd.length()).trim();","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"jieqiboh"},"content":"            switch (cmd) {","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"jieqiboh"},"content":"            case \"bye\":","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"jieqiboh"},"content":"                System.out.println(\"Goodbye!\");","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"jieqiboh"},"content":"                return false;","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"jieqiboh"},"content":"                // Fallthrough","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"jieqiboh"},"content":"            case \"list\":","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"jieqiboh"},"content":"                System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"jieqiboh"},"content":"                myTasks.printTasks();","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"jieqiboh"},"content":"                break;","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"jieqiboh"},"content":"            case \"find\":","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"jieqiboh"},"content":"                if (params.length() \u003d\u003d 0) {","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"jieqiboh"},"content":"                    throw new DukeException.FindParamsException();","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"jieqiboh"},"content":"                }","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"jieqiboh"},"content":"                String keyword \u003d params.trim();","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"jieqiboh"},"content":"                myTasks.findTasks(keyword);","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"jieqiboh"},"content":"                break;","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"jieqiboh"},"content":"            case \"mark\":","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"jieqiboh"},"content":"                if (params.length() \u003d\u003d 0) {","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"jieqiboh"},"content":"                    throw new DukeException.MarkParamsException();","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"jieqiboh"},"content":"                }","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"jieqiboh"},"content":"                int num \u003d Integer.valueOf(params);","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"jieqiboh"},"content":"                myTasks.markTask(num);","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"jieqiboh"},"content":"                Task t \u003d myTasks.getTask(num);","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"jieqiboh"},"content":"                System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"jieqiboh"},"content":"                System.out.println(t);","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"jieqiboh"},"content":"                break;","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"jieqiboh"},"content":"            case \"unmark\":","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"jieqiboh"},"content":"                if (params.length() \u003d\u003d 0) {","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"jieqiboh"},"content":"                    throw new DukeException.MarkParamsException();","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"jieqiboh"},"content":"                }","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"jieqiboh"},"content":"                num \u003d Integer.valueOf(params);","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"jieqiboh"},"content":"                myTasks.unmarkTask(num);","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"jieqiboh"},"content":"                t \u003d myTasks.getTask(num);","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"jieqiboh"},"content":"                System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"jieqiboh"},"content":"                System.out.println(t);","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"jieqiboh"},"content":"                break;","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"jieqiboh"},"content":"            case \"delete\":","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"jieqiboh"},"content":"                if (params.length() \u003d\u003d 0) {","lastModifiedDate":"2024-01-28"},{"lineNumber":66,"author":{"gitId":"jieqiboh"},"content":"                    throw new DukeException.DeleteParamsException();","lastModifiedDate":"2024-01-28"},{"lineNumber":67,"author":{"gitId":"jieqiboh"},"content":"                }","lastModifiedDate":"2024-01-28"},{"lineNumber":68,"author":{"gitId":"jieqiboh"},"content":"                num \u003d Integer.valueOf(params);","lastModifiedDate":"2024-01-28"},{"lineNumber":69,"author":{"gitId":"jieqiboh"},"content":"                Task toDelete \u003d myTasks.getTask(num);","lastModifiedDate":"2024-01-28"},{"lineNumber":70,"author":{"gitId":"jieqiboh"},"content":"                myTasks.deleteTask(num);","lastModifiedDate":"2024-01-28"},{"lineNumber":71,"author":{"gitId":"jieqiboh"},"content":"                System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-01-28"},{"lineNumber":72,"author":{"gitId":"jieqiboh"},"content":"                System.out.println(toDelete);","lastModifiedDate":"2024-01-28"},{"lineNumber":73,"author":{"gitId":"jieqiboh"},"content":"                System.out.println(\"Now you have \" + myTasks.size() + \" tasks in the list\");","lastModifiedDate":"2024-01-28"},{"lineNumber":74,"author":{"gitId":"jieqiboh"},"content":"                break;","lastModifiedDate":"2024-01-28"},{"lineNumber":75,"author":{"gitId":"jieqiboh"},"content":"            case \"todo\":","lastModifiedDate":"2024-01-28"},{"lineNumber":76,"author":{"gitId":"jieqiboh"},"content":"                if (params.length() \u003d\u003d 0) {","lastModifiedDate":"2024-01-28"},{"lineNumber":77,"author":{"gitId":"jieqiboh"},"content":"                    throw new DukeException.TodoDescriptionMissingException();","lastModifiedDate":"2024-01-28"},{"lineNumber":78,"author":{"gitId":"jieqiboh"},"content":"                }","lastModifiedDate":"2024-01-28"},{"lineNumber":79,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":80,"author":{"gitId":"jieqiboh"},"content":"                String desc \u003d params;","lastModifiedDate":"2024-01-28"},{"lineNumber":81,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":82,"author":{"gitId":"jieqiboh"},"content":"                Task newTask \u003d new Todo(desc);","lastModifiedDate":"2024-01-28"},{"lineNumber":83,"author":{"gitId":"jieqiboh"},"content":"                myTasks.addTask(newTask);","lastModifiedDate":"2024-01-28"},{"lineNumber":84,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":85,"author":{"gitId":"jieqiboh"},"content":"                System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-28"},{"lineNumber":86,"author":{"gitId":"jieqiboh"},"content":"                System.out.println(newTask);","lastModifiedDate":"2024-01-28"},{"lineNumber":87,"author":{"gitId":"jieqiboh"},"content":"                System.out.println(\"Now you have \" + myTasks.size() + \" tasks in the list\");","lastModifiedDate":"2024-01-28"},{"lineNumber":88,"author":{"gitId":"jieqiboh"},"content":"                break;","lastModifiedDate":"2024-01-28"},{"lineNumber":89,"author":{"gitId":"jieqiboh"},"content":"            case \"deadline\":","lastModifiedDate":"2024-01-28"},{"lineNumber":90,"author":{"gitId":"jieqiboh"},"content":"                if (!params.contains(\"/by\")) {","lastModifiedDate":"2024-01-28"},{"lineNumber":91,"author":{"gitId":"jieqiboh"},"content":"                    throw new DukeException.DeadlineDetailsMissingException();","lastModifiedDate":"2024-01-28"},{"lineNumber":92,"author":{"gitId":"jieqiboh"},"content":"                }","lastModifiedDate":"2024-01-28"},{"lineNumber":93,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":94,"author":{"gitId":"jieqiboh"},"content":"                desc \u003d params.split(\"/by\")[0].trim();","lastModifiedDate":"2024-01-28"},{"lineNumber":95,"author":{"gitId":"jieqiboh"},"content":"                String by \u003d params.split(\"/by\")[1].trim();","lastModifiedDate":"2024-01-28"},{"lineNumber":96,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":97,"author":{"gitId":"jieqiboh"},"content":"                // Check if by is in valid date format","lastModifiedDate":"2024-01-28"},{"lineNumber":98,"author":{"gitId":"jieqiboh"},"content":"                if (Dates.isValidInputDate(by)) {","lastModifiedDate":"2024-01-28"},{"lineNumber":99,"author":{"gitId":"jieqiboh"},"content":"                    LocalDateTime dateObj \u003d Dates.inputStr2DateTime(by);","lastModifiedDate":"2024-01-28"},{"lineNumber":100,"author":{"gitId":"jieqiboh"},"content":"                    newTask \u003d new Deadline(desc, dateObj); // Create date object","lastModifiedDate":"2024-01-28"},{"lineNumber":101,"author":{"gitId":"jieqiboh"},"content":"                } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":102,"author":{"gitId":"jieqiboh"},"content":"                    newTask \u003d new Deadline(desc, by);","lastModifiedDate":"2024-01-28"},{"lineNumber":103,"author":{"gitId":"jieqiboh"},"content":"                }","lastModifiedDate":"2024-01-28"},{"lineNumber":104,"author":{"gitId":"jieqiboh"},"content":"                myTasks.addTask(newTask);","lastModifiedDate":"2024-01-28"},{"lineNumber":105,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":106,"author":{"gitId":"jieqiboh"},"content":"                System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-28"},{"lineNumber":107,"author":{"gitId":"jieqiboh"},"content":"                System.out.println(newTask);","lastModifiedDate":"2024-01-28"},{"lineNumber":108,"author":{"gitId":"jieqiboh"},"content":"                System.out.println(\"Now you have \" + myTasks.size() + \" tasks in the list\");","lastModifiedDate":"2024-01-28"},{"lineNumber":109,"author":{"gitId":"jieqiboh"},"content":"                break;","lastModifiedDate":"2024-01-28"},{"lineNumber":110,"author":{"gitId":"jieqiboh"},"content":"            case \"event\":","lastModifiedDate":"2024-01-28"},{"lineNumber":111,"author":{"gitId":"jieqiboh"},"content":"                if (!params.contains(\"/from\") || !params.contains(\"/to\")) {","lastModifiedDate":"2024-01-28"},{"lineNumber":112,"author":{"gitId":"jieqiboh"},"content":"                    throw new DukeException.EventDetailsMissingException();","lastModifiedDate":"2024-01-28"},{"lineNumber":113,"author":{"gitId":"jieqiboh"},"content":"                }","lastModifiedDate":"2024-01-28"},{"lineNumber":114,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":115,"author":{"gitId":"jieqiboh"},"content":"                desc \u003d params.split(\"/from\")[0];","lastModifiedDate":"2024-01-28"},{"lineNumber":116,"author":{"gitId":"jieqiboh"},"content":"                String from \u003d params.split(\"/from\")[1].split(\"/to\")[0].trim();","lastModifiedDate":"2024-01-28"},{"lineNumber":117,"author":{"gitId":"jieqiboh"},"content":"                String to \u003d params.split(\"/to\")[1].trim();","lastModifiedDate":"2024-01-28"},{"lineNumber":118,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":119,"author":{"gitId":"jieqiboh"},"content":"                if (Dates.isValidInputDate(from) \u0026\u0026 Dates.isValidInputDate(to)) {","lastModifiedDate":"2024-01-28"},{"lineNumber":120,"author":{"gitId":"jieqiboh"},"content":"                    LocalDateTime dateObjFrom \u003d Dates.inputStr2DateTime(from);","lastModifiedDate":"2024-01-28"},{"lineNumber":121,"author":{"gitId":"jieqiboh"},"content":"                    LocalDateTime dateObjTo \u003d Dates.inputStr2DateTime(to);","lastModifiedDate":"2024-01-28"},{"lineNumber":122,"author":{"gitId":"jieqiboh"},"content":"                    newTask \u003d new Event(desc, dateObjFrom, dateObjTo); // Create date object","lastModifiedDate":"2024-01-28"},{"lineNumber":123,"author":{"gitId":"jieqiboh"},"content":"                } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":124,"author":{"gitId":"jieqiboh"},"content":"                    newTask \u003d new Event(desc, from, to);","lastModifiedDate":"2024-01-28"},{"lineNumber":125,"author":{"gitId":"jieqiboh"},"content":"                }","lastModifiedDate":"2024-01-28"},{"lineNumber":126,"author":{"gitId":"jieqiboh"},"content":"                myTasks.addTask(newTask);","lastModifiedDate":"2024-01-28"},{"lineNumber":127,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":128,"author":{"gitId":"jieqiboh"},"content":"                System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-28"},{"lineNumber":129,"author":{"gitId":"jieqiboh"},"content":"                System.out.println(newTask);","lastModifiedDate":"2024-01-28"},{"lineNumber":130,"author":{"gitId":"jieqiboh"},"content":"                System.out.println(\"Now you have \" + myTasks.size() + \" tasks in the list\");","lastModifiedDate":"2024-01-28"},{"lineNumber":131,"author":{"gitId":"jieqiboh"},"content":"                break;","lastModifiedDate":"2024-01-28"},{"lineNumber":132,"author":{"gitId":"jieqiboh"},"content":"            case \"clear\": // Clears the tasklist","lastModifiedDate":"2024-01-28"},{"lineNumber":133,"author":{"gitId":"jieqiboh"},"content":"                myTasks.taskList.clear();","lastModifiedDate":"2024-01-28"},{"lineNumber":134,"author":{"gitId":"jieqiboh"},"content":"                System.out.println(\"Got it. I\u0027ve cleared the database.\");","lastModifiedDate":"2024-01-28"},{"lineNumber":135,"author":{"gitId":"jieqiboh"},"content":"                break;","lastModifiedDate":"2024-01-28"},{"lineNumber":136,"author":{"gitId":"jieqiboh"},"content":"            default:","lastModifiedDate":"2024-01-28"},{"lineNumber":137,"author":{"gitId":"jieqiboh"},"content":"                throw new DukeException.UnknownCommandException();","lastModifiedDate":"2024-01-28"},{"lineNumber":138,"author":{"gitId":"jieqiboh"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":139,"author":{"gitId":"jieqiboh"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":140,"author":{"gitId":"jieqiboh"},"content":"            System.out.println(\"DukeException: \" + e.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":141,"author":{"gitId":"jieqiboh"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":142,"author":{"gitId":"jieqiboh"},"content":"            System.out.println(e);","lastModifiedDate":"2024-01-28"},{"lineNumber":143,"author":{"gitId":"jieqiboh"},"content":"            System.out.println(\"An unexpected error occurred.\");","lastModifiedDate":"2024-01-28"},{"lineNumber":144,"author":{"gitId":"jieqiboh"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":145,"author":{"gitId":"jieqiboh"},"content":"        return true;","lastModifiedDate":"2024-01-28"},{"lineNumber":146,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":147,"author":{"gitId":"jieqiboh"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"jieqiboh":147}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jieqiboh"},"content":"package duke;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"jieqiboh"},"content":"import java.io.File;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"jieqiboh"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"jieqiboh"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"jieqiboh"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"jieqiboh"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"jieqiboh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"jieqiboh"},"content":"import java.util.List;","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"jieqiboh"},"content":"import java.util.Objects;","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"jieqiboh"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"jieqiboh"},"content":" * Used by the TaskList class, and handles reading, writing and deleting from lines in the file.","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"jieqiboh"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"jieqiboh"},"content":"public class Storage {","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"jieqiboh"},"content":"    private String filepath;","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"jieqiboh"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"jieqiboh"},"content":"     * Carries out operations like reading and writing to a specified database file.","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"jieqiboh"},"content":"     * @param filepath","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"jieqiboh"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"jieqiboh"},"content":"    public Storage(String filepath) {","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"jieqiboh"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"jieqiboh"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"jieqiboh"},"content":"            File file \u003d new File(this.filepath); // Used for read and write operations to the file","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"jieqiboh"},"content":"            file.createNewFile(); // creates a new file if needed","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"jieqiboh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"jieqiboh"},"content":"            System.out.println(\"Failed to create database file: \" + e.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"jieqiboh"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"jieqiboh"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"jieqiboh"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"jieqiboh"},"content":"     * Reads all lines of the file into a List of strings.","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"jieqiboh"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"jieqiboh"},"content":"     * @return List/\u003cString/\u003e that contains all lines of the file","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"jieqiboh"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"jieqiboh"},"content":"    public List\u003cString\u003e readLinesFromFile() {","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"jieqiboh"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"jieqiboh"},"content":"            return Files.readAllLines(Paths.get(this.filepath));","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"jieqiboh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"jieqiboh"},"content":"            System.out.println(\"Failed to read lines from file: \" + e.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"jieqiboh"},"content":"            return null;","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"jieqiboh"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"jieqiboh"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"jieqiboh"},"content":"     * Given a list of strings, writes to a file.","lastModifiedDate":"2024-02-06"},{"lineNumber":50,"author":{"gitId":"jieqiboh"},"content":"     * @param stringTaskList {@code List\u003cString\u003e} that is a list of tasks in their string database representation","lastModifiedDate":"2024-02-06"},{"lineNumber":51,"author":{"gitId":"jieqiboh"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"jieqiboh"},"content":"    public void writeLinesToFile(List\u003cString\u003e stringTaskList) {","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"jieqiboh"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"jieqiboh"},"content":"            File file \u003d new File(this.filepath);","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"jieqiboh"},"content":"            file.createNewFile();","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"jieqiboh"},"content":"            FileWriter fw \u003d new FileWriter(this.filepath);","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"jieqiboh"},"content":"            for (String x : stringTaskList) {","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"jieqiboh"},"content":"                fw.write(x + \"\\n\");","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"jieqiboh"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"jieqiboh"},"content":"            fw.close();","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"jieqiboh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"jieqiboh"},"content":"            System.out.println(\"Failed to write to file: \" + e.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"jieqiboh"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-01-28"},{"lineNumber":66,"author":{"gitId":"jieqiboh"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":67,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":68,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":69,"author":{"gitId":"jieqiboh"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":70,"author":{"gitId":"jieqiboh"},"content":"     * Returns a List of strings of tasks in db representation.","lastModifiedDate":"2024-02-06"},{"lineNumber":71,"author":{"gitId":"jieqiboh"},"content":"     * @return List/\u003cString/\u003e of tasks in db representation","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"jieqiboh"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":73,"author":{"gitId":"jieqiboh"},"content":"    public List\u003cString\u003e load() {","lastModifiedDate":"2024-01-28"},{"lineNumber":74,"author":{"gitId":"jieqiboh"},"content":"        List\u003cString\u003e stringTasksList \u003d this.readLinesFromFile();","lastModifiedDate":"2024-01-28"},{"lineNumber":75,"author":{"gitId":"jieqiboh"},"content":"        return stringTasksList;","lastModifiedDate":"2024-01-28"},{"lineNumber":76,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":77,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":78,"author":{"gitId":"jieqiboh"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":79,"author":{"gitId":"jieqiboh"},"content":"     * Deletes the contents of the database file.","lastModifiedDate":"2024-02-06"},{"lineNumber":80,"author":{"gitId":"jieqiboh"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":81,"author":{"gitId":"jieqiboh"},"content":"    public void clearFile() {","lastModifiedDate":"2024-01-28"},{"lineNumber":82,"author":{"gitId":"jieqiboh"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":83,"author":{"gitId":"jieqiboh"},"content":"            Files.write(Paths.get(filepath), new byte[0]);","lastModifiedDate":"2024-01-28"},{"lineNumber":84,"author":{"gitId":"jieqiboh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":85,"author":{"gitId":"jieqiboh"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-01-28"},{"lineNumber":86,"author":{"gitId":"jieqiboh"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":87,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":88,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":89,"author":{"gitId":"jieqiboh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-28"},{"lineNumber":90,"author":{"gitId":"jieqiboh"},"content":"        String filePath \u003d \"data/duketest.txt\";","lastModifiedDate":"2024-01-28"},{"lineNumber":91,"author":{"gitId":"jieqiboh"},"content":"        Storage fileHandler \u003d new Storage(filePath);","lastModifiedDate":"2024-01-28"},{"lineNumber":92,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":93,"author":{"gitId":"jieqiboh"},"content":"        // Clear and init data/duke.txt","lastModifiedDate":"2024-01-28"},{"lineNumber":94,"author":{"gitId":"jieqiboh"},"content":"        fileHandler.clearFile();","lastModifiedDate":"2024-01-28"},{"lineNumber":95,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":96,"author":{"gitId":"jieqiboh"},"content":"        List\u003cString\u003e input \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-28"},{"lineNumber":97,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":98,"author":{"gitId":"jieqiboh"},"content":"        input.add(\"E | 0 | project meeting  | 01 October 2023 00:00 | 01 December 2024 23:59\");","lastModifiedDate":"2024-01-28"},{"lineNumber":99,"author":{"gitId":"jieqiboh"},"content":"        input.add(\"E | 1 | long project meeting  | 01 May 2000 00:01 | 01 May 2020 10:00\");","lastModifiedDate":"2024-01-28"},{"lineNumber":100,"author":{"gitId":"jieqiboh"},"content":"        input.add(\"D | 0 | return book | 01 May 2020 10:00\");","lastModifiedDate":"2024-01-28"},{"lineNumber":101,"author":{"gitId":"jieqiboh"},"content":"        input.add(\"D | 0 | do homework | no idea :-p\");","lastModifiedDate":"2024-01-28"},{"lineNumber":102,"author":{"gitId":"jieqiboh"},"content":"        input.add(\"E | 0 | project meeting 2  | Mon 2pm | 5pm\");","lastModifiedDate":"2024-01-28"},{"lineNumber":103,"author":{"gitId":"jieqiboh"},"content":"        input.add(\"D | 0 | return book | today\");","lastModifiedDate":"2024-01-28"},{"lineNumber":104,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":105,"author":{"gitId":"jieqiboh"},"content":"        fileHandler.writeLinesToFile(input);","lastModifiedDate":"2024-01-28"},{"lineNumber":106,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":107,"author":{"gitId":"jieqiboh"},"content":"        List\u003cString\u003e output \u003d fileHandler.readLinesFromFile();","lastModifiedDate":"2024-01-28"},{"lineNumber":108,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":109,"author":{"gitId":"jieqiboh"},"content":"        for (String s : output) {","lastModifiedDate":"2024-01-31"},{"lineNumber":110,"author":{"gitId":"jieqiboh"},"content":"            System.out.println(s);","lastModifiedDate":"2024-01-31"},{"lineNumber":111,"author":{"gitId":"jieqiboh"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":112,"author":{"gitId":"jieqiboh"},"content":"        System.out.println(Objects.equals(input, output));","lastModifiedDate":"2024-01-28"},{"lineNumber":113,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":114,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":115,"author":{"gitId":"jieqiboh"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"jieqiboh":115}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jieqiboh"},"content":"package duke;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"jieqiboh"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"jieqiboh"},"content":" * Task class contains a description, and a boolean marking its status of completion.","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"jieqiboh"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"jieqiboh"},"content":"public class Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"jieqiboh"},"content":"    protected String description;","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"jieqiboh"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"jieqiboh"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"jieqiboh"},"content":"     * The default Task constructor","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"jieqiboh"},"content":"     * @param description of the task","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"jieqiboh"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"jieqiboh"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"jieqiboh"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"jieqiboh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"jieqiboh"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"jieqiboh"},"content":"     * Class constructor specifying completion status","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"jieqiboh"},"content":"     * @param description of the task","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"jieqiboh"},"content":"     * @param isDone denoting task completion status","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"jieqiboh"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"jieqiboh"},"content":"    public Task(String description, Boolean isDone) {","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"jieqiboh"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"jieqiboh"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"jieqiboh"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"jieqiboh"},"content":"     * Gets status icon denoting task completion.","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"jieqiboh"},"content":"     * @return String \"X\" if complete, else \"\"","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"jieqiboh"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"jieqiboh"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-23"},{"lineNumber":34,"author":{"gitId":"jieqiboh"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-01-23"},{"lineNumber":35,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":36,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":37,"author":{"gitId":"jieqiboh"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"jieqiboh"},"content":"     * Marks task as complete.","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"jieqiboh"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"jieqiboh"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-23"},{"lineNumber":41,"author":{"gitId":"jieqiboh"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-23"},{"lineNumber":42,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":43,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":44,"author":{"gitId":"jieqiboh"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"jieqiboh"},"content":"     * Marks task as incomplete.","lastModifiedDate":"2024-02-06"},{"lineNumber":46,"author":{"gitId":"jieqiboh"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"jieqiboh"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2024-01-23"},{"lineNumber":48,"author":{"gitId":"jieqiboh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-23"},{"lineNumber":49,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":50,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":51,"author":{"gitId":"jieqiboh"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":52,"author":{"gitId":"jieqiboh"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":53,"author":{"gitId":"jieqiboh"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + description;","lastModifiedDate":"2024-01-23"},{"lineNumber":54,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":55,"author":{"gitId":"jieqiboh"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"jieqiboh":55}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jieqiboh"},"content":"package duke;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"jieqiboh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"jieqiboh"},"content":"import java.util.List;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"jieqiboh"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"jieqiboh"},"content":" * Contains a list of Task objects, and handles operations like getting, updating and deleting them.","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"jieqiboh"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"jieqiboh"},"content":"public class TaskList {","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"jieqiboh"},"content":"    public ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"jieqiboh"},"content":"    // duke.Todo representation - 0 means not done, 1 means done","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"jieqiboh"},"content":"    // T | done? | desc","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"jieqiboh"},"content":"    // duke.Deadline representation","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"jieqiboh"},"content":"    // D | done? | desc | by","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"jieqiboh"},"content":"    // duke.Event representation","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"jieqiboh"},"content":"    // E | done? | desc | from | to","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"jieqiboh"},"content":"    public TaskList() {","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"jieqiboh"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"jieqiboh"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"jieqiboh"},"content":"     * Initialises the TaskList, given a list of strings of tasks in their database representations.","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"jieqiboh"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"jieqiboh"},"content":"    public TaskList(List\u003cString\u003e stringTasksList) throws DukeException.UnknownCommandException {","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"jieqiboh"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"jieqiboh"},"content":"        assert taskList !\u003d null;","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"jieqiboh"},"content":"        for (String s : stringTasksList) {","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"jieqiboh"},"content":"            this.taskList.add(db2Task(s));","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"jieqiboh"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"jieqiboh"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"jieqiboh"},"content":"     * Gives users a way to find a task by searching for a keyword.","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"jieqiboh"},"content":"     * @param keyword to search for in description, is case-sensitive","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"jieqiboh"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"jieqiboh"},"content":"    public void findTasks(String keyword) {","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"jieqiboh"},"content":"        int num \u003d 0;","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"jieqiboh"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"jieqiboh"},"content":"        for (int i \u003d 0; i \u003c this.taskList.size(); i++) {","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"jieqiboh"},"content":"            Task t \u003d this.taskList.get(i);","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"jieqiboh"},"content":"            if (t.description.contains(keyword)) {","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"jieqiboh"},"content":"                System.out.println((num + 1) + \". \" + t);","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"jieqiboh"},"content":"                num++;","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"jieqiboh"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"jieqiboh"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":52,"author":{"gitId":"jieqiboh"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"jieqiboh"},"content":"     * Adds a task to the current taskList.","lastModifiedDate":"2024-02-06"},{"lineNumber":54,"author":{"gitId":"jieqiboh"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"jieqiboh"},"content":"     * @param task to be added","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"jieqiboh"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"jieqiboh"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-01-23"},{"lineNumber":58,"author":{"gitId":"jieqiboh"},"content":"        // Based on task type, extract traits","lastModifiedDate":"2024-01-27"},{"lineNumber":59,"author":{"gitId":"jieqiboh"},"content":"        assert task !\u003d null;","lastModifiedDate":"2024-02-06"},{"lineNumber":60,"author":{"gitId":"jieqiboh"},"content":"        taskList.add(task);","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":62,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":63,"author":{"gitId":"jieqiboh"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"jieqiboh"},"content":"     * Gets a task from the current taskList.","lastModifiedDate":"2024-02-06"},{"lineNumber":65,"author":{"gitId":"jieqiboh"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":66,"author":{"gitId":"jieqiboh"},"content":"     * @param index of task to get","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"jieqiboh"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":68,"author":{"gitId":"jieqiboh"},"content":"    public Task getTask(int index) throws DukeException.TaskNotFoundException {","lastModifiedDate":"2024-01-28"},{"lineNumber":69,"author":{"gitId":"jieqiboh"},"content":"        // Check if the index is within the valid range","lastModifiedDate":"2024-01-28"},{"lineNumber":70,"author":{"gitId":"jieqiboh"},"content":"        if (index \u003e\u003d 1 \u0026\u0026 index \u003c\u003d taskList.size()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":71,"author":{"gitId":"jieqiboh"},"content":"            return taskList.get(index - 1);","lastModifiedDate":"2024-01-28"},{"lineNumber":72,"author":{"gitId":"jieqiboh"},"content":"        } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":73,"author":{"gitId":"jieqiboh"},"content":"            throw new DukeException.TaskNotFoundException();","lastModifiedDate":"2024-01-28"},{"lineNumber":74,"author":{"gitId":"jieqiboh"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":75,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":76,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":77,"author":{"gitId":"jieqiboh"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":78,"author":{"gitId":"jieqiboh"},"content":"     * Deletes a task from the duke.TaskList, given its index.","lastModifiedDate":"2024-02-06"},{"lineNumber":79,"author":{"gitId":"jieqiboh"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":80,"author":{"gitId":"jieqiboh"},"content":"     * @param index of task to delete","lastModifiedDate":"2024-01-28"},{"lineNumber":81,"author":{"gitId":"jieqiboh"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":82,"author":{"gitId":"jieqiboh"},"content":"    public void deleteTask(int index) throws DukeException.TaskNotFoundException {","lastModifiedDate":"2024-01-28"},{"lineNumber":83,"author":{"gitId":"jieqiboh"},"content":"        if (index \u003c 1 || index \u003e taskList.size()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":84,"author":{"gitId":"jieqiboh"},"content":"            throw new DukeException.TaskNotFoundException();","lastModifiedDate":"2024-01-28"},{"lineNumber":85,"author":{"gitId":"jieqiboh"},"content":"        } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":86,"author":{"gitId":"jieqiboh"},"content":"            taskList.remove(index - 1);","lastModifiedDate":"2024-01-28"},{"lineNumber":87,"author":{"gitId":"jieqiboh"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":88,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":89,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":90,"author":{"gitId":"jieqiboh"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":91,"author":{"gitId":"jieqiboh"},"content":"     * markTask marks a task as completed by line number.","lastModifiedDate":"2024-02-06"},{"lineNumber":92,"author":{"gitId":"jieqiboh"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":93,"author":{"gitId":"jieqiboh"},"content":"     * @param index of task to mark","lastModifiedDate":"2024-01-28"},{"lineNumber":94,"author":{"gitId":"jieqiboh"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":95,"author":{"gitId":"jieqiboh"},"content":"    public void markTask(int index) throws DukeException.TaskNotFoundException {","lastModifiedDate":"2024-01-28"},{"lineNumber":96,"author":{"gitId":"jieqiboh"},"content":"        if (index \u003c 1 || index \u003e taskList.size()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":97,"author":{"gitId":"jieqiboh"},"content":"            throw new DukeException.TaskNotFoundException();","lastModifiedDate":"2024-01-28"},{"lineNumber":98,"author":{"gitId":"jieqiboh"},"content":"        } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":99,"author":{"gitId":"jieqiboh"},"content":"            Task t \u003d this.getTask(index);","lastModifiedDate":"2024-01-28"},{"lineNumber":100,"author":{"gitId":"jieqiboh"},"content":"            t.markAsDone();","lastModifiedDate":"2024-01-27"},{"lineNumber":101,"author":{"gitId":"jieqiboh"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":102,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":103,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":104,"author":{"gitId":"jieqiboh"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":105,"author":{"gitId":"jieqiboh"},"content":"     * unmarkTask unmarks a task as completed by line number.","lastModifiedDate":"2024-02-06"},{"lineNumber":106,"author":{"gitId":"jieqiboh"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":107,"author":{"gitId":"jieqiboh"},"content":"     * @param index of the task to unmark","lastModifiedDate":"2024-01-28"},{"lineNumber":108,"author":{"gitId":"jieqiboh"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":109,"author":{"gitId":"jieqiboh"},"content":"    public void unmarkTask(int index) throws DukeException.TaskNotFoundException {","lastModifiedDate":"2024-01-28"},{"lineNumber":110,"author":{"gitId":"jieqiboh"},"content":"        if (index \u003c 1 || index \u003e taskList.size()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":111,"author":{"gitId":"jieqiboh"},"content":"            throw new DukeException.TaskNotFoundException();","lastModifiedDate":"2024-01-28"},{"lineNumber":112,"author":{"gitId":"jieqiboh"},"content":"        } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":113,"author":{"gitId":"jieqiboh"},"content":"            Task t \u003d this.getTask(index);","lastModifiedDate":"2024-01-28"},{"lineNumber":114,"author":{"gitId":"jieqiboh"},"content":"            t.unmarkAsDone();","lastModifiedDate":"2024-01-27"},{"lineNumber":115,"author":{"gitId":"jieqiboh"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":116,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":117,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":118,"author":{"gitId":"jieqiboh"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":119,"author":{"gitId":"jieqiboh"},"content":"     * Prints out the contents of the tasklist.","lastModifiedDate":"2024-02-06"},{"lineNumber":120,"author":{"gitId":"jieqiboh"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":121,"author":{"gitId":"jieqiboh"},"content":"    public void printTasks() {","lastModifiedDate":"2024-01-27"},{"lineNumber":122,"author":{"gitId":"jieqiboh"},"content":"        for (int i \u003d 0; i \u003c this.taskList.size(); i++) {","lastModifiedDate":"2024-01-28"},{"lineNumber":123,"author":{"gitId":"jieqiboh"},"content":"            System.out.println((i + 1) + \". \" + this.taskList.get(i));","lastModifiedDate":"2024-01-28"},{"lineNumber":124,"author":{"gitId":"jieqiboh"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":125,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":126,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":127,"author":{"gitId":"jieqiboh"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":128,"author":{"gitId":"jieqiboh"},"content":"     * Gets number of tasks.","lastModifiedDate":"2024-02-06"},{"lineNumber":129,"author":{"gitId":"jieqiboh"},"content":"     * @return int number of tasks","lastModifiedDate":"2024-01-28"},{"lineNumber":130,"author":{"gitId":"jieqiboh"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":131,"author":{"gitId":"jieqiboh"},"content":"    public int size() {","lastModifiedDate":"2024-01-27"},{"lineNumber":132,"author":{"gitId":"jieqiboh"},"content":"        return this.taskList.size();","lastModifiedDate":"2024-01-28"},{"lineNumber":133,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":134,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":135,"author":{"gitId":"jieqiboh"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":136,"author":{"gitId":"jieqiboh"},"content":"     * Converts the database representation of a Task to the Task object.","lastModifiedDate":"2024-02-06"},{"lineNumber":137,"author":{"gitId":"jieqiboh"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":138,"author":{"gitId":"jieqiboh"},"content":"     * @param dbTask the string rep of the duke.Task in the database","lastModifiedDate":"2024-01-28"},{"lineNumber":139,"author":{"gitId":"jieqiboh"},"content":"     * @return Task the duke.Task object","lastModifiedDate":"2024-02-06"},{"lineNumber":140,"author":{"gitId":"jieqiboh"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":141,"author":{"gitId":"jieqiboh"},"content":"    public static Task db2Task(String dbTask) throws DukeException.UnknownCommandException {","lastModifiedDate":"2024-01-28"},{"lineNumber":142,"author":{"gitId":"jieqiboh"},"content":"        String[] params \u003d dbTask.split(\" \\\\| \");","lastModifiedDate":"2024-01-27"},{"lineNumber":143,"author":{"gitId":"jieqiboh"},"content":"        String type \u003d params[0];","lastModifiedDate":"2024-01-27"},{"lineNumber":144,"author":{"gitId":"jieqiboh"},"content":"        switch (type) {","lastModifiedDate":"2024-01-27"},{"lineNumber":145,"author":{"gitId":"jieqiboh"},"content":"        case \"T\": //  To do","lastModifiedDate":"2024-01-27"},{"lineNumber":146,"author":{"gitId":"jieqiboh"},"content":"            Todo todoTask \u003d Todo.db2Todo(dbTask);","lastModifiedDate":"2024-01-27"},{"lineNumber":147,"author":{"gitId":"jieqiboh"},"content":"            return todoTask;","lastModifiedDate":"2024-01-27"},{"lineNumber":148,"author":{"gitId":"jieqiboh"},"content":"        case \"D\": // duke.Deadline","lastModifiedDate":"2024-01-28"},{"lineNumber":149,"author":{"gitId":"jieqiboh"},"content":"            Deadline deadlineTask \u003d Deadline.db2Deadline(dbTask);","lastModifiedDate":"2024-01-27"},{"lineNumber":150,"author":{"gitId":"jieqiboh"},"content":"            return deadlineTask;","lastModifiedDate":"2024-01-27"},{"lineNumber":151,"author":{"gitId":"jieqiboh"},"content":"        case \"E\": // duke.Event","lastModifiedDate":"2024-01-28"},{"lineNumber":152,"author":{"gitId":"jieqiboh"},"content":"            Event eventTask \u003d Event.db2Event(dbTask);","lastModifiedDate":"2024-01-27"},{"lineNumber":153,"author":{"gitId":"jieqiboh"},"content":"            return eventTask;","lastModifiedDate":"2024-01-27"},{"lineNumber":154,"author":{"gitId":"jieqiboh"},"content":"        default:","lastModifiedDate":"2024-01-27"},{"lineNumber":155,"author":{"gitId":"jieqiboh"},"content":"            System.out.println(\"Failed to convert string to task!\");","lastModifiedDate":"2024-01-28"},{"lineNumber":156,"author":{"gitId":"jieqiboh"},"content":"            throw new DukeException.UnknownCommandException();","lastModifiedDate":"2024-01-28"},{"lineNumber":157,"author":{"gitId":"jieqiboh"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":158,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":159,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":160,"author":{"gitId":"jieqiboh"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":161,"author":{"gitId":"jieqiboh"},"content":"     * Converts a Task to their database representation.","lastModifiedDate":"2024-02-06"},{"lineNumber":162,"author":{"gitId":"jieqiboh"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":163,"author":{"gitId":"jieqiboh"},"content":"     * @param task the Task object","lastModifiedDate":"2024-02-06"},{"lineNumber":164,"author":{"gitId":"jieqiboh"},"content":"     * @return String the string rep of duke.Task in the database","lastModifiedDate":"2024-01-28"},{"lineNumber":165,"author":{"gitId":"jieqiboh"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":166,"author":{"gitId":"jieqiboh"},"content":"    public static String task2Db(Task task) {","lastModifiedDate":"2024-01-27"},{"lineNumber":167,"author":{"gitId":"jieqiboh"},"content":"        // Based on task type, extract traits","lastModifiedDate":"2024-01-27"},{"lineNumber":168,"author":{"gitId":"jieqiboh"},"content":"        if (task instanceof Todo) {","lastModifiedDate":"2024-01-27"},{"lineNumber":169,"author":{"gitId":"jieqiboh"},"content":"            Todo todoTask \u003d (Todo) task;","lastModifiedDate":"2024-01-27"},{"lineNumber":170,"author":{"gitId":"jieqiboh"},"content":"            return Todo.todo2Db(todoTask);","lastModifiedDate":"2024-01-27"},{"lineNumber":171,"author":{"gitId":"jieqiboh"},"content":"        } else if (task instanceof Deadline) {","lastModifiedDate":"2024-01-27"},{"lineNumber":172,"author":{"gitId":"jieqiboh"},"content":"            Deadline deadlineTask \u003d (Deadline) task;","lastModifiedDate":"2024-01-27"},{"lineNumber":173,"author":{"gitId":"jieqiboh"},"content":"            return Deadline.deadline2Db(deadlineTask);","lastModifiedDate":"2024-01-27"},{"lineNumber":174,"author":{"gitId":"jieqiboh"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2024-01-27"},{"lineNumber":175,"author":{"gitId":"jieqiboh"},"content":"            Event eventTask \u003d (Event) task;","lastModifiedDate":"2024-01-27"},{"lineNumber":176,"author":{"gitId":"jieqiboh"},"content":"            return Event.event2Db(eventTask);","lastModifiedDate":"2024-01-27"},{"lineNumber":177,"author":{"gitId":"jieqiboh"},"content":"        } else {","lastModifiedDate":"2024-01-27"},{"lineNumber":178,"author":{"gitId":"jieqiboh"},"content":"            System.out.println(\"Failed to add task: \" + task);","lastModifiedDate":"2024-01-28"},{"lineNumber":179,"author":{"gitId":"jieqiboh"},"content":"            return null;","lastModifiedDate":"2024-01-27"},{"lineNumber":180,"author":{"gitId":"jieqiboh"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":181,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":182,"author":{"gitId":"jieqiboh"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"jieqiboh":182}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jieqiboh"},"content":"package duke;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"jieqiboh"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"jieqiboh"},"content":" * Task that has a description only.","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"jieqiboh"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"jieqiboh"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"jieqiboh"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"jieqiboh"},"content":"     * Default constructor, isDone set to false.","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"jieqiboh"},"content":"     * @param description of Todo","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"jieqiboh"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"jieqiboh"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"jieqiboh"},"content":"        super(description);","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"jieqiboh"},"content":"    public Todo(String description, Boolean isDone) {","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"jieqiboh"},"content":"        super(description, isDone);","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"jieqiboh"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"jieqiboh"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"jieqiboh"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"jieqiboh"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"jieqiboh"},"content":"     * Converts the database representation of Todo to a Todo Task","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"jieqiboh"},"content":"     * @param dbTodo the string rep of Todo in the database","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"jieqiboh"},"content":"     * @return Task the todo Task object","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"jieqiboh"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"jieqiboh"},"content":"    public static Todo db2Todo(String dbTodo) {","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"jieqiboh"},"content":"        // T | 0 | Buy Bread","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"jieqiboh"},"content":"        String[] params \u003d dbTodo.split(\" \\\\| \");","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"jieqiboh"},"content":"        Boolean isDone \u003d params[1].equals(\"1\") ? true : false; // if \"1\", means isDone","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"jieqiboh"},"content":"        String desc \u003d params[2];","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"jieqiboh"},"content":"        return new Todo(desc, isDone);","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"jieqiboh"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"jieqiboh"},"content":"     * Converts the a Todo Task to the database representation of Todo.","lastModifiedDate":"2024-02-06"},{"lineNumber":40,"author":{"gitId":"jieqiboh"},"content":"     * @param todoTask is the todo Task object","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"jieqiboh"},"content":"     * @return Task the string rep of Todo in the database","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"jieqiboh"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"jieqiboh"},"content":"    public static String todo2Db(Todo todoTask) {","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"jieqiboh"},"content":"        // T | 0 | Buy Bread","lastModifiedDate":"2024-01-27"},{"lineNumber":45,"author":{"gitId":"jieqiboh"},"content":"        String done \u003d todoTask.isDone ? \"1\" : \"0\";","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"jieqiboh"},"content":"        String desc \u003d todoTask.description;","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"jieqiboh"},"content":"        return \"T\" + \" | \" + done + \" | \" + desc;","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"jieqiboh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-27"},{"lineNumber":51,"author":{"gitId":"jieqiboh"},"content":"        String dbTodo \u003d \"T | 0 | Buy Bread\";","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"jieqiboh"},"content":"        Todo todoTask \u003d Todo.db2Todo(dbTodo);","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"jieqiboh"},"content":"        todoTask.markAsDone();","lastModifiedDate":"2024-01-27"},{"lineNumber":54,"author":{"gitId":"jieqiboh"},"content":"        System.out.println(todoTask);","lastModifiedDate":"2024-01-27"},{"lineNumber":55,"author":{"gitId":"jieqiboh"},"content":"        System.out.println(Todo.todo2Db(todoTask));","lastModifiedDate":"2024-01-27"},{"lineNumber":56,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":57,"author":{"gitId":"jieqiboh"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"jieqiboh":57}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jieqiboh"},"content":"package duke;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"jieqiboh"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"jieqiboh"},"content":" * Deals with interactions from the user","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"jieqiboh"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"jieqiboh"},"content":"public class Ui {","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"jieqiboh"},"content":"    private static String border \u003d \"____________________________________________________________\";","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"jieqiboh"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"jieqiboh"},"content":"     * Prints a greeting for the user upon bot startup","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"jieqiboh"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"jieqiboh"},"content":"    public void greet() {","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"jieqiboh"},"content":"        String logo \u003d","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"jieqiboh"},"content":"                \"     _                 \\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"jieqiboh"},"content":"                        + \" ___| |_ _____   _____ \\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"jieqiboh"},"content":"                        + \"/ __| __/ _ \\\\ \\\\ / / _ \\\\\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"jieqiboh"},"content":"                        + \"\\\\__ \\\\ ||  __/\\\\ V /  __/\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"jieqiboh"},"content":"                        + \"|___/\\\\__\\\\___| \\\\_/ \\\\___|\\n\";","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"jieqiboh"},"content":"        System.out.println(border);","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"jieqiboh"},"content":"        System.out.println(\"What\u0027s up! I\u0027m steve\");","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"jieqiboh"},"content":"        System.out.println(\"What do you want to do?\");","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"jieqiboh"},"content":"        System.out.println(border);","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"jieqiboh"},"content":"    public void showLoadingError() {","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"jieqiboh"},"content":"        System.out.println(\"Failed to read tasks file!\");","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"jieqiboh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"jieqiboh"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"jieqiboh"},"content":"        ui.greet();","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"jieqiboh"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"jieqiboh":33}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jieqiboh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"jieqiboh"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"jieqiboh"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"jieqiboh"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"jieqiboh"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"jieqiboh"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"jieqiboh"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"jieqiboh"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"jieqiboh"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"jieqiboh"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"jieqiboh"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"jieqiboh"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"jieqiboh"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"jieqiboh"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"jieqiboh":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jieqiboh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"jieqiboh"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"jieqiboh"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"jieqiboh"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"jieqiboh"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"jieqiboh"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"jieqiboh"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"jieqiboh"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"jieqiboh"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"jieqiboh"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"jieqiboh"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"600.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"jieqiboh"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"jieqiboh"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"jieqiboh"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"jieqiboh"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"jieqiboh"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"jieqiboh"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"jieqiboh":19}},{"path":"src/test/java/duke/DatesTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jieqiboh"},"content":"package duke;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"jieqiboh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"jieqiboh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"jieqiboh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"jieqiboh"},"content":"public class DatesTest {","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"jieqiboh"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"jieqiboh"},"content":"    public void testIsValidInputDate() {","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"jieqiboh"},"content":"        String invalidInputDate1 \u003d \"01/13/2023 1200\";","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"jieqiboh"},"content":"        String invalidInputDate2 \u003d \"01/13/2023 2401\";","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"jieqiboh"},"content":"        String validInputDate1 \u003d \"15/01/2023 1430\";","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"jieqiboh"},"content":"        String validInputDate2 \u003d \"01/01/2025 2330\";","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"jieqiboh"},"content":"        assertEquals(true, Dates.isValidInputDate(validInputDate1));","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"jieqiboh"},"content":"        assertEquals(true, Dates.isValidInputDate(validInputDate2));","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"jieqiboh"},"content":"        assertEquals(false, Dates.isValidInputDate(invalidInputDate1));","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"jieqiboh"},"content":"        assertEquals(false, Dates.isValidInputDate(invalidInputDate2));","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"jieqiboh"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"jieqiboh"},"content":"    public void testConvMethods() {","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"jieqiboh"},"content":"        String validInputDate1 \u003d \"15/01/2023 1430\";","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"jieqiboh"},"content":"        String validInputDate2 \u003d \"01/01/2025 2330\";","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"jieqiboh"},"content":"        // Convert valid date strings to LocalDateTime objects","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"jieqiboh"},"content":"        LocalDateTime validDate1 \u003d Dates.inputStr2DateTime(validInputDate1);","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"jieqiboh"},"content":"        LocalDateTime validDate2 \u003d Dates.inputStr2DateTime(validInputDate2);","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"jieqiboh"},"content":"        // Convert LocalDateTime objects to string for storage in database file","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"jieqiboh"},"content":"        String validDate1Str \u003d Dates.dateTime2DbStr(validDate1);","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"jieqiboh"},"content":"        String validDate2Str \u003d Dates.dateTime2DbStr(validDate2);","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"jieqiboh"},"content":"        // return the db string format when printing","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"jieqiboh"},"content":"        assertEquals(\"15 January 2023 14:30\", validDate1Str);","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"jieqiboh"},"content":"        assertEquals(\"01 January 2025 23:30\", validDate2Str);","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"jieqiboh"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"jieqiboh":42}},{"path":"src/test/java/duke/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jieqiboh"},"content":"package duke;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"jieqiboh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"jieqiboh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"jieqiboh"},"content":"import java.util.List;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"jieqiboh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"jieqiboh"},"content":"public class StorageTest {","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"jieqiboh"},"content":"    private String filePath \u003d \"data/duketest.txt\";","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"jieqiboh"},"content":"    private Storage testStorage \u003d new Storage(filePath);","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"jieqiboh"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"jieqiboh"},"content":"    public void testReadWriteLines() {","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"jieqiboh"},"content":"        List\u003cString\u003e input \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"jieqiboh"},"content":"        input.add(\"E | 0 | project meeting  | 01 October 2023 00:00 | 01 December 2024 23:59\");","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"jieqiboh"},"content":"        input.add(\"E | 1 | long project meeting  | 01 May 2000 00:01 | 01 May 2020 10:00\");","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"jieqiboh"},"content":"        input.add(\"D | 0 | return book | 01 May 2020 10:00\");","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"jieqiboh"},"content":"        input.add(\"D | 0 | do homework | no idea :-p\");","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"jieqiboh"},"content":"        input.add(\"E | 0 | project meeting 2  | Mon 2pm | 5pm\");","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"jieqiboh"},"content":"        input.add(\"D | 0 | return book | today\");","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"jieqiboh"},"content":"        testStorage.writeLinesToFile(input);","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"jieqiboh"},"content":"        List\u003cString\u003e output \u003d testStorage.readLinesFromFile();","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"jieqiboh"},"content":"        assertEquals(input, output);","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"jieqiboh"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"jieqiboh":30}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jieqiboh"},"content":"package duke;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"jieqiboh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"jieqiboh"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"jieqiboh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"jieqiboh"},"content":"public class TaskListTest {","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"jieqiboh"},"content":"    private final TaskList testTasks \u003d new TaskList();","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"jieqiboh"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"jieqiboh"},"content":"    public void testGetTask() {","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"jieqiboh"},"content":"        // get task that doesn\u0027t exist","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"jieqiboh"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"jieqiboh"},"content":"            testTasks.getTask(0);","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"jieqiboh"},"content":"            fail();","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"jieqiboh"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"jieqiboh"},"content":"            assertEquals(\"Could not find task!\", e.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"jieqiboh"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"jieqiboh"},"content":"        // get task that exists","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"jieqiboh"},"content":"        testTasks.addTask(new Todo(\"buy bread\"));","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"jieqiboh"},"content":"        String todoDesc \u003d \"\";","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"jieqiboh"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"jieqiboh"},"content":"            todoDesc \u003d testTasks.getTask(1).description;","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"jieqiboh"},"content":"        } catch (DukeException.TaskNotFoundException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"jieqiboh"},"content":"            assertEquals(\"Could not find task!\", e.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"jieqiboh"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"jieqiboh"},"content":"        assertEquals(\"buy bread\", todoDesc);","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"jieqiboh"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"jieqiboh"},"content":"    public void testMarkTask() {","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"jieqiboh"},"content":"        testTasks.addTask(new Deadline(\"return book\", \"Mon 4pm\"));","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"jieqiboh"},"content":"        // mark task that doesn\u0027t exist","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"jieqiboh"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"jieqiboh"},"content":"            testTasks.markTask(5);","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"jieqiboh"},"content":"        } catch (DukeException.TaskNotFoundException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"jieqiboh"},"content":"            assertEquals(\"Could not find task!\", e.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"jieqiboh"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"jieqiboh"},"content":"        // mark task that exists","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"jieqiboh"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"jieqiboh"},"content":"            testTasks.markTask(1);","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"jieqiboh"},"content":"        } catch (DukeException.TaskNotFoundException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"jieqiboh"},"content":"            assertEquals(\"Could not find task!\", e.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"jieqiboh"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"jieqiboh"},"content":"        // verify task marked","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"jieqiboh"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"jieqiboh"},"content":"            Task t \u003d testTasks.getTask(1);","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"jieqiboh"},"content":"            assertEquals(\"return book\", t.description);","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"jieqiboh"},"content":"            assertEquals(true, t.isDone);","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"jieqiboh"},"content":"        } catch (DukeException.TaskNotFoundException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"jieqiboh"},"content":"            assertEquals(\"Could not find task!\", e.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"jieqiboh"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"jieqiboh"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"jieqiboh"},"content":"    public void testUnmarkTask() {","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"jieqiboh"},"content":"        testTasks.addTask(new Deadline(\"return book\", \"Mon 4pm\"));","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"jieqiboh"},"content":"        // unmark task that doesn\u0027t exist","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"jieqiboh"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":66,"author":{"gitId":"jieqiboh"},"content":"            testTasks.unmarkTask(5);","lastModifiedDate":"2024-01-28"},{"lineNumber":67,"author":{"gitId":"jieqiboh"},"content":"        } catch (DukeException.TaskNotFoundException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":68,"author":{"gitId":"jieqiboh"},"content":"            assertEquals(\"Could not find task!\", e.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":69,"author":{"gitId":"jieqiboh"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":70,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":71,"author":{"gitId":"jieqiboh"},"content":"        // unmark task that exists","lastModifiedDate":"2024-01-28"},{"lineNumber":72,"author":{"gitId":"jieqiboh"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":73,"author":{"gitId":"jieqiboh"},"content":"            testTasks.unmarkTask(1);","lastModifiedDate":"2024-01-28"},{"lineNumber":74,"author":{"gitId":"jieqiboh"},"content":"        } catch (DukeException.TaskNotFoundException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":75,"author":{"gitId":"jieqiboh"},"content":"            assertEquals(\"Could not find task!\", e.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":76,"author":{"gitId":"jieqiboh"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":77,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":78,"author":{"gitId":"jieqiboh"},"content":"        // verify task unmarked","lastModifiedDate":"2024-01-28"},{"lineNumber":79,"author":{"gitId":"jieqiboh"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":80,"author":{"gitId":"jieqiboh"},"content":"            Task t \u003d testTasks.getTask(1);","lastModifiedDate":"2024-01-28"},{"lineNumber":81,"author":{"gitId":"jieqiboh"},"content":"            assertEquals(\"return book\", t.description);","lastModifiedDate":"2024-01-28"},{"lineNumber":82,"author":{"gitId":"jieqiboh"},"content":"            assertEquals(false, t.isDone);","lastModifiedDate":"2024-01-28"},{"lineNumber":83,"author":{"gitId":"jieqiboh"},"content":"        } catch (DukeException.TaskNotFoundException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":84,"author":{"gitId":"jieqiboh"},"content":"            assertEquals(\"Could not find task!\", e.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":85,"author":{"gitId":"jieqiboh"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":86,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":87,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":88,"author":{"gitId":"jieqiboh"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":89,"author":{"gitId":"jieqiboh"},"content":"    public void testDeleteTask() {","lastModifiedDate":"2024-01-28"},{"lineNumber":90,"author":{"gitId":"jieqiboh"},"content":"        testTasks.addTask(new Deadline(\"return book\", \"Mon 4pm\"));","lastModifiedDate":"2024-01-28"},{"lineNumber":91,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":92,"author":{"gitId":"jieqiboh"},"content":"        // delete existing task","lastModifiedDate":"2024-01-28"},{"lineNumber":93,"author":{"gitId":"jieqiboh"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":94,"author":{"gitId":"jieqiboh"},"content":"            testTasks.deleteTask(1);","lastModifiedDate":"2024-01-28"},{"lineNumber":95,"author":{"gitId":"jieqiboh"},"content":"        } catch (DukeException.TaskNotFoundException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":96,"author":{"gitId":"jieqiboh"},"content":"            assertEquals(\"Could not find task!\", e.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":97,"author":{"gitId":"jieqiboh"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":98,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":99,"author":{"gitId":"jieqiboh"},"content":"        // delete task that doesn\u0027t exist","lastModifiedDate":"2024-01-28"},{"lineNumber":100,"author":{"gitId":"jieqiboh"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":101,"author":{"gitId":"jieqiboh"},"content":"            testTasks.deleteTask(-1);","lastModifiedDate":"2024-01-28"},{"lineNumber":102,"author":{"gitId":"jieqiboh"},"content":"            fail();","lastModifiedDate":"2024-01-28"},{"lineNumber":103,"author":{"gitId":"jieqiboh"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":104,"author":{"gitId":"jieqiboh"},"content":"            assertEquals(\"Could not find task!\", e.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":105,"author":{"gitId":"jieqiboh"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":106,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":107,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":108,"author":{"gitId":"jieqiboh"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":109,"author":{"gitId":"jieqiboh"},"content":"    public void testAddTask() {","lastModifiedDate":"2024-01-28"},{"lineNumber":110,"author":{"gitId":"jieqiboh"},"content":"        assertEquals(0, testTasks.size());","lastModifiedDate":"2024-01-28"},{"lineNumber":111,"author":{"gitId":"jieqiboh"},"content":"        Todo t \u003d new Todo(\"Buy bread\");","lastModifiedDate":"2024-01-28"},{"lineNumber":112,"author":{"gitId":"jieqiboh"},"content":"        testTasks.addTask(t);","lastModifiedDate":"2024-01-28"},{"lineNumber":113,"author":{"gitId":"jieqiboh"},"content":"        assertEquals(1, testTasks.size());","lastModifiedDate":"2024-01-28"},{"lineNumber":114,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":115,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":116,"author":{"gitId":"jieqiboh"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":117,"author":{"gitId":"jieqiboh"},"content":"    public void testFindTasks() {","lastModifiedDate":"2024-01-28"},{"lineNumber":118,"author":{"gitId":"jieqiboh"},"content":"        testTasks.addTask(new Todo(\"Buy Bread\"));","lastModifiedDate":"2024-01-28"},{"lineNumber":119,"author":{"gitId":"jieqiboh"},"content":"        testTasks.addTask(new Todo(\"Borrow book\"));","lastModifiedDate":"2024-01-28"},{"lineNumber":120,"author":{"gitId":"jieqiboh"},"content":"        testTasks.addTask(new Deadline(\"Return Bread\", \"tomorrow\"));","lastModifiedDate":"2024-01-28"},{"lineNumber":121,"author":{"gitId":"jieqiboh"},"content":"        testTasks.addTask(new Todo(\"eat bread\"));","lastModifiedDate":"2024-01-28"},{"lineNumber":122,"author":{"gitId":"jieqiboh"},"content":"        testTasks.addTask(new Event(\"Bread discussion\", \"Mon 4pm\", \"5pm\"));","lastModifiedDate":"2024-01-28"},{"lineNumber":123,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":124,"author":{"gitId":"jieqiboh"},"content":"        testTasks.findTasks(\"Bread\");","lastModifiedDate":"2024-01-28"},{"lineNumber":125,"author":{"gitId":"jieqiboh"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":126,"author":{"gitId":"jieqiboh"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"jieqiboh":126}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jieqiboh"},"content":"clear","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"jieqiboh"},"content":"todo borrow book","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"jieqiboh"},"content":"todo return book","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"jieqiboh"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"jieqiboh"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"jieqiboh"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"jieqiboh"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"jieqiboh"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"jieqiboh"},"content":"todo","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"jieqiboh"},"content":"event project meeting 2 /from Mon 2pm","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"jieqiboh"},"content":"event project meeting 3 /to 4pm","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"jieqiboh"},"content":"deadline return book","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"jieqiboh"},"content":"mark 2","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"jieqiboh"},"content":"mark 5","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"jieqiboh"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"jieqiboh"},"content":"unmark 5","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"jieqiboh"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"jieqiboh"},"content":"unmark","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"jieqiboh"},"content":"mark","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"jieqiboh"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"jieqiboh"},"content":"delete 1","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"jieqiboh"},"content":"delete 2","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"jieqiboh"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"jieqiboh"},"content":"hi","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"jieqiboh"},"content":"bye","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"jieqiboh":25}},{"path":"text-ui-test/input2.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jieqiboh"},"content":"clear","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"jieqiboh"},"content":"event project meeting /from 01/10/2023 0000 /to 01/12/2024 2359","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"jieqiboh"},"content":"event long project meeting /from 01/05/2000 0001 /to 01/05/2020 1000","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"jieqiboh"},"content":"deadline return book /by 01/05/2020 1000","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"jieqiboh"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"jieqiboh"},"content":"list","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"jieqiboh"},"content":"event project meeting 2 /from Mon 2pm /to 5pm","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"jieqiboh"},"content":"deadline return book /by today","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"jieqiboh"},"content":"mark 2","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"jieqiboh"},"content":"mark 5","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"jieqiboh"},"content":"list","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"jieqiboh"},"content":"unmark 5","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"jieqiboh"},"content":"find meeting","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"jieqiboh"},"content":"list","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"jieqiboh"},"content":"bye","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"jieqiboh":15}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"jieqiboh"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"jieqiboh"},"content":"java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jieqiboh":2,"-":36}},{"path":"text-ui-test/runtest2.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"jieqiboh"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"jieqiboh"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"jieqiboh"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"jieqiboh"},"content":"then","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"jieqiboh"},"content":"    mkdir ../bin","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"jieqiboh"},"content":"fi","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"jieqiboh"},"content":"# delete output from previous run","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"jieqiboh"},"content":"if [ -e \"./ACTUAL2.TXT\" ]","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"jieqiboh"},"content":"then","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"jieqiboh"},"content":"    rm ACTUAL2.TXT","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"jieqiboh"},"content":"fi","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"jieqiboh"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"jieqiboh"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"jieqiboh"},"content":"then","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"jieqiboh"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"jieqiboh"},"content":"    exit 1","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"jieqiboh"},"content":"fi","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"jieqiboh"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"jieqiboh"},"content":"java -classpath ../bin duke.Duke \u003c input2.txt \u003e ACTUAL2.TXT","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"jieqiboh"},"content":"# convert to UNIX format","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"jieqiboh"},"content":"cp EXPECTED2.TXT EXPECTED-UNIX2.TXT","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"jieqiboh"},"content":"dos2unix ACTUAL2.TXT EXPECTED-UNIX2.TXT","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"jieqiboh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"jieqiboh"},"content":"# compare the output to the expected output","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"jieqiboh"},"content":"diff ACTUAL2.TXT EXPECTED-UNIX2.TXT","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"jieqiboh"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"jieqiboh"},"content":"then","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"jieqiboh"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"jieqiboh"},"content":"    exit 0","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"jieqiboh"},"content":"else","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"jieqiboh"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"jieqiboh"},"content":"    exit 1","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"jieqiboh"},"content":"fi","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"jieqiboh":38}}]
