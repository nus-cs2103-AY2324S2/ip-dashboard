[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ivan24004"},"content":"# remi.Remi project template","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"ivan24004"},"content":"3. After that, locate the `src/main/java/remi.Remi.java` file, right-click it, and choose `Run remi.Remi.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":22,"ivan24004":2}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"ivan24004"},"content":"    mainClass.set(\"remi.Remi\")","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"ivan24004"},"content":"    archiveBaseName \u003d \"remi\"","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":40,"ivan24004":2}},{"path":"src/main/java/remi/Remi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivan24004"},"content":"package remi;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"ivan24004"},"content":"import remi.model.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"ivan24004"},"content":"public class Remi {","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"ivan24004"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"ivan24004"},"content":"        Ui chatbot \u003d new Ui();","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"ivan24004"},"content":"        chatbot.ioLoop();","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"ivan24004"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"ivan24004":10}},{"path":"src/main/java/remi/io/Inputter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivan24004"},"content":"package remi.io;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"ivan24004"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"ivan24004"},"content":"public class Inputter {","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"ivan24004"},"content":"    private static final Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"ivan24004"},"content":"    /**","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"ivan24004"},"content":"     * This gets the last line of input from the user.","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"ivan24004"},"content":"     *","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"ivan24004"},"content":"     * @return a message containing the last input of the user","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"ivan24004"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"ivan24004"},"content":"    public static Message inputMessage() {","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"ivan24004"},"content":"        return new Message(sc.nextLine());","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"ivan24004"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"ivan24004":16}},{"path":"src/main/java/remi/io/Message.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivan24004"},"content":"package remi.io;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"ivan24004"},"content":"/**","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"ivan24004"},"content":" * Basic class to carry","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"ivan24004"},"content":" */","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"ivan24004"},"content":"public class Message {","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"ivan24004"},"content":"    private final String data;","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"ivan24004"},"content":"    /**","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"ivan24004"},"content":"     * Basic constructor that takes in a String and constructs a Message object.","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"ivan24004"},"content":"     * @param data string containing the message data","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"ivan24004"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"ivan24004"},"content":"    public Message(String data) {","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"ivan24004"},"content":"        this.data \u003d data;","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"ivan24004"},"content":"    /**","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"ivan24004"},"content":"     * Simple getter for the message.","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"ivan24004"},"content":"     * @return the message stored in the object","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"ivan24004"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"ivan24004"},"content":"    public String getMessage() {","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"ivan24004"},"content":"        return this.data;","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"ivan24004"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"ivan24004":24}},{"path":"src/main/java/remi/io/Outputter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivan24004"},"content":"package remi.io;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"ivan24004"},"content":"/**","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"ivan24004"},"content":" * Class that takes in messages and outputs them in the proper format.","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"ivan24004"},"content":" */","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"ivan24004"},"content":"public class Outputter {","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"ivan24004"},"content":"    /**","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"ivan24004"},"content":"     * Display message in a certain format.","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"ivan24004"},"content":"     * @param msg message to be outputted, you do not need to end it with a newline.","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"ivan24004"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"ivan24004"},"content":"    public static void outputMessage(Message msg) {","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"ivan24004"},"content":"        System.out.println(\"-\".repeat(50));","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"ivan24004"},"content":"        System.out.println(msg.getMessage());","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"ivan24004"},"content":"        System.out.println(\"-\".repeat(50));","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"ivan24004"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"ivan24004":16}},{"path":"src/main/java/remi/model/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivan24004"},"content":"package remi.model;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"ivan24004"},"content":"public class Deadline extends Task{","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"ivan24004"},"content":"    private String by;","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"ivan24004"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"ivan24004"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"ivan24004"},"content":"     * @param label starting time","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"ivan24004"},"content":"     * @param by ending time","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"ivan24004"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"ivan24004"},"content":"    public Deadline(String label, String by) {","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"ivan24004"},"content":"        super(label);","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"ivan24004"},"content":"        this.by \u003d formatDate(by);","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"ivan24004"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"ivan24004"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"ivan24004"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"ivan24004"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"ivan24004"},"content":"     * Returns a parsable string of the deadline task. Meant to be used for remi.storage purposes.","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"ivan24004"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"ivan24004"},"content":"     * @return a parsable string representation of the task and all its details","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"ivan24004"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"ivan24004"},"content":"    public String parsableString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"ivan24004"},"content":"        return \"D|\" + super.parsableString() + \"|\" + by;","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"ivan24004"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"ivan24004":29}},{"path":"src/main/java/remi/model/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivan24004"},"content":"package remi.model;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"ivan24004"},"content":"public class Event extends Task{","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"ivan24004"},"content":"    private String from;","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"ivan24004"},"content":"    private String to;","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"ivan24004"},"content":"    public Event(String label, String from, String to) {","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"ivan24004"},"content":"        super(label);","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"ivan24004"},"content":"        this.from \u003d formatDate(from);","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"ivan24004"},"content":"        this.to \u003d formatDate(to);","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"ivan24004"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"ivan24004"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"ivan24004"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\", super.toString(), from, to);","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"ivan24004"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"ivan24004"},"content":"     * Returns a parsable string of the event task. Meant to be used for remi.storage purposes.","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"ivan24004"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"ivan24004"},"content":"     * @return a parsable string representation of the task and all its details","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"ivan24004"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"ivan24004"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"ivan24004"},"content":"    public String parsableString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"ivan24004"},"content":"        return String.format(\"E|%s|%s|%s\", super.parsableString(), from, to);","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"ivan24004"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"ivan24004":27}},{"path":"src/main/java/remi/model/StoredTaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivan24004"},"content":"package remi.model;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"ivan24004"},"content":"import remi.storage.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"ivan24004"},"content":"import remi.utils.RemiError;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"ivan24004"},"content":"public class StoredTaskList extends TaskList {","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"ivan24004"},"content":"    public StoredTaskList() {","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"ivan24004"},"content":"        super();","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"ivan24004"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"ivan24004"},"content":"     * Add a task to the end of the TaskList.","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"ivan24004"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"ivan24004"},"content":"     * @param t task to be added","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"ivan24004"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"ivan24004"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"ivan24004"},"content":"    public void addTask(Task t){","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"ivan24004"},"content":"        super.addTask(t);","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"ivan24004"},"content":"        Storage.store(this);","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"ivan24004"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"ivan24004"},"content":"     * Mark a task as done.","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"ivan24004"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"ivan24004"},"content":"     * @param idx the 1-indexed index of the task to be marked","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"ivan24004"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"ivan24004"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"ivan24004"},"content":"    public void markTask(int idx) {","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"ivan24004"},"content":"        super.markTask(idx);","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"ivan24004"},"content":"        Storage.store(this);","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"ivan24004"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"ivan24004"},"content":"     * Mark a task as not done.","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"ivan24004"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"ivan24004"},"content":"     * @param idx the 1-indexed index of the task to be unmarked","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"ivan24004"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"ivan24004"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"ivan24004"},"content":"    public void unmarkTask(int idx) {","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"ivan24004"},"content":"        super.unmarkTask(idx);","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"ivan24004"},"content":"        Storage.store(this);","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"ivan24004"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"ivan24004"},"content":"     * Removes a task.","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"ivan24004"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"ivan24004"},"content":"     * @param idx the 1-indexed index of the task to be removed","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"ivan24004"},"content":"     * @throws RemiError if idx is invalid (idx must satisfy 1 \u003c\u003d idx \u003c\u003d size)","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"ivan24004"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"ivan24004"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"ivan24004"},"content":"    public void removeTask(int idx) throws RemiError {","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"ivan24004"},"content":"        super.removeTask(idx);","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"ivan24004"},"content":"        Storage.store(this);","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"ivan24004"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"ivan24004":55}},{"path":"src/main/java/remi/model/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivan24004"},"content":"package remi.model;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"ivan24004"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"ivan24004"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"ivan24004"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"ivan24004"},"content":"public class Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"ivan24004"},"content":"    private String label;","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"ivan24004"},"content":"    private boolean isDone;","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"ivan24004"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"ivan24004"},"content":"     * Tries to parse a string as a date, if impossible returns the original string.","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"ivan24004"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"ivan24004"},"content":"     * @param input input string that may or may not be a date","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"ivan24004"},"content":"     * @return the date as a string in \"dd MMM yyyy\" format","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"ivan24004"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"ivan24004"},"content":"    protected String formatDate(String input) {","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"ivan24004"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"ivan24004"},"content":"            LocalDate date \u003d LocalDate.parse(input, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"ivan24004"},"content":"            return date.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"ivan24004"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"ivan24004"},"content":"            return input;","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"ivan24004"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"ivan24004"},"content":"    public Task(String label) {","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"ivan24004"},"content":"        this.label \u003d label;","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"ivan24004"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":29,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":30,"author":{"gitId":"ivan24004"},"content":"    public void mark() {","lastModifiedDate":"2024-01-23"},{"lineNumber":31,"author":{"gitId":"ivan24004"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-23"},{"lineNumber":32,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":33,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":34,"author":{"gitId":"ivan24004"},"content":"    public void unmark() {","lastModifiedDate":"2024-01-23"},{"lineNumber":35,"author":{"gitId":"ivan24004"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-23"},{"lineNumber":36,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":37,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":38,"author":{"gitId":"ivan24004"},"content":"    /**","lastModifiedDate":"2024-01-23"},{"lineNumber":39,"author":{"gitId":"ivan24004"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2024-01-23"},{"lineNumber":40,"author":{"gitId":"ivan24004"},"content":"     *","lastModifiedDate":"2024-01-23"},{"lineNumber":41,"author":{"gitId":"ivan24004"},"content":"     * @return a string representation of the task and all its details","lastModifiedDate":"2024-01-23"},{"lineNumber":42,"author":{"gitId":"ivan24004"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":43,"author":{"gitId":"ivan24004"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":44,"author":{"gitId":"ivan24004"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":45,"author":{"gitId":"ivan24004"},"content":"        String res \u003d \"\";","lastModifiedDate":"2024-01-23"},{"lineNumber":46,"author":{"gitId":"ivan24004"},"content":"        if (this.isDone) {","lastModifiedDate":"2024-01-23"},{"lineNumber":47,"author":{"gitId":"ivan24004"},"content":"            res +\u003d \"[X]\";","lastModifiedDate":"2024-01-23"},{"lineNumber":48,"author":{"gitId":"ivan24004"},"content":"        } else {","lastModifiedDate":"2024-01-23"},{"lineNumber":49,"author":{"gitId":"ivan24004"},"content":"            res +\u003d \"[ ]\";","lastModifiedDate":"2024-01-23"},{"lineNumber":50,"author":{"gitId":"ivan24004"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":51,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":52,"author":{"gitId":"ivan24004"},"content":"        return res + \" \" + label;","lastModifiedDate":"2024-01-23"},{"lineNumber":53,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":54,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"ivan24004"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"ivan24004"},"content":"     * Returns a parsable string of the task. Meant to be used for remi.storage purposes.","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"ivan24004"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"ivan24004"},"content":"     * @return a parsable string representation of the task and all its details","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"ivan24004"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"ivan24004"},"content":"    public String parsableString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"ivan24004"},"content":"        String res \u003d \"\";","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"ivan24004"},"content":"        if (this.isDone) {","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"ivan24004"},"content":"            res +\u003d \"X\";","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"ivan24004"},"content":"        } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"ivan24004"},"content":"            res +\u003d \"V\";","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"ivan24004"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"ivan24004"},"content":"        return res + \"|\" + label;","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"ivan24004"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"ivan24004":70}},{"path":"src/main/java/remi/model/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivan24004"},"content":"package remi.model;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"ivan24004"},"content":"import remi.utils.RemiError;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"ivan24004"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"ivan24004"},"content":"public class TaskList {","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"ivan24004"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"ivan24004"},"content":"    public TaskList() {","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"ivan24004"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"ivan24004"},"content":"    /**","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"ivan24004"},"content":"     * Simply add a task to the TaskList object.","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"ivan24004"},"content":"     *","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"ivan24004"},"content":"     * @param t task to be added","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"ivan24004"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"ivan24004"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"ivan24004"},"content":"        taskList.add(t);","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"ivan24004"},"content":"    public void markTask(int idx) {","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"ivan24004"},"content":"        getTask(idx).mark();","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"ivan24004"},"content":"    public void unmarkTask(int idx) {","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"ivan24004"},"content":"        getTask(idx).unmark();","lastModifiedDate":"2024-01-23"},{"lineNumber":29,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":30,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":31,"author":{"gitId":"ivan24004"},"content":"    public Task getTask(int idx) {","lastModifiedDate":"2024-01-23"},{"lineNumber":32,"author":{"gitId":"ivan24004"},"content":"        return taskList.get(idx - 1);","lastModifiedDate":"2024-01-23"},{"lineNumber":33,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":34,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":35,"author":{"gitId":"ivan24004"},"content":"    public void removeTask(int idx) throws RemiError{","lastModifiedDate":"2024-01-24"},{"lineNumber":36,"author":{"gitId":"ivan24004"},"content":"        if (idx \u003c 0 || taskList.size() \u003c\u003d idx) {","lastModifiedDate":"2024-01-24"},{"lineNumber":37,"author":{"gitId":"ivan24004"},"content":"            throw new RemiError(\"Task is out of bounds and couldn\u0027t be removed.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":38,"author":{"gitId":"ivan24004"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":39,"author":{"gitId":"ivan24004"},"content":"        taskList.remove(idx - 1);","lastModifiedDate":"2024-01-24"},{"lineNumber":40,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":41,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":42,"author":{"gitId":"ivan24004"},"content":"    public int size() {","lastModifiedDate":"2024-01-23"},{"lineNumber":43,"author":{"gitId":"ivan24004"},"content":"        return taskList.size();","lastModifiedDate":"2024-01-23"},{"lineNumber":44,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":45,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":46,"author":{"gitId":"ivan24004"},"content":"    /**","lastModifiedDate":"2024-01-23"},{"lineNumber":47,"author":{"gitId":"ivan24004"},"content":"     * Returns the numbered list of tasks.","lastModifiedDate":"2024-01-23"},{"lineNumber":48,"author":{"gitId":"ivan24004"},"content":"     *","lastModifiedDate":"2024-01-23"},{"lineNumber":49,"author":{"gitId":"ivan24004"},"content":"     * @return list of tasks as a string","lastModifiedDate":"2024-01-23"},{"lineNumber":50,"author":{"gitId":"ivan24004"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":51,"author":{"gitId":"ivan24004"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":52,"author":{"gitId":"ivan24004"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":53,"author":{"gitId":"ivan24004"},"content":"        StringBuilder res \u003d new StringBuilder();","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"ivan24004"},"content":"        // NOTE: May be slow","lastModifiedDate":"2024-01-23"},{"lineNumber":55,"author":{"gitId":"ivan24004"},"content":"        for (int i \u003d 1; taskList.size() \u003e\u003d i; i++) {","lastModifiedDate":"2024-01-23"},{"lineNumber":56,"author":{"gitId":"ivan24004"},"content":"            res.append(String.format(\"%d. %s\", i, getTask(i)));","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"ivan24004"},"content":"            if (i !\u003d taskList.size()) {","lastModifiedDate":"2024-01-23"},{"lineNumber":58,"author":{"gitId":"ivan24004"},"content":"                res.append(\"\\n\");","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"ivan24004"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":60,"author":{"gitId":"ivan24004"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":61,"author":{"gitId":"ivan24004"},"content":"        return res.toString();","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"ivan24004"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"ivan24004"},"content":"     * Returns a parsable string of the deadline task. Meant to be used for remi.storage purposes.","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"ivan24004"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"ivan24004"},"content":"     * @return a parsable string representation of the task and all its details","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"ivan24004"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"ivan24004"},"content":"    public String parsableString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"ivan24004"},"content":"        StringBuilder res \u003d new StringBuilder();","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"ivan24004"},"content":"        // NOTE: May be slow","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"ivan24004"},"content":"        for (int i \u003d 1; taskList.size() \u003e\u003d i; i++) {","lastModifiedDate":"2024-01-30"},{"lineNumber":73,"author":{"gitId":"ivan24004"},"content":"            res.append(getTask(i).parsableString());","lastModifiedDate":"2024-01-30"},{"lineNumber":74,"author":{"gitId":"ivan24004"},"content":"            if (i !\u003d taskList.size()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":75,"author":{"gitId":"ivan24004"},"content":"                res.append(\"\\n\");","lastModifiedDate":"2024-01-30"},{"lineNumber":76,"author":{"gitId":"ivan24004"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":77,"author":{"gitId":"ivan24004"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":78,"author":{"gitId":"ivan24004"},"content":"        return res.toString();","lastModifiedDate":"2024-01-30"},{"lineNumber":79,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":80,"author":{"gitId":"ivan24004"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"ivan24004":80}},{"path":"src/main/java/remi/model/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivan24004"},"content":"package remi.model;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"ivan24004"},"content":"public class ToDo extends Task{","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"ivan24004"},"content":"    public ToDo(String label) {","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"ivan24004"},"content":"        super(label);","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"ivan24004"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"ivan24004"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"ivan24004"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"ivan24004"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"ivan24004"},"content":"     * Returns a parsable string of the todo task. Meant to be used for remi.storage purposes.","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"ivan24004"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"ivan24004"},"content":"     * @return a parsable string representation of the task and all its details","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"ivan24004"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"ivan24004"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"ivan24004"},"content":"    public String parsableString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"ivan24004"},"content":"        return String.format(\"T|%s\", super.parsableString());","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"ivan24004"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"ivan24004":22}},{"path":"src/main/java/remi/model/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivan24004"},"content":"package remi.model;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"ivan24004"},"content":"import remi.io.Inputter;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"ivan24004"},"content":"import remi.io.Message;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"ivan24004"},"content":"import remi.io.Outputter;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"ivan24004"},"content":"import remi.model.commands.CommandList;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"ivan24004"},"content":"import remi.parsing.Parser;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"ivan24004"},"content":"import remi.storage.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"ivan24004"},"content":"import remi.utils.RemiError;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"ivan24004"},"content":"public class Ui {","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"ivan24004"},"content":"    private boolean exitLoop;","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"ivan24004"},"content":"    private StoredTaskList taskList;","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"ivan24004"},"content":"    private CommandList commandList;","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"ivan24004"},"content":"    private Parser parser;","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"ivan24004"},"content":"    public Ui() {","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"ivan24004"},"content":"        this.exitLoop \u003d false;","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"ivan24004"},"content":"        this.taskList \u003d Storage.get();","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"ivan24004"},"content":"        this.commandList \u003d new CommandList(this.taskList, this);","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"ivan24004"},"content":"        this.parser \u003d new Parser(this.commandList);","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"ivan24004"},"content":"    public void ioLoop() {","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"ivan24004"},"content":"        Outputter.outputMessage(new Message(\"Hello! I\u0027m Remi\\n\" + \"What can I do for you?\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"ivan24004"},"content":"        Storage.get();","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":30,"author":{"gitId":"ivan24004"},"content":"        while (!exitLoop) {","lastModifiedDate":"2024-01-23"},{"lineNumber":31,"author":{"gitId":"ivan24004"},"content":"            try {","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"ivan24004"},"content":"                Message input \u003d Inputter.inputMessage();","lastModifiedDate":"2024-01-23"},{"lineNumber":33,"author":{"gitId":"ivan24004"},"content":"                Message output \u003d parser.parseAndRun(input);","lastModifiedDate":"2024-01-23"},{"lineNumber":34,"author":{"gitId":"ivan24004"},"content":"                Outputter.outputMessage(output);","lastModifiedDate":"2024-01-23"},{"lineNumber":35,"author":{"gitId":"ivan24004"},"content":"                if (exitLoop)","lastModifiedDate":"2024-01-23"},{"lineNumber":36,"author":{"gitId":"ivan24004"},"content":"                    break;","lastModifiedDate":"2024-01-23"},{"lineNumber":37,"author":{"gitId":"ivan24004"},"content":"            } catch (RemiError err) {","lastModifiedDate":"2024-01-24"},{"lineNumber":38,"author":{"gitId":"ivan24004"},"content":"                Outputter.outputMessage(new Message(err.getMessage()));","lastModifiedDate":"2024-01-24"},{"lineNumber":39,"author":{"gitId":"ivan24004"},"content":"            }","lastModifiedDate":"2024-01-24"},{"lineNumber":40,"author":{"gitId":"ivan24004"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":41,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":42,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":43,"author":{"gitId":"ivan24004"},"content":"    public void exitIoLoop() {","lastModifiedDate":"2024-01-23"},{"lineNumber":44,"author":{"gitId":"ivan24004"},"content":"        exitLoop \u003d true;","lastModifiedDate":"2024-01-23"},{"lineNumber":45,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":46,"author":{"gitId":"ivan24004"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"ivan24004":46}},{"path":"src/main/java/remi/model/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivan24004"},"content":"package remi.model.commands;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"ivan24004"},"content":"import remi.io.Message;","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"ivan24004"},"content":"import remi.utils.RemiError;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"ivan24004"},"content":"@FunctionalInterface","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"ivan24004"},"content":"public interface Command {","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"ivan24004"},"content":"    /**","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"ivan24004"},"content":"     *","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"ivan24004"},"content":"     * @param args the arguments of the message (this excludes the first word of the command)","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"ivan24004"},"content":"     * @return the message to be outputted","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"ivan24004"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"ivan24004"},"content":"    Message run(String args) throws RemiError;","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"ivan24004"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"ivan24004":13}},{"path":"src/main/java/remi/model/commands/CommandList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivan24004"},"content":"package remi.model.commands;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"ivan24004"},"content":"import remi.io.Message;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"ivan24004"},"content":"import remi.model.*;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"ivan24004"},"content":"import remi.utils.RemiError;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"ivan24004"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"ivan24004"},"content":"public class CommandList {","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"ivan24004"},"content":"    private HashMap\u003cString, Command\u003e commandLookup;","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"ivan24004"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"ivan24004"},"content":"    private Ui chatbot;","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"ivan24004"},"content":"    /**","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"ivan24004"},"content":"     * Finds the option of the form \".../option...\".","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"ivan24004"},"content":"     * Example: \"going home /by: friday\", should return the string \"friday\"","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"ivan24004"},"content":"     *","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"ivan24004"},"content":"     * @param option the option to be found, include the \"/\" at the start","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"ivan24004"},"content":"     * @param input the input line to be scanned","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"ivan24004"},"content":"     * @return the string value of the specific option","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"ivan24004"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"ivan24004"},"content":"    private String findOption(String option, String input) throws RemiError {","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"ivan24004"},"content":"        int idx \u003d input.indexOf(option);","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"ivan24004"},"content":"        /// TODO: handle this","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"ivan24004"},"content":"        if (idx \u003d\u003d -1) {","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"ivan24004"},"content":"            throw new RemiError(\"I couldn\u0027t find a \" + option + \", please specify it by adding a \" + option);","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"ivan24004"},"content":"        } else {","lastModifiedDate":"2024-01-23"},{"lineNumber":29,"author":{"gitId":"ivan24004"},"content":"            int endIdx \u003d input.indexOf(\"/\", idx + 1);","lastModifiedDate":"2024-01-23"},{"lineNumber":30,"author":{"gitId":"ivan24004"},"content":"            if (endIdx \u003d\u003d -1) {","lastModifiedDate":"2024-01-23"},{"lineNumber":31,"author":{"gitId":"ivan24004"},"content":"                endIdx \u003d input.length();","lastModifiedDate":"2024-01-23"},{"lineNumber":32,"author":{"gitId":"ivan24004"},"content":"            } else {","lastModifiedDate":"2024-01-23"},{"lineNumber":33,"author":{"gitId":"ivan24004"},"content":"                // decrement to get the space before the /","lastModifiedDate":"2024-01-23"},{"lineNumber":34,"author":{"gitId":"ivan24004"},"content":"                endIdx \u003d endIdx - 1;","lastModifiedDate":"2024-01-23"},{"lineNumber":35,"author":{"gitId":"ivan24004"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":36,"author":{"gitId":"ivan24004"},"content":"            return input.substring(idx + option.length() + 1, endIdx);","lastModifiedDate":"2024-01-23"},{"lineNumber":37,"author":{"gitId":"ivan24004"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":38,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":39,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":40,"author":{"gitId":"ivan24004"},"content":"    private String getLabel(String input) throws RemiError {","lastModifiedDate":"2024-01-24"},{"lineNumber":41,"author":{"gitId":"ivan24004"},"content":"        int idx \u003d input.indexOf(\"/\");","lastModifiedDate":"2024-01-23"},{"lineNumber":42,"author":{"gitId":"ivan24004"},"content":"        if (idx \u003d\u003d -1) {","lastModifiedDate":"2024-01-24"},{"lineNumber":43,"author":{"gitId":"ivan24004"},"content":"            idx \u003d input.length();","lastModifiedDate":"2024-01-24"},{"lineNumber":44,"author":{"gitId":"ivan24004"},"content":"        } else {","lastModifiedDate":"2024-01-24"},{"lineNumber":45,"author":{"gitId":"ivan24004"},"content":"            idx--;","lastModifiedDate":"2024-01-24"},{"lineNumber":46,"author":{"gitId":"ivan24004"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":47,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":48,"author":{"gitId":"ivan24004"},"content":"        if (idx \u003c\u003d 0) {","lastModifiedDate":"2024-01-24"},{"lineNumber":49,"author":{"gitId":"ivan24004"},"content":"            throw new RemiError(\"You didn\u0027t put a description for the task.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":50,"author":{"gitId":"ivan24004"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":51,"author":{"gitId":"ivan24004"},"content":"        return input.substring(0, idx);","lastModifiedDate":"2024-01-24"},{"lineNumber":52,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":53,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":54,"author":{"gitId":"ivan24004"},"content":"    private void loadCommands() {","lastModifiedDate":"2024-01-23"},{"lineNumber":55,"author":{"gitId":"ivan24004"},"content":"        commandLookup.put(\"exit\", (args) -\u003e {","lastModifiedDate":"2024-01-23"},{"lineNumber":56,"author":{"gitId":"ivan24004"},"content":"            chatbot.exitIoLoop();","lastModifiedDate":"2024-01-23"},{"lineNumber":57,"author":{"gitId":"ivan24004"},"content":"            return new Message(\"Bye. Please finish some of your tasks.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":58,"author":{"gitId":"ivan24004"},"content":"        });","lastModifiedDate":"2024-01-23"},{"lineNumber":59,"author":{"gitId":"ivan24004"},"content":"        commandLookup.put(\"list\", (args) -\u003e {","lastModifiedDate":"2024-01-23"},{"lineNumber":60,"author":{"gitId":"ivan24004"},"content":"            return new Message(taskList.toString());","lastModifiedDate":"2024-01-23"},{"lineNumber":61,"author":{"gitId":"ivan24004"},"content":"        });","lastModifiedDate":"2024-01-23"},{"lineNumber":62,"author":{"gitId":"ivan24004"},"content":"        commandLookup.put(\"mark\", (args) -\u003e {","lastModifiedDate":"2024-01-23"},{"lineNumber":63,"author":{"gitId":"ivan24004"},"content":"            int idx \u003d Integer.parseInt(args);","lastModifiedDate":"2024-01-23"},{"lineNumber":64,"author":{"gitId":"ivan24004"},"content":"            taskList.markTask(idx);","lastModifiedDate":"2024-01-23"},{"lineNumber":65,"author":{"gitId":"ivan24004"},"content":"            return new Message(\"Wow you took your time with that one:\\n\" + taskList.getTask(idx));","lastModifiedDate":"2024-01-23"},{"lineNumber":66,"author":{"gitId":"ivan24004"},"content":"        });","lastModifiedDate":"2024-01-23"},{"lineNumber":67,"author":{"gitId":"ivan24004"},"content":"        commandLookup.put(\"unmark\", (args) -\u003e {","lastModifiedDate":"2024-01-23"},{"lineNumber":68,"author":{"gitId":"ivan24004"},"content":"            int idx \u003d Integer.parseInt(args);","lastModifiedDate":"2024-01-23"},{"lineNumber":69,"author":{"gitId":"ivan24004"},"content":"            taskList.unmarkTask(idx);","lastModifiedDate":"2024-01-23"},{"lineNumber":70,"author":{"gitId":"ivan24004"},"content":"            return new Message(\"Why did you say it was finished then?\\n\" + taskList.getTask(idx));","lastModifiedDate":"2024-01-24"},{"lineNumber":71,"author":{"gitId":"ivan24004"},"content":"        });","lastModifiedDate":"2024-01-23"},{"lineNumber":72,"author":{"gitId":"ivan24004"},"content":"        commandLookup.put(\"todo\", (args) -\u003e {","lastModifiedDate":"2024-01-23"},{"lineNumber":73,"author":{"gitId":"ivan24004"},"content":"            String label \u003d getLabel(args);","lastModifiedDate":"2024-01-24"},{"lineNumber":74,"author":{"gitId":"ivan24004"},"content":"            ToDo todo \u003d new ToDo(label);","lastModifiedDate":"2024-01-24"},{"lineNumber":75,"author":{"gitId":"ivan24004"},"content":"            taskList.addTask(todo);","lastModifiedDate":"2024-01-23"},{"lineNumber":76,"author":{"gitId":"ivan24004"},"content":"            return new Message(String.format(\"I\u0027ve added the task.\\n%s\\nYou still have %d tasks in the list.\", todo, taskList.size()));","lastModifiedDate":"2024-01-23"},{"lineNumber":77,"author":{"gitId":"ivan24004"},"content":"        });","lastModifiedDate":"2024-01-23"},{"lineNumber":78,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":79,"author":{"gitId":"ivan24004"},"content":"        commandLookup.put(\"deadline\", (args) -\u003e {","lastModifiedDate":"2024-01-23"},{"lineNumber":80,"author":{"gitId":"ivan24004"},"content":"            String label \u003d getLabel(args);","lastModifiedDate":"2024-01-23"},{"lineNumber":81,"author":{"gitId":"ivan24004"},"content":"            String by \u003d findOption(\"/by\", args);","lastModifiedDate":"2024-01-23"},{"lineNumber":82,"author":{"gitId":"ivan24004"},"content":"            Deadline deadline \u003d new Deadline(label, by);","lastModifiedDate":"2024-01-23"},{"lineNumber":83,"author":{"gitId":"ivan24004"},"content":"            taskList.addTask(deadline);","lastModifiedDate":"2024-01-23"},{"lineNumber":84,"author":{"gitId":"ivan24004"},"content":"            return new Message(String.format(\"I\u0027ve added the task.\\n%s\\nYou still have %d tasks in the list.\", deadline, taskList.size()));","lastModifiedDate":"2024-01-23"},{"lineNumber":85,"author":{"gitId":"ivan24004"},"content":"        });","lastModifiedDate":"2024-01-23"},{"lineNumber":86,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":87,"author":{"gitId":"ivan24004"},"content":"        commandLookup.put(\"event\", (args) -\u003e {","lastModifiedDate":"2024-01-23"},{"lineNumber":88,"author":{"gitId":"ivan24004"},"content":"            String label \u003d getLabel(args);","lastModifiedDate":"2024-01-23"},{"lineNumber":89,"author":{"gitId":"ivan24004"},"content":"            String from \u003d findOption(\"/from\", args);","lastModifiedDate":"2024-01-23"},{"lineNumber":90,"author":{"gitId":"ivan24004"},"content":"            String to \u003d findOption(\"/to\", args);","lastModifiedDate":"2024-01-23"},{"lineNumber":91,"author":{"gitId":"ivan24004"},"content":"            Event event \u003d new Event(label, from, to);","lastModifiedDate":"2024-01-23"},{"lineNumber":92,"author":{"gitId":"ivan24004"},"content":"            taskList.addTask(event);","lastModifiedDate":"2024-01-23"},{"lineNumber":93,"author":{"gitId":"ivan24004"},"content":"            return new Message(String.format(\"I\u0027ve added the task.\\n%s\\nYou still have %d tasks in the list.\", event, taskList.size()));","lastModifiedDate":"2024-01-23"},{"lineNumber":94,"author":{"gitId":"ivan24004"},"content":"        });","lastModifiedDate":"2024-01-23"},{"lineNumber":95,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":96,"author":{"gitId":"ivan24004"},"content":"        commandLookup.put(\"delete\", (args) -\u003e {","lastModifiedDate":"2024-01-24"},{"lineNumber":97,"author":{"gitId":"ivan24004"},"content":"            int idx \u003d Integer.parseInt(args);","lastModifiedDate":"2024-01-24"},{"lineNumber":98,"author":{"gitId":"ivan24004"},"content":"            Task task \u003d taskList.getTask(idx);","lastModifiedDate":"2024-01-24"},{"lineNumber":99,"author":{"gitId":"ivan24004"},"content":"            taskList.removeTask(idx);","lastModifiedDate":"2024-01-24"},{"lineNumber":100,"author":{"gitId":"ivan24004"},"content":"            return new Message(String.format(\"I\u0027ve removed the task.\\n%s\\nYou still have %d tasks in the list.\", task, taskList.size()));","lastModifiedDate":"2024-01-24"},{"lineNumber":101,"author":{"gitId":"ivan24004"},"content":"        });","lastModifiedDate":"2024-01-24"},{"lineNumber":102,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":103,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":104,"author":{"gitId":"ivan24004"},"content":"    /**","lastModifiedDate":"2024-01-23"},{"lineNumber":105,"author":{"gitId":"ivan24004"},"content":"     *","lastModifiedDate":"2024-01-23"},{"lineNumber":106,"author":{"gitId":"ivan24004"},"content":"     * @param taskList TaskList object from Chatbot","lastModifiedDate":"2024-01-23"},{"lineNumber":107,"author":{"gitId":"ivan24004"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":108,"author":{"gitId":"ivan24004"},"content":"    public CommandList(TaskList taskList, Ui chatbot) {","lastModifiedDate":"2024-02-01"},{"lineNumber":109,"author":{"gitId":"ivan24004"},"content":"        this.commandLookup \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-01-23"},{"lineNumber":110,"author":{"gitId":"ivan24004"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-01-23"},{"lineNumber":111,"author":{"gitId":"ivan24004"},"content":"        this.chatbot \u003d chatbot;","lastModifiedDate":"2024-01-23"},{"lineNumber":112,"author":{"gitId":"ivan24004"},"content":"        loadCommands();","lastModifiedDate":"2024-01-23"},{"lineNumber":113,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":114,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":115,"author":{"gitId":"ivan24004"},"content":"    public Message runKeyword(String keyword, String args) throws RemiError {","lastModifiedDate":"2024-01-24"},{"lineNumber":116,"author":{"gitId":"ivan24004"},"content":"        if (this.commandLookup.containsKey(keyword)) {","lastModifiedDate":"2024-01-23"},{"lineNumber":117,"author":{"gitId":"ivan24004"},"content":"            return commandLookup.get(keyword).run(args);","lastModifiedDate":"2024-01-23"},{"lineNumber":118,"author":{"gitId":"ivan24004"},"content":"        } else {","lastModifiedDate":"2024-01-23"},{"lineNumber":119,"author":{"gitId":"ivan24004"},"content":"            throw new RemiError(keyword + \" is not a real command.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":120,"author":{"gitId":"ivan24004"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":121,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":122,"author":{"gitId":"ivan24004"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"ivan24004":122}},{"path":"src/main/java/remi/parsing/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivan24004"},"content":"package remi.parsing;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"ivan24004"},"content":"import remi.io.Message;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"ivan24004"},"content":"import remi.model.commands.CommandList;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"ivan24004"},"content":"import remi.utils.RemiError;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"ivan24004"},"content":"public class Parser {","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"ivan24004"},"content":"    CommandList commandList;","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"ivan24004"},"content":"    private String[] getKeywordArgsSplit(Message input) {","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"ivan24004"},"content":"        int idx \u003d input.getMessage().indexOf(\u0027 \u0027);","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"ivan24004"},"content":"        String[] res \u003d new String[2];","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"ivan24004"},"content":"        // this indicates a single word command","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"ivan24004"},"content":"        if (idx \u003d\u003d -1) {","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"ivan24004"},"content":"            res[0] \u003d input.getMessage();","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"ivan24004"},"content":"            res[1] \u003d \"\";","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"ivan24004"},"content":"        } else {","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"ivan24004"},"content":"            res[0] \u003d input.getMessage().substring(0, idx);","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"ivan24004"},"content":"            res[1] \u003d input.getMessage().substring(idx + 1);","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"ivan24004"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"ivan24004"},"content":"        return res;","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"ivan24004"},"content":"    /**","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"ivan24004"},"content":"     * Initializes the parser and loads all the commands.","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"ivan24004"},"content":"     *","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"ivan24004"},"content":"     * @param commandList CommandList object provided by the Chatbot","lastModifiedDate":"2024-01-23"},{"lineNumber":29,"author":{"gitId":"ivan24004"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":30,"author":{"gitId":"ivan24004"},"content":"    public Parser(CommandList commandList) {","lastModifiedDate":"2024-01-23"},{"lineNumber":31,"author":{"gitId":"ivan24004"},"content":"        this.commandList \u003d commandList;","lastModifiedDate":"2024-01-23"},{"lineNumber":32,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":33,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":34,"author":{"gitId":"ivan24004"},"content":"    /**","lastModifiedDate":"2024-01-23"},{"lineNumber":35,"author":{"gitId":"ivan24004"},"content":"     * Runs the necessary logic given a message and returns the output.","lastModifiedDate":"2024-01-23"},{"lineNumber":36,"author":{"gitId":"ivan24004"},"content":"     *","lastModifiedDate":"2024-01-23"},{"lineNumber":37,"author":{"gitId":"ivan24004"},"content":"     * @param input message received from the console","lastModifiedDate":"2024-01-23"},{"lineNumber":38,"author":{"gitId":"ivan24004"},"content":"     * @return message to be outputted","lastModifiedDate":"2024-01-23"},{"lineNumber":39,"author":{"gitId":"ivan24004"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":40,"author":{"gitId":"ivan24004"},"content":"    public Message parseAndRun(Message input) throws RemiError {","lastModifiedDate":"2024-01-24"},{"lineNumber":41,"author":{"gitId":"ivan24004"},"content":"        String[] splitMsg \u003d getKeywordArgsSplit(input);","lastModifiedDate":"2024-01-23"},{"lineNumber":42,"author":{"gitId":"ivan24004"},"content":"        String keyword \u003d splitMsg[0];","lastModifiedDate":"2024-01-23"},{"lineNumber":43,"author":{"gitId":"ivan24004"},"content":"        String args \u003d splitMsg[1];","lastModifiedDate":"2024-01-23"},{"lineNumber":44,"author":{"gitId":"ivan24004"},"content":"        return commandList.runKeyword(keyword, args);","lastModifiedDate":"2024-01-23"},{"lineNumber":45,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":46,"author":{"gitId":"ivan24004"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"ivan24004":46}},{"path":"src/main/java/remi/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivan24004"},"content":"package remi.storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"ivan24004"},"content":"import remi.model.*;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"ivan24004"},"content":"import java.io.*;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"ivan24004"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"ivan24004"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"ivan24004"},"content":"import java.util.List;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"ivan24004"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"ivan24004"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"ivan24004"},"content":"public class Storage {","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"ivan24004"},"content":"    private static final String FILE_PATH \u003d \"tasks.txt\";","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"ivan24004"},"content":"    private static StoredTaskList parseData(ArrayList\u003cArrayList\u003cString\u003e\u003e data) {","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"ivan24004"},"content":"        StoredTaskList res \u003d new StoredTaskList();","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"ivan24004"},"content":"        for (ArrayList\u003cString\u003e line: data) {","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"ivan24004"},"content":"            if (line.size() \u003c 3) {","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"ivan24004"},"content":"                // early exit","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"ivan24004"},"content":"                return res;","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"ivan24004"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"ivan24004"},"content":"            String type \u003d line.get(0);","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"ivan24004"},"content":"            boolean isDone \u003d (line.get(1).equals(\"X\"));","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"ivan24004"},"content":"            String description \u003d line.get(2);","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"ivan24004"},"content":"            List\u003cString\u003e params \u003d line.subList(3, line.size());","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"ivan24004"},"content":"            switch(type) {","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"ivan24004"},"content":"            case \"T\":","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"ivan24004"},"content":"                res.addTask(new ToDo(description));","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"ivan24004"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"ivan24004"},"content":"            case \"E\":","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"ivan24004"},"content":"                if (params.size() \u003c 2) {","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"ivan24004"},"content":"                    return res;","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"ivan24004"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"ivan24004"},"content":"                String from \u003d params.get(0);","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"ivan24004"},"content":"                String to \u003d params.get(1);","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"ivan24004"},"content":"                res.addTask(new Event(description, from, to));","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"ivan24004"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"ivan24004"},"content":"            case \"D\":","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"ivan24004"},"content":"                if (params.isEmpty()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"ivan24004"},"content":"                    return res;","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"ivan24004"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"ivan24004"},"content":"                String by \u003d params.get(0);","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"ivan24004"},"content":"                res.addTask(new Deadline(description, by));","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"ivan24004"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"ivan24004"},"content":"            default:","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"ivan24004"},"content":"                return res;","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"ivan24004"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"ivan24004"},"content":"            if (isDone) {","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"ivan24004"},"content":"                res.markTask(res.size());","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"ivan24004"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"ivan24004"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"ivan24004"},"content":"        return res;","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"ivan24004"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"ivan24004"},"content":"     * Stores the string representation of the taskList in a designated file.","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"ivan24004"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"ivan24004"},"content":"    public static void store(StoredTaskList taskList) {","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"ivan24004"},"content":"        try (FileWriter out \u003d new FileWriter(FILE_PATH)){","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"ivan24004"},"content":"            out.write(taskList.parsableString());","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"ivan24004"},"content":"            out.close();","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"ivan24004"},"content":"        } catch (IOException err) {","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"ivan24004"},"content":"            // do nothing","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"ivan24004"},"content":"            System.out.println(err.toString());","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"ivan24004"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"ivan24004"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"ivan24004"},"content":"     * Retrieves a previously stored data file and returns its representation as a TaskList object.","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"ivan24004"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"ivan24004"},"content":"     * @return the stored TaskList object","lastModifiedDate":"2024-01-30"},{"lineNumber":73,"author":{"gitId":"ivan24004"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":74,"author":{"gitId":"ivan24004"},"content":"    public static StoredTaskList get() {","lastModifiedDate":"2024-01-30"},{"lineNumber":75,"author":{"gitId":"ivan24004"},"content":"        StoredTaskList output \u003d new StoredTaskList();","lastModifiedDate":"2024-01-30"},{"lineNumber":76,"author":{"gitId":"ivan24004"},"content":"        File f \u003d new File(FILE_PATH);","lastModifiedDate":"2024-01-30"},{"lineNumber":77,"author":{"gitId":"ivan24004"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":78,"author":{"gitId":"ivan24004"},"content":"            // only creates file if it doesn\u0027t exist yet","lastModifiedDate":"2024-01-30"},{"lineNumber":79,"author":{"gitId":"ivan24004"},"content":"            f.createNewFile();","lastModifiedDate":"2024-01-30"},{"lineNumber":80,"author":{"gitId":"ivan24004"},"content":"        } catch (IOException err) {","lastModifiedDate":"2024-01-30"},{"lineNumber":81,"author":{"gitId":"ivan24004"},"content":"            System.out.println(err.toString());","lastModifiedDate":"2024-01-30"},{"lineNumber":82,"author":{"gitId":"ivan24004"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":83,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":84,"author":{"gitId":"ivan24004"},"content":"        boolean corruptedFile \u003d false;","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"ivan24004"},"content":"        try (BufferedReader in \u003d new BufferedReader(new FileReader(f))) {","lastModifiedDate":"2024-01-30"},{"lineNumber":87,"author":{"gitId":"ivan24004"},"content":"            Stream\u003cString\u003e allLines \u003d in.lines();","lastModifiedDate":"2024-01-30"},{"lineNumber":88,"author":{"gitId":"ivan24004"},"content":"            Stream\u003cArrayList\u003cString\u003e\u003e splitParams \u003d allLines.map((line) -\u003e","lastModifiedDate":"2024-01-30"},{"lineNumber":89,"author":{"gitId":"ivan24004"},"content":"                    new ArrayList\u003c\u003e(Arrays.asList(line.split(\"\\\\|\"))));","lastModifiedDate":"2024-01-30"},{"lineNumber":90,"author":{"gitId":"ivan24004"},"content":"            ArrayList\u003cArrayList\u003cString\u003e\u003e data \u003d splitParams.collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2024-01-30"},{"lineNumber":91,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":92,"author":{"gitId":"ivan24004"},"content":"            return parseData(data);","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"ivan24004"},"content":"        } catch (IOException err) {","lastModifiedDate":"2024-01-30"},{"lineNumber":94,"author":{"gitId":"ivan24004"},"content":"            System.out.println(err.toString());","lastModifiedDate":"2024-01-30"},{"lineNumber":95,"author":{"gitId":"ivan24004"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":96,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":97,"author":{"gitId":"ivan24004"},"content":"        return output;","lastModifiedDate":"2024-01-30"},{"lineNumber":98,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":99,"author":{"gitId":"ivan24004"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"ivan24004":99}},{"path":"src/main/java/remi/utils/RemiError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivan24004"},"content":"package remi.utils;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"ivan24004"},"content":"public class RemiError extends Exception{","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"ivan24004"},"content":"    public RemiError(String errorMessage) {","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"ivan24004"},"content":"        super(errorMessage);","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"ivan24004"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"ivan24004":7}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ivan24004"},"content":"--------------------------------------------------","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"ivan24004"},"content":"Hello! I\u0027m remi.Remi","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"ivan24004"},"content":"What can I do for you?","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"ivan24004"},"content":"--------------------------------------------------","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"ivan24004"},"content":"--------------------------------------------------","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"ivan24004"},"content":"I\u0027ve added the task.","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"ivan24004"},"content":"[T][ ] borrow book","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"ivan24004"},"content":"You still have 1 tasks in the list.","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"ivan24004"},"content":"--------------------------------------------------","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"ivan24004"},"content":"--------------------------------------------------","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"ivan24004"},"content":"1. [T][ ] borrow book","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"ivan24004"},"content":"--------------------------------------------------","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"ivan24004"},"content":"--------------------------------------------------","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"ivan24004"},"content":"I\u0027ve added the task.","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"ivan24004"},"content":"[D][ ] return book (by: Sunday)","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"ivan24004"},"content":"You still have 2 tasks in the list.","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"ivan24004"},"content":"--------------------------------------------------","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"ivan24004"},"content":"--------------------------------------------------","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"ivan24004"},"content":"I\u0027ve added the task.","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"ivan24004"},"content":"[E][ ] project meeting (from: Mon 2pm to: 4pm)","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"ivan24004"},"content":"You still have 3 tasks in the list.","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"ivan24004"},"content":"--------------------------------------------------","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"ivan24004"},"content":"--------------------------------------------------","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"ivan24004"},"content":"I\u0027ve added the task.","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"ivan24004"},"content":"[D][ ] do homework (by: no idea :-p)","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"ivan24004"},"content":"You still have 4 tasks in the list.","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"ivan24004"},"content":"--------------------------------------------------","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"ivan24004"},"content":"--------------------------------------------------","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"ivan24004"},"content":"Wow you took your time with that one:","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"ivan24004"},"content":"[T][X] borrow book","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"ivan24004"},"content":"--------------------------------------------------","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"ivan24004"},"content":"--------------------------------------------------","lastModifiedDate":"2024-01-24"},{"lineNumber":33,"author":{"gitId":"ivan24004"},"content":"1. [T][X] borrow book","lastModifiedDate":"2024-01-24"},{"lineNumber":34,"author":{"gitId":"ivan24004"},"content":"2. [D][ ] return book (by: Sunday)","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"ivan24004"},"content":"3. [E][ ] project meeting (from: Mon 2pm to: 4pm)","lastModifiedDate":"2024-01-24"},{"lineNumber":36,"author":{"gitId":"ivan24004"},"content":"4. [D][ ] do homework (by: no idea :-p)","lastModifiedDate":"2024-01-24"},{"lineNumber":37,"author":{"gitId":"ivan24004"},"content":"--------------------------------------------------","lastModifiedDate":"2024-01-24"},{"lineNumber":38,"author":{"gitId":"ivan24004"},"content":"--------------------------------------------------","lastModifiedDate":"2024-01-24"},{"lineNumber":39,"author":{"gitId":"ivan24004"},"content":"Wow you took your time with that one:","lastModifiedDate":"2024-01-24"},{"lineNumber":40,"author":{"gitId":"ivan24004"},"content":"[E][X] project meeting (from: Mon 2pm to: 4pm)","lastModifiedDate":"2024-01-24"},{"lineNumber":41,"author":{"gitId":"ivan24004"},"content":"--------------------------------------------------","lastModifiedDate":"2024-01-24"},{"lineNumber":42,"author":{"gitId":"ivan24004"},"content":"--------------------------------------------------","lastModifiedDate":"2024-01-24"},{"lineNumber":43,"author":{"gitId":"ivan24004"},"content":"Why did you say it was finished then?","lastModifiedDate":"2024-01-24"},{"lineNumber":44,"author":{"gitId":"ivan24004"},"content":"[T][ ] borrow book","lastModifiedDate":"2024-01-24"},{"lineNumber":45,"author":{"gitId":"ivan24004"},"content":"--------------------------------------------------","lastModifiedDate":"2024-01-24"},{"lineNumber":46,"author":{"gitId":"ivan24004"},"content":"--------------------------------------------------","lastModifiedDate":"2024-01-24"},{"lineNumber":47,"author":{"gitId":"ivan24004"},"content":"1. [T][ ] borrow book","lastModifiedDate":"2024-01-24"},{"lineNumber":48,"author":{"gitId":"ivan24004"},"content":"2. [D][ ] return book (by: Sunday)","lastModifiedDate":"2024-01-24"},{"lineNumber":49,"author":{"gitId":"ivan24004"},"content":"3. [E][X] project meeting (from: Mon 2pm to: 4pm)","lastModifiedDate":"2024-01-24"},{"lineNumber":50,"author":{"gitId":"ivan24004"},"content":"4. [D][ ] do homework (by: no idea :-p)","lastModifiedDate":"2024-01-24"},{"lineNumber":51,"author":{"gitId":"ivan24004"},"content":"--------------------------------------------------","lastModifiedDate":"2024-01-24"},{"lineNumber":52,"author":{"gitId":"ivan24004"},"content":"--------------------------------------------------","lastModifiedDate":"2024-01-24"},{"lineNumber":53,"author":{"gitId":"ivan24004"},"content":"Bye. Please finish some of your tasks.","lastModifiedDate":"2024-01-24"},{"lineNumber":54,"author":{"gitId":"ivan24004"},"content":"--------------------------------------------------","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"ivan24004":54}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"ivan24004"},"content":"javac  -cp ..\\src\\main\\java\\remi -Xlint:none -d ..\\bin ..\\src\\main\\java\\remi\\Remi.java","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"ivan24004"},"content":"java -classpath ..\\bin remi.Remi \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":19,"ivan24004":2}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"ivan24004"},"content":"if ! javac -cp ../src/main/java/remi -Xlint:none -d ../bin ../src/main/java/remi/*.java","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"ivan24004"},"content":"java -classpath ../bin remi.Remi \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":36,"ivan24004":2}}]
