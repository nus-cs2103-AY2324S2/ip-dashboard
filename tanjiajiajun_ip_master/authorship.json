[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"tanjiajiajun"},"content":"# duke.Duke project template","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"tanjiajiajun"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tanjiajiajun":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"tanjiajiajun"},"content":"    mainClass.set(\"duke.NewDuke\")","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tanjiajiajun":1,"-":41}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tanjiajiajun"},"content":"T | 1 | borrow book","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"tanjiajiajun"},"content":"E | 0 | project meeting | Mon 2pm | 4pm","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"tanjiajiajun"},"content":"T | 0 | hello dworld","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"tanjiajiajun":3}},{"path":"src/main/java/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanjiajiajun"},"content":"package commands;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"tanjiajiajun"},"content":"public class DeadlineCommand {","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"tanjiajiajun"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"tanjiajiajun":4}},{"path":"src/main/java/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanjiajiajun"},"content":"package commands;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"tanjiajiajun"},"content":"public class EventCommand {","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"tanjiajiajun"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"tanjiajiajun":4}},{"path":"src/main/java/commands/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanjiajiajun"},"content":"package commands;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"tanjiajiajun"},"content":"public class ToDoCommand {","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"tanjiajiajun"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"tanjiajiajun":4}},{"path":"src/main/java/duke/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanjiajiajun"},"content":"package duke;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"tanjiajiajun"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"tanjiajiajun"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"tanjiajiajun"},"content":"public class Deadlines extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"tanjiajiajun"},"content":"    public LocalDateTime deadline;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"tanjiajiajun"},"content":"    public Deadlines(String description, LocalDateTime deadline) {","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"tanjiajiajun"},"content":"        super(description);","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"tanjiajiajun"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"tanjiajiajun"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"tanjiajiajun"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"tanjiajiajun"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"tanjiajiajun"},"content":"        DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"tanjiajiajun"},"content":"        String formattedDate \u003d deadline.format(outputFormatter);","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"tanjiajiajun"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), formattedDate);","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"tanjiajiajun"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"tanjiajiajun"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"tanjiajiajun":20}},{"path":"src/main/java/duke/DukeExceptions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanjiajiajun"},"content":"package duke;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"tanjiajiajun"},"content":"public class DukeExceptions extends Exception{","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"tanjiajiajun"},"content":"    public DukeExceptions() {","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"tanjiajiajun"},"content":"        super();","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"tanjiajiajun"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"tanjiajiajun"},"content":"    public String output() {","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"tanjiajiajun"},"content":"        return \"Oh no! \";","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"tanjiajiajun"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"tanjiajiajun"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"tanjiajiajun":10}},{"path":"src/main/java/duke/EmptyTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanjiajiajun"},"content":"package duke;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"tanjiajiajun"},"content":"public class EmptyTaskException extends DukeExceptions{","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"tanjiajiajun"},"content":"    public String msg \u003d \"You can\u0027t do nothing!\";","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"tanjiajiajun"},"content":"    public EmptyTaskException() {","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"tanjiajiajun"},"content":"        super();","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"tanjiajiajun"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"tanjiajiajun"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"tanjiajiajun"},"content":"    public String output() {","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"tanjiajiajun"},"content":"        return String.format(\"%s%s\\n\", super.output(), this.msg);","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"tanjiajiajun"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"tanjiajiajun"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"tanjiajiajun":17}},{"path":"src/main/java/duke/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanjiajiajun"},"content":"package duke;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"tanjiajiajun"},"content":"public class Events extends Task{","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"tanjiajiajun"},"content":"    public String from;","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"tanjiajiajun"},"content":"    public String to;","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"tanjiajiajun"},"content":"    public Events(String description, String from, String to) {","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"tanjiajiajun"},"content":"        super(description);","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"tanjiajiajun"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"tanjiajiajun"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"tanjiajiajun"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"tanjiajiajun"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"tanjiajiajun"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"tanjiajiajun"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\", super.toString(), this.from, this.to);","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"tanjiajiajun"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"tanjiajiajun"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"tanjiajiajun":17}},{"path":"src/main/java/duke/NewDuke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanjiajiajun"},"content":"package duke;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"tanjiajiajun"},"content":"public class NewDuke {","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"tanjiajiajun"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"tanjiajiajun"},"content":"    private UI ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"tanjiajiajun"},"content":"    private Save saver;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"tanjiajiajun"},"content":"    private Parser parser;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"tanjiajiajun"},"content":"    public NewDuke(String filePath) {","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"tanjiajiajun"},"content":"        ui \u003d new UI();","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"tanjiajiajun"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"tanjiajiajun"},"content":"        saver \u003d new Save(filePath);","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"tanjiajiajun"},"content":"        parser \u003d new Parser(storage);","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"tanjiajiajun"},"content":"        saver.loadData(storage);","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"tanjiajiajun"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"tanjiajiajun"},"content":"    public void run() {","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"tanjiajiajun"},"content":"        ui.onStart();","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"tanjiajiajun"},"content":"        parser.run();","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"tanjiajiajun"},"content":"        ui.onEnd();","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"tanjiajiajun"},"content":"        saver.saveData(storage);","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"tanjiajiajun"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"tanjiajiajun"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"tanjiajiajun"},"content":"        new NewDuke(\"data/duke.txt\").run();","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"tanjiajiajun"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"tanjiajiajun"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"tanjiajiajun":26}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanjiajiajun"},"content":"package duke;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"tanjiajiajun"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"tanjiajiajun"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"tanjiajiajun"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"tanjiajiajun"},"content":"import java.util.List;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"tanjiajiajun"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"tanjiajiajun"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"tanjiajiajun"},"content":" * The Parser class handles parsing user input and executing corresponding actions.","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"tanjiajiajun"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"tanjiajiajun"},"content":"public class Parser {","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"tanjiajiajun"},"content":"    private Scanner sc;","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"tanjiajiajun"},"content":"    public UI ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"tanjiajiajun"},"content":"    public Storage storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"tanjiajiajun"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"tanjiajiajun"},"content":"     * Constructs a new Parser instance.","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"tanjiajiajun"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"tanjiajiajun"},"content":"     * @param store The storage object to interact with task storage.","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"tanjiajiajun"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"tanjiajiajun"},"content":"    public Parser(Storage store) {","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"tanjiajiajun"},"content":"        sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"tanjiajiajun"},"content":"        ui \u003d new UI();","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"tanjiajiajun"},"content":"        storage \u003d store;","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"tanjiajiajun"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"tanjiajiajun"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"tanjiajiajun"},"content":"     * Runs the main loop for processing user input and executing commands.","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"tanjiajiajun"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"tanjiajiajun"},"content":"    public void run() {","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"tanjiajiajun"},"content":"        boolean isStopRunning \u003d false;","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"tanjiajiajun"},"content":"        while (!isStopRunning) {","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"tanjiajiajun"},"content":"            try {","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"tanjiajiajun"},"content":"                String input \u003d sc.nextLine();","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"tanjiajiajun"},"content":"                if (input.equals(\"bye\")) {","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"tanjiajiajun"},"content":"                    isStopRunning \u003d true;","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"tanjiajiajun"},"content":"                    break;","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"tanjiajiajun"},"content":"                }","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"tanjiajiajun"},"content":"                List\u003cString\u003e inputParts \u003d Arrays.asList(input.split(\" \"));","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"tanjiajiajun"},"content":"                if (inputParts.get(0).equals(\"deadline\") || inputParts.get(0).equals(\"todo\") || ","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"tanjiajiajun"},"content":"                        inputParts.get(0).equals(\"event\")) {","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"tanjiajiajun"},"content":"                    if (inputParts.size() \u003d\u003d 1) {","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"tanjiajiajun"},"content":"                        throw new EmptyTaskException();","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"tanjiajiajun"},"content":"                    } else if (inputParts.get(0).equals(\"deadline\")) {","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"tanjiajiajun"},"content":"                        int index \u003d inputParts.indexOf(\"/by\");","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"tanjiajiajun"},"content":"                        String descriptor \u003d \"\";","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"tanjiajiajun"},"content":"                        String deadline \u003d \"\";","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"tanjiajiajun"},"content":"                        for (int i\u003d1; i\u003cindex; i++) {","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"tanjiajiajun"},"content":"                            descriptor +\u003d inputParts.get(i)+ \" \";","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"tanjiajiajun"},"content":"                        }","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"tanjiajiajun"},"content":"                        for (int i\u003dindex+1; i\u003cinputParts.size(); i++) {","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"tanjiajiajun"},"content":"                            deadline +\u003d inputParts.get(i)+ \" \";","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"tanjiajiajun"},"content":"                        }","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"tanjiajiajun"},"content":"                        deadline \u003d deadline.trim();","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"tanjiajiajun"},"content":"                        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"M/d/yyyy HHmm\");","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"tanjiajiajun"},"content":"                        LocalDateTime localDateTime \u003d LocalDateTime.parse(deadline, formatter);","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"tanjiajiajun"},"content":"                        descriptor \u003d descriptor.trim();","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"tanjiajiajun"},"content":"                        if (descriptor.isEmpty()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"tanjiajiajun"},"content":"                            throw new EmptyTaskException();","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"tanjiajiajun"},"content":"                        }","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"tanjiajiajun"},"content":"                        Deadlines d \u003d new Deadlines(descriptor, localDateTime);","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"tanjiajiajun"},"content":"                        storage.add(d);","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"tanjiajiajun"},"content":"                        ui.onTaskAddition(storage.addToListOutput(d));","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"tanjiajiajun"},"content":"                    } else if (inputParts.get(0).equals(\"event\")) {","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"tanjiajiajun"},"content":"                        int index1 \u003d inputParts.indexOf(\"/from\");","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"tanjiajiajun"},"content":"                        int index2 \u003d inputParts.indexOf(\"/to\");","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"tanjiajiajun"},"content":"                        String descriptor \u003d \"\";","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"tanjiajiajun"},"content":"                        String from \u003d \"\";","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"tanjiajiajun"},"content":"                        String to \u003d \"\";","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"tanjiajiajun"},"content":"                        for (int i\u003dindex1 + 1; i\u003cindex2; i++) {","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"tanjiajiajun"},"content":"                            from +\u003d inputParts.get(i)+ \" \";","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"tanjiajiajun"},"content":"                        }","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"tanjiajiajun"},"content":"                        for (int i\u003dindex2 + 1; i\u003cinputParts.size(); i++) {","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"tanjiajiajun"},"content":"                            to +\u003d inputParts.get(i)+ \" \";","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"tanjiajiajun"},"content":"                        }","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"tanjiajiajun"},"content":"                        for (int i\u003d1; i\u003cindex1; i++) {","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"tanjiajiajun"},"content":"                            descriptor +\u003d inputParts.get(i)+ \" \";","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"tanjiajiajun"},"content":"                        }","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"tanjiajiajun"},"content":"                        descriptor \u003d descriptor.trim();","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"tanjiajiajun"},"content":"                        if (descriptor.isEmpty()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"tanjiajiajun"},"content":"                            throw new EmptyTaskException();","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"tanjiajiajun"},"content":"                        }","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"tanjiajiajun"},"content":"                        from \u003d from.trim();","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"tanjiajiajun"},"content":"                        to \u003d to.trim();","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"tanjiajiajun"},"content":"                        Events e \u003d  new Events(descriptor, from, to);","lastModifiedDate":"2024-02-03"},{"lineNumber":89,"author":{"gitId":"tanjiajiajun"},"content":"                        storage.add(e);","lastModifiedDate":"2024-02-03"},{"lineNumber":90,"author":{"gitId":"tanjiajiajun"},"content":"                        ui.onTaskAddition(storage.addToListOutput(e));","lastModifiedDate":"2024-02-03"},{"lineNumber":91,"author":{"gitId":"tanjiajiajun"},"content":"                    } else if (inputParts.get(0).equals(\"todo\")) {","lastModifiedDate":"2024-02-03"},{"lineNumber":92,"author":{"gitId":"tanjiajiajun"},"content":"                        String descriptor \u003d \"\";","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"tanjiajiajun"},"content":"                        for (int i\u003d1; i\u003cinputParts.size(); i++) {","lastModifiedDate":"2024-02-03"},{"lineNumber":94,"author":{"gitId":"tanjiajiajun"},"content":"                            descriptor +\u003d inputParts.get(i) + \" \";","lastModifiedDate":"2024-02-03"},{"lineNumber":95,"author":{"gitId":"tanjiajiajun"},"content":"                        }","lastModifiedDate":"2024-02-03"},{"lineNumber":96,"author":{"gitId":"tanjiajiajun"},"content":"                        descriptor \u003d descriptor.trim();","lastModifiedDate":"2024-02-03"},{"lineNumber":97,"author":{"gitId":"tanjiajiajun"},"content":"                        ToDos t \u003d new ToDos(descriptor);","lastModifiedDate":"2024-02-03"},{"lineNumber":98,"author":{"gitId":"tanjiajiajun"},"content":"                        storage.add(t);","lastModifiedDate":"2024-02-03"},{"lineNumber":99,"author":{"gitId":"tanjiajiajun"},"content":"                        ui.onTaskAddition(storage.addToListOutput(t));","lastModifiedDate":"2024-02-03"},{"lineNumber":100,"author":{"gitId":"tanjiajiajun"},"content":"                        if (descriptor.isEmpty()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":101,"author":{"gitId":"tanjiajiajun"},"content":"                            throw new EmptyTaskException();","lastModifiedDate":"2024-02-03"},{"lineNumber":102,"author":{"gitId":"tanjiajiajun"},"content":"                        }","lastModifiedDate":"2024-02-03"},{"lineNumber":103,"author":{"gitId":"tanjiajiajun"},"content":"                    }","lastModifiedDate":"2024-02-03"},{"lineNumber":104,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":105,"author":{"gitId":"tanjiajiajun"},"content":"                } else if (inputParts.get(0).equals(\"mark\")) {","lastModifiedDate":"2024-02-03"},{"lineNumber":106,"author":{"gitId":"tanjiajiajun"},"content":"                    Task t \u003d storage.get(Integer.parseInt(inputParts.get(1)) - 1);","lastModifiedDate":"2024-02-03"},{"lineNumber":107,"author":{"gitId":"tanjiajiajun"},"content":"                    t.markAsDone();","lastModifiedDate":"2024-02-03"},{"lineNumber":108,"author":{"gitId":"tanjiajiajun"},"content":"                    ui.onMark(t.toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":109,"author":{"gitId":"tanjiajiajun"},"content":"                } else if (inputParts.get(0).equals(\"unmark\")) {","lastModifiedDate":"2024-02-03"},{"lineNumber":110,"author":{"gitId":"tanjiajiajun"},"content":"                    Task t \u003d storage.get(Integer.parseInt(inputParts.get(1)) - 1);","lastModifiedDate":"2024-02-03"},{"lineNumber":111,"author":{"gitId":"tanjiajiajun"},"content":"                    t.markAsUndone();","lastModifiedDate":"2024-02-03"},{"lineNumber":112,"author":{"gitId":"tanjiajiajun"},"content":"                    ui.onUnmark(t.toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":113,"author":{"gitId":"tanjiajiajun"},"content":"                } else if (input.equals(\"list\")) {","lastModifiedDate":"2024-02-03"},{"lineNumber":114,"author":{"gitId":"tanjiajiajun"},"content":"                    ui.onPrintList(storage.printList());","lastModifiedDate":"2024-02-03"},{"lineNumber":115,"author":{"gitId":"tanjiajiajun"},"content":"                } else if (inputParts.get(0).equals(\"delete\")) {","lastModifiedDate":"2024-02-03"},{"lineNumber":116,"author":{"gitId":"tanjiajiajun"},"content":"                    int index \u003d Integer.parseInt(inputParts.get(1));","lastModifiedDate":"2024-02-03"},{"lineNumber":117,"author":{"gitId":"tanjiajiajun"},"content":"                    Task t \u003d storage.pop(index-1);","lastModifiedDate":"2024-02-03"},{"lineNumber":118,"author":{"gitId":"tanjiajiajun"},"content":"                    ui.onTaskDeletion(t.toString(), storage.size());","lastModifiedDate":"2024-02-03"},{"lineNumber":119,"author":{"gitId":"tanjiajiajun"},"content":"                }  else if (inputParts.get(0).equals(\"find\")) {","lastModifiedDate":"2024-02-03"},{"lineNumber":120,"author":{"gitId":"tanjiajiajun"},"content":"                    String identifier \u003d \"\";","lastModifiedDate":"2024-02-03"},{"lineNumber":121,"author":{"gitId":"tanjiajiajun"},"content":"                    for (int j\u003d1; j\u003cinputParts.size(); j++) {","lastModifiedDate":"2024-02-03"},{"lineNumber":122,"author":{"gitId":"tanjiajiajun"},"content":"                        identifier +\u003d inputParts.get(j) + \" \";","lastModifiedDate":"2024-02-03"},{"lineNumber":123,"author":{"gitId":"tanjiajiajun"},"content":"                    }","lastModifiedDate":"2024-02-03"},{"lineNumber":124,"author":{"gitId":"tanjiajiajun"},"content":"                    identifier \u003d identifier.trim();","lastModifiedDate":"2024-02-03"},{"lineNumber":125,"author":{"gitId":"tanjiajiajun"},"content":"                    String output \u003d storage.find(identifier);","lastModifiedDate":"2024-02-03"},{"lineNumber":126,"author":{"gitId":"tanjiajiajun"},"content":"                    ui.onPrintFind(output);","lastModifiedDate":"2024-02-03"},{"lineNumber":127,"author":{"gitId":"tanjiajiajun"},"content":"                } else {","lastModifiedDate":"2024-02-03"},{"lineNumber":128,"author":{"gitId":"tanjiajiajun"},"content":"                    throw new UnknownInputException();","lastModifiedDate":"2024-02-03"},{"lineNumber":129,"author":{"gitId":"tanjiajiajun"},"content":"                }","lastModifiedDate":"2024-02-03"},{"lineNumber":130,"author":{"gitId":"tanjiajiajun"},"content":"            } catch (DukeExceptions e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":131,"author":{"gitId":"tanjiajiajun"},"content":"                System.out.println(e.output());","lastModifiedDate":"2024-02-03"},{"lineNumber":132,"author":{"gitId":"tanjiajiajun"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":133,"author":{"gitId":"tanjiajiajun"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":134,"author":{"gitId":"tanjiajiajun"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":135,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":136,"author":{"gitId":"tanjiajiajun"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"tanjiajiajun":136}},{"path":"src/main/java/duke/Save.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanjiajiajun"},"content":"package duke;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"tanjiajiajun"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"tanjiajiajun"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"tanjiajiajun"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"tanjiajiajun"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"tanjiajiajun"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"tanjiajiajun"},"content":"import java.util.List;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"tanjiajiajun"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"tanjiajiajun"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"tanjiajiajun"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"tanjiajiajun"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"tanjiajiajun"},"content":" * The Save class manages the saving and loading of task data to and from a file.","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"tanjiajiajun"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"tanjiajiajun"},"content":"public class Save {","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"tanjiajiajun"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"tanjiajiajun"},"content":"     * The file path for saving and loading data.","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"tanjiajiajun"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"tanjiajiajun"},"content":"    public String filePath \u003d \"data/duke.txt\";","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"tanjiajiajun"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"tanjiajiajun"},"content":"     * Constructs a new Save instance with a specified file path.","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"tanjiajiajun"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"tanjiajiajun"},"content":"     * @param f The file path.","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"tanjiajiajun"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"tanjiajiajun"},"content":"    public Save(String f) {","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"tanjiajiajun"},"content":"        this.filePath \u003d f;","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"tanjiajiajun"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"tanjiajiajun"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"tanjiajiajun"},"content":"     * Saves the data from the given storage to the specified file path.","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"tanjiajiajun"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"tanjiajiajun"},"content":"     * @param s The storage containing tasks to be saved.","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"tanjiajiajun"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"tanjiajiajun"},"content":"    public void saveData(Storage s) {","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"tanjiajiajun"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filePath))) {","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"tanjiajiajun"},"content":"            for (int i\u003d0; i\u003cs.size(); i++) {","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"tanjiajiajun"},"content":"                Task t \u003d s.get(i);","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"tanjiajiajun"},"content":"                String desc \u003d t.description;","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"tanjiajiajun"},"content":"                String isDone;","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"tanjiajiajun"},"content":"                if (t.isDone) {","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"tanjiajiajun"},"content":"                    isDone \u003d \"1\";","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"tanjiajiajun"},"content":"                } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"tanjiajiajun"},"content":"                    isDone \u003d \"0\";","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"tanjiajiajun"},"content":"                }","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"tanjiajiajun"},"content":"                String taskType \u003d t.toString().split(\"\")[1];","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"tanjiajiajun"},"content":"                if (taskType.equals(\"T\")) {","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"tanjiajiajun"},"content":"                    String line \u003d \"T\" + \" | \" + isDone + \" | \" + desc;","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"tanjiajiajun"},"content":"                    writer.write(line);","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"tanjiajiajun"},"content":"                    writer.newLine();","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"tanjiajiajun"},"content":"                } else if (taskType.equals(\"D\")) {","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"tanjiajiajun"},"content":"                    String str \u003d t.toString();","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"tanjiajiajun"},"content":"                    String insideParenthesis \u003d str.substring(str.indexOf(\"(\")+1, str.indexOf(\")\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"tanjiajiajun"},"content":"                    String[] subString \u003d insideParenthesis.split(\" \");","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"tanjiajiajun"},"content":"                    String deadline \u003d \"\";","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"tanjiajiajun"},"content":"                    for (int j\u003d1; j\u003csubString.length; j++) {","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"tanjiajiajun"},"content":"                        deadline +\u003d subString[j];","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"tanjiajiajun"},"content":"                    }","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"tanjiajiajun"},"content":"                    String line \u003d \"D\" + \" | \" + isDone + \" | \" + desc + \" | \" + deadline;","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"tanjiajiajun"},"content":"                    writer.write(line);","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"tanjiajiajun"},"content":"                    writer.newLine();","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"tanjiajiajun"},"content":"                } else if (taskType.equals(\"E\")) {","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"tanjiajiajun"},"content":"                    String str \u003d t.toString();","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"tanjiajiajun"},"content":"                    String insideParenthesis \u003d str.substring(str.indexOf(\"(\")+1, str.indexOf(\")\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"tanjiajiajun"},"content":"                    String[] subString \u003d insideParenthesis.split(\" \");","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"tanjiajiajun"},"content":"                    List\u003cString\u003e arrayList \u003d new ArrayList\u003c\u003e(Arrays.asList(subString));","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"tanjiajiajun"},"content":"                    int index1 \u003d arrayList.indexOf(\"to:\");","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"tanjiajiajun"},"content":"                    String from \u003d \"\";","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"tanjiajiajun"},"content":"                    String to \u003d \"\";","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"tanjiajiajun"},"content":"                    for (int j\u003d1; j\u003cindex1; j++) {","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"tanjiajiajun"},"content":"                        from +\u003d subString[j];","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"tanjiajiajun"},"content":"                        from +\u003d \" \";","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"tanjiajiajun"},"content":"                    }","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"tanjiajiajun"},"content":"                    from \u003d from.trim();","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"tanjiajiajun"},"content":"                    for (int j\u003dindex1+1; j\u003csubString.length; j++) {","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"tanjiajiajun"},"content":"                        to +\u003d subString[j];","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"tanjiajiajun"},"content":"                        to +\u003d \" \";","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"tanjiajiajun"},"content":"                    }","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"tanjiajiajun"},"content":"                    to \u003d to.trim();","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"tanjiajiajun"},"content":"                    String line \u003d \"E\" + \" | \" + isDone + \" | \" + desc + \" | \" + from + \" | \" + to;","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"tanjiajiajun"},"content":"                    writer.write(line);","lastModifiedDate":"2024-02-02"},{"lineNumber":84,"author":{"gitId":"tanjiajiajun"},"content":"                    writer.newLine();","lastModifiedDate":"2024-02-02"},{"lineNumber":85,"author":{"gitId":"tanjiajiajun"},"content":"                }","lastModifiedDate":"2024-02-02"},{"lineNumber":86,"author":{"gitId":"tanjiajiajun"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":87,"author":{"gitId":"tanjiajiajun"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":88,"author":{"gitId":"tanjiajiajun"},"content":"            System.out.println(\"Something went wrong with writing file!\");","lastModifiedDate":"2024-02-02"},{"lineNumber":89,"author":{"gitId":"tanjiajiajun"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":90,"author":{"gitId":"tanjiajiajun"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":91,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":92,"author":{"gitId":"tanjiajiajun"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"tanjiajiajun"},"content":"     * Loads data from the specified file path into the given storage.","lastModifiedDate":"2024-02-03"},{"lineNumber":94,"author":{"gitId":"tanjiajiajun"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":95,"author":{"gitId":"tanjiajiajun"},"content":"     * @param s The storage where tasks will be loaded.","lastModifiedDate":"2024-02-03"},{"lineNumber":96,"author":{"gitId":"tanjiajiajun"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":97,"author":{"gitId":"tanjiajiajun"},"content":"    public void loadData(Storage s) {","lastModifiedDate":"2024-02-02"},{"lineNumber":98,"author":{"gitId":"tanjiajiajun"},"content":"        try(FileInputStream fis \u003d new FileInputStream(filePath)) {","lastModifiedDate":"2024-02-02"},{"lineNumber":99,"author":{"gitId":"tanjiajiajun"},"content":"            byte[] buffer \u003d new byte[1024]; // You can adjust the buffer size according to your needs","lastModifiedDate":"2024-02-02"},{"lineNumber":100,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":101,"author":{"gitId":"tanjiajiajun"},"content":"            int bytesRead;","lastModifiedDate":"2024-02-02"},{"lineNumber":102,"author":{"gitId":"tanjiajiajun"},"content":"            while ((bytesRead \u003d fis.read(buffer)) !\u003d -1) {","lastModifiedDate":"2024-02-02"},{"lineNumber":103,"author":{"gitId":"tanjiajiajun"},"content":"                // Process the read data","lastModifiedDate":"2024-02-02"},{"lineNumber":104,"author":{"gitId":"tanjiajiajun"},"content":"                String data \u003d new String(buffer, 0, bytesRead);","lastModifiedDate":"2024-02-02"},{"lineNumber":105,"author":{"gitId":"tanjiajiajun"},"content":"                String[] tasks \u003d data.split(\"\\n\");","lastModifiedDate":"2024-02-02"},{"lineNumber":106,"author":{"gitId":"tanjiajiajun"},"content":"                for (String task : tasks)  {","lastModifiedDate":"2024-02-02"},{"lineNumber":107,"author":{"gitId":"tanjiajiajun"},"content":"                    String[] parts \u003d task.split(\"\\\\s*\\\\|\\\\s*\");","lastModifiedDate":"2024-02-02"},{"lineNumber":108,"author":{"gitId":"tanjiajiajun"},"content":"                    boolean isDone;","lastModifiedDate":"2024-02-02"},{"lineNumber":109,"author":{"gitId":"tanjiajiajun"},"content":"                    if (parts[1].equals(\"1\")) {","lastModifiedDate":"2024-02-02"},{"lineNumber":110,"author":{"gitId":"tanjiajiajun"},"content":"                        isDone \u003d true;","lastModifiedDate":"2024-02-02"},{"lineNumber":111,"author":{"gitId":"tanjiajiajun"},"content":"                    } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":112,"author":{"gitId":"tanjiajiajun"},"content":"                        isDone \u003d false;","lastModifiedDate":"2024-02-02"},{"lineNumber":113,"author":{"gitId":"tanjiajiajun"},"content":"                    }","lastModifiedDate":"2024-02-02"},{"lineNumber":114,"author":{"gitId":"tanjiajiajun"},"content":"                    if (parts[0].equals(\"T\")) {","lastModifiedDate":"2024-02-02"},{"lineNumber":115,"author":{"gitId":"tanjiajiajun"},"content":"                        ToDos t \u003d new ToDos(parts[2]);","lastModifiedDate":"2024-02-02"},{"lineNumber":116,"author":{"gitId":"tanjiajiajun"},"content":"                        if (isDone) {","lastModifiedDate":"2024-02-02"},{"lineNumber":117,"author":{"gitId":"tanjiajiajun"},"content":"                            t.markAsDone();","lastModifiedDate":"2024-02-02"},{"lineNumber":118,"author":{"gitId":"tanjiajiajun"},"content":"                        }","lastModifiedDate":"2024-02-02"},{"lineNumber":119,"author":{"gitId":"tanjiajiajun"},"content":"                        s.add(t);","lastModifiedDate":"2024-02-02"},{"lineNumber":120,"author":{"gitId":"tanjiajiajun"},"content":"                    } else if (parts[0].equals(\"E\")) {","lastModifiedDate":"2024-02-02"},{"lineNumber":121,"author":{"gitId":"tanjiajiajun"},"content":"                        Events e \u003d new Events(parts[2], parts[3], parts[4]);","lastModifiedDate":"2024-02-02"},{"lineNumber":122,"author":{"gitId":"tanjiajiajun"},"content":"                        if (isDone) {","lastModifiedDate":"2024-02-02"},{"lineNumber":123,"author":{"gitId":"tanjiajiajun"},"content":"                            e.markAsDone();","lastModifiedDate":"2024-02-02"},{"lineNumber":124,"author":{"gitId":"tanjiajiajun"},"content":"                        }","lastModifiedDate":"2024-02-02"},{"lineNumber":125,"author":{"gitId":"tanjiajiajun"},"content":"                        s.add(e);","lastModifiedDate":"2024-02-02"},{"lineNumber":126,"author":{"gitId":"tanjiajiajun"},"content":"                    } else if (parts[0].equals(\"D\")) {","lastModifiedDate":"2024-02-02"},{"lineNumber":127,"author":{"gitId":"tanjiajiajun"},"content":"                        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"M/d/yyyy HHmm\");","lastModifiedDate":"2024-02-02"},{"lineNumber":128,"author":{"gitId":"tanjiajiajun"},"content":"                        LocalDateTime localDateTime \u003d LocalDateTime.parse(parts[3], formatter);","lastModifiedDate":"2024-02-02"},{"lineNumber":129,"author":{"gitId":"tanjiajiajun"},"content":"                        Deadlines d \u003d new Deadlines(parts[2], localDateTime);","lastModifiedDate":"2024-02-02"},{"lineNumber":130,"author":{"gitId":"tanjiajiajun"},"content":"                        if (isDone) {","lastModifiedDate":"2024-02-02"},{"lineNumber":131,"author":{"gitId":"tanjiajiajun"},"content":"                            d.markAsDone();","lastModifiedDate":"2024-02-02"},{"lineNumber":132,"author":{"gitId":"tanjiajiajun"},"content":"                        }","lastModifiedDate":"2024-02-02"},{"lineNumber":133,"author":{"gitId":"tanjiajiajun"},"content":"                        s.add(d);","lastModifiedDate":"2024-02-02"},{"lineNumber":134,"author":{"gitId":"tanjiajiajun"},"content":"                    }","lastModifiedDate":"2024-02-02"},{"lineNumber":135,"author":{"gitId":"tanjiajiajun"},"content":"                }","lastModifiedDate":"2024-02-02"},{"lineNumber":136,"author":{"gitId":"tanjiajiajun"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":137,"author":{"gitId":"tanjiajiajun"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":138,"author":{"gitId":"tanjiajiajun"},"content":"            System.out.println(\"Something went wrong!\");","lastModifiedDate":"2024-02-02"},{"lineNumber":139,"author":{"gitId":"tanjiajiajun"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":140,"author":{"gitId":"tanjiajiajun"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":141,"author":{"gitId":"tanjiajiajun"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"tanjiajiajun":141}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanjiajiajun"},"content":"package duke;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"tanjiajiajun"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"tanjiajiajun"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"tanjiajiajun"},"content":" * The Storage class represents a storage facility for tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"tanjiajiajun"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"tanjiajiajun"},"content":"public class Storage {","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"tanjiajiajun"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"tanjiajiajun"},"content":"     * The list to store tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"tanjiajiajun"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"tanjiajiajun"},"content":"    public ArrayList\u003cTask\u003e storage;","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"tanjiajiajun"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"tanjiajiajun"},"content":"     * Constructs a new Storage instance with an empty task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"tanjiajiajun"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"tanjiajiajun"},"content":"    public Storage() {","lastModifiedDate":"2024-01-22"},{"lineNumber":20,"author":{"gitId":"tanjiajiajun"},"content":"        this.storage \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"tanjiajiajun"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":22,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"tanjiajiajun"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"tanjiajiajun"},"content":"     * Adds a task to the storage.","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"tanjiajiajun"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"tanjiajiajun"},"content":"     * @param t The task to be added.","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"tanjiajiajun"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"tanjiajiajun"},"content":"    public void add(Task t) {","lastModifiedDate":"2024-01-22"},{"lineNumber":29,"author":{"gitId":"tanjiajiajun"},"content":"        this.storage.add(t);","lastModifiedDate":"2024-01-22"},{"lineNumber":30,"author":{"gitId":"tanjiajiajun"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":31,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"tanjiajiajun"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"tanjiajiajun"},"content":"     * Retrieves the number of tasks in the storage.","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"tanjiajiajun"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"tanjiajiajun"},"content":"     * @return The number of tasks in the storage.","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"tanjiajiajun"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"tanjiajiajun"},"content":"    public int size() {","lastModifiedDate":"2024-01-22"},{"lineNumber":38,"author":{"gitId":"tanjiajiajun"},"content":"        return this.storage.size();","lastModifiedDate":"2024-01-22"},{"lineNumber":39,"author":{"gitId":"tanjiajiajun"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":40,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"tanjiajiajun"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"tanjiajiajun"},"content":"     * Retrieves a task from the storage at the specified index.","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"tanjiajiajun"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"tanjiajiajun"},"content":"     * @param i The index of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"tanjiajiajun"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"tanjiajiajun"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"tanjiajiajun"},"content":"    public Task get(int i) {","lastModifiedDate":"2024-01-22"},{"lineNumber":48,"author":{"gitId":"tanjiajiajun"},"content":"        return this.storage.get(i);","lastModifiedDate":"2024-01-22"},{"lineNumber":49,"author":{"gitId":"tanjiajiajun"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":50,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"tanjiajiajun"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"tanjiajiajun"},"content":"     * Retrieves the index of a task in the storage based on its description.","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"tanjiajiajun"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"tanjiajiajun"},"content":"     * @param s The description of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"tanjiajiajun"},"content":"     * @return The index of the task in the storage.","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"tanjiajiajun"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"tanjiajiajun"},"content":"    public int indexOf(String s) {","lastModifiedDate":"2024-01-23"},{"lineNumber":58,"author":{"gitId":"tanjiajiajun"},"content":"        return this.storage.indexOf(s);","lastModifiedDate":"2024-01-23"},{"lineNumber":59,"author":{"gitId":"tanjiajiajun"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":60,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":61,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"tanjiajiajun"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"tanjiajiajun"},"content":"     * Removes and retrieves a task from the storage at the specified index.","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"tanjiajiajun"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"tanjiajiajun"},"content":"     * @param index The index of the task to be removed.","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"tanjiajiajun"},"content":"     * @return The removed task.","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"tanjiajiajun"},"content":"     * @throws DukeExceptions If there is an issue accessing the storage.","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"tanjiajiajun"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"tanjiajiajun"},"content":"    public Task pop(int index) throws DukeExceptions {","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"tanjiajiajun"},"content":"        Task t \u003d this.storage.get(index);","lastModifiedDate":"2024-01-23"},{"lineNumber":71,"author":{"gitId":"tanjiajiajun"},"content":"        this.storage.remove(index);","lastModifiedDate":"2024-01-23"},{"lineNumber":72,"author":{"gitId":"tanjiajiajun"},"content":"        return t;","lastModifiedDate":"2024-01-23"},{"lineNumber":73,"author":{"gitId":"tanjiajiajun"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":74,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":75,"author":{"gitId":"tanjiajiajun"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"tanjiajiajun"},"content":"     * Creates a formatted string representing the list of tasks in the storage.","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"tanjiajiajun"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"tanjiajiajun"},"content":"     * @return The formatted string representing the list of tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"tanjiajiajun"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"tanjiajiajun"},"content":"    public String find(String s) throws DukeExceptions {","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"tanjiajiajun"},"content":"        String output \u003d \"\";","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"tanjiajiajun"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"tanjiajiajun"},"content":"            for (int i\u003d0; i\u003cthis.storage.size(); i++) {","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"tanjiajiajun"},"content":"                if (this.storage.get(i).description.contains(s)) {","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"tanjiajiajun"},"content":"                    output +\u003d String.format(\"%d. \", i+1);","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"tanjiajiajun"},"content":"                    output +\u003d this.storage.get(i).toString() + \"\\n\";","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"tanjiajiajun"},"content":"                }","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"tanjiajiajun"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":89,"author":{"gitId":"tanjiajiajun"},"content":"            if (output.isEmpty()) throw new DukeExceptions();","lastModifiedDate":"2024-02-03"},{"lineNumber":90,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":91,"author":{"gitId":"tanjiajiajun"},"content":"        } catch (DukeExceptions d) {","lastModifiedDate":"2024-02-03"},{"lineNumber":92,"author":{"gitId":"tanjiajiajun"},"content":"            System.out.println(\"Nothing was found\");","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"tanjiajiajun"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":94,"author":{"gitId":"tanjiajiajun"},"content":"        return output;","lastModifiedDate":"2024-02-03"},{"lineNumber":95,"author":{"gitId":"tanjiajiajun"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":96,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":97,"author":{"gitId":"tanjiajiajun"},"content":"    public String printList() {","lastModifiedDate":"2024-01-23"},{"lineNumber":98,"author":{"gitId":"tanjiajiajun"},"content":"        String output \u003d \"\";","lastModifiedDate":"2024-01-22"},{"lineNumber":99,"author":{"gitId":"tanjiajiajun"},"content":"        for (int i\u003d0; i\u003cthis.storage.size(); i++) {","lastModifiedDate":"2024-01-22"},{"lineNumber":100,"author":{"gitId":"tanjiajiajun"},"content":"            output +\u003d String.format(\"%d. \", i+1);","lastModifiedDate":"2024-01-22"},{"lineNumber":101,"author":{"gitId":"tanjiajiajun"},"content":"            output +\u003d this.storage.get(i).toString() + \"\\n\";","lastModifiedDate":"2024-01-23"},{"lineNumber":102,"author":{"gitId":"tanjiajiajun"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":103,"author":{"gitId":"tanjiajiajun"},"content":"        return output;","lastModifiedDate":"2024-01-22"},{"lineNumber":104,"author":{"gitId":"tanjiajiajun"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":105,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":106,"author":{"gitId":"tanjiajiajun"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":107,"author":{"gitId":"tanjiajiajun"},"content":"     * Creates a formatted string representing the output when a task is added to the storage.","lastModifiedDate":"2024-02-03"},{"lineNumber":108,"author":{"gitId":"tanjiajiajun"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":109,"author":{"gitId":"tanjiajiajun"},"content":"     * @param t The task that was added.","lastModifiedDate":"2024-02-03"},{"lineNumber":110,"author":{"gitId":"tanjiajiajun"},"content":"     * @return The formatted string representing the output.","lastModifiedDate":"2024-02-03"},{"lineNumber":111,"author":{"gitId":"tanjiajiajun"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":112,"author":{"gitId":"tanjiajiajun"},"content":"    public String addToListOutput(Task t) {","lastModifiedDate":"2024-01-23"},{"lineNumber":113,"author":{"gitId":"tanjiajiajun"},"content":"        String output \u003d \"Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2024-01-23"},{"lineNumber":114,"author":{"gitId":"tanjiajiajun"},"content":"                String.format(\"  %s\\nNow you have %d tasks in the list.\", t.toString(), this.size());","lastModifiedDate":"2024-01-23"},{"lineNumber":115,"author":{"gitId":"tanjiajiajun"},"content":"        return output;","lastModifiedDate":"2024-01-23"},{"lineNumber":116,"author":{"gitId":"tanjiajiajun"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":117,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":118,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":119,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":120,"author":{"gitId":"tanjiajiajun"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"tanjiajiajun":120}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanjiajiajun"},"content":"package duke;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"tanjiajiajun"},"content":"public class Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"tanjiajiajun"},"content":"    protected String description;","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"tanjiajiajun"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"tanjiajiajun"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"tanjiajiajun"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"tanjiajiajun"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"tanjiajiajun"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"tanjiajiajun"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"tanjiajiajun"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"tanjiajiajun"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"tanjiajiajun"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"tanjiajiajun"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"tanjiajiajun"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":20,"author":{"gitId":"tanjiajiajun"},"content":"    public void markAsUndone() {","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"tanjiajiajun"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-22"},{"lineNumber":22,"author":{"gitId":"tanjiajiajun"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"tanjiajiajun"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":26,"author":{"gitId":"tanjiajiajun"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"tanjiajiajun"},"content":"        return String.format(\"[\" + this.getStatusIcon() + \"]\" + \" \" + description);","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"tanjiajiajun"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":29,"author":{"gitId":"tanjiajiajun"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"tanjiajiajun":29}},{"path":"src/main/java/duke/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanjiajiajun"},"content":"package duke;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"tanjiajiajun"},"content":"public class ToDos extends Task{","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"tanjiajiajun"},"content":"    public ToDos (String description) {","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"tanjiajiajun"},"content":"        super(description);","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"tanjiajiajun"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"tanjiajiajun"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"tanjiajiajun"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"tanjiajiajun"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"tanjiajiajun"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"tanjiajiajun"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"tanjiajiajun":12}},{"path":"src/main/java/duke/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanjiajiajun"},"content":"package duke;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"tanjiajiajun"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"tanjiajiajun"},"content":" * The UI class handles user interface interactions.","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"tanjiajiajun"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"tanjiajiajun"},"content":"public class UI {","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"tanjiajiajun"},"content":"    private final String LINE \u003d \"______________________________________________________\\n\";","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"tanjiajiajun"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"tanjiajiajun"},"content":"     * Constructs a new UI instance.","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"tanjiajiajun"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"tanjiajiajun"},"content":"    public UI() {}","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"tanjiajiajun"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"tanjiajiajun"},"content":"     * Displays a welcome message when the program starts.","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"tanjiajiajun"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"tanjiajiajun"},"content":"    public void onStart() {","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"tanjiajiajun"},"content":"        System.out.print(LINE);","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"tanjiajiajun"},"content":"        System.out.println(\"Hello! I\u0027m ChatterPal!\");","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"tanjiajiajun"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"tanjiajiajun"},"content":"        System.out.print(LINE);","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"tanjiajiajun"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"tanjiajiajun"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"tanjiajiajun"},"content":"     * Displays a message when a task is added.","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"tanjiajiajun"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"tanjiajiajun"},"content":"     * @param s The task message to be displayed.","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"tanjiajiajun"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"tanjiajiajun"},"content":"    public void onTaskAddition(String s) {","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"tanjiajiajun"},"content":"        System.out.println(LINE + s + \"\\n\" + LINE);","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"tanjiajiajun"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"tanjiajiajun"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"tanjiajiajun"},"content":"     * Displays a message when a task is deleted.","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"tanjiajiajun"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"tanjiajiajun"},"content":"     * @param s      The deleted task message.","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"tanjiajiajun"},"content":"     * @param integer The number of tasks remaining.","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"tanjiajiajun"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"tanjiajiajun"},"content":"    public void onTaskDeletion(String s, int integer) {","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"tanjiajiajun"},"content":"        String message \u003d String.format(\"%sNoted. I\u0027ve removed this task:\\n\" +","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"tanjiajiajun"},"content":"                \"%s\\nNow you have %d tasks left.\\n%s\", LINE, s, integer, LINE);","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"tanjiajiajun"},"content":"        System.out.println(message);","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"tanjiajiajun"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"tanjiajiajun"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"tanjiajiajun"},"content":"     * Displays a list of tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"tanjiajiajun"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"tanjiajiajun"},"content":"     * @param s The list of tasks to be displayed.","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"tanjiajiajun"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"tanjiajiajun"},"content":"    public void onPrintList(String s) {","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"tanjiajiajun"},"content":"        System.out.println(LINE + s + LINE);","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"tanjiajiajun"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"tanjiajiajun"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"tanjiajiajun"},"content":"     * Prints the tasks matching a search query, surrounded by a separator line.","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"tanjiajiajun"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"tanjiajiajun"},"content":"     * @param s The string representing the matching tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"tanjiajiajun"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"tanjiajiajun"},"content":"    public void onPrintFind(String s) {","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"tanjiajiajun"},"content":"        if (!s.isEmpty()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"tanjiajiajun"},"content":"            System.out.println( LINE + \"Here are the matching tasks in your list:\\n\" + s + LINE);","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"tanjiajiajun"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"tanjiajiajun"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"tanjiajiajun"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"tanjiajiajun"},"content":"     * Displays a message when a task is marked as completed.","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"tanjiajiajun"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"tanjiajiajun"},"content":"     * @param s The completed task message.","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"tanjiajiajun"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"tanjiajiajun"},"content":"    public void onMark(String s) {","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"tanjiajiajun"},"content":"        String output \u003d LINE + \"Great job on completing the task!\\n\" + s + \"\\n\" + LINE;","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"tanjiajiajun"},"content":"        System.out.println(output);","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"tanjiajiajun"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"tanjiajiajun"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"tanjiajiajun"},"content":"     * Displays a message when a task is marked as incomplete.","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"tanjiajiajun"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"tanjiajiajun"},"content":"     * @param s The incomplete task message.","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"tanjiajiajun"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"tanjiajiajun"},"content":"    public void onUnmark(String s) {","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"tanjiajiajun"},"content":"        String output \u003d LINE + \"OK, I\u0027ve marked this task as not done yet: \\n\" + s + \"\\n\" + LINE;","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"tanjiajiajun"},"content":"        System.out.println(output);","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"tanjiajiajun"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"tanjiajiajun"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"tanjiajiajun"},"content":"     * Displays a farewell message when the program ends.","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"tanjiajiajun"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"tanjiajiajun"},"content":"    public void onEnd() {","lastModifiedDate":"2024-02-03"},{"lineNumber":89,"author":{"gitId":"tanjiajiajun"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-02-03"},{"lineNumber":90,"author":{"gitId":"tanjiajiajun"},"content":"        System.out.println(\"Farewell! Can\u0027t wait to catch up with you again. Until next time, \" +","lastModifiedDate":"2024-02-03"},{"lineNumber":91,"author":{"gitId":"tanjiajiajun"},"content":"                \"take care and stay awesome! \");","lastModifiedDate":"2024-02-03"},{"lineNumber":92,"author":{"gitId":"tanjiajiajun"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"tanjiajiajun"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":94,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":95,"author":{"gitId":"tanjiajiajun"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"tanjiajiajun":95}},{"path":"src/main/java/duke/UnknownInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanjiajiajun"},"content":"package duke;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"tanjiajiajun"},"content":"public class UnknownInputException extends DukeExceptions {","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"tanjiajiajun"},"content":"    final String msg \u003d \"WHAT DO YOU MEANNNNN\";","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"tanjiajiajun"},"content":"    public UnknownInputException() {","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"tanjiajiajun"},"content":"        super();","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"tanjiajiajun"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"tanjiajiajun"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"tanjiajiajun"},"content":"    public String output() {","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"tanjiajiajun"},"content":"        return String.format(\"%s%s\\n\", super.output(), this.msg);","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"tanjiajiajun"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"tanjiajiajun"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"tanjiajiajun":14}},{"path":"src/test/java/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanjiajiajun"},"content":"import duke.ToDos;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"tanjiajiajun"},"content":"import duke.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"tanjiajiajun"},"content":"import duke.Deadlines;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"tanjiajiajun"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"tanjiajiajun"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"tanjiajiajun"},"content":"public class StorageTest {","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"tanjiajiajun"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"tanjiajiajun"},"content":"    public void checkStorageAdd() {","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"tanjiajiajun"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"tanjiajiajun"},"content":"        ToDos t \u003d new ToDos(\"Read book\");","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"tanjiajiajun"},"content":"        storage.add(t);","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"tanjiajiajun"},"content":"        String output \u003d storage.addToListOutput(t);","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"tanjiajiajun"},"content":"        assertEquals(output, \"Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"tanjiajiajun"},"content":"                \"  [T][ ] Read book\\n\" +","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"tanjiajiajun"},"content":"                \"Now you have 1 tasks in the list.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"tanjiajiajun"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"tanjiajiajun"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"tanjiajiajun"},"content":"    public void checkStorageList() {","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"tanjiajiajun"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"tanjiajiajun"},"content":"        storage.add(new ToDos(\"Read book\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"tanjiajiajun"},"content":"        String newOutput \u003d storage.printList();","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"tanjiajiajun"},"content":"        assertEquals(newOutput, \"1. [T][ ] Read book\\n\");","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"tanjiajiajun"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"tanjiajiajun"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"tanjiajiajun":31}},{"path":"src/test/java/TodosTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"tanjiajiajun"},"content":"import duke.ToDos;","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"tanjiajiajun"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"tanjiajiajun"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"tanjiajiajun"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"tanjiajiajun"},"content":"public class TodosTest {","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"tanjiajiajun"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"tanjiajiajun"},"content":"    public void checkToStringTest(){","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"tanjiajiajun"},"content":"        ToDos t \u003d new ToDos(\"Read book\");","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"tanjiajiajun"},"content":"        assertEquals(t.toString(), \"[T][ ] Read book\");","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"tanjiajiajun"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"tanjiajiajun"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"tanjiajiajun"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"tanjiajiajun"},"content":"    public void checkToDosMark() {","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"tanjiajiajun"},"content":"        ToDos t \u003d new ToDos(\"Read Book\");","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"tanjiajiajun"},"content":"        t.markAsDone();","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"tanjiajiajun"},"content":"        assertEquals(t.toString(), \"[T][X] Read Book\");","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"tanjiajiajun"},"content":"        t.markAsUndone();","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"tanjiajiajun"},"content":"        assertEquals(t.toString(), \"[T][ ] Read Book\");","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"tanjiajiajun"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"tanjiajiajun"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"tanjiajiajun":22}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tanjiajiajun"},"content":"todo borrow book","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"tanjiajiajun"},"content":"list","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"tanjiajiajun"},"content":"deadline return book /by 2/12/2019 1800","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"tanjiajiajun"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"tanjiajiajun"},"content":"mark 2","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"tanjiajiajun"},"content":"list","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"tanjiajiajun"},"content":"unmark 2","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"tanjiajiajun"},"content":"delete 1","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"tanjiajiajun"},"content":"list","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"tanjiajiajun":9}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"tanjiajiajun"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tanjiajiajun":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"tanjiajiajun"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tanjiajiajun":1,"-":37}}]
