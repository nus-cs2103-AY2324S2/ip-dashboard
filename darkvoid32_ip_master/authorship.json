[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"darkvoid32"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"darkvoid32"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":17,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"darkvoid32"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"darkvoid32"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"darkvoid32"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"darkvoid32"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"darkvoid32"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"darkvoid32"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"darkvoid32"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"darkvoid32"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"darkvoid32"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"darkvoid32"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"darkvoid32"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"darkvoid32"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    mainClass.set(\"seedu.duke.Duke\")","lastModifiedDate":"2023-08-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"darkvoid32"},"content":"checkstyle {","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"darkvoid32"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"darkvoid32"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"darkvoid32":20,"-":42}},{"path":"src/main/java/Data/Kewqgy.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"darkvoid32"},"content":"T false 123","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"darkvoid32"},"content":"T false 234 /by sometime","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"darkvoid32"},"content":"T false abc 123","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"darkvoid32"},"content":"T false add groceries","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"darkvoid32"},"content":"T false buy groceries","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"darkvoid32"},"content":"T false testDeadline /by 123","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"darkvoid32":6}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darkvoid32"},"content":"import java.util.List;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"darkvoid32"},"content":"import Exceptions.DukeException;","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"darkvoid32"},"content":"import Storage.Storage;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"darkvoid32"},"content":"import Tasks.Deadline;","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"darkvoid32"},"content":"import Tasks.Event;","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"darkvoid32"},"content":"import Tasks.Task;","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"darkvoid32"},"content":"import Tasks.Task.TaskType;","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"darkvoid32"},"content":"import Tasks.ToDo;","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"darkvoid32"},"content":"import Ui.Parser;","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"darkvoid32"},"content":"import Ui.Parser.Command;","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"darkvoid32"},"content":"import Ui.Ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"darkvoid32"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"darkvoid32"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"darkvoid32"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"darkvoid32"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"darkvoid32"},"content":" * Simple chatbot program named kewqgy","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"darkvoid32"},"content":" * ","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"darkvoid32"},"content":" * @author Tang Yetong","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"darkvoid32"},"content":" **/","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"darkvoid32"},"content":"public class Duke extends Application {","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"darkvoid32"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"darkvoid32"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"darkvoid32"},"content":"    private Parser parser;","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"darkvoid32"},"content":"    private List\u003cTask\u003e userTaskList;","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"darkvoid32"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"darkvoid32"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"darkvoid32"},"content":"        ui \u003d new Ui(stage);","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"darkvoid32"},"content":"        storage \u003d new Storage(ui);","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"darkvoid32"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"darkvoid32"},"content":"        userTaskList \u003d storage.loadTasks();","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"darkvoid32"},"content":"        ui.getSendButton().setOnAction(event -\u003e handleUserInput());","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"darkvoid32"},"content":"        ","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"darkvoid32"},"content":"        ui.printIntro();","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"darkvoid32"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"darkvoid32"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"darkvoid32"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"darkvoid32"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"darkvoid32"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"darkvoid32"},"content":"    public void handleUserInput() {","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"darkvoid32"},"content":"        Label userText \u003d new Label(ui.getUserInput().getText());","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"darkvoid32"},"content":"        Label dukeText \u003d new Label(getResponse(ui.userInput.getText()));","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"darkvoid32"},"content":"        ui.addConversation(userText, dukeText);","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"darkvoid32"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"darkvoid32"},"content":"    public String getResponse(String userMsg) {","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"darkvoid32"},"content":"        String[] userMsgParsed \u003d userMsg.split(\" \", 2);","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"darkvoid32"},"content":"        Command nextCommand \u003d parser.parseUserMsg(userMsgParsed);","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"darkvoid32"},"content":"        String dukeText \u003d \"\";","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"darkvoid32"},"content":"        switch (nextCommand) {","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"darkvoid32"},"content":"            case LIST:","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"darkvoid32"},"content":"                dukeText \u003d ui.printList(userTaskList);","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"darkvoid32"},"content":"                break;","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"darkvoid32"},"content":"            case MARK:","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"darkvoid32"},"content":"                if (parser.checkValidMarkCommand(userMsgParsed, userTaskList)) {","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"darkvoid32"},"content":"                    int taskInt \u003d Integer.parseInt(userMsgParsed[1]) - 1;","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"darkvoid32"},"content":"                    userTaskList.get(taskInt).setDone(true);","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"darkvoid32"},"content":"                    storage.updateTask(taskInt, true);","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"darkvoid32"},"content":"                    dukeText \u003d ui.markTask(userTaskList, taskInt) + \"\\n\";","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"darkvoid32"},"content":"                }","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"darkvoid32"},"content":"                break;","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"darkvoid32"},"content":"            case UNMARK:","lastModifiedDate":"2024-02-04"},{"lineNumber":72,"author":{"gitId":"darkvoid32"},"content":"                if (parser.checkValidMarkCommand(userMsgParsed, userTaskList)) {","lastModifiedDate":"2024-02-04"},{"lineNumber":73,"author":{"gitId":"darkvoid32"},"content":"                    int taskInt \u003d Integer.parseInt(userMsgParsed[1]) - 1;","lastModifiedDate":"2024-02-04"},{"lineNumber":74,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":75,"author":{"gitId":"darkvoid32"},"content":"                    userTaskList.get(taskInt).setDone(false);","lastModifiedDate":"2024-02-04"},{"lineNumber":76,"author":{"gitId":"darkvoid32"},"content":"                    storage.updateTask(taskInt, false);","lastModifiedDate":"2024-02-04"},{"lineNumber":77,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":78,"author":{"gitId":"darkvoid32"},"content":"                    dukeText \u003d ui.markTask(userTaskList, taskInt);","lastModifiedDate":"2024-02-04"},{"lineNumber":79,"author":{"gitId":"darkvoid32"},"content":"                }","lastModifiedDate":"2024-02-04"},{"lineNumber":80,"author":{"gitId":"darkvoid32"},"content":"                break;","lastModifiedDate":"2024-02-04"},{"lineNumber":81,"author":{"gitId":"darkvoid32"},"content":"            case TODO:","lastModifiedDate":"2024-02-04"},{"lineNumber":82,"author":{"gitId":"darkvoid32"},"content":"                try {","lastModifiedDate":"2024-02-04"},{"lineNumber":83,"author":{"gitId":"darkvoid32"},"content":"                    ToDo task \u003d new ToDo(userMsgParsed[1]);","lastModifiedDate":"2024-02-04"},{"lineNumber":84,"author":{"gitId":"darkvoid32"},"content":"                    userTaskList.add(task);","lastModifiedDate":"2024-02-04"},{"lineNumber":85,"author":{"gitId":"darkvoid32"},"content":"                    storage.saveTask(userMsgParsed[1], TaskType.T);","lastModifiedDate":"2024-02-04"},{"lineNumber":86,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":87,"author":{"gitId":"darkvoid32"},"content":"                    dukeText \u003d ui.printAddTask(task, userTaskList.size());","lastModifiedDate":"2024-02-04"},{"lineNumber":88,"author":{"gitId":"darkvoid32"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":89,"author":{"gitId":"darkvoid32"},"content":"                    dukeText \u003d ui.printError(e);","lastModifiedDate":"2024-02-04"},{"lineNumber":90,"author":{"gitId":"darkvoid32"},"content":"                }","lastModifiedDate":"2024-02-04"},{"lineNumber":91,"author":{"gitId":"darkvoid32"},"content":"                break;","lastModifiedDate":"2024-02-04"},{"lineNumber":92,"author":{"gitId":"darkvoid32"},"content":"            case DEADLINE:","lastModifiedDate":"2024-02-04"},{"lineNumber":93,"author":{"gitId":"darkvoid32"},"content":"                try {","lastModifiedDate":"2024-02-04"},{"lineNumber":94,"author":{"gitId":"darkvoid32"},"content":"                    Deadline task \u003d new Deadline(userMsgParsed[1]);","lastModifiedDate":"2024-02-04"},{"lineNumber":95,"author":{"gitId":"darkvoid32"},"content":"                    userTaskList.add(task);","lastModifiedDate":"2024-02-04"},{"lineNumber":96,"author":{"gitId":"darkvoid32"},"content":"                    storage.saveTask(userMsgParsed[1], TaskType.T);","lastModifiedDate":"2024-02-04"},{"lineNumber":97,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":98,"author":{"gitId":"darkvoid32"},"content":"                    dukeText \u003d ui.printAddTask(task, userTaskList.size());","lastModifiedDate":"2024-02-04"},{"lineNumber":99,"author":{"gitId":"darkvoid32"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":100,"author":{"gitId":"darkvoid32"},"content":"                    dukeText \u003d ui.printError(e);","lastModifiedDate":"2024-02-04"},{"lineNumber":101,"author":{"gitId":"darkvoid32"},"content":"                }","lastModifiedDate":"2024-02-04"},{"lineNumber":102,"author":{"gitId":"darkvoid32"},"content":"                break;","lastModifiedDate":"2024-02-04"},{"lineNumber":103,"author":{"gitId":"darkvoid32"},"content":"            case EVENT:","lastModifiedDate":"2024-02-04"},{"lineNumber":104,"author":{"gitId":"darkvoid32"},"content":"                try {","lastModifiedDate":"2024-02-04"},{"lineNumber":105,"author":{"gitId":"darkvoid32"},"content":"                    Event task \u003d new Event(userMsgParsed[1]);","lastModifiedDate":"2024-02-04"},{"lineNumber":106,"author":{"gitId":"darkvoid32"},"content":"                    userTaskList.add(task);","lastModifiedDate":"2024-02-04"},{"lineNumber":107,"author":{"gitId":"darkvoid32"},"content":"                    storage.saveTask(userMsgParsed[1], TaskType.T);","lastModifiedDate":"2024-02-04"},{"lineNumber":108,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":109,"author":{"gitId":"darkvoid32"},"content":"                    dukeText \u003d ui.printAddTask(task, userTaskList.size());","lastModifiedDate":"2024-02-04"},{"lineNumber":110,"author":{"gitId":"darkvoid32"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":111,"author":{"gitId":"darkvoid32"},"content":"                    dukeText \u003d ui.printError(e);","lastModifiedDate":"2024-02-04"},{"lineNumber":112,"author":{"gitId":"darkvoid32"},"content":"                }","lastModifiedDate":"2024-02-04"},{"lineNumber":113,"author":{"gitId":"darkvoid32"},"content":"                break;","lastModifiedDate":"2024-02-04"},{"lineNumber":114,"author":{"gitId":"darkvoid32"},"content":"            case DELETE:","lastModifiedDate":"2024-02-04"},{"lineNumber":115,"author":{"gitId":"darkvoid32"},"content":"                if (parser.checkValidMarkCommand(userMsgParsed, userTaskList)) {","lastModifiedDate":"2024-02-04"},{"lineNumber":116,"author":{"gitId":"darkvoid32"},"content":"                    int taskInt \u003d Integer.parseInt(userMsgParsed[1]) - 1;","lastModifiedDate":"2024-02-04"},{"lineNumber":117,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":118,"author":{"gitId":"darkvoid32"},"content":"                    userTaskList.remove(taskInt);","lastModifiedDate":"2024-02-04"},{"lineNumber":119,"author":{"gitId":"darkvoid32"},"content":"                    storage.deleteTask(taskInt);","lastModifiedDate":"2024-02-04"},{"lineNumber":120,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":121,"author":{"gitId":"darkvoid32"},"content":"                    dukeText \u003d ui.printDeleteTask(userTaskList.get(taskInt), userTaskList.size());","lastModifiedDate":"2024-02-04"},{"lineNumber":122,"author":{"gitId":"darkvoid32"},"content":"                }","lastModifiedDate":"2024-02-04"},{"lineNumber":123,"author":{"gitId":"darkvoid32"},"content":"                break;","lastModifiedDate":"2024-02-04"},{"lineNumber":124,"author":{"gitId":"darkvoid32"},"content":"            case FIND:","lastModifiedDate":"2024-02-04"},{"lineNumber":125,"author":{"gitId":"darkvoid32"},"content":"                dukeText \u003d ui.printTaskKeyword(userTaskList, userMsgParsed[1]);","lastModifiedDate":"2024-02-04"},{"lineNumber":126,"author":{"gitId":"darkvoid32"},"content":"                break;","lastModifiedDate":"2024-02-04"},{"lineNumber":127,"author":{"gitId":"darkvoid32"},"content":"            case BYE:","lastModifiedDate":"2024-02-04"},{"lineNumber":128,"author":{"gitId":"darkvoid32"},"content":"                dukeText \u003d ui.printGoodBye();","lastModifiedDate":"2024-02-04"},{"lineNumber":129,"author":{"gitId":"darkvoid32"},"content":"                break;","lastModifiedDate":"2024-02-10"},{"lineNumber":130,"author":{"gitId":"darkvoid32"},"content":"            case UPDATE_TIME:","lastModifiedDate":"2024-02-10"},{"lineNumber":131,"author":{"gitId":"darkvoid32"},"content":"                String[] updateTimeParsed \u003d userMsg.split(\" \", 3);","lastModifiedDate":"2024-02-10"},{"lineNumber":132,"author":{"gitId":"darkvoid32"},"content":"                if (parser.checkValidMarkCommand(updateTimeParsed, userTaskList)) {","lastModifiedDate":"2024-02-10"},{"lineNumber":133,"author":{"gitId":"darkvoid32"},"content":"                    int taskInt \u003d Integer.parseInt(updateTimeParsed[1]) - 1;","lastModifiedDate":"2024-02-10"},{"lineNumber":134,"author":{"gitId":"darkvoid32"},"content":"                    ","lastModifiedDate":"2024-02-10"},{"lineNumber":135,"author":{"gitId":"darkvoid32"},"content":"                    try {","lastModifiedDate":"2024-02-10"},{"lineNumber":136,"author":{"gitId":"darkvoid32"},"content":"                        userTaskList.get(taskInt).updateTime(updateTimeParsed[2]);;","lastModifiedDate":"2024-02-10"},{"lineNumber":137,"author":{"gitId":"darkvoid32"},"content":"                        dukeText \u003d ui.printUpdateTime(userTaskList.get(taskInt));","lastModifiedDate":"2024-02-10"},{"lineNumber":138,"author":{"gitId":"darkvoid32"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":139,"author":{"gitId":"darkvoid32"},"content":"                        dukeText \u003d ui.printError(e);","lastModifiedDate":"2024-02-10"},{"lineNumber":140,"author":{"gitId":"darkvoid32"},"content":"                    }","lastModifiedDate":"2024-02-10"},{"lineNumber":141,"author":{"gitId":"darkvoid32"},"content":"                } ","lastModifiedDate":"2024-02-10"},{"lineNumber":142,"author":{"gitId":"darkvoid32"},"content":"                break;","lastModifiedDate":"2024-02-10"},{"lineNumber":143,"author":{"gitId":"darkvoid32"},"content":"            case UNKNOWN:","lastModifiedDate":"2024-02-04"},{"lineNumber":144,"author":{"gitId":"darkvoid32"},"content":"                dukeText \u003d ui.printUnknownCommand();","lastModifiedDate":"2024-02-04"},{"lineNumber":145,"author":{"gitId":"darkvoid32"},"content":"                break;","lastModifiedDate":"2024-02-04"},{"lineNumber":146,"author":{"gitId":"darkvoid32"},"content":"            default:","lastModifiedDate":"2024-02-04"},{"lineNumber":147,"author":{"gitId":"darkvoid32"},"content":"                break;","lastModifiedDate":"2024-02-04"},{"lineNumber":148,"author":{"gitId":"darkvoid32"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":149,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":150,"author":{"gitId":"darkvoid32"},"content":"        return dukeText;","lastModifiedDate":"2024-02-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"darkvoid32":150,"-":2}},{"path":"src/main/java/Exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darkvoid32"},"content":"package Exceptions;","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"darkvoid32"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"darkvoid32"},"content":"    public DukeException() {","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"darkvoid32"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"darkvoid32"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"darkvoid32"},"content":"        super(message);","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"darkvoid32"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"darkvoid32"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"darkvoid32":10}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darkvoid32"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"darkvoid32"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"darkvoid32"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"darkvoid32"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"darkvoid32"},"content":"public class Launcher {","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"darkvoid32"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"darkvoid32"},"content":"        Application.launch(Duke.class, args);","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"darkvoid32"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"darkvoid32"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"darkvoid32":10}},{"path":"src/main/java/Storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darkvoid32"},"content":"package Storage;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"darkvoid32"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"darkvoid32"},"content":"import java.io.File;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"darkvoid32"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"darkvoid32"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"darkvoid32"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"darkvoid32"},"content":"import java.util.List;","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"darkvoid32"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"darkvoid32"},"content":"import Exceptions.DukeException;","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"darkvoid32"},"content":"import Tasks.Deadline;","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"darkvoid32"},"content":"import Tasks.Event;","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"darkvoid32"},"content":"import Tasks.Task;","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"darkvoid32"},"content":"import Tasks.Task.TaskType;","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"darkvoid32"},"content":"import Ui.Ui;","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"darkvoid32"},"content":"import Tasks.ToDo;","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"darkvoid32"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"darkvoid32"},"content":" * Storage class to handle File IO actions","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"darkvoid32"},"content":" * ","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"darkvoid32"},"content":" * @author Tang Yetong","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"darkvoid32"},"content":" **/","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"darkvoid32"},"content":"public class Storage {","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"darkvoid32"},"content":"    private final String SAVE_FILE \u003d \"src/main/java/Data/Kewqgy.txt\";","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"darkvoid32"},"content":"    private Ui ui;","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"darkvoid32"},"content":"    public Storage(Ui ui) {","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"darkvoid32"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"darkvoid32"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"darkvoid32"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"darkvoid32"},"content":"     * Update task in save file when task is marked as done or undone.","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"darkvoid32"},"content":"     * ","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"darkvoid32"},"content":"     * @param taskInt index of task","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"darkvoid32"},"content":"     * @param isDone whether task is done","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"darkvoid32"},"content":"     **/","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"darkvoid32"},"content":"    public void updateTask(int taskInt, Boolean isDone) {","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"darkvoid32"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"darkvoid32"},"content":"            File saveFile \u003d new File(SAVE_FILE);","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"darkvoid32"},"content":"            // Check if file exists, if not, create new file","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"darkvoid32"},"content":"            if (!saveFile.exists() || saveFile.isDirectory()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"darkvoid32"},"content":"                saveFile.createNewFile();","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"darkvoid32"},"content":"                return;","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"darkvoid32"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"darkvoid32"},"content":"            List\u003cString\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"darkvoid32"},"content":"            Scanner fileReader \u003d new Scanner(saveFile);","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"darkvoid32"},"content":"            while (fileReader.hasNextLine()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"darkvoid32"},"content":"                tasks.add(fileReader.nextLine());","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"darkvoid32"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"darkvoid32"},"content":"            String taskUpdate \u003d tasks.get(taskInt);","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"darkvoid32"},"content":"            String[] taskUpdateParsed \u003d taskUpdate.split(\" \", 3);","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"darkvoid32"},"content":"            taskUpdateParsed[1] \u003d isDone.toString();","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"darkvoid32"},"content":"            tasks.set(taskInt, String.join(\" \", taskUpdateParsed));","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"darkvoid32"},"content":"            fileReader.close();","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"darkvoid32"},"content":"            FileWriter saveFileWriter \u003d new FileWriter(saveFile, false);","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"darkvoid32"},"content":"            BufferedWriter saveFileBufferedWriter \u003d new BufferedWriter(saveFileWriter);","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"darkvoid32"},"content":"            for (String taskString : tasks) {","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"darkvoid32"},"content":"                saveFileBufferedWriter.write(taskString + \"\\n\");","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"darkvoid32"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"darkvoid32"},"content":"            saveFileBufferedWriter.close();","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"darkvoid32"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":73,"author":{"gitId":"darkvoid32"},"content":"            ui.printDukeText(\"An error occurred.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":74,"author":{"gitId":"darkvoid32"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-01-30"},{"lineNumber":75,"author":{"gitId":"darkvoid32"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":76,"author":{"gitId":"darkvoid32"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":77,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":78,"author":{"gitId":"darkvoid32"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":79,"author":{"gitId":"darkvoid32"},"content":"     * Delete task in save file","lastModifiedDate":"2024-01-30"},{"lineNumber":80,"author":{"gitId":"darkvoid32"},"content":"     * ","lastModifiedDate":"2024-01-30"},{"lineNumber":81,"author":{"gitId":"darkvoid32"},"content":"     * @param taskInt index of task","lastModifiedDate":"2024-01-30"},{"lineNumber":82,"author":{"gitId":"darkvoid32"},"content":"     **/","lastModifiedDate":"2024-01-30"},{"lineNumber":83,"author":{"gitId":"darkvoid32"},"content":"    public void deleteTask(int taskInt) {","lastModifiedDate":"2024-01-30"},{"lineNumber":84,"author":{"gitId":"darkvoid32"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":85,"author":{"gitId":"darkvoid32"},"content":"            File saveFile \u003d new File(SAVE_FILE);","lastModifiedDate":"2024-01-30"},{"lineNumber":86,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":87,"author":{"gitId":"darkvoid32"},"content":"            // Check if file exists, if not, create new file","lastModifiedDate":"2024-01-30"},{"lineNumber":88,"author":{"gitId":"darkvoid32"},"content":"            if (!saveFile.exists() || saveFile.isDirectory()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":89,"author":{"gitId":"darkvoid32"},"content":"                saveFile.createNewFile();","lastModifiedDate":"2024-01-30"},{"lineNumber":90,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":91,"author":{"gitId":"darkvoid32"},"content":"                return;","lastModifiedDate":"2024-01-30"},{"lineNumber":92,"author":{"gitId":"darkvoid32"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":93,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":94,"author":{"gitId":"darkvoid32"},"content":"            List\u003cString\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-30"},{"lineNumber":95,"author":{"gitId":"darkvoid32"},"content":"            Scanner fileReader \u003d new Scanner(saveFile);","lastModifiedDate":"2024-01-30"},{"lineNumber":96,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":97,"author":{"gitId":"darkvoid32"},"content":"            while (fileReader.hasNextLine()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":98,"author":{"gitId":"darkvoid32"},"content":"                tasks.add(fileReader.nextLine());","lastModifiedDate":"2024-01-30"},{"lineNumber":99,"author":{"gitId":"darkvoid32"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":100,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":101,"author":{"gitId":"darkvoid32"},"content":"            tasks.remove(taskInt);","lastModifiedDate":"2024-01-30"},{"lineNumber":102,"author":{"gitId":"darkvoid32"},"content":"            fileReader.close();","lastModifiedDate":"2024-01-30"},{"lineNumber":103,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":104,"author":{"gitId":"darkvoid32"},"content":"            FileWriter saveFileWriter \u003d new FileWriter(saveFile, false);","lastModifiedDate":"2024-01-30"},{"lineNumber":105,"author":{"gitId":"darkvoid32"},"content":"            BufferedWriter saveFileBufferedWriter \u003d new BufferedWriter(saveFileWriter);","lastModifiedDate":"2024-01-30"},{"lineNumber":106,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":107,"author":{"gitId":"darkvoid32"},"content":"            for (String taskString : tasks) {","lastModifiedDate":"2024-01-30"},{"lineNumber":108,"author":{"gitId":"darkvoid32"},"content":"                saveFileBufferedWriter.write(taskString + \"\\n\");","lastModifiedDate":"2024-01-30"},{"lineNumber":109,"author":{"gitId":"darkvoid32"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":110,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":111,"author":{"gitId":"darkvoid32"},"content":"            saveFileBufferedWriter.close();","lastModifiedDate":"2024-01-30"},{"lineNumber":112,"author":{"gitId":"darkvoid32"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":113,"author":{"gitId":"darkvoid32"},"content":"            ui.printDukeText(\"An error occurred.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":114,"author":{"gitId":"darkvoid32"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-01-30"},{"lineNumber":115,"author":{"gitId":"darkvoid32"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":116,"author":{"gitId":"darkvoid32"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":117,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":118,"author":{"gitId":"darkvoid32"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":119,"author":{"gitId":"darkvoid32"},"content":"     * Save task in save file when task is created by user","lastModifiedDate":"2024-01-30"},{"lineNumber":120,"author":{"gitId":"darkvoid32"},"content":"     * ","lastModifiedDate":"2024-01-30"},{"lineNumber":121,"author":{"gitId":"darkvoid32"},"content":"     * @param userMsg Task description","lastModifiedDate":"2024-01-30"},{"lineNumber":122,"author":{"gitId":"darkvoid32"},"content":"     * @param taskType Type of task","lastModifiedDate":"2024-01-30"},{"lineNumber":123,"author":{"gitId":"darkvoid32"},"content":"     **/","lastModifiedDate":"2024-01-30"},{"lineNumber":124,"author":{"gitId":"darkvoid32"},"content":"    public void saveTask(String userMsg, TaskType taskType) {","lastModifiedDate":"2024-01-30"},{"lineNumber":125,"author":{"gitId":"darkvoid32"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":126,"author":{"gitId":"darkvoid32"},"content":"            File saveFile \u003d new File(SAVE_FILE);","lastModifiedDate":"2024-01-30"},{"lineNumber":127,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":128,"author":{"gitId":"darkvoid32"},"content":"            // Check if file exists, if not, create new file","lastModifiedDate":"2024-01-30"},{"lineNumber":129,"author":{"gitId":"darkvoid32"},"content":"            if (!saveFile.exists() || saveFile.isDirectory()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":130,"author":{"gitId":"darkvoid32"},"content":"                saveFile.createNewFile();","lastModifiedDate":"2024-01-30"},{"lineNumber":131,"author":{"gitId":"darkvoid32"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":132,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":133,"author":{"gitId":"darkvoid32"},"content":"            FileWriter saveFileWriter \u003d new FileWriter(saveFile, true);","lastModifiedDate":"2024-01-30"},{"lineNumber":134,"author":{"gitId":"darkvoid32"},"content":"            BufferedWriter saveFileBufferedWriter \u003d new BufferedWriter(saveFileWriter);","lastModifiedDate":"2024-01-30"},{"lineNumber":135,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":136,"author":{"gitId":"darkvoid32"},"content":"            switch (taskType) {","lastModifiedDate":"2024-01-30"},{"lineNumber":137,"author":{"gitId":"darkvoid32"},"content":"                case T:","lastModifiedDate":"2024-01-30"},{"lineNumber":138,"author":{"gitId":"darkvoid32"},"content":"                    saveFileBufferedWriter.write(TaskType.T.toString() + \" false \" + userMsg + \"\\n\");","lastModifiedDate":"2024-01-30"},{"lineNumber":139,"author":{"gitId":"darkvoid32"},"content":"                    break;","lastModifiedDate":"2024-01-30"},{"lineNumber":140,"author":{"gitId":"darkvoid32"},"content":"                case D:","lastModifiedDate":"2024-01-30"},{"lineNumber":141,"author":{"gitId":"darkvoid32"},"content":"                    saveFileBufferedWriter.write(TaskType.D.toString() + \" false \" + userMsg + \"\\n\");","lastModifiedDate":"2024-01-30"},{"lineNumber":142,"author":{"gitId":"darkvoid32"},"content":"                    break;","lastModifiedDate":"2024-01-30"},{"lineNumber":143,"author":{"gitId":"darkvoid32"},"content":"                case E:","lastModifiedDate":"2024-01-30"},{"lineNumber":144,"author":{"gitId":"darkvoid32"},"content":"                    saveFileBufferedWriter.write(TaskType.E.toString() + \" false \" + userMsg + \"\\n\");","lastModifiedDate":"2024-01-30"},{"lineNumber":145,"author":{"gitId":"darkvoid32"},"content":"                    break;","lastModifiedDate":"2024-01-30"},{"lineNumber":146,"author":{"gitId":"darkvoid32"},"content":"                default:","lastModifiedDate":"2024-01-30"},{"lineNumber":147,"author":{"gitId":"darkvoid32"},"content":"                    ui.printDukeText(\"Unkown Task Type: \" + taskType);","lastModifiedDate":"2024-02-04"},{"lineNumber":148,"author":{"gitId":"darkvoid32"},"content":"                    break;","lastModifiedDate":"2024-01-30"},{"lineNumber":149,"author":{"gitId":"darkvoid32"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":150,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":151,"author":{"gitId":"darkvoid32"},"content":"            saveFileBufferedWriter.close();","lastModifiedDate":"2024-01-30"},{"lineNumber":152,"author":{"gitId":"darkvoid32"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":153,"author":{"gitId":"darkvoid32"},"content":"            ui.printDukeText(\"An error occurred.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":154,"author":{"gitId":"darkvoid32"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-01-30"},{"lineNumber":155,"author":{"gitId":"darkvoid32"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":156,"author":{"gitId":"darkvoid32"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":157,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":158,"author":{"gitId":"darkvoid32"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":159,"author":{"gitId":"darkvoid32"},"content":"     * Load task in save file when chatbot is launched","lastModifiedDate":"2024-01-30"},{"lineNumber":160,"author":{"gitId":"darkvoid32"},"content":"     * ","lastModifiedDate":"2024-01-30"},{"lineNumber":161,"author":{"gitId":"darkvoid32"},"content":"     * @return list of tasks loaded from save file","lastModifiedDate":"2024-01-30"},{"lineNumber":162,"author":{"gitId":"darkvoid32"},"content":"     **/","lastModifiedDate":"2024-01-30"},{"lineNumber":163,"author":{"gitId":"darkvoid32"},"content":"    public List\u003cTask\u003e loadTasks() {","lastModifiedDate":"2024-01-30"},{"lineNumber":164,"author":{"gitId":"darkvoid32"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":165,"author":{"gitId":"darkvoid32"},"content":"            File saveFile \u003d new File(SAVE_FILE);","lastModifiedDate":"2024-01-30"},{"lineNumber":166,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":167,"author":{"gitId":"darkvoid32"},"content":"            // Check if file exists, if not, create new file","lastModifiedDate":"2024-01-30"},{"lineNumber":168,"author":{"gitId":"darkvoid32"},"content":"            if (!saveFile.exists() || saveFile.isDirectory()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":169,"author":{"gitId":"darkvoid32"},"content":"                saveFile.createNewFile();","lastModifiedDate":"2024-01-30"},{"lineNumber":170,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":171,"author":{"gitId":"darkvoid32"},"content":"                return new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-30"},{"lineNumber":172,"author":{"gitId":"darkvoid32"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":173,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":174,"author":{"gitId":"darkvoid32"},"content":"            Scanner fileReader \u003d new Scanner(saveFile);","lastModifiedDate":"2024-01-30"},{"lineNumber":175,"author":{"gitId":"darkvoid32"},"content":"            List\u003cTask\u003e savedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-30"},{"lineNumber":176,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":177,"author":{"gitId":"darkvoid32"},"content":"            while (fileReader.hasNextLine()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":178,"author":{"gitId":"darkvoid32"},"content":"                Task savedTask;","lastModifiedDate":"2024-01-30"},{"lineNumber":179,"author":{"gitId":"darkvoid32"},"content":"                String data \u003d fileReader.nextLine();","lastModifiedDate":"2024-01-30"},{"lineNumber":180,"author":{"gitId":"darkvoid32"},"content":"                // Type, isDone, Description","lastModifiedDate":"2024-01-30"},{"lineNumber":181,"author":{"gitId":"darkvoid32"},"content":"                String[] dataParsed \u003d data.split(\" \", 3);","lastModifiedDate":"2024-01-30"},{"lineNumber":182,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":183,"author":{"gitId":"darkvoid32"},"content":"                switch (TaskType.getType(dataParsed[0])) {","lastModifiedDate":"2024-01-30"},{"lineNumber":184,"author":{"gitId":"darkvoid32"},"content":"                    case T:","lastModifiedDate":"2024-01-30"},{"lineNumber":185,"author":{"gitId":"darkvoid32"},"content":"                        savedTask \u003d new ToDo(dataParsed[2]);","lastModifiedDate":"2024-01-30"},{"lineNumber":186,"author":{"gitId":"darkvoid32"},"content":"                        break;","lastModifiedDate":"2024-01-30"},{"lineNumber":187,"author":{"gitId":"darkvoid32"},"content":"                    case D:","lastModifiedDate":"2024-01-30"},{"lineNumber":188,"author":{"gitId":"darkvoid32"},"content":"                        savedTask \u003d new Deadline(dataParsed[2]);","lastModifiedDate":"2024-01-30"},{"lineNumber":189,"author":{"gitId":"darkvoid32"},"content":"                        break;","lastModifiedDate":"2024-01-30"},{"lineNumber":190,"author":{"gitId":"darkvoid32"},"content":"                    case E:","lastModifiedDate":"2024-01-30"},{"lineNumber":191,"author":{"gitId":"darkvoid32"},"content":"                        savedTask \u003d new Event(dataParsed[2]);","lastModifiedDate":"2024-01-30"},{"lineNumber":192,"author":{"gitId":"darkvoid32"},"content":"                        break;","lastModifiedDate":"2024-01-30"},{"lineNumber":193,"author":{"gitId":"darkvoid32"},"content":"                    default:","lastModifiedDate":"2024-01-30"},{"lineNumber":194,"author":{"gitId":"darkvoid32"},"content":"                        System.out.println(\"Unknown Task Type: \" + dataParsed[0]);","lastModifiedDate":"2024-01-30"},{"lineNumber":195,"author":{"gitId":"darkvoid32"},"content":"                        continue;","lastModifiedDate":"2024-01-30"},{"lineNumber":196,"author":{"gitId":"darkvoid32"},"content":"                }","lastModifiedDate":"2024-01-30"},{"lineNumber":197,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":198,"author":{"gitId":"darkvoid32"},"content":"                savedTask.setDone(Boolean.parseBoolean(dataParsed[1]));","lastModifiedDate":"2024-01-30"},{"lineNumber":199,"author":{"gitId":"darkvoid32"},"content":"                savedTasks.add(savedTask);","lastModifiedDate":"2024-01-30"},{"lineNumber":200,"author":{"gitId":"darkvoid32"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":201,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":202,"author":{"gitId":"darkvoid32"},"content":"            fileReader.close();","lastModifiedDate":"2024-01-30"},{"lineNumber":203,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":204,"author":{"gitId":"darkvoid32"},"content":"            return savedTasks;","lastModifiedDate":"2024-01-30"},{"lineNumber":205,"author":{"gitId":"darkvoid32"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":206,"author":{"gitId":"darkvoid32"},"content":"            ui.printDukeText(\"An error occurred.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":207,"author":{"gitId":"darkvoid32"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-01-30"},{"lineNumber":208,"author":{"gitId":"darkvoid32"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":209,"author":{"gitId":"darkvoid32"},"content":"            ui.printDukeText(\"DukeException occurred: \" + e.toString());","lastModifiedDate":"2024-02-04"},{"lineNumber":210,"author":{"gitId":"darkvoid32"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":211,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":212,"author":{"gitId":"darkvoid32"},"content":"        return new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-30"},{"lineNumber":213,"author":{"gitId":"darkvoid32"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":214,"author":{"gitId":"darkvoid32"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"darkvoid32":214}},{"path":"src/main/java/Tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darkvoid32"},"content":"package Tasks;","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"darkvoid32"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"darkvoid32"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"darkvoid32"},"content":"import Exceptions.DukeException;","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"darkvoid32"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"darkvoid32"},"content":" * Deadline task, with description and time to finish task by","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"darkvoid32"},"content":" * ","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"darkvoid32"},"content":" * @author Tang Yetong","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"darkvoid32"},"content":" **/","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"darkvoid32"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"darkvoid32"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"darkvoid32"},"content":"     * Create deadline task","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"darkvoid32"},"content":"     * ","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"darkvoid32"},"content":"     * @param description description of task, with deadline included for parsing","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"darkvoid32"},"content":"     * @throws DukeException","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"darkvoid32"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"darkvoid32"},"content":"    public Deadline(String description) throws DukeException {","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"darkvoid32"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"darkvoid32"},"content":"        String desc \u003d super.description;","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"darkvoid32"},"content":"        ","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"darkvoid32"},"content":"        if (!desc.contains(\"/by\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"darkvoid32"},"content":"            throw new DukeException(\"Date missing in description!\");","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"darkvoid32"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"darkvoid32"},"content":"        String[] descParsed \u003d desc.split(\"/by\");","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"darkvoid32"},"content":"        if (descParsed.length \u003d\u003d 1) {","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"darkvoid32"},"content":"            throw new DukeException(\"Invalid date!\");","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"darkvoid32"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"darkvoid32"},"content":"        super.description \u003d descParsed[0].trim();","lastModifiedDate":"2024-02-10"},{"lineNumber":36,"author":{"gitId":"darkvoid32"},"content":"        updateTime(descParsed[1].trim().split(\" \"));","lastModifiedDate":"2024-02-10"},{"lineNumber":37,"author":{"gitId":"darkvoid32"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":38,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":39,"author":{"gitId":"darkvoid32"},"content":"    @Override","lastModifiedDate":"2024-02-10"},{"lineNumber":40,"author":{"gitId":"darkvoid32"},"content":"    public void updateTime(String... times) throws DukeException {","lastModifiedDate":"2024-02-10"},{"lineNumber":41,"author":{"gitId":"darkvoid32"},"content":"        if (times.length !\u003d 1) {","lastModifiedDate":"2024-02-10"},{"lineNumber":42,"author":{"gitId":"darkvoid32"},"content":"            throw new DukeException(\"Invalid times given for Deadline\");","lastModifiedDate":"2024-02-10"},{"lineNumber":43,"author":{"gitId":"darkvoid32"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":44,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":45,"author":{"gitId":"darkvoid32"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"darkvoid32"},"content":"            LocalDate date \u003d LocalDate.parse(times[0].trim());","lastModifiedDate":"2024-02-10"},{"lineNumber":47,"author":{"gitId":"darkvoid32"},"content":"            String formattedDate \u003d date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"darkvoid32"},"content":"            super.time1 \u003d formattedDate;","lastModifiedDate":"2024-02-10"},{"lineNumber":50,"author":{"gitId":"darkvoid32"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"darkvoid32"},"content":"            super.time1 \u003d times[0];","lastModifiedDate":"2024-02-10"},{"lineNumber":52,"author":{"gitId":"darkvoid32"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":53,"author":{"gitId":"darkvoid32"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":55,"author":{"gitId":"darkvoid32"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":56,"author":{"gitId":"darkvoid32"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":57,"author":{"gitId":"darkvoid32"},"content":"        return \"[\" + TaskType.D + \"][\" + super.getStatusIcon() + \"] \" + ","lastModifiedDate":"2024-02-10"},{"lineNumber":58,"author":{"gitId":"darkvoid32"},"content":"            super.description + \" (by: \" + time1 + \")\";","lastModifiedDate":"2024-02-10"},{"lineNumber":59,"author":{"gitId":"darkvoid32"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":60,"author":{"gitId":"darkvoid32"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"darkvoid32":60}},{"path":"src/main/java/Tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darkvoid32"},"content":"package Tasks;","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"darkvoid32"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"darkvoid32"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"darkvoid32"},"content":"import Exceptions.DukeException;","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"darkvoid32"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"darkvoid32"},"content":" * Event task, with description and time to start and finish task by","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"darkvoid32"},"content":" * ","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"darkvoid32"},"content":" * @author Tang Yetong","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"darkvoid32"},"content":" **/","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"darkvoid32"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"darkvoid32"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"darkvoid32"},"content":"     * Creation of event task","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"darkvoid32"},"content":"     * ","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"darkvoid32"},"content":"     * @param description description with 2 dates included for parsing","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"darkvoid32"},"content":"     * @throws DukeException","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"darkvoid32"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"darkvoid32"},"content":"    public Event(String description) throws DukeException {","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"darkvoid32"},"content":"        super(description);","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"darkvoid32"},"content":"        parseEventDescription(description);","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"darkvoid32"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"darkvoid32"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"darkvoid32"},"content":"     * Parses the event description to extract dates and format them properly","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"darkvoid32"},"content":"     * ","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"darkvoid32"},"content":"     * @param description the original description","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"darkvoid32"},"content":"     * @return formatted event description","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"darkvoid32"},"content":"     * @throws DukeException if there\u0027s an issue with the description format","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"darkvoid32"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":33,"author":{"gitId":"darkvoid32"},"content":"    private void parseEventDescription(String description) throws DukeException {","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"darkvoid32"},"content":"        if (!description.contains(\"/from\") || !description.contains(\"/to\")) {","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"darkvoid32"},"content":"            throw new DukeException(\"Dates missing in description!\");","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"darkvoid32"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"darkvoid32"},"content":"        String[] descParsed \u003d description.split(\"/from\");","lastModifiedDate":"2024-02-10"},{"lineNumber":39,"author":{"gitId":"darkvoid32"},"content":"        String[] dateParsed \u003d descParsed[1].split(\"/to\");","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"darkvoid32"},"content":"        if (dateParsed.length \u003c\u003d 1 || dateParsed[0].isBlank() || dateParsed[1].isBlank()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"darkvoid32"},"content":"            throw new DukeException(\"Invalid dates!\");","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"darkvoid32"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"darkvoid32"},"content":"        super.description \u003d descParsed[0].trim();","lastModifiedDate":"2024-02-10"},{"lineNumber":46,"author":{"gitId":"darkvoid32"},"content":"        updateTime(dateParsed);","lastModifiedDate":"2024-02-10"},{"lineNumber":47,"author":{"gitId":"darkvoid32"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":48,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":49,"author":{"gitId":"darkvoid32"},"content":"    @Override","lastModifiedDate":"2024-02-10"},{"lineNumber":50,"author":{"gitId":"darkvoid32"},"content":"    public void updateTime(String... times) throws DukeException {","lastModifiedDate":"2024-02-10"},{"lineNumber":51,"author":{"gitId":"darkvoid32"},"content":"        if (times.length !\u003d 2) {","lastModifiedDate":"2024-02-10"},{"lineNumber":52,"author":{"gitId":"darkvoid32"},"content":"            throw new DukeException(\"Invalid times given for Event\");","lastModifiedDate":"2024-02-10"},{"lineNumber":53,"author":{"gitId":"darkvoid32"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":54,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":55,"author":{"gitId":"darkvoid32"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"darkvoid32"},"content":"            LocalDate date1 \u003d LocalDate.parse(times[0].trim());","lastModifiedDate":"2024-02-10"},{"lineNumber":57,"author":{"gitId":"darkvoid32"},"content":"            LocalDate date2 \u003d LocalDate.parse(times[1].trim());","lastModifiedDate":"2024-02-10"},{"lineNumber":58,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"darkvoid32"},"content":"            String formattedDate1 \u003d formatDate(date1);","lastModifiedDate":"2024-02-10"},{"lineNumber":60,"author":{"gitId":"darkvoid32"},"content":"            String formattedDate2 \u003d formatDate(date2);","lastModifiedDate":"2024-02-10"},{"lineNumber":61,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"darkvoid32"},"content":"            super.time1 \u003d formattedDate1;","lastModifiedDate":"2024-02-10"},{"lineNumber":63,"author":{"gitId":"darkvoid32"},"content":"            super.time2 \u003d formattedDate2;","lastModifiedDate":"2024-02-10"},{"lineNumber":64,"author":{"gitId":"darkvoid32"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"darkvoid32"},"content":"            super.time1 \u003d times[0].trim();","lastModifiedDate":"2024-02-10"},{"lineNumber":66,"author":{"gitId":"darkvoid32"},"content":"            super.time2 \u003d times[1].trim();","lastModifiedDate":"2024-02-10"},{"lineNumber":67,"author":{"gitId":"darkvoid32"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":68,"author":{"gitId":"darkvoid32"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":70,"author":{"gitId":"darkvoid32"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":71,"author":{"gitId":"darkvoid32"},"content":"     * Formats a LocalDate object into a string in the \"MMM d yyyy\" format","lastModifiedDate":"2024-02-10"},{"lineNumber":72,"author":{"gitId":"darkvoid32"},"content":"     * ","lastModifiedDate":"2024-02-10"},{"lineNumber":73,"author":{"gitId":"darkvoid32"},"content":"     * @param date the date to be formatted","lastModifiedDate":"2024-02-10"},{"lineNumber":74,"author":{"gitId":"darkvoid32"},"content":"     * @return the formatted date string","lastModifiedDate":"2024-02-10"},{"lineNumber":75,"author":{"gitId":"darkvoid32"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":76,"author":{"gitId":"darkvoid32"},"content":"    private static String formatDate(LocalDate date) {","lastModifiedDate":"2024-02-10"},{"lineNumber":77,"author":{"gitId":"darkvoid32"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2024-02-10"},{"lineNumber":78,"author":{"gitId":"darkvoid32"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":79,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":80,"author":{"gitId":"darkvoid32"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":81,"author":{"gitId":"darkvoid32"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":82,"author":{"gitId":"darkvoid32"},"content":"        return \"[\" + TaskType.E + \"][\" + super.getStatusIcon() + \"] \" + ","lastModifiedDate":"2024-02-10"},{"lineNumber":83,"author":{"gitId":"darkvoid32"},"content":"            super.getDescription() + \" (from: \" + super.time1 + \" to: \" + super.time2 + \")\";","lastModifiedDate":"2024-02-10"},{"lineNumber":84,"author":{"gitId":"darkvoid32"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":85,"author":{"gitId":"darkvoid32"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"darkvoid32":85}},{"path":"src/main/java/Tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darkvoid32"},"content":"package Tasks;","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"darkvoid32"},"content":"import Exceptions.DukeException;","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"darkvoid32"},"content":"public class Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"darkvoid32"},"content":"    protected String description;","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"darkvoid32"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"darkvoid32"},"content":"    protected String time1;","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"darkvoid32"},"content":"    protected String time2;","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"darkvoid32"},"content":"    public enum TaskType {","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"darkvoid32"},"content":"        T,","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"darkvoid32"},"content":"        D,","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"darkvoid32"},"content":"        E;","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"darkvoid32"},"content":"        public static TaskType getType(String s) {","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"darkvoid32"},"content":"            switch (s) {","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"darkvoid32"},"content":"                case \"T\":","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"darkvoid32"},"content":"                    return T;","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"darkvoid32"},"content":"                case \"D\":","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"darkvoid32"},"content":"                    return D;","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"darkvoid32"},"content":"                case \"E\":","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"darkvoid32"},"content":"                    return E;","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"darkvoid32"},"content":"                default:","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"darkvoid32"},"content":"                    return null;","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"darkvoid32"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"darkvoid32"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"darkvoid32"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"darkvoid32"},"content":"    public Task(String description) throws DukeException {","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"darkvoid32"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"darkvoid32"},"content":"            throw new DukeException(\"Description cannot be empty!\");","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"darkvoid32"},"content":"        };","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"darkvoid32"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"darkvoid32"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":37,"author":{"gitId":"darkvoid32"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":38,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":39,"author":{"gitId":"darkvoid32"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-24"},{"lineNumber":40,"author":{"gitId":"darkvoid32"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-02-10"},{"lineNumber":41,"author":{"gitId":"darkvoid32"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":42,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":43,"author":{"gitId":"darkvoid32"},"content":"    public String getDescription() {","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"darkvoid32"},"content":"        return this.description;","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"darkvoid32"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"darkvoid32"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2024-01-24"},{"lineNumber":48,"author":{"gitId":"darkvoid32"},"content":"        this.isDone \u003d done;","lastModifiedDate":"2024-01-24"},{"lineNumber":49,"author":{"gitId":"darkvoid32"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":50,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":51,"author":{"gitId":"darkvoid32"},"content":"    public void updateDescription(String description) {","lastModifiedDate":"2024-02-10"},{"lineNumber":52,"author":{"gitId":"darkvoid32"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-10"},{"lineNumber":53,"author":{"gitId":"darkvoid32"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":54,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":55,"author":{"gitId":"darkvoid32"},"content":"    public void updateTime(String... times) throws DukeException { }","lastModifiedDate":"2024-02-10"},{"lineNumber":56,"author":{"gitId":"darkvoid32"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"darkvoid32":56}},{"path":"src/main/java/Tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darkvoid32"},"content":"package Tasks;","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"darkvoid32"},"content":"import Exceptions.DukeException;","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"darkvoid32"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"darkvoid32"},"content":" * ToDo task, with description","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"darkvoid32"},"content":" * ","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"darkvoid32"},"content":" * @author Tang Yetong","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"darkvoid32"},"content":" **/","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"darkvoid32"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"darkvoid32"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"darkvoid32"},"content":"     * Create ToDo task","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"darkvoid32"},"content":"     * ","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"darkvoid32"},"content":"     * @param description description of task","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"darkvoid32"},"content":"     * @throws DukeException","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"darkvoid32"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"darkvoid32"},"content":"    public ToDo(String description) throws DukeException {","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"darkvoid32"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"darkvoid32"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"darkvoid32"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"darkvoid32"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"darkvoid32"},"content":"        return \"[\" + TaskType.T + \"][\" + super.getStatusIcon() + \"] \" + super.description;","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"darkvoid32"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"darkvoid32"},"content":"    @Override","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"darkvoid32"},"content":"    public void updateTime(String... times) throws DukeException {","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"darkvoid32"},"content":"        if (times.length !\u003d 0) {","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"darkvoid32"},"content":"            throw new DukeException(\"Invalid times given for ToDo\");","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"darkvoid32"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"darkvoid32"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"darkvoid32"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"darkvoid32":32}},{"path":"src/main/java/Ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darkvoid32"},"content":"package Ui;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"darkvoid32"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"darkvoid32"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"darkvoid32"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"darkvoid32"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"darkvoid32"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"darkvoid32"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"darkvoid32"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"darkvoid32"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"darkvoid32"},"content":"    private Label text;","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"darkvoid32"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"darkvoid32"},"content":"    public DialogBox(Label l, ImageView iv) {","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"darkvoid32"},"content":"        text \u003d l;","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"darkvoid32"},"content":"        displayPicture \u003d iv;","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"darkvoid32"},"content":"        text.setWrapText(true);","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"darkvoid32"},"content":"        displayPicture.setFitWidth(100.0);","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"darkvoid32"},"content":"        displayPicture.setFitHeight(100.0);","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"darkvoid32"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"darkvoid32"},"content":"        this.getChildren().addAll(text, displayPicture);","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"darkvoid32"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"darkvoid32"},"content":"    private void flip() {","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"darkvoid32"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"darkvoid32"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"darkvoid32"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"darkvoid32"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"darkvoid32"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"darkvoid32"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"darkvoid32"},"content":"        return new DialogBox(l, iv);","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"darkvoid32"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"darkvoid32"},"content":"    public static DialogBox getDukeDialog(Label l, ImageView iv) {","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"darkvoid32"},"content":"        var db \u003d new DialogBox(l, iv);","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"darkvoid32"},"content":"        db.flip();","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"darkvoid32"},"content":"        return db;","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"darkvoid32"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"darkvoid32"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"darkvoid32":44}},{"path":"src/main/java/Ui/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darkvoid32"},"content":"package Ui;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"darkvoid32"},"content":"import java.util.List;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"darkvoid32"},"content":"import Tasks.Task;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"darkvoid32"},"content":"public class Parser {","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"darkvoid32"},"content":"    public enum Command {","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"darkvoid32"},"content":"        MARK,","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"darkvoid32"},"content":"        UNMARK,","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"darkvoid32"},"content":"        TODO,","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"darkvoid32"},"content":"        DEADLINE,","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"darkvoid32"},"content":"        EVENT,","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"darkvoid32"},"content":"        DELETE,","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"darkvoid32"},"content":"        BYE,","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"darkvoid32"},"content":"        LIST,","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"darkvoid32"},"content":"        FIND,","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"darkvoid32"},"content":"        UPDATE_TIME,","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"darkvoid32"},"content":"        UNKNOWN","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"darkvoid32"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"darkvoid32"},"content":"    public Parser() {}","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"darkvoid32"},"content":"    public Command parseUserMsg(String[] userMsg) {","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"darkvoid32"},"content":"        assert userMsg !\u003d null \u0026\u0026 userMsg.length \u003e 0 : \"User message should not be null or empty\";","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"darkvoid32"},"content":"        switch (userMsg[0]) {","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"darkvoid32"},"content":"            case \"bye\":","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"darkvoid32"},"content":"                return Command.BYE;","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"darkvoid32"},"content":"            case \"list\":","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"darkvoid32"},"content":"                return Command.LIST;","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"darkvoid32"},"content":"            case \"mark\":","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"darkvoid32"},"content":"                return Command.MARK;","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"darkvoid32"},"content":"            case \"unmark\":","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"darkvoid32"},"content":"                return Command.UNMARK;","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"darkvoid32"},"content":"            case \"todo\":","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"darkvoid32"},"content":"                return Command.TODO;","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"darkvoid32"},"content":"            case \"deadline\":","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"darkvoid32"},"content":"                return Command.DEADLINE;","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"darkvoid32"},"content":"            case \"event\":","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"darkvoid32"},"content":"                return Command.EVENT;","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"darkvoid32"},"content":"            case \"delete\":","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"darkvoid32"},"content":"                return Command.DELETE;","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"darkvoid32"},"content":"            case \"find\":","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"darkvoid32"},"content":"                return Command.FIND;","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"darkvoid32"},"content":"            case \"update_time\":","lastModifiedDate":"2024-02-10"},{"lineNumber":48,"author":{"gitId":"darkvoid32"},"content":"                return Command.UPDATE_TIME;","lastModifiedDate":"2024-02-10"},{"lineNumber":49,"author":{"gitId":"darkvoid32"},"content":"            default:","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"darkvoid32"},"content":"                return Command.UNKNOWN;","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"darkvoid32"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"darkvoid32"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"darkvoid32"},"content":"    public boolean checkValidMarkCommand(String[] userMsg, List\u003cTask\u003e userTaskList) {","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"darkvoid32"},"content":"        assert userMsg !\u003d null \u0026\u0026 userMsg.length \u003e 1 : \"User message should contain at least two elements\";","lastModifiedDate":"2024-02-10"},{"lineNumber":56,"author":{"gitId":"darkvoid32"},"content":"        assert userTaskList !\u003d null : \"User task list should not be null\";","lastModifiedDate":"2024-02-10"},{"lineNumber":57,"author":{"gitId":"darkvoid32"},"content":"        ","lastModifiedDate":"2024-02-10"},{"lineNumber":58,"author":{"gitId":"darkvoid32"},"content":"        return userMsg.length \u003e 1 \u0026\u0026","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"darkvoid32"},"content":"            userMsg[1].chars().allMatch(Character::isDigit) \u0026\u0026","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"darkvoid32"},"content":"            Integer.parseInt(userMsg[1]) \u003c\u003d userTaskList.size() \u0026\u0026","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"darkvoid32"},"content":"            Integer.parseInt(userMsg[1]) \u003e 0;","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"darkvoid32"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"darkvoid32"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"darkvoid32":63}},{"path":"src/main/java/Ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darkvoid32"},"content":"package Ui;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"darkvoid32"},"content":"import java.util.List;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"darkvoid32"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"darkvoid32"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"darkvoid32"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"darkvoid32"},"content":"import Tasks.Task;","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"darkvoid32"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"darkvoid32"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"darkvoid32"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"darkvoid32"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"darkvoid32"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"darkvoid32"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"darkvoid32"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"darkvoid32"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"darkvoid32"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"darkvoid32"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"darkvoid32"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"darkvoid32"},"content":"public class Ui {","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"darkvoid32"},"content":"    final static String HORIZONTAL_LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"darkvoid32"},"content":"    final static String DUKE_IMG \u003d \"/images/DaUser.png\";","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"darkvoid32"},"content":"    final static String USER_IMG \u003d \"/images/DaDuke.png\";","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"darkvoid32"},"content":"    final static String NAME \u003d \"Kewgy\";","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"darkvoid32"},"content":"    private Scanner reader;","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"darkvoid32"},"content":"    private Label textLabel;","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"darkvoid32"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"darkvoid32"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"darkvoid32"},"content":"    private Scene scene;","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"darkvoid32"},"content":"    private Image userImg;","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"darkvoid32"},"content":"    private Image dukeImg;","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"darkvoid32"},"content":"    public TextField userInput;","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"darkvoid32"},"content":"    public Button sendButton;","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"darkvoid32"},"content":"    public Ui(Stage stage) {","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"darkvoid32"},"content":"        this.reader \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"darkvoid32"},"content":"        initScene(stage);","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"darkvoid32"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"darkvoid32"},"content":"    public void initScene(Stage stage) {","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"darkvoid32"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"darkvoid32"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"darkvoid32"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"darkvoid32"},"content":"        System.out.println(this.getClass().getResource(\"/\").getPath());","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"darkvoid32"},"content":"        userImg \u003d new Image(this.getClass().getResourceAsStream(DUKE_IMG));","lastModifiedDate":"2024-02-10"},{"lineNumber":52,"author":{"gitId":"darkvoid32"},"content":"        dukeImg \u003d new Image(this.getClass().getResourceAsStream(USER_IMG));","lastModifiedDate":"2024-02-10"},{"lineNumber":53,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"darkvoid32"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"darkvoid32"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"darkvoid32"},"content":"        textLabel \u003d new Label(\"\");","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"darkvoid32"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"darkvoid32"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton, textLabel);","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"darkvoid32"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"darkvoid32"},"content":"        stage.setScene(scene);","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"darkvoid32"},"content":"        stage.show();","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"darkvoid32"},"content":"        stage.setTitle(NAME);","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"darkvoid32"},"content":"        stage.setResizable(false);","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"darkvoid32"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"darkvoid32"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"darkvoid32"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":73,"author":{"gitId":"darkvoid32"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2024-01-30"},{"lineNumber":74,"author":{"gitId":"darkvoid32"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2024-01-30"},{"lineNumber":75,"author":{"gitId":"darkvoid32"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2024-01-30"},{"lineNumber":76,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":77,"author":{"gitId":"darkvoid32"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2024-01-30"},{"lineNumber":78,"author":{"gitId":"darkvoid32"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2024-01-30"},{"lineNumber":79,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":80,"author":{"gitId":"darkvoid32"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2024-01-30"},{"lineNumber":81,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":82,"author":{"gitId":"darkvoid32"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2024-01-30"},{"lineNumber":83,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":84,"author":{"gitId":"darkvoid32"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2024-01-30"},{"lineNumber":85,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":86,"author":{"gitId":"darkvoid32"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2024-01-30"},{"lineNumber":87,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":88,"author":{"gitId":"darkvoid32"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2024-01-30"},{"lineNumber":89,"author":{"gitId":"darkvoid32"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2024-01-30"},{"lineNumber":90,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":91,"author":{"gitId":"darkvoid32"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2024-01-30"},{"lineNumber":92,"author":{"gitId":"darkvoid32"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2024-01-30"},{"lineNumber":93,"author":{"gitId":"darkvoid32"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":94,"author":{"gitId":"darkvoid32"},"content":"    ","lastModifiedDate":"2024-01-30"},{"lineNumber":95,"author":{"gitId":"darkvoid32"},"content":"    public void addConversation(Label userText, Label dukeText) {","lastModifiedDate":"2024-02-04"},{"lineNumber":96,"author":{"gitId":"darkvoid32"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-01-30"},{"lineNumber":97,"author":{"gitId":"darkvoid32"},"content":"            DialogBox.getUserDialog(userText, new ImageView(userImg)),","lastModifiedDate":"2024-02-10"},{"lineNumber":98,"author":{"gitId":"darkvoid32"},"content":"            DialogBox.getDukeDialog(dukeText, new ImageView(dukeImg))","lastModifiedDate":"2024-02-10"},{"lineNumber":99,"author":{"gitId":"darkvoid32"},"content":"        );","lastModifiedDate":"2024-01-30"},{"lineNumber":100,"author":{"gitId":"darkvoid32"},"content":"        userInput.clear();","lastModifiedDate":"2024-01-30"},{"lineNumber":101,"author":{"gitId":"darkvoid32"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":102,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":103,"author":{"gitId":"darkvoid32"},"content":"    public Scene getScene() {","lastModifiedDate":"2024-02-04"},{"lineNumber":104,"author":{"gitId":"darkvoid32"},"content":"        return scene;","lastModifiedDate":"2024-02-04"},{"lineNumber":105,"author":{"gitId":"darkvoid32"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":106,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":107,"author":{"gitId":"darkvoid32"},"content":"    public TextField getUserInput() {","lastModifiedDate":"2024-02-04"},{"lineNumber":108,"author":{"gitId":"darkvoid32"},"content":"        return userInput;","lastModifiedDate":"2024-02-04"},{"lineNumber":109,"author":{"gitId":"darkvoid32"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":110,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":111,"author":{"gitId":"darkvoid32"},"content":"    public Button getSendButton() {","lastModifiedDate":"2024-02-04"},{"lineNumber":112,"author":{"gitId":"darkvoid32"},"content":"        return sendButton;","lastModifiedDate":"2024-02-04"},{"lineNumber":113,"author":{"gitId":"darkvoid32"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":114,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":115,"author":{"gitId":"darkvoid32"},"content":"    public String[] getUserCommand() {","lastModifiedDate":"2024-01-30"},{"lineNumber":116,"author":{"gitId":"darkvoid32"},"content":"        return reader.nextLine().split(\" \", 2);","lastModifiedDate":"2024-01-30"},{"lineNumber":117,"author":{"gitId":"darkvoid32"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":118,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":119,"author":{"gitId":"darkvoid32"},"content":"    public String printTaskKeyword(List\u003cTask\u003e userTaskList, String keyword) {","lastModifiedDate":"2024-02-04"},{"lineNumber":120,"author":{"gitId":"darkvoid32"},"content":"        String tasks \u003d IntStream.range(0, userTaskList.size())","lastModifiedDate":"2024-02-10"},{"lineNumber":121,"author":{"gitId":"darkvoid32"},"content":"                                .filter(i -\u003e userTaskList.get(i).getDescription().contains(keyword))","lastModifiedDate":"2024-02-10"},{"lineNumber":122,"author":{"gitId":"darkvoid32"},"content":"                                .mapToObj(i -\u003e i + \": \" + userTaskList.get(i))","lastModifiedDate":"2024-02-10"},{"lineNumber":123,"author":{"gitId":"darkvoid32"},"content":"                                .collect(Collectors.joining(\"\\n\"));","lastModifiedDate":"2024-02-10"},{"lineNumber":124,"author":{"gitId":"darkvoid32"},"content":"        ","lastModifiedDate":"2024-02-04"},{"lineNumber":125,"author":{"gitId":"darkvoid32"},"content":"        return this.formatString(\"Here are the matching tasks in your list:\\n\" + tasks);","lastModifiedDate":"2024-02-10"},{"lineNumber":126,"author":{"gitId":"darkvoid32"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":127,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":128,"author":{"gitId":"darkvoid32"},"content":"    public String printGoodBye() {","lastModifiedDate":"2024-02-04"},{"lineNumber":129,"author":{"gitId":"darkvoid32"},"content":"        reader.close();","lastModifiedDate":"2024-01-30"},{"lineNumber":130,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":131,"author":{"gitId":"darkvoid32"},"content":"        return this.formatString(\"Bye! Hope to see you again soon!\");","lastModifiedDate":"2024-02-04"},{"lineNumber":132,"author":{"gitId":"darkvoid32"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":133,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":134,"author":{"gitId":"darkvoid32"},"content":"    public String printUnknownCommand() {","lastModifiedDate":"2024-02-04"},{"lineNumber":135,"author":{"gitId":"darkvoid32"},"content":"        return this.formatString(\"Unknown Command!\");","lastModifiedDate":"2024-02-04"},{"lineNumber":136,"author":{"gitId":"darkvoid32"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":137,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":138,"author":{"gitId":"darkvoid32"},"content":"    public String printDeleteTask(Task task, int taskSize) {","lastModifiedDate":"2024-02-04"},{"lineNumber":139,"author":{"gitId":"darkvoid32"},"content":"        return this.formatString(","lastModifiedDate":"2024-02-04"},{"lineNumber":140,"author":{"gitId":"darkvoid32"},"content":"            \"Noted. I\u0027ve removed this task:\\n\" + ","lastModifiedDate":"2024-02-04"},{"lineNumber":141,"author":{"gitId":"darkvoid32"},"content":"            task + \"\\n\" +","lastModifiedDate":"2024-02-04"},{"lineNumber":142,"author":{"gitId":"darkvoid32"},"content":"            \"Now you have \" + taskSize + \" tasks in your list.\"","lastModifiedDate":"2024-02-04"},{"lineNumber":143,"author":{"gitId":"darkvoid32"},"content":"        );","lastModifiedDate":"2024-02-04"},{"lineNumber":144,"author":{"gitId":"darkvoid32"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":145,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":146,"author":{"gitId":"darkvoid32"},"content":"    public String printUpdateTime(Task task) {","lastModifiedDate":"2024-02-10"},{"lineNumber":147,"author":{"gitId":"darkvoid32"},"content":"        return this.formatString(","lastModifiedDate":"2024-02-10"},{"lineNumber":148,"author":{"gitId":"darkvoid32"},"content":"            \"Nice! I\u0027ve updated this task:\\n\" +","lastModifiedDate":"2024-02-10"},{"lineNumber":149,"author":{"gitId":"darkvoid32"},"content":"            task.toString()","lastModifiedDate":"2024-02-10"},{"lineNumber":150,"author":{"gitId":"darkvoid32"},"content":"        );","lastModifiedDate":"2024-02-10"},{"lineNumber":151,"author":{"gitId":"darkvoid32"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":152,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":153,"author":{"gitId":"darkvoid32"},"content":"    public String printAddTask(Task task, int taskSize) {","lastModifiedDate":"2024-02-04"},{"lineNumber":154,"author":{"gitId":"darkvoid32"},"content":"        return this.formatString(","lastModifiedDate":"2024-02-04"},{"lineNumber":155,"author":{"gitId":"darkvoid32"},"content":"            \"Got it. I\u0027ve added this task to your list.\\n\" +","lastModifiedDate":"2024-02-04"},{"lineNumber":156,"author":{"gitId":"darkvoid32"},"content":"            task + \"\\n\" +","lastModifiedDate":"2024-02-04"},{"lineNumber":157,"author":{"gitId":"darkvoid32"},"content":"            \"Now you have \" + taskSize + \" tasks in your list.\"","lastModifiedDate":"2024-02-04"},{"lineNumber":158,"author":{"gitId":"darkvoid32"},"content":"        );","lastModifiedDate":"2024-02-04"},{"lineNumber":159,"author":{"gitId":"darkvoid32"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":160,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":161,"author":{"gitId":"darkvoid32"},"content":"    public String printError(Exception e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":162,"author":{"gitId":"darkvoid32"},"content":"        return this.formatString(e.getMessage());","lastModifiedDate":"2024-02-04"},{"lineNumber":163,"author":{"gitId":"darkvoid32"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":164,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":165,"author":{"gitId":"darkvoid32"},"content":"    public String markTask(List\u003cTask\u003e userTaskList, int taskInt) {","lastModifiedDate":"2024-02-04"},{"lineNumber":166,"author":{"gitId":"darkvoid32"},"content":"        return this.formatString(","lastModifiedDate":"2024-02-04"},{"lineNumber":167,"author":{"gitId":"darkvoid32"},"content":"            \"Nice! I\u0027ve marked this task as done:\\n\" +","lastModifiedDate":"2024-02-04"},{"lineNumber":168,"author":{"gitId":"darkvoid32"},"content":"            userTaskList.get(taskInt).toString() + \"\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":169,"author":{"gitId":"darkvoid32"},"content":"        );","lastModifiedDate":"2024-02-04"},{"lineNumber":170,"author":{"gitId":"darkvoid32"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":171,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":172,"author":{"gitId":"darkvoid32"},"content":"    public String printList(List\u003cTask\u003e taskList) {","lastModifiedDate":"2024-02-04"},{"lineNumber":173,"author":{"gitId":"darkvoid32"},"content":"        String taskListStr \u003d IntStream.range(0, taskList.size())","lastModifiedDate":"2024-02-10"},{"lineNumber":174,"author":{"gitId":"darkvoid32"},"content":"                                      .mapToObj(i -\u003e (i + 1) + \": \" + taskList.get(i))","lastModifiedDate":"2024-02-10"},{"lineNumber":175,"author":{"gitId":"darkvoid32"},"content":"                                      .collect(Collectors.joining(\"\\n\"));","lastModifiedDate":"2024-02-10"},{"lineNumber":176,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":177,"author":{"gitId":"darkvoid32"},"content":"        return formatString(\"Here are the tasks in your list:\\n\" + taskListStr);","lastModifiedDate":"2024-02-10"},{"lineNumber":178,"author":{"gitId":"darkvoid32"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":179,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":180,"author":{"gitId":"darkvoid32"},"content":"    public String formatString(String... msg) {","lastModifiedDate":"2024-02-04"},{"lineNumber":181,"author":{"gitId":"darkvoid32"},"content":"        String outputText \u003d \"\";","lastModifiedDate":"2024-02-04"},{"lineNumber":182,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":183,"author":{"gitId":"darkvoid32"},"content":"        for (String s: msg) {","lastModifiedDate":"2024-02-04"},{"lineNumber":184,"author":{"gitId":"darkvoid32"},"content":"            outputText +\u003d s + \"\\n\";","lastModifiedDate":"2024-02-04"},{"lineNumber":185,"author":{"gitId":"darkvoid32"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":186,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":187,"author":{"gitId":"darkvoid32"},"content":"        return HORIZONTAL_LINE + \"\\n\" + outputText + \"\\n\" + HORIZONTAL_LINE;","lastModifiedDate":"2024-02-04"},{"lineNumber":188,"author":{"gitId":"darkvoid32"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":189,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":190,"author":{"gitId":"darkvoid32"},"content":"    public void printIntro() {","lastModifiedDate":"2024-01-30"},{"lineNumber":191,"author":{"gitId":"darkvoid32"},"content":"        this.printDukeText(\"Hello from Kewgy!\\nWhat can I do for you?\\nType \\\"bye\\\" to exit!\");","lastModifiedDate":"2024-02-04"},{"lineNumber":192,"author":{"gitId":"darkvoid32"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":193,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":194,"author":{"gitId":"darkvoid32"},"content":"    public void printDukeText(String msg) {","lastModifiedDate":"2024-02-04"},{"lineNumber":195,"author":{"gitId":"darkvoid32"},"content":"        Label dukeText \u003d new Label(this.formatString(msg)); ","lastModifiedDate":"2024-02-04"},{"lineNumber":196,"author":{"gitId":"darkvoid32"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-04"},{"lineNumber":197,"author":{"gitId":"darkvoid32"},"content":"            DialogBox.getDukeDialog(dukeText, new ImageView(dukeImg))","lastModifiedDate":"2024-02-10"},{"lineNumber":198,"author":{"gitId":"darkvoid32"},"content":"        );","lastModifiedDate":"2024-02-04"},{"lineNumber":199,"author":{"gitId":"darkvoid32"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":200,"author":{"gitId":"darkvoid32"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"darkvoid32":200}},{"path":"src/test/java/Tasks/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darkvoid32"},"content":"package Tasks;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"darkvoid32"},"content":"import Exceptions.DukeException;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"darkvoid32"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"darkvoid32"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"darkvoid32"},"content":"class DeadlineTest {","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"darkvoid32"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"darkvoid32"},"content":"    void testDeadlineCreationWithFormattedDate() throws DukeException {","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"darkvoid32"},"content":"        Deadline deadline \u003d new Deadline(\"Buy groceries /by 2024-02-15\");","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"darkvoid32"},"content":"        assertEquals(\"[D][ ] Buy groceries (by: Feb 15 2024)\", deadline.toString());","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"darkvoid32"},"content":"        assertFalse(deadline.isDone);","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"darkvoid32"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"darkvoid32"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"darkvoid32"},"content":"    void testDeadlineCreationWithUnformattedDate() throws DukeException {","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"darkvoid32"},"content":"        Deadline deadline \u003d new Deadline(\"Buy groceries /by abc\");","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"darkvoid32"},"content":"        assertEquals(\"[D][ ] Buy groceries (by: abc)\", deadline.toString());","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"darkvoid32"},"content":"        assertFalse(deadline.isDone);","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"darkvoid32"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"darkvoid32"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"darkvoid32"},"content":"    void testEmptyDescription() {","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"darkvoid32"},"content":"        assertThrows(DukeException.class, () -\u003e new Deadline(\"\"));","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"darkvoid32"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"darkvoid32"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"darkvoid32"},"content":"    void testMissingDateInDescription() {","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"darkvoid32"},"content":"        assertThrows(DukeException.class, () -\u003e new Deadline(\"Incomplete task description\"));","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"darkvoid32"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"darkvoid32"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"darkvoid32"},"content":"    void testInvalidDateFormat() {","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"darkvoid32"},"content":"        assertThrows(DukeException.class, () -\u003e new Deadline(\"Invalid date format /by\"));","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"darkvoid32"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"darkvoid32"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"darkvoid32"},"content":"    void testMarkAsDone() throws DukeException {","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"darkvoid32"},"content":"        Deadline deadline \u003d new Deadline(\"Complete assignment /by 2024-03-01\");","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"darkvoid32"},"content":"        deadline.setDone(true);","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"darkvoid32"},"content":"        assertEquals(\"[D][X] Complete assignment (by: Mar 1 2024)\", deadline.toString());","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"darkvoid32"},"content":"        assertTrue(deadline.isDone);","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"darkvoid32"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"darkvoid32"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"darkvoid32":45}},{"path":"src/test/java/Tasks/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darkvoid32"},"content":"package Tasks;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"darkvoid32"},"content":"import Exceptions.DukeException;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"darkvoid32"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"darkvoid32"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"darkvoid32"},"content":"class EventTest {","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"darkvoid32"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"darkvoid32"},"content":"    void testEventCreationWithFormattedDates() throws DukeException {","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"darkvoid32"},"content":"        Event event \u003d new Event(\"Conference /from 2024-02-20 /to 2024-02-22\");","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"darkvoid32"},"content":"        assertEquals(\"[E][ ] Conference (from: Feb 20 2024 to: Feb 22 2024)\", event.toString());","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"darkvoid32"},"content":"        assertFalse(event.isDone);","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"darkvoid32"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"darkvoid32"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"darkvoid32"},"content":"    void testEventCreationWithUnformattedDates() throws DukeException {","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"darkvoid32"},"content":"        Event event \u003d new Event(\"Party /from some time /to another time\");","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"darkvoid32"},"content":"        assertEquals(\"[E][ ] Party (from: some time to: another time)\", event.toString());","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"darkvoid32"},"content":"        assertFalse(event.isDone);","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"darkvoid32"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"darkvoid32"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"darkvoid32"},"content":"    void testEmptyDescription() {","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"darkvoid32"},"content":"        assertThrows(DukeException.class, () -\u003e new Event(\"\"));","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"darkvoid32"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"darkvoid32"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"darkvoid32"},"content":"    void testMissingDatesInDescription() {","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"darkvoid32"},"content":"        assertThrows(DukeException.class, () -\u003e new Event(\"Incomplete event description\"));","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"darkvoid32"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"darkvoid32"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"darkvoid32"},"content":"    void testInvalidDateFormats() {","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"darkvoid32"},"content":"        assertThrows(DukeException.class, () -\u003e new Event(\"Invalid date format /from /to invalidDate\"));","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"darkvoid32"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"darkvoid32"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"darkvoid32"},"content":"    void testMarkAsDone() throws DukeException {","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"darkvoid32"},"content":"        Event event \u003d new Event(\"Birthday celebration /from 2024-03-01 /to 2024-03-03\");","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"darkvoid32"},"content":"        event.setDone(true);","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"darkvoid32"},"content":"        assertEquals(\"[E][X] Birthday celebration (from: Mar 1 2024 to: Mar 3 2024)\", event.toString());","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"darkvoid32"},"content":"        assertTrue(event.isDone);","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"darkvoid32"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"darkvoid32"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"darkvoid32":45}},{"path":"src/test/java/Tasks/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darkvoid32"},"content":"package Tasks;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"darkvoid32"},"content":"import Exceptions.DukeException;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"darkvoid32"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"darkvoid32"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"darkvoid32"},"content":"class ToDoTest {","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"darkvoid32"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"darkvoid32"},"content":"    void testToDoCreationPass() throws DukeException {","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"darkvoid32"},"content":"        ToDo todo \u003d new ToDo(\"Buy groceries\");","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"darkvoid32"},"content":"        assertEquals(\"[T][ ] Buy groceries\", todo.toString());","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"darkvoid32"},"content":"        assertFalse(todo.isDone);","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"darkvoid32"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"darkvoid32"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"darkvoid32"},"content":"    void testToDoCreationFail() throws DukeException {","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"darkvoid32"},"content":"        assertThrows(DukeException.class, () -\u003e new ToDo(\"\"));","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"darkvoid32"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"darkvoid32"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"darkvoid32"},"content":"    void testMarkAsDone() throws DukeException {","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"darkvoid32"},"content":"        ToDo todo \u003d new ToDo(\"Buy groceries\");","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"darkvoid32"},"content":"        todo.setDone(true);","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"darkvoid32"},"content":"        assertEquals(\"[T][X] Buy groceries\", todo.toString());","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"darkvoid32"},"content":"        assertTrue(todo.isDone);","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"darkvoid32"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"darkvoid32"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"darkvoid32"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"darkvoid32"},"content":"    void testMarkAsUnDone() throws DukeException {","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"darkvoid32"},"content":"        ToDo todo \u003d new ToDo(\"Buy groceries\");","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"darkvoid32"},"content":"        todo.setDone(true);","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"darkvoid32"},"content":"        todo.setDone(false);","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"darkvoid32"},"content":"        assertEquals(\"[T][ ] Buy groceries\", todo.toString());","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"darkvoid32"},"content":"        assertFalse(todo.isDone);","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"darkvoid32"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"darkvoid32"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"darkvoid32":37}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"darkvoid32"},"content":"1234","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"darkvoid32"},"content":"todo borrow book","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"darkvoid32"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"darkvoid32"},"content":"mark 2","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"darkvoid32"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"darkvoid32"},"content":"bye","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"darkvoid32":6}}]
