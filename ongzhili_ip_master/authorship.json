[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"# Lamball Chatbot üêê ","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"\u003e Not to be confused with _Wooloo_, nope, not similar at all!","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":"Lamball is a helpful pal that you never knew you needed. ","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":"- [x] Helps you manage your tasks and deadlines","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":"- [ ] Reminds you about them (coming soon!)","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"- [x] Guides you through the commands!","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"All you need to do is:","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":"1. Find the latest release [here](https://github.com/ongzhili/ip/releases)","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":"2. Double click on the file.","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":"3. Add your tasks.","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":"And it is ","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"ongzhili"},"content":"- **FREE!**","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"ongzhili"},"content":"- runs in 1 `main` command!","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"ongzhili"},"content":"```java","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"ongzhili"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"ongzhili"},"content":"        new Lamball().run();","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ongzhili":19,"-":5}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"ongzhili"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"ongzhili"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"ongzhili"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"ongzhili"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"ongzhili"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"ongzhili"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"ongzhili"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"ongzhili"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"ongzhili"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"ongzhili"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"ongzhili"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"ongzhili"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"ongzhili"},"content":"    mainClass.set(\"lamball.Launcher\")","lastModifiedDate":"2024-02-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"ongzhili"},"content":"//    archiveFileName \u003d \u0027lamball.jar\u0027","lastModifiedDate":"2024-02-14"},{"lineNumber":52,"author":{"gitId":"ongzhili"},"content":"    archiveBaseName \u003d \"lamball\"","lastModifiedDate":"2024-02-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2024-02-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2024-02-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"ongzhili"},"content":"checkstyle {","lastModifiedDate":"2024-02-05"},{"lineNumber":58,"author":{"gitId":"ongzhili"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"ongzhili"},"content":"//    configFile \u003d file(\"./config/checkstyle/checkstyle.xml\")","lastModifiedDate":"2024-02-14"},{"lineNumber":60,"author":{"gitId":"ongzhili"},"content":"//    configFile file(\"${project.rootDir}/config/checkstyle.xml\")","lastModifiedDate":"2024-02-14"},{"lineNumber":61,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ongzhili":25,"-":40}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"# Lamball User Guide üêê","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"![Ui](/docs/Ui.png)","lastModifiedDate":"2024-02-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":"Lamball is a helpful pal that you never knew you needed. ","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":"- [x] Helps you manage your tasks and deadlines","lastModifiedDate":"2024-02-21"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"- [x] Guides you through the commands!","lastModifiedDate":"2024-02-21"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"- [x] Helps you take note of anything with memos!","lastModifiedDate":"2024-02-21"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"- [ ] Reminds you about them (coming soon!)","lastModifiedDate":"2024-02-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":"## Features","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":"- Words in UPPER_CASE are parameters to be supplied by the user.\u003cbr\u003ee.g in `todo DESCRIPTION`, `DESCRIPTION` is the parameter(s) in question, which can be used as `todo Task 1`","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":"## ToDo List Features","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":"### Adding a ToDo to list: `todo`","lastModifiedDate":"2024-02-21"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":"Adds a todo to the list.","lastModifiedDate":"2024-02-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"ongzhili"},"content":"Format: `todo DESCRIPTION`","lastModifiedDate":"2024-02-21"},{"lineNumber":20,"author":{"gitId":"ongzhili"},"content":"- ToDos with the same description as other tasks on the list will not be added.","lastModifiedDate":"2024-02-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"ongzhili"},"content":"Examples:","lastModifiedDate":"2024-02-21"},{"lineNumber":23,"author":{"gitId":"ongzhili"},"content":"- `todo User Guide`","lastModifiedDate":"2024-02-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":27,"author":{"gitId":"ongzhili"},"content":"Added ToDo:","lastModifiedDate":"2024-02-21"},{"lineNumber":28,"author":{"gitId":"ongzhili"},"content":"    [T][ ] User Guide","lastModifiedDate":"2024-02-21"},{"lineNumber":29,"author":{"gitId":"ongzhili"},"content":"  Now you have 1 tasks in the list.","lastModifiedDate":"2024-02-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":32,"author":{"gitId":"ongzhili"},"content":"### Adding a Deadline to list: `deadline`","lastModifiedDate":"2024-02-21"},{"lineNumber":33,"author":{"gitId":"ongzhili"},"content":"Adds a deadline to the list.","lastModifiedDate":"2024-02-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":35,"author":{"gitId":"ongzhili"},"content":"Format: `deadline DESCRIPTION /by DATE`","lastModifiedDate":"2024-02-21"},{"lineNumber":36,"author":{"gitId":"ongzhili"},"content":"- `DATE` provided is in the format `YYYY-MM-DD`","lastModifiedDate":"2024-02-21"},{"lineNumber":37,"author":{"gitId":"ongzhili"},"content":"- `DATE` provided **cannot be before system date**","lastModifiedDate":"2024-02-21"},{"lineNumber":38,"author":{"gitId":"ongzhili"},"content":"- Deadlines with the same description as other tasks on the list will not be added.","lastModifiedDate":"2024-02-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":40,"author":{"gitId":"ongzhili"},"content":"Examples:","lastModifiedDate":"2024-02-21"},{"lineNumber":41,"author":{"gitId":"ongzhili"},"content":"- `deadline User Guide /by 2024-02-24`","lastModifiedDate":"2024-02-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07"},{"lineNumber":44,"author":{"gitId":"ongzhili"},"content":"```","lastModifiedDate":"2024-02-21"},{"lineNumber":45,"author":{"gitId":"ongzhili"},"content":"Added Deadline:","lastModifiedDate":"2024-02-21"},{"lineNumber":46,"author":{"gitId":"ongzhili"},"content":"    [D][ ] User Guide (by: Feb 24 2024)","lastModifiedDate":"2024-02-21"},{"lineNumber":47,"author":{"gitId":"ongzhili"},"content":"  Now you have 1 tasks in the list.","lastModifiedDate":"2024-02-21"},{"lineNumber":48,"author":{"gitId":"ongzhili"},"content":"```","lastModifiedDate":"2024-02-21"},{"lineNumber":49,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":50,"author":{"gitId":"ongzhili"},"content":"### Adding an Event to list: `event`","lastModifiedDate":"2024-02-21"},{"lineNumber":51,"author":{"gitId":"ongzhili"},"content":"Adds an event to the list.","lastModifiedDate":"2024-02-21"},{"lineNumber":52,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":53,"author":{"gitId":"ongzhili"},"content":"Format: `event DESCRIPTION /from DATE1 /to DATE2`","lastModifiedDate":"2024-02-21"},{"lineNumber":54,"author":{"gitId":"ongzhili"},"content":"- `DATE1`, `DATE2` provided is in the format `YYYY-MM-DD`","lastModifiedDate":"2024-02-21"},{"lineNumber":55,"author":{"gitId":"ongzhili"},"content":"- `DATE1`, `DATE2` provided **cannot be before system date**","lastModifiedDate":"2024-02-21"},{"lineNumber":56,"author":{"gitId":"ongzhili"},"content":"- `DATE1` **cannot be before** `DATE2` , but they can be both on the same day.","lastModifiedDate":"2024-02-21"},{"lineNumber":57,"author":{"gitId":"ongzhili"},"content":"- Events with the same description as other tasks on the list will not be added.","lastModifiedDate":"2024-02-21"},{"lineNumber":58,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":59,"author":{"gitId":"ongzhili"},"content":"Examples:","lastModifiedDate":"2024-02-21"},{"lineNumber":60,"author":{"gitId":"ongzhili"},"content":"- `Event User Guide /from 2024-02-24 /to 2024-02-25`","lastModifiedDate":"2024-02-21"},{"lineNumber":61,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":62,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":63,"author":{"gitId":"ongzhili"},"content":"```","lastModifiedDate":"2024-02-21"},{"lineNumber":64,"author":{"gitId":"ongzhili"},"content":"Added Deadline:","lastModifiedDate":"2024-02-21"},{"lineNumber":65,"author":{"gitId":"ongzhili"},"content":"    [E][ ] User Guide (from: Feb 24 2024 to: Feb 25 2024)","lastModifiedDate":"2024-02-21"},{"lineNumber":66,"author":{"gitId":"ongzhili"},"content":"  Now you have 1 tasks in the list.","lastModifiedDate":"2024-02-21"},{"lineNumber":67,"author":{"gitId":"ongzhili"},"content":"```","lastModifiedDate":"2024-02-21"},{"lineNumber":68,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":69,"author":{"gitId":"ongzhili"},"content":"### Marking a task as completed: `mark`","lastModifiedDate":"2024-02-21"},{"lineNumber":70,"author":{"gitId":"ongzhili"},"content":"Marks an existing task as completed.","lastModifiedDate":"2024-02-21"},{"lineNumber":71,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":72,"author":{"gitId":"ongzhili"},"content":"Format: `mark INDEX`","lastModifiedDate":"2024-02-21"},{"lineNumber":73,"author":{"gitId":"ongzhili"},"content":"- Marks the task at the specified `INDEX`. The index refers to the index number shown \u003cbr\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":74,"author":{"gitId":"ongzhili"},"content":"in the **full** task list.","lastModifiedDate":"2024-02-21"},{"lineNumber":75,"author":{"gitId":"ongzhili"},"content":"- The task list is one-indexed.","lastModifiedDate":"2024-02-21"},{"lineNumber":76,"author":{"gitId":"ongzhili"},"content":"- `INDEX` **must be a positive integer** (e.g 1,2,3)","lastModifiedDate":"2024-02-21"},{"lineNumber":77,"author":{"gitId":"ongzhili"},"content":"- `INDEX` **must lie within the size of the task list**","lastModifiedDate":"2024-02-21"},{"lineNumber":78,"author":{"gitId":"ongzhili"},"content":"- Marking a completed task will effectively do nothing.","lastModifiedDate":"2024-02-21"},{"lineNumber":79,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":80,"author":{"gitId":"ongzhili"},"content":"Examples:","lastModifiedDate":"2024-02-21"},{"lineNumber":81,"author":{"gitId":"ongzhili"},"content":"- `todo User Guide` followed by `mark 1` will result in the following output:","lastModifiedDate":"2024-02-21"},{"lineNumber":82,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":83,"author":{"gitId":"ongzhili"},"content":"```","lastModifiedDate":"2024-02-21"},{"lineNumber":84,"author":{"gitId":"ongzhili"},"content":"...","lastModifiedDate":"2024-02-21"},{"lineNumber":85,"author":{"gitId":"ongzhili"},"content":"I have maaarked the task as done:","lastModifiedDate":"2024-02-21"},{"lineNumber":86,"author":{"gitId":"ongzhili"},"content":"    [D][X] User Guide","lastModifiedDate":"2024-02-21"},{"lineNumber":87,"author":{"gitId":"ongzhili"},"content":"```","lastModifiedDate":"2024-02-21"},{"lineNumber":88,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":89,"author":{"gitId":"ongzhili"},"content":"### Marking a task as incomplete: `unmark`","lastModifiedDate":"2024-02-21"},{"lineNumber":90,"author":{"gitId":"ongzhili"},"content":"Marks an existing task as incomplete.","lastModifiedDate":"2024-02-21"},{"lineNumber":91,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":92,"author":{"gitId":"ongzhili"},"content":"Format: `unmark INDEX`","lastModifiedDate":"2024-02-21"},{"lineNumber":93,"author":{"gitId":"ongzhili"},"content":"- Unmarks the task at the specified `INDEX`. The index refers to the index number\u003cbr\u003e shown","lastModifiedDate":"2024-02-21"},{"lineNumber":94,"author":{"gitId":"ongzhili"},"content":"in the **full** task list.","lastModifiedDate":"2024-02-21"},{"lineNumber":95,"author":{"gitId":"ongzhili"},"content":"- The task list is one-indexed.","lastModifiedDate":"2024-02-21"},{"lineNumber":96,"author":{"gitId":"ongzhili"},"content":"- `INDEX` **must be a positive integer** (e.g 1,2,3)","lastModifiedDate":"2024-02-21"},{"lineNumber":97,"author":{"gitId":"ongzhili"},"content":"- `INDEX` **must lie within the size of the task list**","lastModifiedDate":"2024-02-21"},{"lineNumber":98,"author":{"gitId":"ongzhili"},"content":"- Unmarking an incomplete task will effectively do nothing.","lastModifiedDate":"2024-02-21"},{"lineNumber":99,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":100,"author":{"gitId":"ongzhili"},"content":"Examples:","lastModifiedDate":"2024-02-21"},{"lineNumber":101,"author":{"gitId":"ongzhili"},"content":"- `mark 1` followed by `unmark 1` will result in the following output:","lastModifiedDate":"2024-02-21"},{"lineNumber":102,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":103,"author":{"gitId":"ongzhili"},"content":"```","lastModifiedDate":"2024-02-21"},{"lineNumber":104,"author":{"gitId":"ongzhili"},"content":"...","lastModifiedDate":"2024-02-21"},{"lineNumber":105,"author":{"gitId":"ongzhili"},"content":"I have maaarked the task as undone:","lastModifiedDate":"2024-02-21"},{"lineNumber":106,"author":{"gitId":"ongzhili"},"content":"    [D][ ] User Guide","lastModifiedDate":"2024-02-21"},{"lineNumber":107,"author":{"gitId":"ongzhili"},"content":"```","lastModifiedDate":"2024-02-21"},{"lineNumber":108,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":109,"author":{"gitId":"ongzhili"},"content":"### Deleting a task: `delete`","lastModifiedDate":"2024-02-21"},{"lineNumber":110,"author":{"gitId":"ongzhili"},"content":"Deletes an existing task.","lastModifiedDate":"2024-02-21"},{"lineNumber":111,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":112,"author":{"gitId":"ongzhili"},"content":"Format: `delete INDEX`","lastModifiedDate":"2024-02-21"},{"lineNumber":113,"author":{"gitId":"ongzhili"},"content":"- Deletes the task at the specified `INDEX`. The index refers to the index number\u003cbr\u003e shown","lastModifiedDate":"2024-02-21"},{"lineNumber":114,"author":{"gitId":"ongzhili"},"content":"in the **full** task list.","lastModifiedDate":"2024-02-21"},{"lineNumber":115,"author":{"gitId":"ongzhili"},"content":"- The task list is one-indexed.","lastModifiedDate":"2024-02-21"},{"lineNumber":116,"author":{"gitId":"ongzhili"},"content":"- `INDEX` **must be a positive integer** (e.g 1,2,3).","lastModifiedDate":"2024-02-21"},{"lineNumber":117,"author":{"gitId":"ongzhili"},"content":"- `INDEX` **must lie within the size of the task list**","lastModifiedDate":"2024-02-21"},{"lineNumber":118,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":119,"author":{"gitId":"ongzhili"},"content":"Examples:","lastModifiedDate":"2024-02-21"},{"lineNumber":120,"author":{"gitId":"ongzhili"},"content":"- `todo User Guide` followed by `delete 1` will result in the following output:","lastModifiedDate":"2024-02-21"},{"lineNumber":121,"author":{"gitId":"ongzhili"},"content":"```","lastModifiedDate":"2024-02-21"},{"lineNumber":122,"author":{"gitId":"ongzhili"},"content":"...","lastModifiedDate":"2024-02-21"},{"lineNumber":123,"author":{"gitId":"ongzhili"},"content":"I have removed this taaask:","lastModifiedDate":"2024-02-21"},{"lineNumber":124,"author":{"gitId":"ongzhili"},"content":"    [D][ ] User Guide","lastModifiedDate":"2024-02-21"},{"lineNumber":125,"author":{"gitId":"ongzhili"},"content":"  Now you have 0 tasks in the list.","lastModifiedDate":"2024-02-21"},{"lineNumber":126,"author":{"gitId":"ongzhili"},"content":"```","lastModifiedDate":"2024-02-21"},{"lineNumber":127,"author":{"gitId":"ongzhili"},"content":"### Listing all tasks: `list`","lastModifiedDate":"2024-02-21"},{"lineNumber":128,"author":{"gitId":"ongzhili"},"content":"Shows a list of all tasks.","lastModifiedDate":"2024-02-21"},{"lineNumber":129,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":130,"author":{"gitId":"ongzhili"},"content":"Format: `list`","lastModifiedDate":"2024-02-21"},{"lineNumber":131,"author":{"gitId":"ongzhili"},"content":"- Should not be followed by anything (even whitespaces!)","lastModifiedDate":"2024-02-21"},{"lineNumber":132,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":133,"author":{"gitId":"ongzhili"},"content":"Examples:","lastModifiedDate":"2024-02-21"},{"lineNumber":134,"author":{"gitId":"ongzhili"},"content":"- `list` after `todo User Guide` will result in the following:","lastModifiedDate":"2024-02-21"},{"lineNumber":135,"author":{"gitId":"ongzhili"},"content":"```","lastModifiedDate":"2024-02-21"},{"lineNumber":136,"author":{"gitId":"ongzhili"},"content":"Here aaaaare the taaaasks in your list:","lastModifiedDate":"2024-02-21"},{"lineNumber":137,"author":{"gitId":"ongzhili"},"content":"    1. [T][ ] User Guide","lastModifiedDate":"2024-02-21"},{"lineNumber":138,"author":{"gitId":"ongzhili"},"content":"```","lastModifiedDate":"2024-02-21"},{"lineNumber":139,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":140,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":141,"author":{"gitId":"ongzhili"},"content":"### Locating tasks by descriptor: `find`","lastModifiedDate":"2024-02-21"},{"lineNumber":142,"author":{"gitId":"ongzhili"},"content":"Finds tasks whose descriptions contain the given keyword.","lastModifiedDate":"2024-02-21"},{"lineNumber":143,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":144,"author":{"gitId":"ongzhili"},"content":"Format: `find KEYWORD`","lastModifiedDate":"2024-02-21"},{"lineNumber":145,"author":{"gitId":"ongzhili"},"content":"- The search is case-sensitive. e.g `uSeR` will not match `User`.","lastModifiedDate":"2024-02-21"},{"lineNumber":146,"author":{"gitId":"ongzhili"},"content":"- Only the description is searched.","lastModifiedDate":"2024-02-21"},{"lineNumber":147,"author":{"gitId":"ongzhili"},"content":"- Non-full words can be matched e.g `find er Gui` will match `User Guide`.","lastModifiedDate":"2024-02-21"},{"lineNumber":148,"author":{"gitId":"ongzhili"},"content":"- Tasks with descriptions containing the keyword will be returned in list view.","lastModifiedDate":"2024-02-21"},{"lineNumber":149,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":150,"author":{"gitId":"ongzhili"},"content":"Examples:","lastModifiedDate":"2024-02-21"},{"lineNumber":151,"author":{"gitId":"ongzhili"},"content":"- `find user` returns nothing.","lastModifiedDate":"2024-02-21"},{"lineNumber":152,"author":{"gitId":"ongzhili"},"content":"- `find er Gui` returns the `User Guide` task in the following format:","lastModifiedDate":"2024-02-21"},{"lineNumber":153,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":154,"author":{"gitId":"ongzhili"},"content":"```","lastModifiedDate":"2024-02-21"},{"lineNumber":155,"author":{"gitId":"ongzhili"},"content":"Here aaaaare the taaaasks in your list:","lastModifiedDate":"2024-02-21"},{"lineNumber":156,"author":{"gitId":"ongzhili"},"content":"    1. [T][ ] User Guide","lastModifiedDate":"2024-02-21"},{"lineNumber":157,"author":{"gitId":"ongzhili"},"content":"```","lastModifiedDate":"2024-02-21"},{"lineNumber":158,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":159,"author":{"gitId":"ongzhili"},"content":"## Managing notes: Memo","lastModifiedDate":"2024-02-21"},{"lineNumber":160,"author":{"gitId":"ongzhili"},"content":"Memo features are accessible by adding `memo` at the start of the command.","lastModifiedDate":"2024-02-21"},{"lineNumber":161,"author":{"gitId":"ongzhili"},"content":"### Adding a memo: `memo add`","lastModifiedDate":"2024-02-21"},{"lineNumber":162,"author":{"gitId":"ongzhili"},"content":"Adds a memo.","lastModifiedDate":"2024-02-21"},{"lineNumber":163,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":164,"author":{"gitId":"ongzhili"},"content":"Format: `memo add MEMO`","lastModifiedDate":"2024-02-21"},{"lineNumber":165,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":166,"author":{"gitId":"ongzhili"},"content":"Examples:","lastModifiedDate":"2024-02-21"},{"lineNumber":167,"author":{"gitId":"ongzhili"},"content":"- `memo add Waist Size: 20`","lastModifiedDate":"2024-02-21"},{"lineNumber":168,"author":{"gitId":"ongzhili"},"content":"- `memo add Jerry wants spaghetti for dinner`","lastModifiedDate":"2024-02-21"},{"lineNumber":169,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":170,"author":{"gitId":"ongzhili"},"content":"### Viewing memos: `memo list`","lastModifiedDate":"2024-02-21"},{"lineNumber":171,"author":{"gitId":"ongzhili"},"content":"Returns a view of all memos added.","lastModifiedDate":"2024-02-21"},{"lineNumber":172,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":173,"author":{"gitId":"ongzhili"},"content":"Format: `memo list`","lastModifiedDate":"2024-02-21"},{"lineNumber":174,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":175,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":176,"author":{"gitId":"ongzhili"},"content":"### Deleting a memo: `memo del`","lastModifiedDate":"2024-02-21"},{"lineNumber":177,"author":{"gitId":"ongzhili"},"content":"Deletes an existing memo.","lastModifiedDate":"2024-02-21"},{"lineNumber":178,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":179,"author":{"gitId":"ongzhili"},"content":"Format: `memo del INDEX`","lastModifiedDate":"2024-02-21"},{"lineNumber":180,"author":{"gitId":"ongzhili"},"content":"- Deletes the memo at the specified `INDEX`. The index refers to the index number\u003cbr\u003e shown","lastModifiedDate":"2024-02-21"},{"lineNumber":181,"author":{"gitId":"ongzhili"},"content":"in the **full** memo list.","lastModifiedDate":"2024-02-21"},{"lineNumber":182,"author":{"gitId":"ongzhili"},"content":"- The memo list is one-indexed.","lastModifiedDate":"2024-02-21"},{"lineNumber":183,"author":{"gitId":"ongzhili"},"content":"- `INDEX` **must be a positive integer** (e.g 1,2,3).","lastModifiedDate":"2024-02-21"},{"lineNumber":184,"author":{"gitId":"ongzhili"},"content":"- `INDEX` **must lie within the size of the memo list**","lastModifiedDate":"2024-02-21"},{"lineNumber":185,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":186,"author":{"gitId":"ongzhili"},"content":"Examples:","lastModifiedDate":"2024-02-21"},{"lineNumber":187,"author":{"gitId":"ongzhili"},"content":"`memo del 1`","lastModifiedDate":"2024-02-21"},{"lineNumber":188,"author":{"gitId":"ongzhili"},"content":"### Removing all memos: `memo clear`","lastModifiedDate":"2024-02-21"},{"lineNumber":189,"author":{"gitId":"ongzhili"},"content":"Clears the memo list.","lastModifiedDate":"2024-02-21"},{"lineNumber":190,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":191,"author":{"gitId":"ongzhili"},"content":"Format: `memo clear`","lastModifiedDate":"2024-02-21"},{"lineNumber":192,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":193,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":194,"author":{"gitId":"ongzhili"},"content":"## Miscellaneous features","lastModifiedDate":"2024-02-21"},{"lineNumber":195,"author":{"gitId":"ongzhili"},"content":"### Exiting the program: `bye`","lastModifiedDate":"2024-02-21"},{"lineNumber":196,"author":{"gitId":"ongzhili"},"content":"Exits the program.","lastModifiedDate":"2024-02-21"},{"lineNumber":197,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":198,"author":{"gitId":"ongzhili"},"content":"Format: `bye`","lastModifiedDate":"2024-02-21"},{"lineNumber":199,"author":{"gitId":"ongzhili"},"content":"- Should not be followed by anything (even whitespaces!)","lastModifiedDate":"2024-02-21"},{"lineNumber":200,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":201,"author":{"gitId":"ongzhili"},"content":"### Saving the data","lastModifiedDate":"2024-02-21"},{"lineNumber":202,"author":{"gitId":"ongzhili"},"content":"Lamball saved task list and memo data are saved in the hard disk automatically after anyt command that changes the data. There is no need to save manually.","lastModifiedDate":"2024-02-21"},{"lineNumber":203,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":204,"author":{"gitId":"ongzhili"},"content":"### Editing the data file","lastModifiedDate":"2024-02-21"},{"lineNumber":205,"author":{"gitId":"ongzhili"},"content":"Lamball data are saved as `.txt` files at:","lastModifiedDate":"2024-02-21"},{"lineNumber":206,"author":{"gitId":"ongzhili"},"content":"- `[JAR File location]/src/main/java/data/list.txt` for Task list.","lastModifiedDate":"2024-02-21"},{"lineNumber":207,"author":{"gitId":"ongzhili"},"content":"- `[JAR File location]/src/main/java/data/memo.txt` for Memo list.","lastModifiedDate":"2024-02-21"},{"lineNumber":208,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":209,"author":{"gitId":"ongzhili"},"content":"‚ùó **Caution** If your changes to the data file makes the format invalid,\u003cbr\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":210,"author":{"gitId":"ongzhili"},"content":"Lamball will discard the invalid line at the next run.\u003cbr\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":211,"author":{"gitId":"ongzhili"},"content":"Hence, it is recommended to take a backup of the file before editing it.","lastModifiedDate":"2024-02-21"},{"lineNumber":212,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":213,"author":{"gitId":"ongzhili"},"content":"## FAQ","lastModifiedDate":"2024-02-21"},{"lineNumber":214,"author":{"gitId":"ongzhili"},"content":"**Q:** Can I transfer my data to another computer?","lastModifiedDate":"2024-02-21"},{"lineNumber":215,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":216,"author":{"gitId":"ongzhili"},"content":"**A:** Run the JAR file in another computer, and overwrite the empty data file\u003cbr\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":217,"author":{"gitId":"ongzhili"},"content":"it creates with the file that contains the data of your previous Lamball home folder.","lastModifiedDate":"2024-02-21"},{"lineNumber":218,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":219,"author":{"gitId":"ongzhili"},"content":"## Command Summary","lastModifiedDate":"2024-02-21"},{"lineNumber":220,"author":{"gitId":"ongzhili"},"content":"Action | Format","lastModifiedDate":"2024-02-21"},{"lineNumber":221,"author":{"gitId":"ongzhili"},"content":":----- | :-----","lastModifiedDate":"2024-02-21"},{"lineNumber":222,"author":{"gitId":"ongzhili"},"content":"Add todo | `todo DESCRIPTION`","lastModifiedDate":"2024-02-21"},{"lineNumber":223,"author":{"gitId":"ongzhili"},"content":"Add deadline | `deadline DESCRIPTION /by DATE`","lastModifiedDate":"2024-02-21"},{"lineNumber":224,"author":{"gitId":"ongzhili"},"content":"Add event | `event DESCRIPTION /from DATE1 /to DATE2`","lastModifiedDate":"2024-02-21"},{"lineNumber":225,"author":{"gitId":"ongzhili"},"content":"Mark | `mark INDEX`","lastModifiedDate":"2024-02-21"},{"lineNumber":226,"author":{"gitId":"ongzhili"},"content":"Unmark | `unmark INDEX`","lastModifiedDate":"2024-02-21"},{"lineNumber":227,"author":{"gitId":"ongzhili"},"content":"Delete task | `delete INDEX`","lastModifiedDate":"2024-02-21"},{"lineNumber":228,"author":{"gitId":"ongzhili"},"content":"Find | `find KEYWORD`","lastModifiedDate":"2024-02-21"},{"lineNumber":229,"author":{"gitId":"ongzhili"},"content":"List | `list`","lastModifiedDate":"2024-02-21"},{"lineNumber":230,"author":{"gitId":"ongzhili"},"content":"Add memo | `memo add DESCRIPTION`","lastModifiedDate":"2024-02-21"},{"lineNumber":231,"author":{"gitId":"ongzhili"},"content":"Delete memo | `memo del INDEX`","lastModifiedDate":"2024-02-21"},{"lineNumber":232,"author":{"gitId":"ongzhili"},"content":"Clear memos | `memo clear`","lastModifiedDate":"2024-02-21"},{"lineNumber":233,"author":{"gitId":"ongzhili"},"content":"List memos | `memo list`","lastModifiedDate":"2024-02-21"},{"lineNumber":234,"author":{"gitId":"ongzhili"},"content":"Exit | `bye`","lastModifiedDate":"2024-02-21"},{"lineNumber":235,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-21"}],"authorContributionMap":{"ongzhili":219,"-":16}},{"path":"src/main/java/lamball/Lamball.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"package lamball;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"import lamball.command.Command;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":"import lamball.exception.LamballParseException;","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":"import lamball.memo.Memo;","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":"import lamball.memo.MemoList;","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":"import lamball.ui.Ui;","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":" * Main chat bot class that is tasked with initializing and relaying user inputs to the various classes.","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":" *","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":" * @author ongzhili","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":"public class Lamball {","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":"    private MemoList memos;","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"ongzhili"},"content":"    private Ui ui;","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"ongzhili"},"content":"    private String lastDoneTask;","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":22,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"ongzhili"},"content":"     * Constructor for Lamball chatbot.","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"ongzhili"},"content":"    public Lamball() {","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"ongzhili"},"content":"        tasks \u003d new TaskList(this);","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"ongzhili"},"content":"        memos \u003d new MemoList(this);","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"ongzhili"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"ongzhili"},"content":"    String initialize() {","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"ongzhili"},"content":"        String guiText \u003d ui.displayAction(Storage.obtainSavedFile(this));","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"ongzhili"},"content":"        return ui.greetingMessage() + \"\\n\" + guiText;","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"ongzhili"},"content":"    public void addToMemList(Memo mem, boolean isInit) {","lastModifiedDate":"2024-02-14"},{"lineNumber":38,"author":{"gitId":"ongzhili"},"content":"        this.memos.addMemo(mem, isInit);","lastModifiedDate":"2024-02-14"},{"lineNumber":39,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":40,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":41,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"ongzhili"},"content":"     * Parses initial list of commands","lastModifiedDate":"2024-02-21"},{"lineNumber":43,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"ongzhili"},"content":"     * @param msg Command to parse.","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"ongzhili"},"content":"     * @throws LamballParseException if invalid command is provided.","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"ongzhili"},"content":"    public void initParse(String msg) throws LamballParseException {","lastModifiedDate":"2024-02-12"},{"lineNumber":48,"author":{"gitId":"ongzhili"},"content":"        Command parsed \u003d Parser.parse(msg, tasks, memos, true);","lastModifiedDate":"2024-02-14"},{"lineNumber":49,"author":{"gitId":"ongzhili"},"content":"        parsed.run();","lastModifiedDate":"2024-02-12"},{"lineNumber":50,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"ongzhili"},"content":"     * Generates response to user input.","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"ongzhili"},"content":"     * @return Responds appropriately to given input.","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":58,"author":{"gitId":"ongzhili"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-02-19"},{"lineNumber":59,"author":{"gitId":"ongzhili"},"content":"        String response \u003d \"\";","lastModifiedDate":"2024-02-05"},{"lineNumber":60,"author":{"gitId":"ongzhili"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"ongzhili"},"content":"            Command comd \u003d Parser.parse(input, tasks, memos, false);","lastModifiedDate":"2024-02-14"},{"lineNumber":62,"author":{"gitId":"ongzhili"},"content":"            boolean isActive \u003d comd.run();","lastModifiedDate":"2024-02-12"},{"lineNumber":63,"author":{"gitId":"ongzhili"},"content":"            if (!isActive) {","lastModifiedDate":"2024-02-05"},{"lineNumber":64,"author":{"gitId":"ongzhili"},"content":"                response \u003d ui.goodbyeMessage();","lastModifiedDate":"2024-02-05"},{"lineNumber":65,"author":{"gitId":"ongzhili"},"content":"            } else {","lastModifiedDate":"2024-02-05"},{"lineNumber":66,"author":{"gitId":"ongzhili"},"content":"                response \u003d ui.displayAction(this.lastDoneTask);","lastModifiedDate":"2024-02-14"},{"lineNumber":67,"author":{"gitId":"ongzhili"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":68,"author":{"gitId":"ongzhili"},"content":"        } catch (LamballParseException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":69,"author":{"gitId":"ongzhili"},"content":"            response \u003d ui.displayError(e);","lastModifiedDate":"2024-02-05"},{"lineNumber":70,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":71,"author":{"gitId":"ongzhili"},"content":"        assert response !\u003d \"\" : \"response should not be empty\";","lastModifiedDate":"2024-02-13"},{"lineNumber":72,"author":{"gitId":"ongzhili"},"content":"        return response;","lastModifiedDate":"2024-02-05"},{"lineNumber":73,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":74,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":75,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":76,"author":{"gitId":"ongzhili"},"content":"     * Updates last done task (either in memo or tasklist)","lastModifiedDate":"2024-02-14"},{"lineNumber":77,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":78,"author":{"gitId":"ongzhili"},"content":"     * @param task Formatted string of last done task.","lastModifiedDate":"2024-02-14"},{"lineNumber":79,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":80,"author":{"gitId":"ongzhili"},"content":"    public void updateLastDoneTask(String task) {","lastModifiedDate":"2024-02-14"},{"lineNumber":81,"author":{"gitId":"ongzhili"},"content":"        this.lastDoneTask \u003d task;","lastModifiedDate":"2024-02-14"},{"lineNumber":82,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":83,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-01-29"},{"lineNumber":84,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":85,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"ongzhili":85}},{"path":"src/main/java/lamball/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"package lamball;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"public class Launcher {","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"ongzhili":12}},{"path":"src/main/java/lamball/MainApp.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"package lamball;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"import lamball.ui.CommandTextField;","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":"import lamball.ui.DialogBox;","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":"import lamball.ui.ScrollableList;","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":" * MainApp to launch GUI.","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"ongzhili"},"content":"public class MainApp extends Application {","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"ongzhili"},"content":"    private Image lamballImg \u003d new Image(this.getClass().getResourceAsStream(\"/images/Lamball.png\"));","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"ongzhili"},"content":"    private ScrollableList scrollList;","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"ongzhili"},"content":"    private Scene scene;","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"ongzhili"},"content":"    private Lamball lamb;","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"ongzhili"},"content":"    private CommandTextField sender;","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"ongzhili"},"content":"    @Override","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"ongzhili"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"ongzhili"},"content":"        //Step 1. Setting up required components","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"ongzhili"},"content":"        lamb \u003d new Lamball();","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"ongzhili"},"content":"        String initialDisplayText \u003d lamb.initialize();","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"ongzhili"},"content":"        scrollList \u003d new ScrollableList();","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"ongzhili"},"content":"        sender \u003d new CommandTextField(scrollList, lamb);","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"ongzhili"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"ongzhili"},"content":"        mainLayout.getChildren().addAll(scrollList.getPane(), sender);","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"ongzhili"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"ongzhili"},"content":"        stage.setScene(scene);","lastModifiedDate":"2024-02-19"},{"lineNumber":41,"author":{"gitId":"ongzhili"},"content":"        stage.show();","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":43,"author":{"gitId":"ongzhili"},"content":"        //Step 2. Formatting the window to look as expected","lastModifiedDate":"2024-02-19"},{"lineNumber":44,"author":{"gitId":"ongzhili"},"content":"        stage.setTitle(\"Lamball\");","lastModifiedDate":"2024-02-19"},{"lineNumber":45,"author":{"gitId":"ongzhili"},"content":"        stage.setResizable(false);","lastModifiedDate":"2024-02-21"},{"lineNumber":46,"author":{"gitId":"ongzhili"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"ongzhili"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":49,"author":{"gitId":"ongzhili"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2024-02-21"},{"lineNumber":50,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":51,"author":{"gitId":"ongzhili"},"content":"        AnchorPane.setTopAnchor(scrollList, 1.0);","lastModifiedDate":"2024-02-19"},{"lineNumber":52,"author":{"gitId":"ongzhili"},"content":"        AnchorPane.setBottomAnchor(sender, 1.0);","lastModifiedDate":"2024-02-19"},{"lineNumber":53,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":54,"author":{"gitId":"ongzhili"},"content":"        scrollList.addToList(","lastModifiedDate":"2024-02-19"},{"lineNumber":55,"author":{"gitId":"ongzhili"},"content":"                DialogBox.getLamballDialog(","lastModifiedDate":"2024-02-19"},{"lineNumber":56,"author":{"gitId":"ongzhili"},"content":"                        new Text(initialDisplayText),","lastModifiedDate":"2024-02-19"},{"lineNumber":57,"author":{"gitId":"ongzhili"},"content":"                        new ImageView(lamballImg), 400)","lastModifiedDate":"2024-02-19"},{"lineNumber":58,"author":{"gitId":"ongzhili"},"content":"        );","lastModifiedDate":"2024-02-19"},{"lineNumber":59,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":60,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":61,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":62,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"ongzhili":62}},{"path":"src/main/java/lamball/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"package lamball;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"import lamball.command.ByeCommand;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":"import lamball.command.Command;","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":"import lamball.command.DeadlineCommand;","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":"import lamball.command.DeleteCommand;","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":"import lamball.command.EventCommand;","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"import lamball.command.FindCommand;","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"import lamball.command.MarkCommand;","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"import lamball.command.MemoAddCommand;","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":"import lamball.command.MemoClearCommand;","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":"import lamball.command.MemoDelCommand;","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":"import lamball.command.PrintListCommand;","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":"import lamball.command.PrintMemosCommand;","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":"import lamball.command.ToDoCommand;","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":"import lamball.command.UnMarkCommand;","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":"import lamball.exception.LamballParseException;","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"ongzhili"},"content":"import lamball.memo.Memo;","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"ongzhili"},"content":"import lamball.memo.MemoList;","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"ongzhili"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"ongzhili"},"content":" *  Contains methods related to parsing user\u0027s inputs.","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"ongzhili"},"content":" *","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"ongzhili"},"content":" * @author ongzhili","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"ongzhili"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"ongzhili"},"content":"public class Parser {","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"ongzhili"},"content":"    private static final int TASK_MODIFYING_ARGUMENT_MINIMUM \u003d 2;","lastModifiedDate":"2024-02-13"},{"lineNumber":28,"author":{"gitId":"ongzhili"},"content":"    private static final int TASK_COMMAND_ARGUMENT_MINIMUM \u003d 2;","lastModifiedDate":"2024-02-13"},{"lineNumber":29,"author":{"gitId":"ongzhili"},"content":"    private static final int EVENT_ARGUMENT_COUNT \u003d 3;","lastModifiedDate":"2024-02-13"},{"lineNumber":30,"author":{"gitId":"ongzhili"},"content":"    private static final int DEADLINE_ARGUMENT_COUNT \u003d 2;","lastModifiedDate":"2024-02-13"},{"lineNumber":31,"author":{"gitId":"ongzhili"},"content":"    private static final String DEADLINE_BY \u003d \"by \";","lastModifiedDate":"2024-02-13"},{"lineNumber":32,"author":{"gitId":"ongzhili"},"content":"    private static final String EVENT_FROM \u003d \"from \";","lastModifiedDate":"2024-02-13"},{"lineNumber":33,"author":{"gitId":"ongzhili"},"content":"    private static final String EVENT_TO \u003d \"to \";","lastModifiedDate":"2024-02-13"},{"lineNumber":34,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"ongzhili"},"content":"     * Parses command into String array in the form command type, arguments.","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"ongzhili"},"content":"     * @param msg Original input command.","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"ongzhili"},"content":"     * @param tasks Task list (used when parsing task commands)","lastModifiedDate":"2024-02-14"},{"lineNumber":40,"author":{"gitId":"ongzhili"},"content":"     * @param memos Memo list (used when parsing memo commands)","lastModifiedDate":"2024-02-14"},{"lineNumber":41,"author":{"gitId":"ongzhili"},"content":"     * @boolean isInit Whether this is ran during initialization","lastModifiedDate":"2024-02-14"},{"lineNumber":42,"author":{"gitId":"ongzhili"},"content":"     * @return String array of length 2, containing command type and arguments respectively.","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"ongzhili"},"content":"     * @throws LamballParseException if invalid arguments are parsed.","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"ongzhili"},"content":"    public static Command parse(String msg, TaskList tasks, MemoList memos, boolean isInit)","lastModifiedDate":"2024-02-14"},{"lineNumber":46,"author":{"gitId":"ongzhili"},"content":"            throws LamballParseException {","lastModifiedDate":"2024-02-14"},{"lineNumber":47,"author":{"gitId":"ongzhili"},"content":"        String[] parts \u003d msg.split(\" \", 2);","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"ongzhili"},"content":"        switch (parts[0]) {","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"ongzhili"},"content":"        case \"memo\": {","lastModifiedDate":"2024-02-14"},{"lineNumber":50,"author":{"gitId":"ongzhili"},"content":"            Command memComd \u003d memoParse(parts, memos);","lastModifiedDate":"2024-02-14"},{"lineNumber":51,"author":{"gitId":"ongzhili"},"content":"            return memComd;","lastModifiedDate":"2024-02-14"},{"lineNumber":52,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":53,"author":{"gitId":"ongzhili"},"content":"        case \"delete\": {","lastModifiedDate":"2024-02-12"},{"lineNumber":54,"author":{"gitId":"ongzhili"},"content":"            if (parts.length \u003c TASK_MODIFYING_ARGUMENT_MINIMUM || !parts[1].matches(\"-?\\\\d+\")) {","lastModifiedDate":"2024-02-13"},{"lineNumber":55,"author":{"gitId":"ongzhili"},"content":"                throw new LamballParseException(\"Invalid number, baa.\");","lastModifiedDate":"2024-02-12"},{"lineNumber":56,"author":{"gitId":"ongzhili"},"content":"            }","lastModifiedDate":"2024-02-12"},{"lineNumber":57,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":58,"author":{"gitId":"ongzhili"},"content":"            int idx \u003d Integer.valueOf(parts[1]) - 1;","lastModifiedDate":"2024-02-12"},{"lineNumber":59,"author":{"gitId":"ongzhili"},"content":"            if (idx \u003e\u003d tasks.size() || idx \u003c 0) {","lastModifiedDate":"2024-02-12"},{"lineNumber":60,"author":{"gitId":"ongzhili"},"content":"                throw new LamballParseException(\"Taaask index out of range, baa.\");","lastModifiedDate":"2024-02-12"},{"lineNumber":61,"author":{"gitId":"ongzhili"},"content":"            }","lastModifiedDate":"2024-02-12"},{"lineNumber":62,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":63,"author":{"gitId":"ongzhili"},"content":"            return new DeleteCommand(idx, tasks);","lastModifiedDate":"2024-02-12"},{"lineNumber":64,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":65,"author":{"gitId":"ongzhili"},"content":"        case \"mark\": {","lastModifiedDate":"2024-02-12"},{"lineNumber":66,"author":{"gitId":"ongzhili"},"content":"            if (parts.length \u003c TASK_MODIFYING_ARGUMENT_MINIMUM || !parts[1].matches(\"-?\\\\d+\")) {","lastModifiedDate":"2024-02-13"},{"lineNumber":67,"author":{"gitId":"ongzhili"},"content":"                throw new LamballParseException(\"Invalid number, baa.\");","lastModifiedDate":"2024-02-12"},{"lineNumber":68,"author":{"gitId":"ongzhili"},"content":"            }","lastModifiedDate":"2024-02-12"},{"lineNumber":69,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":70,"author":{"gitId":"ongzhili"},"content":"            int idx \u003d Integer.valueOf(parts[1]) - 1;","lastModifiedDate":"2024-02-12"},{"lineNumber":71,"author":{"gitId":"ongzhili"},"content":"            if (idx \u003e\u003d tasks.size() || idx \u003c 0) {","lastModifiedDate":"2024-02-12"},{"lineNumber":72,"author":{"gitId":"ongzhili"},"content":"                throw new LamballParseException(\"Taaask index out of range, baa.\");","lastModifiedDate":"2024-02-12"},{"lineNumber":73,"author":{"gitId":"ongzhili"},"content":"            }","lastModifiedDate":"2024-02-12"},{"lineNumber":74,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":75,"author":{"gitId":"ongzhili"},"content":"            return new MarkCommand(idx, tasks, isInit);","lastModifiedDate":"2024-02-12"},{"lineNumber":76,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":77,"author":{"gitId":"ongzhili"},"content":"        case \"unmark\": {","lastModifiedDate":"2024-01-29"},{"lineNumber":78,"author":{"gitId":"ongzhili"},"content":"            if (parts.length \u003c TASK_MODIFYING_ARGUMENT_MINIMUM || !parts[1].matches(\"-?\\\\d+\")) {","lastModifiedDate":"2024-02-13"},{"lineNumber":79,"author":{"gitId":"ongzhili"},"content":"                throw new LamballParseException(\"Invalid number, baa.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":80,"author":{"gitId":"ongzhili"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":81,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":82,"author":{"gitId":"ongzhili"},"content":"            int idx \u003d Integer.valueOf(parts[1]) - 1;","lastModifiedDate":"2024-02-12"},{"lineNumber":83,"author":{"gitId":"ongzhili"},"content":"            if (idx \u003e\u003d tasks.size() || idx \u003c 0) {","lastModifiedDate":"2024-02-12"},{"lineNumber":84,"author":{"gitId":"ongzhili"},"content":"                throw new LamballParseException(\"Taaask index out of range, baa.\");","lastModifiedDate":"2024-02-12"},{"lineNumber":85,"author":{"gitId":"ongzhili"},"content":"            }","lastModifiedDate":"2024-02-12"},{"lineNumber":86,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":87,"author":{"gitId":"ongzhili"},"content":"            return new UnMarkCommand(idx, tasks);","lastModifiedDate":"2024-02-12"},{"lineNumber":88,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":89,"author":{"gitId":"ongzhili"},"content":"        case \"bye\": {","lastModifiedDate":"2024-02-12"},{"lineNumber":90,"author":{"gitId":"ongzhili"},"content":"            if (parts.length \u003e 1) {","lastModifiedDate":"2024-02-12"},{"lineNumber":91,"author":{"gitId":"ongzhili"},"content":"                throw new LamballParseException(\"Do not type anything after \\\"\" + parts[0] + \"\\\"\");","lastModifiedDate":"2024-02-12"},{"lineNumber":92,"author":{"gitId":"ongzhili"},"content":"            }","lastModifiedDate":"2024-02-12"},{"lineNumber":93,"author":{"gitId":"ongzhili"},"content":"            return new ByeCommand();","lastModifiedDate":"2024-02-12"},{"lineNumber":94,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":95,"author":{"gitId":"ongzhili"},"content":"        case \"list\":","lastModifiedDate":"2024-01-29"},{"lineNumber":96,"author":{"gitId":"ongzhili"},"content":"            if (parts.length \u003e 1) {","lastModifiedDate":"2024-01-30"},{"lineNumber":97,"author":{"gitId":"ongzhili"},"content":"                throw new LamballParseException(\"Do not type anything after \\\"\" + parts[0] + \"\\\"\");","lastModifiedDate":"2024-01-31"},{"lineNumber":98,"author":{"gitId":"ongzhili"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":99,"author":{"gitId":"ongzhili"},"content":"            return new PrintListCommand(tasks);","lastModifiedDate":"2024-02-12"},{"lineNumber":100,"author":{"gitId":"ongzhili"},"content":"        case \"todo\":","lastModifiedDate":"2024-01-31"},{"lineNumber":101,"author":{"gitId":"ongzhili"},"content":"            if (parts.length \u003c TASK_COMMAND_ARGUMENT_MINIMUM || parts[1] \u003d\u003d null || parts[1].trim().isEmpty()) {","lastModifiedDate":"2024-02-13"},{"lineNumber":102,"author":{"gitId":"ongzhili"},"content":"                // Checks if empty string (nothing after command) or only whitespaces","lastModifiedDate":"2024-02-12"},{"lineNumber":103,"author":{"gitId":"ongzhili"},"content":"                throw new LamballParseException(\"Your \" + parts[0] + \" field is empty, baaaaka.\");","lastModifiedDate":"2024-02-12"},{"lineNumber":104,"author":{"gitId":"ongzhili"},"content":"            }","lastModifiedDate":"2024-02-12"},{"lineNumber":105,"author":{"gitId":"ongzhili"},"content":"            return new ToDoCommand(parts[1], tasks, isInit);","lastModifiedDate":"2024-02-12"},{"lineNumber":106,"author":{"gitId":"ongzhili"},"content":"        case \"deadline\": {","lastModifiedDate":"2024-02-12"},{"lineNumber":107,"author":{"gitId":"ongzhili"},"content":"            if (parts.length \u003c TASK_COMMAND_ARGUMENT_MINIMUM || parts[1] \u003d\u003d null || parts[1].trim().isEmpty()) {","lastModifiedDate":"2024-02-13"},{"lineNumber":108,"author":{"gitId":"ongzhili"},"content":"                // Checks if empty string (nothing after command) or only whitespaces","lastModifiedDate":"2024-02-12"},{"lineNumber":109,"author":{"gitId":"ongzhili"},"content":"                throw new LamballParseException(\"Your \" + parts[0] + \" field is empty, baaaaka.\");","lastModifiedDate":"2024-02-12"},{"lineNumber":110,"author":{"gitId":"ongzhili"},"content":"            }","lastModifiedDate":"2024-02-12"},{"lineNumber":111,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":112,"author":{"gitId":"ongzhili"},"content":"            String[] furtherSplit \u003d parts[1].split(\" /\", 2);","lastModifiedDate":"2024-02-12"},{"lineNumber":113,"author":{"gitId":"ongzhili"},"content":"            if (furtherSplit.length \u003c DEADLINE_ARGUMENT_COUNT || !furtherSplit[1].substring(0, 3).equals(DEADLINE_BY)) {","lastModifiedDate":"2024-02-13"},{"lineNumber":114,"author":{"gitId":"ongzhili"},"content":"                throw new LamballParseException(\"Deadline is in the wrong formaaaaaaat, baa. :(\\n    Correct fo\"","lastModifiedDate":"2024-02-12"},{"lineNumber":115,"author":{"gitId":"ongzhili"},"content":"                        + \"rmaaat is: deadline \u003cname\u003e /by \u003ctime\u003e, baa.\");","lastModifiedDate":"2024-02-12"},{"lineNumber":116,"author":{"gitId":"ongzhili"},"content":"            }","lastModifiedDate":"2024-02-12"},{"lineNumber":117,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":118,"author":{"gitId":"ongzhili"},"content":"            return new DeadlineCommand(furtherSplit, tasks, isInit);","lastModifiedDate":"2024-02-12"},{"lineNumber":119,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":120,"author":{"gitId":"ongzhili"},"content":"        case \"event\": {","lastModifiedDate":"2024-01-29"},{"lineNumber":121,"author":{"gitId":"ongzhili"},"content":"            if (parts.length \u003c TASK_COMMAND_ARGUMENT_MINIMUM || parts[1] \u003d\u003d null || parts[1].trim().isEmpty()) {","lastModifiedDate":"2024-02-13"},{"lineNumber":122,"author":{"gitId":"ongzhili"},"content":"                // Checks if empty string (nothing after command) or only whitespaces","lastModifiedDate":"2024-01-30"},{"lineNumber":123,"author":{"gitId":"ongzhili"},"content":"                throw new LamballParseException(\"Your \" + parts[0] + \" field is empty, baaaaka.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":124,"author":{"gitId":"ongzhili"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":125,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":126,"author":{"gitId":"ongzhili"},"content":"            String[] furtherSplit \u003d parts[1].split(\" /\", 3);","lastModifiedDate":"2024-02-12"},{"lineNumber":127,"author":{"gitId":"ongzhili"},"content":"            if (furtherSplit.length \u003c EVENT_ARGUMENT_COUNT || !furtherSplit[1].substring(0, 5).equals(EVENT_FROM)","lastModifiedDate":"2024-02-13"},{"lineNumber":128,"author":{"gitId":"ongzhili"},"content":"                    || !furtherSplit[2].substring(0, 3).equals(EVENT_TO)) {","lastModifiedDate":"2024-02-13"},{"lineNumber":129,"author":{"gitId":"ongzhili"},"content":"                throw new LamballParseException(\"Event is in the wrong formaaaaaaat, baa. :(\\n    Correct \"","lastModifiedDate":"2024-02-12"},{"lineNumber":130,"author":{"gitId":"ongzhili"},"content":"                        + \"formaaat is: event \u003cname\u003e /from \u003ctime\u003e /to \u003ctime\u003e, baa.\");","lastModifiedDate":"2024-02-12"},{"lineNumber":131,"author":{"gitId":"ongzhili"},"content":"            }","lastModifiedDate":"2024-02-12"},{"lineNumber":132,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":133,"author":{"gitId":"ongzhili"},"content":"            return new EventCommand(furtherSplit, tasks, isInit);","lastModifiedDate":"2024-02-12"},{"lineNumber":134,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":135,"author":{"gitId":"ongzhili"},"content":"        case \"find\": {","lastModifiedDate":"2024-01-31"},{"lineNumber":136,"author":{"gitId":"ongzhili"},"content":"            if (parts.length \u003c TASK_COMMAND_ARGUMENT_MINIMUM || parts[1] \u003d\u003d null) {","lastModifiedDate":"2024-02-13"},{"lineNumber":137,"author":{"gitId":"ongzhili"},"content":"                throw new LamballParseException(\"Invalid query\");","lastModifiedDate":"2024-01-31"},{"lineNumber":138,"author":{"gitId":"ongzhili"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":139,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":140,"author":{"gitId":"ongzhili"},"content":"            return new FindCommand(parts[1], tasks);","lastModifiedDate":"2024-02-12"},{"lineNumber":141,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":142,"author":{"gitId":"ongzhili"},"content":"        default:","lastModifiedDate":"2024-01-29"},{"lineNumber":143,"author":{"gitId":"ongzhili"},"content":"            throw new LamballParseException(\"Sorry, I don\u0027t understaaaaaand your commaaaaand, baa. :(\");","lastModifiedDate":"2024-01-29"},{"lineNumber":144,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":145,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":146,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":147,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":148,"author":{"gitId":"ongzhili"},"content":"     * Parses command for saved list.","lastModifiedDate":"2024-02-14"},{"lineNumber":149,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":150,"author":{"gitId":"ongzhili"},"content":"     * @param toParse String to be parsed.","lastModifiedDate":"2024-02-14"},{"lineNumber":151,"author":{"gitId":"ongzhili"},"content":"     * @return Split line of command for further processing.","lastModifiedDate":"2024-02-14"},{"lineNumber":152,"author":{"gitId":"ongzhili"},"content":"     * @throws LamballParseException","lastModifiedDate":"2024-02-14"},{"lineNumber":153,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":154,"author":{"gitId":"ongzhili"},"content":"    public static String[] parseSavedList(String toParse) throws LamballParseException {","lastModifiedDate":"2024-02-14"},{"lineNumber":155,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":156,"author":{"gitId":"ongzhili"},"content":"        String[] divided \u003d toParse.split(\" \\\\| \", 2);","lastModifiedDate":"2024-02-14"},{"lineNumber":157,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":158,"author":{"gitId":"ongzhili"},"content":"        // Means that it is not formatted correctly in the \u003c0 or 1\u003e | \u003ccommand\u003e format","lastModifiedDate":"2024-02-14"},{"lineNumber":159,"author":{"gitId":"ongzhili"},"content":"        if (divided.length !\u003d 2 || !(Integer.valueOf(divided[0]) \u003d\u003d 1 || Integer.valueOf(divided[0]) \u003d\u003d 0)) {","lastModifiedDate":"2024-02-14"},{"lineNumber":160,"author":{"gitId":"ongzhili"},"content":"            throw new LamballParseException(\"Corrupt format, ignoring...\");","lastModifiedDate":"2024-02-14"},{"lineNumber":161,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":162,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":163,"author":{"gitId":"ongzhili"},"content":"        return divided;","lastModifiedDate":"2024-02-14"},{"lineNumber":164,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":165,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":166,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":167,"author":{"gitId":"ongzhili"},"content":"     * Parses a given memo text. Quite barebones as of now - Abstracted for potential future","lastModifiedDate":"2024-02-14"},{"lineNumber":168,"author":{"gitId":"ongzhili"},"content":"     * implementation.","lastModifiedDate":"2024-02-14"},{"lineNumber":169,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":170,"author":{"gitId":"ongzhili"},"content":"     * @param memo Content of the memo (notes)","lastModifiedDate":"2024-02-14"},{"lineNumber":171,"author":{"gitId":"ongzhili"},"content":"     * @return Memo object","lastModifiedDate":"2024-02-14"},{"lineNumber":172,"author":{"gitId":"ongzhili"},"content":"     * @throws LamballParseException","lastModifiedDate":"2024-02-14"},{"lineNumber":173,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":174,"author":{"gitId":"ongzhili"},"content":"    public static Memo parseMemo(String memo) throws LamballParseException {","lastModifiedDate":"2024-02-14"},{"lineNumber":175,"author":{"gitId":"ongzhili"},"content":"        String trimmed \u003d memo.trim();","lastModifiedDate":"2024-02-14"},{"lineNumber":176,"author":{"gitId":"ongzhili"},"content":"        if (memo \u003d\u003d \"\") {","lastModifiedDate":"2024-02-14"},{"lineNumber":177,"author":{"gitId":"ongzhili"},"content":"            throw new LamballParseException(\"Empty memo\");","lastModifiedDate":"2024-02-14"},{"lineNumber":178,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":179,"author":{"gitId":"ongzhili"},"content":"        Memo temp \u003d new Memo(memo);","lastModifiedDate":"2024-02-14"},{"lineNumber":180,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":181,"author":{"gitId":"ongzhili"},"content":"        return temp;","lastModifiedDate":"2024-02-14"},{"lineNumber":182,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":183,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":184,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":185,"author":{"gitId":"ongzhili"},"content":"     * Parses memo related commands","lastModifiedDate":"2024-02-14"},{"lineNumber":186,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":187,"author":{"gitId":"ongzhili"},"content":"     * @param args Arguments for the command","lastModifiedDate":"2024-02-14"},{"lineNumber":188,"author":{"gitId":"ongzhili"},"content":"     * @param memos List to do memo operations on","lastModifiedDate":"2024-02-14"},{"lineNumber":189,"author":{"gitId":"ongzhili"},"content":"     * @return Command to run","lastModifiedDate":"2024-02-14"},{"lineNumber":190,"author":{"gitId":"ongzhili"},"content":"     * @throws LamballParseException","lastModifiedDate":"2024-02-14"},{"lineNumber":191,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":192,"author":{"gitId":"ongzhili"},"content":"    public static Command memoParse(String[] args, MemoList memos) throws LamballParseException {","lastModifiedDate":"2024-02-14"},{"lineNumber":193,"author":{"gitId":"ongzhili"},"content":"        assert args[0] \u003d\u003d \"memo\" : \"Only memo commands should reach here.\";","lastModifiedDate":"2024-02-14"},{"lineNumber":194,"author":{"gitId":"ongzhili"},"content":"        if (args.length \u003c 2) {","lastModifiedDate":"2024-02-14"},{"lineNumber":195,"author":{"gitId":"ongzhili"},"content":"            throw new LamballParseException(\"Invalid memo command, baa. Available commands are: memo add \u003cmemo\u003e,\"","lastModifiedDate":"2024-02-14"},{"lineNumber":196,"author":{"gitId":"ongzhili"},"content":"                    + \" memo del \u003cindex\u003e, memo list, memo clear\");","lastModifiedDate":"2024-02-14"},{"lineNumber":197,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":198,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":199,"author":{"gitId":"ongzhili"},"content":"        assert args.length \u003e\u003d 2 : \"There should be something after memo\";","lastModifiedDate":"2024-02-14"},{"lineNumber":200,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":201,"author":{"gitId":"ongzhili"},"content":"        String[] furtherSplit \u003d args[1].split(\" \", 2);","lastModifiedDate":"2024-02-14"},{"lineNumber":202,"author":{"gitId":"ongzhili"},"content":"        System.out.println(furtherSplit[0]);","lastModifiedDate":"2024-02-14"},{"lineNumber":203,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":204,"author":{"gitId":"ongzhili"},"content":"        switch(furtherSplit[0]) {","lastModifiedDate":"2024-02-14"},{"lineNumber":205,"author":{"gitId":"ongzhili"},"content":"        case \"add\": {","lastModifiedDate":"2024-02-14"},{"lineNumber":206,"author":{"gitId":"ongzhili"},"content":"            String trimmedAgain \u003d furtherSplit[1].trim();","lastModifiedDate":"2024-02-14"},{"lineNumber":207,"author":{"gitId":"ongzhili"},"content":"            if (trimmedAgain \u003d\u003d \"\") {","lastModifiedDate":"2024-02-14"},{"lineNumber":208,"author":{"gitId":"ongzhili"},"content":"                throw new LamballParseException(\"Empty memo!\");","lastModifiedDate":"2024-02-14"},{"lineNumber":209,"author":{"gitId":"ongzhili"},"content":"            }","lastModifiedDate":"2024-02-14"},{"lineNumber":210,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":211,"author":{"gitId":"ongzhili"},"content":"            assert trimmedAgain !\u003d \"\" : \"Empty string!\";","lastModifiedDate":"2024-02-14"},{"lineNumber":212,"author":{"gitId":"ongzhili"},"content":"            return new MemoAddCommand(trimmedAgain, memos);","lastModifiedDate":"2024-02-14"},{"lineNumber":213,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":214,"author":{"gitId":"ongzhili"},"content":"        case \"delete\": {","lastModifiedDate":"2024-02-14"},{"lineNumber":215,"author":{"gitId":"ongzhili"},"content":"            int idx \u003d Integer.valueOf(furtherSplit[1]);","lastModifiedDate":"2024-02-14"},{"lineNumber":216,"author":{"gitId":"ongzhili"},"content":"            if (idx \u003c\u003d 0 || idx \u003e memos.size()) {","lastModifiedDate":"2024-02-14"},{"lineNumber":217,"author":{"gitId":"ongzhili"},"content":"                throw new LamballParseException(\"Invalid index, baa.\");","lastModifiedDate":"2024-02-14"},{"lineNumber":218,"author":{"gitId":"ongzhili"},"content":"            }","lastModifiedDate":"2024-02-14"},{"lineNumber":219,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":220,"author":{"gitId":"ongzhili"},"content":"            assert idx \u003e 0 : \"Not valid index\";","lastModifiedDate":"2024-02-14"},{"lineNumber":221,"author":{"gitId":"ongzhili"},"content":"            assert idx \u003c\u003d memos.size() : \"Too high index\";","lastModifiedDate":"2024-02-14"},{"lineNumber":222,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":223,"author":{"gitId":"ongzhili"},"content":"            return new MemoDelCommand(idx, memos);","lastModifiedDate":"2024-02-14"},{"lineNumber":224,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":225,"author":{"gitId":"ongzhili"},"content":"        case \"list\": {","lastModifiedDate":"2024-02-14"},{"lineNumber":226,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":227,"author":{"gitId":"ongzhili"},"content":"            return new PrintMemosCommand(memos);","lastModifiedDate":"2024-02-14"},{"lineNumber":228,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":229,"author":{"gitId":"ongzhili"},"content":"        case \"clear\": {","lastModifiedDate":"2024-02-14"},{"lineNumber":230,"author":{"gitId":"ongzhili"},"content":"            return new MemoClearCommand(memos);","lastModifiedDate":"2024-02-14"},{"lineNumber":231,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":232,"author":{"gitId":"ongzhili"},"content":"        default:","lastModifiedDate":"2024-02-14"},{"lineNumber":233,"author":{"gitId":"ongzhili"},"content":"            throw new LamballParseException(\"Invalid memo command, baa. Available commands are: memo add \u003cmemo\u003e,\"","lastModifiedDate":"2024-02-14"},{"lineNumber":234,"author":{"gitId":"ongzhili"},"content":"            + \" memo del \u003cindex\u003e, memo list, memo clear\");","lastModifiedDate":"2024-02-14"},{"lineNumber":235,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":236,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":237,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"ongzhili":237}},{"path":"src/main/java/lamball/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"package lamball;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"import java.io.File;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"import java.util.List;","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":"import java.util.Objects;","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":"import lamball.exception.LamballParseException;","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":"import lamball.exception.StorageException;","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":"import lamball.memo.Memo;","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"ongzhili"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"ongzhili"},"content":" * Contains methods that pertain to file access and modification.","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"ongzhili"},"content":" *","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"ongzhili"},"content":" * @author ongzhili","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"ongzhili"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"ongzhili"},"content":"public class Storage {","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"ongzhili"},"content":"    protected static String filePath \u003d \"src/main/java/data\";","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"ongzhili"},"content":"    protected static String defaultFileName \u003d \"/list.txt\";","lastModifiedDate":"2024-02-13"},{"lineNumber":27,"author":{"gitId":"ongzhili"},"content":"    protected static String defaultMemoName \u003d \"/memo.txt\";","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"ongzhili"},"content":"    protected static String defaultTempFile \u003d \"/temp.txt\";","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":30,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"ongzhili"},"content":"     * Obtains and initializes list from saved text file locally.","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"ongzhili"},"content":"     * @param lamb Initialized Lamball chatbot instance.","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"ongzhili"},"content":"     * @return Text for the GUI to display.","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"ongzhili"},"content":"    public static String obtainSavedFile(Lamball lamb) {","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"ongzhili"},"content":"        String returnVal \u003d \"\";","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"ongzhili"},"content":"        File folder \u003d new File(filePath);","lastModifiedDate":"2024-02-12"},{"lineNumber":40,"author":{"gitId":"ongzhili"},"content":"        if (!folder.exists()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"ongzhili"},"content":"            System.out.println(\"Folder does not exist. Creating folder...\");","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"ongzhili"},"content":"            returnVal +\u003d \"Folder does not exist. Creating folder...\\n\";","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"ongzhili"},"content":"            folder.mkdirs();","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"ongzhili"},"content":"        File savedMemo \u003d new File(filePath + defaultMemoName);","lastModifiedDate":"2024-02-14"},{"lineNumber":46,"author":{"gitId":"ongzhili"},"content":"        File savedList \u003d new File(filePath + defaultFileName);","lastModifiedDate":"2024-02-13"},{"lineNumber":47,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":48,"author":{"gitId":"ongzhili"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"ongzhili"},"content":"            returnVal +\u003d createFile(savedList, \"Task List\");","lastModifiedDate":"2024-02-21"},{"lineNumber":50,"author":{"gitId":"ongzhili"},"content":"            returnVal +\u003d createFile(savedMemo, \"Memo List\");","lastModifiedDate":"2024-02-21"},{"lineNumber":51,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":52,"author":{"gitId":"ongzhili"},"content":"            initializeListFromText(savedList, lamb);","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"ongzhili"},"content":"            initializeMemo(savedMemo, lamb);","lastModifiedDate":"2024-02-14"},{"lineNumber":54,"author":{"gitId":"ongzhili"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"ongzhili"},"content":"            String errorMessage \u003d \"An error occurred while creating the file: \" + e.getMessage();","lastModifiedDate":"2024-02-13"},{"lineNumber":56,"author":{"gitId":"ongzhili"},"content":"            System.err.println(errorMessage);","lastModifiedDate":"2024-02-13"},{"lineNumber":57,"author":{"gitId":"ongzhili"},"content":"            returnVal +\u003d errorMessage;","lastModifiedDate":"2024-02-13"},{"lineNumber":58,"author":{"gitId":"ongzhili"},"content":"            return returnVal;","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":61,"author":{"gitId":"ongzhili"},"content":"        assert returnVal !\u003d \"\" : \"return value should not be empty\";","lastModifiedDate":"2024-02-13"},{"lineNumber":62,"author":{"gitId":"ongzhili"},"content":"        return returnVal;","lastModifiedDate":"2024-02-12"},{"lineNumber":63,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"ongzhili"},"content":"    private static String createFile(File fle, String name) throws IOException {","lastModifiedDate":"2024-02-21"},{"lineNumber":66,"author":{"gitId":"ongzhili"},"content":"        String returnVal \u003d \"\";","lastModifiedDate":"2024-02-21"},{"lineNumber":67,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":68,"author":{"gitId":"ongzhili"},"content":"        if (fle.createNewFile()) {","lastModifiedDate":"2024-02-21"},{"lineNumber":69,"author":{"gitId":"ongzhili"},"content":"            String message \u003d name + \" created successfully at: \" + fle.getAbsolutePath();","lastModifiedDate":"2024-02-21"},{"lineNumber":70,"author":{"gitId":"ongzhili"},"content":"            System.out.println(message);","lastModifiedDate":"2024-02-21"},{"lineNumber":71,"author":{"gitId":"ongzhili"},"content":"            returnVal +\u003d message + \"\\n\";","lastModifiedDate":"2024-02-21"},{"lineNumber":72,"author":{"gitId":"ongzhili"},"content":"        } else {","lastModifiedDate":"2024-02-21"},{"lineNumber":73,"author":{"gitId":"ongzhili"},"content":"            assert fle.exists() : \"There should be a \" + name + \".txt\";","lastModifiedDate":"2024-02-21"},{"lineNumber":74,"author":{"gitId":"ongzhili"},"content":"            String message \u003d \"Seems like you haaave a saved\" + name + \", baa!\";","lastModifiedDate":"2024-02-21"},{"lineNumber":75,"author":{"gitId":"ongzhili"},"content":"            System.out.println(message);","lastModifiedDate":"2024-02-21"},{"lineNumber":76,"author":{"gitId":"ongzhili"},"content":"            returnVal +\u003d message + \"\\n\\n\";","lastModifiedDate":"2024-02-21"},{"lineNumber":77,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":78,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":79,"author":{"gitId":"ongzhili"},"content":"        return returnVal;","lastModifiedDate":"2024-02-21"},{"lineNumber":80,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":81,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":82,"author":{"gitId":"ongzhili"},"content":"    private static void initializeMemo(File savedMemo, Lamball lamb) throws FileNotFoundException {","lastModifiedDate":"2024-02-14"},{"lineNumber":83,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":84,"author":{"gitId":"ongzhili"},"content":"        assert savedMemo.exists() : \"Memo file should exist.\";","lastModifiedDate":"2024-02-14"},{"lineNumber":85,"author":{"gitId":"ongzhili"},"content":"        System.out.println(savedMemo.exists());","lastModifiedDate":"2024-02-14"},{"lineNumber":86,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":87,"author":{"gitId":"ongzhili"},"content":"        Scanner scannr \u003d new Scanner(savedMemo);","lastModifiedDate":"2024-02-14"},{"lineNumber":88,"author":{"gitId":"ongzhili"},"content":"        System.out.println(\"Initializing memo...\");","lastModifiedDate":"2024-02-14"},{"lineNumber":89,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":90,"author":{"gitId":"ongzhili"},"content":"        while (scannr.hasNext()) {","lastModifiedDate":"2024-02-14"},{"lineNumber":91,"author":{"gitId":"ongzhili"},"content":"            try {","lastModifiedDate":"2024-02-14"},{"lineNumber":92,"author":{"gitId":"ongzhili"},"content":"                String currLine \u003d scannr.nextLine();","lastModifiedDate":"2024-02-14"},{"lineNumber":93,"author":{"gitId":"ongzhili"},"content":"                Memo currMemo \u003d Parser.parseMemo(currLine);","lastModifiedDate":"2024-02-14"},{"lineNumber":94,"author":{"gitId":"ongzhili"},"content":"                lamb.addToMemList(currMemo, true);","lastModifiedDate":"2024-02-14"},{"lineNumber":95,"author":{"gitId":"ongzhili"},"content":"            } catch (LamballParseException e) {","lastModifiedDate":"2024-02-14"},{"lineNumber":96,"author":{"gitId":"ongzhili"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2024-02-14"},{"lineNumber":97,"author":{"gitId":"ongzhili"},"content":"            }","lastModifiedDate":"2024-02-14"},{"lineNumber":98,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":99,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":100,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":101,"author":{"gitId":"ongzhili"},"content":"    private static void flush(File toFlush) throws IOException {","lastModifiedDate":"2024-02-14"},{"lineNumber":102,"author":{"gitId":"ongzhili"},"content":"        toFlush.delete();","lastModifiedDate":"2024-02-14"},{"lineNumber":103,"author":{"gitId":"ongzhili"},"content":"        toFlush.createNewFile();","lastModifiedDate":"2024-02-14"},{"lineNumber":104,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":105,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":106,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":107,"author":{"gitId":"ongzhili"},"content":"    private static void initializeListFromText(File savedList, Lamball lamb) throws FileNotFoundException {","lastModifiedDate":"2024-01-29"},{"lineNumber":108,"author":{"gitId":"ongzhili"},"content":"        File tempFile \u003d new File(filePath + defaultTempFile);","lastModifiedDate":"2024-02-14"},{"lineNumber":109,"author":{"gitId":"ongzhili"},"content":"        assert (!Objects.isNull(tempFile)) : \"there should be a file created\";","lastModifiedDate":"2024-02-13"},{"lineNumber":110,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":111,"author":{"gitId":"ongzhili"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":112,"author":{"gitId":"ongzhili"},"content":"            flush(tempFile);","lastModifiedDate":"2024-02-14"},{"lineNumber":113,"author":{"gitId":"ongzhili"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":114,"author":{"gitId":"ongzhili"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-01-29"},{"lineNumber":115,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":116,"author":{"gitId":"ongzhili"},"content":"        Scanner scanner \u003d new Scanner(savedList);","lastModifiedDate":"2024-01-29"},{"lineNumber":117,"author":{"gitId":"ongzhili"},"content":"        System.out.println(\"Initializing saved file...\");","lastModifiedDate":"2024-01-29"},{"lineNumber":118,"author":{"gitId":"ongzhili"},"content":"        int count \u003d 0;","lastModifiedDate":"2024-01-29"},{"lineNumber":119,"author":{"gitId":"ongzhili"},"content":"        while (scanner.hasNext()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":120,"author":{"gitId":"ongzhili"},"content":"            try {","lastModifiedDate":"2024-01-29"},{"lineNumber":121,"author":{"gitId":"ongzhili"},"content":"                // Parses every line of the saved file - if error, deletes line in the file and ignores command","lastModifiedDate":"2024-01-29"},{"lineNumber":122,"author":{"gitId":"ongzhili"},"content":"                String currLine \u003d scanner.nextLine();","lastModifiedDate":"2024-01-29"},{"lineNumber":123,"author":{"gitId":"ongzhili"},"content":"                String[] parts \u003d Parser.parseSavedList(currLine);","lastModifiedDate":"2024-02-14"},{"lineNumber":124,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":125,"author":{"gitId":"ongzhili"},"content":"                lamb.initParse(parts[1]);","lastModifiedDate":"2024-02-12"},{"lineNumber":126,"author":{"gitId":"ongzhili"},"content":"                count++;","lastModifiedDate":"2024-01-29"},{"lineNumber":127,"author":{"gitId":"ongzhili"},"content":"                // Marks task if first character is 1. Else does not.","lastModifiedDate":"2024-01-29"},{"lineNumber":128,"author":{"gitId":"ongzhili"},"content":"                if (Integer.valueOf(parts[0]) \u003d\u003d 1) {","lastModifiedDate":"2024-01-29"},{"lineNumber":129,"author":{"gitId":"ongzhili"},"content":"                    assert count \u003e 0 : \"count should be a non-negative, non-zero value\";","lastModifiedDate":"2024-02-13"},{"lineNumber":130,"author":{"gitId":"ongzhili"},"content":"                    lamb.initParse(\"mark \" + count);","lastModifiedDate":"2024-02-12"},{"lineNumber":131,"author":{"gitId":"ongzhili"},"content":"                }","lastModifiedDate":"2024-01-29"},{"lineNumber":132,"author":{"gitId":"ongzhili"},"content":"                // If code reaches here, means that the line is valid - write to temp file","lastModifiedDate":"2024-01-29"},{"lineNumber":133,"author":{"gitId":"ongzhili"},"content":"                Storage.writeToFile(defaultTempFile, currLine);","lastModifiedDate":"2024-02-14"},{"lineNumber":134,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":135,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":136,"author":{"gitId":"ongzhili"},"content":"            } catch (LamballParseException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":137,"author":{"gitId":"ongzhili"},"content":"                // Does not write if the command is invalid.","lastModifiedDate":"2024-02-14"},{"lineNumber":138,"author":{"gitId":"ongzhili"},"content":"                System.out.println(\"Corrupt format, ignoring...\");","lastModifiedDate":"2024-01-29"},{"lineNumber":139,"author":{"gitId":"ongzhili"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":140,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":141,"author":{"gitId":"ongzhili"},"content":"        scanner.close();","lastModifiedDate":"2024-01-29"},{"lineNumber":142,"author":{"gitId":"ongzhili"},"content":"        System.out.println(\"Done!\");","lastModifiedDate":"2024-01-29"},{"lineNumber":143,"author":{"gitId":"ongzhili"},"content":"        savedList.delete();","lastModifiedDate":"2024-01-29"},{"lineNumber":144,"author":{"gitId":"ongzhili"},"content":"        tempFile.renameTo(savedList);","lastModifiedDate":"2024-01-29"},{"lineNumber":145,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":146,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":147,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":148,"author":{"gitId":"ongzhili"},"content":"     * Replaces specified line in text file.","lastModifiedDate":"2024-01-31"},{"lineNumber":149,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":150,"author":{"gitId":"ongzhili"},"content":"     * @param toWrite Replacement line.","lastModifiedDate":"2024-01-31"},{"lineNumber":151,"author":{"gitId":"ongzhili"},"content":"     * @param index Index of line to replace.","lastModifiedDate":"2024-01-31"},{"lineNumber":152,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":153,"author":{"gitId":"ongzhili"},"content":"    public static void replaceLine(String toWrite, int index) throws StorageException {","lastModifiedDate":"2024-02-21"},{"lineNumber":154,"author":{"gitId":"ongzhili"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":155,"author":{"gitId":"ongzhili"},"content":"            // Read all lines from the file","lastModifiedDate":"2024-01-29"},{"lineNumber":156,"author":{"gitId":"ongzhili"},"content":"            Path path \u003d Paths.get(filePath + defaultFileName);","lastModifiedDate":"2024-02-13"},{"lineNumber":157,"author":{"gitId":"ongzhili"},"content":"            List\u003cString\u003e lines \u003d Files.readAllLines(path);","lastModifiedDate":"2024-01-29"},{"lineNumber":158,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":159,"author":{"gitId":"ongzhili"},"content":"            // Check if the index is valid","lastModifiedDate":"2024-01-29"},{"lineNumber":160,"author":{"gitId":"ongzhili"},"content":"            if (index \u003e\u003d 0 \u0026\u0026 index \u003c lines.size()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":161,"author":{"gitId":"ongzhili"},"content":"                // Replace the line at the specified index","lastModifiedDate":"2024-01-29"},{"lineNumber":162,"author":{"gitId":"ongzhili"},"content":"                lines.set(index, toWrite);","lastModifiedDate":"2024-01-29"},{"lineNumber":163,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":164,"author":{"gitId":"ongzhili"},"content":"                // Write the modified content back to the file","lastModifiedDate":"2024-01-29"},{"lineNumber":165,"author":{"gitId":"ongzhili"},"content":"                Files.write(path, lines);","lastModifiedDate":"2024-01-29"},{"lineNumber":166,"author":{"gitId":"ongzhili"},"content":"            } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":167,"author":{"gitId":"ongzhili"},"content":"                throw new StorageException(\"Invalid Index!\");","lastModifiedDate":"2024-02-21"},{"lineNumber":168,"author":{"gitId":"ongzhili"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":169,"author":{"gitId":"ongzhili"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":170,"author":{"gitId":"ongzhili"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-01-29"},{"lineNumber":171,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":172,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":173,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":174,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":175,"author":{"gitId":"ongzhili"},"content":"     * Deletes specified line in text file.","lastModifiedDate":"2024-01-31"},{"lineNumber":176,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":177,"author":{"gitId":"ongzhili"},"content":"     * @param index Index of line to delete.","lastModifiedDate":"2024-01-31"},{"lineNumber":178,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":179,"author":{"gitId":"ongzhili"},"content":"    public static void deleteLine(int index) {","lastModifiedDate":"2024-01-29"},{"lineNumber":180,"author":{"gitId":"ongzhili"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":181,"author":{"gitId":"ongzhili"},"content":"            // Read all lines from the file","lastModifiedDate":"2024-01-29"},{"lineNumber":182,"author":{"gitId":"ongzhili"},"content":"            Path path \u003d Paths.get(filePath + defaultFileName);","lastModifiedDate":"2024-02-13"},{"lineNumber":183,"author":{"gitId":"ongzhili"},"content":"            List\u003cString\u003e lines \u003d Files.readAllLines(path);","lastModifiedDate":"2024-01-29"},{"lineNumber":184,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":185,"author":{"gitId":"ongzhili"},"content":"            if (index \u003e\u003d 0 \u0026\u0026 index \u003c lines.size()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":186,"author":{"gitId":"ongzhili"},"content":"                lines.remove(index);","lastModifiedDate":"2024-01-29"},{"lineNumber":187,"author":{"gitId":"ongzhili"},"content":"                Files.write(path, lines);","lastModifiedDate":"2024-01-29"},{"lineNumber":188,"author":{"gitId":"ongzhili"},"content":"            } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":189,"author":{"gitId":"ongzhili"},"content":"                System.err.println(\"Invalid line number.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":190,"author":{"gitId":"ongzhili"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":191,"author":{"gitId":"ongzhili"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":192,"author":{"gitId":"ongzhili"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-01-29"},{"lineNumber":193,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":194,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":195,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":196,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":197,"author":{"gitId":"ongzhili"},"content":"     * Deletes all lines in text file.","lastModifiedDate":"2024-02-14"},{"lineNumber":198,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":199,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":200,"author":{"gitId":"ongzhili"},"content":"    public static void deleteAllLines(String fileName) {","lastModifiedDate":"2024-02-14"},{"lineNumber":201,"author":{"gitId":"ongzhili"},"content":"        try {","lastModifiedDate":"2024-02-14"},{"lineNumber":202,"author":{"gitId":"ongzhili"},"content":"            // Read all lines from the file","lastModifiedDate":"2024-02-14"},{"lineNumber":203,"author":{"gitId":"ongzhili"},"content":"            File toClear \u003d new File(filePath + fileName);","lastModifiedDate":"2024-02-14"},{"lineNumber":204,"author":{"gitId":"ongzhili"},"content":"            flush(toClear);","lastModifiedDate":"2024-02-14"},{"lineNumber":205,"author":{"gitId":"ongzhili"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-14"},{"lineNumber":206,"author":{"gitId":"ongzhili"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-14"},{"lineNumber":207,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":208,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":209,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":210,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":211,"author":{"gitId":"ongzhili"},"content":"     * Replaces specified line in text file.","lastModifiedDate":"2024-01-31"},{"lineNumber":212,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":213,"author":{"gitId":"ongzhili"},"content":"     * @param fileName File name of the text file.","lastModifiedDate":"2024-02-14"},{"lineNumber":214,"author":{"gitId":"ongzhili"},"content":"     * @param toAdd Line to be appended to the text file.","lastModifiedDate":"2024-01-31"},{"lineNumber":215,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":216,"author":{"gitId":"ongzhili"},"content":"    public static void writeToFile(String fileName, String toAdd) {","lastModifiedDate":"2024-02-14"},{"lineNumber":217,"author":{"gitId":"ongzhili"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":218,"author":{"gitId":"ongzhili"},"content":"            System.out.println(new File(fileName).exists());","lastModifiedDate":"2024-02-14"},{"lineNumber":219,"author":{"gitId":"ongzhili"},"content":"            FileWriter fw \u003d new FileWriter(filePath + fileName, true);","lastModifiedDate":"2024-02-14"},{"lineNumber":220,"author":{"gitId":"ongzhili"},"content":"            fw.write(toAdd + System.lineSeparator());","lastModifiedDate":"2024-01-29"},{"lineNumber":221,"author":{"gitId":"ongzhili"},"content":"            fw.close();","lastModifiedDate":"2024-01-29"},{"lineNumber":222,"author":{"gitId":"ongzhili"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":223,"author":{"gitId":"ongzhili"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-01-29"},{"lineNumber":224,"author":{"gitId":"ongzhili"},"content":"            System.out.println(\"Save Failed: \" + e.getMessage());","lastModifiedDate":"2024-01-29"},{"lineNumber":225,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":226,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":227,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":228,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":229,"author":{"gitId":"ongzhili"},"content":"     * Replaces specified line in text file. Default hardcoded path provided.","lastModifiedDate":"2024-01-31"},{"lineNumber":230,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":231,"author":{"gitId":"ongzhili"},"content":"     * @param toAdd Line to be appended to the text file.","lastModifiedDate":"2024-01-31"},{"lineNumber":232,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":233,"author":{"gitId":"ongzhili"},"content":"    public static void writeToFile(String toAdd) {","lastModifiedDate":"2024-01-29"},{"lineNumber":234,"author":{"gitId":"ongzhili"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":235,"author":{"gitId":"ongzhili"},"content":"            FileWriter fw \u003d new FileWriter(filePath + defaultFileName, true);","lastModifiedDate":"2024-02-13"},{"lineNumber":236,"author":{"gitId":"ongzhili"},"content":"            fw.write(toAdd + System.lineSeparator());","lastModifiedDate":"2024-01-29"},{"lineNumber":237,"author":{"gitId":"ongzhili"},"content":"            fw.close();","lastModifiedDate":"2024-01-29"},{"lineNumber":238,"author":{"gitId":"ongzhili"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":239,"author":{"gitId":"ongzhili"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-01-29"},{"lineNumber":240,"author":{"gitId":"ongzhili"},"content":"            System.out.println(\"Save Failed: \" + e.getMessage());","lastModifiedDate":"2024-01-29"},{"lineNumber":241,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":242,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":243,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":244,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"ongzhili":244}},{"path":"src/main/java/lamball/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"package lamball;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":"import lamball.exception.DuplicateEntryException;","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"import lamball.exception.InvalidDateException;","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"import lamball.exception.StorageException;","lastModifiedDate":"2024-02-21"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"import lamball.task.Deadline;","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":"import lamball.task.Event;","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":"import lamball.task.Task;","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":"import lamball.task.ToDo;","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"ongzhili"},"content":" * A class that handles the to-do list operations.","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"ongzhili"},"content":" *","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"ongzhili"},"content":" * @author ongzhili","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"ongzhili"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"ongzhili"},"content":"public class TaskList {","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"ongzhili"},"content":"    protected ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"ongzhili"},"content":"    private Lamball lamb;","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"ongzhili"},"content":"     * Constructor for TaskList","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"ongzhili"},"content":"    public TaskList(Lamball lamb) {","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"ongzhili"},"content":"        this.lamb \u003d lamb;","lastModifiedDate":"2024-02-14"},{"lineNumber":33,"author":{"gitId":"ongzhili"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"ongzhili"},"content":"    private void updateLastDoneTask(String toUpdate) {","lastModifiedDate":"2024-02-13"},{"lineNumber":37,"author":{"gitId":"ongzhili"},"content":"        lamb.updateLastDoneTask(toUpdate);","lastModifiedDate":"2024-02-14"},{"lineNumber":38,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":39,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":40,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"ongzhili"},"content":"     * Returns size of task list.","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":43,"author":{"gitId":"ongzhili"},"content":"     * @return Intger value of size of task list.","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"ongzhili"},"content":"    public int size() {","lastModifiedDate":"2024-02-12"},{"lineNumber":46,"author":{"gitId":"ongzhili"},"content":"        return this.tasks.size();","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":48,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":49,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"ongzhili"},"content":"    private void printList(ArrayList\u003cTask\u003e lst) {","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"ongzhili"},"content":"        String listStr \u003d \"Here aaaaare the taaaasks in your list:\";","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"ongzhili"},"content":"        for (int i \u003d 0; i \u003c lst.size(); i++) {","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"ongzhili"},"content":"            listStr +\u003d \"\\n    \" + (i + 1) + \". \" + lst.get(i).toString() + \"\";","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"ongzhili"},"content":"        updateLastDoneTask(listStr);","lastModifiedDate":"2024-02-13"},{"lineNumber":56,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":59,"author":{"gitId":"ongzhili"},"content":"     * Prints full list of tasks.","lastModifiedDate":"2024-02-21"},{"lineNumber":60,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":61,"author":{"gitId":"ongzhili"},"content":"     * @return Boolean to continue keeping the bot running.","lastModifiedDate":"2024-02-12"},{"lineNumber":62,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":63,"author":{"gitId":"ongzhili"},"content":"    public boolean printList() {","lastModifiedDate":"2024-02-12"},{"lineNumber":64,"author":{"gitId":"ongzhili"},"content":"        printList(this.tasks);","lastModifiedDate":"2024-02-12"},{"lineNumber":65,"author":{"gitId":"ongzhili"},"content":"        return true;","lastModifiedDate":"2024-02-12"},{"lineNumber":66,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":67,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":68,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":69,"author":{"gitId":"ongzhili"},"content":"     * Marks a given task from the list.","lastModifiedDate":"2024-02-12"},{"lineNumber":70,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":71,"author":{"gitId":"ongzhili"},"content":"     * @param idx Index number of task in list.","lastModifiedDate":"2024-02-12"},{"lineNumber":72,"author":{"gitId":"ongzhili"},"content":"     * @return Boolean to continue keeping the bot running.","lastModifiedDate":"2024-02-12"},{"lineNumber":73,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":74,"author":{"gitId":"ongzhili"},"content":"    public boolean mark(int idx, boolean isInit) {","lastModifiedDate":"2024-02-12"},{"lineNumber":75,"author":{"gitId":"ongzhili"},"content":"        Task temp \u003d tasks.get(idx);","lastModifiedDate":"2024-01-29"},{"lineNumber":76,"author":{"gitId":"ongzhili"},"content":"        temp.mark();","lastModifiedDate":"2024-01-29"},{"lineNumber":77,"author":{"gitId":"ongzhili"},"content":"        updateLastDoneTask(\"I have maaarked the task as done:\\n\" + \"    \" + temp.toString());","lastModifiedDate":"2024-02-13"},{"lineNumber":78,"author":{"gitId":"ongzhili"},"content":"        if (!isInit) {","lastModifiedDate":"2024-01-30"},{"lineNumber":79,"author":{"gitId":"ongzhili"},"content":"            try {","lastModifiedDate":"2024-02-21"},{"lineNumber":80,"author":{"gitId":"ongzhili"},"content":"                Storage.replaceLine(\"1 | \" + temp.command(), idx);","lastModifiedDate":"2024-01-30"},{"lineNumber":81,"author":{"gitId":"ongzhili"},"content":"            } catch (StorageException e) {","lastModifiedDate":"2024-02-21"},{"lineNumber":82,"author":{"gitId":"ongzhili"},"content":"                updateLastDoneTask(e.getMessage());","lastModifiedDate":"2024-02-21"},{"lineNumber":83,"author":{"gitId":"ongzhili"},"content":"            }","lastModifiedDate":"2024-02-21"},{"lineNumber":84,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":85,"author":{"gitId":"ongzhili"},"content":"        return true;","lastModifiedDate":"2024-01-30"},{"lineNumber":86,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":87,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":88,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":89,"author":{"gitId":"ongzhili"},"content":"     * Unmarks a given task from the list.","lastModifiedDate":"2024-02-12"},{"lineNumber":90,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":91,"author":{"gitId":"ongzhili"},"content":"     * @param idx Index number of task in list.","lastModifiedDate":"2024-02-12"},{"lineNumber":92,"author":{"gitId":"ongzhili"},"content":"     * @return Boolean to continue keeping the bot running.","lastModifiedDate":"2024-02-12"},{"lineNumber":93,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":94,"author":{"gitId":"ongzhili"},"content":"    public boolean unMark(int idx) {","lastModifiedDate":"2024-02-12"},{"lineNumber":95,"author":{"gitId":"ongzhili"},"content":"        Task temp \u003d tasks.get(idx);","lastModifiedDate":"2024-01-29"},{"lineNumber":96,"author":{"gitId":"ongzhili"},"content":"        temp.unMark();","lastModifiedDate":"2024-01-29"},{"lineNumber":97,"author":{"gitId":"ongzhili"},"content":"        updateLastDoneTask(\"I have maaarked the task as undone:\\n\" + \"    \" + temp.toString());","lastModifiedDate":"2024-02-13"},{"lineNumber":98,"author":{"gitId":"ongzhili"},"content":"        try {","lastModifiedDate":"2024-02-21"},{"lineNumber":99,"author":{"gitId":"ongzhili"},"content":"            Storage.replaceLine(\"0 | \" + temp.command(), idx);","lastModifiedDate":"2024-01-30"},{"lineNumber":100,"author":{"gitId":"ongzhili"},"content":"        } catch (StorageException e) {","lastModifiedDate":"2024-02-21"},{"lineNumber":101,"author":{"gitId":"ongzhili"},"content":"            updateLastDoneTask(e.getMessage());","lastModifiedDate":"2024-02-21"},{"lineNumber":102,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":103,"author":{"gitId":"ongzhili"},"content":"        return true;","lastModifiedDate":"2024-01-30"},{"lineNumber":104,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":105,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":106,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":107,"author":{"gitId":"ongzhili"},"content":"     * Creates a deadline and adds it to the list of tasks.","lastModifiedDate":"2024-02-12"},{"lineNumber":108,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":109,"author":{"gitId":"ongzhili"},"content":"     * @param arg Arguments to create with.","lastModifiedDate":"2024-02-12"},{"lineNumber":110,"author":{"gitId":"ongzhili"},"content":"     * @param isInit Whether this is run during initialization","lastModifiedDate":"2024-02-12"},{"lineNumber":111,"author":{"gitId":"ongzhili"},"content":"     * @return Boolean to continue keeping the bot running.","lastModifiedDate":"2024-02-12"},{"lineNumber":112,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":113,"author":{"gitId":"ongzhili"},"content":"    public boolean toDo(String arg, boolean isInit) {","lastModifiedDate":"2024-02-12"},{"lineNumber":114,"author":{"gitId":"ongzhili"},"content":"        try {","lastModifiedDate":"2024-02-19"},{"lineNumber":115,"author":{"gitId":"ongzhili"},"content":"            Task temp \u003d new ToDo(arg);","lastModifiedDate":"2024-02-12"},{"lineNumber":116,"author":{"gitId":"ongzhili"},"content":"            checkForDuplicateTask(temp);","lastModifiedDate":"2024-02-19"},{"lineNumber":117,"author":{"gitId":"ongzhili"},"content":"            tasks.add(temp);","lastModifiedDate":"2024-01-29"},{"lineNumber":118,"author":{"gitId":"ongzhili"},"content":"            updateLastDoneTask(\"Added ToDo:\\n        \" + temp.toString() + \"\\n    Now you have \" + tasks.size()","lastModifiedDate":"2024-02-13"},{"lineNumber":119,"author":{"gitId":"ongzhili"},"content":"                    + \" tasks in the list.\");","lastModifiedDate":"2024-02-13"},{"lineNumber":120,"author":{"gitId":"ongzhili"},"content":"            if (!isInit) {","lastModifiedDate":"2024-01-29"},{"lineNumber":121,"author":{"gitId":"ongzhili"},"content":"                Storage.writeToFile(\"0 | \" + temp.command());","lastModifiedDate":"2024-01-30"},{"lineNumber":122,"author":{"gitId":"ongzhili"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":123,"author":{"gitId":"ongzhili"},"content":"        } catch (DuplicateEntryException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":124,"author":{"gitId":"ongzhili"},"content":"            updateLastDoneTask(e.getMessage());","lastModifiedDate":"2024-02-19"},{"lineNumber":125,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":126,"author":{"gitId":"ongzhili"},"content":"        return true;","lastModifiedDate":"2024-01-30"},{"lineNumber":127,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":128,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":129,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":130,"author":{"gitId":"ongzhili"},"content":"     * Creates a deadline and adds it to the list of tasks.","lastModifiedDate":"2024-02-12"},{"lineNumber":131,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":132,"author":{"gitId":"ongzhili"},"content":"     * @param furtherSplit Arguments to create with.","lastModifiedDate":"2024-02-12"},{"lineNumber":133,"author":{"gitId":"ongzhili"},"content":"     * @param isInit Whether this is run during initialization","lastModifiedDate":"2024-02-12"},{"lineNumber":134,"author":{"gitId":"ongzhili"},"content":"     * @return Boolean to continue keeping the bot running.","lastModifiedDate":"2024-02-12"},{"lineNumber":135,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":136,"author":{"gitId":"ongzhili"},"content":"    public boolean deadline(String[] furtherSplit, boolean isInit) {","lastModifiedDate":"2024-02-12"},{"lineNumber":137,"author":{"gitId":"ongzhili"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":138,"author":{"gitId":"ongzhili"},"content":"            Task temp \u003d new Deadline(furtherSplit[0], furtherSplit[1].replaceFirst(\"by \", \"\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":139,"author":{"gitId":"ongzhili"},"content":"            checkForDuplicateTask(temp);","lastModifiedDate":"2024-02-19"},{"lineNumber":140,"author":{"gitId":"ongzhili"},"content":"            tasks.add(temp);","lastModifiedDate":"2024-01-29"},{"lineNumber":141,"author":{"gitId":"ongzhili"},"content":"            updateLastDoneTask(\"Added Deadline:\\n        \" + temp.toString() + \"\\n    Now you have \"","lastModifiedDate":"2024-02-13"},{"lineNumber":142,"author":{"gitId":"ongzhili"},"content":"                    + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2024-02-13"},{"lineNumber":143,"author":{"gitId":"ongzhili"},"content":"            if (!isInit) {","lastModifiedDate":"2024-01-29"},{"lineNumber":144,"author":{"gitId":"ongzhili"},"content":"                Storage.writeToFile(\"0 | \" + temp.command());","lastModifiedDate":"2024-01-30"},{"lineNumber":145,"author":{"gitId":"ongzhili"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":146,"author":{"gitId":"ongzhili"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":147,"author":{"gitId":"ongzhili"},"content":"            updateLastDoneTask(\"Date is in the wrong formaaaaaaat, baa. :(\\n    Correct fo\" + \"rmaaat is: \"","lastModifiedDate":"2024-02-13"},{"lineNumber":148,"author":{"gitId":"ongzhili"},"content":"                    + \"yyyy-mm-dd (e.g 2001-01-20)\");","lastModifiedDate":"2024-02-13"},{"lineNumber":149,"author":{"gitId":"ongzhili"},"content":"            return true;","lastModifiedDate":"2024-02-12"},{"lineNumber":150,"author":{"gitId":"ongzhili"},"content":"        } catch (InvalidDateException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":151,"author":{"gitId":"ongzhili"},"content":"            updateLastDoneTask(e.getMessage());","lastModifiedDate":"2024-02-19"},{"lineNumber":152,"author":{"gitId":"ongzhili"},"content":"        } catch (DuplicateEntryException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":153,"author":{"gitId":"ongzhili"},"content":"            updateLastDoneTask(e.getMessage());","lastModifiedDate":"2024-02-19"},{"lineNumber":154,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":155,"author":{"gitId":"ongzhili"},"content":"        return true;","lastModifiedDate":"2024-02-12"},{"lineNumber":156,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":157,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":158,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":159,"author":{"gitId":"ongzhili"},"content":"     * Creates an event and adds it to the list of tasks.","lastModifiedDate":"2024-02-12"},{"lineNumber":160,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":161,"author":{"gitId":"ongzhili"},"content":"     * @param furtherSplit Arguments to create with.","lastModifiedDate":"2024-02-12"},{"lineNumber":162,"author":{"gitId":"ongzhili"},"content":"     * @param isInit Whether this is run during initialization","lastModifiedDate":"2024-02-12"},{"lineNumber":163,"author":{"gitId":"ongzhili"},"content":"     * @return Boolean to continue keeping the bot running.","lastModifiedDate":"2024-02-12"},{"lineNumber":164,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":165,"author":{"gitId":"ongzhili"},"content":"    public boolean event(String[] furtherSplit, boolean isInit) {","lastModifiedDate":"2024-02-12"},{"lineNumber":166,"author":{"gitId":"ongzhili"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":167,"author":{"gitId":"ongzhili"},"content":"            Task temp \u003d new Event(furtherSplit[0], furtherSplit[1].replaceFirst(\"from \", \"\"),","lastModifiedDate":"2024-01-29"},{"lineNumber":168,"author":{"gitId":"ongzhili"},"content":"                    furtherSplit[2].replaceFirst(\"to \", \"\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":169,"author":{"gitId":"ongzhili"},"content":"            checkForDuplicateTask(temp);","lastModifiedDate":"2024-02-19"},{"lineNumber":170,"author":{"gitId":"ongzhili"},"content":"            tasks.add(temp);","lastModifiedDate":"2024-01-29"},{"lineNumber":171,"author":{"gitId":"ongzhili"},"content":"            updateLastDoneTask(\"Added Event:\\n        \" + temp.toString() + \"\\n    Now you have \"","lastModifiedDate":"2024-02-13"},{"lineNumber":172,"author":{"gitId":"ongzhili"},"content":"                    + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2024-02-13"},{"lineNumber":173,"author":{"gitId":"ongzhili"},"content":"            if (!isInit) {","lastModifiedDate":"2024-01-29"},{"lineNumber":174,"author":{"gitId":"ongzhili"},"content":"                Storage.writeToFile(\"0 | \" + temp.command());","lastModifiedDate":"2024-01-30"},{"lineNumber":175,"author":{"gitId":"ongzhili"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":176,"author":{"gitId":"ongzhili"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":177,"author":{"gitId":"ongzhili"},"content":"            updateLastDoneTask(\"Dates are in the wrong formaaaaaaat, baa. :(\\n    Correct fo\"","lastModifiedDate":"2024-02-13"},{"lineNumber":178,"author":{"gitId":"ongzhili"},"content":"                    + \"rmaaat is: yyyy-mm-dd (e.g 2001-01-20)\");","lastModifiedDate":"2024-02-13"},{"lineNumber":179,"author":{"gitId":"ongzhili"},"content":"            return true;","lastModifiedDate":"2024-02-12"},{"lineNumber":180,"author":{"gitId":"ongzhili"},"content":"        } catch (InvalidDateException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":181,"author":{"gitId":"ongzhili"},"content":"            updateLastDoneTask(e.getMessage());","lastModifiedDate":"2024-02-19"},{"lineNumber":182,"author":{"gitId":"ongzhili"},"content":"        } catch (DuplicateEntryException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":183,"author":{"gitId":"ongzhili"},"content":"            updateLastDoneTask(e.getMessage());","lastModifiedDate":"2024-02-19"},{"lineNumber":184,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":185,"author":{"gitId":"ongzhili"},"content":"        return true;","lastModifiedDate":"2024-02-12"},{"lineNumber":186,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":187,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":188,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":189,"author":{"gitId":"ongzhili"},"content":"     * Deletes a given task from the list.","lastModifiedDate":"2024-02-12"},{"lineNumber":190,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":191,"author":{"gitId":"ongzhili"},"content":"     * @param idx index to delete from.","lastModifiedDate":"2024-02-12"},{"lineNumber":192,"author":{"gitId":"ongzhili"},"content":"     * @return Boolean that keeps the bot running.","lastModifiedDate":"2024-02-12"},{"lineNumber":193,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":194,"author":{"gitId":"ongzhili"},"content":"    public boolean deleteFromList(int idx) {","lastModifiedDate":"2024-02-12"},{"lineNumber":195,"author":{"gitId":"ongzhili"},"content":"        Task temp \u003d tasks.remove(idx);","lastModifiedDate":"2024-01-29"},{"lineNumber":196,"author":{"gitId":"ongzhili"},"content":"        Storage.deleteLine(idx);","lastModifiedDate":"2024-01-30"},{"lineNumber":197,"author":{"gitId":"ongzhili"},"content":"        updateLastDoneTask(\"I have removed this taaask:\\n\" + \"        \" + temp.toString() + \"\\n    Now you have \"","lastModifiedDate":"2024-02-13"},{"lineNumber":198,"author":{"gitId":"ongzhili"},"content":"                + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2024-02-13"},{"lineNumber":199,"author":{"gitId":"ongzhili"},"content":"        return true;","lastModifiedDate":"2024-01-30"},{"lineNumber":200,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":201,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":202,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":203,"author":{"gitId":"ongzhili"},"content":"     * Finds related tasks based on the prompt provided.","lastModifiedDate":"2024-02-12"},{"lineNumber":204,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":205,"author":{"gitId":"ongzhili"},"content":"     * @param toFind String prompt to search with","lastModifiedDate":"2024-02-12"},{"lineNumber":206,"author":{"gitId":"ongzhili"},"content":"     * @return Boolean that keeps the bot running.","lastModifiedDate":"2024-02-12"},{"lineNumber":207,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":208,"author":{"gitId":"ongzhili"},"content":"    public boolean find(String toFind) {","lastModifiedDate":"2024-02-12"},{"lineNumber":209,"author":{"gitId":"ongzhili"},"content":"        ArrayList\u003cTask\u003e positives \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-02"},{"lineNumber":210,"author":{"gitId":"ongzhili"},"content":"        for (Task temp : tasks) {","lastModifiedDate":"2024-02-02"},{"lineNumber":211,"author":{"gitId":"ongzhili"},"content":"            if (temp.containing(toFind)) {","lastModifiedDate":"2024-02-12"},{"lineNumber":212,"author":{"gitId":"ongzhili"},"content":"                positives.add(temp);","lastModifiedDate":"2024-02-02"},{"lineNumber":213,"author":{"gitId":"ongzhili"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":214,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":215,"author":{"gitId":"ongzhili"},"content":"        printList(positives);","lastModifiedDate":"2024-02-02"},{"lineNumber":216,"author":{"gitId":"ongzhili"},"content":"        return true;","lastModifiedDate":"2024-01-31"},{"lineNumber":217,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":218,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":219,"author":{"gitId":"ongzhili"},"content":"    private boolean checkForDuplicateTask(Task newTask) throws DuplicateEntryException {","lastModifiedDate":"2024-02-19"},{"lineNumber":220,"author":{"gitId":"ongzhili"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2024-02-19"},{"lineNumber":221,"author":{"gitId":"ongzhili"},"content":"            if (t.equals(newTask)) {","lastModifiedDate":"2024-02-19"},{"lineNumber":222,"author":{"gitId":"ongzhili"},"content":"                throw new DuplicateEntryException(\"Duplicate task, baa.\");","lastModifiedDate":"2024-02-19"},{"lineNumber":223,"author":{"gitId":"ongzhili"},"content":"            }","lastModifiedDate":"2024-02-19"},{"lineNumber":224,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":225,"author":{"gitId":"ongzhili"},"content":"        return false;","lastModifiedDate":"2024-02-19"},{"lineNumber":226,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":227,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":228,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"ongzhili":228}},{"path":"src/main/java/lamball/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"package lamball.command;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":" * Command that closes the window.","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"     * Constructor for command.","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"    public ByeCommand() {","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":"    @Override public boolean run() {","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":"        return false;","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"ongzhili":17}},{"path":"src/main/java/lamball/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"package lamball.command;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":" * Command task that will be told to run.","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":"public abstract class Command {","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"     * Runs the command.","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":"     * @return Boolean determining if the chatbot should be terminated.","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":"    public abstract boolean run();","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"ongzhili":14}},{"path":"src/main/java/lamball/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"package lamball.command;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"import java.util.Objects;","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":"import lamball.TaskList;","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":" * Command that creates a deadline.","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":"    private static final int MINIMUM_ARG_COUNT \u003d 2;","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":"    private String[] args;","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":"    private boolean isInit;","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"ongzhili"},"content":"     * Constructor for deadline command.","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"ongzhili"},"content":"     * @param args Arguments for creation of deadline.","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"ongzhili"},"content":"     * @param tasks TaskList to create deadline in.","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"ongzhili"},"content":"     * @param isInit Whether this command is executed during initialization.","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"ongzhili"},"content":"    public DeadlineCommand(String[] args, TaskList tasks, boolean isInit) {","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"ongzhili"},"content":"        this.taskList \u003d tasks;","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"ongzhili"},"content":"        this.args \u003d args;","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"ongzhili"},"content":"        this.isInit \u003d isInit;","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"ongzhili"},"content":"    @Override","lastModifiedDate":"2024-02-12"},{"lineNumber":31,"author":{"gitId":"ongzhili"},"content":"    public boolean run() {","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"ongzhili"},"content":"        assert (!Objects.isNull(this.args)) : \"Arguments should not be null\";","lastModifiedDate":"2024-02-13"},{"lineNumber":33,"author":{"gitId":"ongzhili"},"content":"        assert this.args.length \u003e\u003d MINIMUM_ARG_COUNT : \"There should be at least the minimum argument count\";","lastModifiedDate":"2024-02-13"},{"lineNumber":34,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":35,"author":{"gitId":"ongzhili"},"content":"        taskList.deadline(args, isInit);","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"ongzhili"},"content":"        return true;","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"ongzhili":38}},{"path":"src/main/java/lamball/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"package lamball.command;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"import lamball.TaskList;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":" * Command that creates a given task","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"    private int idx;","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":"     * Constructor for delete command.","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":"     * @param idx Index of list to delete.","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":"     * @param tasks TaskList to delete from.","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"ongzhili"},"content":"    public DeleteCommand(int idx, TaskList tasks) {","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"ongzhili"},"content":"        this.taskList \u003d tasks;","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"ongzhili"},"content":"        this.idx \u003d idx;","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"ongzhili"},"content":"    @Override","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"ongzhili"},"content":"    public boolean run() {","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"ongzhili"},"content":"        assert idx \u003e 0 : \"index should be non-negative and non-zero\";","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"ongzhili"},"content":"        assert idx \u003c\u003d taskList.size() : \"index should be within the bound of task list\";","lastModifiedDate":"2024-02-13"},{"lineNumber":27,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":28,"author":{"gitId":"ongzhili"},"content":"        taskList.deleteFromList(idx);","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"ongzhili"},"content":"        return true;","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":31,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"ongzhili":31}},{"path":"src/main/java/lamball/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"package lamball.command;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"import java.util.Objects;","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":"import lamball.TaskList;","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":" * Command that creates an event.","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":"    private static final int MINIMUM_ARG_COUNT \u003d 3;","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":"    private String[] args;","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":"    private boolean isInit;","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":"     * Constructor for Event command.","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"ongzhili"},"content":"     * @param args Arguments to create event task.","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"ongzhili"},"content":"     * @param tasks TaskList to add task to.","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"ongzhili"},"content":"     * @param isInit Whether this is run during initialization.","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"ongzhili"},"content":"    public EventCommand(String[] args, TaskList tasks, boolean isInit) {","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"ongzhili"},"content":"        this.taskList \u003d tasks;","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"ongzhili"},"content":"        this.args \u003d args;","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"ongzhili"},"content":"        this.isInit \u003d isInit;","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"ongzhili"},"content":"    @Override","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"ongzhili"},"content":"    public boolean run() {","lastModifiedDate":"2024-02-12"},{"lineNumber":31,"author":{"gitId":"ongzhili"},"content":"        assert (!Objects.isNull(this.args)) : \"Arguments should not be null\";","lastModifiedDate":"2024-02-13"},{"lineNumber":32,"author":{"gitId":"ongzhili"},"content":"        assert this.args.length \u003e\u003d MINIMUM_ARG_COUNT : \"There should be at least the minimum argument count\";","lastModifiedDate":"2024-02-13"},{"lineNumber":33,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":34,"author":{"gitId":"ongzhili"},"content":"        taskList.event(this.args, isInit);","lastModifiedDate":"2024-02-13"},{"lineNumber":35,"author":{"gitId":"ongzhili"},"content":"        return true;","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"ongzhili":37}},{"path":"src/main/java/lamball/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"package lamball.command;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"import lamball.TaskList;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":" * Command that finds a task.","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"    private String args;","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":"     * Constructor for command.","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":"     * @param args Argument to search for.","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":"     * @param tasks TaskList to search in.","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"ongzhili"},"content":"    public FindCommand(String args, TaskList tasks) {","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"ongzhili"},"content":"        this.taskList \u003d tasks;","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"ongzhili"},"content":"        this.args \u003d args;","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"ongzhili"},"content":"    @Override","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"ongzhili"},"content":"    public boolean run() {","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"ongzhili"},"content":"        taskList.find(args);","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"ongzhili"},"content":"        return true;","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"ongzhili":29}},{"path":"src/main/java/lamball/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"package lamball.command;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"import lamball.TaskList;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":" * Command that unmarks a given task.","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"    private boolean isInit;","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":"    private int idx;","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":"     * Constructor for mark command.","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":"     * @param idx Index of list to mark.","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":"     * @param tasks TaskList to mark from.","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"ongzhili"},"content":"     * @param isInit Whether this command is run during initialization.","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"ongzhili"},"content":"    public MarkCommand(int idx, TaskList tasks, boolean isInit) {","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"ongzhili"},"content":"        this.taskList \u003d tasks;","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"ongzhili"},"content":"        this.idx \u003d idx;","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"ongzhili"},"content":"        this.isInit \u003d isInit;","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"ongzhili"},"content":"    @Override","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"ongzhili"},"content":"    public boolean run() {","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"ongzhili"},"content":"        assert idx \u003e 0 : \"index should be non-negative and non-zero\";","lastModifiedDate":"2024-02-13"},{"lineNumber":29,"author":{"gitId":"ongzhili"},"content":"        assert idx \u003c\u003d taskList.size() : \"index should be within the bound of task list\";","lastModifiedDate":"2024-02-13"},{"lineNumber":30,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":31,"author":{"gitId":"ongzhili"},"content":"        taskList.mark(idx, this.isInit);","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"ongzhili"},"content":"        return true;","lastModifiedDate":"2024-02-12"},{"lineNumber":33,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":34,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"ongzhili":34}},{"path":"src/main/java/lamball/command/MemoAddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"package lamball.command;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"import lamball.memo.Memo;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":"import lamball.memo.MemoList;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":"/**","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":" * Command to add memo to list.","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":" */","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"public class MemoAddCommand extends Command {","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":"    private String memo;","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":"    private MemoList memos;","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":"     * Constructor for command.","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":"     * @param memo Content of memo.","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"ongzhili"},"content":"     * @param memos List to add to.","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"ongzhili"},"content":"    public MemoAddCommand(String memo, MemoList memos) {","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"ongzhili"},"content":"        this.memo \u003d memo;","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"ongzhili"},"content":"        this.memos \u003d memos;","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"ongzhili"},"content":"    @Override","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"ongzhili"},"content":"    public boolean run() {","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"ongzhili"},"content":"        memos.addMemo(new Memo(memo), false);","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"ongzhili"},"content":"        return true;","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"ongzhili":30}},{"path":"src/main/java/lamball/command/MemoClearCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"package lamball.command;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"import lamball.memo.MemoList;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":"/**","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":" * Command to clear a list\u0027s memos.","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":" */","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"public class MemoClearCommand extends Command {","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"    private MemoList memos;","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":"     * Constructor for command.","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":"     * @param memos list to clear","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":"    public MemoClearCommand(MemoList memos) {","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"ongzhili"},"content":"        this.memos \u003d memos;","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"ongzhili"},"content":"    @Override","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"ongzhili"},"content":"    public boolean run() {","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"ongzhili"},"content":"        memos.clearMemos();","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"ongzhili"},"content":"        return true;","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"ongzhili":26}},{"path":"src/main/java/lamball/command/MemoDelCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"package lamball.command;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"import lamball.memo.MemoList;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":"/**","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":" * Command to delete memo from list","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":" */","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"public class MemoDelCommand extends Command {","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"    private int idx;","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":"    private MemoList memos;","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":"     * Constructor for command.","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":"     * @param idx Index of memo to delete.","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":"     * @param memos List to delete from","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"ongzhili"},"content":"    public MemoDelCommand(int idx, MemoList memos) {","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"ongzhili"},"content":"        this.idx \u003d idx;","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"ongzhili"},"content":"        this.memos \u003d memos;","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"ongzhili"},"content":"    @Override","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"ongzhili"},"content":"    public boolean run() {","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"ongzhili"},"content":"        memos.delMemo(idx);","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"ongzhili"},"content":"        return true;","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"ongzhili":29}},{"path":"src/main/java/lamball/command/PrintListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"package lamball.command;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"import lamball.TaskList;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":" * Command that prints the list of tasks","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"public class PrintListCommand extends Command {","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":"     * Constructor for command.","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":"     * @param tasks TaskList to print from.","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":"    public PrintListCommand(TaskList tasks) {","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":"        this.taskList \u003d tasks;","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"ongzhili"},"content":"    @Override public boolean run() {","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"ongzhili"},"content":"        taskList.printList();","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"ongzhili"},"content":"        return true;","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"ongzhili":24}},{"path":"src/main/java/lamball/command/PrintMemosCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"package lamball.command;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"import lamball.memo.MemoList;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":"/**","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":" * Command that prints the list of memos","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":" */","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"public class PrintMemosCommand extends Command {","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"    private MemoList memoList;","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":"     * Constructor for command.","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":"     * @param memos MemoList to print from.","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":"    public PrintMemosCommand(MemoList memos) {","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":"        this.memoList \u003d memos;","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"ongzhili"},"content":"    @Override public boolean run() {","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"ongzhili"},"content":"        memoList.printMemos();","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"ongzhili"},"content":"        return true;","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"ongzhili":24}},{"path":"src/main/java/lamball/command/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"package lamball.command;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"import lamball.TaskList;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":" * Command that creates a todo task.","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"public class ToDoCommand extends Command {","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"    private String toDo;","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":"    private boolean isInit;","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":"     * Constructor for the command.","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":"     * @param toDo Name of task.","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":"     * @param tasks TaskList to add task to.","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"ongzhili"},"content":"     * @param isInit Whether this is run during initialization.","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"ongzhili"},"content":"    public ToDoCommand(String toDo, TaskList tasks, boolean isInit) {","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"ongzhili"},"content":"        this.taskList \u003d tasks;","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"ongzhili"},"content":"        this.toDo \u003d toDo;","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"ongzhili"},"content":"        this.isInit \u003d isInit;","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"ongzhili"},"content":"    @Override","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"ongzhili"},"content":"    public boolean run() {","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"ongzhili"},"content":"        taskList.toDo(toDo, isInit);","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"ongzhili"},"content":"        return true;","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":31,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"ongzhili":31}},{"path":"src/main/java/lamball/command/UnMarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"package lamball.command;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"import lamball.TaskList;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":" * Command that unmarks a given task.","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"public class UnMarkCommand extends Command {","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"    private int idx;","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":"     * Constructor for unmark command.","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":"     * @param idx Index of list to unmark.","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":"     * @param tasks TaskList to unmark from.","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"ongzhili"},"content":"    public UnMarkCommand(int idx, TaskList tasks) {","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"ongzhili"},"content":"        this.taskList \u003d tasks;","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"ongzhili"},"content":"        this.idx \u003d idx;","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"ongzhili"},"content":"    @Override","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"ongzhili"},"content":"    public boolean run() {","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"ongzhili"},"content":"        assert idx \u003e 0 : \"index should be non-negative and non-zero\";","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"ongzhili"},"content":"        assert idx \u003c\u003d taskList.size() : \"index should be within the bound of task list\";","lastModifiedDate":"2024-02-13"},{"lineNumber":27,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":28,"author":{"gitId":"ongzhili"},"content":"        taskList.unMark(idx);","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"ongzhili"},"content":"        return true;","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":31,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"ongzhili":31}},{"path":"src/main/java/lamball/exception/DuplicateEntryException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"package lamball.exception;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":" * Exception class for duplicate entries in the list.","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":"public class DuplicateEntryException extends Exception {","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":"    public DuplicateEntryException(String msg) {","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"        super(msg);","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"ongzhili":10}},{"path":"src/main/java/lamball/exception/InvalidDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"package lamball.exception;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":" * Exception class for","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"public class InvalidDateException extends DateTimeException {","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"    public InvalidDateException(String msg) {","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":"        super(msg);","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"ongzhili":13}},{"path":"src/main/java/lamball/exception/LamballParseException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"package lamball.exception;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":" * An exception that is thrown when the user inputs invalid commands.","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":" *","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":" * @author ongzhili","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"public class LamballParseException extends Exception {","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"     * Constructor for Lamball parse exception.","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":"     * @param message Error message.","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":"    public LamballParseException(String message) {","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":"        super(message);","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"ongzhili":17}},{"path":"src/main/java/lamball/exception/StorageException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"package lamball.exception;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"/**","lastModifiedDate":"2024-02-21"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":" * Storage exception class for file read/write-related issues","lastModifiedDate":"2024-02-21"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":" */","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":"public class StorageException extends Exception {","lastModifiedDate":"2024-02-21"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"     * Constructor for Storage exception","lastModifiedDate":"2024-02-21"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":"     * @param msg Message to show user.","lastModifiedDate":"2024-02-21"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":"    public StorageException(String msg) {","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":"        super(msg);","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-02-21"}],"authorContributionMap":{"ongzhili":16}},{"path":"src/main/java/lamball/memo/Memo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"package lamball.memo;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"import java.util.Date;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":"/**","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":" * Basic Memo class","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":" */","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"public class Memo {","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"    private String content;","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":"    private Date lastEdited;","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":"     * Constructor for a memo.","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":"     * @param content Text content of the memo.","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"ongzhili"},"content":"    public Memo(String content) {","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"ongzhili"},"content":"        this.content \u003d content;","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"ongzhili"},"content":"        this.lastEdited \u003d new Date();","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"ongzhili"},"content":"    @Override","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"ongzhili"},"content":"    public String toString() {","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"ongzhili"},"content":"        return this.content;","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"ongzhili":27}},{"path":"src/main/java/lamball/memo/MemoList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"package lamball.memo;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":"import lamball.Lamball;","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":"import lamball.Storage;","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"/**","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":" * Class to manage memos.","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":" */","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":"public class MemoList {","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":"    private ArrayList\u003cMemo\u003e memos;","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":"    private Lamball lamb;","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":"     * Constructor for Memo List.","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"ongzhili"},"content":"    public MemoList(Lamball lamb) {","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"ongzhili"},"content":"        this.lamb \u003d lamb;","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"ongzhili"},"content":"        this.memos \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"ongzhili"},"content":"     * Returns size of task list.","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"ongzhili"},"content":"     * @return Intger value of size of task list.","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"ongzhili"},"content":"    public int size() {","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"ongzhili"},"content":"        return this.memos.size();","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":33,"author":{"gitId":"ongzhili"},"content":"     * Adds a memo to the list","lastModifiedDate":"2024-02-14"},{"lineNumber":34,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":35,"author":{"gitId":"ongzhili"},"content":"     * @param mem Memo to add.","lastModifiedDate":"2024-02-14"},{"lineNumber":36,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":37,"author":{"gitId":"ongzhili"},"content":"    public void addMemo(Memo mem, boolean isInit) {","lastModifiedDate":"2024-02-14"},{"lineNumber":38,"author":{"gitId":"ongzhili"},"content":"        memos.add(mem);","lastModifiedDate":"2024-02-14"},{"lineNumber":39,"author":{"gitId":"ongzhili"},"content":"        lamb.updateLastDoneTask(\"Added memo\");","lastModifiedDate":"2024-02-14"},{"lineNumber":40,"author":{"gitId":"ongzhili"},"content":"        if (!isInit) {","lastModifiedDate":"2024-02-14"},{"lineNumber":41,"author":{"gitId":"ongzhili"},"content":"            Storage.writeToFile(\"/memo.txt\", mem.toString());","lastModifiedDate":"2024-02-14"},{"lineNumber":42,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":43,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":44,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":45,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":46,"author":{"gitId":"ongzhili"},"content":"     * Removes a memo from list","lastModifiedDate":"2024-02-14"},{"lineNumber":47,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":48,"author":{"gitId":"ongzhili"},"content":"     * @param idx Index of memo to delete","lastModifiedDate":"2024-02-14"},{"lineNumber":49,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":50,"author":{"gitId":"ongzhili"},"content":"    public void delMemo(int idx) {","lastModifiedDate":"2024-02-14"},{"lineNumber":51,"author":{"gitId":"ongzhili"},"content":"        memos.remove(idx);","lastModifiedDate":"2024-02-14"},{"lineNumber":52,"author":{"gitId":"ongzhili"},"content":"        lamb.updateLastDoneTask(\"Removed memo at index \" + idx);","lastModifiedDate":"2024-02-14"},{"lineNumber":53,"author":{"gitId":"ongzhili"},"content":"        Storage.deleteLine(idx);","lastModifiedDate":"2024-02-14"},{"lineNumber":54,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":55,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":56,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":57,"author":{"gitId":"ongzhili"},"content":"     * Removes all memos from list","lastModifiedDate":"2024-02-14"},{"lineNumber":58,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":59,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":60,"author":{"gitId":"ongzhili"},"content":"    public void clearMemos() {","lastModifiedDate":"2024-02-14"},{"lineNumber":61,"author":{"gitId":"ongzhili"},"content":"        memos \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-14"},{"lineNumber":62,"author":{"gitId":"ongzhili"},"content":"        lamb.updateLastDoneTask(\"Cleared memos\");","lastModifiedDate":"2024-02-14"},{"lineNumber":63,"author":{"gitId":"ongzhili"},"content":"        Storage.deleteAllLines(\"/memo.txt\");","lastModifiedDate":"2024-02-14"},{"lineNumber":64,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":65,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":66,"author":{"gitId":"ongzhili"},"content":"    private void printMemos(ArrayList\u003cMemo\u003e lst) {","lastModifiedDate":"2024-02-14"},{"lineNumber":67,"author":{"gitId":"ongzhili"},"content":"        String listStr \u003d \"Here aaaaare the memos in your list:\";","lastModifiedDate":"2024-02-14"},{"lineNumber":68,"author":{"gitId":"ongzhili"},"content":"        for (int i \u003d 0; i \u003c lst.size(); i++) {","lastModifiedDate":"2024-02-14"},{"lineNumber":69,"author":{"gitId":"ongzhili"},"content":"            listStr +\u003d \"\\n    \" + (i + 1) + \". \" + lst.get(i).toString() + \"\";","lastModifiedDate":"2024-02-14"},{"lineNumber":70,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":71,"author":{"gitId":"ongzhili"},"content":"        lamb.updateLastDoneTask(listStr);","lastModifiedDate":"2024-02-14"},{"lineNumber":72,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":73,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":74,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":75,"author":{"gitId":"ongzhili"},"content":"     * Default list printing operation.","lastModifiedDate":"2024-02-14"},{"lineNumber":76,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":77,"author":{"gitId":"ongzhili"},"content":"     * @return Boolean to continue keeping the bot running.","lastModifiedDate":"2024-02-14"},{"lineNumber":78,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":79,"author":{"gitId":"ongzhili"},"content":"    public boolean printMemos() {","lastModifiedDate":"2024-02-14"},{"lineNumber":80,"author":{"gitId":"ongzhili"},"content":"        printMemos(this.memos);","lastModifiedDate":"2024-02-14"},{"lineNumber":81,"author":{"gitId":"ongzhili"},"content":"        return true;","lastModifiedDate":"2024-02-14"},{"lineNumber":82,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":83,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":84,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"ongzhili":84}},{"path":"src/main/java/lamball/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"package lamball.task;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":"import lamball.exception.InvalidDateException;","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":" * Deadline class, an extension of the Task class that contains a due date.","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":" *","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":" * @author ongzhili","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":"    protected LocalDate by;","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"ongzhili"},"content":"     * Constructor for Deadline task.","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"ongzhili"},"content":"     * @param description Name of task.","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"ongzhili"},"content":"     * @param by due date of deadline","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"ongzhili"},"content":"     * @throws DateTimeParseException if invalid date is provided.","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"ongzhili"},"content":"    public Deadline(String description, String by) throws DateTimeParseException {","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"ongzhili"},"content":"        super(description);","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"ongzhili"},"content":"        LocalDate dateToAdd \u003d LocalDate.parse(by);","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"ongzhili"},"content":"        if (dateToAdd.isBefore(LocalDate.now())) {","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"ongzhili"},"content":"            throw new InvalidDateException(\"Parsed date is in the paaast.\");","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"ongzhili"},"content":"        this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"ongzhili"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"ongzhili"},"content":"    public String command() {","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"ongzhili"},"content":"        return \"deadline \" + description + \" /by \" + by;","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"ongzhili"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"ongzhili"},"content":"    public String toString() {","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"ongzhili"},"content":"        String formattedDate \u003d by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"ongzhili"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + formattedDate + \")\";","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"ongzhili":46}},{"path":"src/main/java/lamball/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"package lamball.task;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":"import lamball.exception.InvalidDateException;","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":" * Event class, an extension of the Task class that has a duration, represented by","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":" * from and to.","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":" *","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":" * @author ongzhili","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":"    protected LocalDate from;","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":"    protected LocalDate to;","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"ongzhili"},"content":"     * Constructor for Event task.","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"ongzhili"},"content":"     * @param description Name of task.","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"ongzhili"},"content":"     * @param from Start date of event.","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"ongzhili"},"content":"     * @param to End date of event.","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"ongzhili"},"content":"     * @throws DateTimeParseException if invalid date is provided.","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"ongzhili"},"content":"    public Event(String description, String from, String to) throws DateTimeParseException {","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"ongzhili"},"content":"        super(description);","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"ongzhili"},"content":"        LocalDate parsedFrom \u003d LocalDate.parse(from);","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"ongzhili"},"content":"        LocalDate parsedTo \u003d LocalDate.parse(to);","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"ongzhili"},"content":"        if (parsedFrom.isBefore(LocalDate.now()) || parsedTo.isBefore(LocalDate.now())) {","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"ongzhili"},"content":"            throw new InvalidDateException(\"Parsed date is in the paaast.\");","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"ongzhili"},"content":"        } else if (parsedTo.isBefore(parsedFrom)) {","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"ongzhili"},"content":"            throw new InvalidDateException(\"By should be aaafter from...\");","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"ongzhili"},"content":"        this.from \u003d parsedFrom;","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"ongzhili"},"content":"        this.to \u003d parsedTo;","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"ongzhili"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"ongzhili"},"content":"    public String command() {","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"ongzhili"},"content":"        return \"event \" + description + \" /from \" + from + \" /to \" + to;","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"ongzhili"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"ongzhili"},"content":"    public String toString() {","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"ongzhili"},"content":"        String formattedFrom \u003d from.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"ongzhili"},"content":"        String formattedTo \u003d to.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"ongzhili"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + formattedFrom + \" to: \" + formattedTo + \")\";","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"ongzhili":52}},{"path":"src/main/java/lamball/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"package lamball.task;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":" * Task class, the base unit of the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":" *","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":" * @author ongzhili","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"public abstract class Task {","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"    protected String description;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":"     * Constructor for Task.","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":"     * @param description Name of task.","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"ongzhili"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"ongzhili"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"ongzhili"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"ongzhili"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"ongzhili"},"content":"        return isDone ? \"X\" : \" \";","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"ongzhili"},"content":"    public void mark() {","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"ongzhili"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"ongzhili"},"content":"    public void unMark() {","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"ongzhili"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"ongzhili"},"content":"     * Returns task in command format for chatbot use.","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"ongzhili"},"content":"     * @return Task represented in command form.","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"ongzhili"},"content":"    public abstract String command();","lastModifiedDate":"2024-02-19"},{"lineNumber":41,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"ongzhili"},"content":"     * Returns string representation of task for list printing","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"ongzhili"},"content":"     * @return String task represented in printing format","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"ongzhili"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"ongzhili"},"content":"    public String toString() {","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"ongzhili"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"ongzhili"},"content":"     * Checks if the task description contains the given string.","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"ongzhili"},"content":"     * @param compare String used for comparison.","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"ongzhili"},"content":"     * @return Whether the given string is a sub-sequence of the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"ongzhili"},"content":"    public boolean containing(String compare) {","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"ongzhili"},"content":"        return description.contains(compare);","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":61,"author":{"gitId":"ongzhili"},"content":"    @Override","lastModifiedDate":"2024-02-19"},{"lineNumber":62,"author":{"gitId":"ongzhili"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2024-02-19"},{"lineNumber":63,"author":{"gitId":"ongzhili"},"content":"        if (o instanceof Task) {","lastModifiedDate":"2024-02-19"},{"lineNumber":64,"author":{"gitId":"ongzhili"},"content":"            return ((Task) o).description.compareTo(this.description) \u003d\u003d 0;","lastModifiedDate":"2024-02-19"},{"lineNumber":65,"author":{"gitId":"ongzhili"},"content":"        } else {","lastModifiedDate":"2024-02-19"},{"lineNumber":66,"author":{"gitId":"ongzhili"},"content":"            return false;","lastModifiedDate":"2024-02-19"},{"lineNumber":67,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":68,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":69,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":70,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"ongzhili":70}},{"path":"src/main/java/lamball/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"package lamball.task;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":" * ToDo class, an extension of the Task class.","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":" *","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":" * @author ongzhili","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":"     * Constructor for ToDo task.","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":"     * @param description Name of todo task.","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":"        super(description);","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"ongzhili"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"ongzhili"},"content":"    public String command() {","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"ongzhili"},"content":"        return \"todo \" + description;","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"ongzhili"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"ongzhili"},"content":"    public String toString() {","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"ongzhili"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"ongzhili":27}},{"path":"src/main/java/lamball/ui/CommandTextField.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"package lamball.ui;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"import static javafx.application.Platform.exit;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":"import lamball.Lamball;","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":" * Command text field class","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":"public class CommandTextField extends HBox {","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":"    private static final String EXIT_TEXT \u003d \"     See you again!\\n\";","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"ongzhili"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"ongzhili"},"content":"    private Image lamballImg \u003d new Image(this.getClass().getResourceAsStream(\"/images/Lamball.png\"));","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"ongzhili"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"ongzhili"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"ongzhili"},"content":"    private ScrollableList chatOutputLocation;","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"ongzhili"},"content":"    private Lamball lamb;","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"ongzhili"},"content":"     * Constructor for Command Text field.","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"ongzhili"},"content":"    public CommandTextField(ScrollableList output, Lamball lamb) {","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"ongzhili"},"content":"        this.userInput \u003d new TextField();","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"ongzhili"},"content":"        this.sendButton \u003d new Button();","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"ongzhili"},"content":"        this.chatOutputLocation \u003d output;","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"ongzhili"},"content":"        this.lamb \u003d lamb;","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"ongzhili"},"content":"        this.init();","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"ongzhili"},"content":"    private void init() {","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"ongzhili"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"ongzhili"},"content":"        userInput.setMinWidth(325.0);","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"ongzhili"},"content":"        sendButton.setText(\"Send\");","lastModifiedDate":"2024-02-19"},{"lineNumber":41,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"ongzhili"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2024-02-19"},{"lineNumber":43,"author":{"gitId":"ongzhili"},"content":"            handleUserInput();","lastModifiedDate":"2024-02-19"},{"lineNumber":44,"author":{"gitId":"ongzhili"},"content":"        });","lastModifiedDate":"2024-02-19"},{"lineNumber":45,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"ongzhili"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"ongzhili"},"content":"            handleUserInput();","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"ongzhili"},"content":"        });","lastModifiedDate":"2024-02-19"},{"lineNumber":49,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":50,"author":{"gitId":"ongzhili"},"content":"        this.getChildren().addAll(userInput, sendButton);","lastModifiedDate":"2024-02-19"},{"lineNumber":51,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":52,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":53,"author":{"gitId":"ongzhili"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-19"},{"lineNumber":54,"author":{"gitId":"ongzhili"},"content":"        Text userText \u003d new Text(userInput.getText());","lastModifiedDate":"2024-02-19"},{"lineNumber":55,"author":{"gitId":"ongzhili"},"content":"        Text lamballText \u003d new Text(lamb.getResponse(userInput.getText()));","lastModifiedDate":"2024-02-19"},{"lineNumber":56,"author":{"gitId":"ongzhili"},"content":"        chatOutputLocation.addToList(","lastModifiedDate":"2024-02-19"},{"lineNumber":57,"author":{"gitId":"ongzhili"},"content":"                DialogBox.getUserDialog(userText, new ImageView(user), 400),","lastModifiedDate":"2024-02-19"},{"lineNumber":58,"author":{"gitId":"ongzhili"},"content":"                DialogBox.getLamballDialog(lamballText, new ImageView(lamballImg), 400)","lastModifiedDate":"2024-02-19"},{"lineNumber":59,"author":{"gitId":"ongzhili"},"content":"        );","lastModifiedDate":"2024-02-19"},{"lineNumber":60,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":61,"author":{"gitId":"ongzhili"},"content":"        if (lamballText.getText() \u003d\u003d EXIT_TEXT) {","lastModifiedDate":"2024-02-19"},{"lineNumber":62,"author":{"gitId":"ongzhili"},"content":"            exit();","lastModifiedDate":"2024-02-19"},{"lineNumber":63,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":64,"author":{"gitId":"ongzhili"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-19"},{"lineNumber":65,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":66,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":67,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"ongzhili":67}},{"path":"src/main/java/lamball/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"package lamball.ui;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":"import javafx.scene.text.Font;","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":"import javafx.scene.text.FontWeight;","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"ongzhili"},"content":" * Class for Dialog box - usable for both user input and chatbot response.","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"ongzhili"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"ongzhili"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"ongzhili"},"content":"    private Text text;","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"ongzhili"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"ongzhili"},"content":"    private Number windowWidth;","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"ongzhili"},"content":"     * Private constructor for dialogbox.","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"ongzhili"},"content":"     * @param t Text component.","lastModifiedDate":"2024-02-21"},{"lineNumber":32,"author":{"gitId":"ongzhili"},"content":"     * @param iv Image component.","lastModifiedDate":"2024-02-21"},{"lineNumber":33,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"ongzhili"},"content":"    private DialogBox(Text t, ImageView iv, Number windowWidth) {","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"ongzhili"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"ongzhili"},"content":"        text \u003d t;","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"ongzhili"},"content":"        displayPicture \u003d iv;","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"ongzhili"},"content":"        text.setFill(Color.rgb(255, 255, 255));","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"ongzhili"},"content":"        text.setWrappingWidth(windowWidth.doubleValue() - 150);","lastModifiedDate":"2024-02-19"},{"lineNumber":41,"author":{"gitId":"ongzhili"},"content":"        text.setFont(Font.font(\"Arial\", FontWeight.BOLD, 12));","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"ongzhili"},"content":"        // Create a Circle as a clip","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"ongzhili"},"content":"        Circle clip \u003d new Circle(50);","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"ongzhili"},"content":"        clip.setCenterX(50);","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"ongzhili"},"content":"        clip.setCenterY(50);","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"ongzhili"},"content":"        // Set the circle clip to the ImageView","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"ongzhili"},"content":"        displayPicture.setClip(clip);","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"ongzhili"},"content":"        displayPicture.setFitWidth(100.0);","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"ongzhili"},"content":"        displayPicture.setFitHeight(100.0);","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"ongzhili"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"ongzhili"},"content":"        this.getChildren().addAll(text, displayPicture);","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"ongzhili"},"content":"        this.setPadding(new Insets(10));","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"ongzhili"},"content":"        this.setSpacing(5);","lastModifiedDate":"2024-02-19"},{"lineNumber":58,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":60,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"ongzhili"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":63,"author":{"gitId":"ongzhili"},"content":"    private void flip() {","lastModifiedDate":"2024-02-05"},{"lineNumber":64,"author":{"gitId":"ongzhili"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-05"},{"lineNumber":65,"author":{"gitId":"ongzhili"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-05"},{"lineNumber":66,"author":{"gitId":"ongzhili"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2024-02-05"},{"lineNumber":67,"author":{"gitId":"ongzhili"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2024-02-05"},{"lineNumber":68,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":69,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":70,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":71,"author":{"gitId":"ongzhili"},"content":"     * Returns a dialog box simulating a user talking.","lastModifiedDate":"2024-02-05"},{"lineNumber":72,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":73,"author":{"gitId":"ongzhili"},"content":"     * @param t Text label","lastModifiedDate":"2024-02-19"},{"lineNumber":74,"author":{"gitId":"ongzhili"},"content":"     * @param iv Imageview of desired image.","lastModifiedDate":"2024-02-05"},{"lineNumber":75,"author":{"gitId":"ongzhili"},"content":"     * @return Instance of user dialog.","lastModifiedDate":"2024-02-05"},{"lineNumber":76,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":77,"author":{"gitId":"ongzhili"},"content":"    public static DialogBox getUserDialog(Text t, ImageView iv, Number windowWidth) {","lastModifiedDate":"2024-02-19"},{"lineNumber":78,"author":{"gitId":"ongzhili"},"content":"        var db \u003d new DialogBox(t, iv, windowWidth);","lastModifiedDate":"2024-02-19"},{"lineNumber":79,"author":{"gitId":"ongzhili"},"content":"        Background bgUser \u003d new Background(new BackgroundFill(Color.rgb(50, 50, 50), null, null));","lastModifiedDate":"2024-02-19"},{"lineNumber":80,"author":{"gitId":"ongzhili"},"content":"        db.setBackground(bgUser);","lastModifiedDate":"2024-02-19"},{"lineNumber":81,"author":{"gitId":"ongzhili"},"content":"        db.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2024-02-19"},{"lineNumber":82,"author":{"gitId":"ongzhili"},"content":"        return db;","lastModifiedDate":"2024-02-19"},{"lineNumber":83,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":84,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":85,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":86,"author":{"gitId":"ongzhili"},"content":"     * Returns a dialog box simulating the chatbot\u0027s response.","lastModifiedDate":"2024-02-05"},{"lineNumber":87,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":88,"author":{"gitId":"ongzhili"},"content":"     * @param t Text label","lastModifiedDate":"2024-02-19"},{"lineNumber":89,"author":{"gitId":"ongzhili"},"content":"     * @param iv Imageview of desired image.","lastModifiedDate":"2024-02-05"},{"lineNumber":90,"author":{"gitId":"ongzhili"},"content":"     * @return Instance of chatbot dialog.","lastModifiedDate":"2024-02-05"},{"lineNumber":91,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":92,"author":{"gitId":"ongzhili"},"content":"    public static DialogBox getLamballDialog(Text t, ImageView iv, Number windowWidth) {","lastModifiedDate":"2024-02-19"},{"lineNumber":93,"author":{"gitId":"ongzhili"},"content":"        var db \u003d new DialogBox(t, iv, windowWidth);","lastModifiedDate":"2024-02-19"},{"lineNumber":94,"author":{"gitId":"ongzhili"},"content":"        Background bgLamball \u003d new Background(new BackgroundFill(Color.rgb(80, 80, 80), null, null));","lastModifiedDate":"2024-02-19"},{"lineNumber":95,"author":{"gitId":"ongzhili"},"content":"        db.setBackground(bgLamball);","lastModifiedDate":"2024-02-19"},{"lineNumber":96,"author":{"gitId":"ongzhili"},"content":"        db.flip();","lastModifiedDate":"2024-02-05"},{"lineNumber":97,"author":{"gitId":"ongzhili"},"content":"        return db;","lastModifiedDate":"2024-02-05"},{"lineNumber":98,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":99,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":100,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":101,"author":{"gitId":"ongzhili"},"content":"    public void setWidth(Number width) {","lastModifiedDate":"2024-02-19"},{"lineNumber":102,"author":{"gitId":"ongzhili"},"content":"        windowWidth \u003d width;","lastModifiedDate":"2024-02-19"},{"lineNumber":103,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":104,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"ongzhili":104}},{"path":"src/main/java/lamball/ui/ScrollableList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"package lamball.ui;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":" * Scrollable List component for the UI","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":"public class ScrollableList extends VBox {","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":"    private VBox dialogueContainer;","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":"     * Constructor for ScrollableList.","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"ongzhili"},"content":"    public ScrollableList() {","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"ongzhili"},"content":"        this.scrollPane \u003d new ScrollPane();","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"ongzhili"},"content":"        this.dialogueContainer \u003d new VBox();","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"ongzhili"},"content":"        this.scrollPane.setContent(dialogueContainer);","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"ongzhili"},"content":"        this.init();","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"ongzhili"},"content":"    private void init() {","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"ongzhili"},"content":"        this.scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"ongzhili"},"content":"        this.scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"ongzhili"},"content":"        this.scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"ongzhili"},"content":"        this.scrollPane.setVvalue(1.0);","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"ongzhili"},"content":"        this.scrollPane.setFitToWidth(true);","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"ongzhili"},"content":"        this.dialogueContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"ongzhili"},"content":"        this.dialogueContainer.heightProperty().addListener((observable) -\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"ongzhili"},"content":"                scrollPane.setVvalue(1.0));","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"ongzhili"},"content":"     * Adds the nodes to the scrollable list.","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"ongzhili"},"content":"     * @param n Nodes to add.","lastModifiedDate":"2024-02-19"},{"lineNumber":41,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"ongzhili"},"content":"    public void addToList(Node... n) {","lastModifiedDate":"2024-02-19"},{"lineNumber":43,"author":{"gitId":"ongzhili"},"content":"        this.dialogueContainer.getChildren().addAll(n);","lastModifiedDate":"2024-02-19"},{"lineNumber":44,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":45,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"ongzhili"},"content":"     * Returns the given container.","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":49,"author":{"gitId":"ongzhili"},"content":"     * @return Dialogue container instance","lastModifiedDate":"2024-02-19"},{"lineNumber":50,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":51,"author":{"gitId":"ongzhili"},"content":"    public VBox getContainer() {","lastModifiedDate":"2024-02-19"},{"lineNumber":52,"author":{"gitId":"ongzhili"},"content":"        return this.dialogueContainer;","lastModifiedDate":"2024-02-19"},{"lineNumber":53,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":54,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":55,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":56,"author":{"gitId":"ongzhili"},"content":"     * Returns the given scrollpane.","lastModifiedDate":"2024-02-19"},{"lineNumber":57,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":58,"author":{"gitId":"ongzhili"},"content":"     * @return Scrollpane instance","lastModifiedDate":"2024-02-19"},{"lineNumber":59,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":60,"author":{"gitId":"ongzhili"},"content":"    public ScrollPane getPane() {","lastModifiedDate":"2024-02-19"},{"lineNumber":61,"author":{"gitId":"ongzhili"},"content":"        return this.scrollPane;","lastModifiedDate":"2024-02-19"},{"lineNumber":62,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":63,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":64,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"ongzhili":64}},{"path":"src/main/java/lamball/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"package lamball.ui;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":" * A class that primarily responsible for chatbot responses.","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":" *","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":" * @author ongzhili","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"public class Ui {","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"    private static final String TAB_SPACES \u003d \"\";","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":"    private static final String WELCOME_MESSAGE \u003d","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":"            \"Hello! I\u0027m Lamball, your helpful sheep!\\n\\n\"","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":"                    + \"Whaaat can I do for you?\\n\";","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":"    private static final String GOODBYE_MESSAGE \u003d","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":"        \"     See you again!\\n\";","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"ongzhili"},"content":"     * Constructor for Ui class.","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"ongzhili"},"content":"    public Ui() {","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"ongzhili"},"content":"     * Prints a greeting message.","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"ongzhili"},"content":"     * @return Welcome message, for GUI processing.","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"ongzhili"},"content":"    public String greetingMessage() {","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"ongzhili"},"content":"        System.out.println(WELCOME_MESSAGE);","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"ongzhili"},"content":"        return WELCOME_MESSAGE;","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"ongzhili"},"content":"     * Prints a goodbye message.","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"ongzhili"},"content":"     * @return Goodbye message, for GUI processing.","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"ongzhili"},"content":"    public String goodbyeMessage() {","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"ongzhili"},"content":"        System.out.println(GOODBYE_MESSAGE);","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"ongzhili"},"content":"        return GOODBYE_MESSAGE;","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"ongzhili"},"content":"     * Formats the error message, then prints it.","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"ongzhili"},"content":"     * @param e Exception that was given.","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"ongzhili"},"content":"     * @return Formatted error message for GUI processing.","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"ongzhili"},"content":"    public String displayError(Exception e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"ongzhili"},"content":"        String returnVal \u003d TAB_SPACES + e.getMessage() + \"\\n\";","lastModifiedDate":"2024-02-13"},{"lineNumber":54,"author":{"gitId":"ongzhili"},"content":"        System.out.println(returnVal);","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"ongzhili"},"content":"        return returnVal;","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"ongzhili"},"content":"     * Formats the action done, then prints it.","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"ongzhili"},"content":"     * @param msg Action that was performed.","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"ongzhili"},"content":"     * @return Formatted action for GUI processing.","lastModifiedDate":"2024-02-05"},{"lineNumber":63,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"ongzhili"},"content":"    public String displayAction(String msg) {","lastModifiedDate":"2024-02-05"},{"lineNumber":65,"author":{"gitId":"ongzhili"},"content":"        String returnVal \u003d TAB_SPACES + msg + \"\\n\";","lastModifiedDate":"2024-02-13"},{"lineNumber":66,"author":{"gitId":"ongzhili"},"content":"        System.out.println(returnVal);","lastModifiedDate":"2024-02-05"},{"lineNumber":67,"author":{"gitId":"ongzhili"},"content":"        return returnVal;","lastModifiedDate":"2024-02-05"},{"lineNumber":68,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":69,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":70,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":71,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":72,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"ongzhili":72}},{"path":"src/test/java/lamball/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"package lamball;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"import lamball.command.ByeCommand;","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":"import lamball.command.Command;","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":"import lamball.command.PrintListCommand;","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":"import lamball.exception.LamballParseException;","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":"import lamball.memo.MemoList;","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":"public class ParserTest {","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"ongzhili"},"content":"    public void byeParseTest() {","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"ongzhili"},"content":"        Lamball testLamb \u003d new Lamball();","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"ongzhili"},"content":"        TaskList tst \u003d new TaskList(testLamb);","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"ongzhili"},"content":"        MemoList memTst \u003d new MemoList(testLamb);","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"ongzhili"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"ongzhili"},"content":"            Command comd \u003d Parser.parse(\"bye\", tst, memTst, false);","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"ongzhili"},"content":"            assertTrue(comd instanceof ByeCommand);","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"ongzhili"},"content":"        } catch (LamballParseException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"ongzhili"},"content":"            fail();","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"ongzhili"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"ongzhili"},"content":"    public void listParseTest() {","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"ongzhili"},"content":"        Lamball testLamb \u003d new Lamball();","lastModifiedDate":"2024-02-14"},{"lineNumber":33,"author":{"gitId":"ongzhili"},"content":"        TaskList tst \u003d new TaskList(testLamb);","lastModifiedDate":"2024-02-14"},{"lineNumber":34,"author":{"gitId":"ongzhili"},"content":"        MemoList memTst \u003d new MemoList(testLamb);","lastModifiedDate":"2024-02-14"},{"lineNumber":35,"author":{"gitId":"ongzhili"},"content":"        try {","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"ongzhili"},"content":"            Command comd \u003d Parser.parse(\"list\", tst, memTst, false);","lastModifiedDate":"2024-02-14"},{"lineNumber":37,"author":{"gitId":"ongzhili"},"content":"            assertTrue(comd instanceof PrintListCommand);","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"ongzhili"},"content":"        } catch (LamballParseException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":39,"author":{"gitId":"ongzhili"},"content":"            fail();","lastModifiedDate":"2024-02-12"},{"lineNumber":40,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"ongzhili"},"content":"    @Test","lastModifiedDate":"2024-02-12"},{"lineNumber":43,"author":{"gitId":"ongzhili"},"content":"    public void byeParseFailTest() {","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"ongzhili"},"content":"        Lamball testLamb \u003d new Lamball();","lastModifiedDate":"2024-02-14"},{"lineNumber":45,"author":{"gitId":"ongzhili"},"content":"        TaskList tst \u003d new TaskList(testLamb);","lastModifiedDate":"2024-02-14"},{"lineNumber":46,"author":{"gitId":"ongzhili"},"content":"        MemoList memTst \u003d new MemoList(testLamb);","lastModifiedDate":"2024-02-14"},{"lineNumber":47,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":48,"author":{"gitId":"ongzhili"},"content":"        LamballParseException thrown \u003d Assertions.assertThrows(LamballParseException.class, () -\u003e {","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"ongzhili"},"content":"            Parser.parse(\"bye 123456\", tst, memTst, false);","lastModifiedDate":"2024-02-14"},{"lineNumber":50,"author":{"gitId":"ongzhili"},"content":"        });","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"ongzhili"},"content":"        assertEquals(\"Do not type anything after \\\"bye\\\"\", thrown.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"ongzhili"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"ongzhili"},"content":"    public void listParseFailTest() {","lastModifiedDate":"2024-02-12"},{"lineNumber":56,"author":{"gitId":"ongzhili"},"content":"        Lamball testLamb \u003d new Lamball();","lastModifiedDate":"2024-02-14"},{"lineNumber":57,"author":{"gitId":"ongzhili"},"content":"        TaskList tst \u003d new TaskList(testLamb);","lastModifiedDate":"2024-02-14"},{"lineNumber":58,"author":{"gitId":"ongzhili"},"content":"        MemoList memTst \u003d new MemoList(testLamb);","lastModifiedDate":"2024-02-14"},{"lineNumber":59,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":60,"author":{"gitId":"ongzhili"},"content":"        LamballParseException thrown \u003d Assertions.assertThrows(LamballParseException.class, () -\u003e {","lastModifiedDate":"2024-02-12"},{"lineNumber":61,"author":{"gitId":"ongzhili"},"content":"            Parser.parse(\"list 123456\", tst, memTst, false);","lastModifiedDate":"2024-02-14"},{"lineNumber":62,"author":{"gitId":"ongzhili"},"content":"        });","lastModifiedDate":"2024-02-12"},{"lineNumber":63,"author":{"gitId":"ongzhili"},"content":"        assertEquals(\"Do not type anything after \\\"list\\\"\", thrown.getMessage());","lastModifiedDate":"2024-02-12"},{"lineNumber":64,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":65,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":66,"author":{"gitId":"ongzhili"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"ongzhili"},"content":"    public void markParseFailTest() {","lastModifiedDate":"2024-02-12"},{"lineNumber":68,"author":{"gitId":"ongzhili"},"content":"        Lamball testLamb \u003d new Lamball();","lastModifiedDate":"2024-02-14"},{"lineNumber":69,"author":{"gitId":"ongzhili"},"content":"        TaskList tst \u003d new TaskList(testLamb);","lastModifiedDate":"2024-02-14"},{"lineNumber":70,"author":{"gitId":"ongzhili"},"content":"        MemoList memTst \u003d new MemoList(testLamb);","lastModifiedDate":"2024-02-14"},{"lineNumber":71,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":72,"author":{"gitId":"ongzhili"},"content":"        LamballParseException thrown \u003d Assertions.assertThrows(LamballParseException.class, () -\u003e {","lastModifiedDate":"2024-02-12"},{"lineNumber":73,"author":{"gitId":"ongzhili"},"content":"            Parser.parse(\"mark 1 1 1 1 1 1\", tst, memTst, false);","lastModifiedDate":"2024-02-14"},{"lineNumber":74,"author":{"gitId":"ongzhili"},"content":"        });","lastModifiedDate":"2024-02-12"},{"lineNumber":75,"author":{"gitId":"ongzhili"},"content":"        assertEquals(\"Invalid number, baa.\", thrown.getMessage());","lastModifiedDate":"2024-02-12"},{"lineNumber":76,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":77,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":78,"author":{"gitId":"ongzhili"},"content":"    @Test","lastModifiedDate":"2024-02-12"},{"lineNumber":79,"author":{"gitId":"ongzhili"},"content":"    public void unmarkParseFailTest() {","lastModifiedDate":"2024-02-12"},{"lineNumber":80,"author":{"gitId":"ongzhili"},"content":"        Lamball testLamb \u003d new Lamball();","lastModifiedDate":"2024-02-14"},{"lineNumber":81,"author":{"gitId":"ongzhili"},"content":"        TaskList tst \u003d new TaskList(testLamb);","lastModifiedDate":"2024-02-14"},{"lineNumber":82,"author":{"gitId":"ongzhili"},"content":"        MemoList memTst \u003d new MemoList(testLamb);","lastModifiedDate":"2024-02-14"},{"lineNumber":83,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":84,"author":{"gitId":"ongzhili"},"content":"        LamballParseException thrown \u003d Assertions.assertThrows(LamballParseException.class, () -\u003e {","lastModifiedDate":"2024-02-12"},{"lineNumber":85,"author":{"gitId":"ongzhili"},"content":"            Parser.parse(\"unmark 1 1 1 1 1 1\", tst, memTst, false);","lastModifiedDate":"2024-02-14"},{"lineNumber":86,"author":{"gitId":"ongzhili"},"content":"        });","lastModifiedDate":"2024-02-12"},{"lineNumber":87,"author":{"gitId":"ongzhili"},"content":"        assertEquals(\"Invalid number, baa.\", thrown.getMessage());","lastModifiedDate":"2024-02-12"},{"lineNumber":88,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":89,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":90,"author":{"gitId":"ongzhili"},"content":"    @Test","lastModifiedDate":"2024-02-12"},{"lineNumber":91,"author":{"gitId":"ongzhili"},"content":"    public void deleteParseFailTest() {","lastModifiedDate":"2024-02-12"},{"lineNumber":92,"author":{"gitId":"ongzhili"},"content":"        Lamball testLamb \u003d new Lamball();","lastModifiedDate":"2024-02-14"},{"lineNumber":93,"author":{"gitId":"ongzhili"},"content":"        TaskList tst \u003d new TaskList(testLamb);","lastModifiedDate":"2024-02-14"},{"lineNumber":94,"author":{"gitId":"ongzhili"},"content":"        MemoList memTst \u003d new MemoList(testLamb);","lastModifiedDate":"2024-02-14"},{"lineNumber":95,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":96,"author":{"gitId":"ongzhili"},"content":"        LamballParseException thrown \u003d Assertions.assertThrows(LamballParseException.class, () -\u003e {","lastModifiedDate":"2024-02-12"},{"lineNumber":97,"author":{"gitId":"ongzhili"},"content":"            Parser.parse(\"delete 1 1 1 1 1 1\", tst, memTst, false);","lastModifiedDate":"2024-02-14"},{"lineNumber":98,"author":{"gitId":"ongzhili"},"content":"        });","lastModifiedDate":"2024-02-12"},{"lineNumber":99,"author":{"gitId":"ongzhili"},"content":"        assertEquals(\"Invalid number, baa.\", thrown.getMessage());","lastModifiedDate":"2024-02-12"},{"lineNumber":100,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":101,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":102,"author":{"gitId":"ongzhili"},"content":"    @Test","lastModifiedDate":"2024-02-12"},{"lineNumber":103,"author":{"gitId":"ongzhili"},"content":"    public void taskParseFailTest() {","lastModifiedDate":"2024-02-12"},{"lineNumber":104,"author":{"gitId":"ongzhili"},"content":"        Lamball testLamb \u003d new Lamball();","lastModifiedDate":"2024-02-14"},{"lineNumber":105,"author":{"gitId":"ongzhili"},"content":"        TaskList tst \u003d new TaskList(testLamb);","lastModifiedDate":"2024-02-14"},{"lineNumber":106,"author":{"gitId":"ongzhili"},"content":"        MemoList memTst \u003d new MemoList(testLamb);","lastModifiedDate":"2024-02-14"},{"lineNumber":107,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":108,"author":{"gitId":"ongzhili"},"content":"        LamballParseException thrown \u003d Assertions.assertThrows(LamballParseException.class, () -\u003e {","lastModifiedDate":"2024-01-31"},{"lineNumber":109,"author":{"gitId":"ongzhili"},"content":"            Parser.parse(\"todo                            \", tst, memTst, false);","lastModifiedDate":"2024-02-14"},{"lineNumber":110,"author":{"gitId":"ongzhili"},"content":"        });","lastModifiedDate":"2024-01-31"},{"lineNumber":111,"author":{"gitId":"ongzhili"},"content":"        assertEquals(\"Your todo field is empty, baaaaka.\", thrown.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":112,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":113,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":114,"author":{"gitId":"ongzhili"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":115,"author":{"gitId":"ongzhili"},"content":"    public void invalidCommandParseTest() {","lastModifiedDate":"2024-01-31"},{"lineNumber":116,"author":{"gitId":"ongzhili"},"content":"        Lamball testLamb \u003d new Lamball();","lastModifiedDate":"2024-02-14"},{"lineNumber":117,"author":{"gitId":"ongzhili"},"content":"        TaskList tst \u003d new TaskList(testLamb);","lastModifiedDate":"2024-02-14"},{"lineNumber":118,"author":{"gitId":"ongzhili"},"content":"        MemoList memTst \u003d new MemoList(testLamb);","lastModifiedDate":"2024-02-14"},{"lineNumber":119,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":120,"author":{"gitId":"ongzhili"},"content":"        LamballParseException thrown \u003d Assertions.assertThrows(LamballParseException.class, () -\u003e {","lastModifiedDate":"2024-01-31"},{"lineNumber":121,"author":{"gitId":"ongzhili"},"content":"            Parser.parse(\"the quick brown fox jumps over the lazy dog\", tst, memTst, false);","lastModifiedDate":"2024-02-14"},{"lineNumber":122,"author":{"gitId":"ongzhili"},"content":"        });","lastModifiedDate":"2024-01-31"},{"lineNumber":123,"author":{"gitId":"ongzhili"},"content":"        assertEquals(\"Sorry, I don\u0027t understaaaaaand your commaaaaand, baa. :(\", thrown.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":124,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":125,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"ongzhili":125}},{"path":"src/test/java/lamball/SanityTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"package lamball;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":"public class SanityTest {","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"    public void sanityTest() {","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"ongzhili":11}},{"path":"src/test/java/lamball/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"package lamball.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"public class DeadlineTest {","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":"    public void deadlineCommandTest() {","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":"        // Command Test","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":"        assertEquals(new Deadline(\"TEST\", \"2099-01-01\").command(), \"deadline TEST /by 2099-01-01\");","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":"    @Test","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"ongzhili"},"content":"    public void deadlineStringTest() {","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"ongzhili"},"content":"        // String Test","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"ongzhili"},"content":"        assertEquals(new Deadline(\"TEST\", \"2099-01-01\").toString(), \"[D][ ] TEST (by: Jan 1 2099)\");","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"ongzhili"},"content":"    @Test","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"ongzhili"},"content":"    public void deadlineMarkTest() {","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"ongzhili"},"content":"        // Mark test","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"ongzhili"},"content":"        Deadline test \u003d new Deadline(\"TEST\", \"2099-01-01\");","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"ongzhili"},"content":"        test.mark();","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"ongzhili"},"content":"        assertEquals(test.toString(), \"[D][X] TEST (by: Jan 1 2099)\");","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"ongzhili"},"content":"        // Unmark test","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"ongzhili"},"content":"        test.unMark();","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"ongzhili"},"content":"        assertEquals(test.toString(), \"[D][ ] TEST (by: Jan 1 2099)\");","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"ongzhili"},"content":"    @Test","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"ongzhili"},"content":"    public void deadlineExceptionTest() {","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"ongzhili"},"content":"        // DateTimeParseException test","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"ongzhili"},"content":"        DateTimeParseException thrown \u003d Assertions.assertThrows(DateTimeParseException.class, () -\u003e {","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"ongzhili"},"content":"            Deadline test2 \u003d new Deadline(\"TEST\", \"abcdefg\");","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"ongzhili"},"content":"        });","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"ongzhili"},"content":"        // Error Message test","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"ongzhili"},"content":"        assertEquals(\"Text \u0027abcdefg\u0027 could not be parsed at index 0\", thrown.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"ongzhili":46}},{"path":"src/test/java/lamball/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"package lamball.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"public class EventTest {","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":"    public void eventCommandTest() {","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":"        // Command Test","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":"        assertEquals(new Event(\"TEST\", \"2099-01-01\", \"2099-01-01\").command(), \"event TEST \"","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":"                + \"/from 2099-01-01 /to 2099-01-01\");","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"ongzhili"},"content":"    @Test","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"ongzhili"},"content":"    public void eventStringTest() {","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"ongzhili"},"content":"        // String Test","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"ongzhili"},"content":"        assertEquals(new Event(\"TEST\", \"2099-01-01\", \"2099-01-01\").toString(),","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"ongzhili"},"content":"                \"[E][ ] TEST (from: Jan 1 2099 to: Jan 1 2099)\");","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"ongzhili"},"content":"    @Test","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"ongzhili"},"content":"    public void eventMarkTest() {","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"ongzhili"},"content":"        // Mark test","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"ongzhili"},"content":"        Event test \u003d new Event(\"TEST\", \"2099-01-01\", \"2099-01-01\");","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"ongzhili"},"content":"        test.mark();","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"ongzhili"},"content":"        assertEquals(test.toString(), \"[E][X] TEST (from: Jan 1 2099 to: Jan 1 2099)\");","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"ongzhili"},"content":"        // Unmark test","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"ongzhili"},"content":"        test.unMark();","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"ongzhili"},"content":"        assertEquals(test.toString(), \"[E][ ] TEST (from: Jan 1 2099 to: Jan 1 2099)\");","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"ongzhili"},"content":"    @Test","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"ongzhili"},"content":"    public void eventExceptionTest() {","lastModifiedDate":"2024-02-12"},{"lineNumber":39,"author":{"gitId":"ongzhili"},"content":"        // DateTimeParseException test","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"ongzhili"},"content":"        DateTimeParseException thrown \u003d Assertions.assertThrows(DateTimeParseException.class, () -\u003e {","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"ongzhili"},"content":"            Event test2 \u003d new Event(\"TEST\", \"abcdefg\", \"2099-01-01\");","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"ongzhili"},"content":"        });","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"ongzhili"},"content":"        // Error Message test","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"ongzhili"},"content":"        assertEquals(\"Text \u0027abcdefg\u0027 could not be parsed at index 0\", thrown.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"ongzhili":48}},{"path":"src/test/java/lamball/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"package lamball.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":"public class ToDoTest {","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"    public void todoTest() {","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":"        // Command test","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":"        assertEquals(new ToDo(\"TEST\").command(), \"todo TEST\");","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":"        // toString test","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":"        assertEquals(new ToDo(\"TEST\").toString(), \"[T][ ] TEST\");","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"ongzhili":18}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"todo borrow book","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"todo","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"todo","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":"deadline a /by 3","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":"deadline a/by 3","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":"deadline","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":"event","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"event a /from b","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"event a/from b /to c","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"event a /from b /to c","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":"mark -1","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":"mark 0","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":"mark 4","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":"mark 3","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":"unmark -1","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":"unmark 0","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"ongzhili"},"content":"unmark 4","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"ongzhili"},"content":"unmark 3","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"ongzhili"},"content":"delete -1","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"ongzhili"},"content":"delete 4","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"ongzhili"},"content":"delete 4","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"ongzhili"},"content":"bye","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"ongzhili":23}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"ongzhili"},"content":"java -classpath ..\\bin Main \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ongzhili":1,"-":20}}]
