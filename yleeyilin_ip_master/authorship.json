[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"yleeyilin"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"yleeyilin"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"yleeyilin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"yleeyilin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"yleeyilin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"yleeyilin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"yleeyilin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"yleeyilin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"yleeyilin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"yleeyilin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"yleeyilin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"yleeyilin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"yleeyilin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"yleeyilin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"yleeyilin"},"content":"    mainClass.set(\"duke.Launcher\")","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"yleeyilin"},"content":"    archiveBaseName \u003d \"ylexi\"","lastModifiedDate":"2024-02-17"},{"lineNumber":52,"author":{"gitId":"yleeyilin"},"content":"    archiveFileName \u003d \"ylexi.jar\"","lastModifiedDate":"2024-02-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"yleeyilin"},"content":"checkstyle {","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"yleeyilin"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"yleeyilin"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"-":40,"yleeyilin":23}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"yleeyilin"},"content":"# YLEXI User Guide","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"yleeyilin"},"content":"![UI Screenshot](Ui.png)","lastModifiedDate":"2024-02-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"yleeyilin"},"content":"Are you feeling overwhelmed with your work? Too lazy to write down your schedule?  ","lastModifiedDate":"2024-02-18"},{"lineNumber":6,"author":{"gitId":"yleeyilin"},"content":"Do it in quick, fast and efficiently with YLEXI! ","lastModifiedDate":"2024-02-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":8,"author":{"gitId":"yleeyilin"},"content":"## Quick Start ","lastModifiedDate":"2024-02-18"},{"lineNumber":9,"author":{"gitId":"yleeyilin"},"content":"1. Ensure that you have Java 11 or above installed in your Computer. ","lastModifiedDate":"2024-02-18"},{"lineNumber":10,"author":{"gitId":"yleeyilin"},"content":"2. Download the latest ylexi.jar from here. ","lastModifiedDate":"2024-02-18"},{"lineNumber":11,"author":{"gitId":"yleeyilin"},"content":"3. Copy the file to the folder you want to use as the home folder for YLEXI. ","lastModifiedDate":"2024-02-18"},{"lineNumber":12,"author":{"gitId":"yleeyilin"},"content":"4. Open a command terminal, \u0027cd\u0027 into your folder that you put the jar file in.","lastModifiedDate":"2024-02-18"},{"lineNumber":13,"author":{"gitId":"yleeyilin"},"content":"5. Use the \u0027java -jar ylexi.jar\u0027 command to run the application. ","lastModifiedDate":"2024-02-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":15,"author":{"gitId":"yleeyilin"},"content":"A GUI similar to above should appear in a few seconds.","lastModifiedDate":"2024-02-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":17,"author":{"gitId":"yleeyilin"},"content":"## Features","lastModifiedDate":"2024-02-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"yleeyilin"},"content":"### 1. Adding todo","lastModifiedDate":"2024-02-18"},{"lineNumber":21,"author":{"gitId":"yleeyilin"},"content":"---","lastModifiedDate":"2024-02-18"},{"lineNumber":22,"author":{"gitId":"yleeyilin"},"content":"Add a generic task that has to be done. ","lastModifiedDate":"2024-02-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"yleeyilin"},"content":"**Example**: `todo revise cs2103t`","lastModifiedDate":"2024-02-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":26,"author":{"gitId":"yleeyilin"},"content":"**Format**: `todo [TASK NAME]`","lastModifiedDate":"2024-02-18"},{"lineNumber":27,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":28,"author":{"gitId":"yleeyilin"},"content":"### 2. Adding deadline","lastModifiedDate":"2024-02-18"},{"lineNumber":29,"author":{"gitId":"yleeyilin"},"content":"---","lastModifiedDate":"2024-02-18"},{"lineNumber":30,"author":{"gitId":"yleeyilin"},"content":"Add a task that has a specific deadline.","lastModifiedDate":"2024-02-18"},{"lineNumber":31,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":32,"author":{"gitId":"yleeyilin"},"content":"**Example**: `deadline return book /by Sunday`","lastModifiedDate":"2024-02-18"},{"lineNumber":33,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":34,"author":{"gitId":"yleeyilin"},"content":"**Example**: `deadline return book /by 2/12/2019 1800`","lastModifiedDate":"2024-02-18"},{"lineNumber":35,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":36,"author":{"gitId":"yleeyilin"},"content":"**Example**: `deadline return book /by 2/12/2019`","lastModifiedDate":"2024-02-18"},{"lineNumber":37,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":38,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":39,"author":{"gitId":"yleeyilin"},"content":"**Format**: `deadline [TASK NAME] /by [DEADLINE]`","lastModifiedDate":"2024-02-18"},{"lineNumber":40,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":41,"author":{"gitId":"yleeyilin"},"content":"**Format**: `deadline [TASK NAME] /by [dd-MM-yyyy]`","lastModifiedDate":"2024-02-18"},{"lineNumber":42,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":43,"author":{"gitId":"yleeyilin"},"content":"**Format**: `deadline [TASK NAME] /by [dd-MM-yyyy HHmm]`","lastModifiedDate":"2024-02-18"},{"lineNumber":44,"author":{"gitId":"yleeyilin"},"content":"- Define deadline with specific formats for date and time as shown above. Otherwise, a deadline that is not date formatted works too. ","lastModifiedDate":"2024-02-18"},{"lineNumber":45,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":46,"author":{"gitId":"yleeyilin"},"content":"### 3. Adding event","lastModifiedDate":"2024-02-18"},{"lineNumber":47,"author":{"gitId":"yleeyilin"},"content":"---","lastModifiedDate":"2024-02-18"},{"lineNumber":48,"author":{"gitId":"yleeyilin"},"content":"Add a task that occurs over a period of time.","lastModifiedDate":"2024-02-18"},{"lineNumber":49,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":50,"author":{"gitId":"yleeyilin"},"content":"**Example**: `event hack and roll /from Mon 12pm /to Tues 12pm`","lastModifiedDate":"2024-02-18"},{"lineNumber":51,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":52,"author":{"gitId":"yleeyilin"},"content":"**Format**: `event [TASK NAME] /from [START DATE] to [END DATE]`","lastModifiedDate":"2024-02-18"},{"lineNumber":53,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":54,"author":{"gitId":"yleeyilin"},"content":"### 4. Editing task","lastModifiedDate":"2024-02-18"},{"lineNumber":55,"author":{"gitId":"yleeyilin"},"content":"---","lastModifiedDate":"2024-02-18"},{"lineNumber":56,"author":{"gitId":"yleeyilin"},"content":"Edit the various attributes of a task.","lastModifiedDate":"2024-02-18"},{"lineNumber":57,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":58,"author":{"gitId":"yleeyilin"},"content":"**Example**: `edit description/return books/1` ","lastModifiedDate":"2024-02-18"},{"lineNumber":59,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":60,"author":{"gitId":"yleeyilin"},"content":"- Changes the description of the first task from \"return book\" to \"return books\"","lastModifiedDate":"2024-02-18"},{"lineNumber":61,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":62,"author":{"gitId":"yleeyilin"},"content":"**Example** [EVENT TASK]: `edit start/3pm/1`","lastModifiedDate":"2024-02-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":64,"author":{"gitId":"yleeyilin"},"content":"- Changes the start time of the first task from \"2pm\" to \"3pm\"","lastModifiedDate":"2024-02-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":66,"author":{"gitId":"yleeyilin"},"content":"**Example** [EVENT TASK]: \u0027edit end/4pm/2\u0027","lastModifiedDate":"2024-02-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":68,"author":{"gitId":"yleeyilin"},"content":"- Changes the end time of the second task from \"2pm\" to \"4pm\"","lastModifiedDate":"2024-02-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":70,"author":{"gitId":"yleeyilin"},"content":"**Example** [DEADLINE TASK]: `edit by/monday/2`","lastModifiedDate":"2024-02-18"},{"lineNumber":71,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":72,"author":{"gitId":"yleeyilin"},"content":"- Changes the deadline of the second task from \"tues\" to \"monday\"","lastModifiedDate":"2024-02-18"},{"lineNumber":73,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":74,"author":{"gitId":"yleeyilin"},"content":"**Format**: `edit [ATTRIBUTE TYPE]/[NEW ATTRIBUTE]/[TASK NUMBER]`","lastModifiedDate":"2024-02-18"},{"lineNumber":75,"author":{"gitId":"yleeyilin"},"content":"- Note that different tasks have specific attributes that can be edited:","lastModifiedDate":"2024-02-18"},{"lineNumber":76,"author":{"gitId":"yleeyilin"},"content":"    1. Todo: `description`","lastModifiedDate":"2024-02-18"},{"lineNumber":77,"author":{"gitId":"yleeyilin"},"content":"    2. Event: `description` , `start` , `end`","lastModifiedDate":"2024-02-18"},{"lineNumber":78,"author":{"gitId":"yleeyilin"},"content":"    3. Deadline: `description` , `by` ","lastModifiedDate":"2024-02-18"},{"lineNumber":79,"author":{"gitId":"yleeyilin"},"content":"- The respective attributes correspond to the commands that can be used.","lastModifiedDate":"2024-02-18"},{"lineNumber":80,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":81,"author":{"gitId":"yleeyilin"},"content":"### 5. Marking task ","lastModifiedDate":"2024-02-18"},{"lineNumber":82,"author":{"gitId":"yleeyilin"},"content":"---","lastModifiedDate":"2024-02-18"},{"lineNumber":83,"author":{"gitId":"yleeyilin"},"content":"After completing a task, user can check it as done.","lastModifiedDate":"2024-02-18"},{"lineNumber":84,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":85,"author":{"gitId":"yleeyilin"},"content":"**Example**: `mark 1`","lastModifiedDate":"2024-02-18"},{"lineNumber":86,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":87,"author":{"gitId":"yleeyilin"},"content":"- Marks task 1","lastModifiedDate":"2024-02-18"},{"lineNumber":88,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":89,"author":{"gitId":"yleeyilin"},"content":"**Format**: `mark [TASK NUMBER]`","lastModifiedDate":"2024-02-18"},{"lineNumber":90,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":91,"author":{"gitId":"yleeyilin"},"content":"### 6. Unmarking task ","lastModifiedDate":"2024-02-18"},{"lineNumber":92,"author":{"gitId":"yleeyilin"},"content":"---","lastModifiedDate":"2024-02-18"},{"lineNumber":93,"author":{"gitId":"yleeyilin"},"content":"To unmark a task that has been previously marked.","lastModifiedDate":"2024-02-18"},{"lineNumber":94,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":95,"author":{"gitId":"yleeyilin"},"content":"**Example**: `unmark 1`","lastModifiedDate":"2024-02-18"},{"lineNumber":96,"author":{"gitId":"yleeyilin"},"content":"- Unmarks task 1","lastModifiedDate":"2024-02-18"},{"lineNumber":97,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":98,"author":{"gitId":"yleeyilin"},"content":"**Format**: `unmark [TASK NUMBER]`","lastModifiedDate":"2024-02-18"},{"lineNumber":99,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":100,"author":{"gitId":"yleeyilin"},"content":"### 7. Deleting task ","lastModifiedDate":"2024-02-18"},{"lineNumber":101,"author":{"gitId":"yleeyilin"},"content":"---","lastModifiedDate":"2024-02-18"},{"lineNumber":102,"author":{"gitId":"yleeyilin"},"content":"Delete a task from a task list. ","lastModifiedDate":"2024-02-18"},{"lineNumber":103,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":104,"author":{"gitId":"yleeyilin"},"content":"**Example**: `delete 1`","lastModifiedDate":"2024-02-18"},{"lineNumber":105,"author":{"gitId":"yleeyilin"},"content":"- Deletes task 1","lastModifiedDate":"2024-02-18"},{"lineNumber":106,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":107,"author":{"gitId":"yleeyilin"},"content":"**Format**: `delete [TASK NUMBER]`","lastModifiedDate":"2024-02-18"},{"lineNumber":108,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":109,"author":{"gitId":"yleeyilin"},"content":"### 8. Listing task ","lastModifiedDate":"2024-02-18"},{"lineNumber":110,"author":{"gitId":"yleeyilin"},"content":"---","lastModifiedDate":"2024-02-18"},{"lineNumber":111,"author":{"gitId":"yleeyilin"},"content":"List out all the task stored currently. ","lastModifiedDate":"2024-02-18"},{"lineNumber":112,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":113,"author":{"gitId":"yleeyilin"},"content":"**Format**: `list`","lastModifiedDate":"2024-02-18"},{"lineNumber":114,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":115,"author":{"gitId":"yleeyilin"},"content":"**Sample Output**: ","lastModifiedDate":"2024-02-18"},{"lineNumber":116,"author":{"gitId":"yleeyilin"},"content":"```","lastModifiedDate":"2024-02-18"},{"lineNumber":117,"author":{"gitId":"yleeyilin"},"content":"Here are the tasks in your list.","lastModifiedDate":"2024-02-18"},{"lineNumber":118,"author":{"gitId":"yleeyilin"},"content":"1.[T][]revise CS2103T","lastModifiedDate":"2024-02-18"},{"lineNumber":119,"author":{"gitId":"yleeyilin"},"content":"2.[E][]project meeting (from: Mon 2pm to: 4pm)","lastModifiedDate":"2024-02-18"},{"lineNumber":120,"author":{"gitId":"yleeyilin"},"content":"```","lastModifiedDate":"2024-02-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":122,"author":{"gitId":"yleeyilin"},"content":"### 9. Exit the program","lastModifiedDate":"2024-02-18"},{"lineNumber":123,"author":{"gitId":"yleeyilin"},"content":"---","lastModifiedDate":"2024-02-18"},{"lineNumber":124,"author":{"gitId":"yleeyilin"},"content":"Close the program.","lastModifiedDate":"2024-02-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07"},{"lineNumber":126,"author":{"gitId":"yleeyilin"},"content":"**Format**: `bye`","lastModifiedDate":"2024-02-18"}],"authorContributionMap":{"-":15,"yleeyilin":111}},{"path":"src/main/data/caching.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yleeyilin"},"content":"T|0|Revise CS2103T","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"yleeyilin"},"content":"E|0|Project Meeting|Mon 2pm|4pm","lastModifiedDate":"2024-02-17"}],"authorContributionMap":{"yleeyilin":2}},{"path":"src/main/data/test/caching.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yleeyilin"},"content":"D|0|return book|Sunday","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"yleeyilin":1}},{"path":"src/main/java/duke/DateFormatter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yleeyilin"},"content":"package duke;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"yleeyilin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"yleeyilin"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"yleeyilin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"yleeyilin"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"yleeyilin"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"yleeyilin"},"content":" * Represents the class that handles date input and interprets it accordingly.","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"yleeyilin"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"yleeyilin"},"content":"public class DateFormatter {","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"yleeyilin"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"yleeyilin"},"content":"     * Represents an object that handles the input format that includes day, month, year, hours, minutes.","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"yleeyilin"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"yleeyilin"},"content":"    private static final DateTimeFormatter timeFormat \u003d DateTimeFormatter.ofPattern(\"d/MM/yyyy HHmm\");","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"yleeyilin"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"yleeyilin"},"content":"     * Represents an object that handles the output format that includes day, month, year, hours, minutes.","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"yleeyilin"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"yleeyilin"},"content":"    private static final DateTimeFormatter outputDateTimeFormat \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy h:mm a\");","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"yleeyilin"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"yleeyilin"},"content":"     * Represents an object that handles the input format that includes day, month, year in this specific order.","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"yleeyilin"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"yleeyilin"},"content":"    private static final DateTimeFormatter dateFormat \u003d DateTimeFormatter.ofPattern(\"d/MM/yyyy\");","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"yleeyilin"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"yleeyilin"},"content":"     * Represents an object that handles the output format that includes day, month, year in this specific order.","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"yleeyilin"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"yleeyilin"},"content":"    private static final DateTimeFormatter outputDateFormat \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"yleeyilin"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"yleeyilin"},"content":"     * Represents an object that handles the input format that includes year, month, day in this specific order.","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"yleeyilin"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"yleeyilin"},"content":"    private static final DateTimeFormatter altDateFormat \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/d\");","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"yleeyilin"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"yleeyilin"},"content":"     * Represents an object that handles the output format that includes year, month, day in this specific order.","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"yleeyilin"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"yleeyilin"},"content":"    private static final DateTimeFormatter altOutputDateFormat \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"yleeyilin"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"yleeyilin"},"content":"     * Constructor for date time formatting class.","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"yleeyilin"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"yleeyilin"},"content":"    public DateFormatter() {","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"yleeyilin"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"yleeyilin"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"yleeyilin"},"content":"     * Checks if the input is a valid date and time input.","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"yleeyilin"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"yleeyilin"},"content":"     * @param dateStr Represents the date and time extracted from instructions.","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"yleeyilin"},"content":"     * @return A boolean representing true if the instruction is a valid date and time.","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"yleeyilin"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"yleeyilin"},"content":"    private boolean isValidDateTime(String dateStr) {","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"yleeyilin"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"yleeyilin"},"content":"            LocalDateTime.parse(dateStr, timeFormat);","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"yleeyilin"},"content":"            return true;","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"yleeyilin"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"yleeyilin"},"content":"            return false;","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"yleeyilin"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"yleeyilin"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"yleeyilin"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"yleeyilin"},"content":"     * Checks if the input is a valid date input that includes day, month, year in this specific order.","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"yleeyilin"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":66,"author":{"gitId":"yleeyilin"},"content":"     * @param dateStr Represents the date extracted from instructions.","lastModifiedDate":"2024-01-28"},{"lineNumber":67,"author":{"gitId":"yleeyilin"},"content":"     * @return A boolean representing true if valid instruction and includes day, month, year in this specific order.","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"yleeyilin"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":69,"author":{"gitId":"yleeyilin"},"content":"    private boolean isValidDate(String dateStr) {","lastModifiedDate":"2024-01-28"},{"lineNumber":70,"author":{"gitId":"yleeyilin"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":71,"author":{"gitId":"yleeyilin"},"content":"            LocalDate.parse(dateStr, dateFormat);","lastModifiedDate":"2024-01-28"},{"lineNumber":72,"author":{"gitId":"yleeyilin"},"content":"            return true;","lastModifiedDate":"2024-01-28"},{"lineNumber":73,"author":{"gitId":"yleeyilin"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":74,"author":{"gitId":"yleeyilin"},"content":"            return false;","lastModifiedDate":"2024-01-28"},{"lineNumber":75,"author":{"gitId":"yleeyilin"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":76,"author":{"gitId":"yleeyilin"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":77,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":78,"author":{"gitId":"yleeyilin"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":79,"author":{"gitId":"yleeyilin"},"content":"     * Checks if the input is a valid date input that includes year, month, day in this specific order.","lastModifiedDate":"2024-01-28"},{"lineNumber":80,"author":{"gitId":"yleeyilin"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":81,"author":{"gitId":"yleeyilin"},"content":"     * @param dateStr Represents the date extracted from instructions.","lastModifiedDate":"2024-01-28"},{"lineNumber":82,"author":{"gitId":"yleeyilin"},"content":"     * @return A boolean representing true if valid instruction and includes year, month, day in this specific order.","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"yleeyilin"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":84,"author":{"gitId":"yleeyilin"},"content":"    private boolean isValidAltDate(String dateStr) {","lastModifiedDate":"2024-01-28"},{"lineNumber":85,"author":{"gitId":"yleeyilin"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":86,"author":{"gitId":"yleeyilin"},"content":"            LocalDate.parse(dateStr, altDateFormat);","lastModifiedDate":"2024-01-28"},{"lineNumber":87,"author":{"gitId":"yleeyilin"},"content":"            return true;","lastModifiedDate":"2024-01-28"},{"lineNumber":88,"author":{"gitId":"yleeyilin"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":89,"author":{"gitId":"yleeyilin"},"content":"            return false;","lastModifiedDate":"2024-01-28"},{"lineNumber":90,"author":{"gitId":"yleeyilin"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":91,"author":{"gitId":"yleeyilin"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":92,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":93,"author":{"gitId":"yleeyilin"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":94,"author":{"gitId":"yleeyilin"},"content":"     * Converts the date based on what kind of valid input it is.","lastModifiedDate":"2024-01-28"},{"lineNumber":95,"author":{"gitId":"yleeyilin"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":96,"author":{"gitId":"yleeyilin"},"content":"     * @param dateStr The extracted instructions that is relevant to pass.","lastModifiedDate":"2024-01-28"},{"lineNumber":97,"author":{"gitId":"yleeyilin"},"content":"     * @return The final result that is the converted value if it is a valid format.","lastModifiedDate":"2024-01-28"},{"lineNumber":98,"author":{"gitId":"yleeyilin"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":99,"author":{"gitId":"yleeyilin"},"content":"    public String convertedDate(String dateStr) {","lastModifiedDate":"2024-01-28"},{"lineNumber":100,"author":{"gitId":"yleeyilin"},"content":"        if (isValidDateTime(dateStr)) {","lastModifiedDate":"2024-01-28"},{"lineNumber":101,"author":{"gitId":"yleeyilin"},"content":"            LocalDateTime date \u003d LocalDateTime.parse(dateStr, timeFormat);","lastModifiedDate":"2024-01-28"},{"lineNumber":102,"author":{"gitId":"yleeyilin"},"content":"            return date.format(outputDateTimeFormat);","lastModifiedDate":"2024-01-28"},{"lineNumber":103,"author":{"gitId":"yleeyilin"},"content":"        } else if (isValidDate(dateStr)) {","lastModifiedDate":"2024-01-28"},{"lineNumber":104,"author":{"gitId":"yleeyilin"},"content":"            LocalDate date \u003d LocalDate.parse(dateStr, dateFormat);","lastModifiedDate":"2024-01-28"},{"lineNumber":105,"author":{"gitId":"yleeyilin"},"content":"            return date.format(outputDateFormat);","lastModifiedDate":"2024-01-28"},{"lineNumber":106,"author":{"gitId":"yleeyilin"},"content":"        } else if (isValidAltDate(dateStr)) {","lastModifiedDate":"2024-01-28"},{"lineNumber":107,"author":{"gitId":"yleeyilin"},"content":"            LocalDate date \u003d LocalDate.parse(dateStr, altDateFormat);","lastModifiedDate":"2024-01-28"},{"lineNumber":108,"author":{"gitId":"yleeyilin"},"content":"            return date.format(altOutputDateFormat);","lastModifiedDate":"2024-01-28"},{"lineNumber":109,"author":{"gitId":"yleeyilin"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":110,"author":{"gitId":"yleeyilin"},"content":"        return dateStr;","lastModifiedDate":"2024-01-28"},{"lineNumber":111,"author":{"gitId":"yleeyilin"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":112,"author":{"gitId":"yleeyilin"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"yleeyilin":112}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yleeyilin"},"content":"package duke;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"yleeyilin"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"yleeyilin"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"yleeyilin"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"yleeyilin"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"yleeyilin"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"yleeyilin"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"yleeyilin"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"yleeyilin"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"yleeyilin"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"yleeyilin"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"yleeyilin"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"yleeyilin"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"yleeyilin"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"yleeyilin"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"yleeyilin"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"yleeyilin"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"yleeyilin"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"yleeyilin"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"yleeyilin"},"content":"    @FXML","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"yleeyilin"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"yleeyilin"},"content":"    @FXML","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"yleeyilin"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"yleeyilin"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"yleeyilin"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"yleeyilin"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"yleeyilin"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"yleeyilin"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"yleeyilin"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"yleeyilin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"yleeyilin"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"yleeyilin"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"yleeyilin"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"yleeyilin"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"yleeyilin"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"yleeyilin"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"yleeyilin"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"yleeyilin"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"yleeyilin"},"content":"    private void flip() {","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"yleeyilin"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"yleeyilin"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"yleeyilin"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"yleeyilin"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"yleeyilin"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"yleeyilin"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":53,"author":{"gitId":"yleeyilin"},"content":"     * Returns a DialogBox object containing text and image.","lastModifiedDate":"2024-02-17"},{"lineNumber":54,"author":{"gitId":"yleeyilin"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":55,"author":{"gitId":"yleeyilin"},"content":"     * @param text The text for the object.","lastModifiedDate":"2024-02-17"},{"lineNumber":56,"author":{"gitId":"yleeyilin"},"content":"     * @param img The image for the object.","lastModifiedDate":"2024-02-17"},{"lineNumber":57,"author":{"gitId":"yleeyilin"},"content":"     * @return A DialogBox object for the text and image.","lastModifiedDate":"2024-02-17"},{"lineNumber":58,"author":{"gitId":"yleeyilin"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":59,"author":{"gitId":"yleeyilin"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"yleeyilin"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"yleeyilin"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"yleeyilin"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":64,"author":{"gitId":"yleeyilin"},"content":"     * Returns a DialogBox object containing text and image.","lastModifiedDate":"2024-02-17"},{"lineNumber":65,"author":{"gitId":"yleeyilin"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":66,"author":{"gitId":"yleeyilin"},"content":"     * @param text The text for the object.","lastModifiedDate":"2024-02-17"},{"lineNumber":67,"author":{"gitId":"yleeyilin"},"content":"     * @param img The image for the object.","lastModifiedDate":"2024-02-17"},{"lineNumber":68,"author":{"gitId":"yleeyilin"},"content":"     * @return A DialogBox object for the text and image.","lastModifiedDate":"2024-02-17"},{"lineNumber":69,"author":{"gitId":"yleeyilin"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":70,"author":{"gitId":"yleeyilin"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"yleeyilin"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-04"},{"lineNumber":72,"author":{"gitId":"yleeyilin"},"content":"        db.flip();","lastModifiedDate":"2024-02-04"},{"lineNumber":73,"author":{"gitId":"yleeyilin"},"content":"        return db;","lastModifiedDate":"2024-02-04"},{"lineNumber":74,"author":{"gitId":"yleeyilin"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":75,"author":{"gitId":"yleeyilin"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"yleeyilin":75}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yleeyilin"},"content":"package duke;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"yleeyilin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"yleeyilin"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"yleeyilin"},"content":" * Represents a chat bot that helps user keep track of tasks.","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"yleeyilin"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"yleeyilin"},"content":"    private Storage storage;","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"yleeyilin"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"yleeyilin"},"content":"    private Ui ui;","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"yleeyilin"},"content":"    private Parser parser;","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"yleeyilin"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"yleeyilin"},"content":"     * Constructs an instance of the Duke Chatbot.","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"yleeyilin"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"yleeyilin"},"content":"     * @param filePath The filepath where task list data is stored.","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"yleeyilin"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"yleeyilin"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"yleeyilin"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"yleeyilin"},"content":"            assert filePath.length() !\u003d 0 : \"File Path must be defined\";","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"yleeyilin"},"content":"            this.storage \u003d new Storage(filePath);","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"yleeyilin"},"content":"            this.tasks \u003d new TaskList(this.storage.loadTaskList());","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"yleeyilin"},"content":"            this.parser \u003d new Parser();","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"yleeyilin"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"yleeyilin"},"content":"            System.out.println(e.toString());","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"yleeyilin"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"yleeyilin"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"yleeyilin"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"yleeyilin"},"content":"     * Constructs an instance of the Duke Chatbot with no parameters.","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"yleeyilin"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"yleeyilin"},"content":"    public Duke() {","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"yleeyilin"},"content":"        String filePath \u003d \"src/main/data/caching.txt\";","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"yleeyilin"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"yleeyilin"},"content":"            this.storage \u003d new Storage(filePath);","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"yleeyilin"},"content":"            this.tasks \u003d new TaskList(this.storage.loadTaskList());","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"yleeyilin"},"content":"            this.parser \u003d new Parser();","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"yleeyilin"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"yleeyilin"},"content":"            System.out.println(e.toString());","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"yleeyilin"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"yleeyilin"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"yleeyilin"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"yleeyilin"},"content":"     * Runs the program until the \"bye\" instruction is inputted by the user and interprets the command word.","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"yleeyilin"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"yleeyilin"},"content":"    public void run() {","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"yleeyilin"},"content":"        this.ui \u003d new Ui(System.in);","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"yleeyilin"},"content":"        System.out.println(this.ui.greet());","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"yleeyilin"},"content":"        String instr \u003d this.ui.getInstr();","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"yleeyilin"},"content":"        while (!instr.equals(\"bye\")) {","lastModifiedDate":"2024-01-23"},{"lineNumber":53,"author":{"gitId":"yleeyilin"},"content":"            this.parser.parseInstr(this.tasks, this.storage, instr);","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"yleeyilin"},"content":"            instr \u003d this.ui.getInstr();","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"yleeyilin"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":56,"author":{"gitId":"yleeyilin"},"content":"        System.out.println(this.ui.exit());","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"yleeyilin"},"content":"        this.ui.close();","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"yleeyilin"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":59,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"yleeyilin"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"yleeyilin"},"content":"     * Calls the constructor and is the entry point of the program.","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"yleeyilin"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"yleeyilin"},"content":"     * @param args Input by the user.","lastModifiedDate":"2024-02-17"},{"lineNumber":64,"author":{"gitId":"yleeyilin"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"yleeyilin"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-28"},{"lineNumber":66,"author":{"gitId":"yleeyilin"},"content":"        new Duke(\"src/main/data/caching.txt\").run();","lastModifiedDate":"2024-01-28"},{"lineNumber":67,"author":{"gitId":"yleeyilin"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":68,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"yleeyilin"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"yleeyilin"},"content":"     * Calls the parser class to retrieve response based on command.","lastModifiedDate":"2024-02-17"},{"lineNumber":71,"author":{"gitId":"yleeyilin"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":72,"author":{"gitId":"yleeyilin"},"content":"     * @param input Instructions by the user.","lastModifiedDate":"2024-02-17"},{"lineNumber":73,"author":{"gitId":"yleeyilin"},"content":"     * @return A string representing the response.","lastModifiedDate":"2024-02-17"},{"lineNumber":74,"author":{"gitId":"yleeyilin"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":75,"author":{"gitId":"yleeyilin"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-02-04"},{"lineNumber":76,"author":{"gitId":"yleeyilin"},"content":"        assert this.parser !\u003d null : \"Parser class must be instantiated first.\";","lastModifiedDate":"2024-02-10"},{"lineNumber":77,"author":{"gitId":"yleeyilin"},"content":"        return this.parser.parseInstr(this.tasks, this.storage, input);","lastModifiedDate":"2024-02-04"},{"lineNumber":78,"author":{"gitId":"yleeyilin"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":2,"yleeyilin":77}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yleeyilin"},"content":"package duke;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"yleeyilin"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"yleeyilin"},"content":" * Represents the class of exception thrown by Duke Chatbot.","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"yleeyilin"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"yleeyilin"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"yleeyilin"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"yleeyilin"},"content":"     * Constructs a DukeException with a specific error message.","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"yleeyilin"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"yleeyilin"},"content":"     * @param errormessage The message that tells the user the source of error.","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"yleeyilin"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"yleeyilin"},"content":"    public DukeException(String errormessage) {","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"yleeyilin"},"content":"        super(errormessage);","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"yleeyilin"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"yleeyilin"},"content":"    public String toString() {","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"yleeyilin"},"content":"        return \"LAMMEEEEEEE....\" + super.getMessage() + \"\\n\"; ","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"yleeyilin"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"yleeyilin"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"yleeyilin":20}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yleeyilin"},"content":"package duke;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"yleeyilin"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"yleeyilin"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"yleeyilin"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"yleeyilin"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"yleeyilin"},"content":"public class Launcher {","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"yleeyilin"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"yleeyilin"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"yleeyilin"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"yleeyilin"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"yleeyilin":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yleeyilin"},"content":"package duke;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"yleeyilin"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"yleeyilin"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"yleeyilin"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"yleeyilin"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"yleeyilin"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"yleeyilin"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"yleeyilin"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"yleeyilin"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"yleeyilin"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"yleeyilin"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"yleeyilin"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"yleeyilin"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"yleeyilin"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"yleeyilin"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"yleeyilin"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"yleeyilin"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"yleeyilin"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"yleeyilin"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"yleeyilin"},"content":"            stage.setTitle(\"YLEXI\");","lastModifiedDate":"2024-02-17"},{"lineNumber":26,"author":{"gitId":"yleeyilin"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"yleeyilin"},"content":"            stage.show();","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"yleeyilin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"yleeyilin"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"yleeyilin"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"yleeyilin"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"yleeyilin"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"yleeyilin":32}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yleeyilin"},"content":"package duke;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"yleeyilin"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"yleeyilin"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"yleeyilin"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"yleeyilin"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"yleeyilin"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"yleeyilin"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"yleeyilin"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"yleeyilin"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"yleeyilin"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"yleeyilin"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"yleeyilin"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"yleeyilin"},"content":"    @FXML","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"yleeyilin"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"yleeyilin"},"content":"    @FXML","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"yleeyilin"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"yleeyilin"},"content":"    @FXML","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"yleeyilin"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"yleeyilin"},"content":"    @FXML","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"yleeyilin"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"yleeyilin"},"content":"    private Duke duke;","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"yleeyilin"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/elonmusk.png\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"yleeyilin"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/trump.png\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"yleeyilin"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"yleeyilin"},"content":"     * Instantiate needed variables.","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"yleeyilin"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"yleeyilin"},"content":"    @FXML","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"yleeyilin"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"yleeyilin"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"yleeyilin"},"content":"        showGreetingMessage();","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"yleeyilin"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"yleeyilin"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"yleeyilin"},"content":"        duke \u003d d;","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"yleeyilin"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"yleeyilin"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"yleeyilin"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"yleeyilin"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"yleeyilin"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"yleeyilin"},"content":"    @FXML","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"yleeyilin"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"yleeyilin"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"yleeyilin"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"yleeyilin"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"yleeyilin"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"yleeyilin"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"yleeyilin"},"content":"        );","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"yleeyilin"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"yleeyilin"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"yleeyilin"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"yleeyilin"},"content":"     * Creates one dialog boxes, greeting the user.","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"yleeyilin"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"yleeyilin"},"content":"    @FXML","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"yleeyilin"},"content":"    private void showGreetingMessage() {","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"yleeyilin"},"content":"        Ui ui \u003d new Ui(System.in);","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"yleeyilin"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"yleeyilin"},"content":"                DialogBox.getDukeDialog(","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"yleeyilin"},"content":"                    ui.greet(),","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"yleeyilin"},"content":"                    dukeImage","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"yleeyilin"},"content":"                )","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"yleeyilin"},"content":"        );","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"yleeyilin"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"yleeyilin"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"yleeyilin":69}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yleeyilin"},"content":"package duke;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"yleeyilin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"yleeyilin"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"yleeyilin"},"content":" * A class to decode instructions from the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"yleeyilin"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"yleeyilin"},"content":"public class Parser {","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"yleeyilin"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"yleeyilin"},"content":"     * Constructor to create an instance.","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"yleeyilin"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"yleeyilin"},"content":"    public Parser() {","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"yleeyilin"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"yleeyilin"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"yleeyilin"},"content":"     * Decodes and run the instructions.","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"yleeyilin"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"yleeyilin"},"content":"     * @param tskLst The task manager to manage the list of tasks.","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"yleeyilin"},"content":"     * @param storage The file accessor to write or read from local file.","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"yleeyilin"},"content":"     * @param instr The actual instruction string to decode.","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"yleeyilin"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"yleeyilin"},"content":"     * @return A string that represents the results of instruction.","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"yleeyilin"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"yleeyilin"},"content":"    public String parseInstr(TaskList tskLst, Storage storage, String instr) {","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"yleeyilin"},"content":"        String res \u003d \"\";","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"yleeyilin"},"content":"        assert instr.length() !\u003d 0 : \"Instructions must contain some form of command.\";","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"yleeyilin"},"content":"        if (instr.equals(\"list\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"yleeyilin"},"content":"            res \u003d tskLst.listOut();","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"yleeyilin"},"content":"        } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"yleeyilin"},"content":"            String cmdWord \u003d instr.split(\" \")[0];","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"yleeyilin"},"content":"            try {","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"yleeyilin"},"content":"                switch(cmdWord) {","lastModifiedDate":"2024-02-10"},{"lineNumber":33,"author":{"gitId":"yleeyilin"},"content":"                case(\"unmark\"):","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"yleeyilin"},"content":"                    return tskLst.unmark(instr, storage);","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"yleeyilin"},"content":"                case(\"mark\"):","lastModifiedDate":"2024-02-10"},{"lineNumber":36,"author":{"gitId":"yleeyilin"},"content":"                    return tskLst.mark(instr, storage);","lastModifiedDate":"2024-02-10"},{"lineNumber":37,"author":{"gitId":"yleeyilin"},"content":"                case(\"delete\"):","lastModifiedDate":"2024-02-10"},{"lineNumber":38,"author":{"gitId":"yleeyilin"},"content":"                    return tskLst.delete(instr, storage);","lastModifiedDate":"2024-02-10"},{"lineNumber":39,"author":{"gitId":"yleeyilin"},"content":"                case(\"find\"):","lastModifiedDate":"2024-02-10"},{"lineNumber":40,"author":{"gitId":"yleeyilin"},"content":"                    return tskLst.find(instr);","lastModifiedDate":"2024-02-10"},{"lineNumber":41,"author":{"gitId":"yleeyilin"},"content":"                case(\"todo\"):","lastModifiedDate":"2024-02-10"},{"lineNumber":42,"author":{"gitId":"yleeyilin"},"content":"                    return tskLst.addTask(TaskList.TaskCommand.TODO, instr, storage);","lastModifiedDate":"2024-02-10"},{"lineNumber":43,"author":{"gitId":"yleeyilin"},"content":"                case(\"deadline\"):","lastModifiedDate":"2024-02-10"},{"lineNumber":44,"author":{"gitId":"yleeyilin"},"content":"                    return tskLst.addTask(TaskList.TaskCommand.DEADLINE, instr, storage);","lastModifiedDate":"2024-02-10"},{"lineNumber":45,"author":{"gitId":"yleeyilin"},"content":"                case(\"event\"):","lastModifiedDate":"2024-02-10"},{"lineNumber":46,"author":{"gitId":"yleeyilin"},"content":"                    return tskLst.addTask(TaskList.TaskCommand.EVENT, instr, storage);","lastModifiedDate":"2024-02-10"},{"lineNumber":47,"author":{"gitId":"yleeyilin"},"content":"                case(\"edit\"):","lastModifiedDate":"2024-02-10"},{"lineNumber":48,"author":{"gitId":"yleeyilin"},"content":"                    String validDescription \u003d instr.substring(5);","lastModifiedDate":"2024-02-10"},{"lineNumber":49,"author":{"gitId":"yleeyilin"},"content":"                    String descriptionCommand \u003d validDescription.split(\"/\")[0];","lastModifiedDate":"2024-02-10"},{"lineNumber":50,"author":{"gitId":"yleeyilin"},"content":"                    String descriptionDetails \u003d validDescription.split(\"/\")[1];","lastModifiedDate":"2024-02-10"},{"lineNumber":51,"author":{"gitId":"yleeyilin"},"content":"                    int tsk \u003d Integer.parseInt(validDescription.split(\"/\")[2]);","lastModifiedDate":"2024-02-10"},{"lineNumber":52,"author":{"gitId":"yleeyilin"},"content":"                    return tskLst.edit(descriptionCommand, descriptionDetails, tsk);","lastModifiedDate":"2024-02-10"},{"lineNumber":53,"author":{"gitId":"yleeyilin"},"content":"                case(\"bye\"):","lastModifiedDate":"2024-02-17"},{"lineNumber":54,"author":{"gitId":"yleeyilin"},"content":"                    System.exit(0);","lastModifiedDate":"2024-02-17"},{"lineNumber":55,"author":{"gitId":"yleeyilin"},"content":"                default:","lastModifiedDate":"2024-02-10"},{"lineNumber":56,"author":{"gitId":"yleeyilin"},"content":"                    throw new DukeException(\"OOPS!!! What is that?\"","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"yleeyilin"},"content":"                        + \"I\u0027m sorry, but I don\u0027t recognise this command :-( \\nTry another command!\");","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"yleeyilin"},"content":"                }","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"yleeyilin"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"yleeyilin"},"content":"                return (e.toString());","lastModifiedDate":"2024-02-09"},{"lineNumber":61,"author":{"gitId":"yleeyilin"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"yleeyilin"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"yleeyilin"},"content":"        return res;","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"yleeyilin"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"yleeyilin"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"yleeyilin":65}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yleeyilin"},"content":"package duke;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"yleeyilin"},"content":"import java.io.File;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"yleeyilin"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"yleeyilin"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"yleeyilin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"yleeyilin"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"yleeyilin"},"content":"import duke.task.Deadline;","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"yleeyilin"},"content":"import duke.task.Event;","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"yleeyilin"},"content":"import duke.task.Task;","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"yleeyilin"},"content":"import duke.task.Todo;","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"yleeyilin"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"yleeyilin"},"content":" * Represents the class that is in charge of reading and writing to and from local file.","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"yleeyilin"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"yleeyilin"},"content":"public class Storage {","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"yleeyilin"},"content":"    /*","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"yleeyilin"},"content":"     * Represents the path of the file that stores the task list.","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"yleeyilin"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"yleeyilin"},"content":"    private String filePath;","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"yleeyilin"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"yleeyilin"},"content":"     * Constructor that creates an instance of the file if it does not exists.","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"yleeyilin"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"yleeyilin"},"content":"     * @param filePath Represents the path of the file that stores the task list.","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"yleeyilin"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"yleeyilin"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"yleeyilin"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"yleeyilin"},"content":"        assert this.filePath.length() !\u003d 0 : \"File Path must be defined\";","lastModifiedDate":"2024-02-10"},{"lineNumber":33,"author":{"gitId":"yleeyilin"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"yleeyilin"},"content":"        if (!file.exists()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"yleeyilin"},"content":"            try {","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"yleeyilin"},"content":"                file.getParentFile().mkdirs();","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"yleeyilin"},"content":"                file.createNewFile();","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"yleeyilin"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"yleeyilin"},"content":"                new DukeException(e.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"yleeyilin"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"yleeyilin"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"yleeyilin"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"yleeyilin"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"yleeyilin"},"content":"     * Saves the task list into the file by writing it in the specified filePath.","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"yleeyilin"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"yleeyilin"},"content":"     * @param instrList The updated list of tasks from the users.","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"yleeyilin"},"content":"     * @throws DukeException Thrown when there is an invalid item in the task list.","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"yleeyilin"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"yleeyilin"},"content":"    public void saveTaskList(ArrayList\u003cTask\u003e instrList) throws DukeException {","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"yleeyilin"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":53,"author":{"gitId":"yleeyilin"},"content":"            assert this.filePath.length() !\u003d 0 : \"File Path must be defined\";","lastModifiedDate":"2024-02-10"},{"lineNumber":54,"author":{"gitId":"yleeyilin"},"content":"            FileWriter fw \u003d new FileWriter(this.filePath);","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"yleeyilin"},"content":"            for (Task tsk : instrList) {","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"yleeyilin"},"content":"                fw.write(tsk.toSave());","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"yleeyilin"},"content":"                fw.write(\"\\n\");","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"yleeyilin"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"yleeyilin"},"content":"            fw.close();","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"yleeyilin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"yleeyilin"},"content":"            throw new DukeException(\"OOOPS! Invalid Item in Task List, please rectify!!!\");","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"yleeyilin"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"yleeyilin"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":66,"author":{"gitId":"yleeyilin"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":67,"author":{"gitId":"yleeyilin"},"content":"     * Reads from the specified filePath and writes into a new ArrayList.","lastModifiedDate":"2024-01-28"},{"lineNumber":68,"author":{"gitId":"yleeyilin"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":69,"author":{"gitId":"yleeyilin"},"content":"     * @return Returns an ArrayList containing the list of tasks from local file.","lastModifiedDate":"2024-01-28"},{"lineNumber":70,"author":{"gitId":"yleeyilin"},"content":"     * @throws DukeException Thrown when the file is not accessible in the specifiec filepath.","lastModifiedDate":"2024-01-28"},{"lineNumber":71,"author":{"gitId":"yleeyilin"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":72,"author":{"gitId":"yleeyilin"},"content":"    public ArrayList\u003cTask\u003e loadTaskList() throws DukeException {","lastModifiedDate":"2024-01-28"},{"lineNumber":73,"author":{"gitId":"yleeyilin"},"content":"        ArrayList\u003cTask\u003e tskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-28"},{"lineNumber":74,"author":{"gitId":"yleeyilin"},"content":"        File f \u003d new File(this.filePath);","lastModifiedDate":"2024-01-28"},{"lineNumber":75,"author":{"gitId":"yleeyilin"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":76,"author":{"gitId":"yleeyilin"},"content":"            if (f.exists()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":77,"author":{"gitId":"yleeyilin"},"content":"                try (Scanner sc \u003d new Scanner(f)) {","lastModifiedDate":"2024-01-28"},{"lineNumber":78,"author":{"gitId":"yleeyilin"},"content":"                    while (sc.hasNext()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":79,"author":{"gitId":"yleeyilin"},"content":"                        Task tsk \u003d deconstruct(sc.nextLine());","lastModifiedDate":"2024-01-28"},{"lineNumber":80,"author":{"gitId":"yleeyilin"},"content":"                        tskList.add(tsk);","lastModifiedDate":"2024-01-28"},{"lineNumber":81,"author":{"gitId":"yleeyilin"},"content":"                    }","lastModifiedDate":"2024-01-28"},{"lineNumber":82,"author":{"gitId":"yleeyilin"},"content":"                }","lastModifiedDate":"2024-01-28"},{"lineNumber":83,"author":{"gitId":"yleeyilin"},"content":"            } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":84,"author":{"gitId":"yleeyilin"},"content":"                throw new DukeException(\"OOOPS!! File \u0027\" + this.filePath","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"yleeyilin"},"content":"                    + \"\u0027 not found in local drive. Please check your working folder!\");","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"yleeyilin"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":87,"author":{"gitId":"yleeyilin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":88,"author":{"gitId":"yleeyilin"},"content":"            throw new DukeException(\"An error occurred while reading the file: \" + e.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":89,"author":{"gitId":"yleeyilin"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":90,"author":{"gitId":"yleeyilin"},"content":"        return tskList;","lastModifiedDate":"2024-01-28"},{"lineNumber":91,"author":{"gitId":"yleeyilin"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":92,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":93,"author":{"gitId":"yleeyilin"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":94,"author":{"gitId":"yleeyilin"},"content":"     * Deconstruct the line from cache file to new Task.","lastModifiedDate":"2024-02-17"},{"lineNumber":95,"author":{"gitId":"yleeyilin"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":96,"author":{"gitId":"yleeyilin"},"content":"     * @param fileStr The line from the cache file.","lastModifiedDate":"2024-02-17"},{"lineNumber":97,"author":{"gitId":"yleeyilin"},"content":"     * @return A task representing the work to do.","lastModifiedDate":"2024-02-17"},{"lineNumber":98,"author":{"gitId":"yleeyilin"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":99,"author":{"gitId":"yleeyilin"},"content":"    public Task deconstruct(String fileStr) {","lastModifiedDate":"2024-01-28"},{"lineNumber":100,"author":{"gitId":"yleeyilin"},"content":"        String[] arr \u003d fileStr.split(\"\\\\|\");","lastModifiedDate":"2024-01-29"},{"lineNumber":101,"author":{"gitId":"yleeyilin"},"content":"        Boolean isDone \u003d arr[1].equals(\"1\") ? true : false;","lastModifiedDate":"2024-01-28"},{"lineNumber":102,"author":{"gitId":"yleeyilin"},"content":"        if (arr[0].equals(\"T\")) {","lastModifiedDate":"2024-01-28"},{"lineNumber":103,"author":{"gitId":"yleeyilin"},"content":"            return new Todo(arr[2], isDone);","lastModifiedDate":"2024-01-28"},{"lineNumber":104,"author":{"gitId":"yleeyilin"},"content":"        } else if (arr[0].equals(\"D\")) {","lastModifiedDate":"2024-01-28"},{"lineNumber":105,"author":{"gitId":"yleeyilin"},"content":"            return new Deadline(arr[2], arr[3], isDone);","lastModifiedDate":"2024-01-28"},{"lineNumber":106,"author":{"gitId":"yleeyilin"},"content":"        } else if (arr[0].equals(\"E\")) {","lastModifiedDate":"2024-01-28"},{"lineNumber":107,"author":{"gitId":"yleeyilin"},"content":"            return new Event(arr[2], arr[3], arr[4], isDone);","lastModifiedDate":"2024-01-29"},{"lineNumber":108,"author":{"gitId":"yleeyilin"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":109,"author":{"gitId":"yleeyilin"},"content":"        return null;","lastModifiedDate":"2024-01-28"},{"lineNumber":110,"author":{"gitId":"yleeyilin"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":111,"author":{"gitId":"yleeyilin"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"yleeyilin":111}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yleeyilin"},"content":"package duke;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"yleeyilin"},"content":"import java.io.InputStream;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"yleeyilin"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"yleeyilin"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"yleeyilin"},"content":" * Represents the interface that the user interacts with.","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"yleeyilin"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"yleeyilin"},"content":"public class Ui {","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"yleeyilin"},"content":"    private Scanner sc;","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"yleeyilin"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"yleeyilin"},"content":"     * Constructs an instance of UI.","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"yleeyilin"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"yleeyilin"},"content":"     * @param inputstream References the system input.","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"yleeyilin"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"yleeyilin"},"content":"    public Ui(InputStream inputstream) {","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"yleeyilin"},"content":"        this.sc \u003d new Scanner(inputstream);","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"yleeyilin"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"yleeyilin"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"yleeyilin"},"content":"     * Retreives the next instruction in the following line.","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"yleeyilin"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"yleeyilin"},"content":"     * @return The next instruction.","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"yleeyilin"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"yleeyilin"},"content":"    public String getInstr() {","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"yleeyilin"},"content":"        return this.sc.nextLine();","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"yleeyilin"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"yleeyilin"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"yleeyilin"},"content":"     * Closes the scanner.","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"yleeyilin"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"yleeyilin"},"content":"    public void close() {","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"yleeyilin"},"content":"        this.sc.close();","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"yleeyilin"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"yleeyilin"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"yleeyilin"},"content":"     * Takes care of the intialisation response.","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"yleeyilin"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"yleeyilin"},"content":"     * @return A string of output for the user as the chatbot boots up.","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"yleeyilin"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"yleeyilin"},"content":"    public String greet() {","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"yleeyilin"},"content":"        return \"Hello! I\u0027m YLEXI. \\nWhat can I do for you?\";","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"yleeyilin"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"yleeyilin"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"yleeyilin"},"content":"     * Takes case of the response as the user exits.","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"yleeyilin"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"yleeyilin"},"content":"     * @return A string of output for the user as the chatbot ends.","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"yleeyilin"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"yleeyilin"},"content":"    public String exit() {","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"yleeyilin"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"yleeyilin"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"yleeyilin"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"yleeyilin":54}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yleeyilin"},"content":"package duke.task;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"yleeyilin"},"content":"import duke.DateFormatter;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"yleeyilin"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"yleeyilin"},"content":" * Represents the deadline task.","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"yleeyilin"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"yleeyilin"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"yleeyilin"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"yleeyilin"},"content":"     * Represents the deadline of this task.","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"yleeyilin"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"yleeyilin"},"content":"    protected String by;","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"yleeyilin"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"yleeyilin"},"content":"     * Constructor to instantiate a deadline task.","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"yleeyilin"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"yleeyilin"},"content":"     * @param description Represents the string describing what the task is.","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"yleeyilin"},"content":"     * @param by Represent the deadline of the task.","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"yleeyilin"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"yleeyilin"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"yleeyilin"},"content":"        super(description);","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"yleeyilin"},"content":"        DateFormatter dateFormat \u003d new DateFormatter();","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"yleeyilin"},"content":"        this.by \u003d dateFormat.convertedDate(by);","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"yleeyilin"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"yleeyilin"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"yleeyilin"},"content":"     * Overloaded constructor to instantiate a deadline task with a specific checkmark.","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"yleeyilin"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"yleeyilin"},"content":"     * @param description Represents the string describing what the task is.","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"yleeyilin"},"content":"     * @param by Represent the deadline of the task.","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"yleeyilin"},"content":"     * @param isDone Represents the boolean describing whether the task is checked.","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"yleeyilin"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"yleeyilin"},"content":"    public Deadline(String description, String by, Boolean isDone) {","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"yleeyilin"},"content":"        super(description, isDone);","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"yleeyilin"},"content":"        DateFormatter dateFormat \u003d new DateFormatter();","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"yleeyilin"},"content":"        this.by \u003d dateFormat.convertedDate(by);","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"yleeyilin"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"yleeyilin"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"yleeyilin"},"content":"     * Returns a string formatting of the deadline task.","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"yleeyilin"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"yleeyilin"},"content":"     * @return A string representation of the deadline task.","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"yleeyilin"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"yleeyilin"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":45,"author":{"gitId":"yleeyilin"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":46,"author":{"gitId":"yleeyilin"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2024-01-23"},{"lineNumber":47,"author":{"gitId":"yleeyilin"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":48,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"yleeyilin"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"yleeyilin"},"content":"     * Returns a special string formmating of the deadline task to write into local file.","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"yleeyilin"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"yleeyilin"},"content":"     * @return A special string representation of the deadline task used in the local file.","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"yleeyilin"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"yleeyilin"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"yleeyilin"},"content":"    public String toSave() {","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"yleeyilin"},"content":"        String strDone \u003d this.isDone ? \"1\" : \"0\";","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"yleeyilin"},"content":"        return \"D|\" + strDone + \"|\" + this.description + \"|\" + this.by;","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"yleeyilin"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":60,"author":{"gitId":"yleeyilin"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":61,"author":{"gitId":"yleeyilin"},"content":"     * Updates the by parameter of this class.","lastModifiedDate":"2024-02-10"},{"lineNumber":62,"author":{"gitId":"yleeyilin"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":63,"author":{"gitId":"yleeyilin"},"content":"     * @param newBy","lastModifiedDate":"2024-02-10"},{"lineNumber":64,"author":{"gitId":"yleeyilin"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":65,"author":{"gitId":"yleeyilin"},"content":"     * @return A string representation of the work done.","lastModifiedDate":"2024-02-10"},{"lineNumber":66,"author":{"gitId":"yleeyilin"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":67,"author":{"gitId":"yleeyilin"},"content":"    public String updateBy(String newBy) {","lastModifiedDate":"2024-02-10"},{"lineNumber":68,"author":{"gitId":"yleeyilin"},"content":"        String response \u003d \"Updated \" + this.description + \"\u0027s deadline from: \" + this.by + \"to: \" + newBy;","lastModifiedDate":"2024-02-10"},{"lineNumber":69,"author":{"gitId":"yleeyilin"},"content":"        this.by \u003d newBy;","lastModifiedDate":"2024-02-10"},{"lineNumber":70,"author":{"gitId":"yleeyilin"},"content":"        return response;","lastModifiedDate":"2024-02-10"},{"lineNumber":71,"author":{"gitId":"yleeyilin"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":72,"author":{"gitId":"yleeyilin"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"yleeyilin":72}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yleeyilin"},"content":"package duke.task;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"yleeyilin"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"yleeyilin"},"content":" * Represents the event task.","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"yleeyilin"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"yleeyilin"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"yleeyilin"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"yleeyilin"},"content":"     * Represents the start time of the event.","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"yleeyilin"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"yleeyilin"},"content":"    protected String start;","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"yleeyilin"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"yleeyilin"},"content":"     * Represents the end time of the event.","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"yleeyilin"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"yleeyilin"},"content":"    protected String end;","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"yleeyilin"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"yleeyilin"},"content":"     * Constructor to instantiate an event task.","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"yleeyilin"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"yleeyilin"},"content":"     * @param description Represents the string describing what the task is.","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"yleeyilin"},"content":"     * @param start Represents the start time of the event.","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"yleeyilin"},"content":"     * @param end Represents the end time of the event.","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"yleeyilin"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"yleeyilin"},"content":"    public Event(String description, String start, String end) {","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"yleeyilin"},"content":"        super(description);","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"yleeyilin"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"yleeyilin"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"yleeyilin"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":29,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":30,"author":{"gitId":"yleeyilin"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"yleeyilin"},"content":"     * Overloaded constructor to instantiate an event task with a specific checkmark.","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"yleeyilin"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"yleeyilin"},"content":"     * @param description Represents the string describing what the task is.","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"yleeyilin"},"content":"     * @param start Represents the start time of the event.","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"yleeyilin"},"content":"     * @param end Represents the end time of the event.","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"yleeyilin"},"content":"     * @param isDone Represents the boolean describing whether the task is checked.","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"yleeyilin"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"yleeyilin"},"content":"    public Event(String description, String start, String end, Boolean isDone) {","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"yleeyilin"},"content":"        super(description, isDone);","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"yleeyilin"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"yleeyilin"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"yleeyilin"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"yleeyilin"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"yleeyilin"},"content":"     * Returns a string formatting of the events task.","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"yleeyilin"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"yleeyilin"},"content":"     * @return A string representation of the events task.","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"yleeyilin"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"yleeyilin"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":50,"author":{"gitId":"yleeyilin"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":51,"author":{"gitId":"yleeyilin"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.start + \" to: \" + this.end + \")\";","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"yleeyilin"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"yleeyilin"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"yleeyilin"},"content":"     * Returns a special string formmating of the events task to write into local file.","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"yleeyilin"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"yleeyilin"},"content":"     * @return A special string representation of the events task used in the local file.","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"yleeyilin"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"yleeyilin"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"yleeyilin"},"content":"    public String toSave() {","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"yleeyilin"},"content":"        String strDone \u003d this.isDone ? \"1\" : \"0\";","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"yleeyilin"},"content":"        return \"E|\" + strDone + \"|\" + this.description + \"|\" + this.start + \"|\" + this.end;","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"yleeyilin"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":64,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":65,"author":{"gitId":"yleeyilin"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":66,"author":{"gitId":"yleeyilin"},"content":"     * Update the start parameter of this class.","lastModifiedDate":"2024-02-10"},{"lineNumber":67,"author":{"gitId":"yleeyilin"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":68,"author":{"gitId":"yleeyilin"},"content":"     * @param newStart The new value for start date.","lastModifiedDate":"2024-02-17"},{"lineNumber":69,"author":{"gitId":"yleeyilin"},"content":"     * @return A string representation of the work done.","lastModifiedDate":"2024-02-10"},{"lineNumber":70,"author":{"gitId":"yleeyilin"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":71,"author":{"gitId":"yleeyilin"},"content":"    public String updateStart(String newStart) {","lastModifiedDate":"2024-02-10"},{"lineNumber":72,"author":{"gitId":"yleeyilin"},"content":"        String response \u003d \"Updated \" + this.description + \"\u0027s end date from: \" + this.start + \"to: \" + newStart;","lastModifiedDate":"2024-02-10"},{"lineNumber":73,"author":{"gitId":"yleeyilin"},"content":"        this.start \u003d newStart;","lastModifiedDate":"2024-02-10"},{"lineNumber":74,"author":{"gitId":"yleeyilin"},"content":"        return response;","lastModifiedDate":"2024-02-10"},{"lineNumber":75,"author":{"gitId":"yleeyilin"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":76,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":77,"author":{"gitId":"yleeyilin"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":78,"author":{"gitId":"yleeyilin"},"content":"     * Update the end parameter of this class.","lastModifiedDate":"2024-02-10"},{"lineNumber":79,"author":{"gitId":"yleeyilin"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":80,"author":{"gitId":"yleeyilin"},"content":"     * @param newEnd The new value for enddate.","lastModifiedDate":"2024-02-17"},{"lineNumber":81,"author":{"gitId":"yleeyilin"},"content":"     * @return A string representation of the work done.","lastModifiedDate":"2024-02-10"},{"lineNumber":82,"author":{"gitId":"yleeyilin"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":83,"author":{"gitId":"yleeyilin"},"content":"    public String updateEnd(String newEnd) {","lastModifiedDate":"2024-02-10"},{"lineNumber":84,"author":{"gitId":"yleeyilin"},"content":"        String response \u003d \"Updated \" + this.description + \"\u0027s end date from: \" + this.end + \"to: \" + newEnd;","lastModifiedDate":"2024-02-10"},{"lineNumber":85,"author":{"gitId":"yleeyilin"},"content":"        this.end \u003d newEnd;","lastModifiedDate":"2024-02-10"},{"lineNumber":86,"author":{"gitId":"yleeyilin"},"content":"        return response;","lastModifiedDate":"2024-02-10"},{"lineNumber":87,"author":{"gitId":"yleeyilin"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":88,"author":{"gitId":"yleeyilin"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"yleeyilin":88}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yleeyilin"},"content":"package duke.task;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"yleeyilin"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"yleeyilin"},"content":" * Represents a general task.","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"yleeyilin"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"yleeyilin"},"content":"public class Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"yleeyilin"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"yleeyilin"},"content":"     * Describes the task that the user has to do.","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"yleeyilin"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"yleeyilin"},"content":"    protected String description;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"yleeyilin"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"yleeyilin"},"content":"     * Represents whether a task has be completed.","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"yleeyilin"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"yleeyilin"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"yleeyilin"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"yleeyilin"},"content":"     * Constructor that creates an instance of a task.","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"yleeyilin"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"yleeyilin"},"content":"     * @param description Describes the task that the user has to do.","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"yleeyilin"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"yleeyilin"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"yleeyilin"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"yleeyilin"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"yleeyilin"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"yleeyilin"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"yleeyilin"},"content":"     * Overloaded constructor to instantiate a todo task with a specific checkmark.","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"yleeyilin"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"yleeyilin"},"content":"     * @param description Describes the task that the user has to do.","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"yleeyilin"},"content":"     * @param isDone Represents the boolean describing whether the task is checked.","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"yleeyilin"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"yleeyilin"},"content":"    public Task(String description, Boolean isDone) {","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"yleeyilin"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"yleeyilin"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"yleeyilin"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"yleeyilin"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"yleeyilin"},"content":"     * Retrieves the string version of a boolean isDone.","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"yleeyilin"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"yleeyilin"},"content":"     * @return A String that represents if a task has been completed or not.","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"yleeyilin"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"yleeyilin"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-23"},{"lineNumber":44,"author":{"gitId":"yleeyilin"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-01-23"},{"lineNumber":45,"author":{"gitId":"yleeyilin"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":46,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":47,"author":{"gitId":"yleeyilin"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"yleeyilin"},"content":"     * Returns a string formatting of the task.","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"yleeyilin"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"yleeyilin"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"yleeyilin"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"yleeyilin"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":53,"author":{"gitId":"yleeyilin"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":54,"author":{"gitId":"yleeyilin"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2024-01-23"},{"lineNumber":55,"author":{"gitId":"yleeyilin"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":56,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":57,"author":{"gitId":"yleeyilin"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"yleeyilin"},"content":"     * Checks the specified task.","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"yleeyilin"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"yleeyilin"},"content":"     * @return The string of the task that has been completed.","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"yleeyilin"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"yleeyilin"},"content":"    public String markAsDone() {","lastModifiedDate":"2024-01-24"},{"lineNumber":63,"author":{"gitId":"yleeyilin"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-23"},{"lineNumber":64,"author":{"gitId":"yleeyilin"},"content":"        return this.toString();","lastModifiedDate":"2024-01-24"},{"lineNumber":65,"author":{"gitId":"yleeyilin"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":66,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":67,"author":{"gitId":"yleeyilin"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":68,"author":{"gitId":"yleeyilin"},"content":"     * Unchecks the specified task.","lastModifiedDate":"2024-01-28"},{"lineNumber":69,"author":{"gitId":"yleeyilin"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":70,"author":{"gitId":"yleeyilin"},"content":"     * @return The string of the task that has been marked as incompleted.","lastModifiedDate":"2024-01-28"},{"lineNumber":71,"author":{"gitId":"yleeyilin"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":72,"author":{"gitId":"yleeyilin"},"content":"    public String markAsUndone() {","lastModifiedDate":"2024-01-24"},{"lineNumber":73,"author":{"gitId":"yleeyilin"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-23"},{"lineNumber":74,"author":{"gitId":"yleeyilin"},"content":"        return this.toString();","lastModifiedDate":"2024-01-24"},{"lineNumber":75,"author":{"gitId":"yleeyilin"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":76,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":77,"author":{"gitId":"yleeyilin"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":78,"author":{"gitId":"yleeyilin"},"content":"     * Retrieves the string format of a general task.","lastModifiedDate":"2024-01-28"},{"lineNumber":79,"author":{"gitId":"yleeyilin"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":80,"author":{"gitId":"yleeyilin"},"content":"     * @return The string of the task that is to be stored in local file.","lastModifiedDate":"2024-01-28"},{"lineNumber":81,"author":{"gitId":"yleeyilin"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":82,"author":{"gitId":"yleeyilin"},"content":"    public String toSave() {","lastModifiedDate":"2024-01-28"},{"lineNumber":83,"author":{"gitId":"yleeyilin"},"content":"        String strDone \u003d this.isDone ? \"1\" : \"0\";","lastModifiedDate":"2024-01-28"},{"lineNumber":84,"author":{"gitId":"yleeyilin"},"content":"        return strDone + \"|\" + this.description;","lastModifiedDate":"2024-01-28"},{"lineNumber":85,"author":{"gitId":"yleeyilin"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":86,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":87,"author":{"gitId":"yleeyilin"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":88,"author":{"gitId":"yleeyilin"},"content":"     * Update the description parameter of the task class.","lastModifiedDate":"2024-02-10"},{"lineNumber":89,"author":{"gitId":"yleeyilin"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":90,"author":{"gitId":"yleeyilin"},"content":"     * @param newDescription","lastModifiedDate":"2024-02-10"},{"lineNumber":91,"author":{"gitId":"yleeyilin"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":92,"author":{"gitId":"yleeyilin"},"content":"     * @return A string representation of the work done.","lastModifiedDate":"2024-02-10"},{"lineNumber":93,"author":{"gitId":"yleeyilin"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":94,"author":{"gitId":"yleeyilin"},"content":"    public String updateDescription(String newDescription) {","lastModifiedDate":"2024-02-10"},{"lineNumber":95,"author":{"gitId":"yleeyilin"},"content":"        String response \u003d \"Updated \" + this.description + \" to \" + newDescription;","lastModifiedDate":"2024-02-10"},{"lineNumber":96,"author":{"gitId":"yleeyilin"},"content":"        this.description \u003d newDescription;","lastModifiedDate":"2024-02-10"},{"lineNumber":97,"author":{"gitId":"yleeyilin"},"content":"        return response;","lastModifiedDate":"2024-02-10"},{"lineNumber":98,"author":{"gitId":"yleeyilin"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":99,"author":{"gitId":"yleeyilin"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"yleeyilin":99}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yleeyilin"},"content":"package duke.task;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"yleeyilin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"yleeyilin"},"content":"import duke.DukeException;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"yleeyilin"},"content":"import duke.Storage;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"yleeyilin"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"yleeyilin"},"content":" * Represents the management of the task list.","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"yleeyilin"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"yleeyilin"},"content":"public class TaskList {","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"yleeyilin"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"yleeyilin"},"content":"     * Tracks the list of task inputteed by the user.","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"yleeyilin"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"yleeyilin"},"content":"    protected ArrayList\u003cTask\u003e instrList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"yleeyilin"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"yleeyilin"},"content":"     * Constructor that creates an instance of task list.","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"yleeyilin"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"yleeyilin"},"content":"     * @param arr The current instruction list.","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"yleeyilin"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"yleeyilin"},"content":"    public TaskList(ArrayList\u003cTask\u003e arr) {","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"yleeyilin"},"content":"        this.instrList \u003d arr;","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"yleeyilin"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"yleeyilin"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"yleeyilin"},"content":"     * Enums for tasks.","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"yleeyilin"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"yleeyilin"},"content":"    public enum TaskCommand {","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"yleeyilin"},"content":"        TODO, DEADLINE, EVENT","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"yleeyilin"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"yleeyilin"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"yleeyilin"},"content":"     * Prints out the tasks in the instruction list.","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"yleeyilin"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"yleeyilin"},"content":"     * @return A string that represents the results of instruction.","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"yleeyilin"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"yleeyilin"},"content":"    public String listOut() {","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"yleeyilin"},"content":"        String res \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"yleeyilin"},"content":"        for (int i \u003d 0; i \u003c this.instrList.size(); i++) {","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"yleeyilin"},"content":"            System.out.println(i + 1 + \".\" + this.instrList.get(i).toString());","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"yleeyilin"},"content":"            String temp \u003d i + 1 + \".\" + this.instrList.get(i).toString();","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"yleeyilin"},"content":"            res +\u003d \"\\n\" + temp;","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"yleeyilin"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"yleeyilin"},"content":"        return res;","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"yleeyilin"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"yleeyilin"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"yleeyilin"},"content":"     * Adds tasks to the list based of what tasks they are.","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"yleeyilin"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"yleeyilin"},"content":"     * @param cmd Represents the type of the task.","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"yleeyilin"},"content":"     * @param instr The string with the task information.","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"yleeyilin"},"content":"     * @param thisStorage Local file access management.","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"yleeyilin"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"yleeyilin"},"content":"     * @return A string that represents the results of instruction.","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"yleeyilin"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"yleeyilin"},"content":"     * @throws DukeException When there is inappropriate input.","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"yleeyilin"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"yleeyilin"},"content":"    public String addTask(TaskCommand cmd, String instr, Storage thisStorage) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"yleeyilin"},"content":"        String res \u003d \"\";","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"yleeyilin"},"content":"        switch (cmd) {","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"yleeyilin"},"content":"        case TODO:","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"yleeyilin"},"content":"            res \u003d processTodo(instr, thisStorage);","lastModifiedDate":"2024-02-15"},{"lineNumber":65,"author":{"gitId":"yleeyilin"},"content":"            System.out.println(res);","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"yleeyilin"},"content":"            break;","lastModifiedDate":"2024-01-28"},{"lineNumber":67,"author":{"gitId":"yleeyilin"},"content":"        case DEADLINE:","lastModifiedDate":"2024-01-28"},{"lineNumber":68,"author":{"gitId":"yleeyilin"},"content":"            res \u003d processDeadline(instr, thisStorage);","lastModifiedDate":"2024-02-15"},{"lineNumber":69,"author":{"gitId":"yleeyilin"},"content":"            System.out.println(res);","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"yleeyilin"},"content":"            break;","lastModifiedDate":"2024-01-28"},{"lineNumber":71,"author":{"gitId":"yleeyilin"},"content":"        case EVENT:","lastModifiedDate":"2024-01-28"},{"lineNumber":72,"author":{"gitId":"yleeyilin"},"content":"            res \u003d processEvent(instr, thisStorage);","lastModifiedDate":"2024-02-15"},{"lineNumber":73,"author":{"gitId":"yleeyilin"},"content":"            System.out.println(res);","lastModifiedDate":"2024-02-04"},{"lineNumber":74,"author":{"gitId":"yleeyilin"},"content":"            break;","lastModifiedDate":"2024-01-28"},{"lineNumber":75,"author":{"gitId":"yleeyilin"},"content":"        default:","lastModifiedDate":"2024-01-28"},{"lineNumber":76,"author":{"gitId":"yleeyilin"},"content":"            throw new DukeException(\"OOPS!!! What is that? I\u0027m sorry,\"","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"yleeyilin"},"content":"                + \" but I don\u0027t recognise this command :-( \\nTry another command!\");","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"yleeyilin"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":79,"author":{"gitId":"yleeyilin"},"content":"        res \u003d res + \"\\n\" + \"Now you have \" + this.instrList.size() + \" tasks in the list.\";","lastModifiedDate":"2024-02-04"},{"lineNumber":80,"author":{"gitId":"yleeyilin"},"content":"        System.out.println(res);","lastModifiedDate":"2024-02-04"},{"lineNumber":81,"author":{"gitId":"yleeyilin"},"content":"        return res;","lastModifiedDate":"2024-02-04"},{"lineNumber":82,"author":{"gitId":"yleeyilin"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":83,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":84,"author":{"gitId":"yleeyilin"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":85,"author":{"gitId":"yleeyilin"},"content":"     * Marks the task off the list if the user commands it to.","lastModifiedDate":"2024-01-28"},{"lineNumber":86,"author":{"gitId":"yleeyilin"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":87,"author":{"gitId":"yleeyilin"},"content":"     * @param instr The string with the task information.","lastModifiedDate":"2024-01-28"},{"lineNumber":88,"author":{"gitId":"yleeyilin"},"content":"     * @param thisStorage Local file access management.","lastModifiedDate":"2024-01-29"},{"lineNumber":89,"author":{"gitId":"yleeyilin"},"content":"     * @return A string that represents the results of instruction.","lastModifiedDate":"2024-02-04"},{"lineNumber":90,"author":{"gitId":"yleeyilin"},"content":"     * @throws DukeException When there is inappropriate input.","lastModifiedDate":"2024-01-28"},{"lineNumber":91,"author":{"gitId":"yleeyilin"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":92,"author":{"gitId":"yleeyilin"},"content":"    public String mark(String instr, Storage thisStorage) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":93,"author":{"gitId":"yleeyilin"},"content":"        String res \u003d \"\";","lastModifiedDate":"2024-02-04"},{"lineNumber":94,"author":{"gitId":"yleeyilin"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":95,"author":{"gitId":"yleeyilin"},"content":"            int instrNum \u003d Integer.valueOf(instr.split(\" \")[1]) - 1;","lastModifiedDate":"2024-01-28"},{"lineNumber":96,"author":{"gitId":"yleeyilin"},"content":"            res \u003d this.instrList.get(instrNum).markAsDone();","lastModifiedDate":"2024-02-04"},{"lineNumber":97,"author":{"gitId":"yleeyilin"},"content":"            thisStorage.saveTaskList(this.instrList);","lastModifiedDate":"2024-01-29"},{"lineNumber":98,"author":{"gitId":"yleeyilin"},"content":"            res \u003d \"Nice! I\u0027ve marked this task as done:\" + \"\\n\" + res;","lastModifiedDate":"2024-02-04"},{"lineNumber":99,"author":{"gitId":"yleeyilin"},"content":"            System.out.println(res);","lastModifiedDate":"2024-02-04"},{"lineNumber":100,"author":{"gitId":"yleeyilin"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":101,"author":{"gitId":"yleeyilin"},"content":"            throw new DukeException(\"OOPS!! You have inputted an invalid task number.\"","lastModifiedDate":"2024-02-03"},{"lineNumber":102,"author":{"gitId":"yleeyilin"},"content":"                + \" \\nTry again with a different task number!\");","lastModifiedDate":"2024-02-03"},{"lineNumber":103,"author":{"gitId":"yleeyilin"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":104,"author":{"gitId":"yleeyilin"},"content":"            throw new DukeException(\"OOOPS!!! You missed out the task number.\");","lastModifiedDate":"2024-01-28"},{"lineNumber":105,"author":{"gitId":"yleeyilin"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":106,"author":{"gitId":"yleeyilin"},"content":"        return res;","lastModifiedDate":"2024-02-04"},{"lineNumber":107,"author":{"gitId":"yleeyilin"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":108,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":109,"author":{"gitId":"yleeyilin"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":110,"author":{"gitId":"yleeyilin"},"content":"     * Unmark a task if the user commands it to.","lastModifiedDate":"2024-01-28"},{"lineNumber":111,"author":{"gitId":"yleeyilin"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":112,"author":{"gitId":"yleeyilin"},"content":"     * @param instr The string with the task information.","lastModifiedDate":"2024-01-28"},{"lineNumber":113,"author":{"gitId":"yleeyilin"},"content":"     * @param thisStorage Local file access management.","lastModifiedDate":"2024-02-03"},{"lineNumber":114,"author":{"gitId":"yleeyilin"},"content":"     * @return A string that represents the results of instruction.","lastModifiedDate":"2024-02-04"},{"lineNumber":115,"author":{"gitId":"yleeyilin"},"content":"     * @throws DukeException When there is inappropriate input.","lastModifiedDate":"2024-01-28"},{"lineNumber":116,"author":{"gitId":"yleeyilin"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":117,"author":{"gitId":"yleeyilin"},"content":"    public String unmark(String instr, Storage thisStorage) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":118,"author":{"gitId":"yleeyilin"},"content":"        String res \u003d \"\";","lastModifiedDate":"2024-02-04"},{"lineNumber":119,"author":{"gitId":"yleeyilin"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":120,"author":{"gitId":"yleeyilin"},"content":"            int instrNum \u003d Integer.valueOf(instr.split(\" \")[1]) - 1;","lastModifiedDate":"2024-01-28"},{"lineNumber":121,"author":{"gitId":"yleeyilin"},"content":"            res \u003d this.instrList.get(instrNum).markAsUndone();","lastModifiedDate":"2024-02-04"},{"lineNumber":122,"author":{"gitId":"yleeyilin"},"content":"            thisStorage.saveTaskList(this.instrList);","lastModifiedDate":"2024-01-29"},{"lineNumber":123,"author":{"gitId":"yleeyilin"},"content":"            res \u003d \"OK, I\u0027ve marked this task as not done yet:\" + \"\\n\" + res;","lastModifiedDate":"2024-02-04"},{"lineNumber":124,"author":{"gitId":"yleeyilin"},"content":"            System.out.println(res);","lastModifiedDate":"2024-02-04"},{"lineNumber":125,"author":{"gitId":"yleeyilin"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":126,"author":{"gitId":"yleeyilin"},"content":"            throw new DukeException(\"OOPS!! You have inputted an invalid task number.\"","lastModifiedDate":"2024-02-03"},{"lineNumber":127,"author":{"gitId":"yleeyilin"},"content":"                + \" \\nTry again with a different task number!\");","lastModifiedDate":"2024-02-03"},{"lineNumber":128,"author":{"gitId":"yleeyilin"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":129,"author":{"gitId":"yleeyilin"},"content":"            throw new DukeException(\"OOOPS!!! You missed out the task number.\");","lastModifiedDate":"2024-01-28"},{"lineNumber":130,"author":{"gitId":"yleeyilin"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":131,"author":{"gitId":"yleeyilin"},"content":"        return res;","lastModifiedDate":"2024-02-04"},{"lineNumber":132,"author":{"gitId":"yleeyilin"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":133,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":134,"author":{"gitId":"yleeyilin"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":135,"author":{"gitId":"yleeyilin"},"content":"     * Deletes a task if the user commands it to.","lastModifiedDate":"2024-01-28"},{"lineNumber":136,"author":{"gitId":"yleeyilin"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":137,"author":{"gitId":"yleeyilin"},"content":"     * @param instr The string with the task information.","lastModifiedDate":"2024-01-28"},{"lineNumber":138,"author":{"gitId":"yleeyilin"},"content":"     * @param thisStorage Local file access management.","lastModifiedDate":"2024-01-29"},{"lineNumber":139,"author":{"gitId":"yleeyilin"},"content":"     * @return A string that represents the results of instruction.","lastModifiedDate":"2024-02-04"},{"lineNumber":140,"author":{"gitId":"yleeyilin"},"content":"     * @throws DukeException When there is inappropriate input.","lastModifiedDate":"2024-01-28"},{"lineNumber":141,"author":{"gitId":"yleeyilin"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":142,"author":{"gitId":"yleeyilin"},"content":"    public String delete(String instr, Storage thisStorage) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":143,"author":{"gitId":"yleeyilin"},"content":"        String res \u003d \"\";","lastModifiedDate":"2024-02-04"},{"lineNumber":144,"author":{"gitId":"yleeyilin"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":145,"author":{"gitId":"yleeyilin"},"content":"            int ptr \u003d Integer.valueOf(instr.split(\" \")[1]) - 1;","lastModifiedDate":"2024-01-28"},{"lineNumber":146,"author":{"gitId":"yleeyilin"},"content":"            Task str \u003d this.instrList.get(ptr);","lastModifiedDate":"2024-01-28"},{"lineNumber":147,"author":{"gitId":"yleeyilin"},"content":"            this.instrList.remove(ptr);","lastModifiedDate":"2024-01-28"},{"lineNumber":148,"author":{"gitId":"yleeyilin"},"content":"            thisStorage.saveTaskList(this.instrList);","lastModifiedDate":"2024-01-29"},{"lineNumber":149,"author":{"gitId":"yleeyilin"},"content":"            res \u003d \"Noted. I\u0027ve removed this task: \\n\" + str.toString()","lastModifiedDate":"2024-02-04"},{"lineNumber":150,"author":{"gitId":"yleeyilin"},"content":"                + \"\\nNow you have \" + this.instrList.size() + \" tasks in the list.\";","lastModifiedDate":"2024-02-04"},{"lineNumber":151,"author":{"gitId":"yleeyilin"},"content":"            System.out.println(res);","lastModifiedDate":"2024-02-04"},{"lineNumber":152,"author":{"gitId":"yleeyilin"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":153,"author":{"gitId":"yleeyilin"},"content":"            throw new DukeException(\"OOOPS!!! You missed out the task number.\");","lastModifiedDate":"2024-01-28"},{"lineNumber":154,"author":{"gitId":"yleeyilin"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":155,"author":{"gitId":"yleeyilin"},"content":"            throw new DukeException(\"OOPS!! You have inputted an invalid task number.\"","lastModifiedDate":"2024-02-03"},{"lineNumber":156,"author":{"gitId":"yleeyilin"},"content":"                + \" \\nTry again with a different task number!\");","lastModifiedDate":"2024-02-03"},{"lineNumber":157,"author":{"gitId":"yleeyilin"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":158,"author":{"gitId":"yleeyilin"},"content":"        return res;","lastModifiedDate":"2024-02-04"},{"lineNumber":159,"author":{"gitId":"yleeyilin"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":160,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":161,"author":{"gitId":"yleeyilin"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":162,"author":{"gitId":"yleeyilin"},"content":"     * Edits the details for the different tasks.","lastModifiedDate":"2024-02-10"},{"lineNumber":163,"author":{"gitId":"yleeyilin"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":164,"author":{"gitId":"yleeyilin"},"content":"     * @param cmdWord Command word informing what detail to be edited.","lastModifiedDate":"2024-02-10"},{"lineNumber":165,"author":{"gitId":"yleeyilin"},"content":"     * @param newDetails Representing the new details to be added.","lastModifiedDate":"2024-02-10"},{"lineNumber":166,"author":{"gitId":"yleeyilin"},"content":"     * @param ptr Representing the task number to be edited.","lastModifiedDate":"2024-02-10"},{"lineNumber":167,"author":{"gitId":"yleeyilin"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":168,"author":{"gitId":"yleeyilin"},"content":"     * @return A string representing the work that has been done.","lastModifiedDate":"2024-02-10"},{"lineNumber":169,"author":{"gitId":"yleeyilin"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":170,"author":{"gitId":"yleeyilin"},"content":"    public String edit(String cmdWord, String newDetails, int ptr) {","lastModifiedDate":"2024-02-10"},{"lineNumber":171,"author":{"gitId":"yleeyilin"},"content":"        Task tsk \u003d this.instrList.get(ptr - 1);","lastModifiedDate":"2024-02-10"},{"lineNumber":172,"author":{"gitId":"yleeyilin"},"content":"        try {","lastModifiedDate":"2024-02-10"},{"lineNumber":173,"author":{"gitId":"yleeyilin"},"content":"            switch (cmdWord) {","lastModifiedDate":"2024-02-10"},{"lineNumber":174,"author":{"gitId":"yleeyilin"},"content":"            case(\"description\"):","lastModifiedDate":"2024-02-10"},{"lineNumber":175,"author":{"gitId":"yleeyilin"},"content":"                return tsk.updateDescription(newDetails);","lastModifiedDate":"2024-02-10"},{"lineNumber":176,"author":{"gitId":"yleeyilin"},"content":"            case(\"start\"):","lastModifiedDate":"2024-02-10"},{"lineNumber":177,"author":{"gitId":"yleeyilin"},"content":"                if (tsk instanceof Event) {","lastModifiedDate":"2024-02-10"},{"lineNumber":178,"author":{"gitId":"yleeyilin"},"content":"                    return ((Event) tsk).updateStart(newDetails);","lastModifiedDate":"2024-02-10"},{"lineNumber":179,"author":{"gitId":"yleeyilin"},"content":"                } else {","lastModifiedDate":"2024-02-10"},{"lineNumber":180,"author":{"gitId":"yleeyilin"},"content":"                    throw new DukeException(\"OOPSIE! Task you are trying to edit is NOT AN EVENT!!!\");","lastModifiedDate":"2024-02-10"},{"lineNumber":181,"author":{"gitId":"yleeyilin"},"content":"                }","lastModifiedDate":"2024-02-10"},{"lineNumber":182,"author":{"gitId":"yleeyilin"},"content":"            case(\"end\"):","lastModifiedDate":"2024-02-10"},{"lineNumber":183,"author":{"gitId":"yleeyilin"},"content":"                if (tsk instanceof Event) {","lastModifiedDate":"2024-02-10"},{"lineNumber":184,"author":{"gitId":"yleeyilin"},"content":"                    return ((Event) tsk).updateStart(newDetails);","lastModifiedDate":"2024-02-10"},{"lineNumber":185,"author":{"gitId":"yleeyilin"},"content":"                } else {","lastModifiedDate":"2024-02-10"},{"lineNumber":186,"author":{"gitId":"yleeyilin"},"content":"                    throw new DukeException(\"OOPSIE! Task you are trying to edit is NOT AN EVENT!!!\");","lastModifiedDate":"2024-02-10"},{"lineNumber":187,"author":{"gitId":"yleeyilin"},"content":"                }","lastModifiedDate":"2024-02-10"},{"lineNumber":188,"author":{"gitId":"yleeyilin"},"content":"            case(\"by\"):","lastModifiedDate":"2024-02-10"},{"lineNumber":189,"author":{"gitId":"yleeyilin"},"content":"                if (tsk instanceof Deadline) {","lastModifiedDate":"2024-02-10"},{"lineNumber":190,"author":{"gitId":"yleeyilin"},"content":"                    return ((Deadline) tsk).updateBy(newDetails);","lastModifiedDate":"2024-02-10"},{"lineNumber":191,"author":{"gitId":"yleeyilin"},"content":"                } else {","lastModifiedDate":"2024-02-10"},{"lineNumber":192,"author":{"gitId":"yleeyilin"},"content":"                    throw new DukeException(\"OOPSIE! Task you are trying to edit is NOT A DEADLINE!!!\");","lastModifiedDate":"2024-02-10"},{"lineNumber":193,"author":{"gitId":"yleeyilin"},"content":"                }","lastModifiedDate":"2024-02-10"},{"lineNumber":194,"author":{"gitId":"yleeyilin"},"content":"            default:","lastModifiedDate":"2024-02-10"},{"lineNumber":195,"author":{"gitId":"yleeyilin"},"content":"                throw new DukeException(\"Invalid details to be edited\");","lastModifiedDate":"2024-02-10"},{"lineNumber":196,"author":{"gitId":"yleeyilin"},"content":"            }","lastModifiedDate":"2024-02-10"},{"lineNumber":197,"author":{"gitId":"yleeyilin"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":198,"author":{"gitId":"yleeyilin"},"content":"            return e.toString();","lastModifiedDate":"2024-02-10"},{"lineNumber":199,"author":{"gitId":"yleeyilin"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":200,"author":{"gitId":"yleeyilin"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":201,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":202,"author":{"gitId":"yleeyilin"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":203,"author":{"gitId":"yleeyilin"},"content":"     * Finds the list of task that matches the key words.","lastModifiedDate":"2024-02-03"},{"lineNumber":204,"author":{"gitId":"yleeyilin"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":205,"author":{"gitId":"yleeyilin"},"content":"     * @param instr The string with the task information.","lastModifiedDate":"2024-02-03"},{"lineNumber":206,"author":{"gitId":"yleeyilin"},"content":"     * @return A string that represents the results of instruction.","lastModifiedDate":"2024-02-04"},{"lineNumber":207,"author":{"gitId":"yleeyilin"},"content":"     * @throws DukeException When there is inappropriate input.","lastModifiedDate":"2024-02-03"},{"lineNumber":208,"author":{"gitId":"yleeyilin"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":209,"author":{"gitId":"yleeyilin"},"content":"    public String find(String instr) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":210,"author":{"gitId":"yleeyilin"},"content":"        String res \u003d \"\";","lastModifiedDate":"2024-02-04"},{"lineNumber":211,"author":{"gitId":"yleeyilin"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":212,"author":{"gitId":"yleeyilin"},"content":"            String taskKeyword \u003d instr.split(\" \")[1];","lastModifiedDate":"2024-01-29"},{"lineNumber":213,"author":{"gitId":"yleeyilin"},"content":"            res \u003d \"Here are the matching tasks in your list:\";","lastModifiedDate":"2024-02-04"},{"lineNumber":214,"author":{"gitId":"yleeyilin"},"content":"            System.out.println(res);","lastModifiedDate":"2024-02-04"},{"lineNumber":215,"author":{"gitId":"yleeyilin"},"content":"            int ctr \u003d 1;","lastModifiedDate":"2024-01-29"},{"lineNumber":216,"author":{"gitId":"yleeyilin"},"content":"            for (int i \u003d 0; i \u003c this.instrList.size(); i++) {","lastModifiedDate":"2024-01-29"},{"lineNumber":217,"author":{"gitId":"yleeyilin"},"content":"                if (this.instrList.get(i).description.contains(taskKeyword)) {","lastModifiedDate":"2024-01-29"},{"lineNumber":218,"author":{"gitId":"yleeyilin"},"content":"                    System.out.println(ctr + 1 + \".\" + this.instrList.get(i).toString());","lastModifiedDate":"2024-01-29"},{"lineNumber":219,"author":{"gitId":"yleeyilin"},"content":"                    res +\u003d ctr + 1 + \".\" + this.instrList.get(i).toString();","lastModifiedDate":"2024-02-04"},{"lineNumber":220,"author":{"gitId":"yleeyilin"},"content":"                }","lastModifiedDate":"2024-01-29"},{"lineNumber":221,"author":{"gitId":"yleeyilin"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":222,"author":{"gitId":"yleeyilin"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":223,"author":{"gitId":"yleeyilin"},"content":"            throw new DukeException(\"OOOPS!!! You missed out the task to search for.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":224,"author":{"gitId":"yleeyilin"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":225,"author":{"gitId":"yleeyilin"},"content":"        return res;","lastModifiedDate":"2024-02-04"},{"lineNumber":226,"author":{"gitId":"yleeyilin"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":227,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":228,"author":{"gitId":"yleeyilin"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":229,"author":{"gitId":"yleeyilin"},"content":"     * Process todo task.","lastModifiedDate":"2024-02-15"},{"lineNumber":230,"author":{"gitId":"yleeyilin"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":231,"author":{"gitId":"yleeyilin"},"content":"     * @param instr The string with the task information.","lastModifiedDate":"2024-02-15"},{"lineNumber":232,"author":{"gitId":"yleeyilin"},"content":"     * @param thisStorage Task List manager.","lastModifiedDate":"2024-02-15"},{"lineNumber":233,"author":{"gitId":"yleeyilin"},"content":"     * @return A string representing the result.","lastModifiedDate":"2024-02-15"},{"lineNumber":234,"author":{"gitId":"yleeyilin"},"content":"     * @throws DukeException","lastModifiedDate":"2024-02-15"},{"lineNumber":235,"author":{"gitId":"yleeyilin"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":236,"author":{"gitId":"yleeyilin"},"content":"    public String processTodo(String instr, Storage thisStorage) throws DukeException {","lastModifiedDate":"2024-02-15"},{"lineNumber":237,"author":{"gitId":"yleeyilin"},"content":"        try {","lastModifiedDate":"2024-02-15"},{"lineNumber":238,"author":{"gitId":"yleeyilin"},"content":"            Todo taskTodo \u003d new Todo(instr.split(\"todo \")[1]);","lastModifiedDate":"2024-02-15"},{"lineNumber":239,"author":{"gitId":"yleeyilin"},"content":"            this.instrList.add(taskTodo);","lastModifiedDate":"2024-02-15"},{"lineNumber":240,"author":{"gitId":"yleeyilin"},"content":"            thisStorage.saveTaskList(this.instrList);","lastModifiedDate":"2024-02-15"},{"lineNumber":241,"author":{"gitId":"yleeyilin"},"content":"            String res \u003d \"Got it. I\u0027ve added this task: \\n \"","lastModifiedDate":"2024-02-15"},{"lineNumber":242,"author":{"gitId":"yleeyilin"},"content":"                + taskTodo.toString();","lastModifiedDate":"2024-02-15"},{"lineNumber":243,"author":{"gitId":"yleeyilin"},"content":"            return res;","lastModifiedDate":"2024-02-15"},{"lineNumber":244,"author":{"gitId":"yleeyilin"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":245,"author":{"gitId":"yleeyilin"},"content":"            throw new DukeException(\"OOPS!!! The description of a todo cannot be empty. \\nTry again!\");","lastModifiedDate":"2024-02-15"},{"lineNumber":246,"author":{"gitId":"yleeyilin"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":247,"author":{"gitId":"yleeyilin"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":248,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":249,"author":{"gitId":"yleeyilin"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":250,"author":{"gitId":"yleeyilin"},"content":"     * Process deadline task.","lastModifiedDate":"2024-02-15"},{"lineNumber":251,"author":{"gitId":"yleeyilin"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":252,"author":{"gitId":"yleeyilin"},"content":"     * @param instr The string with the task information.","lastModifiedDate":"2024-02-15"},{"lineNumber":253,"author":{"gitId":"yleeyilin"},"content":"     * @param thisStorage Task List manager.","lastModifiedDate":"2024-02-15"},{"lineNumber":254,"author":{"gitId":"yleeyilin"},"content":"     * @return A string representing the result.","lastModifiedDate":"2024-02-15"},{"lineNumber":255,"author":{"gitId":"yleeyilin"},"content":"     * @throws DukeException","lastModifiedDate":"2024-02-15"},{"lineNumber":256,"author":{"gitId":"yleeyilin"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":257,"author":{"gitId":"yleeyilin"},"content":"    public String processDeadline(String instr, Storage thisStorage) throws DukeException {","lastModifiedDate":"2024-02-15"},{"lineNumber":258,"author":{"gitId":"yleeyilin"},"content":"        try {","lastModifiedDate":"2024-02-15"},{"lineNumber":259,"author":{"gitId":"yleeyilin"},"content":"            String deadlineDescription \u003d instr.substring(9);","lastModifiedDate":"2024-02-15"},{"lineNumber":260,"author":{"gitId":"yleeyilin"},"content":"            String[] tskNames \u003d deadlineDescription.split(\" /by \");","lastModifiedDate":"2024-02-15"},{"lineNumber":261,"author":{"gitId":"yleeyilin"},"content":"            Deadline taskDeadline \u003d new Deadline(tskNames[0], tskNames[1]);","lastModifiedDate":"2024-02-15"},{"lineNumber":262,"author":{"gitId":"yleeyilin"},"content":"            this.instrList.add(taskDeadline);","lastModifiedDate":"2024-02-15"},{"lineNumber":263,"author":{"gitId":"yleeyilin"},"content":"            thisStorage.saveTaskList(this.instrList);","lastModifiedDate":"2024-02-15"},{"lineNumber":264,"author":{"gitId":"yleeyilin"},"content":"            String res \u003d \"Got it. I\u0027ve added this task: \\n \"","lastModifiedDate":"2024-02-15"},{"lineNumber":265,"author":{"gitId":"yleeyilin"},"content":"                + taskDeadline.toString();","lastModifiedDate":"2024-02-15"},{"lineNumber":266,"author":{"gitId":"yleeyilin"},"content":"            return res;","lastModifiedDate":"2024-02-15"},{"lineNumber":267,"author":{"gitId":"yleeyilin"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":268,"author":{"gitId":"yleeyilin"},"content":"            throw new DukeException(\"OOPS!!! You cannot leave the description\"","lastModifiedDate":"2024-02-15"},{"lineNumber":269,"author":{"gitId":"yleeyilin"},"content":"                + \" of a deadline to be empty. \\nTry again!\");","lastModifiedDate":"2024-02-15"},{"lineNumber":270,"author":{"gitId":"yleeyilin"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":271,"author":{"gitId":"yleeyilin"},"content":"            throw new DukeException(\"OOPS!!! You missed out the deadline time of this task. \\nTry again!\");","lastModifiedDate":"2024-02-15"},{"lineNumber":272,"author":{"gitId":"yleeyilin"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":273,"author":{"gitId":"yleeyilin"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":274,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":275,"author":{"gitId":"yleeyilin"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":276,"author":{"gitId":"yleeyilin"},"content":"     * Process event task.","lastModifiedDate":"2024-02-15"},{"lineNumber":277,"author":{"gitId":"yleeyilin"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":278,"author":{"gitId":"yleeyilin"},"content":"     * @param instr The string with the task information.","lastModifiedDate":"2024-02-15"},{"lineNumber":279,"author":{"gitId":"yleeyilin"},"content":"     * @param thisStorage Task List manager.","lastModifiedDate":"2024-02-15"},{"lineNumber":280,"author":{"gitId":"yleeyilin"},"content":"     * @return A string representing the result.","lastModifiedDate":"2024-02-15"},{"lineNumber":281,"author":{"gitId":"yleeyilin"},"content":"     * @throws DukeException","lastModifiedDate":"2024-02-15"},{"lineNumber":282,"author":{"gitId":"yleeyilin"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":283,"author":{"gitId":"yleeyilin"},"content":"    public String processEvent(String instr, Storage thisStorage) throws DukeException {","lastModifiedDate":"2024-02-15"},{"lineNumber":284,"author":{"gitId":"yleeyilin"},"content":"        try {","lastModifiedDate":"2024-02-15"},{"lineNumber":285,"author":{"gitId":"yleeyilin"},"content":"            String eventDescription \u003d instr.substring(6);","lastModifiedDate":"2024-02-15"},{"lineNumber":286,"author":{"gitId":"yleeyilin"},"content":"            String[] instrSubString \u003d eventDescription.split(\" /from \");","lastModifiedDate":"2024-02-15"},{"lineNumber":287,"author":{"gitId":"yleeyilin"},"content":"            String name \u003d instrSubString[0];","lastModifiedDate":"2024-02-15"},{"lineNumber":288,"author":{"gitId":"yleeyilin"},"content":"            String[] startAndEnd \u003d instrSubString[1].split(\" /to \");","lastModifiedDate":"2024-02-15"},{"lineNumber":289,"author":{"gitId":"yleeyilin"},"content":"            Event taskEvent \u003d new Event(name, startAndEnd[0], startAndEnd[1]);","lastModifiedDate":"2024-02-15"},{"lineNumber":290,"author":{"gitId":"yleeyilin"},"content":"            this.instrList.add(taskEvent);","lastModifiedDate":"2024-02-15"},{"lineNumber":291,"author":{"gitId":"yleeyilin"},"content":"            thisStorage.saveTaskList(this.instrList);","lastModifiedDate":"2024-02-15"},{"lineNumber":292,"author":{"gitId":"yleeyilin"},"content":"            String res \u003d \"Got it. I\u0027ve added this task: \\n \"","lastModifiedDate":"2024-02-15"},{"lineNumber":293,"author":{"gitId":"yleeyilin"},"content":"                + taskEvent.toString();","lastModifiedDate":"2024-02-15"},{"lineNumber":294,"author":{"gitId":"yleeyilin"},"content":"            return res;","lastModifiedDate":"2024-02-15"},{"lineNumber":295,"author":{"gitId":"yleeyilin"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":296,"author":{"gitId":"yleeyilin"},"content":"            throw new DukeException(\"OOPS!!! You cannot leave the\"","lastModifiedDate":"2024-02-15"},{"lineNumber":297,"author":{"gitId":"yleeyilin"},"content":"                + \" description of an event to be empty. \\nTry again!\");","lastModifiedDate":"2024-02-15"},{"lineNumber":298,"author":{"gitId":"yleeyilin"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":299,"author":{"gitId":"yleeyilin"},"content":"            throw new DukeException(\"OOPS!!! You missed out the date of this task. \\nTry again!\");","lastModifiedDate":"2024-02-15"},{"lineNumber":300,"author":{"gitId":"yleeyilin"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":301,"author":{"gitId":"yleeyilin"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":302,"author":{"gitId":"yleeyilin"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"yleeyilin":302}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yleeyilin"},"content":"package duke.task;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"yleeyilin"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"yleeyilin"},"content":" * Represents the todo task.","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"yleeyilin"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"yleeyilin"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"yleeyilin"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"yleeyilin"},"content":"     * Constructor to instantiate a todo task.","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"yleeyilin"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"yleeyilin"},"content":"     * @param description Represents the string describing what the task is.","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"yleeyilin"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"yleeyilin"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"yleeyilin"},"content":"        super(description);","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"yleeyilin"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"yleeyilin"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"yleeyilin"},"content":"     * Overloaded constructor to instantiate a todo task with a specific checkmark.","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"yleeyilin"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"yleeyilin"},"content":"     * @param description Represents the string describing what the task is.","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"yleeyilin"},"content":"     * @param isDone Represents the boolean describing whether the task is checked.","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"yleeyilin"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"yleeyilin"},"content":"    public Todo(String description, Boolean isDone) {","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"yleeyilin"},"content":"        super(description, isDone);","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"yleeyilin"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"yleeyilin"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"yleeyilin"},"content":"     * Returns a string formatting of the todo task.","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"yleeyilin"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"yleeyilin"},"content":"     * @return A string representation of the todo task.","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"yleeyilin"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"yleeyilin"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":33,"author":{"gitId":"yleeyilin"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":34,"author":{"gitId":"yleeyilin"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-23"},{"lineNumber":35,"author":{"gitId":"yleeyilin"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":36,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"yleeyilin"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"yleeyilin"},"content":"     * Returns a special string formmating of the todo task to write into local file.","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"yleeyilin"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"yleeyilin"},"content":"     * @return A special string representation of the todo task used in the local file.","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"yleeyilin"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"yleeyilin"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"yleeyilin"},"content":"    public String toSave() {","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"yleeyilin"},"content":"        String strDone \u003d this.isDone ? \"1\" : \"0\";","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"yleeyilin"},"content":"        return \"T|\" + strDone + \"|\" + this.description;","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"yleeyilin"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"yleeyilin"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"yleeyilin":47}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"yleeyilin"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"yleeyilin"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"yleeyilin"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"yleeyilin"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"yleeyilin"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"yleeyilin"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"yleeyilin"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"yleeyilin"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"yleeyilin"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"yleeyilin"},"content":"  \u003c/children\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"yleeyilin"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"yleeyilin"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"yleeyilin"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"yleeyilin"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"yleeyilin":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"yleeyilin"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"yleeyilin"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"yleeyilin"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"yleeyilin"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"yleeyilin"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"yleeyilin"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"yleeyilin"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"yleeyilin"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"yleeyilin"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"yleeyilin"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"yleeyilin"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"yleeyilin"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"yleeyilin"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"yleeyilin"},"content":"      \u003c/content\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"yleeyilin"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"yleeyilin"},"content":"  \u003c/children\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"yleeyilin"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"yleeyilin":19}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yleeyilin"},"content":"package duke.task;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"yleeyilin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"yleeyilin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"yleeyilin"},"content":"public class DeadlineTest {","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"yleeyilin"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"yleeyilin"},"content":"    public void deadline_toStringTest() {","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"yleeyilin"},"content":"        Deadline tsk \u003d new Deadline(\"project meeting\", \"Sunday\");","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"yleeyilin"},"content":"        assertEquals(\"[D][ ] project meeting (by: Sunday)\", tsk.toString());","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"yleeyilin"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"yleeyilin"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"yleeyilin"},"content":"    public void deadline_toSaveTest() {","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"yleeyilin"},"content":"        Deadline tsk \u003d new Deadline(\"project meeting\", \"Sunday\");","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"yleeyilin"},"content":"        assertEquals(\"D|0|project meeting|Sunday\", tsk.toSave());","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"yleeyilin"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"yleeyilin"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"yleeyilin"},"content":"    public void deadline_dateTimeTest() {","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"yleeyilin"},"content":"        Deadline tsk \u003d new Deadline(\"return book\", \"2/12/2019 1800\");","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"yleeyilin"},"content":"        assertEquals(\"D|0|return book|Dec 2 2019 6:00 PM\", tsk.toSave());","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"yleeyilin"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"yleeyilin"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"yleeyilin"},"content":"    public void deadline_dateTest() {","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"yleeyilin"},"content":"        Deadline tsk \u003d new Deadline(\"return book\", \"2/12/2019\");","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"yleeyilin"},"content":"        assertEquals(\"D|0|return book|Dec 2 2019\", tsk.toSave());","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"yleeyilin"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"yleeyilin"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"yleeyilin":31}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yleeyilin"},"content":"package duke.task;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"yleeyilin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"yleeyilin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"yleeyilin"},"content":"public class EventTest {","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"yleeyilin"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"yleeyilin"},"content":"    public void event_toStringTest() {","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"yleeyilin"},"content":"        Event tsk \u003d new Event(\"project meeting\", \"Mon 2pm\", \"4pm\");","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"yleeyilin"},"content":"        assertEquals(\"[E][ ] project meeting (from: Mon 2pm to: 4pm)\", tsk.toString());","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"yleeyilin"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"yleeyilin"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"yleeyilin"},"content":"    public void event_toSaveTest() {","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"yleeyilin"},"content":"        Event tsk \u003d new Event(\"project meeting\", \"Mon 2pm\", \"4pm\");","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"yleeyilin"},"content":"        assertEquals(\"E|0|project meeting|Mon 2pm|4pm\", tsk.toSave());","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"yleeyilin"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"yleeyilin"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"yleeyilin":19}},{"path":"src/test/java/duke/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yleeyilin"},"content":"package duke.task;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"yleeyilin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"yleeyilin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"yleeyilin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"yleeyilin"},"content":"import duke.DukeException;","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"yleeyilin"},"content":"import duke.Storage;","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"yleeyilin"},"content":"public class TaskListTest {","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"yleeyilin"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"yleeyilin"},"content":"    public void tasklist_markTaskTest() {","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"yleeyilin"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"yleeyilin"},"content":"            TaskList tskLst \u003d new TaskList(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"yleeyilin"},"content":"            Storage storage \u003d new Storage(\"src/main/data/test/caching.txt\");","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"yleeyilin"},"content":"            tskLst.addTask(TaskList.TaskCommand.DEADLINE, \"deadline return book /by Sunday\", storage);","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"yleeyilin"},"content":"            tskLst.mark(\"mark 1\", storage);","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"yleeyilin"},"content":"            assertEquals(true, tskLst.instrList.get(0).isDone);","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"yleeyilin"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"yleeyilin"},"content":"            System.out.println(e.toString());","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"yleeyilin"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"yleeyilin"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"yleeyilin"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"yleeyilin"},"content":"    public void tasklist_unmarkTaskTest() {","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"yleeyilin"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"yleeyilin"},"content":"            TaskList tskLst \u003d new TaskList(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"yleeyilin"},"content":"            Storage storage \u003d new Storage(\"src/main/data/test/caching.txt\");","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"yleeyilin"},"content":"            tskLst.addTask(TaskList.TaskCommand.DEADLINE, \"deadline return book /by Sunday\", storage);","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"yleeyilin"},"content":"            tskLst.unmark(\"unmark 1\", storage);","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"yleeyilin"},"content":"            assertEquals(false, tskLst.instrList.get(0).isDone);","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"yleeyilin"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"yleeyilin"},"content":"            System.out.println(e.toString());","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"yleeyilin"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"yleeyilin"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"yleeyilin"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"yleeyilin":39}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yleeyilin"},"content":"package duke.task;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"yleeyilin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"yleeyilin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"yleeyilin"},"content":"public class TodoTest {","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"yleeyilin"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"yleeyilin"},"content":"    public void todo_toStringTest() {","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"yleeyilin"},"content":"        Todo tsk \u003d new Todo(\"borrow books\");","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"yleeyilin"},"content":"        assertEquals(\"[T][ ] borrow books\", tsk.toString());","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"yleeyilin"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"yleeyilin"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"yleeyilin"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"yleeyilin"},"content":"    public void todo_toSaveTest() {","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"yleeyilin"},"content":"        Todo tsk \u003d new Todo(\"borrow books\");","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"yleeyilin"},"content":"        assertEquals(\"T|0|borrow books\", tsk.toSave());","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"yleeyilin"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"yleeyilin"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"yleeyilin":19}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yleeyilin"},"content":"todo borrow books","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"yleeyilin"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"yleeyilin"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"yleeyilin"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"yleeyilin"},"content":"mark 1","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"yleeyilin"},"content":"mark 3 ","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"yleeyilin"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"yleeyilin"},"content":"unmark 1","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"yleeyilin"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"yleeyilin"},"content":"bye","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"yleeyilin":10}}]
