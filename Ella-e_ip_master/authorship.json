[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Ella-e"},"content":"# duke.Duke project template","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"Ella-e"},"content":"1. Open Intellij (if you are not in the welcome screen, click `duke.storage.Storage` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Ella-e"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Ella-e":3,"-":21}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"Ella-e"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"Ella-e"},"content":"}","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"Ella-e"},"content":"checkstyle {","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"Ella-e"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"Ella-e"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Ella-e":6,"-":41}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Ella-e"},"content":"T|1|eat","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Ella-e"},"content":"T|0|abc","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Ella-e"},"content":"T|0|abc","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Ella-e":3}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ella-e"},"content":"package duke;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Ella-e"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"Ella-e"},"content":"import duke.exceptions.BaseException;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"Ella-e"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"Ella-e"},"content":"import duke.tasks.Task;","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"Ella-e"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"Ella-e"},"content":"import duke.ui.UI;","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"Ella-e"},"content":"import duke.utils.KeyEnum;","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"Ella-e"},"content":"import duke.utils.Parser;","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":14,"author":{"gitId":"Ella-e"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Ella-e"},"content":" * Main chatbot class.","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Ella-e"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"Ella-e"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"Ella-e"},"content":"    private Storage storage;","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"Ella-e"},"content":"    private UI ui;","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"Ella-e"},"content":"     * Initializes by loading the stored file.","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"Ella-e"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"Ella-e"},"content":"     * @param filePath Path of stored file.","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"Ella-e"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"Ella-e"},"content":"        this.ui \u003d new UI();","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"Ella-e"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"Ella-e"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"Ella-e"},"content":"            this.tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"Ella-e"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"Ella-e"},"content":"            ui.showLoadingError();","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"Ella-e"},"content":"            this.tasks \u003d new TaskList();","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"Ella-e"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":36,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":37,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":38,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"Ella-e"},"content":"     * Runs the chatbot.","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"Ella-e"},"content":"    public void run() {","lastModifiedDate":"2024-01-22"},{"lineNumber":42,"author":{"gitId":"Ella-e"},"content":"        ui.onEnter();","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"Ella-e"},"content":"        while (true) {","lastModifiedDate":"2024-01-22"},{"lineNumber":44,"author":{"gitId":"Ella-e"},"content":"            try {","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"Ella-e"},"content":"                String userInput \u003d ui.getUserInput();","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"Ella-e"},"content":"                // use parser to process the userInput","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"Ella-e"},"content":"                // the parser object contains all the current user input line information","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"Ella-e"},"content":"                Parser parser \u003d new Parser();","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"Ella-e"},"content":"                parser.parse(userInput);","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"Ella-e"},"content":"                // check for end the session","lastModifiedDate":"2024-01-22"},{"lineNumber":52,"author":{"gitId":"Ella-e"},"content":"                if (parser.getCurrentKey().equals(KeyEnum.EXITKEY)) {","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"Ella-e"},"content":"                    break;","lastModifiedDate":"2024-01-22"},{"lineNumber":54,"author":{"gitId":"Ella-e"},"content":"                }","lastModifiedDate":"2024-01-22"},{"lineNumber":55,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":56,"author":{"gitId":"Ella-e"},"content":"                // continue for the functionality","lastModifiedDate":"2024-01-22"},{"lineNumber":57,"author":{"gitId":"Ella-e"},"content":"                switch (parser.getCurrentKey()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"Ella-e"},"content":"                case DEADLINE:","lastModifiedDate":"2024-01-22"},{"lineNumber":59,"author":{"gitId":"Ella-e"},"content":"                case TODO:","lastModifiedDate":"2024-01-22"},{"lineNumber":60,"author":{"gitId":"Ella-e"},"content":"                case EVENT:","lastModifiedDate":"2024-01-22"},{"lineNumber":61,"author":{"gitId":"Ella-e"},"content":"                    Task task \u003d tasks.addTask(parser.getInputDetail(),","lastModifiedDate":"2024-02-06"},{"lineNumber":62,"author":{"gitId":"Ella-e"},"content":"                        parser.getFrom(), parser.getTo(), parser.getCurrentKey());","lastModifiedDate":"2024-02-06"},{"lineNumber":63,"author":{"gitId":"Ella-e"},"content":"                    storage.writeTasksToFile(tasks);","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"Ella-e"},"content":"                    ui.onAddSuccess(task, tasks.getNumOfTasks());","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"Ella-e"},"content":"                    break;","lastModifiedDate":"2024-01-22"},{"lineNumber":66,"author":{"gitId":"Ella-e"},"content":"                case LIST:","lastModifiedDate":"2024-01-22"},{"lineNumber":67,"author":{"gitId":"Ella-e"},"content":"                    ui.showList(tasks);","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"Ella-e"},"content":"                    break;","lastModifiedDate":"2024-01-22"},{"lineNumber":69,"author":{"gitId":"Ella-e"},"content":"                case MARK:","lastModifiedDate":"2024-01-22"},{"lineNumber":70,"author":{"gitId":"Ella-e"},"content":"                    Task markedTask \u003d tasks.markTaskById(parser.getIndex(), true);","lastModifiedDate":"2024-01-29"},{"lineNumber":71,"author":{"gitId":"Ella-e"},"content":"                    storage.writeTasksToFile(tasks);","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"Ella-e"},"content":"                    ui.onMarkDone(markedTask);","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"Ella-e"},"content":"                    break;","lastModifiedDate":"2024-01-22"},{"lineNumber":74,"author":{"gitId":"Ella-e"},"content":"                case UNMARK:","lastModifiedDate":"2024-01-22"},{"lineNumber":75,"author":{"gitId":"Ella-e"},"content":"                    Task unMarkedTask \u003d tasks.markTaskById(parser.getIndex(), false);","lastModifiedDate":"2024-01-29"},{"lineNumber":76,"author":{"gitId":"Ella-e"},"content":"                    storage.writeTasksToFile(tasks);","lastModifiedDate":"2024-01-29"},{"lineNumber":77,"author":{"gitId":"Ella-e"},"content":"                    ui.onUnmarkDone(unMarkedTask);","lastModifiedDate":"2024-01-29"},{"lineNumber":78,"author":{"gitId":"Ella-e"},"content":"                    break;","lastModifiedDate":"2024-01-22"},{"lineNumber":79,"author":{"gitId":"Ella-e"},"content":"                case DELETE:","lastModifiedDate":"2024-01-22"},{"lineNumber":80,"author":{"gitId":"Ella-e"},"content":"                    Task deletedTask \u003d tasks.deleteTaskById(parser.getIndex());","lastModifiedDate":"2024-01-29"},{"lineNumber":81,"author":{"gitId":"Ella-e"},"content":"                    storage.writeTasksToFile(tasks);","lastModifiedDate":"2024-01-29"},{"lineNumber":82,"author":{"gitId":"Ella-e"},"content":"                    ui.onDelete(deletedTask, tasks);","lastModifiedDate":"2024-01-29"},{"lineNumber":83,"author":{"gitId":"Ella-e"},"content":"                    break;","lastModifiedDate":"2024-01-22"},{"lineNumber":84,"author":{"gitId":"Ella-e"},"content":"                case FIND:","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"Ella-e"},"content":"                    TaskList matchedTasks \u003d tasks.findTasks(parser.getInputDetail());","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"Ella-e"},"content":"                    ui.showMatchedList(matchedTasks);","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"Ella-e"},"content":"                    break;","lastModifiedDate":"2024-02-06"},{"lineNumber":88,"author":{"gitId":"Ella-e"},"content":"                default:","lastModifiedDate":"2024-02-06"},{"lineNumber":89,"author":{"gitId":"Ella-e"},"content":"                    break;","lastModifiedDate":"2024-02-06"},{"lineNumber":90,"author":{"gitId":"Ella-e"},"content":"                }","lastModifiedDate":"2024-01-22"},{"lineNumber":91,"author":{"gitId":"Ella-e"},"content":"            } catch (BaseException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":92,"author":{"gitId":"Ella-e"},"content":"                ui.showErrorMsg(e.getMessage());","lastModifiedDate":"2024-01-29"},{"lineNumber":93,"author":{"gitId":"Ella-e"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":94,"author":{"gitId":"Ella-e"},"content":"                ui.showLoadingError();","lastModifiedDate":"2024-01-29"},{"lineNumber":95,"author":{"gitId":"Ella-e"},"content":"            }","lastModifiedDate":"2024-01-22"},{"lineNumber":96,"author":{"gitId":"Ella-e"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":97,"author":{"gitId":"Ella-e"},"content":"        ui.onExit();","lastModifiedDate":"2024-01-29"},{"lineNumber":98,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":99,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":100,"author":{"gitId":"Ella-e"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-22"},{"lineNumber":101,"author":{"gitId":"Ella-e"},"content":"        Duke duke \u003d new Duke(\"./data/duke.txt\");","lastModifiedDate":"2024-01-29"},{"lineNumber":102,"author":{"gitId":"Ella-e"},"content":"        duke.run();","lastModifiedDate":"2024-01-22"},{"lineNumber":103,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Ella-e":102,"-":2}},{"path":"src/main/java/duke/exceptions/BaseException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ella-e"},"content":"package duke.exceptions;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"Ella-e"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Ella-e"},"content":" * Base exception for this project.","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Ella-e"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Ella-e"},"content":"public class BaseException extends RuntimeException {","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Ella-e"},"content":"     * Initializes BaseException based on the parent class RuntimeException.","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Ella-e"},"content":"    public BaseException() {","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"Ella-e"},"content":"        super();","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Ella-e"},"content":"     * Initializes BaseException based on the parent class RuntimeException and message and cause given.","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"Ella-e"},"content":"     * @param message warning message.","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Ella-e"},"content":"     * @param cause causation of the exception.","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Ella-e"},"content":"    public BaseException(String message, Throwable cause) {","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"Ella-e"},"content":"        super(message, cause);","lastModifiedDate":"2024-01-22"},{"lineNumber":22,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"Ella-e"},"content":"     * Initializes BaseException based on the parent class RuntimeException and message given.","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"Ella-e"},"content":"     * @param message warning message.","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"Ella-e"},"content":"    public BaseException(String message) {","lastModifiedDate":"2024-01-22"},{"lineNumber":29,"author":{"gitId":"Ella-e"},"content":"        super(message);","lastModifiedDate":"2024-01-22"},{"lineNumber":30,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":31,"author":{"gitId":"Ella-e"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"Ella-e":31}},{"path":"src/main/java/duke/exceptions/EmptyBodyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ella-e"},"content":"package duke.exceptions;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"Ella-e"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Ella-e"},"content":" * Exception thrown when the command body is empty.","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Ella-e"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Ella-e"},"content":"public class EmptyBodyException extends BaseException {","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Ella-e"},"content":"     * Calls parent constructor with specific pre-defined message.","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Ella-e"},"content":"    public EmptyBodyException() {","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"Ella-e"},"content":"        super(\"!!!ERROR: Please specify the content of the task you want to add.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"Ella-e"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"Ella-e":13}},{"path":"src/main/java/duke/exceptions/InvalidDateTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ella-e"},"content":"package duke.exceptions;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Ella-e"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Ella-e"},"content":" * Exception thrown when the date/time format can\u0027t be recognized by the DukeDateFormator.","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Ella-e"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Ella-e"},"content":"public class InvalidDateTimeException extends BaseException {","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Ella-e"},"content":"     * Calls parent constructor with specific pre-defined message.","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Ella-e"},"content":"    public InvalidDateTimeException() {","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"Ella-e"},"content":"        super(\"Incorrect format of date, please follow the convention: yyyy-mm-dd\");","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"Ella-e"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"Ella-e":13}},{"path":"src/main/java/duke/exceptions/InvalidKeyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ella-e"},"content":"package duke.exceptions;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"Ella-e"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Ella-e"},"content":" * Exception thrown when the instruction keyword is unknown.","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Ella-e"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Ella-e"},"content":"public class InvalidKeyException extends BaseException {","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Ella-e"},"content":"     * Calls parent constructor with specific pre-defined message.","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Ella-e"},"content":"    public InvalidKeyException() {","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"Ella-e"},"content":"        super(\"!!!ERROR: Sorry we can\u0027t recognize your instruction, please use valid one.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"Ella-e"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"Ella-e":13}},{"path":"src/main/java/duke/exceptions/InvalidNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ella-e"},"content":"package duke.exceptions;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Ella-e"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Ella-e"},"content":" * Exception thrown when the index is out of bound.","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Ella-e"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Ella-e"},"content":"public class InvalidNumberException extends BaseException {","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Ella-e"},"content":"     * Calls parent constructor with specific pre-defined message.","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Ella-e"},"content":"    public InvalidNumberException() {","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Ella-e"},"content":"        super(\"Error: Please enter a valid number.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Ella-e"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Ella-e":13}},{"path":"src/main/java/duke/exceptions/OutOfBoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ella-e"},"content":"package duke.exceptions;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Ella-e"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Ella-e"},"content":" * Exception thrown when the index is out of bound.","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Ella-e"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Ella-e"},"content":"public class OutOfBoundException extends BaseException {","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Ella-e"},"content":"     * Calls parent constructor with specific pre-defined message.","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Ella-e"},"content":"    public OutOfBoundException() {","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Ella-e"},"content":"        super(\"Error: Index out of bound.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Ella-e"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Ella-e":15}},{"path":"src/main/java/duke/exceptions/WrongFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ella-e"},"content":"package duke.exceptions;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"Ella-e"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Ella-e"},"content":" * Exception thrown when the instruction format is wrong.","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Ella-e"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Ella-e"},"content":"public class WrongFormatException extends BaseException {","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Ella-e"},"content":"     * Calls parent constructor with specific pre-defined message.","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Ella-e"},"content":"    public WrongFormatException(String message) {","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"Ella-e"},"content":"        super(\"!!!ERROR: Incorrect instruction format. The correct format is: \" + message);","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"Ella-e"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"Ella-e":13}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ella-e"},"content":"package duke.storage;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Ella-e"},"content":"import java.io.File;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"Ella-e"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"Ella-e"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"Ella-e"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"Ella-e"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"Ella-e"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"Ella-e"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"Ella-e"},"content":"import duke.tasks.Event;","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"Ella-e"},"content":"import duke.tasks.Task;","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"Ella-e"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"Ella-e"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"Ella-e"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"Ella-e"},"content":" * Class represent a file and contains functions processing a file.","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Ella-e"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Ella-e"},"content":"public class Storage {","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"Ella-e"},"content":"    private String filePath \u003d \"./data/duke.txt\";","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"Ella-e"},"content":"    private File file;","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"Ella-e"},"content":"     * Creates new file object and stores it.","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"Ella-e"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"Ella-e"},"content":"     * @param filePath path to load file from.","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"Ella-e"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"Ella-e"},"content":"        this.file \u003d new File(filePath);","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"Ella-e"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"Ella-e"},"content":"     * Reads tasks in a text file from the given filePath recursively.","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"Ella-e"},"content":"     * If the file or folder does not exist, create new folders and files based on the given filePath.","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"Ella-e"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"Ella-e"},"content":"     * @return task list read from the file.","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"Ella-e"},"content":"     * @throws IOException","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"Ella-e"},"content":"    public ArrayList\u003cTask\u003e load() throws IOException {","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"Ella-e"},"content":"        if (!this.file.getParentFile().exists()) {","lastModifiedDate":"2024-02-06"},{"lineNumber":42,"author":{"gitId":"Ella-e"},"content":"            this.file.getParentFile().mkdirs();","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"Ella-e"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":44,"author":{"gitId":"Ella-e"},"content":"        if (!this.file.exists()) {","lastModifiedDate":"2024-02-06"},{"lineNumber":45,"author":{"gitId":"Ella-e"},"content":"            this.file.createNewFile();","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"Ella-e"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":47,"author":{"gitId":"Ella-e"},"content":"        return this.readFile();","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"Ella-e"},"content":"     * Reads content of the file into task list.","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"Ella-e"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":53,"author":{"gitId":"Ella-e"},"content":"     * @return task list read from file","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"Ella-e"},"content":"     * @throws FileNotFoundException if the file is not found","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"Ella-e"},"content":"    private ArrayList\u003cTask\u003e readFile() throws FileNotFoundException, IOException {","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"Ella-e"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"Ella-e"},"content":"        Scanner s \u003d new Scanner(file); // create a Scanner using the File as the source","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"Ella-e"},"content":"        Boolean isCorrupted \u003d false;","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"Ella-e"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"Ella-e"},"content":"            String currentTaskString \u003d s.nextLine();","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"Ella-e"},"content":"            Task newTask \u003d this.stringToTask(currentTaskString);","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"Ella-e"},"content":"            if (newTask \u003d\u003d null) {","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"Ella-e"},"content":"                isCorrupted \u003d true;","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"Ella-e"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"Ella-e"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"Ella-e"},"content":"            taskList.add(newTask);","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"Ella-e"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":69,"author":{"gitId":"Ella-e"},"content":"        if (isCorrupted) {","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"Ella-e"},"content":"            // file corrupted, overwrite the file","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"Ella-e"},"content":"            TaskList emptyTaskList \u003d new TaskList();","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"Ella-e"},"content":"            writeTasksToFile(emptyTaskList);","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"Ella-e"},"content":"            readFile(); // re-read the file","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"Ella-e"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"Ella-e"},"content":"        return taskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":76,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":77,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":78,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":79,"author":{"gitId":"Ella-e"},"content":"     * Writes all the duke tasks in the task list to the file stored.","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"Ella-e"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":81,"author":{"gitId":"Ella-e"},"content":"     * @param taskList taskList to be stored.","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"Ella-e"},"content":"     * @throws IOException","lastModifiedDate":"2024-01-29"},{"lineNumber":83,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":84,"author":{"gitId":"Ella-e"},"content":"    public void writeTasksToFile(TaskList taskList) throws IOException {","lastModifiedDate":"2024-01-29"},{"lineNumber":85,"author":{"gitId":"Ella-e"},"content":"        FileWriter fw \u003d new FileWriter(this.filePath);","lastModifiedDate":"2024-01-29"},{"lineNumber":86,"author":{"gitId":"Ella-e"},"content":"        for (int i \u003d 0; i \u003c taskList.getNumOfTasks(); i++) {","lastModifiedDate":"2024-01-29"},{"lineNumber":87,"author":{"gitId":"Ella-e"},"content":"            fw.write(taskList.getTaskInfileStringFormat(i) + \"\\n\");","lastModifiedDate":"2024-01-29"},{"lineNumber":88,"author":{"gitId":"Ella-e"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":89,"author":{"gitId":"Ella-e"},"content":"        fw.close();","lastModifiedDate":"2024-01-29"},{"lineNumber":90,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":91,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":92,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":93,"author":{"gitId":"Ella-e"},"content":"     * Changes task from string format to task object","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"Ella-e"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":95,"author":{"gitId":"Ella-e"},"content":"     * @param str String format of the task","lastModifiedDate":"2024-01-29"},{"lineNumber":96,"author":{"gitId":"Ella-e"},"content":"     * @return The respective task object","lastModifiedDate":"2024-01-29"},{"lineNumber":97,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":98,"author":{"gitId":"Ella-e"},"content":"    private Task stringToTask(String str) throws IOException {","lastModifiedDate":"2024-01-31"},{"lineNumber":99,"author":{"gitId":"Ella-e"},"content":"        String[] strSplit \u003d str.split(\"\\\\|\");","lastModifiedDate":"2024-01-29"},{"lineNumber":100,"author":{"gitId":"Ella-e"},"content":"        if (strSplit.length \u003c\u003d 1) {","lastModifiedDate":"2024-01-31"},{"lineNumber":101,"author":{"gitId":"Ella-e"},"content":"            return null;","lastModifiedDate":"2024-01-31"},{"lineNumber":102,"author":{"gitId":"Ella-e"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":103,"author":{"gitId":"Ella-e"},"content":"        Boolean status \u003d strSplit[1].equals(\"1\");","lastModifiedDate":"2024-01-29"},{"lineNumber":104,"author":{"gitId":"Ella-e"},"content":"        String detail \u003d strSplit[2];","lastModifiedDate":"2024-01-29"},{"lineNumber":105,"author":{"gitId":"Ella-e"},"content":"        Task task \u003d new Task(status, detail);","lastModifiedDate":"2024-01-29"},{"lineNumber":106,"author":{"gitId":"Ella-e"},"content":"        switch (strSplit[0]) {","lastModifiedDate":"2024-01-29"},{"lineNumber":107,"author":{"gitId":"Ella-e"},"content":"        case \"T\":","lastModifiedDate":"2024-01-29"},{"lineNumber":108,"author":{"gitId":"Ella-e"},"content":"            task \u003d new Todo(status, detail);","lastModifiedDate":"2024-01-29"},{"lineNumber":109,"author":{"gitId":"Ella-e"},"content":"            break;","lastModifiedDate":"2024-01-29"},{"lineNumber":110,"author":{"gitId":"Ella-e"},"content":"        case \"D\":","lastModifiedDate":"2024-01-29"},{"lineNumber":111,"author":{"gitId":"Ella-e"},"content":"            String by \u003d strSplit[3];","lastModifiedDate":"2024-01-29"},{"lineNumber":112,"author":{"gitId":"Ella-e"},"content":"            task \u003d new Deadline(status, detail, by);","lastModifiedDate":"2024-01-29"},{"lineNumber":113,"author":{"gitId":"Ella-e"},"content":"            break;","lastModifiedDate":"2024-01-29"},{"lineNumber":114,"author":{"gitId":"Ella-e"},"content":"        case \"E\":","lastModifiedDate":"2024-01-29"},{"lineNumber":115,"author":{"gitId":"Ella-e"},"content":"            String from \u003d strSplit[3];","lastModifiedDate":"2024-01-29"},{"lineNumber":116,"author":{"gitId":"Ella-e"},"content":"            String to \u003d strSplit[4];","lastModifiedDate":"2024-01-29"},{"lineNumber":117,"author":{"gitId":"Ella-e"},"content":"            task \u003d new Event(status, detail, from, to);","lastModifiedDate":"2024-01-29"},{"lineNumber":118,"author":{"gitId":"Ella-e"},"content":"            break;","lastModifiedDate":"2024-01-29"},{"lineNumber":119,"author":{"gitId":"Ella-e"},"content":"        default:","lastModifiedDate":"2024-02-06"},{"lineNumber":120,"author":{"gitId":"Ella-e"},"content":"            break;","lastModifiedDate":"2024-02-06"},{"lineNumber":121,"author":{"gitId":"Ella-e"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":122,"author":{"gitId":"Ella-e"},"content":"        return task;","lastModifiedDate":"2024-01-29"},{"lineNumber":123,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":124,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":125,"author":{"gitId":"Ella-e"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"Ella-e":125}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ella-e"},"content":"package duke.tasks;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Ella-e"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"Ella-e"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"Ella-e"},"content":"import duke.exceptions.InvalidDateTimeException;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"Ella-e"},"content":"import duke.utils.DukeDateFormater;","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"Ella-e"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Ella-e"},"content":" * Class represent Task type Deadline.","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Ella-e"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Ella-e"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"Ella-e"},"content":"    private LocalDate by;","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"Ella-e"},"content":"    private DukeDateFormater formater \u003d new DukeDateFormater();","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Ella-e"},"content":"     * Initializes a Deadline object with given params.","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Ella-e"},"content":"     * @param status True for completed, False for not completed yet.","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Ella-e"},"content":"     * @param detail Detail information of the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"Ella-e"},"content":"     * @param by Task end time.","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"Ella-e"},"content":"     * @throws DateTimeParseException If the end time is invalid.","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"Ella-e"},"content":"    public Deadline(Boolean status, String detail, String by) throws DateTimeParseException {","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"Ella-e"},"content":"        super(status, detail);","lastModifiedDate":"2024-01-22"},{"lineNumber":26,"author":{"gitId":"Ella-e"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"Ella-e"},"content":"            this.by \u003d this.formater.stringToDate(by);","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"Ella-e"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"Ella-e"},"content":"            throw new InvalidDateTimeException();","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"Ella-e"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":32,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":33,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"Ella-e"},"content":"     * Formats object to be stored in file.","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"Ella-e"},"content":"     * @return Formatted string to be stored in file.","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"Ella-e"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"Ella-e"},"content":"    public String inFileStringFormat() {","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"Ella-e"},"content":"        return \"D|\" + super.inFileStringFormat() + \"|\" + this.by.toString();","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"Ella-e"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":43,"author":{"gitId":"Ella-e"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":44,"author":{"gitId":"Ella-e"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + this.formater.dateToString(this.by) + \")\";","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":46,"author":{"gitId":"Ella-e"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"Ella-e":46}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ella-e"},"content":"package duke.tasks;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Ella-e"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Ella-e"},"content":" * Class represent Task type Event.","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Ella-e"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Ella-e"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"Ella-e"},"content":"    private String start;","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"Ella-e"},"content":"    private String by;","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Ella-e"},"content":"     * Initializes an Event object with given params.","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Ella-e"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"Ella-e"},"content":"     * @param status True for completed, False for not completed yet.","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"Ella-e"},"content":"     * @param detail Detail information of the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Ella-e"},"content":"     * @param start  task start time.","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Ella-e"},"content":"     * @param by     task end time.","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Ella-e"},"content":"    public Event(Boolean status, String detail, String start, String by) {","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"Ella-e"},"content":"        super(status, detail);","lastModifiedDate":"2024-01-22"},{"lineNumber":20,"author":{"gitId":"Ella-e"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"Ella-e"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-22"},{"lineNumber":22,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"Ella-e"},"content":"     * Formats object to be stored in file.","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"Ella-e"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"Ella-e"},"content":"     * @return Formatted string to be stored in file.","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"Ella-e"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"Ella-e"},"content":"    public String inFileStringFormat() {","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"Ella-e"},"content":"        return \"E|\" + super.inFileStringFormat() + \"|\" + this.start + \"|\" + this.by;","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"Ella-e"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":35,"author":{"gitId":"Ella-e"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":36,"author":{"gitId":"Ella-e"},"content":"        return \"[E]\" + super.toString() + \"(from: \" + start + \" to: \" + by + \")\";","lastModifiedDate":"2024-01-22"},{"lineNumber":37,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":38,"author":{"gitId":"Ella-e"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"Ella-e":38}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ella-e"},"content":"package duke.tasks;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Ella-e"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Ella-e"},"content":" * Class represents a task.","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Ella-e"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Ella-e"},"content":"public class Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"Ella-e"},"content":"    private Boolean status;","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"Ella-e"},"content":"    private String detail;","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Ella-e"},"content":"     * Initializes a Task object with given params.","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Ella-e"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"Ella-e"},"content":"     * @param status True for completed, False for not completed yet.","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"Ella-e"},"content":"     * @param detail Detail information of the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Ella-e"},"content":"    public Task(Boolean status, String detail) {","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"Ella-e"},"content":"        this.status \u003d status;","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"Ella-e"},"content":"        this.detail \u003d detail;","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":20,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"Ella-e"},"content":"    public Boolean getStatus() {","lastModifiedDate":"2024-01-22"},{"lineNumber":22,"author":{"gitId":"Ella-e"},"content":"        return status;","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"Ella-e"},"content":"    public void setStatus(Boolean status) {","lastModifiedDate":"2024-01-22"},{"lineNumber":26,"author":{"gitId":"Ella-e"},"content":"        this.status \u003d status;","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":28,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":29,"author":{"gitId":"Ella-e"},"content":"    public String getDetail() {","lastModifiedDate":"2024-01-22"},{"lineNumber":30,"author":{"gitId":"Ella-e"},"content":"        return detail;","lastModifiedDate":"2024-01-22"},{"lineNumber":31,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":32,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":33,"author":{"gitId":"Ella-e"},"content":"    public void setDetail(String detail) {","lastModifiedDate":"2024-01-22"},{"lineNumber":34,"author":{"gitId":"Ella-e"},"content":"        this.detail \u003d detail;","lastModifiedDate":"2024-01-22"},{"lineNumber":35,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":36,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":37,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"Ella-e"},"content":"     * Formats object to be stored in file.","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"Ella-e"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":40,"author":{"gitId":"Ella-e"},"content":"     * @return Formatted string to be stored in file.","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"Ella-e"},"content":"    public String inFileStringFormat() {","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"Ella-e"},"content":"        String intStatus \u003d this.status ? \"1\" : \"0\";","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"Ella-e"},"content":"        return intStatus + \"|\" + this.detail;","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":47,"author":{"gitId":"Ella-e"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":48,"author":{"gitId":"Ella-e"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":49,"author":{"gitId":"Ella-e"},"content":"        if (this.status) {","lastModifiedDate":"2024-01-22"},{"lineNumber":50,"author":{"gitId":"Ella-e"},"content":"            return \"[X] \" + this.detail;","lastModifiedDate":"2024-01-22"},{"lineNumber":51,"author":{"gitId":"Ella-e"},"content":"        } else {","lastModifiedDate":"2024-01-22"},{"lineNumber":52,"author":{"gitId":"Ella-e"},"content":"            return \"[ ] \" + this.detail;","lastModifiedDate":"2024-01-22"},{"lineNumber":53,"author":{"gitId":"Ella-e"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":54,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":55,"author":{"gitId":"Ella-e"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"Ella-e":55}},{"path":"src/main/java/duke/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ella-e"},"content":"package duke.tasks;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Ella-e"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"Ella-e"},"content":"import duke.exceptions.EmptyBodyException;","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"Ella-e"},"content":"import duke.exceptions.InvalidDateTimeException;","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"Ella-e"},"content":"import duke.exceptions.OutOfBoundException;","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"Ella-e"},"content":"import duke.utils.KeyEnum;","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"Ella-e"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Ella-e"},"content":" * Class represents a list of tasks.","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Ella-e"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Ella-e"},"content":"public class TaskList {","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"Ella-e"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"Ella-e"},"content":"     * Initializes empty task list.","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Ella-e"},"content":"    public TaskList() {","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"Ella-e"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"Ella-e"},"content":"     * Initializes task list with given arraylist.","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"Ella-e"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"Ella-e"},"content":"     * @param tasks Existing list of tasks.","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"Ella-e"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"Ella-e"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"Ella-e"},"content":"     * Returns Number of tasks in the list.","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"Ella-e"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"Ella-e"},"content":"     * @return Number of tasks in the list.","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"Ella-e"},"content":"    public Integer getNumOfTasks() {","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"Ella-e"},"content":"        return this.tasks.size();","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"Ella-e"},"content":"     * Returns the formatted task string to be stored in file.","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"Ella-e"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":44,"author":{"gitId":"Ella-e"},"content":"     * @param i Index of task being used.","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"Ella-e"},"content":"     * @return String format of that task in file storage format.","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"Ella-e"},"content":"    public String getTaskInfileStringFormat(Integer i) {","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"Ella-e"},"content":"        return this.tasks.get(i).inFileStringFormat();","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"Ella-e"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"Ella-e"},"content":"    public void listTask() {","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"Ella-e"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"Ella-e"},"content":"            System.out.println((i + 1) + \". \" + tasks.get(i));","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"Ella-e"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"Ella-e"},"content":"     * Adds a task into list.","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"Ella-e"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":63,"author":{"gitId":"Ella-e"},"content":"     * @param detail     Description of task.","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"Ella-e"},"content":"     * @param from       Start date of task.","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"Ella-e"},"content":"     * @param to         Due date of task.","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"Ella-e"},"content":"     * @param currentKey Type of task.","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"Ella-e"},"content":"     * @return Added task.","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"Ella-e"},"content":"     * @throws EmptyBodyException       If the command body is empty.","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"Ella-e"},"content":"     * @throws InvalidDateTimeException If the due date for deadline is not in recognisable format.","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"Ella-e"},"content":"    public Task addTask(String detail, String from, String to, KeyEnum currentKey)","lastModifiedDate":"2024-02-06"},{"lineNumber":72,"author":{"gitId":"Ella-e"},"content":"            throws EmptyBodyException, InvalidDateTimeException {","lastModifiedDate":"2024-02-06"},{"lineNumber":73,"author":{"gitId":"Ella-e"},"content":"        Task task \u003d null;","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"Ella-e"},"content":"        switch (currentKey) {","lastModifiedDate":"2024-01-29"},{"lineNumber":75,"author":{"gitId":"Ella-e"},"content":"        case DEADLINE:","lastModifiedDate":"2024-01-29"},{"lineNumber":76,"author":{"gitId":"Ella-e"},"content":"            task \u003d new Deadline(false, detail, to);","lastModifiedDate":"2024-01-29"},{"lineNumber":77,"author":{"gitId":"Ella-e"},"content":"            break;","lastModifiedDate":"2024-01-29"},{"lineNumber":78,"author":{"gitId":"Ella-e"},"content":"        case TODO:","lastModifiedDate":"2024-01-29"},{"lineNumber":79,"author":{"gitId":"Ella-e"},"content":"            task \u003d new Todo(false, detail);","lastModifiedDate":"2024-01-29"},{"lineNumber":80,"author":{"gitId":"Ella-e"},"content":"            break;","lastModifiedDate":"2024-01-29"},{"lineNumber":81,"author":{"gitId":"Ella-e"},"content":"        case EVENT:","lastModifiedDate":"2024-01-29"},{"lineNumber":82,"author":{"gitId":"Ella-e"},"content":"            task \u003d new Event(false, detail, from, to);","lastModifiedDate":"2024-01-29"},{"lineNumber":83,"author":{"gitId":"Ella-e"},"content":"            break;","lastModifiedDate":"2024-01-29"},{"lineNumber":84,"author":{"gitId":"Ella-e"},"content":"        default:","lastModifiedDate":"2024-02-06"},{"lineNumber":85,"author":{"gitId":"Ella-e"},"content":"            break;","lastModifiedDate":"2024-02-06"},{"lineNumber":86,"author":{"gitId":"Ella-e"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":87,"author":{"gitId":"Ella-e"},"content":"        // Throw empty body exception if the added","lastModifiedDate":"2024-01-29"},{"lineNumber":88,"author":{"gitId":"Ella-e"},"content":"        if (task \u003d\u003d null || detail.length() \u003d\u003d 0) {","lastModifiedDate":"2024-01-29"},{"lineNumber":89,"author":{"gitId":"Ella-e"},"content":"            throw new EmptyBodyException();","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"Ella-e"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":91,"author":{"gitId":"Ella-e"},"content":"        tasks.add(task);","lastModifiedDate":"2024-01-29"},{"lineNumber":92,"author":{"gitId":"Ella-e"},"content":"        return task;","lastModifiedDate":"2024-01-29"},{"lineNumber":93,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":94,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":95,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"Ella-e"},"content":"     * Marks the status of a task.","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"Ella-e"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":98,"author":{"gitId":"Ella-e"},"content":"     * @param id     Index of task used.","lastModifiedDate":"2024-01-31"},{"lineNumber":99,"author":{"gitId":"Ella-e"},"content":"     * @param status Task to be marked True or False","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"Ella-e"},"content":"     * @return The marked task.","lastModifiedDate":"2024-01-31"},{"lineNumber":101,"author":{"gitId":"Ella-e"},"content":"     * @throws OutOfBoundException If the index is out of bound.","lastModifiedDate":"2024-01-31"},{"lineNumber":102,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":103,"author":{"gitId":"Ella-e"},"content":"    public Task markTaskById(Integer id, Boolean status) throws OutOfBoundException, IndexOutOfBoundsException {","lastModifiedDate":"2024-01-31"},{"lineNumber":104,"author":{"gitId":"Ella-e"},"content":"        System.out.println(id);","lastModifiedDate":"2024-01-31"},{"lineNumber":105,"author":{"gitId":"Ella-e"},"content":"        System.out.println(this.getNumOfTasks());","lastModifiedDate":"2024-01-31"},{"lineNumber":106,"author":{"gitId":"Ella-e"},"content":"        // Test if the id is out of bound","lastModifiedDate":"2024-01-29"},{"lineNumber":107,"author":{"gitId":"Ella-e"},"content":"        if (id \u003e\u003d this.getNumOfTasks() || id \u003c 0) {","lastModifiedDate":"2024-01-31"},{"lineNumber":108,"author":{"gitId":"Ella-e"},"content":"            throw new OutOfBoundException();","lastModifiedDate":"2024-01-31"},{"lineNumber":109,"author":{"gitId":"Ella-e"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":110,"author":{"gitId":"Ella-e"},"content":"        this.tasks.get(id).setStatus(status);","lastModifiedDate":"2024-01-29"},{"lineNumber":111,"author":{"gitId":"Ella-e"},"content":"        return this.tasks.get(id);","lastModifiedDate":"2024-01-29"},{"lineNumber":112,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":113,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":114,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":115,"author":{"gitId":"Ella-e"},"content":"     * Deletes a task from list.","lastModifiedDate":"2024-01-31"},{"lineNumber":116,"author":{"gitId":"Ella-e"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":117,"author":{"gitId":"Ella-e"},"content":"     * @param id Index of task used.","lastModifiedDate":"2024-01-31"},{"lineNumber":118,"author":{"gitId":"Ella-e"},"content":"     * @return The deleted task.","lastModifiedDate":"2024-01-31"},{"lineNumber":119,"author":{"gitId":"Ella-e"},"content":"     * @throws OutOfBoundException If the index is out of bound.","lastModifiedDate":"2024-01-31"},{"lineNumber":120,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":121,"author":{"gitId":"Ella-e"},"content":"    public Task deleteTaskById(Integer id) throws OutOfBoundException, IndexOutOfBoundsException {","lastModifiedDate":"2024-01-31"},{"lineNumber":122,"author":{"gitId":"Ella-e"},"content":"        // Test if the id is out of bound","lastModifiedDate":"2024-01-29"},{"lineNumber":123,"author":{"gitId":"Ella-e"},"content":"        if (id \u003e\u003d this.getNumOfTasks() || id \u003c 0) {","lastModifiedDate":"2024-01-31"},{"lineNumber":124,"author":{"gitId":"Ella-e"},"content":"            throw new OutOfBoundException();","lastModifiedDate":"2024-01-31"},{"lineNumber":125,"author":{"gitId":"Ella-e"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":126,"author":{"gitId":"Ella-e"},"content":"        Task taskToDelete \u003d this.tasks.get(id);","lastModifiedDate":"2024-01-29"},{"lineNumber":127,"author":{"gitId":"Ella-e"},"content":"        this.tasks.remove(taskToDelete);","lastModifiedDate":"2024-01-29"},{"lineNumber":128,"author":{"gitId":"Ella-e"},"content":"        return taskToDelete;","lastModifiedDate":"2024-01-29"},{"lineNumber":129,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":130,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":131,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":132,"author":{"gitId":"Ella-e"},"content":"     * Finds matched tasks based on the word.","lastModifiedDate":"2024-01-31"},{"lineNumber":133,"author":{"gitId":"Ella-e"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":134,"author":{"gitId":"Ella-e"},"content":"     * @param word Keyword to find a match.","lastModifiedDate":"2024-01-31"},{"lineNumber":135,"author":{"gitId":"Ella-e"},"content":"     * @return Matched task list.","lastModifiedDate":"2024-01-31"},{"lineNumber":136,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":137,"author":{"gitId":"Ella-e"},"content":"    public TaskList findTasks(String word) {","lastModifiedDate":"2024-01-31"},{"lineNumber":138,"author":{"gitId":"Ella-e"},"content":"        ArrayList\u003cTask\u003e matchedTasksArr \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":139,"author":{"gitId":"Ella-e"},"content":"        // iterate through the task list","lastModifiedDate":"2024-01-31"},{"lineNumber":140,"author":{"gitId":"Ella-e"},"content":"        System.out.println(word);","lastModifiedDate":"2024-01-31"},{"lineNumber":141,"author":{"gitId":"Ella-e"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-01-31"},{"lineNumber":142,"author":{"gitId":"Ella-e"},"content":"            if (task.getDetail().contains(word)) {","lastModifiedDate":"2024-01-31"},{"lineNumber":143,"author":{"gitId":"Ella-e"},"content":"                matchedTasksArr.add(task);","lastModifiedDate":"2024-01-31"},{"lineNumber":144,"author":{"gitId":"Ella-e"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":145,"author":{"gitId":"Ella-e"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":146,"author":{"gitId":"Ella-e"},"content":"        TaskList matchedTasks \u003d new TaskList(matchedTasksArr);","lastModifiedDate":"2024-01-31"},{"lineNumber":147,"author":{"gitId":"Ella-e"},"content":"        return matchedTasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":148,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":149,"author":{"gitId":"Ella-e"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"Ella-e":149}},{"path":"src/main/java/duke/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ella-e"},"content":"package duke.tasks;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Ella-e"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Ella-e"},"content":" * Class represent Task type Todo.","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Ella-e"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Ella-e"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Ella-e"},"content":"     * Initializes a Todo object with given params.","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Ella-e"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"Ella-e"},"content":"     * @param status True for completed, False for not completed yet.","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Ella-e"},"content":"     * @param detail Detail information of the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Ella-e"},"content":"    public Todo(Boolean status, String detail) {","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"Ella-e"},"content":"        super(status, detail);","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Ella-e"},"content":"     * Formats object to be stored in file.","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Ella-e"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"Ella-e"},"content":"     * @return Formatted string to be stored in file.","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"Ella-e"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"Ella-e"},"content":"    public String inFileStringFormat() {","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"Ella-e"},"content":"        return \"T|\" + super.inFileStringFormat();","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"Ella-e"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":28,"author":{"gitId":"Ella-e"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":29,"author":{"gitId":"Ella-e"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-22"},{"lineNumber":30,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":31,"author":{"gitId":"Ella-e"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"Ella-e":31}},{"path":"src/main/java/duke/ui/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ella-e"},"content":"package duke.ui;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Ella-e"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"Ella-e"},"content":"import duke.tasks.Task;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"Ella-e"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"Ella-e"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Ella-e"},"content":" * Class represents UI functionalities.","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Ella-e"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Ella-e"},"content":"public class UI {","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"Ella-e"},"content":"    private Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Ella-e"},"content":"     * Displays greeting sentence.","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"Ella-e"},"content":"    public void onEnter() {","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"Ella-e"},"content":"        System.out.println(\"Hello! I\u0027m Plaudern\\nWhat can I do for you?\");","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"Ella-e"},"content":"     * Displays task list.","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"Ella-e"},"content":"    public void showList(TaskList taskList) {","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"Ella-e"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"Ella-e"},"content":"        taskList.listTask();","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"Ella-e"},"content":"     * Displays matching task list.","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"Ella-e"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"Ella-e"},"content":"     * @param taskList List to be displayed.","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"Ella-e"},"content":"    public void showMatchedList(TaskList taskList) {","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"Ella-e"},"content":"        System.out.println(\"Here are the matching tasks in your list: \");","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"Ella-e"},"content":"        taskList.listTask();","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"Ella-e"},"content":"     * Displays success message after add task to the list.","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"Ella-e"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":42,"author":{"gitId":"Ella-e"},"content":"     * @param task  Task added.","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"Ella-e"},"content":"     * @param count Number of tasks in the list after the addition.","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"Ella-e"},"content":"    public void onAddSuccess(Task task, Integer count) {","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"Ella-e"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"Ella-e"},"content":"        System.out.println(task);","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"Ella-e"},"content":"        this.showTaskListCount(count);","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"Ella-e"},"content":"     * Displays success message after mark task.","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"Ella-e"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":54,"author":{"gitId":"Ella-e"},"content":"     * @param task Task marked","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"Ella-e"},"content":"    public void onMarkDone(Task task) {","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"Ella-e"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"Ella-e"},"content":"        System.out.println(task);","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"Ella-e"},"content":"     * Displays success message after unmark task.","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"Ella-e"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":64,"author":{"gitId":"Ella-e"},"content":"     * @param task Task unmarked.","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"Ella-e"},"content":"    public void onUnmarkDone(Task task) {","lastModifiedDate":"2024-01-29"},{"lineNumber":67,"author":{"gitId":"Ella-e"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"Ella-e"},"content":"        System.out.println(task);","lastModifiedDate":"2024-01-29"},{"lineNumber":69,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":70,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":71,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"Ella-e"},"content":"     * Displays success message after delete task.","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"Ella-e"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":74,"author":{"gitId":"Ella-e"},"content":"     * @param task     Task deleted.","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"Ella-e"},"content":"     * @param taskList Task list after deletion.","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"Ella-e"},"content":"    public void onDelete(Task task, TaskList taskList) {","lastModifiedDate":"2024-01-29"},{"lineNumber":78,"author":{"gitId":"Ella-e"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-01-29"},{"lineNumber":79,"author":{"gitId":"Ella-e"},"content":"        System.out.println(task);","lastModifiedDate":"2024-01-29"},{"lineNumber":80,"author":{"gitId":"Ella-e"},"content":"        this.showTaskListCount(taskList.getNumOfTasks());","lastModifiedDate":"2024-01-29"},{"lineNumber":81,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":82,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":83,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"Ella-e"},"content":"     * Displays general error message.","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"Ella-e"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":86,"author":{"gitId":"Ella-e"},"content":"     * @param msg Error message.","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"Ella-e"},"content":"    public void showErrorMsg(String msg) {","lastModifiedDate":"2024-01-29"},{"lineNumber":89,"author":{"gitId":"Ella-e"},"content":"        System.out.println(msg);","lastModifiedDate":"2024-01-29"},{"lineNumber":90,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":91,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":92,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"Ella-e"},"content":"     * Displays loading error.","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":95,"author":{"gitId":"Ella-e"},"content":"    public void showLoadingError() {","lastModifiedDate":"2024-01-29"},{"lineNumber":96,"author":{"gitId":"Ella-e"},"content":"        System.out.println(\"Error occur when initiating the resources.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":97,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":98,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":99,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"Ella-e"},"content":"     * Reads one line of user input.","lastModifiedDate":"2024-01-31"},{"lineNumber":101,"author":{"gitId":"Ella-e"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":102,"author":{"gitId":"Ella-e"},"content":"     * @return User input","lastModifiedDate":"2024-01-31"},{"lineNumber":103,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":104,"author":{"gitId":"Ella-e"},"content":"    public String getUserInput() {","lastModifiedDate":"2024-01-29"},{"lineNumber":105,"author":{"gitId":"Ella-e"},"content":"        return this.scanner.nextLine();","lastModifiedDate":"2024-01-29"},{"lineNumber":106,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":107,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":108,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":109,"author":{"gitId":"Ella-e"},"content":"     * Displays exit message.","lastModifiedDate":"2024-01-31"},{"lineNumber":110,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":111,"author":{"gitId":"Ella-e"},"content":"    public void onExit() {","lastModifiedDate":"2024-01-29"},{"lineNumber":112,"author":{"gitId":"Ella-e"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-01-29"},{"lineNumber":113,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":114,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":115,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":116,"author":{"gitId":"Ella-e"},"content":"     * Displays number of tasks in the list.","lastModifiedDate":"2024-01-31"},{"lineNumber":117,"author":{"gitId":"Ella-e"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":118,"author":{"gitId":"Ella-e"},"content":"     * @param count Number of tasks.","lastModifiedDate":"2024-01-31"},{"lineNumber":119,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":120,"author":{"gitId":"Ella-e"},"content":"    public void showTaskListCount(Integer count) {","lastModifiedDate":"2024-01-29"},{"lineNumber":121,"author":{"gitId":"Ella-e"},"content":"        System.out.println(\"Now you have \" + count + \" tasks in the list.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":122,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":123,"author":{"gitId":"Ella-e"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"Ella-e":123}},{"path":"src/main/java/duke/utils/DukeDateFormater.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ella-e"},"content":"package duke.utils;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Ella-e"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"Ella-e"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"Ella-e"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Ella-e"},"content":" * Date formatter","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Ella-e"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Ella-e"},"content":"public class DukeDateFormater {","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Ella-e"},"content":"     * Parses String date into LocalDate object.","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Ella-e"},"content":"     * @param dateStr Date in String.","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Ella-e"},"content":"     * @return Date in LocalDate type.","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Ella-e"},"content":"    public LocalDate stringToDate(String dateStr) {","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"Ella-e"},"content":"        return LocalDate.parse(dateStr);","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Ella-e"},"content":"     * Parses LocalDate to String.","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"Ella-e"},"content":"     * @param date Date in LocalDate type.","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"Ella-e"},"content":"     * @return Date in String.","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"Ella-e"},"content":"    public String dateToString(LocalDate date) {","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"Ella-e"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"Ella-e"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"Ella-e":27}},{"path":"src/main/java/duke/utils/KeyEnum.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ella-e"},"content":"package duke.utils;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Ella-e"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Ella-e"},"content":" * Enumerate class represents command keywords.","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Ella-e"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Ella-e"},"content":"public enum KeyEnum {","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"Ella-e"},"content":"    EXITKEY(\"bye\"), LIST(\"list\"), MARK(\"mark\"), UNMARK(\"unmark\"),","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"Ella-e"},"content":"        EVENT(\"event\"), DEADLINE(\"deadline\"), TODO(\"todo\"), DELETE(\"delete\"), INVALID(\"invalid\"), FIND(\"find\");","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"Ella-e"},"content":"    private String detail;","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Ella-e"},"content":"     * Initializes a keyword with detail.","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Ella-e"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"Ella-e"},"content":"     * @param detail Meaning of keyword.","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Ella-e"},"content":"    KeyEnum(String detail) {","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"Ella-e"},"content":"        this.detail \u003d detail;","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":20,"author":{"gitId":"Ella-e"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"Ella-e"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":22,"author":{"gitId":"Ella-e"},"content":"        return this.detail;","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"Ella-e"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"Ella-e":24}},{"path":"src/main/java/duke/utils/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ella-e"},"content":"package duke.utils;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Ella-e"},"content":"import duke.exceptions.EmptyBodyException;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"Ella-e"},"content":"import duke.exceptions.InvalidKeyException;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"Ella-e"},"content":"import duke.exceptions.InvalidNumberException;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Ella-e"},"content":"import duke.exceptions.WrongFormatException;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"Ella-e"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Ella-e"},"content":" * Parser to read and understand user inputs. Stores the parsed information inside the object.","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Ella-e"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Ella-e"},"content":"public class Parser {","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"Ella-e"},"content":"    private KeyEnum currentKey \u003d KeyEnum.INVALID;","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"Ella-e"},"content":"    private String inputDetail;","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"Ella-e"},"content":"    private String to;","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"Ella-e"},"content":"    private String from;","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"Ella-e"},"content":"    private Integer index;","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Ella-e"},"content":"     * Parses user input and store the information.","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Ella-e"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"Ella-e"},"content":"     * @param userInput String user input.","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"Ella-e"},"content":"     * @throws InvalidKeyException    If the command keyword is unknown.","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"Ella-e"},"content":"     * @throws EmptyBodyException     If the command body is empty.","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"Ella-e"},"content":"     * @throws WrongFormatException   If the format of command is wrong.","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"Ella-e"},"content":"     * @throws InvalidNumberException If the number in the command is not a number.","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"Ella-e"},"content":"    public void parse(String userInput) throws InvalidKeyException, EmptyBodyException,","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"Ella-e"},"content":"            WrongFormatException, InvalidNumberException {","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"Ella-e"},"content":"        String[] userInputSplit \u003d userInput.split(\" \");","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"Ella-e"},"content":"        this.determineCurrentKey(userInputSplit[0]);","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"Ella-e"},"content":"        switch (this.currentKey) {","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"Ella-e"},"content":"        case DEADLINE:","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"Ella-e"},"content":"            if (userInput.length() \u003c\u003d 9) {","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"Ella-e"},"content":"                throw new EmptyBodyException();","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"Ella-e"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"Ella-e"},"content":"            try {","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"Ella-e"},"content":"                inputDetail \u003d userInput.substring(9, userInput.indexOf(\"/by\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"Ella-e"},"content":"                to \u003d userInput.substring(userInput.indexOf(\"/by\") + 4);","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"Ella-e"},"content":"            } catch (Exception e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"Ella-e"},"content":"                throw new WrongFormatException(\"\\\"deadline content /by yyyy-mm-dd\\\"\");","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"Ella-e"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"Ella-e"},"content":"            break;","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"Ella-e"},"content":"        case TODO:","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"Ella-e"},"content":"        case FIND:","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"Ella-e"},"content":"            if (userInput.length() \u003c\u003d 5) {","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"Ella-e"},"content":"                throw new EmptyBodyException();","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"Ella-e"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"Ella-e"},"content":"            inputDetail \u003d userInput.substring(5);","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"Ella-e"},"content":"            break;","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"Ella-e"},"content":"        case EVENT:","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"Ella-e"},"content":"            if (userInput.length() \u003c\u003d 6) {","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"Ella-e"},"content":"                throw new EmptyBodyException();","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"Ella-e"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"Ella-e"},"content":"            try {","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"Ella-e"},"content":"                inputDetail \u003d userInput.substring(6, userInput.indexOf(\"/from\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"Ella-e"},"content":"                from \u003d userInput.substring(userInput.indexOf(\"/from\") + 6, userInput.indexOf(\"/to\") - 1);","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"Ella-e"},"content":"                to \u003d userInput.substring(userInput.indexOf(\"/to\") + 4);","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"Ella-e"},"content":"            } catch (Exception e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"Ella-e"},"content":"                throw new WrongFormatException(\"\\\"deadline content /from time /to time\\\"\");","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"Ella-e"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"Ella-e"},"content":"            break;","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"Ella-e"},"content":"        case MARK:","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"Ella-e"},"content":"        case UNMARK:","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"Ella-e"},"content":"        case DELETE:","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"Ella-e"},"content":"            try {","lastModifiedDate":"2024-01-29"},{"lineNumber":66,"author":{"gitId":"Ella-e"},"content":"                this.index \u003d new Integer(userInputSplit[1]) - 1;","lastModifiedDate":"2024-01-29"},{"lineNumber":67,"author":{"gitId":"Ella-e"},"content":"            } catch (Exception e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"Ella-e"},"content":"                throw new InvalidNumberException();","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"Ella-e"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":70,"author":{"gitId":"Ella-e"},"content":"            break;","lastModifiedDate":"2024-02-06"},{"lineNumber":71,"author":{"gitId":"Ella-e"},"content":"        default:","lastModifiedDate":"2024-02-06"},{"lineNumber":72,"author":{"gitId":"Ella-e"},"content":"            break;","lastModifiedDate":"2024-02-06"},{"lineNumber":73,"author":{"gitId":"Ella-e"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":75,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":76,"author":{"gitId":"Ella-e"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"Ella-e"},"content":"     * Maps userInputKey to keys defined in the KeyEnum class.","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"Ella-e"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":79,"author":{"gitId":"Ella-e"},"content":"     * @param userInputKey String user input key.","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"Ella-e"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"Ella-e"},"content":"    public void determineCurrentKey(String userInputKey) {","lastModifiedDate":"2024-01-29"},{"lineNumber":82,"author":{"gitId":"Ella-e"},"content":"        switch (userInputKey) {","lastModifiedDate":"2024-01-29"},{"lineNumber":83,"author":{"gitId":"Ella-e"},"content":"        case \"bye\":","lastModifiedDate":"2024-01-29"},{"lineNumber":84,"author":{"gitId":"Ella-e"},"content":"            currentKey \u003d KeyEnum.EXITKEY;","lastModifiedDate":"2024-01-29"},{"lineNumber":85,"author":{"gitId":"Ella-e"},"content":"            break;","lastModifiedDate":"2024-01-29"},{"lineNumber":86,"author":{"gitId":"Ella-e"},"content":"        case \"list\":","lastModifiedDate":"2024-01-29"},{"lineNumber":87,"author":{"gitId":"Ella-e"},"content":"            currentKey \u003d KeyEnum.LIST;","lastModifiedDate":"2024-01-29"},{"lineNumber":88,"author":{"gitId":"Ella-e"},"content":"            break;","lastModifiedDate":"2024-01-29"},{"lineNumber":89,"author":{"gitId":"Ella-e"},"content":"        case \"mark\":","lastModifiedDate":"2024-01-29"},{"lineNumber":90,"author":{"gitId":"Ella-e"},"content":"            currentKey \u003d KeyEnum.MARK;","lastModifiedDate":"2024-01-29"},{"lineNumber":91,"author":{"gitId":"Ella-e"},"content":"            break;","lastModifiedDate":"2024-01-29"},{"lineNumber":92,"author":{"gitId":"Ella-e"},"content":"        case \"unmark\":","lastModifiedDate":"2024-01-29"},{"lineNumber":93,"author":{"gitId":"Ella-e"},"content":"            currentKey \u003d KeyEnum.UNMARK;","lastModifiedDate":"2024-01-29"},{"lineNumber":94,"author":{"gitId":"Ella-e"},"content":"            break;","lastModifiedDate":"2024-01-29"},{"lineNumber":95,"author":{"gitId":"Ella-e"},"content":"        case \"event\":","lastModifiedDate":"2024-01-29"},{"lineNumber":96,"author":{"gitId":"Ella-e"},"content":"            currentKey \u003d KeyEnum.EVENT;","lastModifiedDate":"2024-01-29"},{"lineNumber":97,"author":{"gitId":"Ella-e"},"content":"            break;","lastModifiedDate":"2024-01-29"},{"lineNumber":98,"author":{"gitId":"Ella-e"},"content":"        case \"deadline\":","lastModifiedDate":"2024-01-29"},{"lineNumber":99,"author":{"gitId":"Ella-e"},"content":"            currentKey \u003d KeyEnum.DEADLINE;","lastModifiedDate":"2024-01-29"},{"lineNumber":100,"author":{"gitId":"Ella-e"},"content":"            break;","lastModifiedDate":"2024-01-29"},{"lineNumber":101,"author":{"gitId":"Ella-e"},"content":"        case \"todo\":","lastModifiedDate":"2024-01-29"},{"lineNumber":102,"author":{"gitId":"Ella-e"},"content":"            currentKey \u003d KeyEnum.TODO;","lastModifiedDate":"2024-01-29"},{"lineNumber":103,"author":{"gitId":"Ella-e"},"content":"            break;","lastModifiedDate":"2024-01-29"},{"lineNumber":104,"author":{"gitId":"Ella-e"},"content":"        case \"delete\":","lastModifiedDate":"2024-01-29"},{"lineNumber":105,"author":{"gitId":"Ella-e"},"content":"            currentKey \u003d KeyEnum.DELETE;","lastModifiedDate":"2024-01-29"},{"lineNumber":106,"author":{"gitId":"Ella-e"},"content":"            break;","lastModifiedDate":"2024-01-29"},{"lineNumber":107,"author":{"gitId":"Ella-e"},"content":"        case \"find\":","lastModifiedDate":"2024-01-31"},{"lineNumber":108,"author":{"gitId":"Ella-e"},"content":"            currentKey \u003d KeyEnum.FIND;","lastModifiedDate":"2024-01-31"},{"lineNumber":109,"author":{"gitId":"Ella-e"},"content":"            break;","lastModifiedDate":"2024-02-06"},{"lineNumber":110,"author":{"gitId":"Ella-e"},"content":"        default:","lastModifiedDate":"2024-02-06"},{"lineNumber":111,"author":{"gitId":"Ella-e"},"content":"            currentKey \u003d KeyEnum.INVALID;","lastModifiedDate":"2024-02-06"},{"lineNumber":112,"author":{"gitId":"Ella-e"},"content":"            break;","lastModifiedDate":"2024-02-06"},{"lineNumber":113,"author":{"gitId":"Ella-e"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":114,"author":{"gitId":"Ella-e"},"content":"        if (this.currentKey.equals(KeyEnum.INVALID)) {","lastModifiedDate":"2024-01-29"},{"lineNumber":115,"author":{"gitId":"Ella-e"},"content":"            // raise InvalidKeyException","lastModifiedDate":"2024-01-29"},{"lineNumber":116,"author":{"gitId":"Ella-e"},"content":"            throw new InvalidKeyException();","lastModifiedDate":"2024-01-29"},{"lineNumber":117,"author":{"gitId":"Ella-e"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":118,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":119,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":120,"author":{"gitId":"Ella-e"},"content":"    public KeyEnum getCurrentKey() {","lastModifiedDate":"2024-01-29"},{"lineNumber":121,"author":{"gitId":"Ella-e"},"content":"        return currentKey;","lastModifiedDate":"2024-01-29"},{"lineNumber":122,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":123,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":124,"author":{"gitId":"Ella-e"},"content":"    public void setCurrentKey(KeyEnum currentKey) {","lastModifiedDate":"2024-01-29"},{"lineNumber":125,"author":{"gitId":"Ella-e"},"content":"        this.currentKey \u003d currentKey;","lastModifiedDate":"2024-01-29"},{"lineNumber":126,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":127,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":128,"author":{"gitId":"Ella-e"},"content":"    public String getInputDetail() {","lastModifiedDate":"2024-01-29"},{"lineNumber":129,"author":{"gitId":"Ella-e"},"content":"        return inputDetail;","lastModifiedDate":"2024-01-29"},{"lineNumber":130,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":131,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":132,"author":{"gitId":"Ella-e"},"content":"    public void setInputDetail(String inputDetail) {","lastModifiedDate":"2024-01-29"},{"lineNumber":133,"author":{"gitId":"Ella-e"},"content":"        this.inputDetail \u003d inputDetail;","lastModifiedDate":"2024-01-29"},{"lineNumber":134,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":135,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":136,"author":{"gitId":"Ella-e"},"content":"    public String getTo() {","lastModifiedDate":"2024-01-29"},{"lineNumber":137,"author":{"gitId":"Ella-e"},"content":"        return to;","lastModifiedDate":"2024-01-29"},{"lineNumber":138,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":139,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":140,"author":{"gitId":"Ella-e"},"content":"    public void setTo(String to) {","lastModifiedDate":"2024-01-29"},{"lineNumber":141,"author":{"gitId":"Ella-e"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-29"},{"lineNumber":142,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":143,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":144,"author":{"gitId":"Ella-e"},"content":"    public String getFrom() {","lastModifiedDate":"2024-01-29"},{"lineNumber":145,"author":{"gitId":"Ella-e"},"content":"        return from;","lastModifiedDate":"2024-01-29"},{"lineNumber":146,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":147,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":148,"author":{"gitId":"Ella-e"},"content":"    public void setFrom(String from) {","lastModifiedDate":"2024-01-29"},{"lineNumber":149,"author":{"gitId":"Ella-e"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-29"},{"lineNumber":150,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":151,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":152,"author":{"gitId":"Ella-e"},"content":"    public Integer getIndex() {","lastModifiedDate":"2024-01-29"},{"lineNumber":153,"author":{"gitId":"Ella-e"},"content":"        return index;","lastModifiedDate":"2024-01-29"},{"lineNumber":154,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":155,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":156,"author":{"gitId":"Ella-e"},"content":"    public void setIndex(Integer index) {","lastModifiedDate":"2024-01-29"},{"lineNumber":157,"author":{"gitId":"Ella-e"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-01-29"},{"lineNumber":158,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":159,"author":{"gitId":"Ella-e"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"Ella-e":159}},{"path":"src/test/java/duke/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ella-e"},"content":"package duke.storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Ella-e"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"Ella-e"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Ella-e"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Ella-e"},"content":"public class StorageTest {","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Ella-e"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Ella-e"},"content":"    public void loadTest() throws IOException {","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Ella-e"},"content":"        // read fail from an invalid path, NullPointerException should be thrown","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Ella-e"},"content":"        String inValidPath \u003d \"abcabcabc\";","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Ella-e"},"content":"        Storage storage \u003d new Storage(inValidPath);","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"Ella-e"},"content":"        Assertions.assertThrows(NullPointerException.class, storage::load);","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Ella-e"},"content":"        // read success from a valid path, NullPointerException should be thrown","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"Ella-e"},"content":"        String validPath \u003d \"./test_data/test_duke.txt\";","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Ella-e"},"content":"        Storage storage2 \u003d new Storage(validPath);","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Ella-e"},"content":"        Assertions.assertNotNull(storage2.load());","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"Ella-e"},"content":"        // read fail from an invalid path with only the folder name, NullPointerException should be thrown","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"Ella-e"},"content":"        String inValidPath2 \u003d \"/only_file\";","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"Ella-e"},"content":"        Storage storage3 \u003d new Storage(inValidPath2);","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"Ella-e"},"content":"        Assertions.assertThrows(NullPointerException.class, storage::load);","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"Ella-e"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Ella-e":26}},{"path":"src/test/java/duke/utils/DukeDateFormaterTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ella-e"},"content":"package duke.utils;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Ella-e"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"Ella-e"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"Ella-e"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"Ella-e"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"Ella-e"},"content":"public class DukeDateFormaterTest {","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"Ella-e"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"Ella-e"},"content":"    public void testStringToDate() {","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Ella-e"},"content":"        DukeDateFormater formater \u003d new DukeDateFormater();","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"Ella-e"},"content":"        // Format date success - the string is valid","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"Ella-e"},"content":"        LocalDate date \u003d formater.stringToDate(\"2019-12-01\");","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"Ella-e"},"content":"        Assertions.assertEquals(\"2019-12-01\", date.toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"Ella-e"},"content":"        // Format date fail - the string is not in valid date format","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"Ella-e"},"content":"        Assertions.assertThrows(DateTimeParseException.class, () -\u003e {","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Ella-e"},"content":"            LocalDate date2 \u003d formater.stringToDate(\"2019-12-99\");","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"Ella-e"},"content":"        });","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"Ella-e"},"content":"        // Format date fail - the string is not in valid date format","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"Ella-e"},"content":"        Assertions.assertThrows(DateTimeParseException.class, () -\u003e {","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"Ella-e"},"content":"            LocalDate date2 \u003d formater.stringToDate(\"2019/12/01\");","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"Ella-e"},"content":"        });","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"Ella-e"},"content":"        // Format date fail - the string is not in valid date format","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"Ella-e"},"content":"        Assertions.assertThrows(DateTimeParseException.class, () -\u003e {","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"Ella-e"},"content":"            LocalDate date2 \u003d formater.stringToDate(\"abca-bc-ab\");","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"Ella-e"},"content":"        });","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"Ella-e"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"Ella-e"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"Ella-e"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"Ella-e":33}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Ella-e"},"content":"todo borrow book","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"Ella-e"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"Ella-e"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"Ella-e"},"content":"list","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"Ella-e"},"content":"mark 3","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"Ella-e"},"content":"list","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"Ella-e"},"content":"mark 2","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"Ella-e"},"content":"list","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"Ella-e"},"content":"unmark 3","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"Ella-e"},"content":"list","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"Ella-e"},"content":"bye","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"Ella-e":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Ella-e"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Ella-e":1,"-":20}}]
