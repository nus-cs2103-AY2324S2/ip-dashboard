[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"jayllo-c"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jayllo-c":1,"-":23}},{"path":"src/main/java/duke/AcceptedCmds.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jayllo-c"},"content":"package duke;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"jayllo-c"},"content":"public enum AcceptedCmds {","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"jayllo-c"},"content":"    bye, list, mark, unmark, todo, deadline, event, delete","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"jayllo-c"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"jayllo-c":5}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jayllo-c"},"content":"package duke;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"jayllo-c"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"jayllo-c"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"jayllo-c"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"jayllo-c"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"jayllo-c"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"jayllo-c"},"content":"    private DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"jayllo-c"},"content":"    private DateTimeFormatter displayFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy hh:mma\");","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"jayllo-c"},"content":"    public Deadline(String description, String time) throws DukeException {","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"jayllo-c"},"content":"        super(description);","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"jayllo-c"},"content":"        time \u003d time.trim();","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"jayllo-c"},"content":"        if (description.trim().length() \u003d\u003d 0 || time.length() \u003d\u003d 0) {","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"jayllo-c"},"content":"            String errorMessage \u003d \"Please enter the following:\";","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"jayllo-c"},"content":"            if (description.trim().length() \u003d\u003d 0) {","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"jayllo-c"},"content":"                errorMessage +\u003d \"\\na description for this duke.Deadline task\";","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"jayllo-c"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"jayllo-c"},"content":"            if (time.length() \u003d\u003d 0) {","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"jayllo-c"},"content":"                errorMessage +\u003d \"\\na deadline after the \u0027/by\u0027 command\";","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"jayllo-c"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"jayllo-c"},"content":"            throw new DukeException(errorMessage);","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"jayllo-c"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"jayllo-c"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"jayllo-c"},"content":"            this.by \u003d LocalDateTime.parse(time, inputFormatter);","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"jayllo-c"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"jayllo-c"},"content":"            throw new DukeException(\"Please enter the date and time in the following format:\\n\"+","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"jayllo-c"},"content":"                    \"dd/mm/yyyy hhmm (e.g. 30/01/2024 1234\");","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"jayllo-c"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"jayllo-c"},"content":"    public Deadline(String logic, String description, String time) throws DukeException {","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"jayllo-c"},"content":"        super(description);","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"jayllo-c"},"content":"        time \u003d time.trim();","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"jayllo-c"},"content":"        if (description.trim().length() \u003d\u003d 0 || time.length() \u003d\u003d 0) {","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"jayllo-c"},"content":"            String errorMessage \u003d \"Please enter the following:\";","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"jayllo-c"},"content":"            if (description.trim().length() \u003d\u003d 0) {","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"jayllo-c"},"content":"                errorMessage +\u003d \"\\na description for this duke.Deadline task\";","lastModifiedDate":"2024-02-06"},{"lineNumber":43,"author":{"gitId":"jayllo-c"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"jayllo-c"},"content":"            if (time.length() \u003d\u003d 0) {","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"jayllo-c"},"content":"                errorMessage +\u003d \"\\na deadline after the \u0027/by\u0027 command\";","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"jayllo-c"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"jayllo-c"},"content":"            throw new DukeException(errorMessage);","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"jayllo-c"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"jayllo-c"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"jayllo-c"},"content":"            this.by \u003d LocalDateTime.parse(time, inputFormatter);","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"jayllo-c"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"jayllo-c"},"content":"            throw new DukeException(\"Please enter the date and time in the following format:\\n\"+","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"jayllo-c"},"content":"                    \"dd/mm/yyyy hhmm (e.g. 30/01/2024 1234\");","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"jayllo-c"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"jayllo-c"},"content":"        switch (logic) {","lastModifiedDate":"2024-02-05"},{"lineNumber":58,"author":{"gitId":"jayllo-c"},"content":"        case \"1\":","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"jayllo-c"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2024-02-05"},{"lineNumber":60,"author":{"gitId":"jayllo-c"},"content":"            break;","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"jayllo-c"},"content":"        default:","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"jayllo-c"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2024-02-05"},{"lineNumber":63,"author":{"gitId":"jayllo-c"},"content":"            break;","lastModifiedDate":"2024-02-05"},{"lineNumber":64,"author":{"gitId":"jayllo-c"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":65,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":66,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":67,"author":{"gitId":"jayllo-c"},"content":"    public String getBy() {","lastModifiedDate":"2024-02-05"},{"lineNumber":68,"author":{"gitId":"jayllo-c"},"content":"        return by.format(inputFormatter);","lastModifiedDate":"2024-02-05"},{"lineNumber":69,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":70,"author":{"gitId":"jayllo-c"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":71,"author":{"gitId":"jayllo-c"},"content":"    public String toString() {","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"jayllo-c"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(displayFormatter) + \")\";","lastModifiedDate":"2024-02-05"},{"lineNumber":73,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"jayllo-c"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"jayllo-c":74}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jayllo-c"},"content":"package duke;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"jayllo-c"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"jayllo-c"},"content":"    static String horzLine \u003d \"____________________________________________________________\";","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"jayllo-c"},"content":"    static String chatbotName \u003d \"Destiny\";","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"jayllo-c"},"content":"    static String greetingMessage \u003d horzLine","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"jayllo-c"},"content":"            + \"\\nGreetings! I\u0027m \" + chatbotName + \"\\nHow may I serve you?\\n\"","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"jayllo-c"},"content":"            + horzLine;","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"jayllo-c"},"content":"    static String goodbyeMessage \u003d horzLine +","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"jayllo-c"},"content":"            \"\\nBye. Hope to see you again soon!\\n\"","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"jayllo-c"},"content":"            + horzLine;","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"jayllo-c"},"content":"    public static void printWithLines(String message) {","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"jayllo-c"},"content":"        System.out.println(horzLine);","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"jayllo-c"},"content":"        System.out.println(message);","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"jayllo-c"},"content":"        System.out.println(horzLine);","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"jayllo-c"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"jayllo-c"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"jayllo-c"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"jayllo-c"},"content":"    private Parser parser;","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"jayllo-c"},"content":"    public Duke() {","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"jayllo-c"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"jayllo-c"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"jayllo-c"},"content":"        tasks \u003d new TaskList(storage.loadData());","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"jayllo-c"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"jayllo-c"},"content":"    public void run() {","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"jayllo-c"},"content":"        System.out.println(greetingMessage);","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"jayllo-c"},"content":"        while(!ui.getUserInput().equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"jayllo-c"},"content":"            ui.inputMessage();","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"jayllo-c"},"content":"            String userMessage \u003d ui.getUserInput();","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"jayllo-c"},"content":"            if (userMessage.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"jayllo-c"},"content":"                break;","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"jayllo-c"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"jayllo-c"},"content":"            String[] userMessageArr \u003d parser.getCommand(userMessage);","lastModifiedDate":"2024-02-06"},{"lineNumber":46,"author":{"gitId":"jayllo-c"},"content":"            String userCmd \u003d userMessageArr[0];","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"jayllo-c"},"content":"            String cmdDetails \u003d userMessageArr[1];","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"jayllo-c"},"content":"            // checks if command is valid","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"jayllo-c"},"content":"            try {","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"jayllo-c"},"content":"                AcceptedCmds testCommand \u003d AcceptedCmds.valueOf(userCmd.toLowerCase());","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"jayllo-c"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"jayllo-c"},"content":"                printWithLines(\"Please enter a valid command\\nThe list of valid commands are as follows:\\n\" +","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"jayllo-c"},"content":"                        Arrays.asList(AcceptedCmds.values()));","lastModifiedDate":"2024-02-06"},{"lineNumber":55,"author":{"gitId":"jayllo-c"},"content":"                continue;","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"jayllo-c"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":58,"author":{"gitId":"jayllo-c"},"content":"            if (userCmd.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"jayllo-c"},"content":"                list();","lastModifiedDate":"2024-02-05"},{"lineNumber":60,"author":{"gitId":"jayllo-c"},"content":"            } else if (userCmd.equalsIgnoreCase(\"mark\") ||","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"jayllo-c"},"content":"                    userCmd.equalsIgnoreCase(\"unmark\")) {","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"jayllo-c"},"content":"                try {","lastModifiedDate":"2024-02-05"},{"lineNumber":63,"author":{"gitId":"jayllo-c"},"content":"                    String possInteger \u003d parser.getCmdDetails(userCmd, cmdDetails);","lastModifiedDate":"2024-02-06"},{"lineNumber":64,"author":{"gitId":"jayllo-c"},"content":"                    int taskIndex \u003d Integer.valueOf(possInteger);","lastModifiedDate":"2024-02-05"},{"lineNumber":65,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":66,"author":{"gitId":"jayllo-c"},"content":"                    if (userCmd.equalsIgnoreCase(\"unmark\")) {","lastModifiedDate":"2024-02-05"},{"lineNumber":67,"author":{"gitId":"jayllo-c"},"content":"                        markNotDone(taskIndex);","lastModifiedDate":"2024-02-05"},{"lineNumber":68,"author":{"gitId":"jayllo-c"},"content":"                    } else {","lastModifiedDate":"2024-02-05"},{"lineNumber":69,"author":{"gitId":"jayllo-c"},"content":"                        markDone(taskIndex);","lastModifiedDate":"2024-02-05"},{"lineNumber":70,"author":{"gitId":"jayllo-c"},"content":"                    }","lastModifiedDate":"2024-02-05"},{"lineNumber":71,"author":{"gitId":"jayllo-c"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":72,"author":{"gitId":"jayllo-c"},"content":"                    printWithLines(e.getMessage());","lastModifiedDate":"2024-02-05"},{"lineNumber":73,"author":{"gitId":"jayllo-c"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":74,"author":{"gitId":"jayllo-c"},"content":"                    printWithLines((tasks.size() !\u003d 0 ?","lastModifiedDate":"2024-02-06"},{"lineNumber":75,"author":{"gitId":"jayllo-c"},"content":"                            \"Invalid input type\\nEnter a number between 1 and \" + tasks.size() :","lastModifiedDate":"2024-02-06"},{"lineNumber":76,"author":{"gitId":"jayllo-c"},"content":"                            \"Invalid input type\\nCan\u0027t mark or unmark either cause the list is empty\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":77,"author":{"gitId":"jayllo-c"},"content":"                }","lastModifiedDate":"2024-02-05"},{"lineNumber":78,"author":{"gitId":"jayllo-c"},"content":"            } else if (userCmd.equalsIgnoreCase(\"delete\")) {","lastModifiedDate":"2024-02-05"},{"lineNumber":79,"author":{"gitId":"jayllo-c"},"content":"                try {","lastModifiedDate":"2024-02-05"},{"lineNumber":80,"author":{"gitId":"jayllo-c"},"content":"                    String possInteger \u003d parser.getCmdDetails(userCmd, cmdDetails);","lastModifiedDate":"2024-02-06"},{"lineNumber":81,"author":{"gitId":"jayllo-c"},"content":"                    int taskIndex \u003d Integer.valueOf(possInteger);","lastModifiedDate":"2024-02-05"},{"lineNumber":82,"author":{"gitId":"jayllo-c"},"content":"                    tasks.delete(taskIndex);","lastModifiedDate":"2024-02-06"},{"lineNumber":83,"author":{"gitId":"jayllo-c"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":84,"author":{"gitId":"jayllo-c"},"content":"                    printWithLines(e.getMessage());","lastModifiedDate":"2024-02-05"},{"lineNumber":85,"author":{"gitId":"jayllo-c"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":86,"author":{"gitId":"jayllo-c"},"content":"                    printWithLines((tasks.size() !\u003d 0 ?","lastModifiedDate":"2024-02-06"},{"lineNumber":87,"author":{"gitId":"jayllo-c"},"content":"                            \"Invalid input type\\nEnter a number between 1 and \" + tasks.size() :","lastModifiedDate":"2024-02-06"},{"lineNumber":88,"author":{"gitId":"jayllo-c"},"content":"                            \"Invalid input type\\nCan\u0027t mark or unmark either cause the list is empty\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":89,"author":{"gitId":"jayllo-c"},"content":"                }","lastModifiedDate":"2024-02-05"},{"lineNumber":90,"author":{"gitId":"jayllo-c"},"content":"            } else if (userCmd.equalsIgnoreCase(\"todo\")) {","lastModifiedDate":"2024-02-05"},{"lineNumber":91,"author":{"gitId":"jayllo-c"},"content":"                try {","lastModifiedDate":"2024-02-05"},{"lineNumber":92,"author":{"gitId":"jayllo-c"},"content":"                    String possToDo \u003d parser.getCmdDetails(userCmd, cmdDetails);","lastModifiedDate":"2024-02-06"},{"lineNumber":93,"author":{"gitId":"jayllo-c"},"content":"                    ToDo newToDo \u003d new ToDo(possToDo);","lastModifiedDate":"2024-02-05"},{"lineNumber":94,"author":{"gitId":"jayllo-c"},"content":"                    tasks.addTask(newToDo);","lastModifiedDate":"2024-02-06"},{"lineNumber":95,"author":{"gitId":"jayllo-c"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":96,"author":{"gitId":"jayllo-c"},"content":"                    printWithLines(e.getMessage());","lastModifiedDate":"2024-02-05"},{"lineNumber":97,"author":{"gitId":"jayllo-c"},"content":"                }","lastModifiedDate":"2024-02-05"},{"lineNumber":98,"author":{"gitId":"jayllo-c"},"content":"            } else if (userCmd.equalsIgnoreCase(\"deadline\")) {","lastModifiedDate":"2024-02-05"},{"lineNumber":99,"author":{"gitId":"jayllo-c"},"content":"                try {","lastModifiedDate":"2024-02-05"},{"lineNumber":100,"author":{"gitId":"jayllo-c"},"content":"                    String possDLDetails \u003d parser.getCmdDetails(userCmd, cmdDetails);","lastModifiedDate":"2024-02-06"},{"lineNumber":101,"author":{"gitId":"jayllo-c"},"content":"                    String[] splitDetails \u003d possDLDetails.toLowerCase().split(\"/by \", 2);","lastModifiedDate":"2024-02-05"},{"lineNumber":102,"author":{"gitId":"jayllo-c"},"content":"                    try {","lastModifiedDate":"2024-02-05"},{"lineNumber":103,"author":{"gitId":"jayllo-c"},"content":"                        Deadline newDL \u003d new Deadline(splitDetails[0], splitDetails[1]);","lastModifiedDate":"2024-02-05"},{"lineNumber":104,"author":{"gitId":"jayllo-c"},"content":"                        tasks.addTask(newDL);","lastModifiedDate":"2024-02-06"},{"lineNumber":105,"author":{"gitId":"jayllo-c"},"content":"                    } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":106,"author":{"gitId":"jayllo-c"},"content":"                        printWithLines(\"After entering the deadline task name,\\n\" +","lastModifiedDate":"2024-02-05"},{"lineNumber":107,"author":{"gitId":"jayllo-c"},"content":"                                \"add \u0027/by\u0027 followed by your desired deadline\");","lastModifiedDate":"2024-02-05"},{"lineNumber":108,"author":{"gitId":"jayllo-c"},"content":"                    }","lastModifiedDate":"2024-02-05"},{"lineNumber":109,"author":{"gitId":"jayllo-c"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":110,"author":{"gitId":"jayllo-c"},"content":"                    printWithLines(e.getMessage());","lastModifiedDate":"2024-02-05"},{"lineNumber":111,"author":{"gitId":"jayllo-c"},"content":"                }","lastModifiedDate":"2024-02-05"},{"lineNumber":112,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":113,"author":{"gitId":"jayllo-c"},"content":"            } else if (userCmd.equalsIgnoreCase(\"event\")){","lastModifiedDate":"2024-02-05"},{"lineNumber":114,"author":{"gitId":"jayllo-c"},"content":"                try {","lastModifiedDate":"2024-02-05"},{"lineNumber":115,"author":{"gitId":"jayllo-c"},"content":"                    String possEventDetails \u003d parser.getCmdDetails(userCmd, cmdDetails);","lastModifiedDate":"2024-02-06"},{"lineNumber":116,"author":{"gitId":"jayllo-c"},"content":"                    String[] splitDetails \u003d possEventDetails.split(\"/from \", 2);","lastModifiedDate":"2024-02-05"},{"lineNumber":117,"author":{"gitId":"jayllo-c"},"content":"                    String[] secondSplitDetails \u003d new String[2];","lastModifiedDate":"2024-02-05"},{"lineNumber":118,"author":{"gitId":"jayllo-c"},"content":"                    try {","lastModifiedDate":"2024-02-05"},{"lineNumber":119,"author":{"gitId":"jayllo-c"},"content":"                        secondSplitDetails \u003d splitDetails[1].split(\"/to \", 2);","lastModifiedDate":"2024-02-05"},{"lineNumber":120,"author":{"gitId":"jayllo-c"},"content":"                        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":121,"author":{"gitId":"jayllo-c"},"content":"                            Event newEvent \u003d new Event(splitDetails[0], secondSplitDetails[0], secondSplitDetails[1]);","lastModifiedDate":"2024-02-05"},{"lineNumber":122,"author":{"gitId":"jayllo-c"},"content":"                            tasks.addTask(newEvent);","lastModifiedDate":"2024-02-06"},{"lineNumber":123,"author":{"gitId":"jayllo-c"},"content":"                        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":124,"author":{"gitId":"jayllo-c"},"content":"                            printWithLines(\"After entering your desired start time,\\n\" +","lastModifiedDate":"2024-02-05"},{"lineNumber":125,"author":{"gitId":"jayllo-c"},"content":"                                    \"add \u0027/to\u0027 followed by your desired end time\");","lastModifiedDate":"2024-02-05"},{"lineNumber":126,"author":{"gitId":"jayllo-c"},"content":"                        }","lastModifiedDate":"2024-02-05"},{"lineNumber":127,"author":{"gitId":"jayllo-c"},"content":"                    } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":128,"author":{"gitId":"jayllo-c"},"content":"                        printWithLines(\"After entering the event task name,\\n\" +","lastModifiedDate":"2024-02-05"},{"lineNumber":129,"author":{"gitId":"jayllo-c"},"content":"                                \"add \u0027/from\u0027 followed by your desired start time\");","lastModifiedDate":"2024-02-05"},{"lineNumber":130,"author":{"gitId":"jayllo-c"},"content":"                    }","lastModifiedDate":"2024-02-05"},{"lineNumber":131,"author":{"gitId":"jayllo-c"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":132,"author":{"gitId":"jayllo-c"},"content":"                    printWithLines(e.getMessage());","lastModifiedDate":"2024-02-05"},{"lineNumber":133,"author":{"gitId":"jayllo-c"},"content":"                }","lastModifiedDate":"2024-02-05"},{"lineNumber":134,"author":{"gitId":"jayllo-c"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":135,"author":{"gitId":"jayllo-c"},"content":"            storage.saveData(tasks);","lastModifiedDate":"2024-02-06"},{"lineNumber":136,"author":{"gitId":"jayllo-c"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":137,"author":{"gitId":"jayllo-c"},"content":"        System.out.println(goodbyeMessage);","lastModifiedDate":"2024-02-05"},{"lineNumber":138,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":139,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":140,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":141,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":142,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":143,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":144,"author":{"gitId":"jayllo-c"},"content":"    public void list() {","lastModifiedDate":"2024-02-05"},{"lineNumber":145,"author":{"gitId":"jayllo-c"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2024-02-06"},{"lineNumber":146,"author":{"gitId":"jayllo-c"},"content":"            printWithLines(\"There\u0027s nothing in your list so far\");","lastModifiedDate":"2024-01-31"},{"lineNumber":147,"author":{"gitId":"jayllo-c"},"content":"            return;","lastModifiedDate":"2024-01-31"},{"lineNumber":148,"author":{"gitId":"jayllo-c"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":149,"author":{"gitId":"jayllo-c"},"content":"        System.out.println(horzLine);","lastModifiedDate":"2024-01-26"},{"lineNumber":150,"author":{"gitId":"jayllo-c"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-01-29"},{"lineNumber":151,"author":{"gitId":"jayllo-c"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-06"},{"lineNumber":152,"author":{"gitId":"jayllo-c"},"content":"            int j \u003d i + 1;","lastModifiedDate":"2024-01-29"},{"lineNumber":153,"author":{"gitId":"jayllo-c"},"content":"            System.out.println(j + \". \" + tasks.get(i).toString());","lastModifiedDate":"2024-02-06"},{"lineNumber":154,"author":{"gitId":"jayllo-c"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":155,"author":{"gitId":"jayllo-c"},"content":"        System.out.println(horzLine);","lastModifiedDate":"2024-01-26"},{"lineNumber":156,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":157,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":158,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":159,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":160,"author":{"gitId":"jayllo-c"},"content":"    public void markDone(int index) throws DukeException {","lastModifiedDate":"2024-02-05"},{"lineNumber":161,"author":{"gitId":"jayllo-c"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2024-02-06"},{"lineNumber":162,"author":{"gitId":"jayllo-c"},"content":"            throw new DukeException(\"Nothing is in the list yet\");","lastModifiedDate":"2024-01-31"},{"lineNumber":163,"author":{"gitId":"jayllo-c"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":164,"author":{"gitId":"jayllo-c"},"content":"        if (index \u003c 1 || index \u003e tasks.size()) {","lastModifiedDate":"2024-02-06"},{"lineNumber":165,"author":{"gitId":"jayllo-c"},"content":"            throw new DukeException(\"Please enter a number between 1 and \" + tasks.size());","lastModifiedDate":"2024-02-06"},{"lineNumber":166,"author":{"gitId":"jayllo-c"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":167,"author":{"gitId":"jayllo-c"},"content":"        tasks.get(index - 1).markAsDone();","lastModifiedDate":"2024-02-06"},{"lineNumber":168,"author":{"gitId":"jayllo-c"},"content":"        printWithLines(\"Nice! I\u0027ve marked this task as done:\\n  \" + tasks.get(index - 1).toString());","lastModifiedDate":"2024-02-06"},{"lineNumber":169,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":170,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":171,"author":{"gitId":"jayllo-c"},"content":"    public void markNotDone(int index) throws DukeException {","lastModifiedDate":"2024-02-05"},{"lineNumber":172,"author":{"gitId":"jayllo-c"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2024-02-06"},{"lineNumber":173,"author":{"gitId":"jayllo-c"},"content":"            throw new DukeException(\"Nothing is in the list yet\");","lastModifiedDate":"2024-01-31"},{"lineNumber":174,"author":{"gitId":"jayllo-c"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":175,"author":{"gitId":"jayllo-c"},"content":"        if (index \u003c 1 || index \u003e tasks.size()) {","lastModifiedDate":"2024-02-06"},{"lineNumber":176,"author":{"gitId":"jayllo-c"},"content":"            throw new DukeException(\"Please enter a number between 1 and \" + tasks.size());","lastModifiedDate":"2024-02-06"},{"lineNumber":177,"author":{"gitId":"jayllo-c"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":178,"author":{"gitId":"jayllo-c"},"content":"        tasks.get(index - 1).markAsUndone();","lastModifiedDate":"2024-02-06"},{"lineNumber":179,"author":{"gitId":"jayllo-c"},"content":"        printWithLines(\"OK, I\u0027ve marked this task as not done yet:\\n  \" + tasks.get(index - 1).toString());","lastModifiedDate":"2024-02-06"},{"lineNumber":180,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":181,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":182,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":184,"author":{"gitId":"jayllo-c"},"content":"        new Duke().run();","lastModifiedDate":"2024-02-05"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"jayllo-c":182,"-":4}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jayllo-c"},"content":"package duke;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"jayllo-c"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"jayllo-c"},"content":"    public DukeException() {","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"jayllo-c"},"content":"        super();","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"jayllo-c"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"jayllo-c"},"content":"        super(\"Something went wrong...\\n\" + message);","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"jayllo-c"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"jayllo-c":11}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jayllo-c"},"content":"package duke;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"jayllo-c"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"jayllo-c"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"jayllo-c"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"jayllo-c"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"jayllo-c"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"jayllo-c"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"jayllo-c"},"content":"    private DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"jayllo-c"},"content":"    private DateTimeFormatter displayFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy hh:mma\");","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"jayllo-c"},"content":"    public Event(String description, String fromTime, String toTime) throws DukeException {","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"jayllo-c"},"content":"        super(description);","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"jayllo-c"},"content":"        fromTime \u003d fromTime.trim();","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"jayllo-c"},"content":"        toTime \u003d toTime.trim();","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"jayllo-c"},"content":"        if (description.trim().length() \u003d\u003d 0 || fromTime.length() \u003d\u003d 0 || toTime.length() \u003d\u003d 0) {","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"jayllo-c"},"content":"            String errorMessage \u003d \"Please enter the following:\";","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"jayllo-c"},"content":"            if (description.trim().length() \u003d\u003d 0) {","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"jayllo-c"},"content":"                errorMessage +\u003d \"\\na description for this duke.Deadline task\";","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"jayllo-c"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"jayllo-c"},"content":"            if (fromTime.length() \u003d\u003d 0) {","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"jayllo-c"},"content":"                errorMessage +\u003d \"\\na deadline after the \u0027/from\u0027 command\";","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"jayllo-c"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"jayllo-c"},"content":"            if (toTime.length() \u003d\u003d 0) {","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"jayllo-c"},"content":"                errorMessage +\u003d \"\\na deadline after the \u0027/to\u0027 command\";","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"jayllo-c"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"jayllo-c"},"content":"            throw new DukeException(errorMessage);","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"jayllo-c"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"jayllo-c"},"content":"        String formatIssueMessage \u003d \"Please enter the date and time in the following format:\\n\"+","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"jayllo-c"},"content":"                \"dd/mm/yyyy hhmm (e.g. 30/01/2024 1234)\";","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"jayllo-c"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"jayllo-c"},"content":"            if (LocalDateTime.parse(fromTime, inputFormatter).isAfter(LocalDateTime.parse(toTime, inputFormatter))) {","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"jayllo-c"},"content":"                throw new DukeException(\"The time in \\\"from\\\" comes after the time in \\\"to\\\"\\n\" +","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"jayllo-c"},"content":"                        \"Please ensure that your \\\"from\\\" time is earlier than your \\\"to\\\" time\");","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"jayllo-c"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"jayllo-c"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"jayllo-c"},"content":"            throw new DukeException(\"The time format in \\\"from\\\" or \\\"to\\\" is wrong\\n\" + formatIssueMessage);","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"jayllo-c"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"jayllo-c"},"content":"        this.from \u003d LocalDateTime.parse(fromTime, inputFormatter);","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"jayllo-c"},"content":"        this.to \u003d LocalDateTime.parse(toTime, inputFormatter);","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"jayllo-c"},"content":"    public Event(String logic, String description, String fromTime, String toTime) throws DukeException {","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"jayllo-c"},"content":"        super(description);","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"jayllo-c"},"content":"        fromTime \u003d fromTime.trim();","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"jayllo-c"},"content":"        toTime \u003d toTime.trim();","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"jayllo-c"},"content":"        if (description.trim().length() \u003d\u003d 0 || fromTime.length() \u003d\u003d 0 || toTime.length() \u003d\u003d 0) {","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"jayllo-c"},"content":"            String errorMessage \u003d \"Please enter the following:\";","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"jayllo-c"},"content":"            if (description.trim().length() \u003d\u003d 0) {","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"jayllo-c"},"content":"                errorMessage +\u003d \"\\na description for this duke.Deadline task\";","lastModifiedDate":"2024-02-06"},{"lineNumber":53,"author":{"gitId":"jayllo-c"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"jayllo-c"},"content":"            if (fromTime.length() \u003d\u003d 0) {","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"jayllo-c"},"content":"                errorMessage +\u003d \"\\na deadline after the \u0027/from\u0027 command\";","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"jayllo-c"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"jayllo-c"},"content":"            if (toTime.length() \u003d\u003d 0) {","lastModifiedDate":"2024-02-05"},{"lineNumber":58,"author":{"gitId":"jayllo-c"},"content":"                errorMessage +\u003d \"\\na deadline after the \u0027/to\u0027 command\";","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"jayllo-c"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":60,"author":{"gitId":"jayllo-c"},"content":"            throw new DukeException(errorMessage);","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"jayllo-c"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":63,"author":{"gitId":"jayllo-c"},"content":"        String formatIssueMessage \u003d \"Please enter the date and time in the following format:\\n\"+","lastModifiedDate":"2024-02-05"},{"lineNumber":64,"author":{"gitId":"jayllo-c"},"content":"                \"dd/mm/yyyy hhmm (e.g. 30/01/2024 1234)\";","lastModifiedDate":"2024-02-05"},{"lineNumber":65,"author":{"gitId":"jayllo-c"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":66,"author":{"gitId":"jayllo-c"},"content":"            if (LocalDateTime.parse(fromTime, inputFormatter).isAfter(LocalDateTime.parse(toTime, inputFormatter))) {","lastModifiedDate":"2024-02-05"},{"lineNumber":67,"author":{"gitId":"jayllo-c"},"content":"                throw new DukeException(\"The time in \\\"from\\\" comes after the time in \\\"to\\\"\\n\" +","lastModifiedDate":"2024-02-05"},{"lineNumber":68,"author":{"gitId":"jayllo-c"},"content":"                        \"Please ensure that your \\\"from\\\" time is earlier than your \\\"to\\\" time\");","lastModifiedDate":"2024-02-05"},{"lineNumber":69,"author":{"gitId":"jayllo-c"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":70,"author":{"gitId":"jayllo-c"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":71,"author":{"gitId":"jayllo-c"},"content":"            throw new DukeException(\"The time format in \\\"from\\\" or \\\"to\\\" is wrong\\n\" + formatIssueMessage);","lastModifiedDate":"2024-02-05"},{"lineNumber":72,"author":{"gitId":"jayllo-c"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":73,"author":{"gitId":"jayllo-c"},"content":"        this.from \u003d LocalDateTime.parse(fromTime, inputFormatter);","lastModifiedDate":"2024-02-05"},{"lineNumber":74,"author":{"gitId":"jayllo-c"},"content":"        this.to \u003d LocalDateTime.parse(toTime, inputFormatter);","lastModifiedDate":"2024-02-05"},{"lineNumber":75,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":76,"author":{"gitId":"jayllo-c"},"content":"        switch (logic) {","lastModifiedDate":"2024-02-05"},{"lineNumber":77,"author":{"gitId":"jayllo-c"},"content":"            case \"1\":","lastModifiedDate":"2024-02-05"},{"lineNumber":78,"author":{"gitId":"jayllo-c"},"content":"                this.isDone \u003d true;","lastModifiedDate":"2024-02-05"},{"lineNumber":79,"author":{"gitId":"jayllo-c"},"content":"                break;","lastModifiedDate":"2024-02-05"},{"lineNumber":80,"author":{"gitId":"jayllo-c"},"content":"            default:","lastModifiedDate":"2024-02-05"},{"lineNumber":81,"author":{"gitId":"jayllo-c"},"content":"                this.isDone \u003d false;","lastModifiedDate":"2024-02-05"},{"lineNumber":82,"author":{"gitId":"jayllo-c"},"content":"                break;","lastModifiedDate":"2024-02-05"},{"lineNumber":83,"author":{"gitId":"jayllo-c"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":84,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":85,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":86,"author":{"gitId":"jayllo-c"},"content":"    public String getFrom() {","lastModifiedDate":"2024-02-05"},{"lineNumber":87,"author":{"gitId":"jayllo-c"},"content":"        return from.format(inputFormatter);","lastModifiedDate":"2024-02-05"},{"lineNumber":88,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":89,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":90,"author":{"gitId":"jayllo-c"},"content":"    public String getTo() {","lastModifiedDate":"2024-02-05"},{"lineNumber":91,"author":{"gitId":"jayllo-c"},"content":"        return to.format(inputFormatter);","lastModifiedDate":"2024-02-05"},{"lineNumber":92,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":93,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":94,"author":{"gitId":"jayllo-c"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":95,"author":{"gitId":"jayllo-c"},"content":"    public String toString() {","lastModifiedDate":"2024-01-29"},{"lineNumber":96,"author":{"gitId":"jayllo-c"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from.format(displayFormatter) +","lastModifiedDate":"2024-02-05"},{"lineNumber":97,"author":{"gitId":"jayllo-c"},"content":"                \"  to: \" + to.format(displayFormatter) + \")\";","lastModifiedDate":"2024-02-05"},{"lineNumber":98,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":99,"author":{"gitId":"jayllo-c"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"jayllo-c":99}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jayllo-c"},"content":"package duke;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"jayllo-c"},"content":"public class Parser {","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"jayllo-c"},"content":"    public String[] getCommand(String userMessage) {","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"jayllo-c"},"content":"        String[] result \u003d new String[2];","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"jayllo-c"},"content":"        Boolean foundSplit \u003d false;","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"jayllo-c"},"content":"        for (int i \u003d 0; i \u003c userMessage.length(); i++) {","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"jayllo-c"},"content":"            if (userMessage.charAt(i) \u003d\u003d \u0027 \u0027) {","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"jayllo-c"},"content":"                result[0] \u003d userMessage.substring(0, i);","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"jayllo-c"},"content":"                result[1] \u003d userMessage.substring(i + 1, userMessage.length());","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"jayllo-c"},"content":"                foundSplit \u003d true;","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"jayllo-c"},"content":"                break;","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"jayllo-c"},"content":"            }","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"jayllo-c"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"jayllo-c"},"content":"        if (!foundSplit) {","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"jayllo-c"},"content":"            result[0] \u003d userMessage;","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"jayllo-c"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"jayllo-c"},"content":"        return result;","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"jayllo-c"},"content":"    public String getCmdDetails(String cmd, String details) throws DukeException {","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"jayllo-c"},"content":"        if (details \u003d\u003d null || details.trim().length() \u003d\u003d 0) {","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"jayllo-c"},"content":"            throw new DukeException(\"Please enter a description for the \" + cmd + \" command\");","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"jayllo-c"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"jayllo-c"},"content":"        return details.trim();","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"jayllo-c"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"jayllo-c":27}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jayllo-c"},"content":"package duke;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"jayllo-c"},"content":"import java.io.File;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"jayllo-c"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"jayllo-c"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"jayllo-c"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"jayllo-c"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"jayllo-c"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"jayllo-c"},"content":"public class Storage {","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"jayllo-c"},"content":"    final static String dataPath \u003d System.getProperty(\"user.dir\") + \"/data\";","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"jayllo-c"},"content":"    final static String fileName \u003d \"duke.txt\";","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"jayllo-c"},"content":"    public ArrayList\u003cTask\u003e loadData() {","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"jayllo-c"},"content":"        File directory \u003d new File(dataPath);","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"jayllo-c"},"content":"        File file \u003d new File(dataPath + \"/\" + fileName);","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"jayllo-c"},"content":"        ArrayList\u003cTask\u003e tempTaskStorage \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"jayllo-c"},"content":"        // check if data directory and file exist already","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"jayllo-c"},"content":"        if (!directory.exists()){","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"jayllo-c"},"content":"            directory.mkdir();","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"jayllo-c"},"content":"            try {","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"jayllo-c"},"content":"                file.createNewFile();","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"jayllo-c"},"content":"                System.out.println(\"First initialization, creating new save file...\");","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"jayllo-c"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"jayllo-c"},"content":"                e.printStackTrace();","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"jayllo-c"},"content":"            }","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"jayllo-c"},"content":"        } else if (!file.exists()) {","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"jayllo-c"},"content":"            try {","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"jayllo-c"},"content":"                file.createNewFile();","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"jayllo-c"},"content":"                System.out.println(\"Data file missing, creating new save file...\");","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"jayllo-c"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"jayllo-c"},"content":"                e.printStackTrace();","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"jayllo-c"},"content":"            }","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"jayllo-c"},"content":"        } else {","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"jayllo-c"},"content":"            try {","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"jayllo-c"},"content":"                Scanner s \u003d new Scanner(file);","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"jayllo-c"},"content":"                while (s.hasNextLine()) {","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"jayllo-c"},"content":"                    String newEntry \u003d s.nextLine();","lastModifiedDate":"2024-02-06"},{"lineNumber":40,"author":{"gitId":"jayllo-c"},"content":"                    String[] entryDetails \u003d newEntry.split(\" \\\\| \");","lastModifiedDate":"2024-02-06"},{"lineNumber":41,"author":{"gitId":"jayllo-c"},"content":"                    Task newTask;","lastModifiedDate":"2024-02-06"},{"lineNumber":42,"author":{"gitId":"jayllo-c"},"content":"                    switch (entryDetails[0]) {","lastModifiedDate":"2024-02-06"},{"lineNumber":43,"author":{"gitId":"jayllo-c"},"content":"                        case \"T\":","lastModifiedDate":"2024-02-06"},{"lineNumber":44,"author":{"gitId":"jayllo-c"},"content":"                            newTask \u003d new ToDo(entryDetails[1], entryDetails[2]);","lastModifiedDate":"2024-02-06"},{"lineNumber":45,"author":{"gitId":"jayllo-c"},"content":"                            tempTaskStorage.add(newTask);","lastModifiedDate":"2024-02-06"},{"lineNumber":46,"author":{"gitId":"jayllo-c"},"content":"                            break;","lastModifiedDate":"2024-02-06"},{"lineNumber":47,"author":{"gitId":"jayllo-c"},"content":"                        case \"D\":","lastModifiedDate":"2024-02-06"},{"lineNumber":48,"author":{"gitId":"jayllo-c"},"content":"                            newTask \u003d new Deadline(entryDetails[1], entryDetails[2], entryDetails[3]);","lastModifiedDate":"2024-02-06"},{"lineNumber":49,"author":{"gitId":"jayllo-c"},"content":"                            tempTaskStorage.add(newTask);","lastModifiedDate":"2024-02-06"},{"lineNumber":50,"author":{"gitId":"jayllo-c"},"content":"                            break;","lastModifiedDate":"2024-02-06"},{"lineNumber":51,"author":{"gitId":"jayllo-c"},"content":"                        case \"E\":","lastModifiedDate":"2024-02-06"},{"lineNumber":52,"author":{"gitId":"jayllo-c"},"content":"                            newTask \u003d new Event(entryDetails[1], entryDetails[2], entryDetails[3], entryDetails[4]);","lastModifiedDate":"2024-02-06"},{"lineNumber":53,"author":{"gitId":"jayllo-c"},"content":"                            tempTaskStorage.add(newTask);","lastModifiedDate":"2024-02-06"},{"lineNumber":54,"author":{"gitId":"jayllo-c"},"content":"                            break;","lastModifiedDate":"2024-02-06"},{"lineNumber":55,"author":{"gitId":"jayllo-c"},"content":"                    }","lastModifiedDate":"2024-02-06"},{"lineNumber":56,"author":{"gitId":"jayllo-c"},"content":"                }","lastModifiedDate":"2024-02-06"},{"lineNumber":57,"author":{"gitId":"jayllo-c"},"content":"                return tempTaskStorage;","lastModifiedDate":"2024-02-06"},{"lineNumber":58,"author":{"gitId":"jayllo-c"},"content":"            } catch (DukeException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-06"},{"lineNumber":59,"author":{"gitId":"jayllo-c"},"content":"                try {","lastModifiedDate":"2024-02-06"},{"lineNumber":60,"author":{"gitId":"jayllo-c"},"content":"                    file.delete();","lastModifiedDate":"2024-02-06"},{"lineNumber":61,"author":{"gitId":"jayllo-c"},"content":"                    file.createNewFile();","lastModifiedDate":"2024-02-06"},{"lineNumber":62,"author":{"gitId":"jayllo-c"},"content":"                    System.out.println(\"Data file corrupted, creating new save file...\");","lastModifiedDate":"2024-02-06"},{"lineNumber":63,"author":{"gitId":"jayllo-c"},"content":"                } catch (IOException ioe) {","lastModifiedDate":"2024-02-06"},{"lineNumber":64,"author":{"gitId":"jayllo-c"},"content":"                    ioe.printStackTrace();","lastModifiedDate":"2024-02-06"},{"lineNumber":65,"author":{"gitId":"jayllo-c"},"content":"                }","lastModifiedDate":"2024-02-06"},{"lineNumber":66,"author":{"gitId":"jayllo-c"},"content":"            } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-06"},{"lineNumber":67,"author":{"gitId":"jayllo-c"},"content":"                e.printStackTrace();","lastModifiedDate":"2024-02-06"},{"lineNumber":68,"author":{"gitId":"jayllo-c"},"content":"            }","lastModifiedDate":"2024-02-06"},{"lineNumber":69,"author":{"gitId":"jayllo-c"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":70,"author":{"gitId":"jayllo-c"},"content":"        return new ArrayList\u003c\u003e(100);","lastModifiedDate":"2024-02-06"},{"lineNumber":71,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":72,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":73,"author":{"gitId":"jayllo-c"},"content":"    public void saveData(TaskList tasks) {","lastModifiedDate":"2024-02-06"},{"lineNumber":74,"author":{"gitId":"jayllo-c"},"content":"        File directory \u003d new File(dataPath);","lastModifiedDate":"2024-02-06"},{"lineNumber":75,"author":{"gitId":"jayllo-c"},"content":"        File file \u003d new File(dataPath + \"/\" + fileName);","lastModifiedDate":"2024-02-06"},{"lineNumber":76,"author":{"gitId":"jayllo-c"},"content":"        // reset file","lastModifiedDate":"2024-02-06"},{"lineNumber":77,"author":{"gitId":"jayllo-c"},"content":"        try {","lastModifiedDate":"2024-02-06"},{"lineNumber":78,"author":{"gitId":"jayllo-c"},"content":"            file.delete();","lastModifiedDate":"2024-02-06"},{"lineNumber":79,"author":{"gitId":"jayllo-c"},"content":"            file.createNewFile();","lastModifiedDate":"2024-02-06"},{"lineNumber":80,"author":{"gitId":"jayllo-c"},"content":"            FileWriter writer \u003d new FileWriter(file);","lastModifiedDate":"2024-02-06"},{"lineNumber":81,"author":{"gitId":"jayllo-c"},"content":"            ArrayList\u003cTask\u003e taskList \u003d tasks.getTaskList();","lastModifiedDate":"2024-02-06"},{"lineNumber":82,"author":{"gitId":"jayllo-c"},"content":"            for (Task tsk: taskList) {","lastModifiedDate":"2024-02-06"},{"lineNumber":83,"author":{"gitId":"jayllo-c"},"content":"                if (tsk instanceof ToDo) {","lastModifiedDate":"2024-02-06"},{"lineNumber":84,"author":{"gitId":"jayllo-c"},"content":"                    writer.write(\"T | \" + tsk.getStatusAsNum() + \" | \" + tsk.getDescription()","lastModifiedDate":"2024-02-06"},{"lineNumber":85,"author":{"gitId":"jayllo-c"},"content":"                            + System.lineSeparator());","lastModifiedDate":"2024-02-06"},{"lineNumber":86,"author":{"gitId":"jayllo-c"},"content":"                } else if (tsk instanceof Deadline) {","lastModifiedDate":"2024-02-06"},{"lineNumber":87,"author":{"gitId":"jayllo-c"},"content":"                    writer.write(\"D | \" + tsk.getStatusAsNum() + \" | \" + tsk.getDescription()","lastModifiedDate":"2024-02-06"},{"lineNumber":88,"author":{"gitId":"jayllo-c"},"content":"                            + \" | \" + ((Deadline) tsk).getBy()","lastModifiedDate":"2024-02-06"},{"lineNumber":89,"author":{"gitId":"jayllo-c"},"content":"                            + System.lineSeparator());","lastModifiedDate":"2024-02-06"},{"lineNumber":90,"author":{"gitId":"jayllo-c"},"content":"                } else if (tsk instanceof Event) {","lastModifiedDate":"2024-02-06"},{"lineNumber":91,"author":{"gitId":"jayllo-c"},"content":"                    writer.write(\"E | \" + tsk.getStatusAsNum() + \" | \" + tsk.getDescription()","lastModifiedDate":"2024-02-06"},{"lineNumber":92,"author":{"gitId":"jayllo-c"},"content":"                            + \" | \" + ((Event) tsk).getFrom() + \" | \" + ((Event) tsk).getTo()","lastModifiedDate":"2024-02-06"},{"lineNumber":93,"author":{"gitId":"jayllo-c"},"content":"                            + System.lineSeparator());","lastModifiedDate":"2024-02-06"},{"lineNumber":94,"author":{"gitId":"jayllo-c"},"content":"                }","lastModifiedDate":"2024-02-06"},{"lineNumber":95,"author":{"gitId":"jayllo-c"},"content":"            }","lastModifiedDate":"2024-02-06"},{"lineNumber":96,"author":{"gitId":"jayllo-c"},"content":"            writer.close();","lastModifiedDate":"2024-02-06"},{"lineNumber":97,"author":{"gitId":"jayllo-c"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-06"},{"lineNumber":98,"author":{"gitId":"jayllo-c"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-06"},{"lineNumber":99,"author":{"gitId":"jayllo-c"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":100,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":101,"author":{"gitId":"jayllo-c"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"jayllo-c":101}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jayllo-c"},"content":"package duke;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"jayllo-c"},"content":"public class Task {","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"jayllo-c"},"content":"    protected String description;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"jayllo-c"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"jayllo-c"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"jayllo-c"},"content":"        this.description \u003d description.trim();","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"jayllo-c"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"jayllo-c"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"jayllo-c"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"jayllo-c"},"content":"    public String getStatusAsNum() {","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"jayllo-c"},"content":"        return (isDone ? \"1\" : \"0\"); // mark done task with X","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"jayllo-c"},"content":"    public String getDescription() {","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"jayllo-c"},"content":"        return description;","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"jayllo-c"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"jayllo-c"},"content":"    public String toString() {","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"jayllo-c"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + description;","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"jayllo-c"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"jayllo-c"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"jayllo-c"},"content":"    public void markAsUndone() {","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"jayllo-c"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"jayllo-c"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"jayllo-c":35}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jayllo-c"},"content":"package duke;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"jayllo-c"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"jayllo-c"},"content":"public class TaskList {","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"jayllo-c"},"content":"    static String horzLine \u003d \"____________________________________________________________\";","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"jayllo-c"},"content":"    static void printWithLines(String message) {","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"jayllo-c"},"content":"        System.out.println(horzLine);","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"jayllo-c"},"content":"        System.out.println(message);","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"jayllo-c"},"content":"        System.out.println(horzLine);","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"jayllo-c"},"content":"    private ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"jayllo-c"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"jayllo-c"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"jayllo-c"},"content":"    public Task get(int i) {","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"jayllo-c"},"content":"        return taskList.get(i);","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"jayllo-c"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"jayllo-c"},"content":"        return taskList;","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"jayllo-c"},"content":"    public int size() {","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"jayllo-c"},"content":"        return taskList.size();","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"jayllo-c"},"content":"    public void addTask(Task newTask) {","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"jayllo-c"},"content":"        taskList.add(newTask);","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"jayllo-c"},"content":"        printWithLines(\"Got it. I\u0027ve added this task:\\n   \" + newTask.toString() +","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"jayllo-c"},"content":"                \"\\nNow you have \" + taskList.size() + (taskList.size() \u003e 1 ? \" tasks \": \" task \") +","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"jayllo-c"},"content":"                \"in the list.\");","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"jayllo-c"},"content":"    public void delete(int index) throws DukeException {","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"jayllo-c"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"jayllo-c"},"content":"            throw new DukeException(\"Nothing is in the list yet\");","lastModifiedDate":"2024-02-06"},{"lineNumber":40,"author":{"gitId":"jayllo-c"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":41,"author":{"gitId":"jayllo-c"},"content":"        if (index \u003c 1 || index \u003e taskList.size()) {","lastModifiedDate":"2024-02-06"},{"lineNumber":42,"author":{"gitId":"jayllo-c"},"content":"            throw new DukeException(\"Please enter a number between 1 and \" + taskList.size());","lastModifiedDate":"2024-02-06"},{"lineNumber":43,"author":{"gitId":"jayllo-c"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":44,"author":{"gitId":"jayllo-c"},"content":"        Task tempTask \u003d taskList.get(index - 1);","lastModifiedDate":"2024-02-06"},{"lineNumber":45,"author":{"gitId":"jayllo-c"},"content":"        taskList.remove(index - 1);","lastModifiedDate":"2024-02-06"},{"lineNumber":46,"author":{"gitId":"jayllo-c"},"content":"        printWithLines(\"Noted. I\u0027ve removed this task:\\n   \" + tempTask.toString() +","lastModifiedDate":"2024-02-06"},{"lineNumber":47,"author":{"gitId":"jayllo-c"},"content":"                \"\\nNow you have \" + taskList.size() + (taskList.size() \u003e 1 ? \" tasks \": \" task \") +","lastModifiedDate":"2024-02-06"},{"lineNumber":48,"author":{"gitId":"jayllo-c"},"content":"                \"in the list.\");","lastModifiedDate":"2024-02-06"},{"lineNumber":49,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":50,"author":{"gitId":"jayllo-c"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"jayllo-c":50}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jayllo-c"},"content":"package duke;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"jayllo-c"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"jayllo-c"},"content":"    public ToDo(String description) throws DukeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"jayllo-c"},"content":"        super(description);","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"jayllo-c"},"content":"        if (description.trim().length() \u003d\u003d 0) {","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"jayllo-c"},"content":"            throw new DukeException(\"Please enter a description for this todo task\");","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"jayllo-c"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"jayllo-c"},"content":"    public ToDo(String logic, String description) throws DukeException {","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"jayllo-c"},"content":"        super(description);","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"jayllo-c"},"content":"        if (description.trim().length() \u003d\u003d 0) {","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"jayllo-c"},"content":"            throw new DukeException(\"Please enter a description for this todo task\");","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"jayllo-c"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"jayllo-c"},"content":"        switch (logic) {","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"jayllo-c"},"content":"        case \"1\":","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"jayllo-c"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"jayllo-c"},"content":"            break;","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"jayllo-c"},"content":"        default:","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"jayllo-c"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"jayllo-c"},"content":"            break;","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"jayllo-c"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"jayllo-c"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"jayllo-c"},"content":"    public String toString() {","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"jayllo-c"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"jayllo-c"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"jayllo-c":29}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jayllo-c"},"content":"package duke;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"jayllo-c"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"jayllo-c"},"content":"public class Ui {","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"jayllo-c"},"content":"    Scanner scanObj \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"jayllo-c"},"content":"    private String userInput \u003d \"\";","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"jayllo-c"},"content":"    public void inputMessage() {","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"jayllo-c"},"content":"        userInput \u003d scanObj.nextLine();","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"jayllo-c"},"content":"    public String getUserInput() {","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"jayllo-c"},"content":"        return userInput;","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"jayllo-c"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"jayllo-c":16}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jayllo-c"},"content":"todo test","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"jayllo-c"},"content":"deadline test2 /by Mon","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"jayllo-c"},"content":"deadline test2 /by 11/02/2024 2359","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"jayllo-c"},"content":"event test3 /from 11/02/2024 2359 /to 11/02/2024 2358","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"jayllo-c"},"content":"event test3 /from 11/02/2024 2359 /to 12/02/2024 2359","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"jayllo-c"},"content":"list","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"jayllo-c"},"content":"mark 4","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"jayllo-c"},"content":"mark 3","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"jayllo-c"},"content":"todo","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"jayllo-c"},"content":"deadline  /by","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"jayllo-c"},"content":"event  /from  /to","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"jayllo-c"},"content":"list","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"jayllo-c"},"content":"delete 2","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"jayllo-c"},"content":"list","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"jayllo-c"},"content":"delete 1","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"jayllo-c"},"content":"list","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"jayllo-c"},"content":"delete 1","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"jayllo-c"},"content":"bye","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"jayllo-c":18}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"jayllo-c"},"content":"javac  -cp ..\\src\\main\\java\\duke -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jayllo-c":1,"-":20}}]
