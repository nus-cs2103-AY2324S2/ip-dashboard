[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"# Capone project template","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":"3. After that, locate the `src/main/java/Capone.java` file, right-click it, and choose `Run Capone.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"ruijietay"},"content":"   ░█▀▀░█▀█░█▀█░█▀█░█▀█░█▀▀░","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"   ░█░░░█▀█░█▀▀░█░█░█░█░█▀▀░","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"ruijietay"},"content":"   ░▀▀▀░▀░▀░▀░░░▀▀▀░▀░▀░▀▀▀░","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ruijietay":5,"-":17}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"ruijietay"},"content":"    implementation group: \u0027org.json\u0027, name: \u0027json\u0027, version: \u002720231013\u0027","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"ruijietay"},"content":"    mainClass.set(\"capone.Capone\")","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ruijietay":2,"-":41}},{"path":"src/main/java/capone/Capone.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"package capone;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"import capone.commands.Command;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"ruijietay"},"content":"import capone.exceptions.CaponeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"import capone.exceptions.TaskListCorruptedException;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"public class Capone {","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"ruijietay"},"content":"    private final TaskList tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":"    private final Storage storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":"    private final Ui ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":"    public Capone(String taskListPath, String taskListName) {","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"ruijietay"},"content":"        this.storage \u003d new Storage(taskListPath, taskListName);","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"ruijietay"},"content":"        this.tasks \u003d new TaskList();","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"ruijietay"},"content":"    public void run() {","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"        this.ui.printWelcomeMsg();","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"ruijietay"},"content":"            this.storage.readTasksFromJsonFile(this.tasks);","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"ruijietay"},"content":"        } catch (TaskListCorruptedException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"ruijietay"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"ruijietay"},"content":"        while (true) {","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"ruijietay"},"content":"            Command command \u003d Parser.processInputs();","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"ruijietay"},"content":"            try {","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"ruijietay"},"content":"                command.execute(tasks, ui, storage);","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"ruijietay"},"content":"            } catch (CaponeException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"ruijietay"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"ruijietay"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"ruijietay"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"ruijietay"},"content":"        new Capone(\"./data/\",\"tasks.json\").run();","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"ruijietay"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"ruijietay":42}},{"path":"src/main/java/capone/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"package capone;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"ruijietay"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"ruijietay"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"ruijietay"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":"import capone.commands.*;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":"import capone.exceptions.CaponeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"ruijietay"},"content":"import capone.exceptions.InvalidDateException;","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"ruijietay"},"content":"import capone.exceptions.InvalidTimeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"ruijietay"},"content":"public class Parser {","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"ruijietay"},"content":"    private static ArrayList\u003cString\u003e inputList;","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"ruijietay"},"content":"    private static final Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"ruijietay"},"content":"    public static ArrayList\u003cString\u003e splitInput(String input) {","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"        // Split inputs by space and store them in an arraylist for processing.","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"ruijietay"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(input.split(\"\\\\s+\")));","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"ruijietay"},"content":"    public static String readUserInput() {","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"ruijietay"},"content":"        return Parser.scanner.nextLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"ruijietay"},"content":"    // We process the user inputs and accordingly generate the correct command types.","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"ruijietay"},"content":"    public static Command processInputs() {","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"ruijietay"},"content":"        Parser.inputList \u003d Parser.splitInput(Parser.readUserInput());","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"ruijietay"},"content":"        String firstWord \u003d inputList.get(0);","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"ruijietay"},"content":"        if (firstWord.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"ruijietay"},"content":"            return new ListCommand();","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"ruijietay"},"content":"        } else if (firstWord.equalsIgnoreCase(\"mark\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"ruijietay"},"content":"            return new MarkCommand(Parser.inputList);","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"ruijietay"},"content":"        } else if (firstWord.equalsIgnoreCase(\"unmark\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"ruijietay"},"content":"            return new UnmarkCommand(Parser.inputList);","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"ruijietay"},"content":"        } else if (firstWord.equalsIgnoreCase(\"todo\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"ruijietay"},"content":"            return new TodoCommand(Parser.inputList);","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"ruijietay"},"content":"        } else if (firstWord.equalsIgnoreCase(\"deadline\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"ruijietay"},"content":"            return new DeadlineCommand(inputList);","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"ruijietay"},"content":"        } else if (firstWord.equalsIgnoreCase(\"event\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"ruijietay"},"content":"            return new EventCommand(inputList);","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"ruijietay"},"content":"        } else if (firstWord.equalsIgnoreCase(\"delete\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"ruijietay"},"content":"            return new DeleteCommand(inputList);","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"ruijietay"},"content":"        } else if (firstWord.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"ruijietay"},"content":"            return new ByeCommand(scanner);","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"ruijietay"},"content":"        } else if (firstWord.equalsIgnoreCase(\"help\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"ruijietay"},"content":"            return new HelpCommand();","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"ruijietay"},"content":"        } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"ruijietay"},"content":"            return new InvalidCommand();","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"ruijietay"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"ruijietay"},"content":"     * Checks if date was an input. The recognized format is:","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"ruijietay"},"content":"     * YYYY-MM-DD","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"ruijietay"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"ruijietay"},"content":"     * @param input the input string to be checked against.","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"ruijietay"},"content":"     * @return true if a valid date is recognised, false otherwise.","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"ruijietay"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"ruijietay"},"content":"    public static boolean isDateFormat(String input) {","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"ruijietay"},"content":"        String dateFormatRegex \u003d \"\\\\d{4}-\\\\d{2}-\\\\d{2}\";","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"ruijietay"},"content":"        // Check if the input string matches the format","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"ruijietay"},"content":"        return input.matches(dateFormatRegex);","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"ruijietay"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"ruijietay"},"content":"     * Checks if time was an input. The recognized formats is:","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"ruijietay"},"content":"     * 1800 (24-hour format).","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"ruijietay"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"ruijietay"},"content":"     * @param input the input string to be checked against.","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"ruijietay"},"content":"     * @return true if a valid time is recognised, false otherwise.","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"ruijietay"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"ruijietay"},"content":"    public static boolean isTimeFormat(String input) {","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"ruijietay"},"content":"        String timeFormatRegex \u003d \"(\\\\d{4})\";","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"ruijietay"},"content":"        // Check if the input string matches the format","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"ruijietay"},"content":"        return input.matches(timeFormatRegex);","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"ruijietay"},"content":"    public static LocalDateTime processDateTime(LocalDate date, LocalTime time) {","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"ruijietay"},"content":"        if (date !\u003d null) {","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"ruijietay"},"content":"            if (time !\u003d null) {","lastModifiedDate":"2024-01-31"},{"lineNumber":91,"author":{"gitId":"ruijietay"},"content":"                return date.atTime(time);","lastModifiedDate":"2024-01-31"},{"lineNumber":92,"author":{"gitId":"ruijietay"},"content":"            } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"ruijietay"},"content":"                return date.atStartOfDay();","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"ruijietay"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":95,"author":{"gitId":"ruijietay"},"content":"        } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"ruijietay"},"content":"            // If only the time is specified, the deadline will be the time at the next day.","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"ruijietay"},"content":"            if (time !\u003d null) {","lastModifiedDate":"2024-01-31"},{"lineNumber":98,"author":{"gitId":"ruijietay"},"content":"                return LocalDate.now().plusDays(1).atTime(time);","lastModifiedDate":"2024-01-31"},{"lineNumber":99,"author":{"gitId":"ruijietay"},"content":"            } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"ruijietay"},"content":"                // Else, if both date and time are null, return null input to use","lastModifiedDate":"2024-01-31"},{"lineNumber":101,"author":{"gitId":"ruijietay"},"content":"                // the string input of date/time by user.","lastModifiedDate":"2024-01-31"},{"lineNumber":102,"author":{"gitId":"ruijietay"},"content":"                return null;","lastModifiedDate":"2024-01-31"},{"lineNumber":103,"author":{"gitId":"ruijietay"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":104,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":105,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":106,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":107,"author":{"gitId":"ruijietay"},"content":"    public static LocalDate parseDate(String date) throws InvalidDateException {","lastModifiedDate":"2024-01-31"},{"lineNumber":108,"author":{"gitId":"ruijietay"},"content":"        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-01-31"},{"lineNumber":109,"author":{"gitId":"ruijietay"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":110,"author":{"gitId":"ruijietay"},"content":"            return LocalDate.parse(date, dateFormatter);","lastModifiedDate":"2024-01-31"},{"lineNumber":111,"author":{"gitId":"ruijietay"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":112,"author":{"gitId":"ruijietay"},"content":"            throw new InvalidDateException(\"Oops! You have entered an invalid date. Please try again.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":113,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":114,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":115,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":116,"author":{"gitId":"ruijietay"},"content":"    public static LocalTime parseTime(String time) throws InvalidTimeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":117,"author":{"gitId":"ruijietay"},"content":"        DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2024-01-31"},{"lineNumber":118,"author":{"gitId":"ruijietay"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":119,"author":{"gitId":"ruijietay"},"content":"            return LocalTime.parse(time, timeFormatter);","lastModifiedDate":"2024-01-31"},{"lineNumber":120,"author":{"gitId":"ruijietay"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":121,"author":{"gitId":"ruijietay"},"content":"            throw new InvalidTimeException(\"Oops! You have entered an invalid time. Please try again.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":122,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":123,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":124,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":125,"author":{"gitId":"ruijietay"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"ruijietay":125}},{"path":"src/main/java/capone/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"package capone;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"import capone.exceptions.TaskListCorruptedException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"ruijietay"},"content":"import capone.tasks.Deadline;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"import capone.tasks.Event;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"import capone.tasks.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"import capone.tasks.ToDo;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"ruijietay"},"content":"import org.json.JSONArray;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"ruijietay"},"content":"import org.json.JSONException;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":"import org.json.JSONObject;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":"import java.io.File;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"ruijietay"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"ruijietay"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"ruijietay"},"content":"public class Storage {","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"ruijietay"},"content":"    private final String JSON_FILENAME;","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"    private final String JSON_FILEPATH;","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"    public Storage(String path, String name) {","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"ruijietay"},"content":"        this.JSON_FILEPATH \u003d path;","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"ruijietay"},"content":"        this.JSON_FILENAME \u003d name;","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"ruijietay"},"content":"    private String getFullPath() {","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"ruijietay"},"content":"        return this.JSON_FILEPATH + this.JSON_FILENAME;","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"ruijietay"},"content":"    private String getFileName() {","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"ruijietay"},"content":"        return this.JSON_FILENAME;","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"ruijietay"},"content":"    private String getFilePath() {","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"ruijietay"},"content":"        return this.JSON_FILEPATH;","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"ruijietay"},"content":"    public void writeTasksToJsonFile(TaskList taskList) {","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"ruijietay"},"content":"        JSONArray jsonArray \u003d new JSONArray();","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"ruijietay"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"ruijietay"},"content":"            JSONObject jsonTask \u003d new JSONObject();","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"ruijietay"},"content":"            jsonTask.put(\"taskType\", task.getTaskType());","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"ruijietay"},"content":"            jsonTask.put(\"description\", task.getDescription());","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"ruijietay"},"content":"            jsonTask.put(\"status\", task.getStatus());","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"ruijietay"},"content":"            // Add type-specific information for capone.tasks.Deadline and capone.tasks.Event tasks","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"ruijietay"},"content":"            if (task instanceof Deadline) {","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"ruijietay"},"content":"                jsonTask.put(\"deadline\", ((Deadline) task).getDeadline());","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"ruijietay"},"content":"            } else if (task instanceof Event) {","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"ruijietay"},"content":"                jsonTask.put(\"fromDate\", ((Event) task).getFromDateTime());","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"ruijietay"},"content":"                jsonTask.put(\"toDate\", ((Event) task).getToDateTime());","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"ruijietay"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"ruijietay"},"content":"            jsonArray.put(jsonTask);","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"ruijietay"},"content":"        try (FileWriter fileWriter \u003d new FileWriter(this.getFullPath())) {","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"ruijietay"},"content":"            jsonArray.write(fileWriter);","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"ruijietay"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"ruijietay"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"ruijietay"},"content":"    public void readTasksFromJsonFile(TaskList taskList) throws TaskListCorruptedException {","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"ruijietay"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"ruijietay"},"content":"            this.initFileIfNotExist();","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"ruijietay"},"content":"            String jsonContent \u003d new String(Files.readAllBytes(Paths.get(this.getFullPath())));","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"ruijietay"},"content":"            JSONArray jsonArray \u003d new JSONArray(jsonContent);","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"ruijietay"},"content":"            for (int i \u003d 0; i \u003c jsonArray.length(); i++) {","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"ruijietay"},"content":"                JSONObject jsonTask \u003d jsonArray.getJSONObject(i);","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"ruijietay"},"content":"                String type \u003d jsonTask.getString(\"taskType\");","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"ruijietay"},"content":"                String description \u003d jsonTask.getString(\"description\");","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"ruijietay"},"content":"                boolean status \u003d jsonTask.getBoolean(\"status\");","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"ruijietay"},"content":"                switch (type) {","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"ruijietay"},"content":"                    case \"todo\":","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"ruijietay"},"content":"                        taskList.addTask(new ToDo(description, status));","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"ruijietay"},"content":"                        break;","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"ruijietay"},"content":"                    case \"deadline\":","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"ruijietay"},"content":"                        String deadline \u003d jsonTask.getString(\"deadline\");","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"ruijietay"},"content":"                        taskList.addTask(new Deadline(description, status, deadline));","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"ruijietay"},"content":"                        break;","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"ruijietay"},"content":"                    case \"event\":","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"ruijietay"},"content":"                        String fromDate \u003d jsonTask.getString(\"fromDate\");","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"ruijietay"},"content":"                        String toDate \u003d jsonTask.getString(\"toDate\");","lastModifiedDate":"2024-01-31"},{"lineNumber":91,"author":{"gitId":"ruijietay"},"content":"                        taskList.addTask(new Event(description, status, fromDate, toDate));","lastModifiedDate":"2024-01-31"},{"lineNumber":92,"author":{"gitId":"ruijietay"},"content":"                        break;","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"ruijietay"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"ruijietay"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":95,"author":{"gitId":"ruijietay"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"ruijietay"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"ruijietay"},"content":"        } catch (JSONException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":98,"author":{"gitId":"ruijietay"},"content":"            initFileIfNotExist();","lastModifiedDate":"2024-01-31"},{"lineNumber":99,"author":{"gitId":"ruijietay"},"content":"            throw new TaskListCorruptedException(\"capone.tasks.Task list file is corrupted.\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"ruijietay"},"content":"                    \" Creating new task list file.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":101,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":102,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":103,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":104,"author":{"gitId":"ruijietay"},"content":"    public void initFileIfNotExist() {","lastModifiedDate":"2024-01-31"},{"lineNumber":105,"author":{"gitId":"ruijietay"},"content":"        // Create the folder if it doesn\u0027t exist","lastModifiedDate":"2024-01-31"},{"lineNumber":106,"author":{"gitId":"ruijietay"},"content":"        File folder \u003d new File(this.getFilePath());","lastModifiedDate":"2024-01-31"},{"lineNumber":107,"author":{"gitId":"ruijietay"},"content":"        if (!folder.exists()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":108,"author":{"gitId":"ruijietay"},"content":"            folder.mkdir();","lastModifiedDate":"2024-01-31"},{"lineNumber":109,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":110,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":111,"author":{"gitId":"ruijietay"},"content":"        // Create the file within the folder","lastModifiedDate":"2024-01-31"},{"lineNumber":112,"author":{"gitId":"ruijietay"},"content":"        File file \u003d new File(folder, this.getFileName());","lastModifiedDate":"2024-01-31"},{"lineNumber":113,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":114,"author":{"gitId":"ruijietay"},"content":"        if (!file.exists()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":115,"author":{"gitId":"ruijietay"},"content":"            try (FileWriter fileWriter \u003d new FileWriter(file)) {","lastModifiedDate":"2024-01-31"},{"lineNumber":116,"author":{"gitId":"ruijietay"},"content":"                fileWriter.write(\"[]\");","lastModifiedDate":"2024-01-31"},{"lineNumber":117,"author":{"gitId":"ruijietay"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":118,"author":{"gitId":"ruijietay"},"content":"                e.printStackTrace();","lastModifiedDate":"2024-01-31"},{"lineNumber":119,"author":{"gitId":"ruijietay"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":120,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":121,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":122,"author":{"gitId":"ruijietay"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"ruijietay":122}},{"path":"src/main/java/capone/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"package capone;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"import capone.tasks.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"import java.util.Iterator;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"ruijietay"},"content":"public class TaskList implements Iterable\u003cTask\u003e{","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"ruijietay"},"content":"    private final ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":"    public TaskList() {","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":"        this.taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"ruijietay"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"ruijietay"},"content":"    public int getSize() {","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"        return this.taskList.size();","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"ruijietay"},"content":"    public Task getTask(int ndx) {","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"ruijietay"},"content":"        return this.taskList.get(ndx);","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"ruijietay"},"content":"    public Task getLastTask() {","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"ruijietay"},"content":"        return this.taskList.get(this.getSize()-1);","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"ruijietay"},"content":"    public Task removeTask(int ndx) {","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"ruijietay"},"content":"        return this.taskList.remove(ndx);","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"ruijietay"},"content":"    public boolean addTask(Task task) {","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"ruijietay"},"content":"        return this.taskList.add(task);","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"ruijietay"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"ruijietay"},"content":"    public Iterator\u003cTask\u003e iterator() {","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"ruijietay"},"content":"        return this.taskList.iterator();","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"ruijietay"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"ruijietay":44}},{"path":"src/main/java/capone/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"package capone;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"public class Ui {","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"ruijietay"},"content":"    public void printWelcomeMsg() {","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"ruijietay"},"content":"        String logo \u003d \"░█▀▀░█▀█░█▀█░█▀█░█▀█░█▀▀░\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":"                + \"░█░░░█▀█░█▀▀░█░█░█░█░█▀▀░\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":"                + \"░▀▀▀░▀░▀░▀░░░▀▀▀░▀░▀░▀▀▀░\";","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":"        System.out.printf(\"Hello! I\u0027m\\n%s\\nWhat can I do for you?\\n%n\", logo);","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"ruijietay"},"content":"    public void sendMessage(String string) {","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":"        System.out.printf(string);","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"ruijietay"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"ruijietay":18}},{"path":"src/main/java/capone/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"package capone.commands;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"import capone.exceptions.CaponeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"ruijietay"},"content":"import capone.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"import capone.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"import capone.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"ruijietay"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":"    private final Scanner scanner;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":"    public ByeCommand(Scanner scanner) {","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"ruijietay"},"content":"        this.scanner \u003d scanner;","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"ruijietay"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"ruijietay"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws CaponeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"ruijietay"},"content":"        ui.sendMessage(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"        scanner.close();","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"ruijietay"},"content":"        System.exit(0);","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"ruijietay"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"ruijietay":23}},{"path":"src/main/java/capone/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"package capone.commands;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"import capone.exceptions.CaponeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"ruijietay"},"content":"import capone.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"import capone.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"import capone.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"ruijietay"},"content":"public abstract class Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"ruijietay"},"content":"    public abstract void execute(TaskList taskList, Ui ui, Storage storage) throws CaponeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"ruijietay":11}},{"path":"src/main/java/capone/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"package capone.commands;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"import capone.*;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"ruijietay"},"content":"import capone.exceptions.CaponeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"import capone.exceptions.InsufficientArgumentException;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"import capone.tasks.Deadline;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"ruijietay"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"ruijietay"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"ruijietay"},"content":"    private final ArrayList\u003cString\u003e inputList;","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":"    public DeadlineCommand(ArrayList\u003cString\u003e inputList) {","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"ruijietay"},"content":"        this.inputList \u003d inputList;","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"ruijietay"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws CaponeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"        // If the inputList has only one string, throw error (insufficient args).","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"ruijietay"},"content":"        if (inputList.size() \u003d\u003d 1) {","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"ruijietay"},"content":"            throw new InsufficientArgumentException(\"Insufficient arguments!\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"ruijietay"},"content":"                    \"Usage: deadline [description] /by [date]\");","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"ruijietay"},"content":"        // Find the index of the /by command.","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"ruijietay"},"content":"        int byNdx \u003d inputList.indexOf(\"/by\");","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"ruijietay"},"content":"        // Catch potential errors from date entry.","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"ruijietay"},"content":"        if (byNdx \u003d\u003d inputList.size() - 1 || byNdx \u003d\u003d -1) {","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"ruijietay"},"content":"            throw new InsufficientArgumentException(\"Please enter a date for this deadline task!\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"ruijietay"},"content":"                    \"Usage: deadline [description] /by [date]\");","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"ruijietay"},"content":"        // Combine description of task into one string.","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"ruijietay"},"content":"        StringBuilder description \u003d new StringBuilder();","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"ruijietay"},"content":"        for (int i \u003d 1; i \u003c byNdx; i++) {","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"ruijietay"},"content":"            if (i \u003d\u003d byNdx - 1) {","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"ruijietay"},"content":"                description.append(inputList.get(i));","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"ruijietay"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"ruijietay"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"ruijietay"},"content":"            description.append(inputList.get(i)).append(\" \");","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"ruijietay"},"content":"        if (description.toString().equalsIgnoreCase(\"\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"ruijietay"},"content":"            throw new InsufficientArgumentException(\"Insufficient arguments!\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"ruijietay"},"content":"                    \"Usage: deadline [description] /by [date]\");","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"ruijietay"},"content":"        LocalDate date \u003d null;","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"ruijietay"},"content":"        LocalTime time \u003d null;","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"ruijietay"},"content":"        // Process input for the deadline (i.e. after the /by command).","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"ruijietay"},"content":"        StringBuilder byDate \u003d new StringBuilder();","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"ruijietay"},"content":"        for (int i \u003d byNdx + 1; i \u003c inputList.size(); i++) {","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"ruijietay"},"content":"            if (Parser.isDateFormat(inputList.get(i))) {","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"ruijietay"},"content":"                date \u003d Parser.parseDate(inputList.get(i));","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"ruijietay"},"content":"                continue;","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"ruijietay"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"ruijietay"},"content":"            if (Parser.isTimeFormat(inputList.get(i))) {","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"ruijietay"},"content":"                time \u003d Parser.parseTime(inputList.get(i));","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"ruijietay"},"content":"                continue;","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"ruijietay"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"ruijietay"},"content":"            // If this is the last word to be added.","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"ruijietay"},"content":"            if (i \u003d\u003d inputList.size() - 1) {","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"ruijietay"},"content":"                byDate.append(inputList.get(i));","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"ruijietay"},"content":"            } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"ruijietay"},"content":"                byDate.append(inputList.get(i)).append(\" \");","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"ruijietay"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"ruijietay"},"content":"        LocalDateTime deadlineDateTime \u003d Parser.processDateTime(date, time);","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"ruijietay"},"content":"        if (deadlineDateTime !\u003d null) {","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"ruijietay"},"content":"            taskList.addTask(new Deadline(description.toString(), false, deadlineDateTime));","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"ruijietay"},"content":"        } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"ruijietay"},"content":"            taskList.addTask(new Deadline(description.toString(), false, byDate.toString()));","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"ruijietay"},"content":"        storage.writeTasksToJsonFile(taskList);","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"ruijietay"},"content":"        ui.sendMessage(String.format(\"Got it. I\u0027ve added this task:\\n%s\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"ruijietay"},"content":"                \"Now you have %d task(s) in the list.\\n\", taskList.getLastTask().toString(), taskList.getSize()));","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"ruijietay"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"ruijietay":89}},{"path":"src/main/java/capone/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"package capone.commands;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"import capone.exceptions.CaponeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"ruijietay"},"content":"import capone.tasks.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"import capone.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"import capone.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"import capone.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"ruijietay"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":"    private final ArrayList\u003cString\u003e inputList;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"ruijietay"},"content":"    public DeleteCommand(ArrayList\u003cString\u003e inputList) {","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"ruijietay"},"content":"        this.inputList \u003d inputList;","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"ruijietay"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"ruijietay"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws CaponeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"        // If the inputList has more than two arguments, throw exception.","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"ruijietay"},"content":"        if (inputList.size() \u003d\u003d 1) {","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"            throw new CaponeException(\"Please enter an index of a task you\u0027d like to delete.\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"ruijietay"},"content":"                    \"You can view all tasks using the \u0027list\u0027 command.\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"ruijietay"},"content":"                    \"Usage: delete [index]\");","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"ruijietay"},"content":"        } else if (inputList.size() \u003e 2) {","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"ruijietay"},"content":"            throw new CaponeException(\"Please enter only one index you would like to delete.\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"ruijietay"},"content":"                    \"You can view all tasks using the \u0027list\u0027 command.\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"ruijietay"},"content":"                    \"Usage: delete [index]\");","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"ruijietay"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"ruijietay"},"content":"            // Remove the task from the tasks Arraylist.","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"ruijietay"},"content":"            Task removedTask \u003d taskList.removeTask(Integer.parseInt(inputList.get(1))-1);","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"ruijietay"},"content":"            storage.writeTasksToJsonFile(taskList);","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"ruijietay"},"content":"            ui.sendMessage(String.format(\"Noted. I\u0027ve removed this task:\\n%s\\nNow you have %d tasks in the list.\\n\",","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"ruijietay"},"content":"                    removedTask.toString(), taskList.getSize()));","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"ruijietay"},"content":"        } catch (IndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"ruijietay"},"content":"            throw new CaponeException(\"Sorry, you have entered an invalid index.\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"ruijietay"},"content":"                    \"You can check the list of valid indices using the \u0027list\u0027 command.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"ruijietay"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"ruijietay":48}},{"path":"src/main/java/capone/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"package capone.commands;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"import capone.*;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"ruijietay"},"content":"import capone.exceptions.CaponeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"import capone.tasks.Event;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"ruijietay"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"ruijietay"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":"    private final ArrayList\u003cString\u003e inputList;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"ruijietay"},"content":"    public EventCommand(ArrayList\u003cString\u003e inputList) {","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":"        this.inputList \u003d inputList;","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"ruijietay"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws CaponeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"ruijietay"},"content":"        // If the inputList has only one string, throw error (insufficient args).","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"        if (inputList.size() \u003d\u003d 1) {","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"ruijietay"},"content":"            throw new CaponeException(\"Insufficient arguments!\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"ruijietay"},"content":"                    \"Usage: event [description] /from [date] /to [date]\");","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"ruijietay"},"content":"        int fromNdx \u003d inputList.indexOf(\"/from\");","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"ruijietay"},"content":"        int toNdx \u003d inputList.indexOf(\"/to\");","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"ruijietay"},"content":"        // If /to is specified before /from, throw error.","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"ruijietay"},"content":"        if (toNdx \u003c fromNdx) {","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"ruijietay"},"content":"            throw new CaponeException(\"Please input from date followed by to date!\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"ruijietay"},"content":"                    \"Usage: event [description] /from [date] /to [date]\");","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"ruijietay"},"content":"        // Catch potential errors from date entry.","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"ruijietay"},"content":"        if (fromNdx \u003d\u003d -1 || toNdx \u003d\u003d -1 || toNdx - fromNdx \u003d\u003d 1 || fromNdx - toNdx \u003d\u003d 1 ||","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"ruijietay"},"content":"                fromNdx \u003d\u003d inputList.size() - 1 || toNdx \u003d\u003d inputList.size() - 1) {","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"ruijietay"},"content":"            throw new CaponeException(\"Please enter a start and end date!\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"ruijietay"},"content":"                    \"Usage: event [description] /from [date] /to [date]\");","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"ruijietay"},"content":"        // Combine the task description into a single string.","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"ruijietay"},"content":"        StringBuilder description \u003d new StringBuilder();","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"ruijietay"},"content":"        for (int i \u003d 1; i \u003c fromNdx; i++) {","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"ruijietay"},"content":"            if (i \u003d\u003d fromNdx - 1) {","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"ruijietay"},"content":"                description.append(inputList.get(i));","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"ruijietay"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"ruijietay"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"ruijietay"},"content":"            description.append(inputList.get(i)).append(\" \");","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"ruijietay"},"content":"        if (description.toString().equalsIgnoreCase(\"\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"ruijietay"},"content":"            throw new CaponeException(\"Insufficient arguments!\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"ruijietay"},"content":"                    \"Usage: event [description] /from [date] /to [date]\");","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"ruijietay"},"content":"        LocalDate fromDate \u003d null;","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"ruijietay"},"content":"        LocalTime fromTime \u003d null;","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"ruijietay"},"content":"        // Process input for the deadline (i.e. after the /by command).","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"ruijietay"},"content":"        StringBuilder fromDateString \u003d new StringBuilder();","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"ruijietay"},"content":"        for (int i \u003d fromNdx + 1; i \u003c toNdx; i++) {","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"ruijietay"},"content":"            if (Parser.isDateFormat(inputList.get(i))) {","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"ruijietay"},"content":"                fromDate \u003d Parser.parseDate(inputList.get(i));","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"ruijietay"},"content":"                continue;","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"ruijietay"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"ruijietay"},"content":"            if (Parser.isTimeFormat(inputList.get(i))) {","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"ruijietay"},"content":"                fromTime \u003d Parser.parseTime(inputList.get(i));","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"ruijietay"},"content":"                continue;","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"ruijietay"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"ruijietay"},"content":"            // If this is the last word to be added.","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"ruijietay"},"content":"            if (i \u003d\u003d inputList.size() - 1) {","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"ruijietay"},"content":"                fromDateString.append(inputList.get(i));","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"ruijietay"},"content":"            } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"ruijietay"},"content":"                fromDateString.append(inputList.get(i)).append(\" \");","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"ruijietay"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"ruijietay"},"content":"        LocalDate toDate \u003d null;","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"ruijietay"},"content":"        LocalTime toTime \u003d null;","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"ruijietay"},"content":"        // Process input for the deadline (i.e. after the /by command).","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"ruijietay"},"content":"        StringBuilder toDateString \u003d new StringBuilder();","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"ruijietay"},"content":"        for (int i \u003d toNdx + 1; i \u003c inputList.size(); i++) {","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"ruijietay"},"content":"            if (Parser.isDateFormat(inputList.get(i))) {","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"ruijietay"},"content":"                toDate \u003d Parser.parseDate(inputList.get(i));","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"ruijietay"},"content":"                continue;","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"ruijietay"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":91,"author":{"gitId":"ruijietay"},"content":"            if (Parser.isTimeFormat(inputList.get(i))) {","lastModifiedDate":"2024-01-31"},{"lineNumber":92,"author":{"gitId":"ruijietay"},"content":"                toTime \u003d Parser.parseTime(inputList.get(i));","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"ruijietay"},"content":"                continue;","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"ruijietay"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":95,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"ruijietay"},"content":"            // If this is the last word to be added.","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"ruijietay"},"content":"            if (i \u003d\u003d inputList.size() - 1) {","lastModifiedDate":"2024-01-31"},{"lineNumber":98,"author":{"gitId":"ruijietay"},"content":"                toDateString.append(inputList.get(i));","lastModifiedDate":"2024-01-31"},{"lineNumber":99,"author":{"gitId":"ruijietay"},"content":"            } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"ruijietay"},"content":"                toDateString.append(inputList.get(i)).append(\" \");","lastModifiedDate":"2024-01-31"},{"lineNumber":101,"author":{"gitId":"ruijietay"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":102,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":103,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":104,"author":{"gitId":"ruijietay"},"content":"        LocalDateTime fromDateTime \u003d Parser.processDateTime(fromDate, fromTime);","lastModifiedDate":"2024-01-31"},{"lineNumber":105,"author":{"gitId":"ruijietay"},"content":"        LocalDateTime toDateTime \u003d Parser.processDateTime(toDate, toTime);","lastModifiedDate":"2024-01-31"},{"lineNumber":106,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":107,"author":{"gitId":"ruijietay"},"content":"        if (fromDateTime !\u003d null \u0026\u0026 toDateTime !\u003d null) {","lastModifiedDate":"2024-01-31"},{"lineNumber":108,"author":{"gitId":"ruijietay"},"content":"            taskList.addTask(new Event(description.toString(), false, fromDateTime, toDateTime));","lastModifiedDate":"2024-01-31"},{"lineNumber":109,"author":{"gitId":"ruijietay"},"content":"        } else if (fromDateTime !\u003d null || toDateTime !\u003d null) {","lastModifiedDate":"2024-01-31"},{"lineNumber":110,"author":{"gitId":"ruijietay"},"content":"            // If either fromDateTime or toDateTime is null but the other is not.","lastModifiedDate":"2024-01-31"},{"lineNumber":111,"author":{"gitId":"ruijietay"},"content":"            throw new CaponeException(\"Oops! It seems like there is a format mismatch between\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":112,"author":{"gitId":"ruijietay"},"content":"                    \"your start and dates and end dates.\\nMake sure you enter both of them in the accepted \" +","lastModifiedDate":"2024-01-31"},{"lineNumber":113,"author":{"gitId":"ruijietay"},"content":"                    \"date format!\\nAlternatively, you can specify a string for both your start and end dates.\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":114,"author":{"gitId":"ruijietay"},"content":"                    \"Use the \u0027help\u0027 command for more information.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":115,"author":{"gitId":"ruijietay"},"content":"        } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":116,"author":{"gitId":"ruijietay"},"content":"            taskList.addTask(new Event(description.toString(), false,","lastModifiedDate":"2024-01-31"},{"lineNumber":117,"author":{"gitId":"ruijietay"},"content":"                    fromDateString.toString(), toDateString.toString()));","lastModifiedDate":"2024-01-31"},{"lineNumber":118,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":119,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":120,"author":{"gitId":"ruijietay"},"content":"        storage.writeTasksToJsonFile(taskList);","lastModifiedDate":"2024-01-31"},{"lineNumber":121,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":122,"author":{"gitId":"ruijietay"},"content":"        ui.sendMessage(String.format(\"Got it. I\u0027ve added this task:\\n%s\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":123,"author":{"gitId":"ruijietay"},"content":"                \"Now you have %d task(s) in the list.\\n\", taskList.getLastTask().toString(), taskList.getSize()));","lastModifiedDate":"2024-01-31"},{"lineNumber":124,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":125,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":126,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":127,"author":{"gitId":"ruijietay"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"ruijietay":127}},{"path":"src/main/java/capone/commands/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"package capone.commands;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"import capone.exceptions.CaponeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"ruijietay"},"content":"import capone.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"import capone.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"import capone.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"ruijietay"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"ruijietay"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws CaponeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":"        ui.sendMessage(\"Commands I understand:\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":"                \"1. list - Lists the tasks entered.\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":"                \"2. todo [description] - Creates a new capone.tasks.ToDo task. Remember to enter the description!\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"ruijietay"},"content":"                \"3. deadline [description] /by [date] - Creates a new capone.tasks.Deadline task.\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"ruijietay"},"content":"                \"   Remember to enter the description and date!\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":"                \"   Dates are recognised in the following format - \u0027yyyy-mm-dd HHmm\u0027 (24-hour).\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"ruijietay"},"content":"                \"4. event [description] /from [date] /to [date] - Creates a new capone.tasks.Event task.\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"ruijietay"},"content":"                \"   Remember to enter the description, as well as the start and end date!\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"ruijietay"},"content":"                \"   Dates are recognised in the following format - \u0027yyyy-mm-dd HHmm\u0027 (24-hour).\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"                \"5. mark [index] - Marks a task as completed. Use this in conjunction with the \u0027list\u0027 command!\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"ruijietay"},"content":"                \"6. unmark [index] - Unmarks a task. Use this in conjunction with the \u0027list\u0027 command!\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"                \"7. delete [index] - Deletes a task. Use this in conjunction with the \u0027list\u0027 command!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"ruijietay"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"ruijietay":24}},{"path":"src/main/java/capone/commands/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"package capone.commands;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"import capone.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"ruijietay"},"content":"import capone.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"import capone.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"import capone.exceptions.InvalidCommandException;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"ruijietay"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"ruijietay"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws InvalidCommandException {","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":"        throw new InvalidCommandException(\"I\u0027m sorry, I don\u0027t understand what you just said.\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":"                \"Use \u0027help\u0027 to display the list of valid commands\");","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"ruijietay"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"ruijietay":14}},{"path":"src/main/java/capone/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"package capone.commands;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"import capone.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"ruijietay"},"content":"import capone.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"import capone.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"public class ListCommand extends Command{","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"ruijietay"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"ruijietay"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":"        for (int i \u003d 0; i \u003c taskList.getSize(); i++) {","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":"            ui.sendMessage(String.format(\"%d. %s\\n\", i+1, taskList.getTask(i).toString()));","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"ruijietay"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"ruijietay":14}},{"path":"src/main/java/capone/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"package capone.commands;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"import capone.*;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"ruijietay"},"content":"import capone.exceptions.CaponeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"import capone.tasks.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"ruijietay"},"content":"public class MarkCommand extends Command{","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":"    private final ArrayList\u003cString\u003e inputList;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":"    public MarkCommand(ArrayList\u003cString\u003e inputList) {","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":"        this.inputList \u003d inputList;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"ruijietay"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws CaponeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"ruijietay"},"content":"        if (inputList.size() \u003d\u003d 1) {","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"ruijietay"},"content":"            throw new CaponeException(\"Please enter an index of a task you\u0027d like to mark.\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"                    \"You can view all tasks using the \u0027list\u0027 command.\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"ruijietay"},"content":"                    \"Usage: mark [index]\");","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"        } else if (inputList.size() \u003e 2) {","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"ruijietay"},"content":"            throw new CaponeException(\"Please enter only one index you would like to mark.\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"ruijietay"},"content":"                    \"You can view all tasks using the \u0027list\u0027 command.\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"ruijietay"},"content":"                    \"Usage: mark [index]\");","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"ruijietay"},"content":"        // Mark task as done.","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"ruijietay"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"ruijietay"},"content":"            Task markedTask \u003d taskList.getTask(Integer.parseInt(inputList.get(1))-1);","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"ruijietay"},"content":"            markedTask.markTask();","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"ruijietay"},"content":"            storage.writeTasksToJsonFile(taskList);","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"ruijietay"},"content":"            // Inform user that task has been marked.","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"ruijietay"},"content":"            ui.sendMessage(\"Nice! I\u0027ve marked this task as done:\\n\" + markedTask);","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"ruijietay"},"content":"        } catch (IndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"ruijietay"},"content":"            throw new CaponeException(\"Sorry, you have entered an invalid index.\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"ruijietay"},"content":"                    \"You can check the list of valid indices using the \u0027list\u0027 command.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"ruijietay"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"ruijietay":41}},{"path":"src/main/java/capone/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"package capone.commands;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"import capone.*;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"ruijietay"},"content":"import capone.exceptions.CaponeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"import capone.tasks.ToDo;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"ruijietay"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":"    private final ArrayList\u003cString\u003e inputList;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":"    public TodoCommand(ArrayList\u003cString\u003e inputList) {","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":"        this.inputList \u003d inputList;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"ruijietay"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws CaponeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"ruijietay"},"content":"        // If the inputList has only one string, throw error (insufficient args).","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"ruijietay"},"content":"        if (inputList.size() \u003d\u003d 1) {","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"            throw new CaponeException(\"Please enter a description for this capone.tasks.ToDo task!\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"ruijietay"},"content":"                    \"Usage: todo [description]\");","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"ruijietay"},"content":"        // Combine the remaining words into a single string","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"ruijietay"},"content":"        StringBuilder description \u003d new StringBuilder();","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"ruijietay"},"content":"        for (int i \u003d 1; i \u003c inputList.size(); i++) {","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"ruijietay"},"content":"            if (i \u003d\u003d inputList.size() - 1) {","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"ruijietay"},"content":"                description.append(inputList.get(i));","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"ruijietay"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"ruijietay"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"ruijietay"},"content":"            description.append(inputList.get(i)).append(\" \");","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"ruijietay"},"content":"        ToDo newTodo \u003d new ToDo(description.toString(), false);","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"ruijietay"},"content":"        taskList.addTask(newTodo);","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"ruijietay"},"content":"        storage.writeTasksToJsonFile(taskList);","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"ruijietay"},"content":"        ui.sendMessage(String.format(\"Got it. I\u0027ve added this task:\\n%s\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"ruijietay"},"content":"                \"Now you have %d task(s) in the list.\\n\", newTodo.toString(), taskList.getSize()));","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"ruijietay"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"ruijietay":41}},{"path":"src/main/java/capone/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"package capone.commands;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"import capone.*;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"ruijietay"},"content":"import capone.exceptions.CaponeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"import capone.tasks.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"ruijietay"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":"    private final ArrayList\u003cString\u003e inputList;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":"    public UnmarkCommand(ArrayList\u003cString\u003e inputList) {","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":"        this.inputList \u003d inputList;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"ruijietay"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws CaponeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"ruijietay"},"content":"        if (inputList.size() \u003d\u003d 1) {","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"ruijietay"},"content":"            throw new CaponeException(\"Please enter an index of a task you\u0027d like to unmark.\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"                    \"You can view all tasks using the \u0027list\u0027 command.\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"ruijietay"},"content":"                    \"Usage: unmark [index]\");","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"        } else if (inputList.size() \u003e 2) {","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"ruijietay"},"content":"            throw new CaponeException(\"Please enter only one index you would like to unmark.\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"ruijietay"},"content":"                    \"You can view all tasks using the \u0027list\u0027 command.\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"ruijietay"},"content":"                    \"Usage: unmark [index]\");","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"ruijietay"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"ruijietay"},"content":"            Task unmarkedTask \u003d taskList.getTask(Integer.parseInt(inputList.get(1))-1);","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"ruijietay"},"content":"            unmarkedTask.unmarkTask();","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"ruijietay"},"content":"            storage.writeTasksToJsonFile(taskList);","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"ruijietay"},"content":"            // Inform user that task has been marked.","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"ruijietay"},"content":"            ui.sendMessage(\"OK, I\u0027ve marked this task as not done yet:\\n\" + unmarkedTask);","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"ruijietay"},"content":"        } catch (IndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"ruijietay"},"content":"            throw new CaponeException(\"Sorry, you have entered an invalid index.\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"ruijietay"},"content":"                    \"You can check the list of valid indices using the \u0027list\u0027 command.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"ruijietay"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"ruijietay":40}},{"path":"src/main/java/capone/exceptions/CaponeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"package capone.exceptions;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"public class CaponeException extends Exception {","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"ruijietay"},"content":"    public CaponeException(String e) {","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"        super(e);","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"ruijietay":7}},{"path":"src/main/java/capone/exceptions/InsufficientArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"package capone.exceptions;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"public class InsufficientArgumentException extends CaponeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"ruijietay"},"content":"    public InsufficientArgumentException(String e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"        super(e);","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"ruijietay":7}},{"path":"src/main/java/capone/exceptions/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"package capone.exceptions;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"public class InvalidCommandException extends CaponeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"ruijietay"},"content":"    public InvalidCommandException(String e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"        super(e);","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"ruijietay":7}},{"path":"src/main/java/capone/exceptions/InvalidDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"package capone.exceptions;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"public class InvalidDateException extends CaponeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"ruijietay"},"content":"    public InvalidDateException(String e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"        super(e);","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"ruijietay":7}},{"path":"src/main/java/capone/exceptions/InvalidTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"package capone.exceptions;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"public class InvalidTimeException extends CaponeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"ruijietay"},"content":"    public InvalidTimeException(String e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"        super(e);","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"ruijietay":7}},{"path":"src/main/java/capone/exceptions/TaskListCorruptedException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"package capone.exceptions;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"import capone.Capone;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"public class TaskListCorruptedException extends CaponeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"    public TaskListCorruptedException(String e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"        super(e);","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"ruijietay"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"ruijietay":9}},{"path":"src/main/java/capone/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"package capone.tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"ruijietay"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"    private String deadlineString;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"ruijietay"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":"    public Deadline(String description, boolean status, String deadline) {","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":"        super(TaskType.DEADLINE, description, status);","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":"        this.deadlineString \u003d deadline;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"ruijietay"},"content":"    public Deadline(String description, boolean status, LocalDateTime deadline) {","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":"        super(TaskType.DEADLINE, description, status);","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"ruijietay"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"    public String getDeadline() {","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"ruijietay"},"content":"        if (this.deadline !\u003d null) {","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"            return this.deadline.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"));","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"ruijietay"},"content":"        return this.deadlineString;","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"ruijietay"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"ruijietay"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"ruijietay"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.getDeadline() + \")\";","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"ruijietay"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"ruijietay":30}},{"path":"src/main/java/capone/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"package capone.tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"ruijietay"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"ruijietay"},"content":"    protected String fromDateTimeString;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"ruijietay"},"content":"    protected  String toDateTimeString;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":"    private LocalDateTime fromDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":"    private LocalDateTime toDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"ruijietay"},"content":"    public Event(String description, boolean status, String fromDate, String toDate) {","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":"        super(TaskType.EVENT, description, status);","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"ruijietay"},"content":"        this.fromDateTimeString \u003d fromDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"ruijietay"},"content":"        this.toDateTimeString \u003d toDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"ruijietay"},"content":"    public Event(String description, boolean status, LocalDateTime fromDate, LocalDateTime toDate) {","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"        super(TaskType.EVENT, description, status);","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"ruijietay"},"content":"        this.fromDateTime \u003d fromDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"ruijietay"},"content":"        this.toDateTime \u003d toDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"ruijietay"},"content":"    public String getFromDateTime() {","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"ruijietay"},"content":"        if (this.fromDateTime !\u003d null) {","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"ruijietay"},"content":"            return this.fromDateTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"));","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"ruijietay"},"content":"        return this.fromDateTimeString;","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"ruijietay"},"content":"    public String getToDateTime() {","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"ruijietay"},"content":"        if (this.toDateTime !\u003d null) {","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"ruijietay"},"content":"            return this.toDateTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"));","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"ruijietay"},"content":"        return this.toDateTimeString;","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"ruijietay"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":42,"author":{"gitId":"ruijietay"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":43,"author":{"gitId":"ruijietay"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.getFromDateTime() +","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"ruijietay"},"content":"                \" to: \" + this.getToDateTime() +\")\";","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":46,"author":{"gitId":"ruijietay"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"ruijietay":46}},{"path":"src/main/java/capone/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"package capone.tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"public abstract class Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"ruijietay"},"content":"    protected enum TaskType {","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"        TODO(\"todo\"), DEADLINE(\"deadline\"), EVENT(\"event\");","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"        private String taskName;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"ruijietay"},"content":"        TaskType(String name) {","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":"            this.taskName \u003d name;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":"        @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"ruijietay"},"content":"        public String toString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"ruijietay"},"content":"            return this.taskName;","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"ruijietay"},"content":"    protected  TaskType taskType;","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"ruijietay"},"content":"    protected String description;","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"    public Task(TaskType type, String description, boolean status) {","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"ruijietay"},"content":"        this.taskType \u003d type;","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"ruijietay"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"ruijietay"},"content":"        this.isDone \u003d status;","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"ruijietay"},"content":"    public String getTaskType() {","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"ruijietay"},"content":"        return this.taskType.toString();","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"ruijietay"},"content":"    public String getDescription() {","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"ruijietay"},"content":"        return this.description;","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"ruijietay"},"content":"    public Boolean getStatus() {","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"ruijietay"},"content":"        return this.isDone;","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":39,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":40,"author":{"gitId":"ruijietay"},"content":"    public void markTask() {","lastModifiedDate":"2024-01-24"},{"lineNumber":41,"author":{"gitId":"ruijietay"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-24"},{"lineNumber":42,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":43,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":44,"author":{"gitId":"ruijietay"},"content":"    public void unmarkTask() {","lastModifiedDate":"2024-01-24"},{"lineNumber":45,"author":{"gitId":"ruijietay"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":46,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":47,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":48,"author":{"gitId":"ruijietay"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"ruijietay"},"content":"        return (this.isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"ruijietay"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":53,"author":{"gitId":"ruijietay"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":54,"author":{"gitId":"ruijietay"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2024-01-24"},{"lineNumber":55,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":56,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":57,"author":{"gitId":"ruijietay"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"ruijietay":57}},{"path":"src/main/java/capone/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"package capone.tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"    public ToDo(String description, boolean status) {","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"        super(TaskType.TODO, description, status);","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"ruijietay"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"ruijietay":13}},{"path":"src/test/java/capone/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"package capone;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"import capone.exceptions.InvalidDateException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"ruijietay"},"content":"import capone.exceptions.InvalidTimeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"ruijietay"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":"public class ParserTest {","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"ruijietay"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"ruijietay"},"content":"    public void parseDate_invalidDate1_exceptionThrown(){","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":"        assertThrows(InvalidDateException.class, () -\u003e {","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"ruijietay"},"content":"            Parser.parseDate(\"this is not a valid date\");","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"ruijietay"},"content":"        });","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"ruijietay"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"    public void parseDate_invalidDate2_exceptionThrown(){","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"ruijietay"},"content":"        assertThrows(InvalidDateException.class, () -\u003e {","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"ruijietay"},"content":"            Parser.parseDate(\"2023-2-2\");","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"ruijietay"},"content":"        });","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"ruijietay"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"ruijietay"},"content":"    public void parseDate_validDatesuccess() throws InvalidDateException {","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"ruijietay"},"content":"        LocalDate expectedDate \u003d LocalDate.of(2001,9,26);","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"ruijietay"},"content":"        LocalDate actualDate \u003d Parser.parseDate(\"2001-09-26\");","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"ruijietay"},"content":"        assertEquals(expectedDate, actualDate);","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"ruijietay"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"ruijietay"},"content":"    public void parseTime_invalidTime1_exceptionThrown(){","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"ruijietay"},"content":"        assertThrows(InvalidTimeException.class, () -\u003e {","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"ruijietay"},"content":"            Parser.parseTime(\"this is not a valid time\");","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"ruijietay"},"content":"        });","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"ruijietay"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"ruijietay"},"content":"    public void parseTime_invalidTime2_exceptionThrown(){","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"ruijietay"},"content":"        assertThrows(InvalidTimeException.class, () -\u003e {","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"ruijietay"},"content":"            Parser.parseTime(\"2395\");","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"ruijietay"},"content":"        });","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"ruijietay"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"ruijietay"},"content":"    public void parseTime_validTime_success() throws InvalidTimeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"ruijietay"},"content":"        LocalTime expectedTime \u003d LocalTime.of(23,59);","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"ruijietay"},"content":"        LocalTime actualTime \u003d Parser.parseTime(\"2359\");","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"ruijietay"},"content":"        assertEquals(expectedTime, actualTime);","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"ruijietay"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"ruijietay":55}},{"path":"src/test/java/capone/commands/DeadlineCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"package capone.commands;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"import capone.Parser;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"ruijietay"},"content":"import capone.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"import capone.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"import capone.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"import capone.exceptions.CaponeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"ruijietay"},"content":"import capone.exceptions.InsufficientArgumentException;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"ruijietay"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"ruijietay"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"ruijietay"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"ruijietay"},"content":"public class DeadlineCommandTest {","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"ruijietay"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"    private Ui ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"ruijietay"},"content":"    private Storage storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"    private final ByteArrayOutputStream stdoutMsg \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"ruijietay"},"content":"    @BeforeEach","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"ruijietay"},"content":"    public void initializeComponents() {","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"ruijietay"},"content":"        this.storage \u003d new Storage(\"./data/\",\"test.json\");","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"ruijietay"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"ruijietay"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"ruijietay"},"content":"        System.setOut(new PrintStream(stdoutMsg));","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"ruijietay"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"ruijietay"},"content":"    public void execute_noDescription_exceptionThrown() {","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"ruijietay"},"content":"        Command c \u003d new DeadlineCommand(Parser.splitInput(\"deadline /by 2023-12-12 1800\"));","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"ruijietay"},"content":"        InsufficientArgumentException e \u003d assertThrows(InsufficientArgumentException.class, () -\u003e {","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"ruijietay"},"content":"            c.execute(this.taskList, this.ui, this.storage);","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"ruijietay"},"content":"        });","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"ruijietay"},"content":"        String expectedMsg \u003d \"Insufficient arguments!\\nUsage: deadline [description] /by [date]\";","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"ruijietay"},"content":"        assertEquals(expectedMsg, e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"ruijietay"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"ruijietay"},"content":"    public void execute_noDateTime_exceptionThrown() {","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"ruijietay"},"content":"        Command c \u003d new DeadlineCommand(Parser.splitInput(\"deadline do iP /by\"));","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"ruijietay"},"content":"        InsufficientArgumentException e \u003d assertThrows(InsufficientArgumentException.class, () -\u003e {","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"ruijietay"},"content":"            c.execute(this.taskList, this.ui, this.storage);","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"ruijietay"},"content":"        });","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"ruijietay"},"content":"        String expectedMsg \u003d \"Please enter a date for this deadline task!\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"ruijietay"},"content":"                \"Usage: deadline [description] /by [date]\";","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"ruijietay"},"content":"        assertEquals(expectedMsg, e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"ruijietay"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"ruijietay"},"content":"    public void execute_validInput_success() throws CaponeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"ruijietay"},"content":"        Command c \u003d new DeadlineCommand(Parser.splitInput(\"deadline clean room /by 2024-01-31 1800\"));","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"ruijietay"},"content":"        c.execute(this.taskList, this.ui, this.storage);","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"ruijietay"},"content":"        String expectedMsg \u003d String.format(\"Got it. I\u0027ve added this task:\\n%s\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"ruijietay"},"content":"                \"Now you have %d task(s) in the list.\\n\", taskList.getLastTask().toString(), taskList.getSize());","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"ruijietay"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"ruijietay"},"content":"        assertEquals(expectedMsg, stdoutMsg.toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"ruijietay"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"ruijietay"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"ruijietay":69}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ruijietay"},"content":"-h","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"ruijietay"},"content":"todo make cake","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"ruijietay"},"content":"todo","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"ruijietay"},"content":"thisisaninvalidinput","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"ruijietay"},"content":"deadline submit weekly report /by friday 26 Jan 2023","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"ruijietay"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"ruijietay"},"content":"mark 1","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"ruijietay"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"ruijietay"},"content":"unmark 1","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"ruijietay"},"content":"event party at home /from saturday, 27 jan 2023 /to 28 jan 2023, sunday","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"ruijietay"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"ruijietay"},"content":"mark 3","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"ruijietay"},"content":"mark 2","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"ruijietay"},"content":"delete asdf","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"ruijietay"},"content":"delete 333","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"ruijietay"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"ruijietay"},"content":"unmark 3","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"ruijietay"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"ruijietay"},"content":"delete 1","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"ruijietay"},"content":"deadline ps1 /by 2024-02-01 2359","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"ruijietay"},"content":"deadline ps2 /by 2024-02-01 9999","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"deadline ps1 /by 2069-02-01 2359","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"ruijietay"},"content":"event career fair /from 2024-02-05 1300 /to 2024-02-10 2200","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"ruijietay"},"content":"event career fair /from 2024-02-05 1300 /to thisisnotadate","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"ruijietay"},"content":"event career fair /from 2024-02-05 9999 /to 2024-02-10 2200","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"ruijietay"},"content":"bye","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"ruijietay":26}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"ruijietay"},"content":"REM run the program, feed capone.commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"ruijietay"},"content":"java -classpath ..\\bin Capone \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ruijietay":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"ruijietay"},"content":"# run the program, feed capone.commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"ruijietay"},"content":"java -classpath ../bin Capone \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"ruijietay"},"content":"#dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ruijietay":3,"-":35}}]
