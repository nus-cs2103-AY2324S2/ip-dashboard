[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"Colex2000"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"Colex2000"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"Colex2000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"Colex2000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"Colex2000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"Colex2000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"Colex2000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"Colex2000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"Colex2000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"Colex2000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"Colex2000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"Colex2000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"Colex2000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"Colex2000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    mainClass.set(\"seedu.duke.Duke\")","lastModifiedDate":"2024-02-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2024-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"Colex2000"},"content":"checkstyle {","lastModifiedDate":"2024-02-09"},{"lineNumber":57,"author":{"gitId":"Colex2000"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":58,"author":{"gitId":"Colex2000"},"content":"}","lastModifiedDate":"2024-02-09"},{"lineNumber":59,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Colex2000":20,"-":42}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"Colex2000"},"content":"        System.out.println(\"Hello Master, I\u0027m Demon ðŸ‘¿\\nWhat can I do for you today?\");","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"Colex2000"},"content":"        System.out.println(\"--------------------------------------------------------\");","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"Colex2000"},"content":"        System.out.println(\"Bye Master, hope you had a great time, see you â™¥!\");","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"Colex2000"},"content":"        System.out.println(\"--------------------------------------------------------\");","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Colex2000":4,"-":4}},{"path":"src/main/java/demon/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Colex2000"},"content":"package demon;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"Colex2000"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"Colex2000"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"Colex2000"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"Colex2000"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"Colex2000"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"Colex2000"},"content":" * This class serves as a central point for managing and executing a variety of user commands.","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"Colex2000"},"content":" * It encapsulates the logic for each command as individual methods, allowing for easy execution","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"Colex2000"},"content":" * based on user input. Command such as \u0027list\u0027, \u0027unmark\u0027, \u0027mark\u0027, \u0027delete\u0027, and others are supported, each","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"Colex2000"},"content":" * corresponding to a specific method within this class.","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"Colex2000"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"Colex2000"},"content":"public class Command {","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"Colex2000"},"content":"    Storage storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"Colex2000"},"content":"    private StringBuilder storeString \u003d new StringBuilder();","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"Colex2000"},"content":"    public Command(String filePath) {","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"Colex2000"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"Colex2000"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"Colex2000"},"content":"     * Prints out all tasks saved numbered in sequence.","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"Colex2000"},"content":"     * No tasks will be printed if there is no saved tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"Colex2000"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"Colex2000"},"content":"     * @param tasks an array containing all tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"Colex2000"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"Colex2000"},"content":"    public void list(TaskList tasks) {","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"Colex2000"},"content":"        this.storeString.append(\"List of things to do :\\n\");","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"Colex2000"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.getTaskList().size(); i++) {","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"Colex2000"},"content":"            Task item \u003d tasks.getTaskList().get(i - 1);","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"Colex2000"},"content":"            this.storeString.append(\"\\t\").append(i).append(\".\").append(item.toString()).append(\"\\n\");","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"Colex2000"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"Colex2000"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"Colex2000"},"content":"     * Marks the task in the list as \u0027not done\u0027 if the task was previously marked as done.","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"Colex2000"},"content":"     * If the task was marked as \u0027not done\u0027, then executing this method will not change anything.","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"Colex2000"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"Colex2000"},"content":"     * @param tasks an array containing all tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"Colex2000"},"content":"     * @param num array index of the task list","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"Colex2000"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"Colex2000"},"content":"    public void unmark(TaskList tasks, int num) {","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"Colex2000"},"content":"        if (num \u003c 1 | num \u003e tasks.getTaskList().size()) {","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"Colex2000"},"content":"            throw new IndexOutOfBoundsException(\"Integer provided out of range!\");","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"Colex2000"},"content":"        } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"Colex2000"},"content":"            Task item \u003d tasks.getTaskList().get(num-1);","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"Colex2000"},"content":"            if (item.getStatusIcon().equals(\"X\")) {","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"Colex2000"},"content":"                item.markNotDone();","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"Colex2000"},"content":"                storage.reWriteFile(num);","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"Colex2000"},"content":"                this.storeString.append(\"Sure Master, I\u0027ve marked this task as not done : \\n\");","lastModifiedDate":"2024-02-09"},{"lineNumber":51,"author":{"gitId":"Colex2000"},"content":"                this.storeString.append(item).append(\"\\n\");","lastModifiedDate":"2024-02-09"},{"lineNumber":52,"author":{"gitId":"Colex2000"},"content":"            } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"Colex2000"},"content":"                this.storeString.append(\"Oops! Task already NOT done!\");","lastModifiedDate":"2024-02-09"},{"lineNumber":54,"author":{"gitId":"Colex2000"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"Colex2000"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"Colex2000"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"Colex2000"},"content":"     * Marks the task in the list as \u0027done\u0027 if the task was previously marked as not done.","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"Colex2000"},"content":"     * If the task was marked as \u0027done\u0027, then executing this method will not change anything.","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"Colex2000"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"Colex2000"},"content":"     * @param tasks an array containing all tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"Colex2000"},"content":"     * @param num array index of the task list","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"Colex2000"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"Colex2000"},"content":"    public void mark(TaskList tasks, int num) {","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"Colex2000"},"content":"        if (num \u003c 1 | num \u003e tasks.getTaskList().size()) {","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"Colex2000"},"content":"            throw new IndexOutOfBoundsException(\"Integer provided out of range!\");","lastModifiedDate":"2024-02-09"},{"lineNumber":68,"author":{"gitId":"Colex2000"},"content":"        } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"Colex2000"},"content":"            Task item \u003d tasks.getTaskList().get(num-1);","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"Colex2000"},"content":"            if (item.getStatusIcon().equals(\" \")) {","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"Colex2000"},"content":"                item.markDone();","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"Colex2000"},"content":"                storage.reWriteFile(num);","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"Colex2000"},"content":"                this.storeString.append(\"Sure Master, I\u0027ve marked this task as done : \\n\");","lastModifiedDate":"2024-02-09"},{"lineNumber":74,"author":{"gitId":"Colex2000"},"content":"                this.storeString.append(item).append(\"\\n\");","lastModifiedDate":"2024-02-09"},{"lineNumber":75,"author":{"gitId":"Colex2000"},"content":"            } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"Colex2000"},"content":"                this.storeString.append(\"Oops! Task already done!\");","lastModifiedDate":"2024-02-09"},{"lineNumber":77,"author":{"gitId":"Colex2000"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"Colex2000"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"Colex2000"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":82,"author":{"gitId":"Colex2000"},"content":"     * Creates a Deadline object as a task and stores into the taskList array.","lastModifiedDate":"2024-02-04"},{"lineNumber":83,"author":{"gitId":"Colex2000"},"content":"     * Method takes in the tasks arraylist and a string.","lastModifiedDate":"2024-02-04"},{"lineNumber":84,"author":{"gitId":"Colex2000"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":85,"author":{"gitId":"Colex2000"},"content":"     * @param tasks an array containing all tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":86,"author":{"gitId":"Colex2000"},"content":"     * @param input String input by the user containing the description, date and time.","lastModifiedDate":"2024-02-04"},{"lineNumber":87,"author":{"gitId":"Colex2000"},"content":"     * @throws NoTimingException if date and time not given.","lastModifiedDate":"2024-02-04"},{"lineNumber":88,"author":{"gitId":"Colex2000"},"content":"     * @throws EmptyDescriptionException if description not given.","lastModifiedDate":"2024-02-04"},{"lineNumber":89,"author":{"gitId":"Colex2000"},"content":"     * @throws IOException if fails to write new task into file.","lastModifiedDate":"2024-02-04"},{"lineNumber":90,"author":{"gitId":"Colex2000"},"content":"     * @throws DateTimeParseException if date and time given is invalid.","lastModifiedDate":"2024-02-04"},{"lineNumber":91,"author":{"gitId":"Colex2000"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":92,"author":{"gitId":"Colex2000"},"content":"    public void addDeadline(TaskList tasks, String input)","lastModifiedDate":"2024-02-04"},{"lineNumber":93,"author":{"gitId":"Colex2000"},"content":"            throws NoTimingException,","lastModifiedDate":"2024-02-04"},{"lineNumber":94,"author":{"gitId":"Colex2000"},"content":"                   EmptyDescriptionException,","lastModifiedDate":"2024-02-04"},{"lineNumber":95,"author":{"gitId":"Colex2000"},"content":"                   IOException,","lastModifiedDate":"2024-02-04"},{"lineNumber":96,"author":{"gitId":"Colex2000"},"content":"                   DateTimeParseException {","lastModifiedDate":"2024-02-04"},{"lineNumber":97,"author":{"gitId":"Colex2000"},"content":"        String[] parts \u003d input.split(\" \",2);","lastModifiedDate":"2024-02-02"},{"lineNumber":98,"author":{"gitId":"Colex2000"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2024-02-02"},{"lineNumber":99,"author":{"gitId":"Colex2000"},"content":"            throw new EmptyDescriptionException(\"Description is EMPTY!\");","lastModifiedDate":"2024-02-02"},{"lineNumber":100,"author":{"gitId":"Colex2000"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":101,"author":{"gitId":"Colex2000"},"content":"        String deadline \u003d parts[1];","lastModifiedDate":"2024-02-02"},{"lineNumber":102,"author":{"gitId":"Colex2000"},"content":"        String[] parts2 \u003d deadline.split(\"/by\");","lastModifiedDate":"2024-02-02"},{"lineNumber":103,"author":{"gitId":"Colex2000"},"content":"        if (parts2.length \u003c 2) {","lastModifiedDate":"2024-02-02"},{"lineNumber":104,"author":{"gitId":"Colex2000"},"content":"            throw new NoTimingException(\"WOI! Please include deadline!\");","lastModifiedDate":"2024-02-02"},{"lineNumber":105,"author":{"gitId":"Colex2000"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":106,"author":{"gitId":"Colex2000"},"content":"        String description \u003d parts2[0].trim();","lastModifiedDate":"2024-02-02"},{"lineNumber":107,"author":{"gitId":"Colex2000"},"content":"        String by \u003d parts2[1].trim();","lastModifiedDate":"2024-02-02"},{"lineNumber":108,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":109,"author":{"gitId":"Colex2000"},"content":"        // Automatically assume that if time is not given, then time is 0000hrs","lastModifiedDate":"2024-02-02"},{"lineNumber":110,"author":{"gitId":"Colex2000"},"content":"        int sizeOfBy \u003d by.split(\" \").length;","lastModifiedDate":"2024-02-02"},{"lineNumber":111,"author":{"gitId":"Colex2000"},"content":"        if (sizeOfBy \u003c 2) {","lastModifiedDate":"2024-02-03"},{"lineNumber":112,"author":{"gitId":"Colex2000"},"content":"            by +\u003d \" 0000\";","lastModifiedDate":"2024-02-03"},{"lineNumber":113,"author":{"gitId":"Colex2000"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":114,"author":{"gitId":"Colex2000"},"content":"        // Format the date, time, and create Deadline object, add to list","lastModifiedDate":"2024-02-02"},{"lineNumber":115,"author":{"gitId":"Colex2000"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2024-02-02"},{"lineNumber":116,"author":{"gitId":"Colex2000"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(by, formatter);","lastModifiedDate":"2024-02-02"},{"lineNumber":117,"author":{"gitId":"Colex2000"},"content":"        Deadline itemDeadline \u003d new Deadline(description, dateTime);","lastModifiedDate":"2024-02-04"},{"lineNumber":118,"author":{"gitId":"Colex2000"},"content":"        tasks.getTaskList().add(itemDeadline);","lastModifiedDate":"2024-02-04"},{"lineNumber":119,"author":{"gitId":"Colex2000"},"content":"        String stringToSave \u003d \"D | \" + (itemDeadline.getStatusIcon().equals(\"X\") ? \"1\" : \"0\")","lastModifiedDate":"2024-02-04"},{"lineNumber":120,"author":{"gitId":"Colex2000"},"content":"                + \" | \" + description + \" | \" + by + \"\\n\";","lastModifiedDate":"2024-02-04"},{"lineNumber":121,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":122,"author":{"gitId":"Colex2000"},"content":"        // May produce IOException","lastModifiedDate":"2024-02-02"},{"lineNumber":123,"author":{"gitId":"Colex2000"},"content":"        storage.writeToFile(stringToSave);","lastModifiedDate":"2024-02-02"},{"lineNumber":124,"author":{"gitId":"Colex2000"},"content":"        this.storeString.append(Ui.showTaskAdded());","lastModifiedDate":"2024-02-09"},{"lineNumber":125,"author":{"gitId":"Colex2000"},"content":"        this.storeString.append(itemDeadline).append(\"\\n\");","lastModifiedDate":"2024-02-09"},{"lineNumber":126,"author":{"gitId":"Colex2000"},"content":"        this.storeString.append(Ui.showNumberOfTasks(tasks.getTaskList().size()));","lastModifiedDate":"2024-02-09"},{"lineNumber":127,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":128,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":129,"author":{"gitId":"Colex2000"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":130,"author":{"gitId":"Colex2000"},"content":"     * Creates a To-do object as a task and stores into the taskList array.","lastModifiedDate":"2024-02-04"},{"lineNumber":131,"author":{"gitId":"Colex2000"},"content":"     * Method takes in the tasks arraylist and a string.","lastModifiedDate":"2024-02-04"},{"lineNumber":132,"author":{"gitId":"Colex2000"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":133,"author":{"gitId":"Colex2000"},"content":"     * @param tasks an array containing all tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":134,"author":{"gitId":"Colex2000"},"content":"     * @param input String input by the user containing the description.","lastModifiedDate":"2024-02-04"},{"lineNumber":135,"author":{"gitId":"Colex2000"},"content":"     * @throws EmptyDescriptionException if description not given.","lastModifiedDate":"2024-02-04"},{"lineNumber":136,"author":{"gitId":"Colex2000"},"content":"     * @throws IOException if fails to write new task into file.","lastModifiedDate":"2024-02-04"},{"lineNumber":137,"author":{"gitId":"Colex2000"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":138,"author":{"gitId":"Colex2000"},"content":"    public void addToDo(TaskList tasks, String input) throws EmptyDescriptionException, IOException {","lastModifiedDate":"2024-02-04"},{"lineNumber":139,"author":{"gitId":"Colex2000"},"content":"        String[] parts \u003d input.split(\" \",2);","lastModifiedDate":"2024-02-02"},{"lineNumber":140,"author":{"gitId":"Colex2000"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2024-02-02"},{"lineNumber":141,"author":{"gitId":"Colex2000"},"content":"            throw new EmptyDescriptionException(\"Description is EMPTY!\");","lastModifiedDate":"2024-02-02"},{"lineNumber":142,"author":{"gitId":"Colex2000"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":143,"author":{"gitId":"Colex2000"},"content":"        String toDo \u003d parts[1];","lastModifiedDate":"2024-02-02"},{"lineNumber":144,"author":{"gitId":"Colex2000"},"content":"        Todo item_toDo \u003d new Todo(toDo);","lastModifiedDate":"2024-02-02"},{"lineNumber":145,"author":{"gitId":"Colex2000"},"content":"        tasks.getTaskList().add(item_toDo);","lastModifiedDate":"2024-02-04"},{"lineNumber":146,"author":{"gitId":"Colex2000"},"content":"        String stringToSave \u003d \"T | \" + (item_toDo.getStatusIcon().equals(\"X\") ? \"1\" : \"0\") + \" | \" + toDo +\"\\n\";","lastModifiedDate":"2024-02-02"},{"lineNumber":147,"author":{"gitId":"Colex2000"},"content":"        // May produce IOException","lastModifiedDate":"2024-02-02"},{"lineNumber":148,"author":{"gitId":"Colex2000"},"content":"        storage.writeToFile(stringToSave);","lastModifiedDate":"2024-02-02"},{"lineNumber":149,"author":{"gitId":"Colex2000"},"content":"        this.storeString.append(Ui.showTaskAdded());","lastModifiedDate":"2024-02-09"},{"lineNumber":150,"author":{"gitId":"Colex2000"},"content":"        this.storeString.append(item_toDo).append(\"\\n\");","lastModifiedDate":"2024-02-09"},{"lineNumber":151,"author":{"gitId":"Colex2000"},"content":"        this.storeString.append(Ui.showNumberOfTasks(tasks.getTaskList().size()));","lastModifiedDate":"2024-02-09"},{"lineNumber":152,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":153,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":154,"author":{"gitId":"Colex2000"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":155,"author":{"gitId":"Colex2000"},"content":"     * Creates an Event object as a task and stores into the taskList array.","lastModifiedDate":"2024-02-04"},{"lineNumber":156,"author":{"gitId":"Colex2000"},"content":"     * Method takes in the tasks arraylist and a string.","lastModifiedDate":"2024-02-04"},{"lineNumber":157,"author":{"gitId":"Colex2000"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":158,"author":{"gitId":"Colex2000"},"content":"     * @param tasks An array containing all tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":159,"author":{"gitId":"Colex2000"},"content":"     * @param input String input by the user containing the description, date and time from, date and time to.","lastModifiedDate":"2024-02-04"},{"lineNumber":160,"author":{"gitId":"Colex2000"},"content":"     * @throws EmptyDescriptionException if description not given.","lastModifiedDate":"2024-02-04"},{"lineNumber":161,"author":{"gitId":"Colex2000"},"content":"     * @throws NoTimingException if date and time not given.","lastModifiedDate":"2024-02-04"},{"lineNumber":162,"author":{"gitId":"Colex2000"},"content":"     * @throws IOException if fails to write new task into file.","lastModifiedDate":"2024-02-04"},{"lineNumber":163,"author":{"gitId":"Colex2000"},"content":"     * @throws DateTimeParseException if date and time given is invalid.","lastModifiedDate":"2024-02-04"},{"lineNumber":164,"author":{"gitId":"Colex2000"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":165,"author":{"gitId":"Colex2000"},"content":"    public void addEvent(TaskList tasks, String input)","lastModifiedDate":"2024-02-04"},{"lineNumber":166,"author":{"gitId":"Colex2000"},"content":"            throws EmptyDescriptionException,","lastModifiedDate":"2024-02-04"},{"lineNumber":167,"author":{"gitId":"Colex2000"},"content":"                   NoTimingException,","lastModifiedDate":"2024-02-04"},{"lineNumber":168,"author":{"gitId":"Colex2000"},"content":"                   IOException,","lastModifiedDate":"2024-02-04"},{"lineNumber":169,"author":{"gitId":"Colex2000"},"content":"                   DateTimeParseException {","lastModifiedDate":"2024-02-04"},{"lineNumber":170,"author":{"gitId":"Colex2000"},"content":"        String[] parts \u003d input.split(\" \",2);","lastModifiedDate":"2024-02-02"},{"lineNumber":171,"author":{"gitId":"Colex2000"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2024-02-02"},{"lineNumber":172,"author":{"gitId":"Colex2000"},"content":"            throw new EmptyDescriptionException(\"Description is EMPTY!\");","lastModifiedDate":"2024-02-02"},{"lineNumber":173,"author":{"gitId":"Colex2000"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":174,"author":{"gitId":"Colex2000"},"content":"        String description_date \u003d parts[1];","lastModifiedDate":"2024-02-02"},{"lineNumber":175,"author":{"gitId":"Colex2000"},"content":"        String[] parts2 \u003d description_date.split(\"/from \");","lastModifiedDate":"2024-02-02"},{"lineNumber":176,"author":{"gitId":"Colex2000"},"content":"        if (parts2.length \u003c 2) {","lastModifiedDate":"2024-02-02"},{"lineNumber":177,"author":{"gitId":"Colex2000"},"content":"            throw new NoTimingException(\"WOI! Please include time!\");","lastModifiedDate":"2024-02-02"},{"lineNumber":178,"author":{"gitId":"Colex2000"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":179,"author":{"gitId":"Colex2000"},"content":"        String[] details \u003d parts2[1].split(\"/to \");","lastModifiedDate":"2024-02-02"},{"lineNumber":180,"author":{"gitId":"Colex2000"},"content":"        String description \u003d parts2[0].trim();","lastModifiedDate":"2024-02-02"},{"lineNumber":181,"author":{"gitId":"Colex2000"},"content":"        String from \u003d details[0].trim();","lastModifiedDate":"2024-02-02"},{"lineNumber":182,"author":{"gitId":"Colex2000"},"content":"        String to \u003d details[1].trim();","lastModifiedDate":"2024-02-02"},{"lineNumber":183,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":184,"author":{"gitId":"Colex2000"},"content":"        // Automatically assume that if time is not given, then time is 0000hrs","lastModifiedDate":"2024-02-02"},{"lineNumber":185,"author":{"gitId":"Colex2000"},"content":"        int sizeOfFrom \u003d from.split(\" \").length;","lastModifiedDate":"2024-02-02"},{"lineNumber":186,"author":{"gitId":"Colex2000"},"content":"        if (sizeOfFrom \u003c 2) {","lastModifiedDate":"2024-02-03"},{"lineNumber":187,"author":{"gitId":"Colex2000"},"content":"            from +\u003d \" 0000\";","lastModifiedDate":"2024-02-03"},{"lineNumber":188,"author":{"gitId":"Colex2000"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":189,"author":{"gitId":"Colex2000"},"content":"        int sizeOfTo \u003d to.split(\" \").length;","lastModifiedDate":"2024-02-02"},{"lineNumber":190,"author":{"gitId":"Colex2000"},"content":"        if (sizeOfTo \u003c 2) {","lastModifiedDate":"2024-02-03"},{"lineNumber":191,"author":{"gitId":"Colex2000"},"content":"            to +\u003d \" 0000\";","lastModifiedDate":"2024-02-03"},{"lineNumber":192,"author":{"gitId":"Colex2000"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":193,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":194,"author":{"gitId":"Colex2000"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2024-02-02"},{"lineNumber":195,"author":{"gitId":"Colex2000"},"content":"        LocalDateTime dateTimeFrom \u003d LocalDateTime.parse(from, formatter);","lastModifiedDate":"2024-02-02"},{"lineNumber":196,"author":{"gitId":"Colex2000"},"content":"        LocalDateTime dateTimeTo \u003d LocalDateTime.parse(to, formatter);","lastModifiedDate":"2024-02-02"},{"lineNumber":197,"author":{"gitId":"Colex2000"},"content":"        Event item_event \u003d new Event(description, dateTimeFrom, dateTimeTo);","lastModifiedDate":"2024-02-02"},{"lineNumber":198,"author":{"gitId":"Colex2000"},"content":"        tasks.getTaskList().add(item_event);","lastModifiedDate":"2024-02-04"},{"lineNumber":199,"author":{"gitId":"Colex2000"},"content":"        String stringToSave \u003d \"E | \"","lastModifiedDate":"2024-02-04"},{"lineNumber":200,"author":{"gitId":"Colex2000"},"content":"                + (item_event.getStatusIcon().equals(\"X\") ? \"1\" : \"0\")","lastModifiedDate":"2024-02-04"},{"lineNumber":201,"author":{"gitId":"Colex2000"},"content":"                + \" | \" + description + \" | \" + from + \" | \" + to + \"\\n\";","lastModifiedDate":"2024-02-04"},{"lineNumber":202,"author":{"gitId":"Colex2000"},"content":"        // May produce IOException","lastModifiedDate":"2024-02-02"},{"lineNumber":203,"author":{"gitId":"Colex2000"},"content":"        storage.writeToFile(stringToSave);","lastModifiedDate":"2024-02-02"},{"lineNumber":204,"author":{"gitId":"Colex2000"},"content":"        this.storeString.append(\"Yes Master, I\u0027ve added this task: \\n\");","lastModifiedDate":"2024-02-09"},{"lineNumber":205,"author":{"gitId":"Colex2000"},"content":"        this.storeString.append(item_event).append(\"\\n\");","lastModifiedDate":"2024-02-09"},{"lineNumber":206,"author":{"gitId":"Colex2000"},"content":"        this.storeString.append(Ui.showNumberOfTasks(tasks.getTaskList().size()));","lastModifiedDate":"2024-02-09"},{"lineNumber":207,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":208,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":209,"author":{"gitId":"Colex2000"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":210,"author":{"gitId":"Colex2000"},"content":"     * Deletes a task in the given taskList array by specifying the index.","lastModifiedDate":"2024-02-04"},{"lineNumber":211,"author":{"gitId":"Colex2000"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":212,"author":{"gitId":"Colex2000"},"content":"     * @param tasks An array containing all tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":213,"author":{"gitId":"Colex2000"},"content":"     * @param input String input by the user containing the index to delete.","lastModifiedDate":"2024-02-04"},{"lineNumber":214,"author":{"gitId":"Colex2000"},"content":"     * @throws EmptyDescriptionException if description not given.","lastModifiedDate":"2024-02-04"},{"lineNumber":215,"author":{"gitId":"Colex2000"},"content":"     * @throws IOException if fails to write new task into file.","lastModifiedDate":"2024-02-04"},{"lineNumber":216,"author":{"gitId":"Colex2000"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":217,"author":{"gitId":"Colex2000"},"content":"    public void delete(TaskList tasks, String input)","lastModifiedDate":"2024-02-09"},{"lineNumber":218,"author":{"gitId":"Colex2000"},"content":"            throws EmptyDescriptionException,","lastModifiedDate":"2024-02-09"},{"lineNumber":219,"author":{"gitId":"Colex2000"},"content":"                    IOException,","lastModifiedDate":"2024-02-09"},{"lineNumber":220,"author":{"gitId":"Colex2000"},"content":"                    ExcessArgumentException {","lastModifiedDate":"2024-02-09"},{"lineNumber":221,"author":{"gitId":"Colex2000"},"content":"        String[] parts \u003d input.split(\" \");","lastModifiedDate":"2024-02-02"},{"lineNumber":222,"author":{"gitId":"Colex2000"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2024-02-02"},{"lineNumber":223,"author":{"gitId":"Colex2000"},"content":"            throw new EmptyDescriptionException(\"Description is EMPTY!\");","lastModifiedDate":"2024-02-04"},{"lineNumber":224,"author":{"gitId":"Colex2000"},"content":"        } else if (parts.length \u003e 2) {","lastModifiedDate":"2024-02-02"},{"lineNumber":225,"author":{"gitId":"Colex2000"},"content":"            throw new ExcessArgumentException(\"TOO MANY ARGUMENTS PROVIDED!\");","lastModifiedDate":"2024-02-09"},{"lineNumber":226,"author":{"gitId":"Colex2000"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":227,"author":{"gitId":"Colex2000"},"content":"        if (Integer.parseInt(parts[1]) \u003e tasks.getTaskList().size() | Integer.parseInt(parts[1]) \u003c 1) {","lastModifiedDate":"2024-02-04"},{"lineNumber":228,"author":{"gitId":"Colex2000"},"content":"            throw new IndexOutOfBoundsException(\"Integer provided out of range!\");","lastModifiedDate":"2024-02-09"},{"lineNumber":229,"author":{"gitId":"Colex2000"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":230,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":231,"author":{"gitId":"Colex2000"},"content":"        this.storeString.append(\"Noted Master. I\u0027ve removed this task: \\n\");","lastModifiedDate":"2024-02-09"},{"lineNumber":232,"author":{"gitId":"Colex2000"},"content":"        this.storeString.append(tasks.getTaskList().get(Integer.parseInt(parts[1]) - 1).toString()).append(\"\\n\");","lastModifiedDate":"2024-02-09"},{"lineNumber":233,"author":{"gitId":"Colex2000"},"content":"        tasks.getTaskList().remove(Integer.parseInt(parts[1]) - 1);","lastModifiedDate":"2024-02-04"},{"lineNumber":234,"author":{"gitId":"Colex2000"},"content":"        storage.removeFromFile(Integer.parseInt(parts[1]) - 1);","lastModifiedDate":"2024-02-02"},{"lineNumber":235,"author":{"gitId":"Colex2000"},"content":"        this.storeString.append(Ui.showNumberOfTasks(tasks.getTaskList().size()));","lastModifiedDate":"2024-02-09"},{"lineNumber":236,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":237,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":238,"author":{"gitId":"Colex2000"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":239,"author":{"gitId":"Colex2000"},"content":"     * Prints all tasks with matching keywords.","lastModifiedDate":"2024-02-04"},{"lineNumber":240,"author":{"gitId":"Colex2000"},"content":"     * Prints \"NONE\" if not found.","lastModifiedDate":"2024-02-04"},{"lineNumber":241,"author":{"gitId":"Colex2000"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":242,"author":{"gitId":"Colex2000"},"content":"     * @param tasks An array containing all tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":243,"author":{"gitId":"Colex2000"},"content":"     * @param input String input by the user as the keyword to find.","lastModifiedDate":"2024-02-04"},{"lineNumber":244,"author":{"gitId":"Colex2000"},"content":"     * @throws EmptyDescriptionException if description (keyword) not given.","lastModifiedDate":"2024-02-04"},{"lineNumber":245,"author":{"gitId":"Colex2000"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":246,"author":{"gitId":"Colex2000"},"content":"    public void findTask(TaskList tasks, String input) throws EmptyDescriptionException {","lastModifiedDate":"2024-02-04"},{"lineNumber":247,"author":{"gitId":"Colex2000"},"content":"        boolean hasMatched \u003d false;","lastModifiedDate":"2024-02-04"},{"lineNumber":248,"author":{"gitId":"Colex2000"},"content":"        String[] parts \u003d input.split(\" \");","lastModifiedDate":"2024-02-04"},{"lineNumber":249,"author":{"gitId":"Colex2000"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2024-02-04"},{"lineNumber":250,"author":{"gitId":"Colex2000"},"content":"            throw new EmptyDescriptionException(\"Description is EMPTY!\");","lastModifiedDate":"2024-02-04"},{"lineNumber":251,"author":{"gitId":"Colex2000"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":252,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":253,"author":{"gitId":"Colex2000"},"content":"        String keyword \u003d parts[1].toLowerCase();","lastModifiedDate":"2024-02-04"},{"lineNumber":254,"author":{"gitId":"Colex2000"},"content":"        this.storeString.append(\"Here are your matching tasks in your list: \\n\");","lastModifiedDate":"2024-02-09"},{"lineNumber":255,"author":{"gitId":"Colex2000"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2024-02-04"},{"lineNumber":256,"author":{"gitId":"Colex2000"},"content":"            Task task \u003d tasks.getTask(i);","lastModifiedDate":"2024-02-04"},{"lineNumber":257,"author":{"gitId":"Colex2000"},"content":"            String taskString \u003d task.toString();","lastModifiedDate":"2024-02-04"},{"lineNumber":258,"author":{"gitId":"Colex2000"},"content":"            if (taskString.toLowerCase().contains(keyword)) {","lastModifiedDate":"2024-02-04"},{"lineNumber":259,"author":{"gitId":"Colex2000"},"content":"                this.storeString.append((i + 1)).append(\".\").append(taskString).append(\"\\n\");","lastModifiedDate":"2024-02-09"},{"lineNumber":260,"author":{"gitId":"Colex2000"},"content":"                hasMatched \u003d true;","lastModifiedDate":"2024-02-04"},{"lineNumber":261,"author":{"gitId":"Colex2000"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":262,"author":{"gitId":"Colex2000"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":263,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":264,"author":{"gitId":"Colex2000"},"content":"        if (!hasMatched) {","lastModifiedDate":"2024-02-04"},{"lineNumber":265,"author":{"gitId":"Colex2000"},"content":"            this.storeString.append(\"NONE!\");","lastModifiedDate":"2024-02-09"},{"lineNumber":266,"author":{"gitId":"Colex2000"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":267,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":268,"author":{"gitId":"Colex2000"},"content":"    private String outPutString() {","lastModifiedDate":"2024-02-09"},{"lineNumber":269,"author":{"gitId":"Colex2000"},"content":"        String outPut \u003d this.storeString.toString();","lastModifiedDate":"2024-02-09"},{"lineNumber":270,"author":{"gitId":"Colex2000"},"content":"        this.storeString.setLength(0);","lastModifiedDate":"2024-02-09"},{"lineNumber":271,"author":{"gitId":"Colex2000"},"content":"        return outPut;","lastModifiedDate":"2024-02-09"},{"lineNumber":272,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":273,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":274,"author":{"gitId":"Colex2000"},"content":"    public String callCommand(String input, TaskList tasks)","lastModifiedDate":"2024-02-09"},{"lineNumber":275,"author":{"gitId":"Colex2000"},"content":"            throws NoTimingException,","lastModifiedDate":"2024-02-09"},{"lineNumber":276,"author":{"gitId":"Colex2000"},"content":"                    EmptyDescriptionException,","lastModifiedDate":"2024-02-09"},{"lineNumber":277,"author":{"gitId":"Colex2000"},"content":"                    IOException,","lastModifiedDate":"2024-02-09"},{"lineNumber":278,"author":{"gitId":"Colex2000"},"content":"                    ExcessArgumentException {","lastModifiedDate":"2024-02-09"},{"lineNumber":279,"author":{"gitId":"Colex2000"},"content":"        if (input.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2024-02-09"},{"lineNumber":280,"author":{"gitId":"Colex2000"},"content":"            list(tasks);","lastModifiedDate":"2024-02-09"},{"lineNumber":281,"author":{"gitId":"Colex2000"},"content":"        } else if (input.split(\" \",2)[0].equalsIgnoreCase(\"unmark\")) {","lastModifiedDate":"2024-02-09"},{"lineNumber":282,"author":{"gitId":"Colex2000"},"content":"            int num \u003d Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2024-02-09"},{"lineNumber":283,"author":{"gitId":"Colex2000"},"content":"            unmark(tasks, num);","lastModifiedDate":"2024-02-09"},{"lineNumber":284,"author":{"gitId":"Colex2000"},"content":"        } else if (input.split(\" \",2)[0].equalsIgnoreCase(\"mark\")) {","lastModifiedDate":"2024-02-09"},{"lineNumber":285,"author":{"gitId":"Colex2000"},"content":"            int num \u003d Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2024-02-09"},{"lineNumber":286,"author":{"gitId":"Colex2000"},"content":"            mark(tasks, num);","lastModifiedDate":"2024-02-09"},{"lineNumber":287,"author":{"gitId":"Colex2000"},"content":"        } else if (input.split(\" \",2)[0].equalsIgnoreCase(\"deadline\")) {","lastModifiedDate":"2024-02-09"},{"lineNumber":288,"author":{"gitId":"Colex2000"},"content":"            addDeadline(tasks, input);","lastModifiedDate":"2024-02-09"},{"lineNumber":289,"author":{"gitId":"Colex2000"},"content":"        } else if (input.split(\" \",2)[0].equalsIgnoreCase(\"todo\")) {","lastModifiedDate":"2024-02-09"},{"lineNumber":290,"author":{"gitId":"Colex2000"},"content":"            addToDo(tasks, input);","lastModifiedDate":"2024-02-09"},{"lineNumber":291,"author":{"gitId":"Colex2000"},"content":"        } else if (input.split(\" \",2)[0].equalsIgnoreCase(\"event\")) {","lastModifiedDate":"2024-02-09"},{"lineNumber":292,"author":{"gitId":"Colex2000"},"content":"            addEvent(tasks, input);","lastModifiedDate":"2024-02-09"},{"lineNumber":293,"author":{"gitId":"Colex2000"},"content":"        } else if (input.split(\" \",2)[0].equalsIgnoreCase(\"delete\")) {","lastModifiedDate":"2024-02-09"},{"lineNumber":294,"author":{"gitId":"Colex2000"},"content":"            delete(tasks, input);","lastModifiedDate":"2024-02-09"},{"lineNumber":295,"author":{"gitId":"Colex2000"},"content":"        } else if (input.split(\" \",2)[0].equalsIgnoreCase(\"find\")) {","lastModifiedDate":"2024-02-09"},{"lineNumber":296,"author":{"gitId":"Colex2000"},"content":"            findTask(tasks, input);","lastModifiedDate":"2024-02-09"},{"lineNumber":297,"author":{"gitId":"Colex2000"},"content":"        } else {","lastModifiedDate":"2024-02-09"},{"lineNumber":298,"author":{"gitId":"Colex2000"},"content":"            return Ui.inValidCommand();","lastModifiedDate":"2024-02-09"},{"lineNumber":299,"author":{"gitId":"Colex2000"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":300,"author":{"gitId":"Colex2000"},"content":"        return outPutString();","lastModifiedDate":"2024-02-09"},{"lineNumber":301,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":302,"author":{"gitId":"Colex2000"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"Colex2000":302}},{"path":"src/main/java/demon/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Colex2000"},"content":"package demon;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"Colex2000"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"Colex2000"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"Colex2000"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"Colex2000"},"content":" * Represents a task that has a deadline.","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"Colex2000"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"Colex2000"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"Colex2000"},"content":"    private LocalDateTime dateTime;","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"Colex2000"},"content":"    public Deadline(String description, LocalDateTime dateTime){","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"Colex2000"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"Colex2000"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"Colex2000"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"Colex2000"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"Colex2000"},"content":"        String description \u003d super.toString();","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"Colex2000"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"Colex2000"},"content":"        DateTimeFormatter timeFormat \u003d DateTimeFormatter.ofPattern(\"h:mm a\");","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"Colex2000"},"content":"        String formattedDate \u003d dateTime.format(formatter);","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"Colex2000"},"content":"        String formattedTime \u003d dateTime.format(timeFormat);","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"Colex2000"},"content":"        return \"[D]\" + description + \" (by: \" + formattedDate + \" \" + formattedTime + \")\";","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"Colex2000"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"Colex2000":27}},{"path":"src/main/java/demon/Demon.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Colex2000"},"content":"package demon;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"Colex2000"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"Colex2000"},"content":"import java.nio.file.NoSuchFileException;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"Colex2000"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"Colex2000"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"Colex2000"},"content":" * A chatbot that allows user to add, delete, and modify tasks or reminders.","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"Colex2000"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"Colex2000"},"content":"public class Demon {","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"Colex2000"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"Colex2000"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"Colex2000"},"content":"    String filePath \u003d \"src/main/taskList.txt\";","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"Colex2000"},"content":"    Command command \u003d new Command(filePath);","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"Colex2000"},"content":"    boolean isRun \u003d true;","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"Colex2000"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"Colex2000"},"content":"     * Initializes the bot and load tasks saved in taskList.txt file","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"Colex2000"},"content":"     * if there is any previous tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"Colex2000"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"Colex2000"},"content":"    public Demon() {","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"Colex2000"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"Colex2000"},"content":"        final Storage STORAGE \u003d new Storage(this.filePath);","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"Colex2000"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"Colex2000"},"content":"            tasks \u003d new TaskList(STORAGE.load());","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"Colex2000"},"content":"        } catch (NoSuchFileException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"Colex2000"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"Colex2000"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"Colex2000"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"Colex2000"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"Colex2000"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"Colex2000"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"Colex2000"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"Colex2000"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"Colex2000"},"content":"    String getResponse(String input) {","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"Colex2000"},"content":"        if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"Colex2000"},"content":"            isRun \u003d false;","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"Colex2000"},"content":"            return ui.exitMessage();","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"Colex2000"},"content":"        } else {","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"Colex2000"},"content":"            try {","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"Colex2000"},"content":"                return command.callCommand(input.toLowerCase(), this.tasks);","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"Colex2000"},"content":"            } catch (IOException | DateTimeParseException | NumberFormatException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-09"},{"lineNumber":46,"author":{"gitId":"Colex2000"},"content":"                return Ui.outOfBoundsIndex(e);","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"Colex2000"},"content":"            } catch (Exception e) {","lastModifiedDate":"2024-02-09"},{"lineNumber":48,"author":{"gitId":"Colex2000"},"content":"                return e.getMessage();","lastModifiedDate":"2024-02-09"},{"lineNumber":49,"author":{"gitId":"Colex2000"},"content":"            }","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"Colex2000"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":51,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":52,"author":{"gitId":"Colex2000"},"content":"}","lastModifiedDate":"2024-01-24"},{"lineNumber":53,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"Colex2000":54}},{"path":"src/main/java/demon/DemonException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Colex2000"},"content":"package demon;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"Colex2000"},"content":"public abstract class DemonException extends Exception {","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"Colex2000"},"content":"    public DemonException(String msg) {","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"Colex2000"},"content":"        super(msg);","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"Colex2000"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"Colex2000":8}},{"path":"src/main/java/demon/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Colex2000"},"content":"package demon;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"Colex2000"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"Colex2000"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"Colex2000"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"Colex2000"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"Colex2000"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"Colex2000"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"Colex2000"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"Colex2000"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"Colex2000"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"Colex2000"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"Colex2000"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"Colex2000"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"Colex2000"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"Colex2000"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"Colex2000"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"Colex2000"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"Colex2000"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"Colex2000"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"Colex2000"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"Colex2000"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"Colex2000"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"Colex2000"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"Colex2000"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"Colex2000"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"Colex2000"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"Colex2000"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"Colex2000"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"Colex2000"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"Colex2000"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"Colex2000"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"Colex2000"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"Colex2000"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"Colex2000"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"Colex2000"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"Colex2000"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"Colex2000"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"Colex2000"},"content":"    private void flip() {","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"Colex2000"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"Colex2000"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"Colex2000"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"Colex2000"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"Colex2000"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"Colex2000"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"Colex2000"},"content":"    public static DialogBox getDemonDialog(String text, Image img) {","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"Colex2000"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"Colex2000"},"content":"        db.flip();","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"Colex2000"},"content":"        return db;","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"Colex2000"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"Colex2000":61}},{"path":"src/main/java/demon/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Colex2000"},"content":"package demon;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"Colex2000"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"Colex2000"},"content":" * An exception class that will be thrown when description of a task is not provided from the input.","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"Colex2000"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"Colex2000"},"content":"public class EmptyDescriptionException extends DemonException {","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"Colex2000"},"content":"    public EmptyDescriptionException(String msg) {","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"Colex2000"},"content":"        super(msg);","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"Colex2000"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"Colex2000":11}},{"path":"src/main/java/demon/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Colex2000"},"content":"package demon;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"Colex2000"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"Colex2000"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"Colex2000"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"Colex2000"},"content":" * Represents a task that is an Event.","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"Colex2000"},"content":" * Event class has description, from a certain date and time, to a certain date and time.","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"Colex2000"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"Colex2000"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"Colex2000"},"content":"    protected LocalDateTime dateTimeFrom;","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"Colex2000"},"content":"    protected LocalDateTime dateTimeTo;","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"Colex2000"},"content":"    public Event(String description, LocalDateTime dateTimeFrom, LocalDateTime dateTimeTo) {","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"Colex2000"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"Colex2000"},"content":"        this.dateTimeFrom \u003d dateTimeFrom;","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"Colex2000"},"content":"        this.dateTimeTo \u003d dateTimeTo;","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"Colex2000"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"Colex2000"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"Colex2000"},"content":"        String description \u003d super.toString();","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"Colex2000"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"Colex2000"},"content":"        DateTimeFormatter timeFormat \u003d DateTimeFormatter.ofPattern(\"h:mm a\");","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"Colex2000"},"content":"        String fromDate \u003d dateTimeFrom.format(formatter);","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"Colex2000"},"content":"        String fromTime \u003d dateTimeFrom.format(timeFormat);","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"Colex2000"},"content":"        String toDate \u003d dateTimeTo.format(formatter);","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"Colex2000"},"content":"        String toTime \u003d dateTimeTo.format(timeFormat);","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"Colex2000"},"content":"        return \"[E]\" + description","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"Colex2000"},"content":"                + \" (from: \" + fromDate + \" \" + fromTime + \" to: \" + toDate + \" \" + toTime + \")\";","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"Colex2000"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"Colex2000":32}},{"path":"src/main/java/demon/ExcessArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Colex2000"},"content":"package demon;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"Colex2000"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"Colex2000"},"content":" * An exception class that will be thrown when description of a task is not provided from the input.","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"Colex2000"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"Colex2000"},"content":"public class ExcessArgumentException extends DemonException {","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"Colex2000"},"content":"    public ExcessArgumentException(String msg) {","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"Colex2000"},"content":"        super(msg);","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"Colex2000"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"Colex2000":11}},{"path":"src/main/java/demon/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Colex2000"},"content":"package demon;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"Colex2000"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"Colex2000"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"Colex2000"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"Colex2000"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"Colex2000"},"content":"public class Launcher {","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"Colex2000"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"Colex2000"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"Colex2000"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"Colex2000":12}},{"path":"src/main/java/demon/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Colex2000"},"content":"package demon;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"Colex2000"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"Colex2000"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"Colex2000"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"Colex2000"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"Colex2000"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"Colex2000"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"Colex2000"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"Colex2000"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"Colex2000"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"Colex2000"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"Colex2000"},"content":"    private Demon demon \u003d new Demon();","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"Colex2000"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"Colex2000"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"Colex2000"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"Colex2000"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"Colex2000"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"Colex2000"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"Colex2000"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"Colex2000"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDemon(demon);","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"Colex2000"},"content":"            stage.show();","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"Colex2000"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"Colex2000"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"Colex2000"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"Colex2000"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"Colex2000":31}},{"path":"src/main/java/demon/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Colex2000"},"content":"package demon;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"Colex2000"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"Colex2000"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"Colex2000"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"Colex2000"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"Colex2000"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"Colex2000"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"Colex2000"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"Colex2000"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"Colex2000"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"Colex2000"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"Colex2000"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"Colex2000"},"content":"    public Button sendButton;","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"Colex2000"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"Colex2000"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"Colex2000"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"Colex2000"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"Colex2000"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"Colex2000"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"Colex2000"},"content":"    private Demon demon;","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"Colex2000"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaAngel.png\"));","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"Colex2000"},"content":"    private Image demonImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDemon.png\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"Colex2000"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"Colex2000"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"Colex2000"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"Colex2000"},"content":"        sayHi();","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"Colex2000"},"content":"    public void setDemon(Demon demon) {","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"Colex2000"},"content":"        this.demon \u003d demon;","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"Colex2000"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"Colex2000"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"Colex2000"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"Colex2000"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"Colex2000"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"Colex2000"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"Colex2000"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"Colex2000"},"content":"        String response \u003d demon.getResponse(input);","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"Colex2000"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"Colex2000"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"Colex2000"},"content":"                DialogBox.getDemonDialog(response, demonImage)","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"Colex2000"},"content":"        );","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"Colex2000"},"content":"        if (!demon.isRun) {","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"Colex2000"},"content":"            javafx.application.Platform.exit();","lastModifiedDate":"2024-02-09"},{"lineNumber":51,"author":{"gitId":"Colex2000"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":52,"author":{"gitId":"Colex2000"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"Colex2000"},"content":"    @FXML","lastModifiedDate":"2024-02-09"},{"lineNumber":56,"author":{"gitId":"Colex2000"},"content":"    private void sayHi() {","lastModifiedDate":"2024-02-09"},{"lineNumber":57,"author":{"gitId":"Colex2000"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-09"},{"lineNumber":58,"author":{"gitId":"Colex2000"},"content":"                DialogBox.getDemonDialog(\"Hello Master, I\u0027m Demon \\nWhat can I do for you today?\",","lastModifiedDate":"2024-02-09"},{"lineNumber":59,"author":{"gitId":"Colex2000"},"content":"                        demonImage)","lastModifiedDate":"2024-02-09"},{"lineNumber":60,"author":{"gitId":"Colex2000"},"content":"        );","lastModifiedDate":"2024-02-09"},{"lineNumber":61,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":62,"author":{"gitId":"Colex2000"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"Colex2000":62}},{"path":"src/main/java/demon/NoTimingException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Colex2000"},"content":"package demon;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"Colex2000"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"Colex2000"},"content":" * An exception class that will be thrown when no timing is specified by the user when creating new task.","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"Colex2000"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"Colex2000"},"content":"public class NoTimingException extends DemonException {","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"Colex2000"},"content":"    public NoTimingException(String msg) {","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"Colex2000"},"content":"        super(msg);","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"Colex2000"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"Colex2000":11}},{"path":"src/main/java/demon/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Colex2000"},"content":"package demon;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"Colex2000"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"Colex2000"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"Colex2000"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"Colex2000"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"Colex2000"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"Colex2000"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"Colex2000"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"Colex2000"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"Colex2000"},"content":"import java.util.List;","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"Colex2000"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"Colex2000"},"content":" * This class is the central point for loading and modifying the taskList.txt file.","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"Colex2000"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"Colex2000"},"content":"public class Storage {","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"Colex2000"},"content":"    List\u003cString\u003e storageArray;","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"Colex2000"},"content":"    String filePath;","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"Colex2000"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"Colex2000"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"Colex2000"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"Colex2000"},"content":"     * Returns a list of Strings from the text file to load into the chatbot upon starting up.","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"Colex2000"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"Colex2000"},"content":"     * @return A list of Strings.","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"Colex2000"},"content":"     * @throws IOException if fails to read the file","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"Colex2000"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"Colex2000"},"content":"    public List\u003cString\u003e load() throws IOException {","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"Colex2000"},"content":"        // Read all lines from the file as a List","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"Colex2000"},"content":"        this.storageArray \u003d Files.readAllLines(Paths.get(filePath));","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"Colex2000"},"content":"        return this.storageArray;","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"Colex2000"},"content":"    public void reWriteFile(int lineToEdit) {","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"Colex2000"},"content":"        Path path \u003d Paths.get(this.filePath);","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"Colex2000"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"Colex2000"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(this.filePath));","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"Colex2000"},"content":"            String currentLineContent;","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"Colex2000"},"content":"            int currentLineNum \u003d 0;","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"Colex2000"},"content":"            while ((currentLineContent \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"Colex2000"},"content":"                currentLineNum++;","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"Colex2000"},"content":"                if (currentLineNum \u003d\u003d lineToEdit) break;","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"Colex2000"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"Colex2000"},"content":"            assert currentLineContent !\u003d null;","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"Colex2000"},"content":"            String[] partsOfString \u003d currentLineContent.split(\"\\\\|\");","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"Colex2000"},"content":"            partsOfString[1] \u003d partsOfString[1].trim().equals(\"1\") ? \" 0 \" : \" 1 \";","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"Colex2000"},"content":"            String newContent \u003d String.join(\"|\", partsOfString);","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"Colex2000"},"content":"            // Read all lines from the file","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"Colex2000"},"content":"            List\u003cString\u003e lines \u003d Files.readAllLines(path);","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"Colex2000"},"content":"            // Check if the line to edit is within the file\u0027s line count","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"Colex2000"},"content":"            if (lineToEdit \u003c\u003d lines.size()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"Colex2000"},"content":"                // Modify the specific line (adjust for 0-based index)","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"Colex2000"},"content":"                lines.set(lineToEdit - 1, newContent);","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"Colex2000"},"content":"            } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"Colex2000"},"content":"                System.err.println(\"The line number to edit is beyond the file\u0027s line count.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"Colex2000"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"Colex2000"},"content":"            Files.write(path, lines);","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"Colex2000"},"content":"            reader.close();","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"Colex2000"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"Colex2000"},"content":"            System.err.println(\"An error occurred.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"Colex2000"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"Colex2000"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":72,"author":{"gitId":"Colex2000"},"content":"    public void writeToFile(String textToAdd) throws IOException {","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"Colex2000"},"content":"        FileWriter fw \u003d new FileWriter(this.filePath, true);","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"Colex2000"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"Colex2000"},"content":"        fw.close();","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"Colex2000"},"content":"    public void removeFromFile(int lineNum) throws IOException {","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"Colex2000"},"content":"        Path path \u003d Paths.get(this.filePath);","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"Colex2000"},"content":"        List\u003cString\u003e lines \u003d Files.readAllLines(path);","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"Colex2000"},"content":"        List\u003cString\u003e newArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"Colex2000"},"content":"        for (int i \u003d 0; i \u003c lines.size(); i++) {","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"Colex2000"},"content":"            if (lineNum !\u003d i) {","lastModifiedDate":"2024-02-02"},{"lineNumber":84,"author":{"gitId":"Colex2000"},"content":"                newArray.add(lines.get(i));","lastModifiedDate":"2024-02-02"},{"lineNumber":85,"author":{"gitId":"Colex2000"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":86,"author":{"gitId":"Colex2000"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":87,"author":{"gitId":"Colex2000"},"content":"        Files.write(path, newArray);","lastModifiedDate":"2024-02-02"},{"lineNumber":88,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":89,"author":{"gitId":"Colex2000"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"Colex2000":89}},{"path":"src/main/java/demon/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Colex2000"},"content":"package demon;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"Colex2000"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"Colex2000"},"content":" * This class is a parent class of Deadline, Event, and To-do classes. The class stores the description of a task","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"Colex2000"},"content":" * and its status.","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"Colex2000"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"Colex2000"},"content":"public class Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"Colex2000"},"content":"    protected String description;","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"Colex2000"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"Colex2000"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"Colex2000"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"Colex2000"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"Colex2000"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"Colex2000"},"content":"     * Returns whether the task is marked completed or not.","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"Colex2000"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"Colex2000"},"content":"     * @return A string representing completed (\"X\") or incomplete (\" \")","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"Colex2000"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"Colex2000"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"Colex2000"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"Colex2000"},"content":"    public void markDone() {","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"Colex2000"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"Colex2000"},"content":"    public void markNotDone() {","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"Colex2000"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":33,"author":{"gitId":"Colex2000"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":34,"author":{"gitId":"Colex2000"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":36,"author":{"gitId":"Colex2000"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"Colex2000":36}},{"path":"src/main/java/demon/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Colex2000"},"content":"package demon;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"Colex2000"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"Colex2000"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"Colex2000"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"Colex2000"},"content":"import java.util.List;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"Colex2000"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"Colex2000"},"content":" * Facilitates the loading of tasks from tasks.txt file.","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"Colex2000"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"Colex2000"},"content":"public class TaskList {","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"Colex2000"},"content":"    private final List\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"Colex2000"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"Colex2000"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"Colex2000"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"Colex2000"},"content":"     * Loads the saved tasks into the tasks array by verifying the type of tasks to store.","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"Colex2000"},"content":"     * The method creates the object, Deadline, Event, To-do, based on the type of tasks identified.","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"Colex2000"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"Colex2000"},"content":"     * @param storageArray The list of strings containing all tasks populated from the tasks.txt file.","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"Colex2000"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"Colex2000"},"content":"    public TaskList(List\u003cString\u003e storageArray) {","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"Colex2000"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"Colex2000"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"Colex2000"},"content":"        // Read file line by line","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"Colex2000"},"content":"        for (int i \u003d 0; i \u003c storageArray.size(); i++) {","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"Colex2000"},"content":"            // Process the line","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"Colex2000"},"content":"            Task item;","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"Colex2000"},"content":"            String isCompleted;","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"Colex2000"},"content":"            String line \u003d storageArray.get(i);","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"Colex2000"},"content":"            char firstChar \u003d line.charAt(0);","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"Colex2000"},"content":"            if (firstChar \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"Colex2000"},"content":"                String[] parts \u003d line.split(\"\\\\|\");","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"Colex2000"},"content":"                isCompleted \u003d parts[1].trim();","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"Colex2000"},"content":"                String description \u003d parts[2].trim();","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"Colex2000"},"content":"                String by \u003d parts[3].trim();","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"Colex2000"},"content":"                LocalDateTime dateTime \u003d LocalDateTime.parse(by, formatter);","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"Colex2000"},"content":"                item \u003d new Deadline(description, dateTime);","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"Colex2000"},"content":"            } else if (firstChar \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"Colex2000"},"content":"                String[] parts \u003d line.split(\"\\\\|\");","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"Colex2000"},"content":"                isCompleted \u003d parts[1].trim();","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"Colex2000"},"content":"                String description \u003d parts[2].trim();","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"Colex2000"},"content":"                item \u003d new Todo(description);","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"Colex2000"},"content":"            } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"Colex2000"},"content":"                String[] parts \u003d line.split(\"\\\\|\");","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"Colex2000"},"content":"                isCompleted \u003d parts[1].trim();","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"Colex2000"},"content":"                String description \u003d parts[2].trim();","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"Colex2000"},"content":"                String from \u003d parts[3].trim();","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"Colex2000"},"content":"                String to \u003d parts[4].trim();","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"Colex2000"},"content":"                LocalDateTime dateTimeFrom \u003d LocalDateTime.parse(from, formatter);","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"Colex2000"},"content":"                LocalDateTime dateTimeTo \u003d LocalDateTime.parse(to, formatter);","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"Colex2000"},"content":"                item \u003d new Event(description, dateTimeFrom, dateTimeTo);","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"Colex2000"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"Colex2000"},"content":"            this.tasks.add(item);","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"Colex2000"},"content":"            if (isCompleted.equals(\"1\")) {","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"Colex2000"},"content":"                item.markDone();","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"Colex2000"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"Colex2000"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"Colex2000"},"content":"    public List\u003cTask\u003e getTaskList() {","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"Colex2000"},"content":"        return this.tasks;","lastModifiedDate":"2024-02-07"},{"lineNumber":70,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"Colex2000"},"content":"    public int getSize() {","lastModifiedDate":"2024-02-04"},{"lineNumber":73,"author":{"gitId":"Colex2000"},"content":"        return this.tasks.size();","lastModifiedDate":"2024-02-07"},{"lineNumber":74,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":76,"author":{"gitId":"Colex2000"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2024-02-04"},{"lineNumber":77,"author":{"gitId":"Colex2000"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2024-02-07"},{"lineNumber":78,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"Colex2000"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"Colex2000":79}},{"path":"src/main/java/demon/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Colex2000"},"content":"package demon;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"Colex2000"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"Colex2000"},"content":" * Represents a task that is to do, only contains description.","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"Colex2000"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"Colex2000"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"Colex2000"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"Colex2000"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"Colex2000"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"Colex2000"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"Colex2000"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"Colex2000"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"Colex2000":16}},{"path":"src/main/java/demon/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Colex2000"},"content":"package demon;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"Colex2000"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"Colex2000"},"content":" * This class constitutes all methods to print messages to the screen.","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"Colex2000"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"Colex2000"},"content":"public class Ui {","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"Colex2000"},"content":"    public static String outOfBoundsIndex(Exception e) {","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"Colex2000"},"content":"        return e + \". Please provide valid integer.\";","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"Colex2000"},"content":"    public static String inValidCommand() {","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"Colex2000"},"content":"        return \"OOPS! Looks like you have entered an invalid command! Try again.\";","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"Colex2000"},"content":"    public String exitMessage() {","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"Colex2000"},"content":"        return \"Bye Master, hope you had a great time, see you!\";","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"Colex2000"},"content":"    public static String showTaskAdded() {","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"Colex2000"},"content":"        return \"Yes Master, I\u0027ve added this task: \\n\";","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"Colex2000"},"content":"    public static String showNumberOfTasks(int size) {","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"Colex2000"},"content":"        return \"Now you have \" + size + \" tasks in the list.\";","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"Colex2000"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"Colex2000":27}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Colex2000"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"Colex2000"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"Colex2000"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"Colex2000"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"Colex2000"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"Colex2000"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"Colex2000"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"Colex2000"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"Colex2000"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"Colex2000"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"Colex2000"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"Colex2000"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"Colex2000"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"Colex2000"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"Colex2000":17}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Colex2000"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"Colex2000"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"Colex2000"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"Colex2000"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"Colex2000"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"Colex2000"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"Colex2000"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"demon.MainWindow\"\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"Colex2000"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"Colex2000"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"290.0\" AnchorPane.bottomAnchor\u003d\"0\" AnchorPane.leftAnchor\u003d\"0\" AnchorPane.rightAnchor\u003d\"76\"/\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"Colex2000"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" AnchorPane.bottomAnchor\u003d\"0\" AnchorPane.rightAnchor\u003d\"0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"Colex2000"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" vvalue\u003d\"1.0\"","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"Colex2000"},"content":"                    AnchorPane.topAnchor\u003d\"0\" AnchorPane.bottomAnchor\u003d\"41.0\"","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"Colex2000"},"content":"                    AnchorPane.leftAnchor\u003d\"0\" AnchorPane.rightAnchor\u003d\"0\"\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"Colex2000"},"content":"            \u003cVBox fx:id\u003d\"dialogContainer\" VBox.vgrow\u003d\"ALWAYS\" AnchorPane.rightAnchor\u003d\"0\"/\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"Colex2000"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"Colex2000"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"Colex2000"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"Colex2000":20}},{"path":"src/main/taskList.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Colex2000"},"content":"T | 0 | asdasd","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"Colex2000"},"content":"T | 0 | asdasfdfgfdgh","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"Colex2000"},"content":"T | 0 | asdas","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"Colex2000"},"content":"T | 0 | asfpdfogj","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"Colex2000"},"content":"T | 1 | asfsdf","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"Colex2000"},"content":"T | 0 | sadsadojn","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"Colex2000"},"content":"T | 0 | asfsdf","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"Colex2000"},"content":"T | 0 | asonasdo","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"Colex2000"},"content":"T | 0 | eat dinner later","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"Colex2000"},"content":"T | 0 | eat breakfast","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"Colex2000"},"content":"T | 0 | eat your mamammamam","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"Colex2000"},"content":"T | 0 | dfgdfgsg","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"Colex2000"},"content":"T | 0 | asdasd","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"Colex2000"},"content":"E | 0 | cny dinner | 09/02/2024 0000 | 13/02/2024 0000","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"Colex2000"},"content":"T | 0 | asdsad","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"Colex2000":15}},{"path":"src/test/java/demon/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Colex2000"},"content":"package demon;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"Colex2000"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Colex2000"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Colex2000"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Colex2000"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Colex2000"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"Colex2000"},"content":" * A test of the Deadline class, toString method.","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"Colex2000"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"Colex2000"},"content":"public class DeadlineTest {","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Colex2000"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Colex2000"},"content":"    public void stringMsg_test() {","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Colex2000"},"content":"        String expected \u003d \"[D][ ] return book (by: Mar 3 2024 10:00 PM)\";","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"Colex2000"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Colex2000"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(\"03/03/2024 2200\", formatter);","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Colex2000"},"content":"        Deadline deadlineTest \u003d new Deadline(\"return book\", dateTime);","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Colex2000"},"content":"        assertEquals(expected, deadlineTest.toString(),\"String returns unexpected result\");","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"Colex2000"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"Colex2000":20}},{"path":"src/test/java/demon/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Colex2000"},"content":"package demon;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"Colex2000"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Colex2000"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Colex2000"},"content":"import java.util.List;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Colex2000"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"Colex2000"},"content":" * A test of the Storage class, load method.","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"Colex2000"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"Colex2000"},"content":"public class StorageTest {","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Colex2000"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Colex2000"},"content":"    public void storageTest_success() throws Exception {","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Colex2000"},"content":"        List\u003cString\u003e expected \u003d List.of(\"T | 1 | asdsad\");","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Colex2000"},"content":"        assertEquals(expected, new Storage(\"src/main/taskList.txt\").load(),\"Load method returns unexpected result\");","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Colex2000"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"Colex2000":16}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Colex2000"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"Colex2000"},"content":"todo sleep","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"Colex2000"},"content":"bye","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Colex2000":3}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Colex2000"},"content":"java -classpath ..\\bin Demon \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Colex2000":1,"-":20}}]
