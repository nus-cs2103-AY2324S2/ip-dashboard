[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"jerremyng"},"content":"# duke.Duke project template","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"jerremyng"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jerremyng":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"jerremyng"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"jerremyng"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"jerremyng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"jerremyng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"jerremyng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"jerremyng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"jerremyng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"jerremyng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"jerremyng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"jerremyng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"jerremyng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"jerremyng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"jerremyng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"jerremyng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"jerremyng"},"content":"    mainClass.set(\"duke.Launcher\")","lastModifiedDate":"2024-02-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jerremyng":17,"-":41}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"jerremyng"},"content":"# fakegpt User Guide","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"jerremyng"},"content":"fakegpt is a desktop app for managing tasks, helping one keep track of","lastModifiedDate":"2024-02-21"},{"lineNumber":4,"author":{"gitId":"jerremyng"},"content":"various different kind of tasks and their dates.","lastModifiedDate":"2024-02-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"jerremyng"},"content":"## Quickstart","lastModifiedDate":"2024-02-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":8,"author":{"gitId":"jerremyng"},"content":"1. Download jar file from [here](https://github.com/jerremyng/ip/releases)","lastModifiedDate":"2024-02-21"},{"lineNumber":9,"author":{"gitId":"jerremyng"},"content":"2. Copy the jar file into an empty folder.","lastModifiedDate":"2024-02-21"},{"lineNumber":10,"author":{"gitId":"jerremyng"},"content":"3. Open a command window in that folder.","lastModifiedDate":"2024-02-21"},{"lineNumber":11,"author":{"gitId":"jerremyng"},"content":"4. Run the command `java -jar {filename}.jar`  ","lastModifiedDate":"2024-02-21"},{"lineNumber":12,"author":{"gitId":"jerremyng"},"content":"`e.g., java -jar Duke.jar` (i.e., run the command in the same folder as the jar file).","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":14,"author":{"gitId":"jerremyng"},"content":"A GUI should pop up and fakegpt is ready for use! See below for commands.","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":16,"author":{"gitId":"jerremyng"},"content":"## Commands","lastModifiedDate":"2024-02-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"jerremyng"},"content":"### Viewing tasks: `list` or `ls`","lastModifiedDate":"2024-02-21"},{"lineNumber":19,"author":{"gitId":"jerremyng"},"content":"Displays entire list of tasks.","lastModifiedDate":"2024-02-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"jerremyng"},"content":"### Exit program: `bye`","lastModifiedDate":"2024-02-21"},{"lineNumber":22,"author":{"gitId":"jerremyng"},"content":"Saves tasks and quits program.","lastModifiedDate":"2024-02-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"jerremyng"},"content":"### Create new todo task: `todo {taskDescription}`","lastModifiedDate":"2024-02-21"},{"lineNumber":25,"author":{"gitId":"jerremyng"},"content":"Adds a new todo type task to the list.","lastModifiedDate":"2024-02-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"jerremyng"},"content":"__Params__  ","lastModifiedDate":"2024-02-21"},{"lineNumber":28,"author":{"gitId":"jerremyng"},"content":"taskDescription: brief description of task","lastModifiedDate":"2024-02-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"jerremyng"},"content":"### Create new deadline task: `deadline {taskDescription} /by {dueDate}`","lastModifiedDate":"2024-02-21"},{"lineNumber":31,"author":{"gitId":"jerremyng"},"content":"Adds a new deadline type task to the list.","lastModifiedDate":"2024-02-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":33,"author":{"gitId":"jerremyng"},"content":"__Params__  ","lastModifiedDate":"2024-02-21"},{"lineNumber":34,"author":{"gitId":"jerremyng"},"content":"taskDescription: brief description of task  ","lastModifiedDate":"2024-02-21"},{"lineNumber":35,"author":{"gitId":"jerremyng"},"content":"dueDate: a date in the format such as 01 Jan 2022","lastModifiedDate":"2024-02-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":37,"author":{"gitId":"jerremyng"},"content":"### Create new event task: `event {taskDescription} /from {startDate} /to {endDate}`","lastModifiedDate":"2024-02-21"},{"lineNumber":38,"author":{"gitId":"jerremyng"},"content":"Adds a new event type task to the list.","lastModifiedDate":"2024-02-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":40,"author":{"gitId":"jerremyng"},"content":"__Params__  ","lastModifiedDate":"2024-02-21"},{"lineNumber":41,"author":{"gitId":"jerremyng"},"content":"taskDescription: brief description of task  ","lastModifiedDate":"2024-02-21"},{"lineNumber":42,"author":{"gitId":"jerremyng"},"content":"startDate: a date in the format such as 01 Jan 2022  ","lastModifiedDate":"2024-02-21"},{"lineNumber":43,"author":{"gitId":"jerremyng"},"content":"endDate: a date in the format such as 01 Jan 2022","lastModifiedDate":"2024-02-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07"},{"lineNumber":45,"author":{"gitId":"jerremyng"},"content":"### Delete a task: `delete {index}`","lastModifiedDate":"2024-02-21"},{"lineNumber":46,"author":{"gitId":"jerremyng"},"content":"Deletes a task at specified index","lastModifiedDate":"2024-02-21"},{"lineNumber":47,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":48,"author":{"gitId":"jerremyng"},"content":"__Params__  ","lastModifiedDate":"2024-02-21"},{"lineNumber":49,"author":{"gitId":"jerremyng"},"content":"index: number representing which task to delete","lastModifiedDate":"2024-02-21"},{"lineNumber":50,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":51,"author":{"gitId":"jerremyng"},"content":"### Find a task: `find {searchPhrase}`","lastModifiedDate":"2024-02-21"},{"lineNumber":52,"author":{"gitId":"jerremyng"},"content":"Returns a list of tasks that contain searchPhrase","lastModifiedDate":"2024-02-21"},{"lineNumber":53,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":54,"author":{"gitId":"jerremyng"},"content":"__Params__  ","lastModifiedDate":"2024-02-21"},{"lineNumber":55,"author":{"gitId":"jerremyng"},"content":"searchPhrase: string to look for in task description.","lastModifiedDate":"2024-02-21"},{"lineNumber":56,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":57,"author":{"gitId":"jerremyng"},"content":"### Sort tasks: `sort`","lastModifiedDate":"2024-02-21"},{"lineNumber":58,"author":{"gitId":"jerremyng"},"content":"Sorts task list based on due date. ToDo events are put first.","lastModifiedDate":"2024-02-21"},{"lineNumber":59,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":60,"author":{"gitId":"jerremyng"},"content":"### Mark as done: `mark {index}`","lastModifiedDate":"2024-02-21"},{"lineNumber":61,"author":{"gitId":"jerremyng"},"content":"Marks a task as done by putting a check beside it.","lastModifiedDate":"2024-02-21"},{"lineNumber":62,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":63,"author":{"gitId":"jerremyng"},"content":"__Params__  ","lastModifiedDate":"2024-02-21"},{"lineNumber":64,"author":{"gitId":"jerremyng"},"content":"index: index of task to mark as done.","lastModifiedDate":"2024-02-21"},{"lineNumber":65,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":66,"author":{"gitId":"jerremyng"},"content":"### Mark as not done: `unmark {index}`","lastModifiedDate":"2024-02-21"},{"lineNumber":67,"author":{"gitId":"jerremyng"},"content":"Unmarks a task as done by removing the check beside it.","lastModifiedDate":"2024-02-21"},{"lineNumber":68,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":69,"author":{"gitId":"jerremyng"},"content":"__Params__  ","lastModifiedDate":"2024-02-21"},{"lineNumber":70,"author":{"gitId":"jerremyng"},"content":"index: index of task to unmark as done.","lastModifiedDate":"2024-02-21"}],"authorContributionMap":{"jerremyng":56,"-":14}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerremyng"},"content":"package duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"jerremyng"},"content":"import duke.command.Command;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"jerremyng"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"jerremyng"},"content":"import duke.exceptions.StorageException;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"jerremyng"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"jerremyng"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"jerremyng"},"content":" * Driver code for chatbot.","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"jerremyng"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"jerremyng"},"content":"    private Storage storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"jerremyng"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"jerremyng"},"content":"     * Constructs a Duke object with a given datapath.","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"jerremyng"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"jerremyng"},"content":"     * @param filePath Filepath of the datafile.","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"jerremyng"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"jerremyng"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"jerremyng"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"jerremyng"},"content":"            this.taskList \u003d this.storage.load();","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"jerremyng"},"content":"        } catch (StorageException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"jerremyng"},"content":"            //todo: ask the user if want to create new datafile, possibly deleting old data","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-19"},{"lineNumber":29,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"jerremyng"},"content":"     * Gets greeting string from duke.","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"jerremyng"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"jerremyng"},"content":"     * @return Welcome message from duke.","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"jerremyng"},"content":"    public String getGreeting() {","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"jerremyng"},"content":"        StringBuilder greeting \u003d new StringBuilder(\"Hello and welcome! I\u0027m fakegpt!\\n\");","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"jerremyng"},"content":"        greeting.append(this.taskList.toString());","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"jerremyng"},"content":"        return greeting.toString();","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"jerremyng"},"content":"     * Returns output from chatbot given an input.","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"jerremyng"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"jerremyng"},"content":"     * @param input String from user.","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"jerremyng"},"content":"     * @return","lastModifiedDate":"2024-02-09"},{"lineNumber":46,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"jerremyng"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-02-09"},{"lineNumber":48,"author":{"gitId":"jerremyng"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"jerremyng"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"jerremyng"},"content":"            c.execute(this.taskList, this.storage);","lastModifiedDate":"2024-02-09"},{"lineNumber":51,"author":{"gitId":"jerremyng"},"content":"            assert c.getResponse() !\u003d null: \"Response should be available\";","lastModifiedDate":"2024-02-15"},{"lineNumber":52,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":53,"author":{"gitId":"jerremyng"},"content":"            return c.getResponse();","lastModifiedDate":"2024-02-09"},{"lineNumber":54,"author":{"gitId":"jerremyng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"jerremyng"},"content":"            return e.getMessage();","lastModifiedDate":"2024-02-09"},{"lineNumber":56,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"jerremyng"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"jerremyng":57,"-":1}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerremyng"},"content":"package duke;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"jerremyng"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"jerremyng"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"jerremyng"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"jerremyng"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"jerremyng"},"content":"public class Launcher {","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"jerremyng"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"jerremyng"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"jerremyng"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"jerremyng":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerremyng"},"content":"package duke;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"jerremyng"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"jerremyng"},"content":"import duke.controllers.MainWindow;","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"jerremyng"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"jerremyng"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"jerremyng"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"jerremyng"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"jerremyng"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"jerremyng"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"jerremyng"},"content":" * A GUI for Duke using FXML. This class puts together the Duke and GUI logic.","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"jerremyng"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"jerremyng"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"jerremyng"},"content":"    private Duke duke \u003d new Duke(\"data/duke.txt\");","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"jerremyng"},"content":"    @Override","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"jerremyng"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"jerremyng"},"content":"        try {","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"jerremyng"},"content":"            stage.setTitle(\"fakegpt\");","lastModifiedDate":"2024-02-21"},{"lineNumber":22,"author":{"gitId":"jerremyng"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"jerremyng"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"jerremyng"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"jerremyng"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"jerremyng"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"jerremyng"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().greetUser();","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"jerremyng"},"content":"            stage.show();","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"jerremyng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"jerremyng"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"jerremyng"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"jerremyng":33}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerremyng"},"content":"package duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"jerremyng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"jerremyng"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"jerremyng"},"content":"import duke.command.ByeCommand;","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"jerremyng"},"content":"import duke.command.Command;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"jerremyng"},"content":"import duke.command.DeadlineCommand;","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"jerremyng"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"jerremyng"},"content":"import duke.command.EventCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"jerremyng"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"jerremyng"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"jerremyng"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"jerremyng"},"content":"import duke.command.SortCommand;","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"jerremyng"},"content":"import duke.command.ToDoCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"jerremyng"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"jerremyng"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"jerremyng"},"content":"import duke.exceptions.IllegalParamException;","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"jerremyng"},"content":"import duke.exceptions.MissingInfoException;","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"jerremyng"},"content":"import duke.exceptions.ParserException;","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"jerremyng"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"jerremyng"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"jerremyng"},"content":" * Parser class responsible for translating user inputs to command objects.","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"jerremyng"},"content":" * The command objects are then passed on and executed.","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"jerremyng"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"jerremyng"},"content":"public class Parser {","lastModifiedDate":"2024-01-21"},{"lineNumber":27,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"jerremyng"},"content":"     * Parses user input and converts it to a Command object.","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"jerremyng"},"content":"     * The Command object can then be executed to perform the command.","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"jerremyng"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"jerremyng"},"content":"     * @param input User input as a string.","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"jerremyng"},"content":"     * @return Command object.","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"jerremyng"},"content":"     * @throws DukeException Specific exception class will depend on error encountered.","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"jerremyng"},"content":"    public static Command parse(String input) throws DukeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"jerremyng"},"content":"        String clean \u003d input.trim().toLowerCase();","lastModifiedDate":"2024-01-21"},{"lineNumber":38,"author":{"gitId":"jerremyng"},"content":"        String[] tokens \u003d input.trim().split(\"\\\\s+\", 2);","lastModifiedDate":"2024-01-21"},{"lineNumber":39,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":40,"author":{"gitId":"jerremyng"},"content":"        if (tokens.length \u003d\u003d 0) {","lastModifiedDate":"2024-01-21"},{"lineNumber":41,"author":{"gitId":"jerremyng"},"content":"            throw new ParserException(\"Master, please give me a command!\");","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"jerremyng"},"content":"        } else if (clean.equals(\"bye\")) {","lastModifiedDate":"2024-01-21"},{"lineNumber":43,"author":{"gitId":"jerremyng"},"content":"            return new ByeCommand();","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"jerremyng"},"content":"        } else if (clean.equals(\"list\") || clean.equals(\"ls\")) {","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"jerremyng"},"content":"            return new ListCommand();","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"jerremyng"},"content":"        } else if (clean.equals(\"sort\")) {","lastModifiedDate":"2024-02-15"},{"lineNumber":47,"author":{"gitId":"jerremyng"},"content":"            return new SortCommand();","lastModifiedDate":"2024-02-15"},{"lineNumber":48,"author":{"gitId":"jerremyng"},"content":"        } else if (tokens.length \u003d\u003d 1) {","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"jerremyng"},"content":"            //no more one word commands -\u003e throw error","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"jerremyng"},"content":"            throw new MissingInfoException(\"Masterrr, please tell me more! I dont understand your command or \"","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"jerremyng"},"content":"                    + \"some information is missing.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":53,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":54,"author":{"gitId":"jerremyng"},"content":"        String command \u003d tokens[0].toLowerCase();","lastModifiedDate":"2024-01-21"},{"lineNumber":55,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":56,"author":{"gitId":"jerremyng"},"content":"        switch (command) {","lastModifiedDate":"2024-01-21"},{"lineNumber":57,"author":{"gitId":"jerremyng"},"content":"        case \"mark\":","lastModifiedDate":"2024-01-21"},{"lineNumber":58,"author":{"gitId":"jerremyng"},"content":"            return parseMarkCommand(tokens[1]);","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"jerremyng"},"content":"        case \"unmark\":","lastModifiedDate":"2024-01-21"},{"lineNumber":60,"author":{"gitId":"jerremyng"},"content":"            return parseUnmarkCommand(tokens[1]);","lastModifiedDate":"2024-01-21"},{"lineNumber":61,"author":{"gitId":"jerremyng"},"content":"        case \"delete\":","lastModifiedDate":"2024-01-21"},{"lineNumber":62,"author":{"gitId":"jerremyng"},"content":"            return parseDeleteCommand(tokens[1]);","lastModifiedDate":"2024-01-21"},{"lineNumber":63,"author":{"gitId":"jerremyng"},"content":"        case \"todo\":","lastModifiedDate":"2024-01-21"},{"lineNumber":64,"author":{"gitId":"jerremyng"},"content":"            return parseTodoCommand(tokens[1]);","lastModifiedDate":"2024-01-21"},{"lineNumber":65,"author":{"gitId":"jerremyng"},"content":"        case \"deadline\":","lastModifiedDate":"2024-01-21"},{"lineNumber":66,"author":{"gitId":"jerremyng"},"content":"            return parseDeadlineCommand(tokens[1]);","lastModifiedDate":"2024-01-21"},{"lineNumber":67,"author":{"gitId":"jerremyng"},"content":"        case \"event\":","lastModifiedDate":"2024-01-21"},{"lineNumber":68,"author":{"gitId":"jerremyng"},"content":"            return parseEventCommand(tokens[1]);","lastModifiedDate":"2024-01-21"},{"lineNumber":69,"author":{"gitId":"jerremyng"},"content":"        case \"find\":","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"jerremyng"},"content":"            return parseFindCommand(tokens[1]);","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"jerremyng"},"content":"        default:","lastModifiedDate":"2024-01-21"},{"lineNumber":72,"author":{"gitId":"jerremyng"},"content":"            throw new ParserException(\"I dont understand you!\"","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"jerremyng"},"content":"                    + \" Please be dont scold me and be gentle with me! Try again!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":75,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":76,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"jerremyng"},"content":"    private static Command parseMarkCommand(String tokens) throws IllegalParamException {","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"jerremyng"},"content":"        try {","lastModifiedDate":"2024-01-21"},{"lineNumber":79,"author":{"gitId":"jerremyng"},"content":"            int taskId \u003d Integer.parseInt(tokens.trim());","lastModifiedDate":"2024-01-21"},{"lineNumber":80,"author":{"gitId":"jerremyng"},"content":"            return new MarkCommand(taskId);","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"jerremyng"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-21"},{"lineNumber":82,"author":{"gitId":"jerremyng"},"content":"            throw new IllegalParamException(\"I cant tell which task you are trying to mark! Try a number\");","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":84,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":85,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":86,"author":{"gitId":"jerremyng"},"content":"    private static Command parseUnmarkCommand(String tokens) throws IllegalParamException {","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"jerremyng"},"content":"        try {","lastModifiedDate":"2024-01-21"},{"lineNumber":88,"author":{"gitId":"jerremyng"},"content":"            int taskId \u003d Integer.parseInt(tokens.trim());","lastModifiedDate":"2024-01-21"},{"lineNumber":89,"author":{"gitId":"jerremyng"},"content":"            return new UnmarkCommand(taskId);","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"jerremyng"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-21"},{"lineNumber":91,"author":{"gitId":"jerremyng"},"content":"            throw new IllegalParamException(\"I dont know which task you are trying to unmark! Try a number\");","lastModifiedDate":"2024-02-02"},{"lineNumber":92,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":93,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":94,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":95,"author":{"gitId":"jerremyng"},"content":"    private static Command parseDeleteCommand(String tokens) throws IllegalParamException {","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"jerremyng"},"content":"        try {","lastModifiedDate":"2024-01-21"},{"lineNumber":97,"author":{"gitId":"jerremyng"},"content":"            int taskId \u003d Integer.parseInt(tokens.trim());","lastModifiedDate":"2024-01-21"},{"lineNumber":98,"author":{"gitId":"jerremyng"},"content":"            return new DeleteCommand(taskId);","lastModifiedDate":"2024-02-01"},{"lineNumber":99,"author":{"gitId":"jerremyng"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-21"},{"lineNumber":100,"author":{"gitId":"jerremyng"},"content":"            throw new IllegalParamException(\"I dont know which task you are trying to delete! Try a number\");","lastModifiedDate":"2024-02-09"},{"lineNumber":101,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":102,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":103,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":104,"author":{"gitId":"jerremyng"},"content":"    private static Command parseTodoCommand(String tokens) throws MissingInfoException {","lastModifiedDate":"2024-02-01"},{"lineNumber":105,"author":{"gitId":"jerremyng"},"content":"        if (tokens.trim().equals(\"\")) {","lastModifiedDate":"2024-01-21"},{"lineNumber":106,"author":{"gitId":"jerremyng"},"content":"            throw new MissingInfoException(\"Bro u gotta describe the task!\");","lastModifiedDate":"2024-02-02"},{"lineNumber":107,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":108,"author":{"gitId":"jerremyng"},"content":"        String taskName \u003d tokens.trim();","lastModifiedDate":"2024-01-21"},{"lineNumber":109,"author":{"gitId":"jerremyng"},"content":"        return new ToDoCommand(taskName);","lastModifiedDate":"2024-02-01"},{"lineNumber":110,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":111,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":112,"author":{"gitId":"jerremyng"},"content":"    private static Command parseDeadlineCommand(String tokens) throws MissingInfoException,","lastModifiedDate":"2024-02-01"},{"lineNumber":113,"author":{"gitId":"jerremyng"},"content":"                                                                      ParserException {","lastModifiedDate":"2024-02-01"},{"lineNumber":114,"author":{"gitId":"jerremyng"},"content":"        String[] parts \u003d tokens.split(\"/by\");","lastModifiedDate":"2024-01-21"},{"lineNumber":115,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":116,"author":{"gitId":"jerremyng"},"content":"        if (parts.length !\u003d 2) {","lastModifiedDate":"2024-01-21"},{"lineNumber":117,"author":{"gitId":"jerremyng"},"content":"            throw new ParserException(\"Looks like you are missing \u0027/by\u0027! Use \u0027/by\u0027 to tell me the deadline!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":118,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":119,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":120,"author":{"gitId":"jerremyng"},"content":"        String task \u003d parts[0].trim();","lastModifiedDate":"2024-01-21"},{"lineNumber":121,"author":{"gitId":"jerremyng"},"content":"        String deadlineString \u003d parts[1].trim();","lastModifiedDate":"2024-01-31"},{"lineNumber":122,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":123,"author":{"gitId":"jerremyng"},"content":"        //check if fields have values","lastModifiedDate":"2024-01-31"},{"lineNumber":124,"author":{"gitId":"jerremyng"},"content":"        if (task.isEmpty()) {","lastModifiedDate":"2024-01-21"},{"lineNumber":125,"author":{"gitId":"jerremyng"},"content":"            throw new MissingInfoException(\"You have to tell me the description too! Or I cant remember it!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":126,"author":{"gitId":"jerremyng"},"content":"        } else if (deadlineString.isEmpty()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":127,"author":{"gitId":"jerremyng"},"content":"            throw new MissingInfoException(\"You need a deadline! Or you will never get to it!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":128,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":129,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":130,"author":{"gitId":"jerremyng"},"content":"        //parse string","lastModifiedDate":"2024-01-31"},{"lineNumber":131,"author":{"gitId":"jerremyng"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":132,"author":{"gitId":"jerremyng"},"content":"            LocalDate deadline \u003d LocalDate.parse(deadlineString, Task.getDateFormat());","lastModifiedDate":"2024-01-31"},{"lineNumber":133,"author":{"gitId":"jerremyng"},"content":"            return new DeadlineCommand(task, deadline);","lastModifiedDate":"2024-02-01"},{"lineNumber":134,"author":{"gitId":"jerremyng"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":135,"author":{"gitId":"jerremyng"},"content":"            throw new ParserException(\"Invalid date/time format for the deadline!\"","lastModifiedDate":"2024-02-01"},{"lineNumber":136,"author":{"gitId":"jerremyng"},"content":"                    + \"Please use a dd MMM yyyy format (e.g. 21 Jan 2000).\");","lastModifiedDate":"2024-01-31"},{"lineNumber":137,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":138,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":139,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":140,"author":{"gitId":"jerremyng"},"content":"    private static Command parseEventCommand(String tokens) throws DukeException {","lastModifiedDate":"2024-01-21"},{"lineNumber":141,"author":{"gitId":"jerremyng"},"content":"        String[] parts \u003d tokens.split(\"/from|/to\");","lastModifiedDate":"2024-01-21"},{"lineNumber":142,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":143,"author":{"gitId":"jerremyng"},"content":"        if (parts.length !\u003d 3) {","lastModifiedDate":"2024-01-21"},{"lineNumber":144,"author":{"gitId":"jerremyng"},"content":"            throw new ParserException(\"Missing /from or /to! Use those to indicate times!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":145,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":146,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":147,"author":{"gitId":"jerremyng"},"content":"        String description \u003d parts[0].trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":148,"author":{"gitId":"jerremyng"},"content":"        String startString \u003d parts[1].trim();","lastModifiedDate":"2024-01-31"},{"lineNumber":149,"author":{"gitId":"jerremyng"},"content":"        String endString \u003d parts[2].trim();","lastModifiedDate":"2024-01-31"},{"lineNumber":150,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":151,"author":{"gitId":"jerremyng"},"content":"        if (tokens.indexOf(\"/from\") \u003e tokens.indexOf(\"/to\")) {","lastModifiedDate":"2024-01-21"},{"lineNumber":152,"author":{"gitId":"jerremyng"},"content":"            String temp \u003d startString;","lastModifiedDate":"2024-01-31"},{"lineNumber":153,"author":{"gitId":"jerremyng"},"content":"            startString \u003d endString;","lastModifiedDate":"2024-01-31"},{"lineNumber":154,"author":{"gitId":"jerremyng"},"content":"            endString \u003d temp;","lastModifiedDate":"2024-01-31"},{"lineNumber":155,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":156,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":157,"author":{"gitId":"jerremyng"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":158,"author":{"gitId":"jerremyng"},"content":"            throw new MissingInfoException(\"Tasks needs a name! Or I cant remember it!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":159,"author":{"gitId":"jerremyng"},"content":"        } else if (startString.isEmpty()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":160,"author":{"gitId":"jerremyng"},"content":"            throw new MissingInfoException(\"Please tell me when it starts!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":161,"author":{"gitId":"jerremyng"},"content":"        } else if (endString.isEmpty()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":162,"author":{"gitId":"jerremyng"},"content":"            throw new MissingInfoException(\"Please tell me when it ends!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":163,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":164,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":165,"author":{"gitId":"jerremyng"},"content":"        //parse string","lastModifiedDate":"2024-01-31"},{"lineNumber":166,"author":{"gitId":"jerremyng"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":167,"author":{"gitId":"jerremyng"},"content":"            LocalDate startDate \u003d LocalDate.parse(startString, Task.getDateFormat());","lastModifiedDate":"2024-01-31"},{"lineNumber":168,"author":{"gitId":"jerremyng"},"content":"            LocalDate endDate \u003d LocalDate.parse(endString, Task.getDateFormat());","lastModifiedDate":"2024-01-31"},{"lineNumber":169,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":170,"author":{"gitId":"jerremyng"},"content":"            return new EventCommand(description, startDate, endDate);","lastModifiedDate":"2024-02-01"},{"lineNumber":171,"author":{"gitId":"jerremyng"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":172,"author":{"gitId":"jerremyng"},"content":"            throw new ParserException(\"Invalid date/time format for the deadline!\"","lastModifiedDate":"2024-02-01"},{"lineNumber":173,"author":{"gitId":"jerremyng"},"content":"                    + \"Please use a dd MMM yyyy format (e.g. 21 Jan 2000).\");","lastModifiedDate":"2024-01-31"},{"lineNumber":174,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":175,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":176,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":177,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":178,"author":{"gitId":"jerremyng"},"content":"     * Parses find commands from user and returns a command object.","lastModifiedDate":"2024-02-03"},{"lineNumber":179,"author":{"gitId":"jerremyng"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":180,"author":{"gitId":"jerremyng"},"content":"     * @param tokens String of user input.","lastModifiedDate":"2024-02-03"},{"lineNumber":181,"author":{"gitId":"jerremyng"},"content":"     * @return A FindCommand object that can be executed.","lastModifiedDate":"2024-02-03"},{"lineNumber":182,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":183,"author":{"gitId":"jerremyng"},"content":"    private static Command parseFindCommand(String tokens) {","lastModifiedDate":"2024-02-03"},{"lineNumber":184,"author":{"gitId":"jerremyng"},"content":"        String searchWord \u003d tokens.trim().toLowerCase();","lastModifiedDate":"2024-02-03"},{"lineNumber":185,"author":{"gitId":"jerremyng"},"content":"        return new FindCommand(searchWord);","lastModifiedDate":"2024-02-03"},{"lineNumber":186,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":187,"author":{"gitId":"jerremyng"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"jerremyng":187}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerremyng"},"content":"package duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"jerremyng"},"content":"import java.io.File;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"jerremyng"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"jerremyng"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"jerremyng"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"jerremyng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"jerremyng"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"jerremyng"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"jerremyng"},"content":"import duke.exceptions.StorageException;","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"jerremyng"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"jerremyng"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"jerremyng"},"content":"import duke.task.TaskType;","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"jerremyng"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"jerremyng"},"content":" * Helper class to manage all storage related methods of duke.","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"jerremyng"},"content":" * This class creates a new directory in current working directory.","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"jerremyng"},"content":" * It will add a file which stores information on the current tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"jerremyng"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"jerremyng"},"content":"public class Storage {","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"jerremyng"},"content":"    private File file;","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"jerremyng"},"content":"    /** The filepath to the data file stored as a string */","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"jerremyng"},"content":"    private String filePath;","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"jerremyng"},"content":"     * Constructs a Storage object with initialization of directory/file if needed.","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"jerremyng"},"content":"     * Verifies if data file exists, and if not, will create new file/directory.","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"jerremyng"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"jerremyng"},"content":"     * @param filePath String specifying desired filepath of data file.","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"jerremyng"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"jerremyng"},"content":"        this.file \u003d new File(filePath);","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"jerremyng"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":37,"author":{"gitId":"jerremyng"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"jerremyng"},"content":"            // Check if the parent directory exists; if not, create it","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"jerremyng"},"content":"            File parentDir \u003d file.getParentFile();","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"jerremyng"},"content":"            if (!parentDir.exists()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"jerremyng"},"content":"                if (parentDir.mkdirs()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"jerremyng"},"content":"                    System.out.println(\"Created parent directory at: \" + parentDir.getAbsolutePath());","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"jerremyng"},"content":"                } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"jerremyng"},"content":"                    throw new RuntimeException(\"Error creating parent directory at: \" + parentDir.getAbsolutePath());","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"jerremyng"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"jerremyng"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"jerremyng"},"content":"            // Check if file exist, if not create","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"jerremyng"},"content":"            if (file.createNewFile()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"jerremyng"},"content":"                System.out.println(\"Data not found, created new file at: \" + filePath);","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"jerremyng"},"content":"            } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"jerremyng"},"content":"                System.out.println(\"Data found at: \" + filePath);","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"jerremyng"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"jerremyng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"jerremyng"},"content":"            throw new RuntimeException(\"Error creating file: \" + e.getMessage(), e);","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"jerremyng"},"content":"     * Saves contents of taskList to memory.","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"jerremyng"},"content":"     * Tasks objects are stored as a string, obtained from calling task.getTokens().","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"jerremyng"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"jerremyng"},"content":"     * @param taskList TaskList instance to save.","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"jerremyng"},"content":"    public void save(TaskList taskList) {","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"jerremyng"},"content":"        assert taskList !\u003d null : \"Task list cannot be null\";","lastModifiedDate":"2024-02-15"},{"lineNumber":67,"author":{"gitId":"jerremyng"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"jerremyng"},"content":"            FileWriter fw \u003d new FileWriter(this.filePath);","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"jerremyng"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"jerremyng"},"content":"                fw.write(task.getTokens() + System.lineSeparator());","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"jerremyng"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"jerremyng"},"content":"            fw.close();","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"jerremyng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"jerremyng"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"jerremyng"},"content":"     * Loads taskList from datafile and returns as a TaskList object.","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"jerremyng"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"jerremyng"},"content":"     * @return TaskList object.","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"jerremyng"},"content":"     * @throws StorageException If file not found.","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"jerremyng"},"content":"    public TaskList load() throws StorageException {","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"jerremyng"},"content":"        assert this.file !\u003d null : \"File cannot be null\";","lastModifiedDate":"2024-02-15"},{"lineNumber":86,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":87,"author":{"gitId":"jerremyng"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"jerremyng"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"jerremyng"},"content":"            Scanner s \u003d new Scanner(this.file);","lastModifiedDate":"2024-01-31"},{"lineNumber":91,"author":{"gitId":"jerremyng"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":92,"author":{"gitId":"jerremyng"},"content":"                Task nexTask \u003d parseLineFromStorage(s.nextLine());","lastModifiedDate":"2024-02-09"},{"lineNumber":93,"author":{"gitId":"jerremyng"},"content":"                taskList.add(nexTask);","lastModifiedDate":"2024-02-09"},{"lineNumber":94,"author":{"gitId":"jerremyng"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":95,"author":{"gitId":"jerremyng"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"jerremyng"},"content":"            throw new StorageException(\"File / Directory does not exist.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":98,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":99,"author":{"gitId":"jerremyng"},"content":"        return taskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":101,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":102,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":103,"author":{"gitId":"jerremyng"},"content":"     * Parses string input and returns the Task which string represents.","lastModifiedDate":"2024-02-03"},{"lineNumber":104,"author":{"gitId":"jerremyng"},"content":"     * This method rebuilds task objects from a string value.","lastModifiedDate":"2024-02-03"},{"lineNumber":105,"author":{"gitId":"jerremyng"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":106,"author":{"gitId":"jerremyng"},"content":"     * @param tokens String containing tokens of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":107,"author":{"gitId":"jerremyng"},"content":"     * @return Task object.","lastModifiedDate":"2024-02-03"},{"lineNumber":108,"author":{"gitId":"jerremyng"},"content":"     * @throws StorageException If data is corrupted and unable to be parsed.","lastModifiedDate":"2024-02-03"},{"lineNumber":109,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":110,"author":{"gitId":"jerremyng"},"content":"    private Task parseLineFromStorage(String tokens) throws StorageException {","lastModifiedDate":"2024-02-01"},{"lineNumber":111,"author":{"gitId":"jerremyng"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":112,"author":{"gitId":"jerremyng"},"content":"            assert tokens !\u003d null : \"Tokens cannot be null\";","lastModifiedDate":"2024-02-15"},{"lineNumber":113,"author":{"gitId":"jerremyng"},"content":"            String[] data \u003d tokens.split(\",\");","lastModifiedDate":"2024-01-31"},{"lineNumber":114,"author":{"gitId":"jerremyng"},"content":"            switch (data[0]) {","lastModifiedDate":"2024-01-31"},{"lineNumber":115,"author":{"gitId":"jerremyng"},"content":"            case \"TODO\":","lastModifiedDate":"2024-02-01"},{"lineNumber":116,"author":{"gitId":"jerremyng"},"content":"                return Task.createTask(TaskType.TODO, data[1], Boolean.parseBoolean(data[2]));","lastModifiedDate":"2024-02-01"},{"lineNumber":117,"author":{"gitId":"jerremyng"},"content":"            case \"EVENT\":","lastModifiedDate":"2024-02-01"},{"lineNumber":118,"author":{"gitId":"jerremyng"},"content":"                return Task.createTask(TaskType.EVENT, data[1], Boolean.parseBoolean(data[2]),","lastModifiedDate":"2024-02-01"},{"lineNumber":119,"author":{"gitId":"jerremyng"},"content":"                        LocalDate.parse(data[3], Task.getDateFormat()),","lastModifiedDate":"2024-01-31"},{"lineNumber":120,"author":{"gitId":"jerremyng"},"content":"                        LocalDate.parse(data[4], Task.getDateFormat()));","lastModifiedDate":"2024-01-31"},{"lineNumber":121,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":122,"author":{"gitId":"jerremyng"},"content":"            case \"DEADLINE\":","lastModifiedDate":"2024-02-01"},{"lineNumber":123,"author":{"gitId":"jerremyng"},"content":"                return Task.createTask(TaskType.DEADLINE, data[1], Boolean.parseBoolean(data[2]),","lastModifiedDate":"2024-02-01"},{"lineNumber":124,"author":{"gitId":"jerremyng"},"content":"                        LocalDate.parse(data[3], Task.getDateFormat()));","lastModifiedDate":"2024-02-01"},{"lineNumber":125,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":126,"author":{"gitId":"jerremyng"},"content":"            default:","lastModifiedDate":"2024-01-31"},{"lineNumber":127,"author":{"gitId":"jerremyng"},"content":"                throw new StorageException(\"Data file is corrupted, task type does not exist\");","lastModifiedDate":"2024-02-01"},{"lineNumber":128,"author":{"gitId":"jerremyng"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":129,"author":{"gitId":"jerremyng"},"content":"        } catch (ArrayIndexOutOfBoundsException | DateTimeParseException | IllegalArgumentException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":130,"author":{"gitId":"jerremyng"},"content":"            throw new StorageException(\"Data file is corrupted, error parsing data: \" + e.getMessage());","lastModifiedDate":"2024-02-01"},{"lineNumber":131,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":132,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":133,"author":{"gitId":"jerremyng"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"jerremyng":133}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerremyng"},"content":"package duke.command;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"jerremyng"},"content":"import duke.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"jerremyng"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"jerremyng"},"content":"/** Command to execute bye instruction. */","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"jerremyng"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"jerremyng"},"content":"     * Executes the command, saves to storage and display parting message.","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"jerremyng"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"jerremyng"},"content":"     * @param list TaskList to be saved.","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"jerremyng"},"content":"     * @param storage To update storage with updated list.","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"jerremyng"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"jerremyng"},"content":"    public void execute(TaskList list, Storage storage) {","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"jerremyng"},"content":"        storage.save(list);","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"jerremyng"},"content":"        super.setResponse(\"Bye bye! Thanks for using me! You are shrek-elicious \"","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"jerremyng"},"content":"                + \"I will remember the tasks you have to do!\");","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":21,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"jerremyng"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"jerremyng":22}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerremyng"},"content":"package duke.command;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"jerremyng"},"content":"import duke.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"jerremyng"},"content":"import duke.exceptions.IllegalParamException;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"jerremyng"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"jerremyng"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"jerremyng"},"content":" * Commands are a family of classes that represent commands from the user.","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"jerremyng"},"content":" * They have a defining execute method.","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"jerremyng"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"jerremyng"},"content":"public abstract class Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"jerremyng"},"content":"    private String response \u003d \"\";","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"jerremyng"},"content":"     * Executes actions to complete the duke.command.","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"jerremyng"},"content":"     * Also updates response field, showing result of executing command.","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"jerremyng"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"jerremyng"},"content":"     * @param list a duke.command.task.TaskList object containing current tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"jerremyng"},"content":"     * @param storage duke.Storage object. For saving changes to memory.","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"jerremyng"},"content":"    public abstract void execute(TaskList list, Storage storage) throws IllegalParamException;","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"jerremyng"},"content":"     * Returns a response as a result of executing command.","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"jerremyng"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"jerremyng"},"content":"     * @return Response as a result of executing command.","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"jerremyng"},"content":"    public String getResponse() {","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"jerremyng"},"content":"        if (this.response.equals(\"\")) {","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"jerremyng"},"content":"            throw new RuntimeException(\"Response not available yet! Something went wrong.\");","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"jerremyng"},"content":"        return this.response;","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"jerremyng"},"content":"    public void setResponse(String response) {","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"jerremyng"},"content":"        this.response \u003d response;","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"jerremyng"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"jerremyng":38}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerremyng"},"content":"package duke.command;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"jerremyng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"jerremyng"},"content":"import duke.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"jerremyng"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"jerremyng"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"jerremyng"},"content":"import duke.task.TaskType;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"jerremyng"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"jerremyng"},"content":" * Command to create a new Deadline task.","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"jerremyng"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"jerremyng"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"jerremyng"},"content":"    private String description;","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"jerremyng"},"content":"    private LocalDate by;","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"jerremyng"},"content":"     * Contructs a deadline command.","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"jerremyng"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"jerremyng"},"content":"     * @param description Description of task.","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"jerremyng"},"content":"     * @param by Due date of deadline. LocalDate object.","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"jerremyng"},"content":"    public DeadlineCommand(String description, LocalDate by) {","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"jerremyng"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"jerremyng"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"jerremyng"},"content":"     * Executes the command, creating a new task, adding it to the list, saving to storage.","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"jerremyng"},"content":"     * Also displays messages to user.","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"jerremyng"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"jerremyng"},"content":"     * @param list TaskList object containing current tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"jerremyng"},"content":"     * @param storage To update storage with new deadline task.","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"jerremyng"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"jerremyng"},"content":"    public void execute(TaskList list, Storage storage) {","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"jerremyng"},"content":"        Task newDeadline \u003d Task.createTask(TaskType.DEADLINE, description, false, by);","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"jerremyng"},"content":"        list.add(newDeadline);","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"jerremyng"},"content":"        storage.save(list);","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"jerremyng"},"content":"        super.setResponse(\"added new deadline: \" + newDeadline","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"jerremyng"},"content":"                + \"\\nLooks like you have \" + list.countTasks() + \" things left to do!\");","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"jerremyng"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"jerremyng":43}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerremyng"},"content":"package duke.command;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"jerremyng"},"content":"import duke.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"jerremyng"},"content":"import duke.exceptions.IllegalParamException;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"jerremyng"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"jerremyng"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"jerremyng"},"content":" * Represents a command to delete a task.","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"jerremyng"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"jerremyng"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"jerremyng"},"content":"    private int id;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"jerremyng"},"content":"     * Constructs command.","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"jerremyng"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"jerremyng"},"content":"     * @param id Index of task to be deleted.","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"jerremyng"},"content":"    public DeleteCommand(int id) {","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"jerremyng"},"content":"        this.id \u003d id;","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"jerremyng"},"content":"     * Executes the command, deleting a task, and saving to storage.","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"jerremyng"},"content":"     * Also updates response attribute.","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"jerremyng"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"jerremyng"},"content":"     * @param list TaskList object containing current tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"jerremyng"},"content":"     * @param storage To update storage with updated list.","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"jerremyng"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"jerremyng"},"content":"    public void execute(TaskList list, Storage storage) throws IllegalParamException {","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"jerremyng"},"content":"        list.deleteTask(this.id);","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"jerremyng"},"content":"        storage.save(list);","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"jerremyng"},"content":"        super.setResponse(\"Looks like you have \" + list.countTasks() + \" things left to do!\");","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"jerremyng"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"jerremyng":37}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerremyng"},"content":"package duke.command;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"jerremyng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"jerremyng"},"content":"import duke.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"jerremyng"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"jerremyng"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"jerremyng"},"content":"import duke.task.TaskType;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"jerremyng"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"jerremyng"},"content":" * Command to create a new event.","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"jerremyng"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"jerremyng"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"jerremyng"},"content":"    private String description;","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"jerremyng"},"content":"    private LocalDate start;","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"jerremyng"},"content":"    private LocalDate end;","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"jerremyng"},"content":"     * Constructs a new EventCommand.","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"jerremyng"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"jerremyng"},"content":"     * @param description Description of event to be created.","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"jerremyng"},"content":"     * @param start Start date of event.","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"jerremyng"},"content":"     * @param end End date of event.","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"jerremyng"},"content":"    public EventCommand(String description, LocalDate start, LocalDate end) {","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"jerremyng"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"jerremyng"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"jerremyng"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"jerremyng"},"content":"     * Executes the command, creating a new event, adding it to the list, saving to storage.","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"jerremyng"},"content":"     * Also updates response","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"jerremyng"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"jerremyng"},"content":"     * @param list TaskList object containing current tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"jerremyng"},"content":"     * @param storage To update storage with new event task.","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"jerremyng"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"jerremyng"},"content":"    public void execute(TaskList list, Storage storage) {","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"jerremyng"},"content":"        Task newEvent \u003d Task.createTask(TaskType.EVENT, description, false, start, end);","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"jerremyng"},"content":"        list.add(newEvent);","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"jerremyng"},"content":"        storage.save(list);","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"jerremyng"},"content":"        super.setResponse(\"added new event: \" + newEvent","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"jerremyng"},"content":"                + \"\\nLooks like you have \" + list.countTasks() + \" things left to do!\");","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"jerremyng"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"jerremyng":46}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerremyng"},"content":"package duke.command;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"jerremyng"},"content":"import duke.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"jerremyng"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"jerremyng"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"jerremyng"},"content":" * Represents a command to find a phrase/word.","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"jerremyng"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"jerremyng"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"jerremyng"},"content":"    /** Word to find */","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"jerremyng"},"content":"    private String searchWord;","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"jerremyng"},"content":"    public FindCommand(String searchWord) {","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"jerremyng"},"content":"        this.searchWord \u003d searchWord;","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"jerremyng"},"content":"     * Executes command, retrieving tasks from list and updating response.","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"jerremyng"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"jerremyng"},"content":"     * @param list TaskList object to search from.","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"jerremyng"},"content":"     * @param storage Not used.","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"jerremyng"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"jerremyng"},"content":"    public void execute(TaskList list, Storage storage) {","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"jerremyng"},"content":"        String out \u003d list.find(searchWord);","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"jerremyng"},"content":"        super.setResponse(out);","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"jerremyng"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"jerremyng":29}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerremyng"},"content":"package duke.command;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"jerremyng"},"content":"import duke.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"jerremyng"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"jerremyng"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"jerremyng"},"content":" * Represents a command show list of tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"jerremyng"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"jerremyng"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"jerremyng"},"content":"     * Executes the command, updating response.","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"jerremyng"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"jerremyng"},"content":"     * @param list TaskList object containing current tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"jerremyng"},"content":"     * @param storage Not used","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"jerremyng"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"jerremyng"},"content":"    public void execute(TaskList list, Storage storage) {","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"jerremyng"},"content":"        super.setResponse(list.toString());","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"jerremyng"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"jerremyng":20}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerremyng"},"content":"package duke.command;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"jerremyng"},"content":"import duke.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"jerremyng"},"content":"import duke.exceptions.IllegalParamException;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"jerremyng"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"jerremyng"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"jerremyng"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"jerremyng"},"content":" * Represents a command to mark a specified task.","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"jerremyng"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"jerremyng"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"jerremyng"},"content":"    private int index;","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"jerremyng"},"content":"     * Constructs a mark command.","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"jerremyng"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"jerremyng"},"content":"     * @param index Task index to be unmarked.","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"jerremyng"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"jerremyng"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"jerremyng"},"content":"     * Executes the command, marking task at specified index as done.","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"jerremyng"},"content":"     * Also updates response attribute.","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"jerremyng"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"jerremyng"},"content":"     * @param list TaskList object containing current tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"jerremyng"},"content":"     * @param storage To update storage with marked status.","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"jerremyng"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"jerremyng"},"content":"    public void execute(TaskList list, Storage storage) throws IllegalParamException {","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"jerremyng"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"jerremyng"},"content":"            Task done \u003d list.getTask(index);","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"jerremyng"},"content":"            done.setDone();","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"jerremyng"},"content":"            storage.save(list);","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"jerremyng"},"content":"            super.setResponse(\"Thats sick! Great work, marked as done!\\n\" + done);","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"jerremyng"},"content":"        } catch (IllegalParamException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"jerremyng"},"content":"            throw new IllegalParamException(e.getMessage() + \" Unable to mark duke.command.task!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"jerremyng"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"jerremyng":40}},{"path":"src/main/java/duke/command/SortCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerremyng"},"content":"package duke.command;","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"jerremyng"},"content":"import duke.Storage;","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"jerremyng"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"jerremyng"},"content":"/** Command to execute sort instruction. */","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"jerremyng"},"content":"public class SortCommand extends Command {","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"jerremyng"},"content":"     * Executes the command, saves to storage and display parting message.","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"jerremyng"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"jerremyng"},"content":"     * @param list TaskList to be saved.","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"jerremyng"},"content":"     * @param storage To update storage with updated list.","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"jerremyng"},"content":"    @Override","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"jerremyng"},"content":"    public void execute(TaskList list, Storage storage) {","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"jerremyng"},"content":"        list.sort();","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"jerremyng"},"content":"        storage.save(list);","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"jerremyng"},"content":"        super.setResponse(\"List has been sorted by dates!\\n\" + list);","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"jerremyng"},"content":"}","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"jerremyng":21}},{"path":"src/main/java/duke/command/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerremyng"},"content":"package duke.command;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"jerremyng"},"content":"import duke.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"jerremyng"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"jerremyng"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"jerremyng"},"content":"import duke.task.TaskType;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"jerremyng"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"jerremyng"},"content":" * Command to create a new todo task.","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"jerremyng"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"jerremyng"},"content":"public class ToDoCommand extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"jerremyng"},"content":"    private String description;","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"jerremyng"},"content":"     * Constructs a ToDo command.","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"jerremyng"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"jerremyng"},"content":"     * @param description Description of task.","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"jerremyng"},"content":"     * */","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"jerremyng"},"content":"    public ToDoCommand(String description) {","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"jerremyng"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"jerremyng"},"content":"     * Executes the command, creating a new todo, adding it to the list, saving to storage.","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"jerremyng"},"content":"     * Also updates response.","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"jerremyng"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"jerremyng"},"content":"     * @param list TaskList object containing current tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"jerremyng"},"content":"     * @param storage To update storage with new todo task.","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"jerremyng"},"content":"    public void execute(TaskList list, Storage storage) {","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"jerremyng"},"content":"        Task newTask \u003d Task.createTask(TaskType.TODO, this.description, false);","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"jerremyng"},"content":"        list.add(newTask);","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"jerremyng"},"content":"        storage.save(list);","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"jerremyng"},"content":"        super.setResponse(\"added new ToDo: \" + newTask","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"jerremyng"},"content":"                + \"\\nLooks like you have \" + list.countTasks() + \" things left to do!\");","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"jerremyng"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"jerremyng":38}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerremyng"},"content":"package duke.command;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"jerremyng"},"content":"import duke.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"jerremyng"},"content":"import duke.exceptions.IllegalParamException;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"jerremyng"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"jerremyng"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"jerremyng"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"jerremyng"},"content":" * Represents a command to unmark a specified task.","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"jerremyng"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"jerremyng"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"jerremyng"},"content":"    private int index;","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"jerremyng"},"content":"     * Constructs a unmark command.","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"jerremyng"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"jerremyng"},"content":"     * @param index Task index to be unmarked.","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"jerremyng"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"jerremyng"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"jerremyng"},"content":"     * Executes the command, marking task at specified index as not done.","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"jerremyng"},"content":"     * Updates response.","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"jerremyng"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"jerremyng"},"content":"     * @param list TaskList object containing current tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"jerremyng"},"content":"     * @param storage To update storage with not marked status.","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"jerremyng"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"jerremyng"},"content":"    public void execute(TaskList list, Storage storage) throws IllegalParamException {","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"jerremyng"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"jerremyng"},"content":"            Task notDone \u003d list.getTask(this.index);","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"jerremyng"},"content":"            notDone.setNotDone();","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"jerremyng"},"content":"            storage.save(list);","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"jerremyng"},"content":"            super.setResponse(\"Awh why uncheck me :( Its ok, it is what it is!\\n\" + notDone);","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"jerremyng"},"content":"        } catch (IllegalParamException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"jerremyng"},"content":"            throw new IllegalParamException(e.getMessage() + \" Unable to unmark task!\");","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"jerremyng"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"jerremyng":42}},{"path":"src/main/java/duke/controllers/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerremyng"},"content":"package duke.controllers;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"jerremyng"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"jerremyng"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"jerremyng"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"jerremyng"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"jerremyng"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"jerremyng"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"jerremyng"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"jerremyng"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"jerremyng"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"jerremyng"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"jerremyng"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"jerremyng"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"jerremyng"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"jerremyng"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"jerremyng"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"jerremyng"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"jerremyng"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"jerremyng"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"jerremyng"},"content":"    @FXML","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"jerremyng"},"content":"    private Text dialog;","lastModifiedDate":"2024-02-21"},{"lineNumber":25,"author":{"gitId":"jerremyng"},"content":"    @FXML","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"jerremyng"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"jerremyng"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"jerremyng"},"content":"        try {","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"jerremyng"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"jerremyng"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"jerremyng"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"jerremyng"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"jerremyng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"jerremyng"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"jerremyng"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"jerremyng"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"jerremyng"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"jerremyng"},"content":"    private void flip() {","lastModifiedDate":"2024-02-09"},{"lineNumber":46,"author":{"gitId":"jerremyng"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"jerremyng"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-09"},{"lineNumber":48,"author":{"gitId":"jerremyng"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-09"},{"lineNumber":49,"author":{"gitId":"jerremyng"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":51,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":52,"author":{"gitId":"jerremyng"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-09"},{"lineNumber":53,"author":{"gitId":"jerremyng"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-09"},{"lineNumber":54,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":55,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":56,"author":{"gitId":"jerremyng"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-02-09"},{"lineNumber":57,"author":{"gitId":"jerremyng"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-09"},{"lineNumber":58,"author":{"gitId":"jerremyng"},"content":"        db.flip();","lastModifiedDate":"2024-02-09"},{"lineNumber":59,"author":{"gitId":"jerremyng"},"content":"        return db;","lastModifiedDate":"2024-02-09"},{"lineNumber":60,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":61,"author":{"gitId":"jerremyng"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"jerremyng":61}},{"path":"src/main/java/duke/controllers/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerremyng"},"content":"package duke.controllers;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"jerremyng"},"content":"import duke.Duke;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"jerremyng"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"jerremyng"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"jerremyng"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"jerremyng"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"jerremyng"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"jerremyng"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"jerremyng"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"jerremyng"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"jerremyng"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"jerremyng"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"jerremyng"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"jerremyng"},"content":"    @FXML","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"jerremyng"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"jerremyng"},"content":"    @FXML","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"jerremyng"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"jerremyng"},"content":"    @FXML","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"jerremyng"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"jerremyng"},"content":"    @FXML","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"jerremyng"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"jerremyng"},"content":"    private Duke duke;","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"jerremyng"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/fiona.png\"));","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"jerremyng"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/shrek.jpeg\"));","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"jerremyng"},"content":"    @FXML","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"jerremyng"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"jerremyng"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"jerremyng"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"jerremyng"},"content":"        duke \u003d d;","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"jerremyng"},"content":"     * Displays a greeting message to user in GUI.","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"jerremyng"},"content":"    public void greetUser() {","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"jerremyng"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"jerremyng"},"content":"                DialogBox.getDukeDialog(this.duke.getGreeting(), dukeImage));","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":46,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":48,"author":{"gitId":"jerremyng"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-09"},{"lineNumber":49,"author":{"gitId":"jerremyng"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":51,"author":{"gitId":"jerremyng"},"content":"    @FXML","lastModifiedDate":"2024-02-09"},{"lineNumber":52,"author":{"gitId":"jerremyng"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-09"},{"lineNumber":53,"author":{"gitId":"jerremyng"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-09"},{"lineNumber":54,"author":{"gitId":"jerremyng"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2024-02-09"},{"lineNumber":55,"author":{"gitId":"jerremyng"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-09"},{"lineNumber":56,"author":{"gitId":"jerremyng"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-09"},{"lineNumber":57,"author":{"gitId":"jerremyng"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2024-02-09"},{"lineNumber":58,"author":{"gitId":"jerremyng"},"content":"        );","lastModifiedDate":"2024-02-09"},{"lineNumber":59,"author":{"gitId":"jerremyng"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-09"},{"lineNumber":60,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":61,"author":{"gitId":"jerremyng"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"jerremyng":61}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerremyng"},"content":"package duke.exceptions;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"jerremyng"},"content":"/** Parent class for duke exceptions. */","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"jerremyng"},"content":"public abstract class DukeException extends Exception {","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"jerremyng"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"jerremyng"},"content":"        super(message);","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"jerremyng"},"content":"}","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"jerremyng":10}},{"path":"src/main/java/duke/exceptions/IllegalParamException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerremyng"},"content":"package duke.exceptions;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"jerremyng"},"content":"/** Exception to show illegal param entered. */","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"jerremyng"},"content":"public class IllegalParamException extends DukeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"jerremyng"},"content":"    public IllegalParamException(String message) {","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"jerremyng"},"content":"        super(message);","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"jerremyng"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"jerremyng":8}},{"path":"src/main/java/duke/exceptions/MissingInfoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerremyng"},"content":"package duke.exceptions;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"jerremyng"},"content":"/** Exception to show information missing. */","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"jerremyng"},"content":"public class MissingInfoException extends DukeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"jerremyng"},"content":"    public MissingInfoException(String message) {","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"jerremyng"},"content":"        super(message);","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"jerremyng"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"jerremyng":8}},{"path":"src/main/java/duke/exceptions/ParserException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerremyng"},"content":"package duke.exceptions;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"jerremyng"},"content":"/** Exception to show parser error. */","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"jerremyng"},"content":"public class ParserException extends DukeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"jerremyng"},"content":"    public ParserException(String message) {","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"jerremyng"},"content":"        super(message);","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"jerremyng"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"jerremyng":8}},{"path":"src/main/java/duke/exceptions/StorageException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerremyng"},"content":"package duke.exceptions;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"jerremyng"},"content":"/** Exception to show storage error. */","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"jerremyng"},"content":"public class StorageException extends DukeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"jerremyng"},"content":"    public StorageException(String message) {","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"jerremyng"},"content":"        super(message);","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"jerremyng"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"jerremyng":8}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerremyng"},"content":"package duke.task;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"jerremyng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"jerremyng"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"jerremyng"},"content":" * Subclass of task that represents deadlines.","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"jerremyng"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"jerremyng"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"jerremyng"},"content":"    private LocalDate by;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"jerremyng"},"content":"     * Constructs deadline object.","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"jerremyng"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"jerremyng"},"content":"     * @param description Description of task.","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"jerremyng"},"content":"     * @param isDone Boolean value representing completion status.","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"jerremyng"},"content":"     * @param by Due date of task. LocalDate object.","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"jerremyng"},"content":"    public Deadline(String description, boolean isDone, LocalDate by) {","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"jerremyng"},"content":"        super(description, isDone);","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"jerremyng"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"jerremyng"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"jerremyng"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"jerremyng"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.by.format(Task.getDateFormat()) + \")\";","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"jerremyng"},"content":"     * @inheritDoc","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"jerremyng"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"jerremyng"},"content":"     * @return description + isDone + from + to","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"jerremyng"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"jerremyng"},"content":"    public String getTokens() {","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"jerremyng"},"content":"        return String.join(\",\", TaskType.DEADLINE.toString(),","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"jerremyng"},"content":"                super.getTokens(), this.by.format(Task.getDateFormat()));","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":39,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":40,"author":{"gitId":"jerremyng"},"content":"     * @inheritDoc","lastModifiedDate":"2024-02-15"},{"lineNumber":41,"author":{"gitId":"jerremyng"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":42,"author":{"gitId":"jerremyng"},"content":"     * @return Deadline date.","lastModifiedDate":"2024-02-15"},{"lineNumber":43,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":44,"author":{"gitId":"jerremyng"},"content":"    @Override","lastModifiedDate":"2024-02-15"},{"lineNumber":45,"author":{"gitId":"jerremyng"},"content":"    public LocalDate getStartDateTime() {","lastModifiedDate":"2024-02-15"},{"lineNumber":46,"author":{"gitId":"jerremyng"},"content":"        return this.by;","lastModifiedDate":"2024-02-15"},{"lineNumber":47,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":48,"author":{"gitId":"jerremyng"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"jerremyng":48}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerremyng"},"content":"package duke.task;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"jerremyng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"jerremyng"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"jerremyng"},"content":" * Subclass of task that represents events.","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"jerremyng"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"jerremyng"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"jerremyng"},"content":"    private LocalDate from;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"jerremyng"},"content":"    private LocalDate to;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"jerremyng"},"content":"     * Constructs Event object.","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"jerremyng"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"jerremyng"},"content":"     * @param description Description of event.","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"jerremyng"},"content":"     * @param isDone Boolean value symbolizing completion status.","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"jerremyng"},"content":"     * @param from Starting date of event. LocalDate object.","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"jerremyng"},"content":"     * @param to End date of event. LocalDate object.","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"jerremyng"},"content":"    public Event(String description, boolean isDone, LocalDate from, LocalDate to) {","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"jerremyng"},"content":"        super(description, isDone);","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"jerremyng"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"jerremyng"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"jerremyng"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"jerremyng"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"jerremyng"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.from.format(Task.getDateFormat())","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"jerremyng"},"content":"                + \" to: \" + this.to.format(Task.getDateFormat()) + \")\";","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"jerremyng"},"content":"     * @inheritDoc","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"jerremyng"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"jerremyng"},"content":"     * @return description + isDone + from + to","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"jerremyng"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"jerremyng"},"content":"    public String getTokens() {","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"jerremyng"},"content":"        return String.join(\",\", TaskType.EVENT.toString(),","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"jerremyng"},"content":"                super.getTokens(),","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"jerremyng"},"content":"                this.from.format(Task.getDateFormat()),","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"jerremyng"},"content":"                this.to.format(Task.getDateFormat()));","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":44,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":45,"author":{"gitId":"jerremyng"},"content":"     * @inheritDoc","lastModifiedDate":"2024-02-15"},{"lineNumber":46,"author":{"gitId":"jerremyng"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":47,"author":{"gitId":"jerremyng"},"content":"     * @return Start date of event.","lastModifiedDate":"2024-02-15"},{"lineNumber":48,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":49,"author":{"gitId":"jerremyng"},"content":"    @Override","lastModifiedDate":"2024-02-15"},{"lineNumber":50,"author":{"gitId":"jerremyng"},"content":"    public LocalDate getStartDateTime() {","lastModifiedDate":"2024-02-15"},{"lineNumber":51,"author":{"gitId":"jerremyng"},"content":"        return this.from;","lastModifiedDate":"2024-02-15"},{"lineNumber":52,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":53,"author":{"gitId":"jerremyng"},"content":"}","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"jerremyng":54}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerremyng"},"content":"package duke.task;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"jerremyng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"jerremyng"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"jerremyng"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"jerremyng"},"content":" * Task class represents a generic task with a description and completion status.","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"jerremyng"},"content":" * Subclasses (ToDo, Event, Deadline) provide specific implementations.","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"jerremyng"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"jerremyng"},"content":"public abstract class Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"jerremyng"},"content":"    /** Format style for dates of Tasks. */","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"jerremyng"},"content":"    private static final DateTimeFormatter DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"jerremyng"},"content":"    /** Description of duke.command.task as a string */","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"jerremyng"},"content":"    private String description;","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"jerremyng"},"content":"    /** Boolean Flag of whether the duke.command.task is done */","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"jerremyng"},"content":"    private boolean isDone;","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"jerremyng"},"content":"     * Constructs a task.","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"jerremyng"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"jerremyng"},"content":"     * @param description Brief description of task.","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"jerremyng"},"content":"     * @param isDone      String representing boolean value.","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"jerremyng"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"jerremyng"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"jerremyng"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"jerremyng"},"content":"     * Creates instances of Task subclasses.","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"jerremyng"},"content":"     * This factory method is used to create the appropriate subclass based on type, description, and completion status.","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"jerremyng"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"jerremyng"},"content":"     * @param type            The type of task to create (ToDo, Event, Deadline).","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"jerremyng"},"content":"     * @param description     A brief description of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"jerremyng"},"content":"     * @param isDone          The completion status of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"jerremyng"},"content":"     * @param dates           Number of dates params are specific to the task type.","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"jerremyng"},"content":"     *                        For EVENTS: pass two LocalDate objects representing start and end dates.","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"jerremyng"},"content":"     *                        For DEADLINES: pass one LocalDate object","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"jerremyng"},"content":"     *                        For TODOs, no additional data is needed.","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"jerremyng"},"content":"     * @return An instance of the specified Task subclass.","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"jerremyng"},"content":"     * @throws IllegalArgumentException If the provided task type is unsupported.","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"jerremyng"},"content":"    public static Task createTask(TaskType type, String description, boolean isDone, LocalDate... dates) {","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"jerremyng"},"content":"        switch (type) {","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"jerremyng"},"content":"        case TODO:","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"jerremyng"},"content":"            return new ToDo(description, isDone);","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"jerremyng"},"content":"        case EVENT:","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"jerremyng"},"content":"            return new Event(description, isDone, dates[0], dates[1]);","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"jerremyng"},"content":"        case DEADLINE:","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"jerremyng"},"content":"            return new Deadline(description, isDone, dates[0]);","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"jerremyng"},"content":"        default:","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"jerremyng"},"content":"            throw new IllegalArgumentException(\"Unsupported task type: \" + type);","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"jerremyng"},"content":"    /** Sets this task as done */","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"jerremyng"},"content":"    public void setDone() {","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"jerremyng"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"jerremyng"},"content":"    /** Sets this task as not done */","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"jerremyng"},"content":"    public void setNotDone() {","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"jerremyng"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"jerremyng"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"jerremyng"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"jerremyng"},"content":"        String mark \u003d this.isDone ? \"[X] \" : \"[ ] \";","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"jerremyng"},"content":"        return mark + this.description;","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"jerremyng"},"content":"     * Gets the date format style from the class.","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"jerremyng"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"jerremyng"},"content":"     * @return DateTimeFormatter object.","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"jerremyng"},"content":"    public static DateTimeFormatter getDateFormat() {","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"jerremyng"},"content":"        return Task.DATE_FORMATTER;","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"jerremyng"},"content":"     * Returns a string containing information of this task in a clean machine-readable format.","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"jerremyng"},"content":"     * \"{description},{isDone}\"","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"jerremyng"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"jerremyng"},"content":"     * @return String with tokens separated by commas.","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"jerremyng"},"content":"    public String getTokens() {","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"jerremyng"},"content":"        return String.join(\",\", this.description, String.valueOf(this.isDone));","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":94,"author":{"gitId":"jerremyng"},"content":"     * Gets the start time of task.","lastModifiedDate":"2024-02-15"},{"lineNumber":95,"author":{"gitId":"jerremyng"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":96,"author":{"gitId":"jerremyng"},"content":"     * @return LocalDate object representing start time of task.","lastModifiedDate":"2024-02-15"},{"lineNumber":97,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":98,"author":{"gitId":"jerremyng"},"content":"    public abstract LocalDate getStartDateTime();","lastModifiedDate":"2024-02-15"},{"lineNumber":99,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":100,"author":{"gitId":"jerremyng"},"content":"}","lastModifiedDate":"2024-02-01"},{"lineNumber":101,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":102,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":103,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":104,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":105,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"jerremyng":105}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerremyng"},"content":"package duke.task;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"jerremyng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"jerremyng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-20"},{"lineNumber":5,"author":{"gitId":"jerremyng"},"content":"import java.util.Comparator;","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"jerremyng"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"jerremyng"},"content":"import java.util.Iterator;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"jerremyng"},"content":"import java.util.List;","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":10,"author":{"gitId":"jerremyng"},"content":"import duke.exceptions.IllegalParamException;","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"jerremyng"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"jerremyng"},"content":" * Represents a collection of tasks and contains methods to manipulate this collection.","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"jerremyng"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"jerremyng"},"content":"public class TaskList implements Iterable\u003cTask\u003e {","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"jerremyng"},"content":"    /** Stores tasks in a list */","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"jerremyng"},"content":"    private List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":18,"author":{"gitId":"jerremyng"},"content":"    @Override","lastModifiedDate":"2024-01-20"},{"lineNumber":19,"author":{"gitId":"jerremyng"},"content":"    public String toString() {","lastModifiedDate":"2024-01-20"},{"lineNumber":20,"author":{"gitId":"jerremyng"},"content":"        StringBuilder out \u003d new StringBuilder(\"Here is the list of things I remember!\\n\");","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":22,"author":{"gitId":"jerremyng"},"content":"        for (Task currentItem : this.taskList) {","lastModifiedDate":"2024-01-20"},{"lineNumber":23,"author":{"gitId":"jerremyng"},"content":"            out.append(this.taskList.indexOf(currentItem) + 1 + \".\" + currentItem + \"\\n\");","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-20"},{"lineNumber":25,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"jerremyng"},"content":"        return out.toString().equals(\"Here is the list of things I remember!\\n\")","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"jerremyng"},"content":"                ? \"Looks like you have no tasks to do! Yay!\\n\"","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"jerremyng"},"content":"                : out.toString();","lastModifiedDate":"2024-02-15"},{"lineNumber":29,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":30,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":31,"author":{"gitId":"jerremyng"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"jerremyng"},"content":"    public Iterator\u003cTask\u003e iterator() {","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"jerremyng"},"content":"        return taskList.iterator();","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"jerremyng"},"content":"     * Adds new task to the list.","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"jerremyng"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"jerremyng"},"content":"     * @param taskName Task object to be added.","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"jerremyng"},"content":"    public void add(Task taskName) {","lastModifiedDate":"2024-01-20"},{"lineNumber":42,"author":{"gitId":"jerremyng"},"content":"        this.taskList.add(taskName);","lastModifiedDate":"2024-01-20"},{"lineNumber":43,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":44,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":45,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"jerremyng"},"content":"     * Retrieves a task from the list by their index.","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"jerremyng"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"jerremyng"},"content":"     * @param index Index to retrieve.","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"jerremyng"},"content":"     * @return Task object.","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"jerremyng"},"content":"     * @throws IllegalParamException If index requested is not available.","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"jerremyng"},"content":"    public Task getTask(int index) throws IllegalParamException {","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"jerremyng"},"content":"        try {","lastModifiedDate":"2024-01-21"},{"lineNumber":54,"author":{"gitId":"jerremyng"},"content":"            return this.taskList.get(index - 1);","lastModifiedDate":"2024-01-20"},{"lineNumber":55,"author":{"gitId":"jerremyng"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-21"},{"lineNumber":56,"author":{"gitId":"jerremyng"},"content":"            throw new IllegalParamException(\"I cant do that! The task does not exist!\");","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":58,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":59,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":60,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"jerremyng"},"content":"     * Deletes a task from the list based on index.","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"jerremyng"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"jerremyng"},"content":"     * @param index Index to delete.","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"jerremyng"},"content":"     * @throws IllegalParamException If index specified is not available.","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"jerremyng"},"content":"    public void deleteTask(int index) throws IllegalParamException {","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"jerremyng"},"content":"        try {","lastModifiedDate":"2024-01-21"},{"lineNumber":68,"author":{"gitId":"jerremyng"},"content":"            this.taskList.remove(index - 1);","lastModifiedDate":"2024-01-21"},{"lineNumber":69,"author":{"gitId":"jerremyng"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-21"},{"lineNumber":70,"author":{"gitId":"jerremyng"},"content":"            throw new IllegalParamException(\"I cant delete that task! It does not exist!\");","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":72,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":73,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"jerremyng"},"content":"     * Returns count of number of tasks in list.","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"jerremyng"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"jerremyng"},"content":"     * @return Int value.","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"jerremyng"},"content":"    public int countTasks() {","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"jerremyng"},"content":"        return taskList.size();","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"jerremyng"},"content":"     * Finds tasks with searchWord in their description.","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"jerremyng"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"jerremyng"},"content":"     * @param searchWord","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"jerremyng"},"content":"     * @return","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":89,"author":{"gitId":"jerremyng"},"content":"    public String find(String searchWord) {","lastModifiedDate":"2024-02-03"},{"lineNumber":90,"author":{"gitId":"jerremyng"},"content":"        assert searchWord !\u003d null : \"Search word cannot be null\";","lastModifiedDate":"2024-02-15"},{"lineNumber":91,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":92,"author":{"gitId":"jerremyng"},"content":"        StringBuilder out \u003d new StringBuilder();","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"jerremyng"},"content":"        int count \u003d 0;","lastModifiedDate":"2024-02-03"},{"lineNumber":94,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":95,"author":{"gitId":"jerremyng"},"content":"        for (Task currentItem : this.taskList) {","lastModifiedDate":"2024-02-03"},{"lineNumber":96,"author":{"gitId":"jerremyng"},"content":"            String taskString \u003d currentItem.toString().toLowerCase();","lastModifiedDate":"2024-02-03"},{"lineNumber":97,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":98,"author":{"gitId":"jerremyng"},"content":"            if (taskString.contains(searchWord)) {","lastModifiedDate":"2024-02-03"},{"lineNumber":99,"author":{"gitId":"jerremyng"},"content":"                count++;","lastModifiedDate":"2024-02-03"},{"lineNumber":100,"author":{"gitId":"jerremyng"},"content":"                out.append(\"\\n\").append(this.taskList.indexOf(currentItem) + 1).append(\".\").append(currentItem);","lastModifiedDate":"2024-02-03"},{"lineNumber":101,"author":{"gitId":"jerremyng"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":102,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":103,"author":{"gitId":"jerremyng"},"content":"        out.insert(0, \"I found \" + count + \" of them!\");","lastModifiedDate":"2024-02-03"},{"lineNumber":104,"author":{"gitId":"jerremyng"},"content":"        out.insert(0, \"Here are the matching tasks! \");","lastModifiedDate":"2024-02-03"},{"lineNumber":105,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":106,"author":{"gitId":"jerremyng"},"content":"        return out.toString();","lastModifiedDate":"2024-02-03"},{"lineNumber":107,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":108,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":109,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":110,"author":{"gitId":"jerremyng"},"content":"     * Sorts task in ascending date order (closest date coming first).","lastModifiedDate":"2024-02-15"},{"lineNumber":111,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":112,"author":{"gitId":"jerremyng"},"content":"    public void sort() {","lastModifiedDate":"2024-02-15"},{"lineNumber":113,"author":{"gitId":"jerremyng"},"content":"        Collections.sort(this.taskList, Comparator.comparing(Task::getStartDateTime));","lastModifiedDate":"2024-02-15"},{"lineNumber":114,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":115,"author":{"gitId":"jerremyng"},"content":"}","lastModifiedDate":"2024-01-20"}],"authorContributionMap":{"jerremyng":115}},{"path":"src/main/java/duke/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerremyng"},"content":"package duke.task;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"jerremyng"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"jerremyng"},"content":" * Enum class that represents types of tasks. This is used to make task types a formal value rather than strings.","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"jerremyng"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"jerremyng"},"content":"public enum TaskType {","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"jerremyng"},"content":"    TODO,","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"jerremyng"},"content":"    EVENT,","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"jerremyng"},"content":"    DEADLINE","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"jerremyng"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"jerremyng":10}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerremyng"},"content":"package duke.task;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"jerremyng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"jerremyng"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"jerremyng"},"content":" * Subclass of task that represents ToDo tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"jerremyng"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"jerremyng"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"jerremyng"},"content":"     * Constructs a ToDo object.","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"jerremyng"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"jerremyng"},"content":"     * @param description Description of task.","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"jerremyng"},"content":"     * @param isDone Boolean value describing completion status","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"jerremyng"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"jerremyng"},"content":"        super(description, isDone);","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"jerremyng"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"jerremyng"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"jerremyng"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"jerremyng"},"content":"     * @inheritDoc","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"jerremyng"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"jerremyng"},"content":"     * @return description + isDone + from + to","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"jerremyng"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"jerremyng"},"content":"    public String getTokens() {","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"jerremyng"},"content":"        return String.join(\",\", TaskType.TODO.toString(), super.getTokens());","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":35,"author":{"gitId":"jerremyng"},"content":"     * @inheritDoc","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"jerremyng"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":37,"author":{"gitId":"jerremyng"},"content":"     * @return Smallest date possible as todos do not have a date component","lastModifiedDate":"2024-02-15"},{"lineNumber":38,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":39,"author":{"gitId":"jerremyng"},"content":"    @Override","lastModifiedDate":"2024-02-15"},{"lineNumber":40,"author":{"gitId":"jerremyng"},"content":"    public LocalDate getStartDateTime() {","lastModifiedDate":"2024-02-15"},{"lineNumber":41,"author":{"gitId":"jerremyng"},"content":"        return LocalDate.MIN;","lastModifiedDate":"2024-02-15"},{"lineNumber":42,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":43,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":44,"author":{"gitId":"jerremyng"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"jerremyng":44}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jerremyng"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"jerremyng"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"jerremyng"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":5,"author":{"gitId":"jerremyng"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"jerremyng"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"jerremyng"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"jerremyng"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"jerremyng"},"content":"        \u003cText fx:id\u003d\"dialog\" text\u003d\"Label\" /\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":11,"author":{"gitId":"jerremyng"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"jerremyng"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"jerremyng"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"jerremyng"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"jerremyng"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"jerremyng"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"jerremyng":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jerremyng"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"jerremyng"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"jerremyng"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"jerremyng"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"jerremyng"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"jerremyng"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"jerremyng"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.controllers.MainWindow\"\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"jerremyng"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"jerremyng"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"jerremyng"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"jerremyng"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"jerremyng"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"jerremyng"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"jerremyng"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"jerremyng"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"jerremyng"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"jerremyng"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"jerremyng":19}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerremyng"},"content":"package duke;  //same package as the class being tested","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"jerremyng"},"content":"import duke.command.*;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"jerremyng"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"jerremyng"},"content":"import duke.exceptions.IllegalParamException;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"jerremyng"},"content":"import duke.exceptions.MissingInfoException;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"jerremyng"},"content":"import duke.exceptions.ParserException;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"jerremyng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"jerremyng"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"jerremyng"},"content":"public class ParserTest {","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"jerremyng"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"jerremyng"},"content":"    public void parse_emptyInput_throwsParserException() {","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"jerremyng"},"content":"        assertThrows(MissingInfoException.class, () -\u003e Parser.parse(\"\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"jerremyng"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"jerremyng"},"content":"    public void parse_validByeInputs_returnsByeCommand() throws DukeException {","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"jerremyng"},"content":"        // random capitalization of bye results in ByeCommand returned","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"jerremyng"},"content":"        Command bye \u003d Parser.parse(\"ByE\");","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"jerremyng"},"content":"        assertTrue(bye instanceof ByeCommand);","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"jerremyng"},"content":"    private void assertTrue(boolean b) {","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"jerremyng"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"jerremyng"},"content":"    public void parse_validListInputs_returnsListCommand() throws DukeException {","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"jerremyng"},"content":"        // random capitalization of list returns ListCommand","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"jerremyng"},"content":"        Command list \u003d Parser.parse(\"lIsT\");","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"jerremyng"},"content":"        assertTrue(list instanceof ListCommand);","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"jerremyng"},"content":"        // alternative ls keyword returns ListCommand","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"jerremyng"},"content":"        Command list1 \u003d Parser.parse(\"ls\");","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"jerremyng"},"content":"        assertTrue(list1 instanceof ListCommand);","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"jerremyng"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"jerremyng"},"content":"    public void parse_validMarkInput_returnsMarkCommand() throws DukeException {","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"jerremyng"},"content":"        // random capitalization of mark and valid number returns MarkCommand","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"jerremyng"},"content":"        Command command \u003d Parser.parse(\"mArk 1\");","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"jerremyng"},"content":"        assertTrue(command instanceof MarkCommand);","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"jerremyng"},"content":"        // random capitalization of mark and spaces before 0 returns MarkCommand","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"jerremyng"},"content":"        Command command1 \u003d Parser.parse(\"mArk    0\");","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"jerremyng"},"content":"        assertTrue(command1 instanceof MarkCommand);","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"jerremyng"},"content":"        // random capitalization of mark and big number returns MarkCommand","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"jerremyng"},"content":"        Command command2 \u003d Parser.parse(\"MArk 6969420\");","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"jerremyng"},"content":"        assertTrue(command2 instanceof MarkCommand);","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"jerremyng"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"jerremyng"},"content":"    public void parse_invalidMarkInput_throwsException() {","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"jerremyng"},"content":"        // non numeric value throws exception","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"jerremyng"},"content":"        assertThrows(IllegalParamException.class, () -\u003e Parser.parse(\"mArk 1a2b#c\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"jerremyng"},"content":"        // no number component throws exception","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"jerremyng"},"content":"        assertThrows(MissingInfoException.class, () -\u003e Parser.parse(\"mArk\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"jerremyng"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"jerremyng"},"content":"    public void parse_validUnmarkInput_returnsMarkCommand() throws DukeException {","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"jerremyng"},"content":"        // random capitalization of unmark and valid number and random spacing returns UnmarkCommand","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"jerremyng"},"content":"        Command command \u003d Parser.parse(\"uNmArk     2\");","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"jerremyng"},"content":"        assertTrue(command instanceof UnmarkCommand);","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"jerremyng"},"content":"        // full capitalization of unmark and 0 returns UnmarkCommand","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"jerremyng"},"content":"        Command command1 \u003d Parser.parse(\"UNMARK 0\");","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"jerremyng"},"content":"        assertTrue(command1 instanceof UnmarkCommand);","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"jerremyng"},"content":"        // random capitalization of unmark and big number returns UnmarkCommand","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"jerremyng"},"content":"        Command command2 \u003d Parser.parse(\"unMArk 6969420\");","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"jerremyng"},"content":"        assertTrue(command2 instanceof UnmarkCommand);","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"jerremyng"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"jerremyng"},"content":"    public void parse_invalidUnmarkInput_throwsException() {","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"jerremyng"},"content":"        // non numeric value throws exception","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"jerremyng"},"content":"        assertThrows(IllegalParamException.class, () -\u003e Parser.parse(\"unmArk 1a2b#c\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":84,"author":{"gitId":"jerremyng"},"content":"        // no number component and random spaces throws exception","lastModifiedDate":"2024-02-02"},{"lineNumber":85,"author":{"gitId":"jerremyng"},"content":"        assertThrows(MissingInfoException.class, () -\u003e Parser.parse(\"unmArk            \"));","lastModifiedDate":"2024-02-02"},{"lineNumber":86,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":87,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":88,"author":{"gitId":"jerremyng"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":89,"author":{"gitId":"jerremyng"},"content":"    public void parse_validDeleteInput_returnsDeleteCommand() throws DukeException {","lastModifiedDate":"2024-02-02"},{"lineNumber":90,"author":{"gitId":"jerremyng"},"content":"        // random capitalization of unmark and valid number and random spacing returns DeleteCommand","lastModifiedDate":"2024-02-02"},{"lineNumber":91,"author":{"gitId":"jerremyng"},"content":"        Command command \u003d Parser.parse(\"deLeTe     2\");","lastModifiedDate":"2024-02-02"},{"lineNumber":92,"author":{"gitId":"jerremyng"},"content":"        assertTrue(command instanceof DeleteCommand);","lastModifiedDate":"2024-02-02"},{"lineNumber":93,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":94,"author":{"gitId":"jerremyng"},"content":"        // spaces and tabs and 0 will return DeleteCommand","lastModifiedDate":"2024-02-02"},{"lineNumber":95,"author":{"gitId":"jerremyng"},"content":"        Command command1 \u003d Parser.parse(\"deLeTe         0\");","lastModifiedDate":"2024-02-02"},{"lineNumber":96,"author":{"gitId":"jerremyng"},"content":"        assertTrue(command1 instanceof DeleteCommand);","lastModifiedDate":"2024-02-02"},{"lineNumber":97,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":98,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":99,"author":{"gitId":"jerremyng"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":100,"author":{"gitId":"jerremyng"},"content":"    public void parse_invalidDeleteInput_throwsException() {","lastModifiedDate":"2024-02-02"},{"lineNumber":101,"author":{"gitId":"jerremyng"},"content":"        // non numeric value throws exception","lastModifiedDate":"2024-02-02"},{"lineNumber":102,"author":{"gitId":"jerremyng"},"content":"        assertThrows(IllegalParamException.class, () -\u003e Parser.parse(\"unmArk 1a2b#c\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":103,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":104,"author":{"gitId":"jerremyng"},"content":"        // no number component and random spaces throws exception","lastModifiedDate":"2024-02-02"},{"lineNumber":105,"author":{"gitId":"jerremyng"},"content":"        assertThrows(MissingInfoException.class, () -\u003e Parser.parse(\"unmArk            \"));","lastModifiedDate":"2024-02-02"},{"lineNumber":106,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":107,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":108,"author":{"gitId":"jerremyng"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":109,"author":{"gitId":"jerremyng"},"content":"    public void parse_validToDoInput_returnsToDoCommand() throws DukeException {","lastModifiedDate":"2024-02-02"},{"lineNumber":110,"author":{"gitId":"jerremyng"},"content":"        // tricky description returns ToDoCommand","lastModifiedDate":"2024-02-02"},{"lineNumber":111,"author":{"gitId":"jerremyng"},"content":"        Command command \u003d Parser.parse(\"toDo     todotodotodo@22s\");","lastModifiedDate":"2024-02-02"},{"lineNumber":112,"author":{"gitId":"jerremyng"},"content":"        assertTrue(command instanceof ToDoCommand);","lastModifiedDate":"2024-02-02"},{"lineNumber":113,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":114,"author":{"gitId":"jerremyng"},"content":"        // tricky description 2 returns ToDoCommand","lastModifiedDate":"2024-02-02"},{"lineNumber":115,"author":{"gitId":"jerremyng"},"content":"        Command command1 \u003d Parser.parse(\"toDo     /by 21 Jan 2021 todotodotodo@22s\");","lastModifiedDate":"2024-02-02"},{"lineNumber":116,"author":{"gitId":"jerremyng"},"content":"        assertTrue(command1 instanceof ToDoCommand);","lastModifiedDate":"2024-02-02"},{"lineNumber":117,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":118,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":119,"author":{"gitId":"jerremyng"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":120,"author":{"gitId":"jerremyng"},"content":"    public void parse_invalidToDoInput_throwsException() {","lastModifiedDate":"2024-02-02"},{"lineNumber":121,"author":{"gitId":"jerremyng"},"content":"        // keyword + spaces throws exception","lastModifiedDate":"2024-02-02"},{"lineNumber":122,"author":{"gitId":"jerremyng"},"content":"        assertThrows(MissingInfoException.class, () -\u003e Parser.parse(\"tOdo            \"));","lastModifiedDate":"2024-02-02"},{"lineNumber":123,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":124,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":125,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":126,"author":{"gitId":"jerremyng"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":127,"author":{"gitId":"jerremyng"},"content":"    public void parse_validDeadlineInput_returnsDeadlineCommand() throws DukeException {","lastModifiedDate":"2024-02-02"},{"lineNumber":128,"author":{"gitId":"jerremyng"},"content":"        // tricky description returns DeadlineCommand","lastModifiedDate":"2024-02-02"},{"lineNumber":129,"author":{"gitId":"jerremyng"},"content":"        Command command \u003d Parser.parse(\"deaDLine     deadline    /by 21 Jan 2000\");","lastModifiedDate":"2024-02-02"},{"lineNumber":130,"author":{"gitId":"jerremyng"},"content":"        assertTrue(command instanceof DeadlineCommand);","lastModifiedDate":"2024-02-02"},{"lineNumber":131,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":132,"author":{"gitId":"jerremyng"},"content":"        // tricky description 2 returns DeadlineCommand","lastModifiedDate":"2024-02-02"},{"lineNumber":133,"author":{"gitId":"jerremyng"},"content":"        Command command1 \u003d Parser.parse(\"deadline    cry /by 21 Dec 3021   \");","lastModifiedDate":"2024-02-02"},{"lineNumber":134,"author":{"gitId":"jerremyng"},"content":"        assertTrue(command1 instanceof DeadlineCommand);","lastModifiedDate":"2024-02-02"},{"lineNumber":135,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":136,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":137,"author":{"gitId":"jerremyng"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":138,"author":{"gitId":"jerremyng"},"content":"    public void parse_invalidDeadlineInput_throwsException() {","lastModifiedDate":"2024-02-02"},{"lineNumber":139,"author":{"gitId":"jerremyng"},"content":"        // keyword + spaces throws exception","lastModifiedDate":"2024-02-02"},{"lineNumber":140,"author":{"gitId":"jerremyng"},"content":"        assertThrows(MissingInfoException.class, () -\u003e Parser.parse(\"deadline            \"));","lastModifiedDate":"2024-02-02"},{"lineNumber":141,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":142,"author":{"gitId":"jerremyng"},"content":"        // no /by keyword throws ParserException","lastModifiedDate":"2024-02-02"},{"lineNumber":143,"author":{"gitId":"jerremyng"},"content":"        assertThrows(ParserException.class, () -\u003e Parser.parse(\"deadline    21 Jan 2002        \"));","lastModifiedDate":"2024-02-02"},{"lineNumber":144,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":145,"author":{"gitId":"jerremyng"},"content":"        // no task description but valid date throws exception","lastModifiedDate":"2024-02-02"},{"lineNumber":146,"author":{"gitId":"jerremyng"},"content":"        assertThrows(MissingInfoException.class, () -\u003e Parser.parse(\"deadline  /by 21 Jan 2002       \"));","lastModifiedDate":"2024-02-02"},{"lineNumber":147,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":148,"author":{"gitId":"jerremyng"},"content":"        // invalid date throws exception","lastModifiedDate":"2024-02-02"},{"lineNumber":149,"author":{"gitId":"jerremyng"},"content":"        assertThrows(ParserException.class, () -\u003e Parser.parse(\"deadline writetestcase /by 221 Jan 2002\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":150,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":151,"author":{"gitId":"jerremyng"},"content":"        // missing date throws exception","lastModifiedDate":"2024-02-02"},{"lineNumber":152,"author":{"gitId":"jerremyng"},"content":"        assertThrows(ParserException.class, () -\u003e Parser.parse(\"deadline writetestcase /by \"));","lastModifiedDate":"2024-02-02"},{"lineNumber":153,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":154,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":155,"author":{"gitId":"jerremyng"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":156,"author":{"gitId":"jerremyng"},"content":"    public void parse_validEventInput_returnsEventCommand() throws DukeException {","lastModifiedDate":"2024-02-02"},{"lineNumber":157,"author":{"gitId":"jerremyng"},"content":"        // normal input case returns EventCommand","lastModifiedDate":"2024-02-02"},{"lineNumber":158,"author":{"gitId":"jerremyng"},"content":"        Command command \u003d Parser.parse(\"evENT   eventeventevent /from 21 Jan 2042 /to 21 Jan 2030\");","lastModifiedDate":"2024-02-02"},{"lineNumber":159,"author":{"gitId":"jerremyng"},"content":"        assertTrue(command instanceof EventCommand);","lastModifiedDate":"2024-02-02"},{"lineNumber":160,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":161,"author":{"gitId":"jerremyng"},"content":"        // /from and /by are swapped returns event command","lastModifiedDate":"2024-02-02"},{"lineNumber":162,"author":{"gitId":"jerremyng"},"content":"        Command command1 \u003d Parser.parse(\"Event   eat yumz /to 21 Jan 2021 /from 23 Jan 2023\");","lastModifiedDate":"2024-02-02"},{"lineNumber":163,"author":{"gitId":"jerremyng"},"content":"        assertTrue(command1 instanceof EventCommand);","lastModifiedDate":"2024-02-02"},{"lineNumber":164,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":165,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":166,"author":{"gitId":"jerremyng"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":167,"author":{"gitId":"jerremyng"},"content":"    public void parse_invalidEventInput_throwsException() {","lastModifiedDate":"2024-02-02"},{"lineNumber":168,"author":{"gitId":"jerremyng"},"content":"        // keyword + spaces throws exception","lastModifiedDate":"2024-02-02"},{"lineNumber":169,"author":{"gitId":"jerremyng"},"content":"        assertThrows(MissingInfoException.class, () -\u003e Parser.parse(\"event            \"));","lastModifiedDate":"2024-02-02"},{"lineNumber":170,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":171,"author":{"gitId":"jerremyng"},"content":"        // no both /from and /to keyword throws ParserException","lastModifiedDate":"2024-02-02"},{"lineNumber":172,"author":{"gitId":"jerremyng"},"content":"        assertThrows(ParserException.class, () -\u003e Parser.parse(\"event    21 Jan 2002        \"));","lastModifiedDate":"2024-02-02"},{"lineNumber":173,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":174,"author":{"gitId":"jerremyng"},"content":"        // no task description but valid dates throws exception","lastModifiedDate":"2024-02-02"},{"lineNumber":175,"author":{"gitId":"jerremyng"},"content":"        assertThrows(MissingInfoException.class, () -\u003e Parser.parse(\"deadline /by 21 Jan 2002 /from 21 Jan 2002\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":176,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":177,"author":{"gitId":"jerremyng"},"content":"        // invalid date throws exception","lastModifiedDate":"2024-02-02"},{"lineNumber":178,"author":{"gitId":"jerremyng"},"content":"        assertThrows(ParserException.class, () -\u003e Parser.parse(\"event writecase /to 221 Jan 2002 /from 21 Jan 2002\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":179,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":180,"author":{"gitId":"jerremyng"},"content":"        // missing /from throws exception","lastModifiedDate":"2024-02-02"},{"lineNumber":181,"author":{"gitId":"jerremyng"},"content":"        assertThrows(ParserException.class, () -\u003e Parser.parse(\"deadline writetestcase /to 23 Jan 2002 \"));","lastModifiedDate":"2024-02-02"},{"lineNumber":182,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":183,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":184,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":185,"author":{"gitId":"jerremyng"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"jerremyng":185}},{"path":"src/test/java/duke/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerremyng"},"content":"package duke.task;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":3,"author":{"gitId":"jerremyng"},"content":"import duke.exceptions.IllegalParamException;","lastModifiedDate":"2024-02-21"},{"lineNumber":4,"author":{"gitId":"jerremyng"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-02-21"},{"lineNumber":5,"author":{"gitId":"jerremyng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":7,"author":{"gitId":"jerremyng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-21"},{"lineNumber":8,"author":{"gitId":"jerremyng"},"content":"import java.util.Date;","lastModifiedDate":"2024-02-21"},{"lineNumber":9,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":10,"author":{"gitId":"jerremyng"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-02-21"},{"lineNumber":11,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":12,"author":{"gitId":"jerremyng"},"content":"public class TaskListTest {","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"jerremyng"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"jerremyng"},"content":"    @BeforeEach","lastModifiedDate":"2024-02-21"},{"lineNumber":17,"author":{"gitId":"jerremyng"},"content":"    public void setUp() {","lastModifiedDate":"2024-02-21"},{"lineNumber":18,"author":{"gitId":"jerremyng"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2024-02-21"},{"lineNumber":19,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":20,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":21,"author":{"gitId":"jerremyng"},"content":"    @Test","lastModifiedDate":"2024-02-21"},{"lineNumber":22,"author":{"gitId":"jerremyng"},"content":"    public void addTask_successful() {","lastModifiedDate":"2024-02-21"},{"lineNumber":23,"author":{"gitId":"jerremyng"},"content":"        // add a todo task","lastModifiedDate":"2024-02-21"},{"lineNumber":24,"author":{"gitId":"jerremyng"},"content":"        Task task \u003d Task.createTask(TaskType.TODO, \"test code\", false);","lastModifiedDate":"2024-02-21"},{"lineNumber":25,"author":{"gitId":"jerremyng"},"content":"        taskList.add(task);","lastModifiedDate":"2024-02-21"},{"lineNumber":26,"author":{"gitId":"jerremyng"},"content":"        assertEquals(1, taskList.countTasks());","lastModifiedDate":"2024-02-21"},{"lineNumber":27,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":28,"author":{"gitId":"jerremyng"},"content":"        // add another deadline line","lastModifiedDate":"2024-02-21"},{"lineNumber":29,"author":{"gitId":"jerremyng"},"content":"        LocalDate date \u003d LocalDate.of(2002, 2, 21);","lastModifiedDate":"2024-02-21"},{"lineNumber":30,"author":{"gitId":"jerremyng"},"content":"        Task task1 \u003d Task.createTask(TaskType.DEADLINE, \"test code\", false, date);","lastModifiedDate":"2024-02-21"},{"lineNumber":31,"author":{"gitId":"jerremyng"},"content":"        taskList.add(task1);","lastModifiedDate":"2024-02-21"},{"lineNumber":32,"author":{"gitId":"jerremyng"},"content":"        assertEquals(2, taskList.countTasks());","lastModifiedDate":"2024-02-21"},{"lineNumber":33,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":34,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":35,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":36,"author":{"gitId":"jerremyng"},"content":"    @Test","lastModifiedDate":"2024-02-21"},{"lineNumber":37,"author":{"gitId":"jerremyng"},"content":"    public void getTask_validIndex_returnsTask() throws IllegalParamException {","lastModifiedDate":"2024-02-21"},{"lineNumber":38,"author":{"gitId":"jerremyng"},"content":"        // adding and retrieving task should return same object","lastModifiedDate":"2024-02-21"},{"lineNumber":39,"author":{"gitId":"jerremyng"},"content":"        Task task \u003d Task.createTask(TaskType.TODO, \"test\", false);","lastModifiedDate":"2024-02-21"},{"lineNumber":40,"author":{"gitId":"jerremyng"},"content":"        taskList.add(task);","lastModifiedDate":"2024-02-21"},{"lineNumber":41,"author":{"gitId":"jerremyng"},"content":"        Task retrievedTask \u003d taskList.getTask(1);","lastModifiedDate":"2024-02-21"},{"lineNumber":42,"author":{"gitId":"jerremyng"},"content":"        assertEquals(task, retrievedTask);","lastModifiedDate":"2024-02-21"},{"lineNumber":43,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":44,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":45,"author":{"gitId":"jerremyng"},"content":"    @Test","lastModifiedDate":"2024-02-21"},{"lineNumber":46,"author":{"gitId":"jerremyng"},"content":"    public void getTask_invalidIndex_throwsException() {","lastModifiedDate":"2024-02-21"},{"lineNumber":47,"author":{"gitId":"jerremyng"},"content":"        // getting task from empty taskList throws exception","lastModifiedDate":"2024-02-21"},{"lineNumber":48,"author":{"gitId":"jerremyng"},"content":"        assertThrows(IllegalParamException.class, () -\u003e taskList.getTask(1));","lastModifiedDate":"2024-02-21"},{"lineNumber":49,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":50,"author":{"gitId":"jerremyng"},"content":"        // getting index 0 throws exception","lastModifiedDate":"2024-02-21"},{"lineNumber":51,"author":{"gitId":"jerremyng"},"content":"        assertThrows(IllegalParamException.class, () -\u003e taskList.getTask(0));","lastModifiedDate":"2024-02-21"},{"lineNumber":52,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":53,"author":{"gitId":"jerremyng"},"content":"        // getting task 2 when only 1 task exist throws exception","lastModifiedDate":"2024-02-21"},{"lineNumber":54,"author":{"gitId":"jerremyng"},"content":"        Task task \u003d Task.createTask(TaskType.TODO, \"test\", false);","lastModifiedDate":"2024-02-21"},{"lineNumber":55,"author":{"gitId":"jerremyng"},"content":"        taskList.add(task);","lastModifiedDate":"2024-02-21"},{"lineNumber":56,"author":{"gitId":"jerremyng"},"content":"        assertThrows(IllegalParamException.class, () -\u003e taskList.getTask(2));","lastModifiedDate":"2024-02-21"},{"lineNumber":57,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":58,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":59,"author":{"gitId":"jerremyng"},"content":"    @Test","lastModifiedDate":"2024-02-21"},{"lineNumber":60,"author":{"gitId":"jerremyng"},"content":"    public void deleteTask_validIndex_successful() throws IllegalParamException {","lastModifiedDate":"2024-02-21"},{"lineNumber":61,"author":{"gitId":"jerremyng"},"content":"        // deleting a task removes it","lastModifiedDate":"2024-02-21"},{"lineNumber":62,"author":{"gitId":"jerremyng"},"content":"        Task task \u003d Task.createTask(TaskType.TODO, \"test\", false);","lastModifiedDate":"2024-02-21"},{"lineNumber":63,"author":{"gitId":"jerremyng"},"content":"        taskList.add(task);","lastModifiedDate":"2024-02-21"},{"lineNumber":64,"author":{"gitId":"jerremyng"},"content":"        if (taskList.countTasks() !\u003d 1) {","lastModifiedDate":"2024-02-21"},{"lineNumber":65,"author":{"gitId":"jerremyng"},"content":"            fail(); // verify that task was added","lastModifiedDate":"2024-02-21"},{"lineNumber":66,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":67,"author":{"gitId":"jerremyng"},"content":"        taskList.deleteTask(1);","lastModifiedDate":"2024-02-21"},{"lineNumber":68,"author":{"gitId":"jerremyng"},"content":"        assertEquals(0, taskList.countTasks());","lastModifiedDate":"2024-02-21"},{"lineNumber":69,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":70,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":71,"author":{"gitId":"jerremyng"},"content":"    @Test","lastModifiedDate":"2024-02-21"},{"lineNumber":72,"author":{"gitId":"jerremyng"},"content":"    public void deleteTask_invalidIndex_throwsException() {","lastModifiedDate":"2024-02-21"},{"lineNumber":73,"author":{"gitId":"jerremyng"},"content":"        // delete index 1 from empty list throws exception","lastModifiedDate":"2024-02-21"},{"lineNumber":74,"author":{"gitId":"jerremyng"},"content":"        assertThrows(IllegalParamException.class, () -\u003e taskList.deleteTask(1));","lastModifiedDate":"2024-02-21"},{"lineNumber":75,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":76,"author":{"gitId":"jerremyng"},"content":"        // delete index 0 from list throws exception","lastModifiedDate":"2024-02-21"},{"lineNumber":77,"author":{"gitId":"jerremyng"},"content":"        assertThrows(IllegalParamException.class, () -\u003e taskList.deleteTask(0));","lastModifiedDate":"2024-02-21"},{"lineNumber":78,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":79,"author":{"gitId":"jerremyng"},"content":"        // delete task 2 when only 1 task exist throws exception","lastModifiedDate":"2024-02-21"},{"lineNumber":80,"author":{"gitId":"jerremyng"},"content":"        Task task \u003d Task.createTask(TaskType.TODO, \"test\", false);","lastModifiedDate":"2024-02-21"},{"lineNumber":81,"author":{"gitId":"jerremyng"},"content":"        taskList.add(task);","lastModifiedDate":"2024-02-21"},{"lineNumber":82,"author":{"gitId":"jerremyng"},"content":"        assertThrows(IllegalParamException.class, () -\u003e taskList.deleteTask(2));","lastModifiedDate":"2024-02-21"},{"lineNumber":83,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":84,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":85,"author":{"gitId":"jerremyng"},"content":"    @Test","lastModifiedDate":"2024-02-21"},{"lineNumber":86,"author":{"gitId":"jerremyng"},"content":"    public void countTasks_emptyList_returnsZero() {","lastModifiedDate":"2024-02-21"},{"lineNumber":87,"author":{"gitId":"jerremyng"},"content":"        assertEquals(0, taskList.countTasks());","lastModifiedDate":"2024-02-21"},{"lineNumber":88,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":89,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":90,"author":{"gitId":"jerremyng"},"content":"    @Test","lastModifiedDate":"2024-02-21"},{"lineNumber":91,"author":{"gitId":"jerremyng"},"content":"    public void toString_nonEmptyList_returnsCorrectFormattedString() {","lastModifiedDate":"2024-02-21"},{"lineNumber":92,"author":{"gitId":"jerremyng"},"content":"        // toString method returns expected string","lastModifiedDate":"2024-02-21"},{"lineNumber":93,"author":{"gitId":"jerremyng"},"content":"        Task task \u003d Task.createTask(TaskType.TODO, \"test\", false);","lastModifiedDate":"2024-02-21"},{"lineNumber":94,"author":{"gitId":"jerremyng"},"content":"        LocalDate date \u003d LocalDate.of(2002, 2, 21);","lastModifiedDate":"2024-02-21"},{"lineNumber":95,"author":{"gitId":"jerremyng"},"content":"        Task task2 \u003d Task.createTask(TaskType.DEADLINE, \"test\", false, date);","lastModifiedDate":"2024-02-21"},{"lineNumber":96,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":97,"author":{"gitId":"jerremyng"},"content":"        taskList.add(task);","lastModifiedDate":"2024-02-21"},{"lineNumber":98,"author":{"gitId":"jerremyng"},"content":"        taskList.add(task2);","lastModifiedDate":"2024-02-21"},{"lineNumber":99,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":100,"author":{"gitId":"jerremyng"},"content":"        String expected \u003d \"Here is the list of things I remember!\\n1.[T][ ] test\\n2.[D][ ] test (by: 21 Feb 2002)\\n\";","lastModifiedDate":"2024-02-21"},{"lineNumber":101,"author":{"gitId":"jerremyng"},"content":"        assertEquals(expected, taskList.toString());","lastModifiedDate":"2024-02-21"},{"lineNumber":102,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":103,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":104,"author":{"gitId":"jerremyng"},"content":"    @Test","lastModifiedDate":"2024-02-21"},{"lineNumber":105,"author":{"gitId":"jerremyng"},"content":"    public void toString_emptyList_returnsDefaultMessage() {","lastModifiedDate":"2024-02-21"},{"lineNumber":106,"author":{"gitId":"jerremyng"},"content":"        String expected \u003d \"Looks like you have no tasks to do! Yay!\\n\";","lastModifiedDate":"2024-02-25"},{"lineNumber":107,"author":{"gitId":"jerremyng"},"content":"        assertEquals(expected, taskList.toString());","lastModifiedDate":"2024-02-21"},{"lineNumber":108,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":109,"author":{"gitId":"jerremyng"},"content":"}","lastModifiedDate":"2024-02-21"}],"authorContributionMap":{"jerremyng":109}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jerremyng"},"content":"list","lastModifiedDate":"2024-01-20"},{"lineNumber":2,"author":{"gitId":"jerremyng"},"content":"todo dropout","lastModifiedDate":"2024-01-20"},{"lineNumber":3,"author":{"gitId":"jerremyng"},"content":"list","lastModifiedDate":"2024-01-20"},{"lineNumber":4,"author":{"gitId":"jerremyng"},"content":"deadline have a breakdown /by Sunday","lastModifiedDate":"2024-01-20"},{"lineNumber":5,"author":{"gitId":"jerremyng"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-20"},{"lineNumber":6,"author":{"gitId":"jerremyng"},"content":"list","lastModifiedDate":"2024-01-20"},{"lineNumber":7,"author":{"gitId":"jerremyng"},"content":"mark 1","lastModifiedDate":"2024-01-20"},{"lineNumber":8,"author":{"gitId":"jerremyng"},"content":"mark 3","lastModifiedDate":"2024-01-20"},{"lineNumber":9,"author":{"gitId":"jerremyng"},"content":"mark 4","lastModifiedDate":"2024-01-21"},{"lineNumber":10,"author":{"gitId":"jerremyng"},"content":"list","lastModifiedDate":"2024-01-20"},{"lineNumber":11,"author":{"gitId":"jerremyng"},"content":"unmark 3","lastModifiedDate":"2024-01-20"},{"lineNumber":12,"author":{"gitId":"jerremyng"},"content":"unmark 4","lastModifiedDate":"2024-01-21"},{"lineNumber":13,"author":{"gitId":"jerremyng"},"content":"list","lastModifiedDate":"2024-01-20"},{"lineNumber":14,"author":{"gitId":"jerremyng"},"content":"delete 3","lastModifiedDate":"2024-01-21"},{"lineNumber":15,"author":{"gitId":"jerremyng"},"content":"delete 4","lastModifiedDate":"2024-01-21"},{"lineNumber":16,"author":{"gitId":"jerremyng"},"content":"mark iwenf","lastModifiedDate":"2024-01-21"},{"lineNumber":17,"author":{"gitId":"jerremyng"},"content":"bye","lastModifiedDate":"2024-01-20"}],"authorContributionMap":{"jerremyng":17}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"jerremyng"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jerremyng":1,"-":20}}]
