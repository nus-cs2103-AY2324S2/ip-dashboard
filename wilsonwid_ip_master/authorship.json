[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"wilsonwid"},"content":"# TalkingBot project template","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"wilsonwid"},"content":"3. After that, locate the `src/main/java/TalkingBot.java` file, right-click it, and choose `Run TalkingBot.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"wilsonwid":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"wilsonwid"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"wilsonwid"},"content":"checkstyle {","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"wilsonwid"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"wilsonwid"},"content":"}","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"wilsonwid"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"wilsonwid"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"wilsonwid"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"wilsonwid"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"wilsonwid"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"wilsonwid"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"wilsonwid"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"wilsonwid"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"wilsonwid"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"wilsonwid"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"wilsonwid"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"wilsonwid"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"wilsonwid"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"wilsonwid"},"content":"    mainClass.set(\"talkingbot.Launcher\")","lastModifiedDate":"2024-02-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"wilsonwid"},"content":"    archiveBaseName \u003d \"talkingbot\"","lastModifiedDate":"2024-01-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"wilsonwid"},"content":"    archiveVersion \u003d \"v0.2\"","lastModifiedDate":"2024-02-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"wilsonwid"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-01-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"wilsonwid":24,"-":39}},{"path":"data/taskList.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wilsonwid"},"content":"D | 0 | read book | 2024-02-19 2400","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"wilsonwid"},"content":"E | 0 | meet mentor | 2024-02-20 1800 | 2024-02-20 2000","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"wilsonwid"},"content":"W | 0 | return book | 2024-03-10 1200 | 2024-03-10 1300","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"wilsonwid"},"content":"T | 0 | make cookies","lastModifiedDate":"2024-02-18"},{"lineNumber":5,"author":{"gitId":"wilsonwid"},"content":"T | 0 | read essay","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"wilsonwid"},"content":"T | 0 | read article","lastModifiedDate":"2024-02-18"},{"lineNumber":7,"author":{"gitId":"wilsonwid"},"content":"T | 0 | practice piano","lastModifiedDate":"2024-02-18"}],"authorContributionMap":{"wilsonwid":7}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"wilsonwid"},"content":"# TalkingBot User Guide","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"wilsonwid"},"content":"![Ui.png](Ui.png)","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"wilsonwid"},"content":"TalkingBot is a friendly chatbot that allows one to easily manage their daily activities! It is very lightweight and has an intuitive command-line interface (CLI).","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"wilsonwid"},"content":"## Creating a task","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"wilsonwid"},"content":"### Creating todos","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"wilsonwid"},"content":"To create a todo, type `todo DESCRIPTION`, where `DESCRIPTION` is a description of the task you have.","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"wilsonwid"},"content":"For example, if we need to read an article that we wish to be as a todo, we can type in `todo read article`. TalkingBot will then display the following:","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"wilsonwid"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"wilsonwid"},"content":"Alright, I\u0027ve added this task to your list:","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"wilsonwid"},"content":"    [T] [ ] read article","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"wilsonwid"},"content":"You now have 1 tasks in the list.","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"wilsonwid"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"wilsonwid"},"content":"### Creating deadlines","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"wilsonwid"},"content":"To create a deadline, type `deadline DESCRIPTION /by YYYY-MM-DD HHMM` and press enter, where `DESCRIPTION` is a description of the deadline you have, and `YYYY-MM-DD HHMM` is the time you have to complete the task by. ","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"wilsonwid"},"content":"For example, if we have to submit an assignment by 23:59, 24 February 2024, we can type in `deadline submit assignment 2024-02-24 2359`. Assuming we have the todo we created above, TalkingBot will then display the following:","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"wilsonwid"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"wilsonwid"},"content":"Alright, I\u0027ve added this task to your list:","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"wilsonwid"},"content":"    [D] [ ] submit assignment (by: Feb 24 2024 2359)","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"wilsonwid"},"content":"You now have 2 tasks in the list.","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"wilsonwid"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":32,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"wilsonwid"},"content":"### Creating events","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":35,"author":{"gitId":"wilsonwid"},"content":"To create an event, type `event DESCRIPTION /from YYYY-MM-DD HHMM /to YYYY-MM-DD HHMM` and press enter, where `DESCRIPTION` is a description of the event you have, while the first and second `YYYY-MM-DD HHMM` indicate the beginning and end time of the event, respectively.","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"wilsonwid"},"content":"For example, if we will be meeting our mentor from 18:00, 25 February 2024 to 20:00, 25 February 2024, we can type in `event meet mentor /from 2024-02-25 1800 /to 2024-02-25 2000`. Assuming we have the todo and deadline created above, TalkingBot will return the following:","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"wilsonwid"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"wilsonwid"},"content":"Alright, I\u0027ve added this task to your list:","lastModifiedDate":"2024-02-22"},{"lineNumber":41,"author":{"gitId":"wilsonwid"},"content":"    [E] [ ] meet mentor (from: Feb 25 2024 1800 to: Feb 25 2024 2000)","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"wilsonwid"},"content":"You now have 3 tasks in the list.","lastModifiedDate":"2024-02-22"},{"lineNumber":43,"author":{"gitId":"wilsonwid"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":44,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":45,"author":{"gitId":"wilsonwid"},"content":"### Creating do within period tasks","lastModifiedDate":"2024-02-22"},{"lineNumber":46,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":47,"author":{"gitId":"wilsonwid"},"content":"Creating a do within period task is similar to creating an event task. We can create one by typing in `do_within_period DESCRIPTION /between YYYY-MM-DD HHMM /and YYYY-MM-DD HHMM`, where `DESCRIPTION` is a description of the task you have, while the first and second `YYYY-MM-DD HHMM` indicates the times between which you have to do the task in.","lastModifiedDate":"2024-02-22"},{"lineNumber":48,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":49,"author":{"gitId":"wilsonwid"},"content":"For example, if we need to solve technical interview problems from 21:00, 25 February 2024 to 22:00, 25 February 2024, we can type in `do_within_period solve technical interview problems /between 2024-02-25 2100 /and 2024-02-25 2200`. Assuming we have the todo, deadline, and event created above, TalkingBot will return the following:","lastModifiedDate":"2024-02-22"},{"lineNumber":50,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":51,"author":{"gitId":"wilsonwid"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":52,"author":{"gitId":"wilsonwid"},"content":"Alright, I\u0027ve added this task to your list:","lastModifiedDate":"2024-02-22"},{"lineNumber":53,"author":{"gitId":"wilsonwid"},"content":"    [W] [ ] solve technical interview problems (between Feb 25 2024 2100 and Feb 25 2024 2200)","lastModifiedDate":"2024-02-22"},{"lineNumber":54,"author":{"gitId":"wilsonwid"},"content":"You now have 4 tasks in the list.","lastModifiedDate":"2024-02-22"},{"lineNumber":55,"author":{"gitId":"wilsonwid"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":56,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":57,"author":{"gitId":"wilsonwid"},"content":"## Listing tasks","lastModifiedDate":"2024-02-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":59,"author":{"gitId":"wilsonwid"},"content":"To list all available tasks, type `list` and press enter. This will return a list of tasks that have been entered in previously. ","lastModifiedDate":"2024-02-22"},{"lineNumber":60,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":61,"author":{"gitId":"wilsonwid"},"content":"For example, if you only have a todo `read article` that is not done, TalkingBot will output the following when running `list`:","lastModifiedDate":"2024-02-22"},{"lineNumber":62,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":63,"author":{"gitId":"wilsonwid"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":64,"author":{"gitId":"wilsonwid"},"content":"1. [T] [ ] read article","lastModifiedDate":"2024-02-22"},{"lineNumber":65,"author":{"gitId":"wilsonwid"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":66,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":67,"author":{"gitId":"wilsonwid"},"content":"## Marking/unmarking tasks as done","lastModifiedDate":"2024-02-22"},{"lineNumber":68,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":69,"author":{"gitId":"wilsonwid"},"content":"### Marking tasks as done","lastModifiedDate":"2024-02-22"},{"lineNumber":70,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":71,"author":{"gitId":"wilsonwid"},"content":"To mark tasks as done, type `mark INDEX` and press enter, where `INDEX` is the index of the task you wish to mark as done.","lastModifiedDate":"2024-02-22"},{"lineNumber":72,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":73,"author":{"gitId":"wilsonwid"},"content":"For example, if we have two todos `read article` and `read essay`, running `list` can return the following:","lastModifiedDate":"2024-02-22"},{"lineNumber":74,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":75,"author":{"gitId":"wilsonwid"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":76,"author":{"gitId":"wilsonwid"},"content":"1. [T] [ ] read article","lastModifiedDate":"2024-02-22"},{"lineNumber":77,"author":{"gitId":"wilsonwid"},"content":"2. [T] [ ] read essay","lastModifiedDate":"2024-02-22"},{"lineNumber":78,"author":{"gitId":"wilsonwid"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":79,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":80,"author":{"gitId":"wilsonwid"},"content":"To mark `read article` as done, we can type in `mark 1`, as `1` is the index of the task. TalkingBot will then return the following:","lastModifiedDate":"2024-02-22"},{"lineNumber":81,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":82,"author":{"gitId":"wilsonwid"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":83,"author":{"gitId":"wilsonwid"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2024-02-22"},{"lineNumber":84,"author":{"gitId":"wilsonwid"},"content":"[T] [X] read article","lastModifiedDate":"2024-02-22"},{"lineNumber":85,"author":{"gitId":"wilsonwid"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":86,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":87,"author":{"gitId":"wilsonwid"},"content":"Running `list` again, we see the following:","lastModifiedDate":"2024-02-22"},{"lineNumber":88,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":89,"author":{"gitId":"wilsonwid"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":90,"author":{"gitId":"wilsonwid"},"content":"1. [T] [X] read article","lastModifiedDate":"2024-02-22"},{"lineNumber":91,"author":{"gitId":"wilsonwid"},"content":"2. [T] [ ] read essay","lastModifiedDate":"2024-02-22"},{"lineNumber":92,"author":{"gitId":"wilsonwid"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":93,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":94,"author":{"gitId":"wilsonwid"},"content":"### Unmarking tasks as done","lastModifiedDate":"2024-02-22"},{"lineNumber":95,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":96,"author":{"gitId":"wilsonwid"},"content":"To mark tasks as undone, type `unmark INDEX` and press enter, where `INDEX` is the index of the task you wish to mark as done. ","lastModifiedDate":"2024-02-22"},{"lineNumber":97,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":98,"author":{"gitId":"wilsonwid"},"content":"Using the same tasks as above and assuming we have run `mark 1`, we can run `unmark 1` to unmark `read article`. TalkingBot will then return the following:","lastModifiedDate":"2024-02-22"},{"lineNumber":99,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":100,"author":{"gitId":"wilsonwid"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":101,"author":{"gitId":"wilsonwid"},"content":"Alright, I\u0027ve marked this task as undone.","lastModifiedDate":"2024-02-22"},{"lineNumber":102,"author":{"gitId":"wilsonwid"},"content":"[T] [ ] read article","lastModifiedDate":"2024-02-22"},{"lineNumber":103,"author":{"gitId":"wilsonwid"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":104,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":105,"author":{"gitId":"wilsonwid"},"content":"Running `list` again, we see the following:","lastModifiedDate":"2024-02-22"},{"lineNumber":106,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":107,"author":{"gitId":"wilsonwid"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":108,"author":{"gitId":"wilsonwid"},"content":"1. [T] [ ] read article","lastModifiedDate":"2024-02-22"},{"lineNumber":109,"author":{"gitId":"wilsonwid"},"content":"2. [T] [ ] read essay","lastModifiedDate":"2024-02-22"},{"lineNumber":110,"author":{"gitId":"wilsonwid"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":111,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":112,"author":{"gitId":"wilsonwid"},"content":"## Deleting a task","lastModifiedDate":"2024-02-22"},{"lineNumber":113,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":114,"author":{"gitId":"wilsonwid"},"content":"To delete a task, type `delete INDEX` and press enter, where `INDEX` is the index of the task you wish to delete.","lastModifiedDate":"2024-02-22"},{"lineNumber":115,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":116,"author":{"gitId":"wilsonwid"},"content":"For example, if we have two todos `read article` and `read essay`, running `list` can return the following:","lastModifiedDate":"2024-02-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":118,"author":{"gitId":"wilsonwid"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":119,"author":{"gitId":"wilsonwid"},"content":"1. [T] [ ] read article","lastModifiedDate":"2024-02-22"},{"lineNumber":120,"author":{"gitId":"wilsonwid"},"content":"2. [T] [ ] read essay","lastModifiedDate":"2024-02-22"},{"lineNumber":121,"author":{"gitId":"wilsonwid"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":122,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":123,"author":{"gitId":"wilsonwid"},"content":"To delete `read article`, we can type in `delete 1`, as `1` is the index of the task. Running `list` again, we see the following:","lastModifiedDate":"2024-02-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":126,"author":{"gitId":"wilsonwid"},"content":"1. [T] [ ] read essay","lastModifiedDate":"2024-02-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":129,"author":{"gitId":"wilsonwid"},"content":"## Finding a task","lastModifiedDate":"2024-02-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":131,"author":{"gitId":"wilsonwid"},"content":"TalkingBot is able to help you find the tasks you need. To do this, type `find KEYWORD` and press enter, where `KEYWORD` is a substring that exists in the descriptions of the tasks you want.","lastModifiedDate":"2024-02-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":133,"author":{"gitId":"wilsonwid"},"content":"For example, if we have the same todos as in the [Deleting a task](#deleting-a-task) section above, we can run `find article` and TalkingBot will return the following:","lastModifiedDate":"2024-02-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":136,"author":{"gitId":"wilsonwid"},"content":"Here are the tasks with descriptions matching your query:","lastModifiedDate":"2024-02-22"},{"lineNumber":137,"author":{"gitId":"wilsonwid"},"content":"1. [T] [ ] read article","lastModifiedDate":"2024-02-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":140,"author":{"gitId":"wilsonwid"},"content":"## Saving tasks","lastModifiedDate":"2024-02-22"},{"lineNumber":141,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":142,"author":{"gitId":"wilsonwid"},"content":"TalkingBot is smart enough to save tasks! To do this, simply type `save` and press enter. This will save the tasks to the `./data/taskList.txt` file (relative to the location of the `talkingbot.jar` file).","lastModifiedDate":"2024-02-22"},{"lineNumber":143,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":144,"author":{"gitId":"wilsonwid"},"content":"After saving, TalkingBot will respond with the following message:","lastModifiedDate":"2024-02-22"},{"lineNumber":145,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":146,"author":{"gitId":"wilsonwid"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":147,"author":{"gitId":"wilsonwid"},"content":"Saving tasks to file: ./data/taskList.txt","lastModifiedDate":"2024-02-22"},{"lineNumber":148,"author":{"gitId":"wilsonwid"},"content":"Save done!","lastModifiedDate":"2024-02-22"},{"lineNumber":149,"author":{"gitId":"wilsonwid"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":151,"author":{"gitId":"wilsonwid"},"content":"We will also be able to see a `./data/taskList.txt` file that stores the list of tasks we have in TalkingBot.","lastModifiedDate":"2024-02-22"},{"lineNumber":152,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":153,"author":{"gitId":"wilsonwid"},"content":"## Exiting ","lastModifiedDate":"2024-02-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":155,"author":{"gitId":"wilsonwid"},"content":"Once you\u0027re done with managing your daily activities using TalkingBot and wish to exit the application, type `bye` into the command line. This will also save the tasks to the same file as in the [Saving Tasks](#saving-tasks) section above.","lastModifiedDate":"2024-02-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":157,"author":{"gitId":"wilsonwid"},"content":"Before exiting, TalkingBot will respond with the following message:","lastModifiedDate":"2024-02-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07"},{"lineNumber":159,"author":{"gitId":"wilsonwid"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":160,"author":{"gitId":"wilsonwid"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2024-02-22"},{"lineNumber":161,"author":{"gitId":"wilsonwid"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":162,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":163,"author":{"gitId":"wilsonwid"},"content":"## Invalid commands","lastModifiedDate":"2024-02-22"},{"lineNumber":164,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":165,"author":{"gitId":"wilsonwid"},"content":"Any other command (other than the aforementioned ones) entered into TalkingBot will be processed as an invalid command. ","lastModifiedDate":"2024-02-22"},{"lineNumber":166,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":167,"author":{"gitId":"wilsonwid"},"content":"Given an invalid command, TalkingBot will respond with the following message:","lastModifiedDate":"2024-02-22"},{"lineNumber":168,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":169,"author":{"gitId":"wilsonwid"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":170,"author":{"gitId":"wilsonwid"},"content":"ERROR! Unknown command detected.","lastModifiedDate":"2024-02-22"},{"lineNumber":171,"author":{"gitId":"wilsonwid"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":173,"author":{"gitId":"wilsonwid"},"content":"However, whenever one has entered an invalid format for a command, other custom error messages will be displayed instead.","lastModifiedDate":"2024-02-24"}],"authorContributionMap":{"wilsonwid":147,"-":26}},{"path":"src/main/java/talkingbot/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilsonwid"},"content":"package talkingbot;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"wilsonwid"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"wilsonwid"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"wilsonwid"},"content":" * Class for the GUI launcher.","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"wilsonwid"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"wilsonwid"},"content":"public class Launcher {","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"wilsonwid"},"content":"     * Launches the application.","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"wilsonwid"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"wilsonwid"},"content":"     * @param args Arguments to be passed.","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"wilsonwid"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"wilsonwid"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"wilsonwid"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"wilsonwid":17}},{"path":"src/main/java/talkingbot/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilsonwid"},"content":"package talkingbot;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"wilsonwid"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"wilsonwid"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"wilsonwid"},"content":"import javafx.application.Platform;","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"wilsonwid"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"wilsonwid"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"wilsonwid"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"wilsonwid"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"wilsonwid"},"content":"import talkingbot.gui.Window;","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"wilsonwid"},"content":"import talkingbot.logic.TalkingBot;","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"wilsonwid"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"wilsonwid"},"content":" * Class connecting the logic and the GUI of the application.","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"wilsonwid"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"wilsonwid"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"wilsonwid"},"content":"    private static final String PATH_TO_WINDOW_FXML \u003d \"/gui/Window.fxml\";","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"wilsonwid"},"content":"    private static final int CHECK_INTERVAL \u003d 100;","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"wilsonwid"},"content":"    private TalkingBot talkingBot \u003d new TalkingBot();","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"wilsonwid"},"content":"    private Thread stopChecker;","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"wilsonwid"},"content":"     * Loads the main window of the application and displays it.","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"wilsonwid"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"wilsonwid"},"content":"     * @param stage Stage for the application.","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"wilsonwid"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"wilsonwid"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"wilsonwid"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"wilsonwid"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(PATH_TO_WINDOW_FXML));","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"wilsonwid"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"wilsonwid"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"wilsonwid"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"wilsonwid"},"content":"            fxmlLoader.\u003cWindow\u003egetController().setBot(this.talkingBot);","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"wilsonwid"},"content":"            stage.show();","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"wilsonwid"},"content":"            stage.setTitle(\"TalkingBot\");","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"wilsonwid"},"content":"            this.startChecker();","lastModifiedDate":"2024-02-18"},{"lineNumber":39,"author":{"gitId":"wilsonwid"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-18"},{"lineNumber":40,"author":{"gitId":"wilsonwid"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-18"},{"lineNumber":41,"author":{"gitId":"wilsonwid"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":42,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":43,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":44,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":45,"author":{"gitId":"wilsonwid"},"content":"     * Starts a new Thread that checks whether the bot should","lastModifiedDate":"2024-02-18"},{"lineNumber":46,"author":{"gitId":"wilsonwid"},"content":"     * still remain running.","lastModifiedDate":"2024-02-18"},{"lineNumber":47,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":48,"author":{"gitId":"wilsonwid"},"content":"    // Solution below adapted from https://github.com/GERARDJM018/ip/blob/master/src/main/java/duke/Main.java","lastModifiedDate":"2024-02-17"},{"lineNumber":49,"author":{"gitId":"wilsonwid"},"content":"    private void startChecker() {","lastModifiedDate":"2024-02-18"},{"lineNumber":50,"author":{"gitId":"wilsonwid"},"content":"        this.stopChecker \u003d new Thread(() -\u003e {","lastModifiedDate":"2024-02-17"},{"lineNumber":51,"author":{"gitId":"wilsonwid"},"content":"            while (true) {","lastModifiedDate":"2024-02-17"},{"lineNumber":52,"author":{"gitId":"wilsonwid"},"content":"                if (this.talkingBot.getIsRunning()) {","lastModifiedDate":"2024-02-17"},{"lineNumber":53,"author":{"gitId":"wilsonwid"},"content":"                    try {","lastModifiedDate":"2024-02-17"},{"lineNumber":54,"author":{"gitId":"wilsonwid"},"content":"                        Thread.sleep(CHECK_INTERVAL);","lastModifiedDate":"2024-02-17"},{"lineNumber":55,"author":{"gitId":"wilsonwid"},"content":"                    } catch (Exception e) {","lastModifiedDate":"2024-02-17"},{"lineNumber":56,"author":{"gitId":"wilsonwid"},"content":"                        System.out.println(e);","lastModifiedDate":"2024-02-17"},{"lineNumber":57,"author":{"gitId":"wilsonwid"},"content":"                    }","lastModifiedDate":"2024-02-17"},{"lineNumber":58,"author":{"gitId":"wilsonwid"},"content":"                    continue;","lastModifiedDate":"2024-02-17"},{"lineNumber":59,"author":{"gitId":"wilsonwid"},"content":"                }","lastModifiedDate":"2024-02-17"},{"lineNumber":60,"author":{"gitId":"wilsonwid"},"content":"                try {","lastModifiedDate":"2024-02-17"},{"lineNumber":61,"author":{"gitId":"wilsonwid"},"content":"                    this.stop();","lastModifiedDate":"2024-02-17"},{"lineNumber":62,"author":{"gitId":"wilsonwid"},"content":"                    this.stopChecker.sleep(5 * CHECK_INTERVAL);","lastModifiedDate":"2024-02-17"},{"lineNumber":63,"author":{"gitId":"wilsonwid"},"content":"                    Platform.exit();","lastModifiedDate":"2024-02-17"},{"lineNumber":64,"author":{"gitId":"wilsonwid"},"content":"                    this.stopChecker.stop();","lastModifiedDate":"2024-02-17"},{"lineNumber":65,"author":{"gitId":"wilsonwid"},"content":"                } catch (Exception e) {","lastModifiedDate":"2024-02-17"},{"lineNumber":66,"author":{"gitId":"wilsonwid"},"content":"                    System.out.println(e);","lastModifiedDate":"2024-02-17"},{"lineNumber":67,"author":{"gitId":"wilsonwid"},"content":"                }","lastModifiedDate":"2024-02-17"},{"lineNumber":68,"author":{"gitId":"wilsonwid"},"content":"                break;","lastModifiedDate":"2024-02-17"},{"lineNumber":69,"author":{"gitId":"wilsonwid"},"content":"            }","lastModifiedDate":"2024-02-17"},{"lineNumber":70,"author":{"gitId":"wilsonwid"},"content":"        });","lastModifiedDate":"2024-02-17"},{"lineNumber":71,"author":{"gitId":"wilsonwid"},"content":"        this.stopChecker.start();","lastModifiedDate":"2024-02-17"},{"lineNumber":72,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":73,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":74,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":75,"author":{"gitId":"wilsonwid"},"content":"     * Stops the running of the program.","lastModifiedDate":"2024-02-15"},{"lineNumber":76,"author":{"gitId":"wilsonwid"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":77,"author":{"gitId":"wilsonwid"},"content":"     * @throws Exception If there are any errors.","lastModifiedDate":"2024-02-15"},{"lineNumber":78,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":79,"author":{"gitId":"wilsonwid"},"content":"    @Override","lastModifiedDate":"2024-02-15"},{"lineNumber":80,"author":{"gitId":"wilsonwid"},"content":"    public void stop() throws Exception {","lastModifiedDate":"2024-02-15"},{"lineNumber":81,"author":{"gitId":"wilsonwid"},"content":"        this.talkingBot.save();","lastModifiedDate":"2024-02-15"},{"lineNumber":82,"author":{"gitId":"wilsonwid"},"content":"        super.stop();","lastModifiedDate":"2024-02-15"},{"lineNumber":83,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":84,"author":{"gitId":"wilsonwid"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"wilsonwid":84}},{"path":"src/main/java/talkingbot/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilsonwid"},"content":"package talkingbot.command;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"wilsonwid"},"content":"import talkingbot.exception.TalkingBotException;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"wilsonwid"},"content":"import talkingbot.util.SaveFile;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"wilsonwid"},"content":"import talkingbot.util.TaskList;","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"wilsonwid"},"content":"import talkingbot.util.Ui;","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"wilsonwid"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"wilsonwid"},"content":" * Class that represents the \"bye\" command entered by the user.","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"wilsonwid"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"wilsonwid"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"wilsonwid"},"content":"     * Creates a new ByeCommand instance.","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"wilsonwid"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"wilsonwid"},"content":"     * @param commandArr String array containing the command.","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"wilsonwid"},"content":"    public ByeCommand(String[] commandArr) {","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"wilsonwid"},"content":"        super(commandArr);","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"wilsonwid"},"content":"     * Runs this command.","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"wilsonwid"},"content":"     * Prints a goodbye message, saves current list to a file,","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"wilsonwid"},"content":"     * and stops the running of the program.","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"wilsonwid"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"wilsonwid"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"wilsonwid"},"content":"     * @param saveFile Abstraction for a file.","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"wilsonwid"},"content":"     * @param ui User interface.","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"wilsonwid"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"wilsonwid"},"content":"    public String runCommand(TaskList tasks, SaveFile saveFile, Ui ui) {","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"wilsonwid"},"content":"        String msg;","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"wilsonwid"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"wilsonwid"},"content":"            msg \u003d ui.getGoodbyeMsg();","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"wilsonwid"},"content":"            saveFile.saveTasksToFile(tasks);","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"wilsonwid"},"content":"        } catch (TalkingBotException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"wilsonwid"},"content":"            msg \u003d ui.getGenericErrorMsg(e);","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"wilsonwid"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"wilsonwid"},"content":"        return msg;","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"wilsonwid"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"wilsonwid":42}},{"path":"src/main/java/talkingbot/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilsonwid"},"content":"package talkingbot.command;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"wilsonwid"},"content":"import talkingbot.util.SaveFile;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"wilsonwid"},"content":"import talkingbot.util.TaskList;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"wilsonwid"},"content":"import talkingbot.util.Ui;","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"wilsonwid"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"wilsonwid"},"content":" * Class (abstract) that represents any command, both valid and invalid.","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"wilsonwid"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"wilsonwid"},"content":"public abstract class Command {","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"wilsonwid"},"content":"    private final String[] commandArr;","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"wilsonwid"},"content":"     * Creates a new  for the Command class.","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"wilsonwid"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"wilsonwid"},"content":"     * @param commandArr String array containing the command.","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"wilsonwid"},"content":"    public Command(String[] commandArr) {","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"wilsonwid"},"content":"        this.commandArr \u003d commandArr;","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"wilsonwid"},"content":"     * Returns the String array specifying the command to be executed.","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"wilsonwid"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"wilsonwid"},"content":"     * @return String array containing the command.","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"wilsonwid"},"content":"    public String[] getCommandArr() {","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"wilsonwid"},"content":"        return this.commandArr;","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"wilsonwid"},"content":"     * Runs command (in subclasses) and returns a resulting String.","lastModifiedDate":"2024-02-17"},{"lineNumber":33,"author":{"gitId":"wilsonwid"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"wilsonwid"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"wilsonwid"},"content":"     * @param saveFile Abstraction for a file.","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"wilsonwid"},"content":"     * @param ui User interface.","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"wilsonwid"},"content":"    public abstract String runCommand(TaskList tasks, SaveFile saveFile, Ui ui);","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"wilsonwid"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"wilsonwid":39}},{"path":"src/main/java/talkingbot/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilsonwid"},"content":"package talkingbot.command;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"wilsonwid"},"content":"import talkingbot.task.Task;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"wilsonwid"},"content":"import talkingbot.util.SaveFile;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"wilsonwid"},"content":"import talkingbot.util.TaskList;","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"wilsonwid"},"content":"import talkingbot.util.Ui;","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"wilsonwid"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"wilsonwid"},"content":" * Class that represents the \"delete\" command entered by the user.","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"wilsonwid"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"wilsonwid"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"wilsonwid"},"content":"     * Creates a new DeleteCommand instance.","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"wilsonwid"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"wilsonwid"},"content":"     * @param commandArr String array containing the command.","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"wilsonwid"},"content":"    public DeleteCommand(String[] commandArr) {","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"wilsonwid"},"content":"        super(commandArr);","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"wilsonwid"},"content":"     * Runs this command.","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"wilsonwid"},"content":"     * Gets the index of the Task to be deleted, removes the task from the list of tasks,","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"wilsonwid"},"content":"     * and prints out the removed Task.","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"wilsonwid"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"wilsonwid"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"wilsonwid"},"content":"     * @param saveFile Abstraction for a file.","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"wilsonwid"},"content":"     * @param ui User interface.","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"wilsonwid"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"wilsonwid"},"content":"    public String runCommand(TaskList tasks, SaveFile saveFile, Ui ui) {","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"wilsonwid"},"content":"        String[] curCommand \u003d super.getCommandArr();","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"wilsonwid"},"content":"        String deleteIdxStr \u003d curCommand[1];","lastModifiedDate":"2024-02-15"},{"lineNumber":35,"author":{"gitId":"wilsonwid"},"content":"        int deleteIdxInt \u003d Integer.valueOf(deleteIdxStr);","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"wilsonwid"},"content":"        Task removedTask \u003d tasks.removeTask(deleteIdxInt - 1);","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"wilsonwid"},"content":"        assert !tasks.getTask(deleteIdxInt - 1).equals(removedTask) : \"task should already be removed\";","lastModifiedDate":"2024-02-15"},{"lineNumber":38,"author":{"gitId":"wilsonwid"},"content":"        return ui.getDeleteTaskMsg(removedTask, tasks.getSize());","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"wilsonwid"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"wilsonwid":40}},{"path":"src/main/java/talkingbot/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilsonwid"},"content":"package talkingbot.command;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"wilsonwid"},"content":"import talkingbot.util.SaveFile;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"wilsonwid"},"content":"import talkingbot.util.TaskList;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"wilsonwid"},"content":"import talkingbot.util.Ui;","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"wilsonwid"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"wilsonwid"},"content":" * Class representing the \"find\" command entered by the user.","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"wilsonwid"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"wilsonwid"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"wilsonwid"},"content":"     * Creates a new FindCommand instance.","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"wilsonwid"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"wilsonwid"},"content":"     * @param commandArr String array containing the command.","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"wilsonwid"},"content":"    public FindCommand(String[] commandArr) {","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"wilsonwid"},"content":"        super(commandArr);","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"wilsonwid"},"content":"     * Runs this command.","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"wilsonwid"},"content":"     * Gets the String array containing the command before printing","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"wilsonwid"},"content":"     * a filtered list of tasks that contain matching descriptions.","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"wilsonwid"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"wilsonwid"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"wilsonwid"},"content":"     * @param saveFile Abstraction for a file.","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"wilsonwid"},"content":"     * @param ui User interface.","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"wilsonwid"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"wilsonwid"},"content":"    public String runCommand(TaskList tasks, SaveFile saveFile, Ui ui) {","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"wilsonwid"},"content":"        String[] commandArr \u003d super.getCommandArr();","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"wilsonwid"},"content":"        try {","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"wilsonwid"},"content":"            String filterCondition \u003d commandArr[1];","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"wilsonwid"},"content":"            return tasks.filterList(filterCondition);","lastModifiedDate":"2024-02-15"},{"lineNumber":35,"author":{"gitId":"wilsonwid"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"wilsonwid"},"content":"            return ui.getFindCmdErrMsg();","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"wilsonwid"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"wilsonwid"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"wilsonwid":39}},{"path":"src/main/java/talkingbot/command/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilsonwid"},"content":"package talkingbot.command;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"wilsonwid"},"content":"import talkingbot.util.SaveFile;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"wilsonwid"},"content":"import talkingbot.util.TaskList;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"wilsonwid"},"content":"import talkingbot.util.Ui;","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"wilsonwid"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"wilsonwid"},"content":" * Class that represents any invalid commands entered by the user.","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"wilsonwid"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"wilsonwid"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"wilsonwid"},"content":"     * Creates a new InvalidCommand instance.","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"wilsonwid"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"wilsonwid"},"content":"     * @param commandArr String array containing the command.","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"wilsonwid"},"content":"    public InvalidCommand(String[] commandArr) {","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"wilsonwid"},"content":"        super(commandArr);","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"wilsonwid"},"content":"     * Runs this type of command.","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"wilsonwid"},"content":"     * Prints an invalid command message to the standard output.","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"wilsonwid"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"wilsonwid"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"wilsonwid"},"content":"     * @param saveFile Abstraction for a file.","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"wilsonwid"},"content":"     * @param ui User interface.","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"wilsonwid"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"wilsonwid"},"content":"    public String runCommand(TaskList tasks, SaveFile saveFile, Ui ui) {","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"wilsonwid"},"content":"        return ui.getInvalidCmdMsg();","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"wilsonwid"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"wilsonwid":33}},{"path":"src/main/java/talkingbot/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilsonwid"},"content":"package talkingbot.command;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"wilsonwid"},"content":"import talkingbot.util.SaveFile;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"wilsonwid"},"content":"import talkingbot.util.TaskList;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"wilsonwid"},"content":"import talkingbot.util.Ui;","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"wilsonwid"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"wilsonwid"},"content":" * Class that represents the \"list\" command entered by the user.","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"wilsonwid"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"wilsonwid"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"wilsonwid"},"content":"     * Creates a new ListCommand instance.","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"wilsonwid"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"wilsonwid"},"content":"     * @param commandArr String array containing the command.","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"wilsonwid"},"content":"    public ListCommand(String[] commandArr) {","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"wilsonwid"},"content":"        super(commandArr);","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"wilsonwid"},"content":"     * Runs this command.","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"wilsonwid"},"content":"     * Prints out the list of Tasks to the standard output.","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"wilsonwid"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"wilsonwid"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"wilsonwid"},"content":"     * @param saveFile Abstraction for a file.","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"wilsonwid"},"content":"     * @param ui User interface.","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"wilsonwid"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"wilsonwid"},"content":"    public String runCommand(TaskList tasks, SaveFile saveFile, Ui ui) {","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"wilsonwid"},"content":"        return tasks.toString();","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"wilsonwid"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"wilsonwid":33}},{"path":"src/main/java/talkingbot/command/ModifyMarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilsonwid"},"content":"package talkingbot.command;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"wilsonwid"},"content":"import talkingbot.task.Task;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"wilsonwid"},"content":"import talkingbot.util.SaveFile;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"wilsonwid"},"content":"import talkingbot.util.TaskList;","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"wilsonwid"},"content":"import talkingbot.util.Ui;","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"wilsonwid"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"wilsonwid"},"content":" * Class that represents both the \"mark\" and \"unmark\" commands","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"wilsonwid"},"content":" * entered by the user.","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"wilsonwid"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"wilsonwid"},"content":"public class ModifyMarkCommand extends Command {","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"wilsonwid"},"content":"     * Creates a new ModifyCommand instance.","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"wilsonwid"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"wilsonwid"},"content":"     * @param commandArr String array containing the command.","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"wilsonwid"},"content":"    public ModifyMarkCommand(String[] commandArr) {","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"wilsonwid"},"content":"        super(commandArr);","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"wilsonwid"},"content":"     * Runs this command.","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"wilsonwid"},"content":"     * Gets the index of the Task to be modified,","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"wilsonwid"},"content":"     * modifies the Task\u0027s mark, and sets the Task in the same","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"wilsonwid"},"content":"     * index of the list of Tasks to the modified Task.","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"wilsonwid"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"wilsonwid"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"wilsonwid"},"content":"     * @param saveFile Abstraction for a file.","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"wilsonwid"},"content":"     * @param ui User interface.","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"wilsonwid"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"wilsonwid"},"content":"    public String runCommand(TaskList tasks, SaveFile saveFile, Ui ui) {","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"wilsonwid"},"content":"        String[] curCommand \u003d super.getCommandArr();","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"wilsonwid"},"content":"        String markIdxStr \u003d curCommand[1];","lastModifiedDate":"2024-02-15"},{"lineNumber":37,"author":{"gitId":"wilsonwid"},"content":"        int markIdxInt \u003d Integer.valueOf(markIdxStr);","lastModifiedDate":"2024-02-15"},{"lineNumber":38,"author":{"gitId":"wilsonwid"},"content":"        Task modifiedTask \u003d tasks.getTask(markIdxInt - 1);","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"wilsonwid"},"content":"        String msg;","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"wilsonwid"},"content":"        boolean isMark \u003d curCommand[0].equals(\"mark\");","lastModifiedDate":"2024-02-15"},{"lineNumber":41,"author":{"gitId":"wilsonwid"},"content":"        if (isMark) {","lastModifiedDate":"2024-02-15"},{"lineNumber":42,"author":{"gitId":"wilsonwid"},"content":"            modifiedTask.setDone(true);","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"wilsonwid"},"content":"            assert modifiedTask.getDone() : \"task should be set as done\";","lastModifiedDate":"2024-02-15"},{"lineNumber":44,"author":{"gitId":"wilsonwid"},"content":"            msg \u003d ui.getTaskDoneMsg(modifiedTask);","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"wilsonwid"},"content":"        } else {","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"wilsonwid"},"content":"            modifiedTask.setDone(false);","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"wilsonwid"},"content":"            assert !modifiedTask.getDone() : \"task should be set as undone\";","lastModifiedDate":"2024-02-15"},{"lineNumber":48,"author":{"gitId":"wilsonwid"},"content":"            msg \u003d ui.getTaskSetUndoneMsg(modifiedTask);","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"wilsonwid"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"wilsonwid"},"content":"        tasks.setTask(markIdxInt - 1, modifiedTask);","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"wilsonwid"},"content":"        assert tasks.getTask(markIdxInt - 1).equals(modifiedTask) : \"task at the index should be the modified task\";","lastModifiedDate":"2024-02-18"},{"lineNumber":52,"author":{"gitId":"wilsonwid"},"content":"        return msg;","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":54,"author":{"gitId":"wilsonwid"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"wilsonwid":54}},{"path":"src/main/java/talkingbot/command/SaveCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilsonwid"},"content":"package talkingbot.command;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"wilsonwid"},"content":"import talkingbot.exception.TalkingBotException;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"wilsonwid"},"content":"import talkingbot.util.SaveFile;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"wilsonwid"},"content":"import talkingbot.util.TaskList;","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"wilsonwid"},"content":"import talkingbot.util.Ui;","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"wilsonwid"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"wilsonwid"},"content":" * Class that represents the \"save\" command entered by the user.","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"wilsonwid"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"wilsonwid"},"content":"public class SaveCommand extends Command {","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"wilsonwid"},"content":"     * Creates a new SaveCommand instance.","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"wilsonwid"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"wilsonwid"},"content":"     * @param commandArr String array containing the command.","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"wilsonwid"},"content":"    public SaveCommand(String[] commandArr) {","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"wilsonwid"},"content":"        super(commandArr);","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"wilsonwid"},"content":"     * Runs this command.","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"wilsonwid"},"content":"     * Tries to save the file and print messages to the standard output,","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"wilsonwid"},"content":"     * and catches any exceptions that may occur before also","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"wilsonwid"},"content":"     * printing them to the standard output.","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"wilsonwid"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"wilsonwid"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"wilsonwid"},"content":"     * @param saveFile Abstraction for a file.","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"wilsonwid"},"content":"     * @param ui User interface.","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"wilsonwid"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"wilsonwid"},"content":"    public String runCommand(TaskList tasks, SaveFile saveFile, Ui ui) {","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"wilsonwid"},"content":"        String msg;","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"wilsonwid"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"wilsonwid"},"content":"            msg \u003d ui.getSaveOngoingMsg(saveFile.getFileName());","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"wilsonwid"},"content":"            saveFile.saveTasksToFile(tasks);","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"wilsonwid"},"content":"            msg +\u003d ui.getSaveDoneMsg();","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"wilsonwid"},"content":"        } catch (TalkingBotException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"wilsonwid"},"content":"            msg \u003d ui.getGenericErrorMsg(e);","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"wilsonwid"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"wilsonwid"},"content":"        return msg;","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"wilsonwid"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"wilsonwid":44}},{"path":"src/main/java/talkingbot/command/TaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilsonwid"},"content":"package talkingbot.command;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"wilsonwid"},"content":"import talkingbot.exception.TalkingBotException;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"wilsonwid"},"content":"import talkingbot.task.Task;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"wilsonwid"},"content":"import talkingbot.util.SaveFile;","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"wilsonwid"},"content":"import talkingbot.util.TaskList;","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"wilsonwid"},"content":"import talkingbot.util.Ui;","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"wilsonwid"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"wilsonwid"},"content":" * Class that represents any command that creates tasks, i.e.,","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"wilsonwid"},"content":" * the \"todo\", \"deadline\", and \"event\" commands entered in by","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"wilsonwid"},"content":" * the user.","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"wilsonwid"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"wilsonwid"},"content":"public class TaskCommand extends Command {","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"wilsonwid"},"content":"     * Creates a new TaskCommand instance.","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"wilsonwid"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"wilsonwid"},"content":"     * @param commandArr String array containing the command.","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"wilsonwid"},"content":"    public TaskCommand(String[] commandArr) {","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"wilsonwid"},"content":"        super(commandArr);","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"wilsonwid"},"content":"     * Parses the command String array and returns a formatted version of it.","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"wilsonwid"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"wilsonwid"},"content":"     * @return Parsed String representing the command.","lastModifiedDate":"2024-02-15"},{"lineNumber":29,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":30,"author":{"gitId":"wilsonwid"},"content":"    private String parseTask() {","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"wilsonwid"},"content":"        String[] curCommand \u003d super.getCommandArr();","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"wilsonwid"},"content":"        StringBuilder sbDescription \u003d new StringBuilder();","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"wilsonwid"},"content":"        for (int i \u003d 1; i \u003c curCommand.length; i++) {","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"wilsonwid"},"content":"            sbDescription.append(curCommand[i]);","lastModifiedDate":"2024-02-15"},{"lineNumber":35,"author":{"gitId":"wilsonwid"},"content":"            if (i \u003c curCommand.length - 1) {","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"wilsonwid"},"content":"                sbDescription.append(\" \");","lastModifiedDate":"2024-02-15"},{"lineNumber":37,"author":{"gitId":"wilsonwid"},"content":"            }","lastModifiedDate":"2024-02-15"},{"lineNumber":38,"author":{"gitId":"wilsonwid"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":39,"author":{"gitId":"wilsonwid"},"content":"        return sbDescription.toString();","lastModifiedDate":"2024-02-15"},{"lineNumber":40,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":41,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":42,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"wilsonwid"},"content":"     * Runs this command.","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"wilsonwid"},"content":"     * Creates a String containing information about the Task,","lastModifiedDate":"2024-01-27"},{"lineNumber":45,"author":{"gitId":"wilsonwid"},"content":"     * passes it to a static method for a Task to be generated,","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"wilsonwid"},"content":"     * then tries to add such Task to the list of Tasks while printing to the standard output. Catches","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"wilsonwid"},"content":"     * an exception if any occur and prints it to the standard output.","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"wilsonwid"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"wilsonwid"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"wilsonwid"},"content":"     * @param saveFile Abstraction for a file.","lastModifiedDate":"2024-01-27"},{"lineNumber":51,"author":{"gitId":"wilsonwid"},"content":"     * @param ui User interface.","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"wilsonwid"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":54,"author":{"gitId":"wilsonwid"},"content":"    public String runCommand(TaskList tasks, SaveFile saveFile, Ui ui) {","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"wilsonwid"},"content":"        String[] curCommand \u003d super.getCommandArr();","lastModifiedDate":"2024-01-27"},{"lineNumber":56,"author":{"gitId":"wilsonwid"},"content":"        String fullDescription \u003d this.parseTask();","lastModifiedDate":"2024-02-15"},{"lineNumber":57,"author":{"gitId":"wilsonwid"},"content":"        String msg;","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"wilsonwid"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":59,"author":{"gitId":"wilsonwid"},"content":"            Task curTask \u003d Task.generateTask(fullDescription, curCommand[0]);","lastModifiedDate":"2024-01-27"},{"lineNumber":60,"author":{"gitId":"wilsonwid"},"content":"            tasks.addTask(curTask);","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"wilsonwid"},"content":"            msg \u003d ui.getAddTaskMsg(curTask, tasks.getSize());","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"wilsonwid"},"content":"        } catch (TalkingBotException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":63,"author":{"gitId":"wilsonwid"},"content":"            msg \u003d ui.getGenericErrorMsg(e);","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"wilsonwid"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":65,"author":{"gitId":"wilsonwid"},"content":"        return msg;","lastModifiedDate":"2024-02-07"},{"lineNumber":66,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":67,"author":{"gitId":"wilsonwid"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"wilsonwid":67}},{"path":"src/main/java/talkingbot/exception/TalkingBotException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilsonwid"},"content":"package talkingbot.exception;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"wilsonwid"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"wilsonwid"},"content":" * Represents any exception that may occur during the running","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"wilsonwid"},"content":" * of the program.","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"wilsonwid"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"wilsonwid"},"content":"public class TalkingBotException extends Exception {","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"wilsonwid"},"content":"     * Creates a new TalkingBotException instance.","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"wilsonwid"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"wilsonwid"},"content":"     * @param errorMessage String indicating the error message.","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"wilsonwid"},"content":"    public TalkingBotException(String errorMessage) {","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"wilsonwid"},"content":"        super(errorMessage);","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"wilsonwid"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"wilsonwid":17}},{"path":"src/main/java/talkingbot/gui/Message.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilsonwid"},"content":"package talkingbot.gui;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"wilsonwid"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"wilsonwid"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"wilsonwid"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"wilsonwid"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"wilsonwid"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"wilsonwid"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"wilsonwid"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"wilsonwid"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"wilsonwid"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"wilsonwid"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"wilsonwid"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"wilsonwid"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"wilsonwid"},"content":" * Class to display message bubbles.","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"wilsonwid"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"wilsonwid"},"content":"public class Message extends HBox {","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"wilsonwid"},"content":"    private static final String MESSAGE_FXML_PATH \u003d \"/gui/Message.fxml\";","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"wilsonwid"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"wilsonwid"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"wilsonwid"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"wilsonwid"},"content":"    private Label displayText;","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"wilsonwid"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"wilsonwid"},"content":"    private Label displayName;","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"wilsonwid"},"content":"     * Creates a new Message instance.","lastModifiedDate":"2024-02-17"},{"lineNumber":30,"author":{"gitId":"wilsonwid"},"content":"     * @param displayPicture Display picture of the sender.","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"wilsonwid"},"content":"     * @param displayText Text to be displayed in the message.","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"wilsonwid"},"content":"     * @param displayName Display name of the sender.","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"wilsonwid"},"content":"    private Message(Image displayPicture, String displayText, String displayName) {","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"wilsonwid"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"wilsonwid"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Window.class.getResource(MESSAGE_FXML_PATH));","lastModifiedDate":"2024-02-15"},{"lineNumber":37,"author":{"gitId":"wilsonwid"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"wilsonwid"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"wilsonwid"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"wilsonwid"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"wilsonwid"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"wilsonwid"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"wilsonwid"},"content":"        this.displayPicture.setImage(displayPicture);","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"wilsonwid"},"content":"        this.displayText.setText(displayText);","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"wilsonwid"},"content":"        this.displayName.setText(displayName);","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":49,"author":{"gitId":"wilsonwid"},"content":"     * Flips the positioning of the children in the Message.","lastModifiedDate":"2024-02-18"},{"lineNumber":50,"author":{"gitId":"wilsonwid"},"content":"     * Used to create the bot\u0027s response.","lastModifiedDate":"2024-02-18"},{"lineNumber":51,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":52,"author":{"gitId":"wilsonwid"},"content":"    private void flip() {","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"wilsonwid"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"wilsonwid"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"wilsonwid"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"wilsonwid"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":60,"author":{"gitId":"wilsonwid"},"content":"     * Gets the user message to be displayed.","lastModifiedDate":"2024-02-15"},{"lineNumber":61,"author":{"gitId":"wilsonwid"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":62,"author":{"gitId":"wilsonwid"},"content":"     * @param displayPicture Display picture of the user.","lastModifiedDate":"2024-02-15"},{"lineNumber":63,"author":{"gitId":"wilsonwid"},"content":"     * @param text The text sent by the user.","lastModifiedDate":"2024-02-15"},{"lineNumber":64,"author":{"gitId":"wilsonwid"},"content":"     * @param displayName The user\u0027s display name.","lastModifiedDate":"2024-02-15"},{"lineNumber":65,"author":{"gitId":"wilsonwid"},"content":"     * @return","lastModifiedDate":"2024-02-15"},{"lineNumber":66,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":67,"author":{"gitId":"wilsonwid"},"content":"    public static Message getUserMessage(Image displayPicture, String text, String displayName) {","lastModifiedDate":"2024-02-07"},{"lineNumber":68,"author":{"gitId":"wilsonwid"},"content":"        return new Message(displayPicture, text, displayName);","lastModifiedDate":"2024-02-07"},{"lineNumber":69,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":70,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":71,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":72,"author":{"gitId":"wilsonwid"},"content":"     * Gets the bot\u0027s response message.","lastModifiedDate":"2024-02-15"},{"lineNumber":73,"author":{"gitId":"wilsonwid"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":74,"author":{"gitId":"wilsonwid"},"content":"     * @param displayPicture Display picture of the bot.","lastModifiedDate":"2024-02-15"},{"lineNumber":75,"author":{"gitId":"wilsonwid"},"content":"     * @param text Text response sent by the bot.","lastModifiedDate":"2024-02-15"},{"lineNumber":76,"author":{"gitId":"wilsonwid"},"content":"     * @param displayName Display name of the bot.","lastModifiedDate":"2024-02-15"},{"lineNumber":77,"author":{"gitId":"wilsonwid"},"content":"     * @return","lastModifiedDate":"2024-02-15"},{"lineNumber":78,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":79,"author":{"gitId":"wilsonwid"},"content":"    public static Message getBotMessage(Image displayPicture, String text, String displayName) {","lastModifiedDate":"2024-02-07"},{"lineNumber":80,"author":{"gitId":"wilsonwid"},"content":"        Message cur \u003d new Message(displayPicture, text, displayName);","lastModifiedDate":"2024-02-07"},{"lineNumber":81,"author":{"gitId":"wilsonwid"},"content":"        cur.flip();","lastModifiedDate":"2024-02-07"},{"lineNumber":82,"author":{"gitId":"wilsonwid"},"content":"        return cur;","lastModifiedDate":"2024-02-07"},{"lineNumber":83,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":84,"author":{"gitId":"wilsonwid"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"wilsonwid":84}},{"path":"src/main/java/talkingbot/gui/Window.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilsonwid"},"content":"package talkingbot.gui;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"wilsonwid"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"wilsonwid"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"wilsonwid"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"wilsonwid"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"wilsonwid"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"wilsonwid"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"wilsonwid"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"wilsonwid"},"content":"import talkingbot.logic.TalkingBot;","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"wilsonwid"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"wilsonwid"},"content":" * Class for the main window of the application.","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"wilsonwid"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"wilsonwid"},"content":"public class Window extends AnchorPane {","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"wilsonwid"},"content":"    private static final String BOT_NAME \u003d \"TalkingBot\";","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"wilsonwid"},"content":"    private static final String USER_NAME \u003d \"You\";","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"wilsonwid"},"content":"    private static final String BOT_IMAGE_PATH \u003d \"/gui/TalkingBot.jpg\";","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"wilsonwid"},"content":"    private static final String USER_IMAGE_PATH \u003d \"/gui/You.jpg\";","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"wilsonwid"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"wilsonwid"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"wilsonwid"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"wilsonwid"},"content":"    private VBox vBox;","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"wilsonwid"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"wilsonwid"},"content":"    private TextField textInput;","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"wilsonwid"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"wilsonwid"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"wilsonwid"},"content":"    private TalkingBot talkingBot;","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"wilsonwid"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(USER_IMAGE_PATH));","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"wilsonwid"},"content":"    private final Image botImage \u003d new Image(this.getClass().getResourceAsStream(BOT_IMAGE_PATH));","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"wilsonwid"},"content":"     * Initializes the scrollPane and binds it to the vBox.","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"wilsonwid"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"wilsonwid"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"wilsonwid"},"content":"        this.scrollPane.vvalueProperty().bind(this.vBox.heightProperty());","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"wilsonwid"},"content":"     * Sets the logic handler within the window.","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"wilsonwid"},"content":"     * @param talkingBot The logic handler of the application.","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"wilsonwid"},"content":"    public void setBot(TalkingBot talkingBot) {","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"wilsonwid"},"content":"        this.talkingBot \u003d talkingBot;","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"wilsonwid"},"content":"        this.vBox.getChildren().addAll(","lastModifiedDate":"2024-02-17"},{"lineNumber":49,"author":{"gitId":"wilsonwid"},"content":"                Message.getBotMessage(this.botImage, this.talkingBot.getWelcomeMsg(), BOT_NAME)","lastModifiedDate":"2024-02-17"},{"lineNumber":50,"author":{"gitId":"wilsonwid"},"content":"        );","lastModifiedDate":"2024-02-17"},{"lineNumber":51,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"wilsonwid"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"wilsonwid"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"wilsonwid"},"content":"        String text \u003d this.textInput.getText();","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"wilsonwid"},"content":"        String botResponse \u003d this.talkingBot.process(this.textInput.getText());","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"wilsonwid"},"content":"        this.vBox.getChildren().addAll(","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"wilsonwid"},"content":"                Message.getUserMessage(this.userImage, text, USER_NAME),","lastModifiedDate":"2024-02-17"},{"lineNumber":59,"author":{"gitId":"wilsonwid"},"content":"                Message.getBotMessage(this.botImage, botResponse, BOT_NAME)","lastModifiedDate":"2024-02-17"},{"lineNumber":60,"author":{"gitId":"wilsonwid"},"content":"        );","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"wilsonwid"},"content":"        this.textInput.clear();","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"wilsonwid"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"wilsonwid":63}},{"path":"src/main/java/talkingbot/logic/TalkingBot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilsonwid"},"content":"package talkingbot.logic;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"wilsonwid"},"content":"import talkingbot.command.Command;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"wilsonwid"},"content":"import talkingbot.exception.TalkingBotException;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"wilsonwid"},"content":"import talkingbot.util.Parser;","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"wilsonwid"},"content":"import talkingbot.util.SaveFile;","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"wilsonwid"},"content":"import talkingbot.util.TaskList;","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"wilsonwid"},"content":"import talkingbot.util.Ui;","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"wilsonwid"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"wilsonwid"},"content":" * Class serving as the entry point of the application.","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"wilsonwid"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"wilsonwid"},"content":"public class TalkingBot {","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"wilsonwid"},"content":"    private static final String FILE_PATH \u003d \"./data/taskList.txt\";","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"wilsonwid"},"content":"    private final SaveFile saveFile;","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"wilsonwid"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"wilsonwid"},"content":"    private final Ui ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"wilsonwid"},"content":"    private boolean isRunning \u003d true;","lastModifiedDate":"2024-02-16"},{"lineNumber":19,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"wilsonwid"},"content":"     * Constructs a new TalkingBot object with a given fileName.","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"wilsonwid"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"wilsonwid"},"content":"     * @param fileName Path to text file saving the list of tasks.","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"wilsonwid"},"content":"    public TalkingBot(String fileName) {","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"wilsonwid"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"wilsonwid"},"content":"        this.saveFile \u003d new SaveFile(fileName);","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"wilsonwid"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"wilsonwid"},"content":"            this.tasks \u003d this.saveFile.getTasksFromFile();","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"wilsonwid"},"content":"        } catch (TalkingBotException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"wilsonwid"},"content":"            this.ui.getLoadingErrorMsg(e);","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"wilsonwid"},"content":"            this.tasks \u003d new TaskList();","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"wilsonwid"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"wilsonwid"},"content":"     * Constructs a new TalkingBot instance.","lastModifiedDate":"2024-02-17"},{"lineNumber":38,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"wilsonwid"},"content":"    public TalkingBot() {","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"wilsonwid"},"content":"        this(FILE_PATH);","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"wilsonwid"},"content":"     * Processes the input text according and returns a formatted String.","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"wilsonwid"},"content":"     * @param text String to be processed by the application logic.","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"wilsonwid"},"content":"     * @return A formatted String.","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"wilsonwid"},"content":"    public String process(String text) {","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"wilsonwid"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"wilsonwid"},"content":"        Command curCommand \u003d parser.parseCommand(text);","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"wilsonwid"},"content":"        if (curCommand.getCommandArr()[0].equals(\"bye\")) {","lastModifiedDate":"2024-02-16"},{"lineNumber":52,"author":{"gitId":"wilsonwid"},"content":"            this.isRunning \u003d false;","lastModifiedDate":"2024-02-16"},{"lineNumber":53,"author":{"gitId":"wilsonwid"},"content":"            assert !this.isRunning : \"isRunning must be false\";","lastModifiedDate":"2024-02-17"},{"lineNumber":54,"author":{"gitId":"wilsonwid"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":55,"author":{"gitId":"wilsonwid"},"content":"        return curCommand.runCommand(this.tasks, this.saveFile, this.ui);","lastModifiedDate":"2024-02-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":57,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":58,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":59,"author":{"gitId":"wilsonwid"},"content":"     * Returns a welcome message.","lastModifiedDate":"2024-02-17"},{"lineNumber":60,"author":{"gitId":"wilsonwid"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":61,"author":{"gitId":"wilsonwid"},"content":"     * @return A welcome message as a String.","lastModifiedDate":"2024-02-17"},{"lineNumber":62,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":63,"author":{"gitId":"wilsonwid"},"content":"    public String getWelcomeMsg() {","lastModifiedDate":"2024-02-17"},{"lineNumber":64,"author":{"gitId":"wilsonwid"},"content":"        return this.ui.getWelcomeMsg();","lastModifiedDate":"2024-02-17"},{"lineNumber":65,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":66,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":67,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":68,"author":{"gitId":"wilsonwid"},"content":"     * Returns whether the bot is running.","lastModifiedDate":"2024-02-16"},{"lineNumber":69,"author":{"gitId":"wilsonwid"},"content":"     * @return A boolean value.","lastModifiedDate":"2024-02-16"},{"lineNumber":70,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":71,"author":{"gitId":"wilsonwid"},"content":"    public boolean getIsRunning() {","lastModifiedDate":"2024-02-16"},{"lineNumber":72,"author":{"gitId":"wilsonwid"},"content":"        return this.isRunning;","lastModifiedDate":"2024-02-16"},{"lineNumber":73,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":74,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":75,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":76,"author":{"gitId":"wilsonwid"},"content":"     * Saves the save file.","lastModifiedDate":"2024-02-15"},{"lineNumber":77,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":78,"author":{"gitId":"wilsonwid"},"content":"    public void save() {","lastModifiedDate":"2024-02-15"},{"lineNumber":79,"author":{"gitId":"wilsonwid"},"content":"        try {","lastModifiedDate":"2024-02-15"},{"lineNumber":80,"author":{"gitId":"wilsonwid"},"content":"            this.saveFile.saveTasksToFile(this.tasks);","lastModifiedDate":"2024-02-15"},{"lineNumber":81,"author":{"gitId":"wilsonwid"},"content":"        } catch (TalkingBotException e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":82,"author":{"gitId":"wilsonwid"},"content":"            System.out.println(e);","lastModifiedDate":"2024-02-15"},{"lineNumber":83,"author":{"gitId":"wilsonwid"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":84,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"wilsonwid":83,"-":2}},{"path":"src/main/java/talkingbot/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilsonwid"},"content":"package talkingbot.task;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"wilsonwid"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"wilsonwid"},"content":"import talkingbot.type.TaskType;","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"wilsonwid"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"wilsonwid"},"content":" * Class for the Deadline task.","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"wilsonwid"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"wilsonwid"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-21"},{"lineNumber":11,"author":{"gitId":"wilsonwid"},"content":"    private static final String DEADLINE_SAVE_FILE_FORMAT \u003d \"D | %d | %s | %s\";","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"wilsonwid"},"content":"    private static final String DEADLINE_DISPLAY_FORMAT \u003d \"[D] %s (by: %s)\";","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"wilsonwid"},"content":"    private final LocalDateTime endTime;","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"wilsonwid"},"content":"     * Creates a new Deadline instance.","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"wilsonwid"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"wilsonwid"},"content":"     * @param description Description of the task.","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"wilsonwid"},"content":"     * @param isDone Marks whether the task has been done.","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"wilsonwid"},"content":"     * @param endTime Marks the ending time of the deadline.","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"wilsonwid"},"content":"    public Deadline(String description, boolean isDone, String endTime) {","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"wilsonwid"},"content":"        super(description, isDone, TaskType.DEADLINE);","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"wilsonwid"},"content":"        this.endTime \u003d LocalDateTime.parse(endTime, DATE_TIME_ENTRY_FORMAT);","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":28,"author":{"gitId":"wilsonwid"},"content":"     * Creates a new Deadline instance with isDone equal to false.","lastModifiedDate":"2024-02-18"},{"lineNumber":29,"author":{"gitId":"wilsonwid"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":30,"author":{"gitId":"wilsonwid"},"content":"     * @param description Description of the task.","lastModifiedDate":"2024-02-18"},{"lineNumber":31,"author":{"gitId":"wilsonwid"},"content":"     * @param endTime Marks the ending time of the deadline.","lastModifiedDate":"2024-02-18"},{"lineNumber":32,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":33,"author":{"gitId":"wilsonwid"},"content":"    public Deadline(String description, String endTime) {","lastModifiedDate":"2024-02-18"},{"lineNumber":34,"author":{"gitId":"wilsonwid"},"content":"        this(description, false, endTime);","lastModifiedDate":"2024-02-18"},{"lineNumber":35,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":36,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":37,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"wilsonwid"},"content":"     * Returns the ending time of the Deadline.","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"wilsonwid"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"wilsonwid"},"content":"     * @return Deadline ending time.","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"wilsonwid"},"content":"    private LocalDateTime getEndTime() {","lastModifiedDate":"2024-02-15"},{"lineNumber":43,"author":{"gitId":"wilsonwid"},"content":"        return this.endTime;","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":45,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"wilsonwid"},"content":"     * Returns the String describing this task that will be saved into the save file.","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"wilsonwid"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"wilsonwid"},"content":"     * @return A formatted String.","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":51,"author":{"gitId":"wilsonwid"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"wilsonwid"},"content":"    public String getSaveFileString() {","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"wilsonwid"},"content":"        return String.format(DEADLINE_SAVE_FILE_FORMAT, super.getDoneAsInt(),","lastModifiedDate":"2024-02-15"},{"lineNumber":54,"author":{"gitId":"wilsonwid"},"content":"                super.getDescription(),","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"wilsonwid"},"content":"                this.getEndTime().format(DATE_TIME_ENTRY_FORMAT));","lastModifiedDate":"2024-02-15"},{"lineNumber":56,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":57,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":58,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":59,"author":{"gitId":"wilsonwid"},"content":"     * Returns how the Deadline object will be printed as a String.","lastModifiedDate":"2024-01-27"},{"lineNumber":60,"author":{"gitId":"wilsonwid"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":61,"author":{"gitId":"wilsonwid"},"content":"     * @return A formatted String.","lastModifiedDate":"2024-01-27"},{"lineNumber":62,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":63,"author":{"gitId":"wilsonwid"},"content":"    @Override","lastModifiedDate":"2024-01-21"},{"lineNumber":64,"author":{"gitId":"wilsonwid"},"content":"    public String toString() {","lastModifiedDate":"2024-01-21"},{"lineNumber":65,"author":{"gitId":"wilsonwid"},"content":"        return String.format(DEADLINE_DISPLAY_FORMAT, super.toString(),","lastModifiedDate":"2024-02-15"},{"lineNumber":66,"author":{"gitId":"wilsonwid"},"content":"                this.getEndTime().format(DATE_TIME_OUT_FORMAT));","lastModifiedDate":"2024-02-15"},{"lineNumber":67,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":68,"author":{"gitId":"wilsonwid"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"wilsonwid":68}},{"path":"src/main/java/talkingbot/task/DoWithinPeriod.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilsonwid"},"content":"package talkingbot.task;","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"wilsonwid"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"wilsonwid"},"content":"import talkingbot.type.TaskType;","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"wilsonwid"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"wilsonwid"},"content":" * Class for the DoWithinPeriod task.","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"wilsonwid"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"wilsonwid"},"content":"public class DoWithinPeriod extends Task {","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"wilsonwid"},"content":"    private static final String DO_WITHIN_PERIOD_SAVE_FILE_FORMAT \u003d \"W | %d | %s | %s | %s\";","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"wilsonwid"},"content":"    private static final String DO_WITHIN_PERIOD_DISPLAY_FORMAT \u003d \"[W] %s (between %s and %s)\";","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"wilsonwid"},"content":"    private final LocalDateTime beginTime;","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"wilsonwid"},"content":"    private final LocalDateTime endTime;","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"wilsonwid"},"content":"     * Creates a new DoWithinPeriod instance.","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"wilsonwid"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"wilsonwid"},"content":"     * @param description Description of the task.","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"wilsonwid"},"content":"     * @param isDone Marks whether the task has been done.","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"wilsonwid"},"content":"     * @param beginTime Marks the beginning time of the task.","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"wilsonwid"},"content":"     * @param endTime Marks the ending time of the task.","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"wilsonwid"},"content":"    public DoWithinPeriod(String description, boolean isDone, String beginTime, String endTime) {","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"wilsonwid"},"content":"        super(description, isDone, TaskType.DO_WITHIN_PERIOD);","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"wilsonwid"},"content":"        this.beginTime \u003d LocalDateTime.parse(beginTime, DATE_TIME_ENTRY_FORMAT);","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"wilsonwid"},"content":"        this.endTime \u003d LocalDateTime.parse(endTime, DATE_TIME_ENTRY_FORMAT);","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":29,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":30,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":31,"author":{"gitId":"wilsonwid"},"content":"     * Creates a new DoWithinPeriod instance with isDone equal to false.","lastModifiedDate":"2024-02-18"},{"lineNumber":32,"author":{"gitId":"wilsonwid"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":33,"author":{"gitId":"wilsonwid"},"content":"     * @param description Description of the task.","lastModifiedDate":"2024-02-18"},{"lineNumber":34,"author":{"gitId":"wilsonwid"},"content":"     * @param beginTime Marks the beginning time of the task.","lastModifiedDate":"2024-02-18"},{"lineNumber":35,"author":{"gitId":"wilsonwid"},"content":"     * @param endTime Marks the ending time of the task.","lastModifiedDate":"2024-02-18"},{"lineNumber":36,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":37,"author":{"gitId":"wilsonwid"},"content":"    public DoWithinPeriod(String description, String beginTime, String endTime) {","lastModifiedDate":"2024-02-18"},{"lineNumber":38,"author":{"gitId":"wilsonwid"},"content":"        this(description, false, beginTime, endTime);","lastModifiedDate":"2024-02-18"},{"lineNumber":39,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":40,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":41,"author":{"gitId":"wilsonwid"},"content":"    private LocalDateTime getBeginTime() {","lastModifiedDate":"2024-02-15"},{"lineNumber":42,"author":{"gitId":"wilsonwid"},"content":"        return this.beginTime;","lastModifiedDate":"2024-02-15"},{"lineNumber":43,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":44,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":45,"author":{"gitId":"wilsonwid"},"content":"    private LocalDateTime getEndTime() {","lastModifiedDate":"2024-02-15"},{"lineNumber":46,"author":{"gitId":"wilsonwid"},"content":"        return this.endTime;","lastModifiedDate":"2024-02-15"},{"lineNumber":47,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":48,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":49,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":50,"author":{"gitId":"wilsonwid"},"content":"     * Returns the String describing this task that will be saved into the save file.","lastModifiedDate":"2024-02-15"},{"lineNumber":51,"author":{"gitId":"wilsonwid"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":52,"author":{"gitId":"wilsonwid"},"content":"     * @return A formatted String.","lastModifiedDate":"2024-02-15"},{"lineNumber":53,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":54,"author":{"gitId":"wilsonwid"},"content":"    @Override","lastModifiedDate":"2024-02-15"},{"lineNumber":55,"author":{"gitId":"wilsonwid"},"content":"    public String getSaveFileString() {","lastModifiedDate":"2024-02-15"},{"lineNumber":56,"author":{"gitId":"wilsonwid"},"content":"        return String.format(DO_WITHIN_PERIOD_SAVE_FILE_FORMAT,","lastModifiedDate":"2024-02-15"},{"lineNumber":57,"author":{"gitId":"wilsonwid"},"content":"                super.getDoneAsInt(), super.getDescription(),","lastModifiedDate":"2024-02-15"},{"lineNumber":58,"author":{"gitId":"wilsonwid"},"content":"                this.getBeginTime().format(DATE_TIME_ENTRY_FORMAT),","lastModifiedDate":"2024-02-15"},{"lineNumber":59,"author":{"gitId":"wilsonwid"},"content":"                this.getEndTime().format(DATE_TIME_ENTRY_FORMAT));","lastModifiedDate":"2024-02-15"},{"lineNumber":60,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":61,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":62,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":63,"author":{"gitId":"wilsonwid"},"content":"     * Returns how the DoWithinPeriod object will be printed as a String.","lastModifiedDate":"2024-02-15"},{"lineNumber":64,"author":{"gitId":"wilsonwid"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":65,"author":{"gitId":"wilsonwid"},"content":"     * @return A formatted String.","lastModifiedDate":"2024-02-15"},{"lineNumber":66,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":67,"author":{"gitId":"wilsonwid"},"content":"    @Override","lastModifiedDate":"2024-02-15"},{"lineNumber":68,"author":{"gitId":"wilsonwid"},"content":"    public String toString() {","lastModifiedDate":"2024-02-15"},{"lineNumber":69,"author":{"gitId":"wilsonwid"},"content":"        return String.format(DO_WITHIN_PERIOD_DISPLAY_FORMAT,","lastModifiedDate":"2024-02-15"},{"lineNumber":70,"author":{"gitId":"wilsonwid"},"content":"                super.toString(), this.getBeginTime().format(DATE_TIME_OUT_FORMAT),","lastModifiedDate":"2024-02-15"},{"lineNumber":71,"author":{"gitId":"wilsonwid"},"content":"                this.getEndTime().format(DATE_TIME_OUT_FORMAT));","lastModifiedDate":"2024-02-15"},{"lineNumber":72,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":73,"author":{"gitId":"wilsonwid"},"content":"}","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"wilsonwid":73}},{"path":"src/main/java/talkingbot/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilsonwid"},"content":"package talkingbot.task;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"wilsonwid"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"wilsonwid"},"content":"import talkingbot.type.TaskType;","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"wilsonwid"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"wilsonwid"},"content":" * Class for the Event task.","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"wilsonwid"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"wilsonwid"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-21"},{"lineNumber":11,"author":{"gitId":"wilsonwid"},"content":"    private static final String EVENT_SAVE_FILE_FORMAT \u003d \"E | %d | %s | %s | %s\";","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"wilsonwid"},"content":"    private static final String EVENT_DISPLAY_FORMAT \u003d \"[E] %s (from: %s to: %s)\";","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"wilsonwid"},"content":"    private final LocalDateTime startTime;","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"wilsonwid"},"content":"    private final LocalDateTime endTime;","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"wilsonwid"},"content":"     * Creates a new Event instance.","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"wilsonwid"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"wilsonwid"},"content":"     * @param description Description of the task.","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"wilsonwid"},"content":"     * @param isDone Marks whether the task has been done.","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"wilsonwid"},"content":"     * @param startTime Event starting time.","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"wilsonwid"},"content":"     * @param endTime Event ending time.","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"wilsonwid"},"content":"    public Event(String description, boolean isDone, String startTime, String endTime) {","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"wilsonwid"},"content":"        super(description, isDone, TaskType.EVENT);","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"wilsonwid"},"content":"        this.startTime \u003d LocalDateTime.parse(startTime, DATE_TIME_ENTRY_FORMAT);","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"wilsonwid"},"content":"        this.endTime \u003d LocalDateTime.parse(endTime, DATE_TIME_ENTRY_FORMAT);","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":31,"author":{"gitId":"wilsonwid"},"content":"     * Creates a new Event instance with isDone equal to false.","lastModifiedDate":"2024-02-18"},{"lineNumber":32,"author":{"gitId":"wilsonwid"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":33,"author":{"gitId":"wilsonwid"},"content":"     * @param description Description of the task.","lastModifiedDate":"2024-02-18"},{"lineNumber":34,"author":{"gitId":"wilsonwid"},"content":"     * @param startTime Event starting time.","lastModifiedDate":"2024-02-18"},{"lineNumber":35,"author":{"gitId":"wilsonwid"},"content":"     * @param endTime Event ending time.","lastModifiedDate":"2024-02-18"},{"lineNumber":36,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":37,"author":{"gitId":"wilsonwid"},"content":"    public Event(String description, String startTime, String endTime) {","lastModifiedDate":"2024-02-18"},{"lineNumber":38,"author":{"gitId":"wilsonwid"},"content":"        this(description, false, startTime, endTime);","lastModifiedDate":"2024-02-18"},{"lineNumber":39,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":40,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":41,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"wilsonwid"},"content":"     * Returns the starting time of the Event.","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"wilsonwid"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":45,"author":{"gitId":"wilsonwid"},"content":"     * @return Event starting time.","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"wilsonwid"},"content":"    private LocalDateTime getStartTime() {","lastModifiedDate":"2024-02-15"},{"lineNumber":48,"author":{"gitId":"wilsonwid"},"content":"        return this.startTime;","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":50,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":51,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"wilsonwid"},"content":"     * Returns the ending time of the Event.","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"wilsonwid"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":54,"author":{"gitId":"wilsonwid"},"content":"     * @return Event ending time.","lastModifiedDate":"2024-01-27"},{"lineNumber":55,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":56,"author":{"gitId":"wilsonwid"},"content":"    private LocalDateTime getEndTime() {","lastModifiedDate":"2024-02-15"},{"lineNumber":57,"author":{"gitId":"wilsonwid"},"content":"        return this.endTime;","lastModifiedDate":"2024-01-27"},{"lineNumber":58,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":59,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":60,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":61,"author":{"gitId":"wilsonwid"},"content":"     * Returns the String describing this task that will be saved into the save file.","lastModifiedDate":"2024-01-27"},{"lineNumber":62,"author":{"gitId":"wilsonwid"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":63,"author":{"gitId":"wilsonwid"},"content":"     * @return A formatted String.","lastModifiedDate":"2024-01-27"},{"lineNumber":64,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":65,"author":{"gitId":"wilsonwid"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":66,"author":{"gitId":"wilsonwid"},"content":"    public String getSaveFileString() {","lastModifiedDate":"2024-01-27"},{"lineNumber":67,"author":{"gitId":"wilsonwid"},"content":"        return String.format(EVENT_SAVE_FILE_FORMAT, super.getDoneAsInt(),","lastModifiedDate":"2024-02-15"},{"lineNumber":68,"author":{"gitId":"wilsonwid"},"content":"                super.getDescription(), this.getStartTime().format(DATE_TIME_ENTRY_FORMAT),","lastModifiedDate":"2024-02-15"},{"lineNumber":69,"author":{"gitId":"wilsonwid"},"content":"                this.getEndTime().format(DATE_TIME_ENTRY_FORMAT));","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":71,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":72,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":73,"author":{"gitId":"wilsonwid"},"content":"     * Returns how the Event object will be printed as a String.","lastModifiedDate":"2024-01-27"},{"lineNumber":74,"author":{"gitId":"wilsonwid"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":75,"author":{"gitId":"wilsonwid"},"content":"     * @return A formatted String.","lastModifiedDate":"2024-01-27"},{"lineNumber":76,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":77,"author":{"gitId":"wilsonwid"},"content":"    @Override","lastModifiedDate":"2024-01-21"},{"lineNumber":78,"author":{"gitId":"wilsonwid"},"content":"    public String toString() {","lastModifiedDate":"2024-01-21"},{"lineNumber":79,"author":{"gitId":"wilsonwid"},"content":"        return String.format(EVENT_DISPLAY_FORMAT, super.toString(),","lastModifiedDate":"2024-02-15"},{"lineNumber":80,"author":{"gitId":"wilsonwid"},"content":"                this.getStartTime().format(DATE_TIME_OUT_FORMAT),","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"wilsonwid"},"content":"                this.getEndTime().format(DATE_TIME_OUT_FORMAT));","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":83,"author":{"gitId":"wilsonwid"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"wilsonwid":83}},{"path":"src/main/java/talkingbot/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilsonwid"},"content":"package talkingbot.task;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"wilsonwid"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"wilsonwid"},"content":"import talkingbot.exception.TalkingBotException;","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"wilsonwid"},"content":"import talkingbot.type.TaskType;","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"wilsonwid"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"wilsonwid"},"content":" * Class (abstract) for tasks.","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"wilsonwid"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"wilsonwid"},"content":"public abstract class Task {","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"wilsonwid"},"content":"    /** Formatting of datetime used during entry and saving */","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"wilsonwid"},"content":"    protected static final DateTimeFormatter DATE_TIME_ENTRY_FORMAT \u003d DateTimeFormatter","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"wilsonwid"},"content":"            .ofPattern(\"yyyy-MM-dd kkmm\");","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"wilsonwid"},"content":"    /** Formatting of datetime outputs used for displaying to the user */","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"wilsonwid"},"content":"    protected static final DateTimeFormatter DATE_TIME_OUT_FORMAT \u003d DateTimeFormatter","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"wilsonwid"},"content":"            .ofPattern(\"MMM dd yyyy kkmm\");","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"wilsonwid"},"content":"    private static final String TODO_ERROR_MSG \u003d \"ERROR! todo descriptions cannot be empty\"","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"wilsonwid"},"content":"            + \" nor only containing whitespaces.\";","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"wilsonwid"},"content":"    private static final String DEADLINE_ERROR_MSG \u003d \"ERROR! deadline descriptions cannot be empty and must have a /by\"","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"wilsonwid"},"content":"            + \" property.\";","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"wilsonwid"},"content":"    private static final String EVENT_ERROR_MSG \u003d \"ERROR! event descriptions cannot be empty,\\n\"","lastModifiedDate":"2024-02-18"},{"lineNumber":23,"author":{"gitId":"wilsonwid"},"content":"            + \" and must have\"","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"wilsonwid"},"content":"            + \" /from and /to properties.\";","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"wilsonwid"},"content":"    private static final String DO_WITHIN_PERIOD_ERROR_MSG \u003d \"ERROR! do_within_period descriptions\\n\"","lastModifiedDate":"2024-02-18"},{"lineNumber":26,"author":{"gitId":"wilsonwid"},"content":"            + \" cannot be empty and must have /between and /and properties\";","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"wilsonwid"},"content":"    private static final String GENERIC_ERR_MSG \u003d \"ERROR! Unknown command format detected!\";","lastModifiedDate":"2024-02-18"},{"lineNumber":28,"author":{"gitId":"wilsonwid"},"content":"    private static final String SAVE_FILE_PROCESSING_ERR_MSG \u003d \"ERROR! Invalid line processed!\";","lastModifiedDate":"2024-02-18"},{"lineNumber":29,"author":{"gitId":"wilsonwid"},"content":"    private static final String INVALID_TYPE_ERR_MSG \u003d \"ERROR! Invalid type detected.\";","lastModifiedDate":"2024-02-18"},{"lineNumber":30,"author":{"gitId":"wilsonwid"},"content":"    private final String description;","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"wilsonwid"},"content":"    private boolean isDone;","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"wilsonwid"},"content":"    private final TaskType taskType;","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"wilsonwid"},"content":"     * Class constructor for Task.","lastModifiedDate":"2024-02-17"},{"lineNumber":36,"author":{"gitId":"wilsonwid"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"wilsonwid"},"content":"     * @param description Description of the task.","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"wilsonwid"},"content":"     * @param isDone Marks whether the task has been done.","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"wilsonwid"},"content":"     * @param taskType Type of the task.","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"wilsonwid"},"content":"    public Task(String description, boolean isDone, TaskType taskType) {","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"wilsonwid"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-20"},{"lineNumber":43,"author":{"gitId":"wilsonwid"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"wilsonwid"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2024-01-27"},{"lineNumber":45,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":46,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":47,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"wilsonwid"},"content":"     * Generates a Task object corresponding to the given","lastModifiedDate":"2024-02-17"},{"lineNumber":49,"author":{"gitId":"wilsonwid"},"content":"     * description input.","lastModifiedDate":"2024-02-17"},{"lineNumber":50,"author":{"gitId":"wilsonwid"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":51,"author":{"gitId":"wilsonwid"},"content":"     * @param fullDescription Full description of the task.","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"wilsonwid"},"content":"     * @param type Type of the task.","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"wilsonwid"},"content":"     * @return A task: either a Todo, Deadline, or Event.","lastModifiedDate":"2024-01-27"},{"lineNumber":54,"author":{"gitId":"wilsonwid"},"content":"     * @throws TalkingBotException If fullDescription is empty, or if any time property is missing.","lastModifiedDate":"2024-01-27"},{"lineNumber":55,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":56,"author":{"gitId":"wilsonwid"},"content":"    public static Task generateTask(String fullDescription, String type)","lastModifiedDate":"2024-01-21"},{"lineNumber":57,"author":{"gitId":"wilsonwid"},"content":"            throws TalkingBotException {","lastModifiedDate":"2024-01-27"},{"lineNumber":58,"author":{"gitId":"wilsonwid"},"content":"        String[] splitArr \u003d getSplitArr(fullDescription, type);","lastModifiedDate":"2024-02-18"},{"lineNumber":59,"author":{"gitId":"wilsonwid"},"content":"        switch (type) {","lastModifiedDate":"2024-02-18"},{"lineNumber":60,"author":{"gitId":"wilsonwid"},"content":"        case \"todo\":","lastModifiedDate":"2024-02-18"},{"lineNumber":61,"author":{"gitId":"wilsonwid"},"content":"            if (fullDescription.isEmpty()) {","lastModifiedDate":"2024-01-21"},{"lineNumber":62,"author":{"gitId":"wilsonwid"},"content":"                throw new TalkingBotException(TODO_ERROR_MSG);","lastModifiedDate":"2024-02-15"},{"lineNumber":63,"author":{"gitId":"wilsonwid"},"content":"            }","lastModifiedDate":"2024-01-21"},{"lineNumber":64,"author":{"gitId":"wilsonwid"},"content":"            return new Todo(fullDescription);","lastModifiedDate":"2024-02-18"},{"lineNumber":65,"author":{"gitId":"wilsonwid"},"content":"        case \"deadline\":","lastModifiedDate":"2024-02-18"},{"lineNumber":66,"author":{"gitId":"wilsonwid"},"content":"            if (splitArr.length !\u003d 2) {","lastModifiedDate":"2024-02-18"},{"lineNumber":67,"author":{"gitId":"wilsonwid"},"content":"                throw new TalkingBotException(DEADLINE_ERROR_MSG);","lastModifiedDate":"2024-02-15"},{"lineNumber":68,"author":{"gitId":"wilsonwid"},"content":"            }","lastModifiedDate":"2024-01-21"},{"lineNumber":69,"author":{"gitId":"wilsonwid"},"content":"            String deadlineDescription \u003d splitArr[0];","lastModifiedDate":"2024-02-18"},{"lineNumber":70,"author":{"gitId":"wilsonwid"},"content":"            String deadlineEndTime \u003d splitArr[1];","lastModifiedDate":"2024-02-18"},{"lineNumber":71,"author":{"gitId":"wilsonwid"},"content":"            return new Deadline(deadlineDescription, deadlineEndTime);","lastModifiedDate":"2024-02-18"},{"lineNumber":72,"author":{"gitId":"wilsonwid"},"content":"        case \"event\":","lastModifiedDate":"2024-02-18"},{"lineNumber":73,"author":{"gitId":"wilsonwid"},"content":"            if (splitArr.length !\u003d 3) {","lastModifiedDate":"2024-02-18"},{"lineNumber":74,"author":{"gitId":"wilsonwid"},"content":"                throw new TalkingBotException(EVENT_ERROR_MSG);","lastModifiedDate":"2024-02-15"},{"lineNumber":75,"author":{"gitId":"wilsonwid"},"content":"            }","lastModifiedDate":"2024-01-21"},{"lineNumber":76,"author":{"gitId":"wilsonwid"},"content":"            String eventDescription \u003d splitArr[0];","lastModifiedDate":"2024-02-18"},{"lineNumber":77,"author":{"gitId":"wilsonwid"},"content":"            String eventBeginTime \u003d splitArr[1];","lastModifiedDate":"2024-02-18"},{"lineNumber":78,"author":{"gitId":"wilsonwid"},"content":"            String eventEndTime \u003d splitArr[2];","lastModifiedDate":"2024-02-18"},{"lineNumber":79,"author":{"gitId":"wilsonwid"},"content":"            return new Event(eventDescription, eventBeginTime, eventEndTime);","lastModifiedDate":"2024-02-18"},{"lineNumber":80,"author":{"gitId":"wilsonwid"},"content":"        case \"do_within_period\":","lastModifiedDate":"2024-02-18"},{"lineNumber":81,"author":{"gitId":"wilsonwid"},"content":"            if (splitArr.length !\u003d 3) {","lastModifiedDate":"2024-02-18"},{"lineNumber":82,"author":{"gitId":"wilsonwid"},"content":"                throw new TalkingBotException(DO_WITHIN_PERIOD_ERROR_MSG);","lastModifiedDate":"2024-02-15"},{"lineNumber":83,"author":{"gitId":"wilsonwid"},"content":"            }","lastModifiedDate":"2024-02-15"},{"lineNumber":84,"author":{"gitId":"wilsonwid"},"content":"            String doWithinPeriodDescription \u003d splitArr[0];","lastModifiedDate":"2024-02-18"},{"lineNumber":85,"author":{"gitId":"wilsonwid"},"content":"            String doWithinPeriodBeginTime \u003d splitArr[1];","lastModifiedDate":"2024-02-18"},{"lineNumber":86,"author":{"gitId":"wilsonwid"},"content":"            String doWithinPeriodEndTime \u003d splitArr[2];","lastModifiedDate":"2024-02-18"},{"lineNumber":87,"author":{"gitId":"wilsonwid"},"content":"            return new DoWithinPeriod(doWithinPeriodDescription,","lastModifiedDate":"2024-02-18"},{"lineNumber":88,"author":{"gitId":"wilsonwid"},"content":"                    doWithinPeriodBeginTime, doWithinPeriodEndTime);","lastModifiedDate":"2024-02-18"},{"lineNumber":89,"author":{"gitId":"wilsonwid"},"content":"        default:","lastModifiedDate":"2024-02-18"},{"lineNumber":90,"author":{"gitId":"wilsonwid"},"content":"            throw new TalkingBotException(INVALID_TYPE_ERR_MSG);","lastModifiedDate":"2024-02-18"},{"lineNumber":91,"author":{"gitId":"wilsonwid"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":92,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":93,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":94,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":95,"author":{"gitId":"wilsonwid"},"content":"     * Generates the String array needed to create each of the task types.","lastModifiedDate":"2024-02-18"},{"lineNumber":96,"author":{"gitId":"wilsonwid"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":97,"author":{"gitId":"wilsonwid"},"content":"     * @param fullDescription Line to be processed.","lastModifiedDate":"2024-02-18"},{"lineNumber":98,"author":{"gitId":"wilsonwid"},"content":"     * @param type Type of task.","lastModifiedDate":"2024-02-18"},{"lineNumber":99,"author":{"gitId":"wilsonwid"},"content":"     * @return A String[] containing information on the task.","lastModifiedDate":"2024-02-18"},{"lineNumber":100,"author":{"gitId":"wilsonwid"},"content":"     * @throws TalkingBotException If an invalid type is entered.","lastModifiedDate":"2024-02-18"},{"lineNumber":101,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":102,"author":{"gitId":"wilsonwid"},"content":"    private static String[] getSplitArr(String fullDescription, String type) throws TalkingBotException {","lastModifiedDate":"2024-02-18"},{"lineNumber":103,"author":{"gitId":"wilsonwid"},"content":"        switch (type) {","lastModifiedDate":"2024-02-18"},{"lineNumber":104,"author":{"gitId":"wilsonwid"},"content":"        case \"todo\":","lastModifiedDate":"2024-02-18"},{"lineNumber":105,"author":{"gitId":"wilsonwid"},"content":"            return new String[]{fullDescription};","lastModifiedDate":"2024-02-18"},{"lineNumber":106,"author":{"gitId":"wilsonwid"},"content":"        case \"deadline\":","lastModifiedDate":"2024-02-18"},{"lineNumber":107,"author":{"gitId":"wilsonwid"},"content":"            return fullDescription.split(\" /by \");","lastModifiedDate":"2024-02-18"},{"lineNumber":108,"author":{"gitId":"wilsonwid"},"content":"        case \"event\":","lastModifiedDate":"2024-02-18"},{"lineNumber":109,"author":{"gitId":"wilsonwid"},"content":"            return fullDescription.split(\"( /from )|( /to )\");","lastModifiedDate":"2024-02-18"},{"lineNumber":110,"author":{"gitId":"wilsonwid"},"content":"        case \"do_within_period\":","lastModifiedDate":"2024-02-18"},{"lineNumber":111,"author":{"gitId":"wilsonwid"},"content":"            return fullDescription.split(\"( /between )|( /and )\");","lastModifiedDate":"2024-02-18"},{"lineNumber":112,"author":{"gitId":"wilsonwid"},"content":"        default:","lastModifiedDate":"2024-02-18"},{"lineNumber":113,"author":{"gitId":"wilsonwid"},"content":"            throw new TalkingBotException(GENERIC_ERR_MSG);","lastModifiedDate":"2024-02-18"},{"lineNumber":114,"author":{"gitId":"wilsonwid"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":115,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":116,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":117,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":118,"author":{"gitId":"wilsonwid"},"content":"     * Generates a task from a line in the save file.","lastModifiedDate":"2024-01-27"},{"lineNumber":119,"author":{"gitId":"wilsonwid"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":120,"author":{"gitId":"wilsonwid"},"content":"     * @param line The current line being processed.","lastModifiedDate":"2024-01-27"},{"lineNumber":121,"author":{"gitId":"wilsonwid"},"content":"     * @return A task: either a Todo, Deadline, or Event.","lastModifiedDate":"2024-01-27"},{"lineNumber":122,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":123,"author":{"gitId":"wilsonwid"},"content":"    public static Task generateTaskFromFile(String line) throws TalkingBotException {","lastModifiedDate":"2024-02-18"},{"lineNumber":124,"author":{"gitId":"wilsonwid"},"content":"        String[] lineArr \u003d line.split(\" \\\\| \");","lastModifiedDate":"2024-01-27"},{"lineNumber":125,"author":{"gitId":"wilsonwid"},"content":"        if (lineArr.length \u003c 2) {","lastModifiedDate":"2024-02-18"},{"lineNumber":126,"author":{"gitId":"wilsonwid"},"content":"            throw new TalkingBotException(SAVE_FILE_PROCESSING_ERR_MSG);","lastModifiedDate":"2024-02-18"},{"lineNumber":127,"author":{"gitId":"wilsonwid"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":128,"author":{"gitId":"wilsonwid"},"content":"        String taskType \u003d lineArr[0];","lastModifiedDate":"2024-02-18"},{"lineNumber":129,"author":{"gitId":"wilsonwid"},"content":"        boolean mark \u003d lineArr[1].equals(\"1\") ? true : false;","lastModifiedDate":"2024-02-18"},{"lineNumber":130,"author":{"gitId":"wilsonwid"},"content":"        if (taskType.equals(\"T\")) {","lastModifiedDate":"2024-02-18"},{"lineNumber":131,"author":{"gitId":"wilsonwid"},"content":"            return new Todo(lineArr[2], mark);","lastModifiedDate":"2024-01-27"},{"lineNumber":132,"author":{"gitId":"wilsonwid"},"content":"        } else if (taskType.equals(\"D\")) {","lastModifiedDate":"2024-02-18"},{"lineNumber":133,"author":{"gitId":"wilsonwid"},"content":"            return new Deadline(lineArr[2], mark, lineArr[3]);","lastModifiedDate":"2024-01-27"},{"lineNumber":134,"author":{"gitId":"wilsonwid"},"content":"        } else if (taskType.equals(\"E\")) {","lastModifiedDate":"2024-02-18"},{"lineNumber":135,"author":{"gitId":"wilsonwid"},"content":"            return new Event(lineArr[2], mark, lineArr[3], lineArr[4]);","lastModifiedDate":"2024-02-18"},{"lineNumber":136,"author":{"gitId":"wilsonwid"},"content":"        } else if (taskType.equals(\"W\")) {","lastModifiedDate":"2024-02-18"},{"lineNumber":137,"author":{"gitId":"wilsonwid"},"content":"            return new DoWithinPeriod(lineArr[2], mark, lineArr[3], lineArr[4]);","lastModifiedDate":"2024-02-18"},{"lineNumber":138,"author":{"gitId":"wilsonwid"},"content":"        } else {","lastModifiedDate":"2024-02-15"},{"lineNumber":139,"author":{"gitId":"wilsonwid"},"content":"            throw new TalkingBotException(SAVE_FILE_PROCESSING_ERR_MSG);","lastModifiedDate":"2024-02-18"},{"lineNumber":140,"author":{"gitId":"wilsonwid"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":141,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":142,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":143,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":144,"author":{"gitId":"wilsonwid"},"content":"     * Returns the description of the task.","lastModifiedDate":"2024-01-27"},{"lineNumber":145,"author":{"gitId":"wilsonwid"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":146,"author":{"gitId":"wilsonwid"},"content":"     * @return Task description.","lastModifiedDate":"2024-01-27"},{"lineNumber":147,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":148,"author":{"gitId":"wilsonwid"},"content":"    public String getDescription() {","lastModifiedDate":"2024-01-20"},{"lineNumber":149,"author":{"gitId":"wilsonwid"},"content":"        return this.description;","lastModifiedDate":"2024-01-20"},{"lineNumber":150,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":151,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":152,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":153,"author":{"gitId":"wilsonwid"},"content":"     * Returns whether a task is done.","lastModifiedDate":"2024-01-27"},{"lineNumber":154,"author":{"gitId":"wilsonwid"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":155,"author":{"gitId":"wilsonwid"},"content":"     * @return Whether a task is done.","lastModifiedDate":"2024-01-27"},{"lineNumber":156,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":157,"author":{"gitId":"wilsonwid"},"content":"    public boolean getDone() {","lastModifiedDate":"2024-01-20"},{"lineNumber":158,"author":{"gitId":"wilsonwid"},"content":"        return this.isDone;","lastModifiedDate":"2024-01-27"},{"lineNumber":159,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":160,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":161,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":162,"author":{"gitId":"wilsonwid"},"content":"     * Returns whether a task is done as an integer.","lastModifiedDate":"2024-01-27"},{"lineNumber":163,"author":{"gitId":"wilsonwid"},"content":"     * 1 is for tasks done and 0 for tasks undone.","lastModifiedDate":"2024-01-27"},{"lineNumber":164,"author":{"gitId":"wilsonwid"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":165,"author":{"gitId":"wilsonwid"},"content":"     * @return Whether a task is done as an integer.","lastModifiedDate":"2024-01-27"},{"lineNumber":166,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":167,"author":{"gitId":"wilsonwid"},"content":"    public int getDoneAsInt() {","lastModifiedDate":"2024-01-27"},{"lineNumber":168,"author":{"gitId":"wilsonwid"},"content":"        return this.isDone ? 1 : 0;","lastModifiedDate":"2024-01-27"},{"lineNumber":169,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":170,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":171,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":172,"author":{"gitId":"wilsonwid"},"content":"     * Sets the isDone property depending on the given parameter.","lastModifiedDate":"2024-01-27"},{"lineNumber":173,"author":{"gitId":"wilsonwid"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":174,"author":{"gitId":"wilsonwid"},"content":"     * @param isDone Value to set the isDone property to.","lastModifiedDate":"2024-01-27"},{"lineNumber":175,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":176,"author":{"gitId":"wilsonwid"},"content":"    public void setDone(boolean isDone) {","lastModifiedDate":"2024-01-27"},{"lineNumber":177,"author":{"gitId":"wilsonwid"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-01-27"},{"lineNumber":178,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":179,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":180,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":181,"author":{"gitId":"wilsonwid"},"content":"     * Returns the task\u0027s representation","lastModifiedDate":"2024-02-17"},{"lineNumber":182,"author":{"gitId":"wilsonwid"},"content":"     * in the save file.","lastModifiedDate":"2024-01-27"},{"lineNumber":183,"author":{"gitId":"wilsonwid"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":184,"author":{"gitId":"wilsonwid"},"content":"     * @return String that represents the task during saving.","lastModifiedDate":"2024-01-27"},{"lineNumber":185,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":186,"author":{"gitId":"wilsonwid"},"content":"    public abstract String getSaveFileString();","lastModifiedDate":"2024-01-27"},{"lineNumber":187,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":188,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":189,"author":{"gitId":"wilsonwid"},"content":"     * Returns how the Task object will be printed as a String.","lastModifiedDate":"2024-01-27"},{"lineNumber":190,"author":{"gitId":"wilsonwid"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":191,"author":{"gitId":"wilsonwid"},"content":"     * @return A formatted String.","lastModifiedDate":"2024-01-27"},{"lineNumber":192,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":193,"author":{"gitId":"wilsonwid"},"content":"    @Override","lastModifiedDate":"2024-01-20"},{"lineNumber":194,"author":{"gitId":"wilsonwid"},"content":"    public String toString() {","lastModifiedDate":"2024-01-20"},{"lineNumber":195,"author":{"gitId":"wilsonwid"},"content":"        String addMark \u003d this.getDone() ? \"X\" : \" \";","lastModifiedDate":"2024-01-20"},{"lineNumber":196,"author":{"gitId":"wilsonwid"},"content":"        return String.format(\"[%s] %s\", addMark, this.getDescription());","lastModifiedDate":"2024-01-20"},{"lineNumber":197,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":198,"author":{"gitId":"wilsonwid"},"content":"}","lastModifiedDate":"2024-01-20"}],"authorContributionMap":{"wilsonwid":198}},{"path":"src/main/java/talkingbot/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilsonwid"},"content":"package talkingbot.task;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"wilsonwid"},"content":"import talkingbot.type.TaskType;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"wilsonwid"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"wilsonwid"},"content":" * Class for the Todo task.","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"wilsonwid"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"wilsonwid"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-21"},{"lineNumber":9,"author":{"gitId":"wilsonwid"},"content":"    private static final String TODO_SAVE_FILE_FORMAT \u003d \"T | %d | %s\";","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"wilsonwid"},"content":"    private static final String TODO_DISPLAY_FORMAT \u003d \"[T] %s\";","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"wilsonwid"},"content":"     * Creates a new Todo instance.","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"wilsonwid"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"wilsonwid"},"content":"     * @param description Description of the task.","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"wilsonwid"},"content":"     * @param isDone Marks whether the task has been done.","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"wilsonwid"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"wilsonwid"},"content":"        super(description, isDone, TaskType.TODO);","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":21,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":22,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":23,"author":{"gitId":"wilsonwid"},"content":"     * Creates a new Todo instance with isDone equal to false.","lastModifiedDate":"2024-02-18"},{"lineNumber":24,"author":{"gitId":"wilsonwid"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":25,"author":{"gitId":"wilsonwid"},"content":"     * @param description Description of the task.","lastModifiedDate":"2024-02-18"},{"lineNumber":26,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":27,"author":{"gitId":"wilsonwid"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-02-18"},{"lineNumber":28,"author":{"gitId":"wilsonwid"},"content":"        this(description, false);","lastModifiedDate":"2024-02-18"},{"lineNumber":29,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":30,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":31,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"wilsonwid"},"content":"     * Returns the String describing this task that will be saved into","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"wilsonwid"},"content":"     * the save file.","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"wilsonwid"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"wilsonwid"},"content":"     * @return A formatted String.","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"wilsonwid"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"wilsonwid"},"content":"    public String getSaveFileString() {","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"wilsonwid"},"content":"        return String.format(TODO_SAVE_FILE_FORMAT, super.getDoneAsInt(),","lastModifiedDate":"2024-02-15"},{"lineNumber":40,"author":{"gitId":"wilsonwid"},"content":"                super.getDescription());","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"wilsonwid"},"content":"     * Returns how the Todo object will be printed as a String.","lastModifiedDate":"2024-01-27"},{"lineNumber":45,"author":{"gitId":"wilsonwid"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"wilsonwid"},"content":"     * @return A formatted String.","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"wilsonwid"},"content":"    @Override","lastModifiedDate":"2024-01-21"},{"lineNumber":49,"author":{"gitId":"wilsonwid"},"content":"    public String toString() {","lastModifiedDate":"2024-01-21"},{"lineNumber":50,"author":{"gitId":"wilsonwid"},"content":"        return String.format(TODO_DISPLAY_FORMAT, super.toString());","lastModifiedDate":"2024-02-15"},{"lineNumber":51,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":52,"author":{"gitId":"wilsonwid"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"wilsonwid":52}},{"path":"src/main/java/talkingbot/type/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilsonwid"},"content":"package talkingbot.type;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"wilsonwid"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"wilsonwid"},"content":" * Enumerates the different types of Tasks available.","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"wilsonwid"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"wilsonwid"},"content":"public enum TaskType {","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"wilsonwid"},"content":"    TODO, DEADLINE, EVENT, DO_WITHIN_PERIOD","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"wilsonwid"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"wilsonwid":8}},{"path":"src/main/java/talkingbot/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilsonwid"},"content":"package talkingbot.util;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"wilsonwid"},"content":"import talkingbot.command.ByeCommand;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"wilsonwid"},"content":"import talkingbot.command.Command;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"wilsonwid"},"content":"import talkingbot.command.DeleteCommand;","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"wilsonwid"},"content":"import talkingbot.command.FindCommand;","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"wilsonwid"},"content":"import talkingbot.command.InvalidCommand;","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"wilsonwid"},"content":"import talkingbot.command.ListCommand;","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"wilsonwid"},"content":"import talkingbot.command.ModifyMarkCommand;","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"wilsonwid"},"content":"import talkingbot.command.SaveCommand;","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"wilsonwid"},"content":"import talkingbot.command.TaskCommand;","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"wilsonwid"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"wilsonwid"},"content":" * Class representing the parser to process user commands.","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"wilsonwid"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"wilsonwid"},"content":"public class Parser {","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"wilsonwid"},"content":"     * Creates a new Parser instance.","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"wilsonwid"},"content":"    public Parser() {}","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"wilsonwid"},"content":"     * Parses the current command and returns the appropriate","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"wilsonwid"},"content":"     * Command object.","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"wilsonwid"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"wilsonwid"},"content":"     * @return A Command corresponding to the user input.","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"wilsonwid"},"content":"    public Command parseCommand(String text) {","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"wilsonwid"},"content":"        String[] curCommand \u003d text.split(\" \");","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"wilsonwid"},"content":"        switch (curCommand[0]) {","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"wilsonwid"},"content":"        case \"list\":","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"wilsonwid"},"content":"            return new ListCommand(curCommand);","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"wilsonwid"},"content":"        case \"mark\":","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"wilsonwid"},"content":"            // Fallthrough","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"wilsonwid"},"content":"        case \"unmark\":","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"wilsonwid"},"content":"            return new ModifyMarkCommand(curCommand);","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"wilsonwid"},"content":"        case \"todo\":","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"wilsonwid"},"content":"            // Fallthrough","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"wilsonwid"},"content":"        case \"deadline\":","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"wilsonwid"},"content":"            // Fallthrough","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"wilsonwid"},"content":"        case \"event\":","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"wilsonwid"},"content":"            // Fallthrough","lastModifiedDate":"2024-02-15"},{"lineNumber":44,"author":{"gitId":"wilsonwid"},"content":"        case \"do_within_period\":","lastModifiedDate":"2024-02-15"},{"lineNumber":45,"author":{"gitId":"wilsonwid"},"content":"            return new TaskCommand(curCommand);","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"wilsonwid"},"content":"        case \"delete\":","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"wilsonwid"},"content":"            return new DeleteCommand(curCommand);","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"wilsonwid"},"content":"        case \"save\":","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"wilsonwid"},"content":"            return new SaveCommand(curCommand);","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"wilsonwid"},"content":"        case \"bye\":","lastModifiedDate":"2024-01-27"},{"lineNumber":51,"author":{"gitId":"wilsonwid"},"content":"            return new ByeCommand(curCommand);","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"wilsonwid"},"content":"        case \"find\":","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"wilsonwid"},"content":"            return new FindCommand(curCommand);","lastModifiedDate":"2024-01-27"},{"lineNumber":54,"author":{"gitId":"wilsonwid"},"content":"        default:","lastModifiedDate":"2024-01-27"},{"lineNumber":55,"author":{"gitId":"wilsonwid"},"content":"            return new InvalidCommand(curCommand);","lastModifiedDate":"2024-01-27"},{"lineNumber":56,"author":{"gitId":"wilsonwid"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":57,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":58,"author":{"gitId":"wilsonwid"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"wilsonwid":58}},{"path":"src/main/java/talkingbot/util/SaveFile.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilsonwid"},"content":"package talkingbot.util;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"wilsonwid"},"content":"import java.io.File;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"wilsonwid"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"wilsonwid"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"wilsonwid"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"wilsonwid"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"wilsonwid"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"wilsonwid"},"content":"import talkingbot.exception.TalkingBotException;","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"wilsonwid"},"content":"import talkingbot.task.Task;","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"wilsonwid"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"wilsonwid"},"content":" * Class representing the save file.","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"wilsonwid"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"wilsonwid"},"content":"public class SaveFile {","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"wilsonwid"},"content":"    private static final String IO_EXCEPTION_MSG \u003d \"ERROR! Cannot read from file!\";","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"wilsonwid"},"content":"    private static final String FILE_NOT_FOUND_EXCEPTION_MSG \u003d \"ERROR! File not found!\";","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"wilsonwid"},"content":"    private final File saveFile;","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"wilsonwid"},"content":"    private final File directory;","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"wilsonwid"},"content":"    private final String path;","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"wilsonwid"},"content":"     * Creates a new SaveFile instance.","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"wilsonwid"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"wilsonwid"},"content":"     * @param path Relative path to the save file.","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"wilsonwid"},"content":"    public SaveFile(String path) {","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"wilsonwid"},"content":"        this.saveFile \u003d new File(path);","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"wilsonwid"},"content":"        this.path \u003d path;","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"wilsonwid"},"content":"        String[] splitString \u003d this.path.split(\"/\");","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"wilsonwid"},"content":"        this.directory \u003d new File(","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"wilsonwid"},"content":"                Arrays.stream(splitString)","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"wilsonwid"},"content":"                        .limit(splitString.length - 1)","lastModifiedDate":"2024-02-15"},{"lineNumber":35,"author":{"gitId":"wilsonwid"},"content":"                        .reduce(\"\", (a, b) -\u003e a + \"/\" + b).substring(1));","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":37,"author":{"gitId":"wilsonwid"},"content":"        if (!this.saveFile.exists()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"wilsonwid"},"content":"            try {","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"wilsonwid"},"content":"                if (!this.directory.exists()) {","lastModifiedDate":"2024-02-15"},{"lineNumber":40,"author":{"gitId":"wilsonwid"},"content":"                    this.directory.mkdirs();","lastModifiedDate":"2024-02-15"},{"lineNumber":41,"author":{"gitId":"wilsonwid"},"content":"                }","lastModifiedDate":"2024-02-15"},{"lineNumber":42,"author":{"gitId":"wilsonwid"},"content":"                this.saveFile.createNewFile();","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"wilsonwid"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"wilsonwid"},"content":"                System.out.println(e);","lastModifiedDate":"2024-01-27"},{"lineNumber":45,"author":{"gitId":"wilsonwid"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"wilsonwid"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"wilsonwid"},"content":"        assert this.saveFile.exists() : \"saveFile should exist\";","lastModifiedDate":"2024-02-15"},{"lineNumber":48,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":51,"author":{"gitId":"wilsonwid"},"content":"     * Retrieves the tasks saved in the file as a list of tasks.","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"wilsonwid"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"wilsonwid"},"content":"     * @return A TaskList indicating the list of tasks currently saved.","lastModifiedDate":"2024-01-27"},{"lineNumber":54,"author":{"gitId":"wilsonwid"},"content":"     * @throws TalkingBotException If there is any exception.","lastModifiedDate":"2024-01-27"},{"lineNumber":55,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":56,"author":{"gitId":"wilsonwid"},"content":"    public TaskList getTasksFromFile() throws TalkingBotException {","lastModifiedDate":"2024-01-27"},{"lineNumber":57,"author":{"gitId":"wilsonwid"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":58,"author":{"gitId":"wilsonwid"},"content":"            Scanner fileScanner \u003d new Scanner(this.saveFile);","lastModifiedDate":"2024-01-27"},{"lineNumber":59,"author":{"gitId":"wilsonwid"},"content":"            TaskList tasks \u003d new TaskList();","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"wilsonwid"},"content":"            while (fileScanner.hasNextLine()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":61,"author":{"gitId":"wilsonwid"},"content":"                String curLine \u003d fileScanner.nextLine();","lastModifiedDate":"2024-01-27"},{"lineNumber":62,"author":{"gitId":"wilsonwid"},"content":"                try {","lastModifiedDate":"2024-02-18"},{"lineNumber":63,"author":{"gitId":"wilsonwid"},"content":"                    tasks.addTask(Task.generateTaskFromFile(curLine));","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"wilsonwid"},"content":"                } catch (TalkingBotException e) {","lastModifiedDate":"2024-02-18"},{"lineNumber":65,"author":{"gitId":"wilsonwid"},"content":"                    e.printStackTrace();","lastModifiedDate":"2024-02-18"},{"lineNumber":66,"author":{"gitId":"wilsonwid"},"content":"                }","lastModifiedDate":"2024-02-18"},{"lineNumber":67,"author":{"gitId":"wilsonwid"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":68,"author":{"gitId":"wilsonwid"},"content":"            return tasks;","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"wilsonwid"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":70,"author":{"gitId":"wilsonwid"},"content":"            throw new TalkingBotException(FILE_NOT_FOUND_EXCEPTION_MSG);","lastModifiedDate":"2024-02-15"},{"lineNumber":71,"author":{"gitId":"wilsonwid"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":72,"author":{"gitId":"wilsonwid"},"content":"            throw new TalkingBotException(IO_EXCEPTION_MSG);","lastModifiedDate":"2024-02-15"},{"lineNumber":73,"author":{"gitId":"wilsonwid"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":74,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":75,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":76,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":77,"author":{"gitId":"wilsonwid"},"content":"     * Saves the task list into a file.","lastModifiedDate":"2024-01-27"},{"lineNumber":78,"author":{"gitId":"wilsonwid"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":79,"author":{"gitId":"wilsonwid"},"content":"     * @param tasks Task list to be saved.","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"wilsonwid"},"content":"     * @throws TalkingBotException If IOException occurs.","lastModifiedDate":"2024-01-27"},{"lineNumber":81,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":82,"author":{"gitId":"wilsonwid"},"content":"    public void saveTasksToFile(TaskList tasks) throws TalkingBotException {","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"wilsonwid"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":84,"author":{"gitId":"wilsonwid"},"content":"            FileWriter fileWriter \u003d new FileWriter(this.saveFile);","lastModifiedDate":"2024-01-27"},{"lineNumber":85,"author":{"gitId":"wilsonwid"},"content":"            StringBuilder strBuild \u003d new StringBuilder();","lastModifiedDate":"2024-01-27"},{"lineNumber":86,"author":{"gitId":"wilsonwid"},"content":"            for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"wilsonwid"},"content":"                Task curTask \u003d tasks.getTask(i);","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"wilsonwid"},"content":"                strBuild.append(curTask.getSaveFileString());","lastModifiedDate":"2024-01-27"},{"lineNumber":89,"author":{"gitId":"wilsonwid"},"content":"                if (i \u003c tasks.getSize() - 1) {","lastModifiedDate":"2024-02-03"},{"lineNumber":90,"author":{"gitId":"wilsonwid"},"content":"                    strBuild.append(\"\\n\");","lastModifiedDate":"2024-01-27"},{"lineNumber":91,"author":{"gitId":"wilsonwid"},"content":"                }","lastModifiedDate":"2024-01-27"},{"lineNumber":92,"author":{"gitId":"wilsonwid"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":93,"author":{"gitId":"wilsonwid"},"content":"            fileWriter.write(strBuild.toString());","lastModifiedDate":"2024-01-27"},{"lineNumber":94,"author":{"gitId":"wilsonwid"},"content":"            fileWriter.close();","lastModifiedDate":"2024-01-27"},{"lineNumber":95,"author":{"gitId":"wilsonwid"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":96,"author":{"gitId":"wilsonwid"},"content":"            throw new TalkingBotException(\"ERROR! IOException occurred!\");","lastModifiedDate":"2024-01-27"},{"lineNumber":97,"author":{"gitId":"wilsonwid"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":98,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":99,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":100,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":101,"author":{"gitId":"wilsonwid"},"content":"     * Returns the path.","lastModifiedDate":"2024-01-27"},{"lineNumber":102,"author":{"gitId":"wilsonwid"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":103,"author":{"gitId":"wilsonwid"},"content":"     * @return Path.","lastModifiedDate":"2024-01-27"},{"lineNumber":104,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":105,"author":{"gitId":"wilsonwid"},"content":"    public String getFileName() {","lastModifiedDate":"2024-01-27"},{"lineNumber":106,"author":{"gitId":"wilsonwid"},"content":"        return this.path;","lastModifiedDate":"2024-01-27"},{"lineNumber":107,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":108,"author":{"gitId":"wilsonwid"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"wilsonwid":108}},{"path":"src/main/java/talkingbot/util/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilsonwid"},"content":"package talkingbot.util;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"wilsonwid"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-20"},{"lineNumber":4,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"wilsonwid"},"content":"import talkingbot.task.Task;","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":7,"author":{"gitId":"wilsonwid"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"wilsonwid"},"content":" * Class representing the list of tasks.","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"wilsonwid"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"wilsonwid"},"content":"public class TaskList {","lastModifiedDate":"2024-01-20"},{"lineNumber":11,"author":{"gitId":"wilsonwid"},"content":"    private static final String FILTER_LIST_MSG \u003d \"\\tHere are the tasks with descriptions matching your query:\\n\";","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"wilsonwid"},"content":"    private static final String DISPLAY_LIST_MSG \u003d \"\\tHere are the tasks in your list:\\n\";","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"wilsonwid"},"content":"    private static final String LIST_ITEM_FORMAT \u003d \"\\t%d. %s\";","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"wilsonwid"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-01-20"},{"lineNumber":15,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":16,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"wilsonwid"},"content":"     * Creates a new TaskList instance.","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"wilsonwid"},"content":"    public TaskList() {","lastModifiedDate":"2024-01-20"},{"lineNumber":20,"author":{"gitId":"wilsonwid"},"content":"        this(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-01-20"},{"lineNumber":21,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":22,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":23,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"wilsonwid"},"content":"     * Creates a new TaskList instance with a predefined list of tasks.","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"wilsonwid"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"wilsonwid"},"content":"     * @param tasks ArrayList of Tasks to be put initially.","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"wilsonwid"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-01-20"},{"lineNumber":29,"author":{"gitId":"wilsonwid"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-01-20"},{"lineNumber":30,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":31,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":32,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"wilsonwid"},"content":"     * Adds task to the ArrayList of Tasks.","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"wilsonwid"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"wilsonwid"},"content":"     * @param newTask Task to be added.","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"wilsonwid"},"content":"    public void addTask(Task newTask) {","lastModifiedDate":"2024-01-20"},{"lineNumber":38,"author":{"gitId":"wilsonwid"},"content":"        this.tasks.add(newTask);","lastModifiedDate":"2024-01-20"},{"lineNumber":39,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":40,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":41,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"wilsonwid"},"content":"     * Removes the task from the ArrayList of Tasks.","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"wilsonwid"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"wilsonwid"},"content":"     * @param idx Index of task to be removed.","lastModifiedDate":"2024-01-27"},{"lineNumber":45,"author":{"gitId":"wilsonwid"},"content":"     * @return The removed task.","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"wilsonwid"},"content":"    public Task removeTask(int idx) {","lastModifiedDate":"2024-01-21"},{"lineNumber":48,"author":{"gitId":"wilsonwid"},"content":"        return this.tasks.remove(idx);","lastModifiedDate":"2024-01-21"},{"lineNumber":49,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":50,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":51,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"wilsonwid"},"content":"     * Returns the task at a certain index.","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"wilsonwid"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":54,"author":{"gitId":"wilsonwid"},"content":"     * @param idx Index of task to be retrieved.","lastModifiedDate":"2024-01-27"},{"lineNumber":55,"author":{"gitId":"wilsonwid"},"content":"     * @return The desired task.","lastModifiedDate":"2024-01-27"},{"lineNumber":56,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":57,"author":{"gitId":"wilsonwid"},"content":"    public Task getTask(int idx) {","lastModifiedDate":"2024-01-20"},{"lineNumber":58,"author":{"gitId":"wilsonwid"},"content":"        return this.tasks.get(idx);","lastModifiedDate":"2024-01-20"},{"lineNumber":59,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":60,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":61,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":62,"author":{"gitId":"wilsonwid"},"content":"     * Sets the task at a particular index.","lastModifiedDate":"2024-01-27"},{"lineNumber":63,"author":{"gitId":"wilsonwid"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":64,"author":{"gitId":"wilsonwid"},"content":"     * @param idx Index in the ArrayList to be set.","lastModifiedDate":"2024-01-27"},{"lineNumber":65,"author":{"gitId":"wilsonwid"},"content":"     * @param task Task to be set at the index.","lastModifiedDate":"2024-01-27"},{"lineNumber":66,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":67,"author":{"gitId":"wilsonwid"},"content":"    public void setTask(int idx, Task task) {","lastModifiedDate":"2024-01-20"},{"lineNumber":68,"author":{"gitId":"wilsonwid"},"content":"        this.tasks.set(idx, task);","lastModifiedDate":"2024-01-20"},{"lineNumber":69,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":70,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":71,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":72,"author":{"gitId":"wilsonwid"},"content":"     * Returns the size of the list of tasks.","lastModifiedDate":"2024-01-27"},{"lineNumber":73,"author":{"gitId":"wilsonwid"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":74,"author":{"gitId":"wilsonwid"},"content":"     * @return Size of task list.","lastModifiedDate":"2024-01-27"},{"lineNumber":75,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":76,"author":{"gitId":"wilsonwid"},"content":"    public int getSize() {","lastModifiedDate":"2024-01-21"},{"lineNumber":77,"author":{"gitId":"wilsonwid"},"content":"        return this.tasks.size();","lastModifiedDate":"2024-01-21"},{"lineNumber":78,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":79,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":80,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":81,"author":{"gitId":"wilsonwid"},"content":"     * Returns a filtered list of tasks that contains filterString","lastModifiedDate":"2024-01-27"},{"lineNumber":82,"author":{"gitId":"wilsonwid"},"content":"     * in their descriptions.","lastModifiedDate":"2024-01-27"},{"lineNumber":83,"author":{"gitId":"wilsonwid"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":84,"author":{"gitId":"wilsonwid"},"content":"     * @param filterString String to filter task descriptions with.","lastModifiedDate":"2024-01-27"},{"lineNumber":85,"author":{"gitId":"wilsonwid"},"content":"     * @return String of filtered tasks.","lastModifiedDate":"2024-01-27"},{"lineNumber":86,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":87,"author":{"gitId":"wilsonwid"},"content":"    public String filterList(String filterString) {","lastModifiedDate":"2024-01-27"},{"lineNumber":88,"author":{"gitId":"wilsonwid"},"content":"        StringBuilder returnedString \u003d new StringBuilder();","lastModifiedDate":"2024-01-27"},{"lineNumber":89,"author":{"gitId":"wilsonwid"},"content":"        returnedString.append(FILTER_LIST_MSG);","lastModifiedDate":"2024-02-15"},{"lineNumber":90,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":91,"author":{"gitId":"wilsonwid"},"content":"        for (int idx \u003d 0; idx \u003c this.tasks.size(); idx++) {","lastModifiedDate":"2024-01-27"},{"lineNumber":92,"author":{"gitId":"wilsonwid"},"content":"            Task curTask \u003d this.getTask(idx);","lastModifiedDate":"2024-01-27"},{"lineNumber":93,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":94,"author":{"gitId":"wilsonwid"},"content":"            if (curTask.getDescription().contains(filterString)) {","lastModifiedDate":"2024-01-27"},{"lineNumber":95,"author":{"gitId":"wilsonwid"},"content":"                returnedString.append(String.format(LIST_ITEM_FORMAT, idx + 1, this.getTask(idx).toString()));","lastModifiedDate":"2024-02-15"},{"lineNumber":96,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":97,"author":{"gitId":"wilsonwid"},"content":"                returnedString.append(\"\\n\");","lastModifiedDate":"2024-01-27"},{"lineNumber":98,"author":{"gitId":"wilsonwid"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":99,"author":{"gitId":"wilsonwid"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":100,"author":{"gitId":"wilsonwid"},"content":"        returnedString.deleteCharAt(returnedString.length() - 1);","lastModifiedDate":"2024-01-27"},{"lineNumber":101,"author":{"gitId":"wilsonwid"},"content":"        return returnedString.toString();","lastModifiedDate":"2024-01-27"},{"lineNumber":102,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":103,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":104,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":105,"author":{"gitId":"wilsonwid"},"content":"     * Returns how the TaskList object will be printed as a String.","lastModifiedDate":"2024-01-27"},{"lineNumber":106,"author":{"gitId":"wilsonwid"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":107,"author":{"gitId":"wilsonwid"},"content":"     * @return String of tasks.","lastModifiedDate":"2024-01-27"},{"lineNumber":108,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":109,"author":{"gitId":"wilsonwid"},"content":"    @Override","lastModifiedDate":"2024-01-20"},{"lineNumber":110,"author":{"gitId":"wilsonwid"},"content":"    public String toString() {","lastModifiedDate":"2024-01-20"},{"lineNumber":111,"author":{"gitId":"wilsonwid"},"content":"        StringBuilder returnedString \u003d new StringBuilder();","lastModifiedDate":"2024-01-20"},{"lineNumber":112,"author":{"gitId":"wilsonwid"},"content":"        returnedString.append(DISPLAY_LIST_MSG);","lastModifiedDate":"2024-02-15"},{"lineNumber":113,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":114,"author":{"gitId":"wilsonwid"},"content":"        for (int idx \u003d 0; idx \u003c this.tasks.size(); idx++) {","lastModifiedDate":"2024-01-20"},{"lineNumber":115,"author":{"gitId":"wilsonwid"},"content":"            returnedString.append(String.format(LIST_ITEM_FORMAT, idx + 1, this.getTask(idx).toString()));","lastModifiedDate":"2024-02-15"},{"lineNumber":116,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":117,"author":{"gitId":"wilsonwid"},"content":"            if (idx !\u003d this.getSize() - 1) {","lastModifiedDate":"2024-01-27"},{"lineNumber":118,"author":{"gitId":"wilsonwid"},"content":"                returnedString.append(\"\\n\");","lastModifiedDate":"2024-01-20"},{"lineNumber":119,"author":{"gitId":"wilsonwid"},"content":"            }","lastModifiedDate":"2024-01-20"},{"lineNumber":120,"author":{"gitId":"wilsonwid"},"content":"        }","lastModifiedDate":"2024-01-20"},{"lineNumber":121,"author":{"gitId":"wilsonwid"},"content":"        return returnedString.toString();","lastModifiedDate":"2024-01-20"},{"lineNumber":122,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":123,"author":{"gitId":"wilsonwid"},"content":"}","lastModifiedDate":"2024-01-20"}],"authorContributionMap":{"wilsonwid":123}},{"path":"src/main/java/talkingbot/util/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilsonwid"},"content":"package talkingbot.util;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"wilsonwid"},"content":"import talkingbot.exception.TalkingBotException;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"wilsonwid"},"content":"import talkingbot.task.Task;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"wilsonwid"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"wilsonwid"},"content":" * Class that represents the user interface.","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"wilsonwid"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"wilsonwid"},"content":"public class Ui {","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"wilsonwid"},"content":"    private static final String H_LINE \u003d \"\\t__________________________\"","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"wilsonwid"},"content":"            + \"__________________________________\";","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"wilsonwid"},"content":"    private static final String WELCOME \u003d \"\\tHello! I\u0027m \"","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"wilsonwid"},"content":"            + \"TalkingBot\\n\\tWhat can I do for you?\";","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"wilsonwid"},"content":"    private static final String GOODBYE \u003d \"\\tBye. Hope to see you again soon!\";","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"wilsonwid"},"content":"    private static final String LOADING_ERR_MSG \u003d \"\\tUsing new file instead...\";","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"wilsonwid"},"content":"    private static final String FIND_CMD_ERR_MSG \u003d \"\\tERROR! find needs to have a parameter.\";","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"wilsonwid"},"content":"    private static final String TASK_SET_DONE_MSG \u003d \"\\tNice! I\u0027ve marked this task as done:\";","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"wilsonwid"},"content":"    private static final String TASK_SET_UNDONE_MSG \u003d \"\\tAlright, I\u0027ve marked this task as undone.\";","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"wilsonwid"},"content":"    private static final String INVALID_CMD_MSG \u003d \"\\tERROR! Unknown command detected.\";","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"wilsonwid"},"content":"    private static final String SAVE_ONGOING_MSG \u003d \"\\tSaving tasks to file: \";","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"wilsonwid"},"content":"    private static final String SAVE_DONE_MSG \u003d \"\\tSave done!\";","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"wilsonwid"},"content":"    private static final String ADD_TASK_MSG \u003d \"\\tAlright, I\u0027ve added this task to your list:\";","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"wilsonwid"},"content":"    private static final String TASK_NUM_MSG_1 \u003d \"\\tYou now have\";","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"wilsonwid"},"content":"    private static final String TASK_NUM_MSG_2 \u003d \"tasks in the list.\";","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"wilsonwid"},"content":"    private static final String REMOVE_TASK_MSG \u003d \"\\tRemoving task:\";","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"wilsonwid"},"content":"     * Creates a new Ui instance.","lastModifiedDate":"2024-02-17"},{"lineNumber":29,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"wilsonwid"},"content":"    public Ui() {}","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"wilsonwid"},"content":"     * Returns a loading error and the exception that caused it.","lastModifiedDate":"2024-02-17"},{"lineNumber":34,"author":{"gitId":"wilsonwid"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"wilsonwid"},"content":"     * @param e The exception causing the loading error.","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"wilsonwid"},"content":"     * @return The loading error string.","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"wilsonwid"},"content":"    public String getLoadingErrorMsg(TalkingBotException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"wilsonwid"},"content":"        return String.format(\"\\t%s\\n%s\\n%s\\n\", e, LOADING_ERR_MSG, H_LINE);","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"wilsonwid"},"content":"     * Returns a message when a task is marked as done.","lastModifiedDate":"2024-02-17"},{"lineNumber":44,"author":{"gitId":"wilsonwid"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":45,"author":{"gitId":"wilsonwid"},"content":"     * @param modifiedTask Task that has been modified.","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"wilsonwid"},"content":"     * @return String indicating the task is set as done.","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"wilsonwid"},"content":"    public String getTaskDoneMsg(Task modifiedTask) {","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"wilsonwid"},"content":"        return String.format(\"%s\\n\\t%s\\n\", TASK_SET_DONE_MSG, modifiedTask);","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":51,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"wilsonwid"},"content":"     * Returns a message when a task is marked as undone.","lastModifiedDate":"2024-02-17"},{"lineNumber":54,"author":{"gitId":"wilsonwid"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":55,"author":{"gitId":"wilsonwid"},"content":"     * @param modifiedTask Task that has been modified.","lastModifiedDate":"2024-01-27"},{"lineNumber":56,"author":{"gitId":"wilsonwid"},"content":"     * @return String indicating the task is set as undone.","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":58,"author":{"gitId":"wilsonwid"},"content":"    public String getTaskSetUndoneMsg(Task modifiedTask) {","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"wilsonwid"},"content":"        return String.format(\"%s\\n\\t%s\\n\", TASK_SET_UNDONE_MSG, modifiedTask);","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":61,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":62,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":63,"author":{"gitId":"wilsonwid"},"content":"     * Returns a message when an invalid command is entered.","lastModifiedDate":"2024-02-17"},{"lineNumber":64,"author":{"gitId":"wilsonwid"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":65,"author":{"gitId":"wilsonwid"},"content":"     * @return A formatted String.","lastModifiedDate":"2024-02-22"},{"lineNumber":66,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":67,"author":{"gitId":"wilsonwid"},"content":"    public String getInvalidCmdMsg() {","lastModifiedDate":"2024-02-07"},{"lineNumber":68,"author":{"gitId":"wilsonwid"},"content":"        return String.format(\"%s\\n\", INVALID_CMD_MSG);","lastModifiedDate":"2024-02-07"},{"lineNumber":69,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":70,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":71,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":72,"author":{"gitId":"wilsonwid"},"content":"     * Returns a welcome message when the application starts.","lastModifiedDate":"2024-02-17"},{"lineNumber":73,"author":{"gitId":"wilsonwid"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":74,"author":{"gitId":"wilsonwid"},"content":"     * @return A formatted String.","lastModifiedDate":"2024-02-22"},{"lineNumber":75,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":76,"author":{"gitId":"wilsonwid"},"content":"    public String getWelcomeMsg() {","lastModifiedDate":"2024-02-07"},{"lineNumber":77,"author":{"gitId":"wilsonwid"},"content":"        return String.format(\"%s\\n\", WELCOME);","lastModifiedDate":"2024-02-17"},{"lineNumber":78,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":79,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":80,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":81,"author":{"gitId":"wilsonwid"},"content":"     * Returns a generic error message and the exception that caused it.","lastModifiedDate":"2024-02-17"},{"lineNumber":82,"author":{"gitId":"wilsonwid"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":83,"author":{"gitId":"wilsonwid"},"content":"     * @param e Exception to be printed.","lastModifiedDate":"2024-01-27"},{"lineNumber":84,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":85,"author":{"gitId":"wilsonwid"},"content":"    public String getGenericErrorMsg(TalkingBotException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":86,"author":{"gitId":"wilsonwid"},"content":"        return String.format(\"\\t%s\\n\", e.getMessage());","lastModifiedDate":"2024-02-18"},{"lineNumber":87,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":88,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":89,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":90,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":91,"author":{"gitId":"wilsonwid"},"content":"     * Returns a save that is ongoing and the file path of the save.","lastModifiedDate":"2024-02-17"},{"lineNumber":92,"author":{"gitId":"wilsonwid"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":93,"author":{"gitId":"wilsonwid"},"content":"     * @param filePath File path of the save file.","lastModifiedDate":"2024-01-27"},{"lineNumber":94,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":95,"author":{"gitId":"wilsonwid"},"content":"    public String getSaveOngoingMsg(String filePath) {","lastModifiedDate":"2024-02-07"},{"lineNumber":96,"author":{"gitId":"wilsonwid"},"content":"        return String.format(\"%s%s\\n\", SAVE_ONGOING_MSG, filePath);","lastModifiedDate":"2024-02-07"},{"lineNumber":97,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":98,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":99,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":100,"author":{"gitId":"wilsonwid"},"content":"     * Returns a message indicating that the saving has been done.","lastModifiedDate":"2024-02-17"},{"lineNumber":101,"author":{"gitId":"wilsonwid"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":102,"author":{"gitId":"wilsonwid"},"content":"     * @return A formatted String.","lastModifiedDate":"2024-02-22"},{"lineNumber":103,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":104,"author":{"gitId":"wilsonwid"},"content":"    public String getSaveDoneMsg() {","lastModifiedDate":"2024-02-07"},{"lineNumber":105,"author":{"gitId":"wilsonwid"},"content":"        return String.format(\"%s\\n\", SAVE_DONE_MSG);","lastModifiedDate":"2024-02-07"},{"lineNumber":106,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":107,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":108,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":109,"author":{"gitId":"wilsonwid"},"content":"     * Returns a message when tasks are added.","lastModifiedDate":"2024-02-17"},{"lineNumber":110,"author":{"gitId":"wilsonwid"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":111,"author":{"gitId":"wilsonwid"},"content":"     * @param curTask Task that is added.","lastModifiedDate":"2024-01-27"},{"lineNumber":112,"author":{"gitId":"wilsonwid"},"content":"     * @param numTasks Current size of the task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":113,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":114,"author":{"gitId":"wilsonwid"},"content":"    public String getAddTaskMsg(Task curTask, int numTasks) {","lastModifiedDate":"2024-02-07"},{"lineNumber":115,"author":{"gitId":"wilsonwid"},"content":"        return String.format(\"%s\\n\\t\\t%s\\n%s %d %s\\n\",","lastModifiedDate":"2024-02-07"},{"lineNumber":116,"author":{"gitId":"wilsonwid"},"content":"                ADD_TASK_MSG, curTask, TASK_NUM_MSG_1, numTasks, TASK_NUM_MSG_2);","lastModifiedDate":"2024-02-07"},{"lineNumber":117,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":118,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":119,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":120,"author":{"gitId":"wilsonwid"},"content":"     * Returns a message when tasks are deleted.","lastModifiedDate":"2024-02-17"},{"lineNumber":121,"author":{"gitId":"wilsonwid"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":122,"author":{"gitId":"wilsonwid"},"content":"     * @param removedTask Task that is removed.","lastModifiedDate":"2024-01-27"},{"lineNumber":123,"author":{"gitId":"wilsonwid"},"content":"     * @param numTasks Current size of the task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":124,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":125,"author":{"gitId":"wilsonwid"},"content":"    public String getDeleteTaskMsg(Task removedTask, int numTasks) {","lastModifiedDate":"2024-02-07"},{"lineNumber":126,"author":{"gitId":"wilsonwid"},"content":"        return String.format(\"%s\\n\\t\\t%s\\n%s %d %s\\n\",","lastModifiedDate":"2024-02-07"},{"lineNumber":127,"author":{"gitId":"wilsonwid"},"content":"                REMOVE_TASK_MSG, removedTask, TASK_NUM_MSG_1, numTasks,","lastModifiedDate":"2024-02-07"},{"lineNumber":128,"author":{"gitId":"wilsonwid"},"content":"                TASK_NUM_MSG_2);","lastModifiedDate":"2024-02-07"},{"lineNumber":129,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":130,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":131,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":132,"author":{"gitId":"wilsonwid"},"content":"     * Returns an error message when a find command does not execute correctly.","lastModifiedDate":"2024-02-22"},{"lineNumber":133,"author":{"gitId":"wilsonwid"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":134,"author":{"gitId":"wilsonwid"},"content":"     * @return A formatted String.","lastModifiedDate":"2024-02-22"},{"lineNumber":135,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":136,"author":{"gitId":"wilsonwid"},"content":"    public String getFindCmdErrMsg() {","lastModifiedDate":"2024-02-22"},{"lineNumber":137,"author":{"gitId":"wilsonwid"},"content":"        return String.format(\"%s\\n\", FIND_CMD_ERR_MSG);","lastModifiedDate":"2024-02-22"},{"lineNumber":138,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":139,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":140,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":141,"author":{"gitId":"wilsonwid"},"content":"     * Returns a goodbye message.","lastModifiedDate":"2024-02-17"},{"lineNumber":142,"author":{"gitId":"wilsonwid"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":143,"author":{"gitId":"wilsonwid"},"content":"     * @return A formatted String.","lastModifiedDate":"2024-02-22"},{"lineNumber":144,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":145,"author":{"gitId":"wilsonwid"},"content":"    public String getGoodbyeMsg() {","lastModifiedDate":"2024-02-07"},{"lineNumber":146,"author":{"gitId":"wilsonwid"},"content":"        return String.format(\"%s\\n\", GOODBYE);","lastModifiedDate":"2024-02-07"},{"lineNumber":147,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":148,"author":{"gitId":"wilsonwid"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"wilsonwid":148}},{"path":"src/main/resources/gui/Message.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"wilsonwid"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"wilsonwid"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"wilsonwid"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"wilsonwid"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"wilsonwid"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"wilsonwid"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"wilsonwid"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"wilsonwid"},"content":"      \u003cLabel fx:id\u003d\"displayText\" minHeight\u003d\"150.0\" style\u003d\"-fx-background-color: lightgreen; -fx-background-radius: 10;\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"wilsonwid"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"wilsonwid"},"content":"            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"wilsonwid"},"content":"         \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"wilsonwid"},"content":"      \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"wilsonwid"},"content":"      \u003cLabel fx:id\u003d\"displayName\" style\u003d\"-fx-background-color: lightpink;\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"wilsonwid"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"wilsonwid"},"content":"            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"wilsonwid"},"content":"         \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"wilsonwid"},"content":"   \u003c/children\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"wilsonwid"},"content":"   \u003cpadding\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"wilsonwid"},"content":"      \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"wilsonwid"},"content":"   \u003c/padding\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"wilsonwid"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"wilsonwid":23}},{"path":"src/main/resources/gui/Window.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"wilsonwid"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"wilsonwid"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"wilsonwid"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"wilsonwid"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"wilsonwid"},"content":"\u003c?import javafx.scene.effect.DropShadow?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"wilsonwid"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"wilsonwid"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"wilsonwid"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"700.0\" prefWidth\u003d\"650.0\" style\u003d\"-fx-background-color: lightgray;\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"talkingbot.gui.Window\"\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"wilsonwid"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"wilsonwid"},"content":"        \u003cTextField fx:id\u003d\"textInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"572.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"wilsonwid"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"574.0\" layoutY\u003d\"658.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" style\u003d\"-fx-background-radius: 100; -fx-background-color: lightyellow;\" text\u003d\"Send\"\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"wilsonwid"},"content":"         \u003ceffect\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"wilsonwid"},"content":"            \u003cDropShadow radius\u003d\"4.84\" width\u003d\"0.36\" /\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"wilsonwid"},"content":"         \u003c/effect\u003e\u003c/Button\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"wilsonwid"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"660.0\" prefWidth\u003d\"650.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"wilsonwid"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"wilsonwid"},"content":"                \u003cVBox fx:id\u003d\"vBox\" prefHeight\u003d\"660.0\" prefWidth\u003d\"650.0\" style\u003d\"-fx-background-color: lightblue;\" /\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"wilsonwid"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"wilsonwid"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"wilsonwid"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"wilsonwid"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"wilsonwid":23}},{"path":"src/test/java/talkingbot/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilsonwid"},"content":"package talkingbot.task;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"wilsonwid"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"wilsonwid"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"wilsonwid"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"wilsonwid"},"content":" * Class for testing the Deadline class.","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"wilsonwid"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"wilsonwid"},"content":"public class DeadlineTest {","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"wilsonwid"},"content":"     * Tests the Deadline class\u0027 getSaveFileString() method.","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"wilsonwid"},"content":"    @Test","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"wilsonwid"},"content":"    public void deadlineGetSaveFileStringTest() {","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"wilsonwid"},"content":"        assertEquals(\"D | 0 | do readings | 2024-01-30 1930\",","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"wilsonwid"},"content":"                new Deadline(\"do readings\", false, \"2024-01-30 1930\").getSaveFileString());","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"wilsonwid"},"content":"     * Tests the Deadline class\u0027 toString() method.","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"wilsonwid"},"content":"    @Test","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"wilsonwid"},"content":"    public void deadlineToStringTest() {","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"wilsonwid"},"content":"        assertEquals(\"[D] [X] finish essay (by: Jan 30 2024 2359)\",","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"wilsonwid"},"content":"                new Deadline(\"finish essay\", true, \"2024-01-30 2359\").toString());","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"wilsonwid"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"wilsonwid":28}},{"path":"src/test/java/talkingbot/task/DoWithinPeriodTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilsonwid"},"content":"package talkingbot.task;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"wilsonwid"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"wilsonwid"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"wilsonwid"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"wilsonwid"},"content":" * Class for testing the DoWithinPeriod class.","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"wilsonwid"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"wilsonwid"},"content":"public class DoWithinPeriodTest {","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"wilsonwid"},"content":"     * Tests the DoWithinPeriod class\u0027 getSaveFileString() method.","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"wilsonwid"},"content":"    @Test","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"wilsonwid"},"content":"    public void doWithinPeriodGetSaveFileStringTest() {","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"wilsonwid"},"content":"        assertEquals(\"W | 0 | do readings | 2024-01-30 1930 | 2024-01-30 2030\",","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"wilsonwid"},"content":"                new DoWithinPeriod(\"do readings\", false, \"2024-01-30 1930\", \"2024-01-30 2030\").getSaveFileString());","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"wilsonwid"},"content":"     * Tests the DoWithinPeriod class\u0027 toString() method.","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"wilsonwid"},"content":"    @Test","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"wilsonwid"},"content":"    public void doWithinPeriodToStringTest() {","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"wilsonwid"},"content":"        assertEquals(\"[W] [X] do essay (between Feb 10 2024 1800 and Feb 10 2024 2000)\",","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"wilsonwid"},"content":"                new DoWithinPeriod(\"do essay\", true, \"2024-02-10 1800\", \"2024-02-10 2000\").toString());","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"wilsonwid"},"content":"}","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"wilsonwid":28}},{"path":"src/test/java/talkingbot/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilsonwid"},"content":"package talkingbot.task;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"wilsonwid"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"wilsonwid"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"wilsonwid"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"wilsonwid"},"content":" * Class for testing the Event class.","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"wilsonwid"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"wilsonwid"},"content":"public class EventTest {","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"wilsonwid"},"content":"     * Tests the Event class\u0027 getSaveFileString() method.","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"wilsonwid"},"content":"    @Test","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"wilsonwid"},"content":"    public void eventGetSaveFileStringTest() {","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"wilsonwid"},"content":"        assertEquals(\"E | 1 | meet mentor | 2024-01-30 1900 | 2024-01-30 2000\",","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"wilsonwid"},"content":"                new Event(\"meet mentor\", true, \"2024-01-30 1900\", \"2024-01-30 2000\").getSaveFileString());","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"wilsonwid"},"content":"     * Tests the Event class\u0027 toString() method.","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"wilsonwid"},"content":"    @Test","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"wilsonwid"},"content":"    public void eventToStringTest() {","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"wilsonwid"},"content":"        assertEquals(\"[E] [ ] technical interview (from: Feb 10 2024 1500 to: Feb 10 2024 1600)\",","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"wilsonwid"},"content":"                new Event(\"technical interview\", false, \"2024-02-10 1500\", \"2024-02-10 1600\").toString());","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"wilsonwid"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"wilsonwid":28}},{"path":"src/test/java/talkingbot/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilsonwid"},"content":"package talkingbot.task;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"wilsonwid"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"wilsonwid"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"wilsonwid"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"wilsonwid"},"content":" * Class for testing the Todo class.","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"wilsonwid"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"wilsonwid"},"content":"public class TodoTest {","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"wilsonwid"},"content":"     * Tests the Todo class\u0027 getSaveFileString() method.","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"wilsonwid"},"content":"    @Test","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"wilsonwid"},"content":"    public void todoGetSaveFileStringTest() {","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"wilsonwid"},"content":"        assertEquals(\"T | 0 | read book\",","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"wilsonwid"},"content":"                new Todo(\"read book\").getSaveFileString());","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"wilsonwid"},"content":"     * Tests the Todo class\u0027 toString() method.","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"wilsonwid"},"content":"    @Test","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"wilsonwid"},"content":"    public void todoToStringTest() {","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"wilsonwid"},"content":"        assertEquals(\"[T] [X] study for exam\",","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"wilsonwid"},"content":"                new Todo(\"study for exam\", true).toString());","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"wilsonwid"},"content":"}","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"wilsonwid":28}},{"path":"src/test/java/talkingbot/util/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilsonwid"},"content":"package talkingbot.util;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"wilsonwid"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"wilsonwid"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"wilsonwid"},"content":"import talkingbot.command.ListCommand;","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"wilsonwid"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"wilsonwid"},"content":" * Class for testing the Parser class.","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"wilsonwid"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"wilsonwid"},"content":"public class ParserTest {","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"wilsonwid"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"wilsonwid"},"content":"     * Tests the Parser class\u0027 parseCommand method to generate","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"wilsonwid"},"content":"     * a ListCommand.","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"wilsonwid"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"wilsonwid"},"content":"    @Test","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"wilsonwid"},"content":"    public void parseListCommandTest() {","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"wilsonwid"},"content":"        assertEquals(","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"wilsonwid"},"content":"                new ListCommand(new String[]{\"list\"})","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"wilsonwid"},"content":"                        .runCommand(new TaskList(), new SaveFile(\"data/file.txt\"), new Ui()),","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"wilsonwid"},"content":"                new Parser().parseCommand(\"list\")","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"wilsonwid"},"content":"                        .runCommand(new TaskList(), new SaveFile(\"data/file.txt\"), new Ui()));","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"wilsonwid"},"content":"}","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"wilsonwid":25}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wilsonwid"},"content":"todo make sushi","lastModifiedDate":"2024-01-21"},{"lineNumber":2,"author":{"gitId":"wilsonwid"},"content":"list","lastModifiedDate":"2024-01-21"},{"lineNumber":3,"author":{"gitId":"wilsonwid"},"content":"deadline create social media post /by Sunday","lastModifiedDate":"2024-01-21"},{"lineNumber":4,"author":{"gitId":"wilsonwid"},"content":"list","lastModifiedDate":"2024-01-21"},{"lineNumber":5,"author":{"gitId":"wilsonwid"},"content":"event make salad /from 1pm /to 2pm today","lastModifiedDate":"2024-01-21"},{"lineNumber":6,"author":{"gitId":"wilsonwid"},"content":"list","lastModifiedDate":"2024-01-21"},{"lineNumber":7,"author":{"gitId":"wilsonwid"},"content":"mark 3","lastModifiedDate":"2024-01-21"},{"lineNumber":8,"author":{"gitId":"wilsonwid"},"content":"list","lastModifiedDate":"2024-01-21"},{"lineNumber":9,"author":{"gitId":"wilsonwid"},"content":"mark 2","lastModifiedDate":"2024-01-21"},{"lineNumber":10,"author":{"gitId":"wilsonwid"},"content":"list","lastModifiedDate":"2024-01-21"},{"lineNumber":11,"author":{"gitId":"wilsonwid"},"content":"unmark 2","lastModifiedDate":"2024-01-21"},{"lineNumber":12,"author":{"gitId":"wilsonwid"},"content":"list","lastModifiedDate":"2024-01-21"},{"lineNumber":13,"author":{"gitId":"wilsonwid"},"content":"bye","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"wilsonwid":13}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"wilsonwid"},"content":"java -classpath ..\\bin TalkingBot \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"wilsonwid":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"wilsonwid"},"content":"java -classpath ../bin TalkingBot \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"wilsonwid":1,"-":37}}]
