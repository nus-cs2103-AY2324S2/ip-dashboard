[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"chewbum"},"content":"# duke.Duke project template","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"chewbum"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"chewbum":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"chewbum"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"chewbum"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"chewbum"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"chewbum"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"chewbum"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"chewbum"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"chewbum"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"chewbum"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"chewbum"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"chewbum"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"chewbum"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"chewbum"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"chewbum"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"chewbum"},"content":"    mainClass.set(\"duke.Launcher\")","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"chewbum":15,"-":41}},{"path":"src/main/java/Command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chewbum"},"content":"package Command;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"chewbum"},"content":"import duke.Task;","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"chewbum"},"content":"import duke.TaskList;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"chewbum"},"content":"import duke.UI;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"chewbum"},"content":"import duke.DukeException;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"chewbum"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"chewbum"},"content":"    private Task taskToAdd;","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"chewbum"},"content":"    private static final int MAX_TASKS \u003d 100;","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"chewbum"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"chewbum"},"content":"        this.taskToAdd \u003d task;","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"chewbum"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"chewbum"},"content":"    public String execute(TaskList tasks, UI ui) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"chewbum"},"content":"        if (tasks.size() \u003e\u003d MAX_TASKS) {","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"chewbum"},"content":"            return ui.showMaximumTasksReached();","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"chewbum"},"content":"        } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"chewbum"},"content":"            tasks.addTask(taskToAdd);","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"chewbum"},"content":"            return ui.showTaskAdded(taskToAdd, tasks.size());","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"chewbum"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"chewbum"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"chewbum":22}},{"path":"src/main/java/Command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chewbum"},"content":"package Command;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"chewbum"},"content":"import duke.DukeException;","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"chewbum"},"content":"import duke.TaskList;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"chewbum"},"content":"import duke.UI;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"chewbum"},"content":"public abstract class Command {","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"chewbum"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"chewbum"},"content":"     * Executes the command.","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"chewbum"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"chewbum"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"chewbum"},"content":"     * @param ui The user interface.","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"chewbum"},"content":"     * @throws DukeException if there is an error during command execution.","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"chewbum"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"chewbum"},"content":"    public abstract String execute(TaskList tasks, UI ui) throws DukeException;","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"chewbum"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"chewbum"},"content":"        return false;","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"chewbum"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"chewbum":19}},{"path":"src/main/java/Command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chewbum"},"content":"package Command;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"chewbum"},"content":"import duke.DukeException;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"chewbum"},"content":"import duke.TaskList;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"chewbum"},"content":"import duke.UI;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"chewbum"},"content":"import duke.Task;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"chewbum"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"chewbum"},"content":"    private int taskIndex;","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"chewbum"},"content":"    public DeleteCommand(int taskIndex) {","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"chewbum"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"chewbum"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"chewbum"},"content":"    public String execute(TaskList tasks, UI ui) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"chewbum"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"chewbum"},"content":"            throw new DukeException(\"Task number out of bounds.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"chewbum"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"chewbum"},"content":"        Task removedTask \u003d tasks.removeTask(taskIndex);","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"chewbum"},"content":"        return ui.showTaskRemoved(removedTask, tasks.size());","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"chewbum"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"chewbum":23}},{"path":"src/main/java/Command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chewbum"},"content":"package Command;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"chewbum"},"content":"import duke.TaskList;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"chewbum"},"content":"import duke.UI;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"chewbum"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"chewbum"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"chewbum"},"content":"    public String execute(TaskList tasks, UI ui) {","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"chewbum"},"content":"        return ui.showGoodbyeMessage();","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"chewbum"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"chewbum"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"chewbum"},"content":"        return true;","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"chewbum"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"chewbum":15}},{"path":"src/main/java/Command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chewbum"},"content":"package Command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"chewbum"},"content":"import duke.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"chewbum"},"content":"import duke.UI;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"chewbum"},"content":"import duke.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"chewbum"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"chewbum"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"chewbum"},"content":"    private String[] keywords;","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"chewbum"},"content":"    public FindCommand(String... keywords) {","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"chewbum"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"chewbum"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"chewbum"},"content":"    public String execute(TaskList tasks, UI ui) {","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"chewbum"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d tasks.findTasks(keywords);","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"chewbum"},"content":"        return ui.showTaskList(foundTasks);","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"chewbum"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"chewbum":21}},{"path":"src/main/java/Command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chewbum"},"content":"package Command;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"chewbum"},"content":"import duke.TaskList;","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"chewbum"},"content":"import duke.UI;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"chewbum"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"chewbum"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"chewbum"},"content":"    public String execute(TaskList tasks, UI ui) {","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"chewbum"},"content":"        return ui.showTaskList(tasks.getAllTasks());","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"chewbum"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"chewbum":10}},{"path":"src/main/java/Command/ListTasksOnDateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chewbum"},"content":"package Command;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"chewbum"},"content":"import duke.DukeException;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"chewbum"},"content":"import duke.Task;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"chewbum"},"content":"import duke.TaskList;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"chewbum"},"content":"import duke.UI;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"chewbum"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"chewbum"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"chewbum"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"chewbum"},"content":"public class ListTasksOnDateCommand extends Command {","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"chewbum"},"content":"    private String dateString;","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"chewbum"},"content":"    public ListTasksOnDateCommand(String dateString) {","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"chewbum"},"content":"        this.dateString \u003d dateString;","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"chewbum"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"chewbum"},"content":"    public String execute(TaskList tasks, UI ui) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"chewbum"},"content":"        ArrayList\u003cTask\u003e filteredTasks \u003d tasks.getTasksOnDate(dateString);","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"chewbum"},"content":"        LocalDate date \u003d LocalDate.parse(dateString, DateTimeFormatter.ofPattern(\"d/M/yyyy\")); // Re-parse for display","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"chewbum"},"content":"        return ui.showTasksOnDate(filteredTasks, date);","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"chewbum"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"chewbum":25}},{"path":"src/main/java/Command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chewbum"},"content":"package Command;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"chewbum"},"content":"import duke.DukeException;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"chewbum"},"content":"import duke.TaskList;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"chewbum"},"content":"import duke.UI;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"chewbum"},"content":"import duke.Task;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"chewbum"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"chewbum"},"content":"    private int taskIndex;","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"chewbum"},"content":"    public MarkCommand(int taskIndex) {","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"chewbum"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"chewbum"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"chewbum"},"content":"    public String execute(TaskList tasks, UI ui) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"chewbum"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"chewbum"},"content":"            throw new DukeException(\"Invalid task number. Index out of bounds.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"chewbum"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"chewbum"},"content":"        Task task \u003d tasks.get(taskIndex);","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"chewbum"},"content":"        task.markAsDone();","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"chewbum"},"content":"        return ui.showTaskMarkedAsDone(task);","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"chewbum"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"chewbum":25}},{"path":"src/main/java/Command/UnMarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chewbum"},"content":"package Command;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"chewbum"},"content":"import duke.DukeException;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"chewbum"},"content":"import duke.TaskList;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"chewbum"},"content":"import duke.UI;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"chewbum"},"content":"import duke.Task;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"chewbum"},"content":"public class UnMarkCommand extends Command {","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"chewbum"},"content":"    private int taskIndex;","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"chewbum"},"content":"    public UnMarkCommand(int taskIndex) {","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"chewbum"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"chewbum"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"chewbum"},"content":"    public String execute(TaskList tasks, UI ui) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"chewbum"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"chewbum"},"content":"            throw new DukeException(\"Invalid task number. Index out of bounds.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"chewbum"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"chewbum"},"content":"        Task task \u003d tasks.get(taskIndex);","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"chewbum"},"content":"        task.markAsNotDone();","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"chewbum"},"content":"        return ui.showTaskMarkedAsNotDone(task);","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"chewbum"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"chewbum":25}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chewbum"},"content":"package duke;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"chewbum"},"content":"import java.time.LocalDateTime;;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"chewbum"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"chewbum"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"chewbum"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"chewbum"},"content":"    private LocalDateTime by;","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"chewbum"},"content":"    Deadline(String description, String by) throws DukeException {","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"chewbum"},"content":"        super(description);","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"chewbum"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"chewbum"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"chewbum"},"content":"            this.by \u003d LocalDateTime.parse(by, formatter);","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"chewbum"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"chewbum"},"content":"            throw new DukeException(\"Invalid date format. Please use \u0027d/M/yyyy HHmm\u0027, e.g., \u00272/12/2019 1800\u0027.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"chewbum"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"chewbum"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"chewbum"},"content":"    public String getTypeIcon() {","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"chewbum"},"content":"        return \"[D]\";","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"chewbum"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"chewbum"},"content":"        return this.by;","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"chewbum"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"chewbum"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":29,"author":{"gitId":"chewbum"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\");","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"chewbum"},"content":"        return super.toString() + \" (by: \" + this.getBy().format(formatter) + \")\";","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":32,"author":{"gitId":"chewbum"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"chewbum":32}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chewbum"},"content":"package duke;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"chewbum"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"chewbum"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"chewbum"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"chewbum"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"chewbum"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"chewbum"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"chewbum"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"chewbum"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"chewbum"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"chewbum"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"chewbum"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"chewbum"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"chewbum"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"chewbum"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"chewbum"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"chewbum"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"chewbum"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"chewbum"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"chewbum"},"content":"    @FXML","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"chewbum"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"chewbum"},"content":"    @FXML","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"chewbum"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"chewbum"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"chewbum"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"chewbum"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"chewbum"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"chewbum"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"chewbum"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"chewbum"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"chewbum"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"chewbum"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"chewbum"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"chewbum"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"chewbum"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"chewbum"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"chewbum"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"chewbum"},"content":"    private void flip() {","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"chewbum"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"chewbum"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"chewbum"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"chewbum"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"chewbum"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"chewbum"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"chewbum"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"chewbum"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"chewbum"},"content":"        db.flip();","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"chewbum"},"content":"        return db;","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"chewbum"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"chewbum":61}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chewbum"},"content":"package duke;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"chewbum"},"content":"import Command.Command;","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"chewbum"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"chewbum"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"chewbum"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"chewbum"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"chewbum"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"chewbum"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"chewbum"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"chewbum"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"chewbum"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"chewbum"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"chewbum"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"chewbum"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"chewbum"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"chewbum"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"chewbum"},"content":" * Main application class for Duke.","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"chewbum"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"chewbum"},"content":" * This class is responsible for initializing the application,","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"chewbum"},"content":" * loading data from storage, and starting the main program loop.","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"chewbum"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"chewbum"},"content":"public class Duke {","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"chewbum"},"content":"    private UI ui;","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"chewbum"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"chewbum"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"chewbum"},"content":"     * Constructs a new instance of Duke application.","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"chewbum"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"chewbum"},"content":"     * This constructor initializes the user interface and loads tasks from storage.","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"chewbum"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"chewbum"},"content":"    public Duke() throws DukeException {","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"chewbum"},"content":"        this.ui \u003d new UI();","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"chewbum"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"chewbum"},"content":"            ArrayList\u003cTask\u003e tasks \u003d TaskStorage.loadTasks();","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"chewbum"},"content":"            System.out.println(\"Loaded tasks: \" + tasks);","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"chewbum"},"content":"            this.tasks \u003d new TaskList(tasks);","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"chewbum"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"chewbum"},"content":"            ui.showErrorMessage(e.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"chewbum"},"content":"            this.tasks \u003d new TaskList(new ArrayList\u003c\u003e()); // Initialize with an empty list in case of error","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"chewbum"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"chewbum"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"chewbum"},"content":"     * Starts the application and runs the main loop.","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"chewbum"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"chewbum"},"content":"     * This method continually accepts user input and executes commands until the exit command is issued.","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"chewbum"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"chewbum"},"content":"    public void run() throws DukeException {","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"chewbum"},"content":"        ui.showWelcomeMessage();","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"chewbum"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"chewbum"},"content":"        String message \u003d \"\";","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"chewbum"},"content":"        while (!isExit) {","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"chewbum"},"content":"            try {","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"chewbum"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"chewbum"},"content":"                Command c \u003d Parser.parse(tasks, fullCommand);","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"chewbum"},"content":"                message \u003d c.execute(tasks, ui);","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"chewbum"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"chewbum"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"chewbum"},"content":"                message \u003d ui.showErrorMessage(e.getMessage());","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"chewbum"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"chewbum"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"chewbum"},"content":"        TaskStorage.saveTasks(tasks.getAllTasks());","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"chewbum"},"content":"        System.out.println(\"saved\");","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"chewbum"},"content":"    public static void main(String[] args) throws DukeException {","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"chewbum"},"content":"        new Duke().run();","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":73,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":74,"author":{"gitId":"chewbum"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-02-04"},{"lineNumber":75,"author":{"gitId":"chewbum"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":76,"author":{"gitId":"chewbum"},"content":"            Command c \u003d Parser.parse(tasks, input);","lastModifiedDate":"2024-02-04"},{"lineNumber":77,"author":{"gitId":"chewbum"},"content":"            TaskStorage.saveTasks(tasks.getAllTasks());","lastModifiedDate":"2024-02-04"},{"lineNumber":78,"author":{"gitId":"chewbum"},"content":"            return c.execute(tasks, ui);","lastModifiedDate":"2024-02-04"},{"lineNumber":79,"author":{"gitId":"chewbum"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":80,"author":{"gitId":"chewbum"},"content":"            return ui.showErrorMessage(e.getMessage());","lastModifiedDate":"2024-02-04"},{"lineNumber":81,"author":{"gitId":"chewbum"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":82,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":83,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":84,"author":{"gitId":"chewbum"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"chewbum":84}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chewbum"},"content":"package duke;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"chewbum"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"chewbum"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"chewbum"},"content":"        super(message);","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"chewbum"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"chewbum"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"chewbum"},"content":"        return \"     \" + super.getMessage() + \"\\n\";","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"chewbum"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"chewbum":11}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chewbum"},"content":"package duke;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"chewbum"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"chewbum"},"content":";","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"chewbum"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"chewbum"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"chewbum"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"chewbum"},"content":"    private LocalDate from;","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"chewbum"},"content":"    private LocalDate to;","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"chewbum"},"content":"    Event(String description, String from, String to) throws DukeException {","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"chewbum"},"content":"        super(description);","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"chewbum"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy\");","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"chewbum"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"chewbum"},"content":"            this.from \u003d LocalDate.parse(from, formatter);","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"chewbum"},"content":"            this.to \u003d LocalDate.parse(to, formatter);","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"chewbum"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"chewbum"},"content":"            throw new DukeException(\"Invalid date format. Please use \u0027d/M/yyyy\u0027, e.g., \u00272/12/2019\u0027.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"chewbum"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"chewbum"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"chewbum"},"content":"    public String getTypeIcon() {","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"chewbum"},"content":"        return \"[E]\";","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"chewbum"},"content":"    public LocalDate getFrom() {","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"chewbum"},"content":"        return this.from;","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"chewbum"},"content":"    public LocalDate getTo() {","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"chewbum"},"content":"        return this.to;","lastModifiedDate":"2024-01-23"},{"lineNumber":30,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":31,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":32,"author":{"gitId":"chewbum"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":33,"author":{"gitId":"chewbum"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":34,"author":{"gitId":"chewbum"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"chewbum"},"content":"        return super.toString() + \" (from \" + this.getFrom().format(formatter) + \" to \" + this.getTo().format(formatter) + \")\";","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":37,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":38,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":39,"author":{"gitId":"chewbum"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"chewbum":39}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chewbum"},"content":"package duke;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"chewbum"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"chewbum"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"chewbum"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"chewbum"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"chewbum"},"content":"public class Launcher {","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"chewbum"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"chewbum"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"chewbum"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"chewbum":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chewbum"},"content":"package duke;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"chewbum"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"chewbum"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"chewbum"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"chewbum"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"chewbum"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"chewbum"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"chewbum"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"chewbum"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"chewbum"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"chewbum"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"chewbum"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"chewbum"},"content":"    public Main() throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"chewbum"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"chewbum"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"chewbum"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"chewbum"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"chewbum"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"chewbum"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"chewbum"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"chewbum"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"chewbum"},"content":"            stage.show();","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"chewbum"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"chewbum"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"chewbum"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"chewbum"},"content":"}","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"chewbum":35}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chewbum"},"content":"package duke;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"chewbum"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"chewbum"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"chewbum"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"chewbum"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"chewbum"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"chewbum"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"chewbum"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"chewbum"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"chewbum"},"content":"import javafx.util.Duration;","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"chewbum"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"chewbum"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"chewbum"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"chewbum"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"chewbum"},"content":"    @FXML","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"chewbum"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"chewbum"},"content":"    @FXML","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"chewbum"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"chewbum"},"content":"    @FXML","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"chewbum"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"chewbum"},"content":"    @FXML","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"chewbum"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"chewbum"},"content":"    private Duke duke;","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"chewbum"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/bandit.png\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"chewbum"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/cat.png\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"chewbum"},"content":"    @FXML","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"chewbum"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"chewbum"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"chewbum"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"chewbum"},"content":"        duke \u003d d;","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"chewbum"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"chewbum"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"chewbum"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"chewbum"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"chewbum"},"content":"    @FXML","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"chewbum"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"chewbum"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"chewbum"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"chewbum"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"chewbum"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"chewbum"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"chewbum"},"content":"        );","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"chewbum"},"content":"        if (input.trim().equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"chewbum"},"content":"            PauseTransition pause \u003d new PauseTransition(Duration.seconds(1)); // Adjust the delay as needed","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"chewbum"},"content":"            pause.setOnFinished(event -\u003e System.exit(0));","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"chewbum"},"content":"            pause.play();","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"chewbum"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"chewbum"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"chewbum"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"chewbum":58}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chewbum"},"content":"package duke;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"chewbum"},"content":"import Command.Command;","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"chewbum"},"content":"import Command.AddCommand;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"chewbum"},"content":"import Command.DeleteCommand;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"chewbum"},"content":"import Command.ListCommand;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"chewbum"},"content":"import Command.ExitCommand;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"chewbum"},"content":"import Command.ListTasksOnDateCommand;","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"chewbum"},"content":"import Command.MarkCommand;","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"chewbum"},"content":"import Command.UnMarkCommand;","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"chewbum"},"content":"import Command.FindCommand;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"chewbum"},"content":"import duke.DukeException;","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"chewbum"},"content":"import duke.UI;","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"chewbum"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"chewbum"},"content":" * The Parser class is responsible for interpreting user input and translating it into commands.","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"chewbum"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"chewbum"},"content":"public class Parser {","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"chewbum"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"chewbum"},"content":"     * Parses the user input and returns the corresponding Command object.","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"chewbum"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"chewbum"},"content":"     * @param input The user input string.","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"chewbum"},"content":"     * @return Command object representing the user\u0027s command.","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"chewbum"},"content":"     * @throws DukeException if the input is invalid or cannot be parsed.","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"chewbum"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"chewbum"},"content":"    private static UI ui \u003d new UI();","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"chewbum"},"content":"    public static Command parse(TaskList tasks, String input) throws DukeException {","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"chewbum"},"content":"        String[] parts \u003d input.split(\" \", 3);","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"chewbum"},"content":"        String command \u003d parts[0];","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"chewbum"},"content":"        switch (command.toLowerCase()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"chewbum"},"content":"            case \"bye\":","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"chewbum"},"content":"                return new ExitCommand();","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"chewbum"},"content":"            case \"list\":","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"chewbum"},"content":"                return new ListCommand();","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"chewbum"},"content":"            case \"mark\":","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"chewbum"},"content":"                return parseMarkCommand(parts);","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"chewbum"},"content":"            case \"unmark\":","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"chewbum"},"content":"                return parseUnmarkCommand(parts);","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"chewbum"},"content":"            case \"delete\":","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"chewbum"},"content":"                return parseDeleteCommand(parts);","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"chewbum"},"content":"            case \"todo\":","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"chewbum"},"content":"                return new AddCommand(new Todo(input.substring(5)));","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"chewbum"},"content":"            case \"deadline\":","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"chewbum"},"content":"                return parseDeadlineCommand(input);","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"chewbum"},"content":"            case \"event\":","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"chewbum"},"content":"                return parseEventCommand(input);","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"chewbum"},"content":"            case \"tasks\":","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"chewbum"},"content":"                return parseTasksCommand(tasks, parts);","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"chewbum"},"content":"            case \"find\":","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"chewbum"},"content":"                if (parts.length \u003c 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"chewbum"},"content":"                    throw new DukeException(\"The description of a find command cannot be empty.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"chewbum"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"chewbum"},"content":"                String[] keywords \u003d input.substring(input.indexOf(\" \") + 1).trim().split(\"\\\\s+\");","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"chewbum"},"content":"                return new FindCommand(keywords);","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"chewbum"},"content":"            default:","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"chewbum"},"content":"                throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\" + \"\\n\"","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"chewbum"},"content":"                        + \"Please enter a valid command (bye, list, mark, unmark, delete, todo, event, deadline, tasks on)\");","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"chewbum"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"chewbum"},"content":"    private static Command parseMarkCommand(String[] parts) throws DukeException {","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"chewbum"},"content":"        // Implementation for parsing mark command","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"chewbum"},"content":"        // Ensure parts[1] is a valid task index and return new MarkCommand(index)","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"chewbum"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"chewbum"},"content":"            if (parts.length \u003d\u003d 2) {","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"chewbum"},"content":"                return new MarkCommand(Integer.parseInt(parts[1]) - 1);","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"chewbum"},"content":"            } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"chewbum"},"content":"                throw new DukeException(\"☹ OOPS!!! The description of a mark command should be in the format:\\n\"","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"chewbum"},"content":"                        + \"     mark \u003ctask number\u003e\");","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"chewbum"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":73,"author":{"gitId":"chewbum"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":74,"author":{"gitId":"chewbum"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":75,"author":{"gitId":"chewbum"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":76,"author":{"gitId":"chewbum"},"content":"            // Handle case where the part after unmark is not a number","lastModifiedDate":"2024-01-30"},{"lineNumber":77,"author":{"gitId":"chewbum"},"content":"            throw new DukeException(\"Invalid task number. Please enter a number.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":78,"author":{"gitId":"chewbum"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":79,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":80,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":81,"author":{"gitId":"chewbum"},"content":"    private static Command parseUnmarkCommand(String[] parts) throws DukeException {","lastModifiedDate":"2024-01-30"},{"lineNumber":82,"author":{"gitId":"chewbum"},"content":"        // Similar to parseMarkCommand","lastModifiedDate":"2024-01-30"},{"lineNumber":83,"author":{"gitId":"chewbum"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":84,"author":{"gitId":"chewbum"},"content":"            if (parts.length \u003d\u003d 2) {","lastModifiedDate":"2024-01-30"},{"lineNumber":85,"author":{"gitId":"chewbum"},"content":"                return new UnMarkCommand(Integer.parseInt(parts[1]) - 1);","lastModifiedDate":"2024-01-30"},{"lineNumber":86,"author":{"gitId":"chewbum"},"content":"            } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":87,"author":{"gitId":"chewbum"},"content":"                throw new DukeException(\"☹ OOPS!!! The description of an unmark command should be in the format:\\n\"","lastModifiedDate":"2024-01-30"},{"lineNumber":88,"author":{"gitId":"chewbum"},"content":"                        + \"     unmark \u003ctask number\u003e\");","lastModifiedDate":"2024-01-30"},{"lineNumber":89,"author":{"gitId":"chewbum"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":90,"author":{"gitId":"chewbum"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":91,"author":{"gitId":"chewbum"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":92,"author":{"gitId":"chewbum"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":93,"author":{"gitId":"chewbum"},"content":"            // Handle case where the part after unmark is not a number","lastModifiedDate":"2024-01-30"},{"lineNumber":94,"author":{"gitId":"chewbum"},"content":"            throw new DukeException(\"Invalid task number. Please enter a number.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":95,"author":{"gitId":"chewbum"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":96,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":97,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":98,"author":{"gitId":"chewbum"},"content":"    private static Command parseDeleteCommand(String[] parts) throws DukeException {","lastModifiedDate":"2024-01-30"},{"lineNumber":99,"author":{"gitId":"chewbum"},"content":"        // Ensure parts[1] is a valid task index and return new DeleteCommand(index)","lastModifiedDate":"2024-01-30"},{"lineNumber":100,"author":{"gitId":"chewbum"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":101,"author":{"gitId":"chewbum"},"content":"            if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2024-01-30"},{"lineNumber":102,"author":{"gitId":"chewbum"},"content":"                throw new DukeException(\"☹ OOPS!!! The description of a delete command cannot be empty.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":103,"author":{"gitId":"chewbum"},"content":"            } else if (parts.length !\u003d 2) {","lastModifiedDate":"2024-01-30"},{"lineNumber":104,"author":{"gitId":"chewbum"},"content":"                throw new DukeException(\"Invalid delete format. Please use the following format:\\n\"","lastModifiedDate":"2024-01-30"},{"lineNumber":105,"author":{"gitId":"chewbum"},"content":"                        + \"     delete \u003ctask number\u003e\");","lastModifiedDate":"2024-01-30"},{"lineNumber":106,"author":{"gitId":"chewbum"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":107,"author":{"gitId":"chewbum"},"content":"            int taskIndex \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2024-01-30"},{"lineNumber":108,"author":{"gitId":"chewbum"},"content":"            return new DeleteCommand(taskIndex);","lastModifiedDate":"2024-01-30"},{"lineNumber":109,"author":{"gitId":"chewbum"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":110,"author":{"gitId":"chewbum"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":111,"author":{"gitId":"chewbum"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":112,"author":{"gitId":"chewbum"},"content":"            // Handle case where the part after delete is not a number","lastModifiedDate":"2024-01-30"},{"lineNumber":113,"author":{"gitId":"chewbum"},"content":"            throw new DukeException(\"Invalid task number. Please enter a number.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":114,"author":{"gitId":"chewbum"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":115,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":116,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":117,"author":{"gitId":"chewbum"},"content":"    private static Command parseDeadlineCommand(String parts) throws DukeException {","lastModifiedDate":"2024-01-30"},{"lineNumber":118,"author":{"gitId":"chewbum"},"content":"        // Split parts[1] to extract description and date, and return new AddCommand(new Deadline(...))","lastModifiedDate":"2024-01-30"},{"lineNumber":119,"author":{"gitId":"chewbum"},"content":"        String[] parts2 \u003d parts.split(\" /by \");","lastModifiedDate":"2024-01-30"},{"lineNumber":120,"author":{"gitId":"chewbum"},"content":"        Task task \u003d null;","lastModifiedDate":"2024-01-30"},{"lineNumber":121,"author":{"gitId":"chewbum"},"content":"        if (parts2.length !\u003d 2 || parts2[0].length() \u003c\u003d 9) { // Check for correct format and description length","lastModifiedDate":"2024-01-30"},{"lineNumber":122,"author":{"gitId":"chewbum"},"content":"            throw new DukeException(\"Invalid deadline format. Please use the following format:\\n\"","lastModifiedDate":"2024-01-30"},{"lineNumber":123,"author":{"gitId":"chewbum"},"content":"                    + \"     deadline \u003cdescription\u003e /by \u003ctime\u003e\");","lastModifiedDate":"2024-01-30"},{"lineNumber":124,"author":{"gitId":"chewbum"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":125,"author":{"gitId":"chewbum"},"content":"        String description \u003d parts2[0].substring(9); // Assuming \"deadline \" is 9 characters long","lastModifiedDate":"2024-01-30"},{"lineNumber":126,"author":{"gitId":"chewbum"},"content":"        String by \u003d parts2[1];","lastModifiedDate":"2024-01-30"},{"lineNumber":127,"author":{"gitId":"chewbum"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":128,"author":{"gitId":"chewbum"},"content":"            task \u003d new Deadline(description, by);","lastModifiedDate":"2024-01-30"},{"lineNumber":129,"author":{"gitId":"chewbum"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":130,"author":{"gitId":"chewbum"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":131,"author":{"gitId":"chewbum"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":132,"author":{"gitId":"chewbum"},"content":"        if (task \u003d\u003d null) {","lastModifiedDate":"2024-01-30"},{"lineNumber":133,"author":{"gitId":"chewbum"},"content":"            throw new DukeException(\"Please use \u0027todo\u0027, \u0027deadline\u0027, or \u0027event\u0027 to create tasks.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":134,"author":{"gitId":"chewbum"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":135,"author":{"gitId":"chewbum"},"content":"        return new AddCommand(task);","lastModifiedDate":"2024-01-30"},{"lineNumber":136,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":137,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":138,"author":{"gitId":"chewbum"},"content":"    private static Command parseEventCommand(String parts) throws DukeException {","lastModifiedDate":"2024-01-30"},{"lineNumber":139,"author":{"gitId":"chewbum"},"content":"        // Split parts[1] to extract description and date/time, and","lastModifiedDate":"2024-01-30"},{"lineNumber":140,"author":{"gitId":"chewbum"},"content":"        String[] parts2 \u003d parts.split(\" /from \");","lastModifiedDate":"2024-01-30"},{"lineNumber":141,"author":{"gitId":"chewbum"},"content":"        Task task \u003d null;","lastModifiedDate":"2024-01-30"},{"lineNumber":142,"author":{"gitId":"chewbum"},"content":"        if (parts2.length !\u003d 2) {","lastModifiedDate":"2024-01-30"},{"lineNumber":143,"author":{"gitId":"chewbum"},"content":"            throw new DukeException(\"Invalid deadline format. Please use the following format:\\n\"","lastModifiedDate":"2024-01-30"},{"lineNumber":144,"author":{"gitId":"chewbum"},"content":"                    + \"      event \u003cdescription\u003e /from \u003cstart time\u003e /to \u003cend time\u003e\");","lastModifiedDate":"2024-01-30"},{"lineNumber":145,"author":{"gitId":"chewbum"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":146,"author":{"gitId":"chewbum"},"content":"        String[] partsWithTo \u003d parts2[1].split(\" /to \");","lastModifiedDate":"2024-01-30"},{"lineNumber":147,"author":{"gitId":"chewbum"},"content":"        if (partsWithTo.length !\u003d 2) {","lastModifiedDate":"2024-01-30"},{"lineNumber":148,"author":{"gitId":"chewbum"},"content":"            throw new DukeException(\"Invalid event format. Please use the following format:\\n\"","lastModifiedDate":"2024-01-30"},{"lineNumber":149,"author":{"gitId":"chewbum"},"content":"                    + \"     event \u003cdescription\u003e /from \u003cstart time\u003e /to \u003cend time\u003e\");","lastModifiedDate":"2024-01-30"},{"lineNumber":150,"author":{"gitId":"chewbum"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":151,"author":{"gitId":"chewbum"},"content":"        String eventDescription \u003d parts2[0].substring(6);","lastModifiedDate":"2024-01-30"},{"lineNumber":152,"author":{"gitId":"chewbum"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":153,"author":{"gitId":"chewbum"},"content":"            task \u003d new Event(eventDescription, partsWithTo[0], partsWithTo[1]);","lastModifiedDate":"2024-01-30"},{"lineNumber":154,"author":{"gitId":"chewbum"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":155,"author":{"gitId":"chewbum"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":156,"author":{"gitId":"chewbum"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":157,"author":{"gitId":"chewbum"},"content":"        if (task \u003d\u003d null) {","lastModifiedDate":"2024-01-30"},{"lineNumber":158,"author":{"gitId":"chewbum"},"content":"            throw new DukeException(\"Please use \u0027todo\u0027, \u0027deadline\u0027, or \u0027event\u0027 to create tasks.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":159,"author":{"gitId":"chewbum"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":160,"author":{"gitId":"chewbum"},"content":"        return new AddCommand(task);","lastModifiedDate":"2024-01-30"},{"lineNumber":161,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":162,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":163,"author":{"gitId":"chewbum"},"content":"    private static Command parseTasksCommand(TaskList tasks, String[] parts) throws DukeException {","lastModifiedDate":"2024-01-30"},{"lineNumber":164,"author":{"gitId":"chewbum"},"content":"        if (parts.length \u003d\u003d 3 \u0026\u0026 parts[1].toLowerCase().equals(\"on\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":165,"author":{"gitId":"chewbum"},"content":"            String dateInput \u003d parts[2];","lastModifiedDate":"2024-01-30"},{"lineNumber":166,"author":{"gitId":"chewbum"},"content":"            return new ListTasksOnDateCommand(dateInput);","lastModifiedDate":"2024-01-30"},{"lineNumber":167,"author":{"gitId":"chewbum"},"content":"        } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":168,"author":{"gitId":"chewbum"},"content":"            throw new DukeException(\"     Invalid command. Please use the following format:\\n\"","lastModifiedDate":"2024-01-30"},{"lineNumber":169,"author":{"gitId":"chewbum"},"content":"                        + \"     tasks on dd-MM-YYYY\");","lastModifiedDate":"2024-01-30"},{"lineNumber":170,"author":{"gitId":"chewbum"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":171,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":172,"author":{"gitId":"chewbum"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"chewbum":172}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chewbum"},"content":"package duke;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"chewbum"},"content":"import java.io.Serializable;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"chewbum"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"chewbum"},"content":" * Represents a general task in the Duke application.","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"chewbum"},"content":" * This is an abstract class that other specific types of tasks extend.","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"chewbum"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"chewbum"},"content":"public abstract class Task implements Serializable {","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"chewbum"},"content":"    private String description;","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"chewbum"},"content":"    private boolean isDone;","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"chewbum"},"content":"    Task(String description) {","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"chewbum"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"chewbum"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"chewbum"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"chewbum"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"chewbum"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"chewbum"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"chewbum"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"chewbum"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"chewbum"},"content":"     * Marks the task as not done.","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"chewbum"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"chewbum"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"chewbum"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":29,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":30,"author":{"gitId":"chewbum"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-23"},{"lineNumber":31,"author":{"gitId":"chewbum"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2024-01-23"},{"lineNumber":32,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":33,"author":{"gitId":"chewbum"},"content":"    public abstract String getTypeIcon();","lastModifiedDate":"2024-01-23"},{"lineNumber":34,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":35,"author":{"gitId":"chewbum"},"content":"    public String getDescription() {","lastModifiedDate":"2024-01-23"},{"lineNumber":36,"author":{"gitId":"chewbum"},"content":"        return this.description;","lastModifiedDate":"2024-01-23"},{"lineNumber":37,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":38,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":39,"author":{"gitId":"chewbum"},"content":"    public boolean isDone() {","lastModifiedDate":"2024-01-23"},{"lineNumber":40,"author":{"gitId":"chewbum"},"content":"        return this.isDone;","lastModifiedDate":"2024-01-23"},{"lineNumber":41,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":42,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":43,"author":{"gitId":"chewbum"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":44,"author":{"gitId":"chewbum"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":45,"author":{"gitId":"chewbum"},"content":"        return this.getTypeIcon() + this.getStatusIcon() + \" \" + this.getDescription();","lastModifiedDate":"2024-01-23"},{"lineNumber":46,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":47,"author":{"gitId":"chewbum"},"content":"}","lastModifiedDate":"2024-01-23"},{"lineNumber":48,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"chewbum":48}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chewbum"},"content":"package duke;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"chewbum"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"chewbum"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"chewbum"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"chewbum"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"chewbum"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"chewbum"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"chewbum"},"content":"public class TaskList {","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"chewbum"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"chewbum"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"chewbum"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"chewbum"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"chewbum"},"content":"        tasks.add(task);","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"chewbum"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"chewbum"},"content":"        return tasks.get(index);","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"chewbum"},"content":"    public Task removeTask(int index) {","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"chewbum"},"content":"        return tasks.remove(index);","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"chewbum"},"content":"    public int size() {","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"chewbum"},"content":"        return tasks.size();","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"chewbum"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"chewbum"},"content":"        return tasks.isEmpty();","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"chewbum"},"content":"    public ArrayList\u003cTask\u003e getAllTasks() {","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"chewbum"},"content":"        return tasks;","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"chewbum"},"content":"    public Task get(int index) {","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"chewbum"},"content":"        return tasks.get(index);","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"chewbum"},"content":"    public ArrayList\u003cTask\u003e getTasksOnDate(String dateString) throws DukeException {","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"chewbum"},"content":"        ArrayList\u003cTask\u003e filteredTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"chewbum"},"content":"        LocalDate date;","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"chewbum"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"chewbum"},"content":"            date \u003d LocalDate.parse(dateString, DateTimeFormatter.ofPattern(\"d/M/yyyy\"));","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"chewbum"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"chewbum"},"content":"            throw new DukeException(\"Invalid date format. Please use d/M/yyyy.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"chewbum"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"chewbum"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"chewbum"},"content":"            if (task instanceof Deadline) {","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"chewbum"},"content":"                Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"chewbum"},"content":"                LocalDate deadlineDate \u003d deadline.getBy().toLocalDate();","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"chewbum"},"content":"                if (deadlineDate.equals(date)) {","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"chewbum"},"content":"                    filteredTasks.add(deadline);","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"chewbum"},"content":"                }","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"chewbum"},"content":"            } else if (task instanceof Event) {","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"chewbum"},"content":"                Event event \u003d (Event) task;","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"chewbum"},"content":"                if (!event.getFrom().isAfter(date) \u0026\u0026 !event.getTo().isBefore(date)) {","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"chewbum"},"content":"                    filteredTasks.add(event);","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"chewbum"},"content":"                }","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"chewbum"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"chewbum"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"chewbum"},"content":"        return filteredTasks;","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"chewbum"},"content":"    public ArrayList\u003cTask\u003e findTasks(String... keywords) {","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"chewbum"},"content":"        return tasks.stream()","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"chewbum"},"content":"                .filter(task -\u003e Arrays.stream(keywords)","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"chewbum"},"content":"                        .anyMatch(keyword -\u003e task.getDescription().contains(keyword)))","lastModifiedDate":"2024-02-04"},{"lineNumber":72,"author":{"gitId":"chewbum"},"content":"                .collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2024-02-04"},{"lineNumber":73,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":75,"author":{"gitId":"chewbum"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"chewbum":75}},{"path":"src/main/java/duke/TaskStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chewbum"},"content":"package duke;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"chewbum"},"content":"import java.io.*;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"chewbum"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"chewbum"},"content":"public class TaskStorage {","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"chewbum"},"content":"    private static final String FILE_PATH \u003d \"../data/duke.txt\";","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"chewbum"},"content":"    public static void saveTasks(ArrayList\u003cTask\u003e tasks) throws DukeException {","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"chewbum"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"chewbum"},"content":"            File file \u003d new File(FILE_PATH);","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"chewbum"},"content":"            File directory \u003d file.getParentFile();","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"chewbum"},"content":"            if (!directory.exists()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"chewbum"},"content":"                directory.mkdirs(); // Create the directory if it doesn\u0027t exist","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"chewbum"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"chewbum"},"content":"            if (!file.exists()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"chewbum"},"content":"                file.createNewFile(); // Create the file if it doesn\u0027t exist","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"chewbum"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"chewbum"},"content":"            FileOutputStream fileOut \u003d new FileOutputStream(file);","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"chewbum"},"content":"            ObjectOutputStream objectOut \u003d new ObjectOutputStream(fileOut);","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"chewbum"},"content":"            objectOut.writeObject(tasks);","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"chewbum"},"content":"            objectOut.close();","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"chewbum"},"content":"            fileOut.close();","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"chewbum"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"chewbum"},"content":"            throw new DukeException(\"An error occurred while saving tasks: \" + e.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"chewbum"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"chewbum"},"content":"    public static ArrayList\u003cTask\u003e loadTasks() throws DukeException {","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"chewbum"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"chewbum"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"chewbum"},"content":"        if (!file.exists()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"chewbum"},"content":"            return tasks; // File not found, return empty list","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"chewbum"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"chewbum"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"chewbum"},"content":"            FileInputStream fileIn \u003d new FileInputStream(file);","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"chewbum"},"content":"            ObjectInputStream objectIn \u003d new ObjectInputStream(fileIn);","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"chewbum"},"content":"            tasks \u003d (ArrayList\u003cTask\u003e) objectIn.readObject();","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"chewbum"},"content":"            objectIn.close();","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"chewbum"},"content":"            fileIn.close();","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"chewbum"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"chewbum"},"content":"            throw new DukeException(\"No saved tasks found. Starting a new task list.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"chewbum"},"content":"        } catch (InvalidClassException | ClassNotFoundException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"chewbum"},"content":"            throw new DukeException(\"duke.Task data is corrupted or in an incompatible format.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"chewbum"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"chewbum"},"content":"            throw new DukeException(\"Error occurred while reading the file: \" + e.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"chewbum"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"chewbum"},"content":"        return tasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"chewbum"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"chewbum":55}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chewbum"},"content":"package duke;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"chewbum"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"chewbum"},"content":"    Todo(String description) {","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"chewbum"},"content":"        super(description);","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"chewbum"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"chewbum"},"content":"    public String getTypeIcon() {","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"chewbum"},"content":"        return \"[T]\";","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"chewbum"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"chewbum":12}},{"path":"src/main/java/duke/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chewbum"},"content":"package duke;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"chewbum"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"chewbum"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"chewbum"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"chewbum"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"chewbum"},"content":"public class UI {","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"chewbum"},"content":"    // Keep the scanner if you still need it for any CLI functionality","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"chewbum"},"content":"    private final Scanner scanner;","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"chewbum"},"content":"    public UI() {","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"chewbum"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"chewbum"},"content":"    public String readCommand() {","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"chewbum"},"content":"        return scanner.nextLine();","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"chewbum"},"content":"    public String showWelcomeMessage() {","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"chewbum"},"content":"        return \"     Hello! I\u0027m Cleo\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"chewbum"},"content":"                + \"     What can I do for you?\\n\";","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"chewbum"},"content":"    public String showGoodbyeMessage() {","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"chewbum"},"content":"        return \"     Bye. Hope to see you again soon!\\n\";","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"chewbum"},"content":"    public String showErrorMessage(String errorMessage) {","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"chewbum"},"content":"        return errorMessage + \"\\n\";","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"chewbum"},"content":"    public String showTaskAdded(Task task, int taskCount) {","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"chewbum"},"content":"        return \"     Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"chewbum"},"content":"                + \"       \" + task + \"\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"chewbum"},"content":"                + \"     Now you have \" + taskCount + \" tasks in the list.\";","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"chewbum"},"content":"    public String showTaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"chewbum"},"content":"        StringBuilder message \u003d new StringBuilder(\"     Here are the tasks in your list:\\n\");","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"chewbum"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"chewbum"},"content":"            message.append(\"     No tasks added yet.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"chewbum"},"content":"        } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"chewbum"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"chewbum"},"content":"                message.append(\"     \").append(i + 1).append(\".\").append(tasks.get(i)).append(\"\\n\");","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"chewbum"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"chewbum"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"chewbum"},"content":"        return message.toString().trim(); // .trim() to remove the last newline character","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"chewbum"},"content":"    public String showTasksOnDate(ArrayList\u003cTask\u003e tasks, LocalDate date) {","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"chewbum"},"content":"        StringBuilder message \u003d new StringBuilder(\"Tasks on \" + date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \":\\n\");","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"chewbum"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"chewbum"},"content":"            message.append(\"No tasks found on this date.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"chewbum"},"content":"        } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"chewbum"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"chewbum"},"content":"                message.append(task).append(\"\\n\");","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"chewbum"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"chewbum"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"chewbum"},"content":"        return message.toString().trim(); // .trim() to remove the last newline character","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"chewbum"},"content":"    public String showMaximumTasksReached() {","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"chewbum"},"content":"        return \"     Maximum tasks reached. Cannot add more tasks.\";","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"chewbum"},"content":"    public String showTaskRemoved(Task task, int taskCount) {","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"chewbum"},"content":"        return \"     Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"chewbum"},"content":"                + \"       \" + task + \"\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"chewbum"},"content":"                + \"     Now you have \" + taskCount + \" tasks in the list.\";","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":73,"author":{"gitId":"chewbum"},"content":"    public String showTaskMarkedAsDone(Task task) {","lastModifiedDate":"2024-02-04"},{"lineNumber":74,"author":{"gitId":"chewbum"},"content":"        return \"     Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":75,"author":{"gitId":"chewbum"},"content":"                + \"       \" + task;","lastModifiedDate":"2024-02-04"},{"lineNumber":76,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":77,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":78,"author":{"gitId":"chewbum"},"content":"    public String showTaskMarkedAsNotDone(Task task) {","lastModifiedDate":"2024-02-04"},{"lineNumber":79,"author":{"gitId":"chewbum"},"content":"        return \"     OK, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":80,"author":{"gitId":"chewbum"},"content":"                + \"       \" + task;","lastModifiedDate":"2024-02-04"},{"lineNumber":81,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":82,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":83,"author":{"gitId":"chewbum"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"chewbum":83}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"chewbum"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"chewbum"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"chewbum"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"chewbum"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"chewbum"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"chewbum"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"chewbum"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"chewbum"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"chewbum"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"chewbum"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"chewbum"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"chewbum"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"chewbum"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"chewbum"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"chewbum":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"chewbum"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"chewbum"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"chewbum"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"chewbum"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"chewbum"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"chewbum"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"chewbum"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"chewbum"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"chewbum"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"chewbum"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"chewbum"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"chewbum"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"chewbum"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"chewbum"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"chewbum"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"chewbum"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"chewbum"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"chewbum":19}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chewbum"},"content":"package duke;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"chewbum"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"chewbum"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"chewbum"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"chewbum"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"chewbum"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"chewbum"},"content":"public class DeadlineTest {","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"chewbum"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"chewbum"},"content":"    public void creatingDeadline_ShouldHaveCorrectDescriptionAndDate() throws DukeException {","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"chewbum"},"content":"        Deadline deadline \u003d new Deadline(\"Submit assignment\", \"01/12/2021 1800\");","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"chewbum"},"content":"        assertEquals(\"Submit assignment\", deadline.getDescription());","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"chewbum"},"content":"        assertEquals(LocalDateTime.of(2021, 12, 1, 18, 0), deadline.getBy()); // Assuming getBy() returns LocalDate","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"chewbum"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"chewbum"},"content":"    public void toString_ShouldReturnCorrectFormat() throws DukeException {","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"chewbum"},"content":"        Deadline deadline \u003d new Deadline(\"Submit assignment\", \"1/12/2021 1800\");","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"chewbum"},"content":"        String expectedOutput \u003d \"[D][ ] Submit assignment (by: Dec 1 2021 1800)\"; // Adjust based on your actual toString format","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"chewbum"},"content":"        assertEquals(expectedOutput, deadline.toString());","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"chewbum"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"chewbum":23}},{"path":"src/test/java/duke/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"chewbum"},"content":"package duke;  //same package as the class being tested","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"chewbum"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"chewbum"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"chewbum"},"content":"public class TodoTest {","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"chewbum"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"chewbum"},"content":"    public void creatingTodo_ShouldHaveCorrectDescription() {","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"chewbum"},"content":"        Todo todo \u003d new Todo(\"Read a book\");","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"chewbum"},"content":"        assertEquals(\"Read a book\", todo.getDescription());","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"chewbum"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"chewbum"},"content":"    public void toString_ShouldReturnCorrectFormat() {","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"chewbum"},"content":"        Todo todo \u003d new Todo(\"Read a book\");","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"chewbum"},"content":"        String expectedOutput \u003d \"[T][ ] Read a book\"; // Assuming this is your expected format","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"chewbum"},"content":"        assertEquals(expectedOutput, todo.toString());","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"chewbum"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"chewbum"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"chewbum"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"chewbum":23}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"chewbum"},"content":"random command","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"chewbum"},"content":"todo Hello World","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"chewbum"},"content":"deadline Goodbye World /by tmr","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"chewbum"},"content":"event Hello and Goodbye World /from now /to next year","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"chewbum"},"content":"list","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"chewbum"},"content":"mark 1","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"chewbum"},"content":"mark 1","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"chewbum"},"content":"unmark 1","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"chewbum"},"content":"unmark 1","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"chewbum"},"content":"mark 1","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"chewbum"},"content":"mark 2","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"chewbum"},"content":"list","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"chewbum"},"content":"unmark 2","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"chewbum"},"content":"list","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"chewbum"},"content":"mark 3","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"chewbum"},"content":"list","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"chewbum"},"content":"bye","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"chewbum":17}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"chewbum"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"chewbum":1,"-":20}}]
