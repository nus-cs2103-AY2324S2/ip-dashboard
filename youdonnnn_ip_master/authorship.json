[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"youdonnnn"},"content":"    mainClass.set(\"youdon.Youdon\")","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"youdonnnn"},"content":"    archiveBaseName \u003d \"youdon\"","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"youdonnnn":2,"-":40}},{"path":"src/main/java/youdon/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"youdonnnn"},"content":"package youdon;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"youdonnnn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"youdonnnn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"youdonnnn"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"youdonnnn"},"content":"    protected LocalDateTime deadline;","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"youdonnnn"},"content":"    public Deadline(String description, LocalDateTime deadline) {","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"youdonnnn"},"content":"        super(description);","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"youdonnnn"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"youdonnnn"},"content":"    public String getTypeIcon() {","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"youdonnnn"},"content":"        return \"D\";","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"youdonnnn"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"youdonnnn"},"content":"    public String toString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"youdonnnn"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"youdonnnn"},"content":"        String formattedDateTime \u003d this.deadline.format(formatter);","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"youdonnnn"},"content":"        return \"[\" + this.getTypeIcon() + \"][\" + this.getStatusIcon() + \"] \" + this.description + \"(by: \" + formattedDateTime + \")\";","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"youdonnnn"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"youdonnnn":24}},{"path":"src/main/java/youdon/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"youdonnnn"},"content":"package youdon;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"youdonnnn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"youdonnnn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"youdonnnn"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"youdonnnn"},"content":"    protected LocalDateTime start;","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"youdonnnn"},"content":"    protected LocalDateTime end;","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"youdonnnn"},"content":"    public Event(String description, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"youdonnnn"},"content":"        super(description);","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"youdonnnn"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"youdonnnn"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"youdonnnn"},"content":"    public String getTypeIcon() {","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"youdonnnn"},"content":"        return \"E\";","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"youdonnnn"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"youdonnnn"},"content":"    public String toString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"youdonnnn"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"youdonnnn"},"content":"        String formattedDateTimeStart \u003d this.start.format(formatter);","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"youdonnnn"},"content":"        String formattedDateTimeEnd \u003d this.end.format(formatter);","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"youdonnnn"},"content":"        return \"[\" + this.getTypeIcon() + \"][\" + this.getStatusIcon() + \"] \" + this.description + \"(from: \" + formattedDateTimeStart + \" to: \" + formattedDateTimeEnd + \")\";","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"youdonnnn"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"youdonnnn":27}},{"path":"src/main/java/youdon/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"youdonnnn"},"content":"package youdon;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"youdonnnn"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"youdonnnn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"youdonnnn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"youdonnnn"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"youdonnnn"},"content":"public class Parser {","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"youdonnnn"},"content":"    private final Ui ui;","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"youdonnnn"},"content":"    private final TaskList taskList;","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"youdonnnn"},"content":"    private final Storage storage;","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"youdonnnn"},"content":"    public Parser(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"youdonnnn"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"youdonnnn"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"youdonnnn"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"youdonnnn"},"content":"    public void parse() {","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"youdonnnn"},"content":"        Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"youdonnnn"},"content":"        String data \u003d input.nextLine();","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"youdonnnn"},"content":"        while (!(data.isEmpty())) {","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"youdonnnn"},"content":"            // try-catch block for exceptions","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"youdonnnn"},"content":"            try {","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"youdonnnn"},"content":"                YoudonException.EmptyDescException.detectMissingDesc(data);","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"youdonnnn"},"content":"                YoudonException.InvalidCommandException.detectInvalidCommand(data);","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"youdonnnn"},"content":"            } catch (YoudonException.EmptyDescException | YoudonException.InvalidCommandException e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"youdonnnn"},"content":"                // print out error message","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"youdonnnn"},"content":"                ui.printYoudonErrorMsg(e.getMessage());","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"youdonnnn"},"content":"                // update data to next input","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"youdonnnn"},"content":"                if (input.hasNextLine()) {","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"youdonnnn"},"content":"                    data \u003d input.nextLine();","lastModifiedDate":"2024-02-08"},{"lineNumber":35,"author":{"gitId":"youdonnnn"},"content":"                } else {","lastModifiedDate":"2024-02-08"},{"lineNumber":36,"author":{"gitId":"youdonnnn"},"content":"                    data \u003d \"\";","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"youdonnnn"},"content":"                }","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"youdonnnn"},"content":"            }","lastModifiedDate":"2024-02-08"},{"lineNumber":39,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":40,"author":{"gitId":"youdonnnn"},"content":"            // if input \u003d\u003d \"bye\", print chatbot bye message","lastModifiedDate":"2024-02-08"},{"lineNumber":41,"author":{"gitId":"youdonnnn"},"content":"            if (data.equals(\"bye\")) {","lastModifiedDate":"2024-02-08"},{"lineNumber":42,"author":{"gitId":"youdonnnn"},"content":"                ui.printByeMsg();","lastModifiedDate":"2024-02-08"},{"lineNumber":43,"author":{"gitId":"youdonnnn"},"content":"                break;","lastModifiedDate":"2024-02-08"},{"lineNumber":44,"author":{"gitId":"youdonnnn"},"content":"            }","lastModifiedDate":"2024-02-08"},{"lineNumber":45,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":46,"author":{"gitId":"youdonnnn"},"content":"            // if input \u003d\u003d \"list\", return tasklist","lastModifiedDate":"2024-02-08"},{"lineNumber":47,"author":{"gitId":"youdonnnn"},"content":"            if (data.equals(\"list\")) {","lastModifiedDate":"2024-02-08"},{"lineNumber":48,"author":{"gitId":"youdonnnn"},"content":"                ui.printTaskList(taskList);","lastModifiedDate":"2024-02-08"},{"lineNumber":49,"author":{"gitId":"youdonnnn"},"content":"                // wait for next input","lastModifiedDate":"2024-02-08"},{"lineNumber":50,"author":{"gitId":"youdonnnn"},"content":"                if (input.hasNextLine()) {","lastModifiedDate":"2024-02-08"},{"lineNumber":51,"author":{"gitId":"youdonnnn"},"content":"                    data \u003d input.nextLine();","lastModifiedDate":"2024-02-08"},{"lineNumber":52,"author":{"gitId":"youdonnnn"},"content":"                } else {","lastModifiedDate":"2024-02-08"},{"lineNumber":53,"author":{"gitId":"youdonnnn"},"content":"                    data \u003d \"\";","lastModifiedDate":"2024-02-08"},{"lineNumber":54,"author":{"gitId":"youdonnnn"},"content":"                }","lastModifiedDate":"2024-02-08"},{"lineNumber":55,"author":{"gitId":"youdonnnn"},"content":"                continue;","lastModifiedDate":"2024-02-08"},{"lineNumber":56,"author":{"gitId":"youdonnnn"},"content":"            }","lastModifiedDate":"2024-02-08"},{"lineNumber":57,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":58,"author":{"gitId":"youdonnnn"},"content":"            if (data.contains(\" \")) {","lastModifiedDate":"2024-02-08"},{"lineNumber":59,"author":{"gitId":"youdonnnn"},"content":"                // if input data has 2 parts, split into command \u0026 task number","lastModifiedDate":"2024-02-08"},{"lineNumber":60,"author":{"gitId":"youdonnnn"},"content":"                String[] parts \u003d data.split(\" \", 2);","lastModifiedDate":"2024-02-08"},{"lineNumber":61,"author":{"gitId":"youdonnnn"},"content":"                String command \u003d parts[0];","lastModifiedDate":"2024-02-08"},{"lineNumber":62,"author":{"gitId":"youdonnnn"},"content":"                String task \u003d parts[1];","lastModifiedDate":"2024-02-08"},{"lineNumber":63,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":64,"author":{"gitId":"youdonnnn"},"content":"                // if input \u003d\u003d \"mark\", mark the specified task as done","lastModifiedDate":"2024-02-08"},{"lineNumber":65,"author":{"gitId":"youdonnnn"},"content":"                if (command.equals(\"mark\")) {","lastModifiedDate":"2024-02-08"},{"lineNumber":66,"author":{"gitId":"youdonnnn"},"content":"                    // mark task as done in array","lastModifiedDate":"2024-02-08"},{"lineNumber":67,"author":{"gitId":"youdonnnn"},"content":"                    int taskNumber \u003d Integer.parseInt(task);","lastModifiedDate":"2024-02-08"},{"lineNumber":68,"author":{"gitId":"youdonnnn"},"content":"                    taskList.get(taskNumber - 1).isDone \u003d true;","lastModifiedDate":"2024-02-08"},{"lineNumber":69,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":70,"author":{"gitId":"youdonnnn"},"content":"                    // print out changes","lastModifiedDate":"2024-02-08"},{"lineNumber":71,"author":{"gitId":"youdonnnn"},"content":"                    ui.printMarkMsg(taskList, taskNumber);","lastModifiedDate":"2024-02-08"},{"lineNumber":72,"author":{"gitId":"youdonnnn"},"content":"                    // save and wait for next input","lastModifiedDate":"2024-02-08"},{"lineNumber":73,"author":{"gitId":"youdonnnn"},"content":"                    try {","lastModifiedDate":"2024-02-08"},{"lineNumber":74,"author":{"gitId":"youdonnnn"},"content":"                        storage.saveData(taskList);","lastModifiedDate":"2024-02-08"},{"lineNumber":75,"author":{"gitId":"youdonnnn"},"content":"                        System.out.println(\"Tasklist saved!\");","lastModifiedDate":"2024-02-09"},{"lineNumber":76,"author":{"gitId":"youdonnnn"},"content":"                    } catch (IOException e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":77,"author":{"gitId":"youdonnnn"},"content":"                        System.out.println(\"Error!\" + e.getMessage());","lastModifiedDate":"2024-02-08"},{"lineNumber":78,"author":{"gitId":"youdonnnn"},"content":"                    }","lastModifiedDate":"2024-02-08"},{"lineNumber":79,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":80,"author":{"gitId":"youdonnnn"},"content":"                    if (input.hasNextLine()) {","lastModifiedDate":"2024-02-08"},{"lineNumber":81,"author":{"gitId":"youdonnnn"},"content":"                        data \u003d input.nextLine();","lastModifiedDate":"2024-02-08"},{"lineNumber":82,"author":{"gitId":"youdonnnn"},"content":"                    } else {","lastModifiedDate":"2024-02-08"},{"lineNumber":83,"author":{"gitId":"youdonnnn"},"content":"                        data \u003d \"\";","lastModifiedDate":"2024-02-08"},{"lineNumber":84,"author":{"gitId":"youdonnnn"},"content":"                    }","lastModifiedDate":"2024-02-08"},{"lineNumber":85,"author":{"gitId":"youdonnnn"},"content":"                    continue;","lastModifiedDate":"2024-02-08"},{"lineNumber":86,"author":{"gitId":"youdonnnn"},"content":"                }","lastModifiedDate":"2024-02-08"},{"lineNumber":87,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":88,"author":{"gitId":"youdonnnn"},"content":"                // if input \u003d\u003d \"unmark\", mark the specified task as undone","lastModifiedDate":"2024-02-08"},{"lineNumber":89,"author":{"gitId":"youdonnnn"},"content":"                if (command.equals(\"unmark\")) {","lastModifiedDate":"2024-02-08"},{"lineNumber":90,"author":{"gitId":"youdonnnn"},"content":"                    // mark task as undone in array","lastModifiedDate":"2024-02-08"},{"lineNumber":91,"author":{"gitId":"youdonnnn"},"content":"                    int taskNumber \u003d Integer.parseInt(task);","lastModifiedDate":"2024-02-08"},{"lineNumber":92,"author":{"gitId":"youdonnnn"},"content":"                    taskList.get(taskNumber - 1).isDone \u003d false;","lastModifiedDate":"2024-02-08"},{"lineNumber":93,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":94,"author":{"gitId":"youdonnnn"},"content":"                    // print out changes","lastModifiedDate":"2024-02-08"},{"lineNumber":95,"author":{"gitId":"youdonnnn"},"content":"                    ui.printUnmarkMsg(taskList, taskNumber);","lastModifiedDate":"2024-02-08"},{"lineNumber":96,"author":{"gitId":"youdonnnn"},"content":"                    // save and wait for next input","lastModifiedDate":"2024-02-08"},{"lineNumber":97,"author":{"gitId":"youdonnnn"},"content":"                    try {","lastModifiedDate":"2024-02-08"},{"lineNumber":98,"author":{"gitId":"youdonnnn"},"content":"                        storage.saveData(taskList);","lastModifiedDate":"2024-02-08"},{"lineNumber":99,"author":{"gitId":"youdonnnn"},"content":"                        System.out.println(\"Tasklist saved!\");","lastModifiedDate":"2024-02-09"},{"lineNumber":100,"author":{"gitId":"youdonnnn"},"content":"                    } catch (IOException e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":101,"author":{"gitId":"youdonnnn"},"content":"                        System.out.println(\"Error!\" + e.getMessage());","lastModifiedDate":"2024-02-08"},{"lineNumber":102,"author":{"gitId":"youdonnnn"},"content":"                    }","lastModifiedDate":"2024-02-08"},{"lineNumber":103,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":104,"author":{"gitId":"youdonnnn"},"content":"                    if (input.hasNextLine()) {","lastModifiedDate":"2024-02-08"},{"lineNumber":105,"author":{"gitId":"youdonnnn"},"content":"                        data \u003d input.nextLine();","lastModifiedDate":"2024-02-08"},{"lineNumber":106,"author":{"gitId":"youdonnnn"},"content":"                    } else {","lastModifiedDate":"2024-02-08"},{"lineNumber":107,"author":{"gitId":"youdonnnn"},"content":"                        data \u003d \"\";","lastModifiedDate":"2024-02-08"},{"lineNumber":108,"author":{"gitId":"youdonnnn"},"content":"                    }","lastModifiedDate":"2024-02-08"},{"lineNumber":109,"author":{"gitId":"youdonnnn"},"content":"                    continue;","lastModifiedDate":"2024-02-08"},{"lineNumber":110,"author":{"gitId":"youdonnnn"},"content":"                }","lastModifiedDate":"2024-02-08"},{"lineNumber":111,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":112,"author":{"gitId":"youdonnnn"},"content":"                // if input \u003d\u003d \"delete\", delete the specified task","lastModifiedDate":"2024-02-08"},{"lineNumber":113,"author":{"gitId":"youdonnnn"},"content":"                if (command.equals(\"delete\")) {","lastModifiedDate":"2024-02-08"},{"lineNumber":114,"author":{"gitId":"youdonnnn"},"content":"                    int taskNumber \u003d Integer.parseInt(task);","lastModifiedDate":"2024-02-08"},{"lineNumber":115,"author":{"gitId":"youdonnnn"},"content":"                    // print out changes","lastModifiedDate":"2024-02-08"},{"lineNumber":116,"author":{"gitId":"youdonnnn"},"content":"                    ui.printDeleteMsg(taskList, taskNumber);","lastModifiedDate":"2024-02-08"},{"lineNumber":117,"author":{"gitId":"youdonnnn"},"content":"                    // delete task and fix indexing","lastModifiedDate":"2024-02-08"},{"lineNumber":118,"author":{"gitId":"youdonnnn"},"content":"                    taskList.remove(taskNumber - 1);","lastModifiedDate":"2024-02-08"},{"lineNumber":119,"author":{"gitId":"youdonnnn"},"content":"                    // save and wait for next input","lastModifiedDate":"2024-02-08"},{"lineNumber":120,"author":{"gitId":"youdonnnn"},"content":"                    try {","lastModifiedDate":"2024-02-08"},{"lineNumber":121,"author":{"gitId":"youdonnnn"},"content":"                        storage.saveData(taskList);","lastModifiedDate":"2024-02-08"},{"lineNumber":122,"author":{"gitId":"youdonnnn"},"content":"                        System.out.println(\"Tasklist saved!\");","lastModifiedDate":"2024-02-09"},{"lineNumber":123,"author":{"gitId":"youdonnnn"},"content":"                    } catch (IOException e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":124,"author":{"gitId":"youdonnnn"},"content":"                        System.out.println(\"Error!\" + e.getMessage());","lastModifiedDate":"2024-02-08"},{"lineNumber":125,"author":{"gitId":"youdonnnn"},"content":"                    }","lastModifiedDate":"2024-02-08"},{"lineNumber":126,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":127,"author":{"gitId":"youdonnnn"},"content":"                    if (input.hasNextLine()) {","lastModifiedDate":"2024-02-08"},{"lineNumber":128,"author":{"gitId":"youdonnnn"},"content":"                        data \u003d input.nextLine();","lastModifiedDate":"2024-02-08"},{"lineNumber":129,"author":{"gitId":"youdonnnn"},"content":"                    } else {","lastModifiedDate":"2024-02-08"},{"lineNumber":130,"author":{"gitId":"youdonnnn"},"content":"                        data \u003d \"\";","lastModifiedDate":"2024-02-08"},{"lineNumber":131,"author":{"gitId":"youdonnnn"},"content":"                    }","lastModifiedDate":"2024-02-08"},{"lineNumber":132,"author":{"gitId":"youdonnnn"},"content":"                    continue;","lastModifiedDate":"2024-02-08"},{"lineNumber":133,"author":{"gitId":"youdonnnn"},"content":"                }","lastModifiedDate":"2024-02-08"},{"lineNumber":134,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":135,"author":{"gitId":"youdonnnn"},"content":"                // differentiate between type of tasks and add to tasklist","lastModifiedDate":"2024-02-08"},{"lineNumber":136,"author":{"gitId":"youdonnnn"},"content":"                if (command.equals(\"todo\")) {","lastModifiedDate":"2024-02-08"},{"lineNumber":137,"author":{"gitId":"youdonnnn"},"content":"                    // add to tasklist","lastModifiedDate":"2024-02-08"},{"lineNumber":138,"author":{"gitId":"youdonnnn"},"content":"                    taskList.add(new Todo(task));","lastModifiedDate":"2024-02-08"},{"lineNumber":139,"author":{"gitId":"youdonnnn"},"content":"                    // print out task added","lastModifiedDate":"2024-02-08"},{"lineNumber":140,"author":{"gitId":"youdonnnn"},"content":"                    ui.printTaskAdded(taskList);","lastModifiedDate":"2024-02-08"},{"lineNumber":141,"author":{"gitId":"youdonnnn"},"content":"                    System.out.println(\"Tasklist saved!\");","lastModifiedDate":"2024-02-09"},{"lineNumber":142,"author":{"gitId":"youdonnnn"},"content":"                }","lastModifiedDate":"2024-02-08"},{"lineNumber":143,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":144,"author":{"gitId":"youdonnnn"},"content":"                // if task has \"by\", split into task and deadline","lastModifiedDate":"2024-02-08"},{"lineNumber":145,"author":{"gitId":"youdonnnn"},"content":"                if (task.contains(\"/by \")) {","lastModifiedDate":"2024-02-08"},{"lineNumber":146,"author":{"gitId":"youdonnnn"},"content":"                    String[] chunks \u003d task.split(\"/by \");","lastModifiedDate":"2024-02-08"},{"lineNumber":147,"author":{"gitId":"youdonnnn"},"content":"                    if (command.equals(\"deadline\")) {","lastModifiedDate":"2024-02-08"},{"lineNumber":148,"author":{"gitId":"youdonnnn"},"content":"                        // add to tasklist","lastModifiedDate":"2024-02-08"},{"lineNumber":149,"author":{"gitId":"youdonnnn"},"content":"                        String taskDesc \u003d chunks[0];","lastModifiedDate":"2024-02-08"},{"lineNumber":150,"author":{"gitId":"youdonnnn"},"content":"                        String deadline \u003d chunks[1];","lastModifiedDate":"2024-02-08"},{"lineNumber":151,"author":{"gitId":"youdonnnn"},"content":"                        try {","lastModifiedDate":"2024-02-08"},{"lineNumber":152,"author":{"gitId":"youdonnnn"},"content":"                            // attempt to parse the string into a LocalDateTime object","lastModifiedDate":"2024-02-08"},{"lineNumber":153,"author":{"gitId":"youdonnnn"},"content":"                            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2024-02-08"},{"lineNumber":154,"author":{"gitId":"youdonnnn"},"content":"                            LocalDateTime dateTimeDeadline \u003d LocalDateTime.parse(deadline, formatter);","lastModifiedDate":"2024-02-08"},{"lineNumber":155,"author":{"gitId":"youdonnnn"},"content":"                            taskList.add(new Deadline(taskDesc, dateTimeDeadline));","lastModifiedDate":"2024-02-08"},{"lineNumber":156,"author":{"gitId":"youdonnnn"},"content":"                            // print out task added","lastModifiedDate":"2024-02-08"},{"lineNumber":157,"author":{"gitId":"youdonnnn"},"content":"                            ui.printTaskAdded(taskList);","lastModifiedDate":"2024-02-08"},{"lineNumber":158,"author":{"gitId":"youdonnnn"},"content":"                            System.out.println(\"Tasklist saved!\");","lastModifiedDate":"2024-02-09"},{"lineNumber":159,"author":{"gitId":"youdonnnn"},"content":"                        } catch (Exception e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":160,"author":{"gitId":"youdonnnn"},"content":"                            // handle the exception if the date or time is not the correct format","lastModifiedDate":"2024-02-08"},{"lineNumber":161,"author":{"gitId":"youdonnnn"},"content":"                            System.out.println(\"Oh no! That\u0027s not a correct date or time format!\");","lastModifiedDate":"2024-02-08"},{"lineNumber":162,"author":{"gitId":"youdonnnn"},"content":"                        }","lastModifiedDate":"2024-02-08"},{"lineNumber":163,"author":{"gitId":"youdonnnn"},"content":"                    }","lastModifiedDate":"2024-02-08"},{"lineNumber":164,"author":{"gitId":"youdonnnn"},"content":"                }","lastModifiedDate":"2024-02-08"},{"lineNumber":165,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":166,"author":{"gitId":"youdonnnn"},"content":"                if (task.contains(\"/from \")) {","lastModifiedDate":"2024-02-08"},{"lineNumber":167,"author":{"gitId":"youdonnnn"},"content":"                    String[] sections \u003d task.split(\"/from | /to \");","lastModifiedDate":"2024-02-08"},{"lineNumber":168,"author":{"gitId":"youdonnnn"},"content":"                    if (command.equals(\"event\")) {","lastModifiedDate":"2024-02-08"},{"lineNumber":169,"author":{"gitId":"youdonnnn"},"content":"                        // add to tasklist","lastModifiedDate":"2024-02-08"},{"lineNumber":170,"author":{"gitId":"youdonnnn"},"content":"                        String taskDesc \u003d sections[0];","lastModifiedDate":"2024-02-08"},{"lineNumber":171,"author":{"gitId":"youdonnnn"},"content":"                        String start \u003d sections[1];","lastModifiedDate":"2024-02-08"},{"lineNumber":172,"author":{"gitId":"youdonnnn"},"content":"                        String end \u003d sections[2];","lastModifiedDate":"2024-02-08"},{"lineNumber":173,"author":{"gitId":"youdonnnn"},"content":"                        try {","lastModifiedDate":"2024-02-08"},{"lineNumber":174,"author":{"gitId":"youdonnnn"},"content":"                            // attempt to parse the strings into a LocalDateTime object","lastModifiedDate":"2024-02-08"},{"lineNumber":175,"author":{"gitId":"youdonnnn"},"content":"                            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2024-02-08"},{"lineNumber":176,"author":{"gitId":"youdonnnn"},"content":"                            LocalDateTime dateTimeStart \u003d LocalDateTime.parse(start, formatter);","lastModifiedDate":"2024-02-08"},{"lineNumber":177,"author":{"gitId":"youdonnnn"},"content":"                            LocalDateTime dateTimeEnd \u003d LocalDateTime.parse(end, formatter);","lastModifiedDate":"2024-02-08"},{"lineNumber":178,"author":{"gitId":"youdonnnn"},"content":"                            taskList.add(new Event(taskDesc, dateTimeStart, dateTimeEnd));","lastModifiedDate":"2024-02-08"},{"lineNumber":179,"author":{"gitId":"youdonnnn"},"content":"                            // print out task added","lastModifiedDate":"2024-02-08"},{"lineNumber":180,"author":{"gitId":"youdonnnn"},"content":"                            ui.printTaskAdded(taskList);","lastModifiedDate":"2024-02-08"},{"lineNumber":181,"author":{"gitId":"youdonnnn"},"content":"                            System.out.println(\"Tasklist saved!\");","lastModifiedDate":"2024-02-09"},{"lineNumber":182,"author":{"gitId":"youdonnnn"},"content":"                        } catch (Exception e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":183,"author":{"gitId":"youdonnnn"},"content":"                            // handle the exception if the date or time is not the correct format","lastModifiedDate":"2024-02-08"},{"lineNumber":184,"author":{"gitId":"youdonnnn"},"content":"                            System.out.println(\"Oh no! That\u0027s not a correct date or time format!\");","lastModifiedDate":"2024-02-08"},{"lineNumber":185,"author":{"gitId":"youdonnnn"},"content":"                        }","lastModifiedDate":"2024-02-08"},{"lineNumber":186,"author":{"gitId":"youdonnnn"},"content":"                    }","lastModifiedDate":"2024-02-08"},{"lineNumber":187,"author":{"gitId":"youdonnnn"},"content":"                }","lastModifiedDate":"2024-02-08"},{"lineNumber":188,"author":{"gitId":"youdonnnn"},"content":"                // save and wait for next input","lastModifiedDate":"2024-02-08"},{"lineNumber":189,"author":{"gitId":"youdonnnn"},"content":"                try {","lastModifiedDate":"2024-02-08"},{"lineNumber":190,"author":{"gitId":"youdonnnn"},"content":"                    storage.saveData(taskList);","lastModifiedDate":"2024-02-08"},{"lineNumber":191,"author":{"gitId":"youdonnnn"},"content":"                } catch (IOException e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":192,"author":{"gitId":"youdonnnn"},"content":"                    System.out.println(\"Error!\" + e.getMessage());","lastModifiedDate":"2024-02-08"},{"lineNumber":193,"author":{"gitId":"youdonnnn"},"content":"                }","lastModifiedDate":"2024-02-08"},{"lineNumber":194,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":195,"author":{"gitId":"youdonnnn"},"content":"                if (input.hasNextLine()) {","lastModifiedDate":"2024-02-08"},{"lineNumber":196,"author":{"gitId":"youdonnnn"},"content":"                    data \u003d input.nextLine();","lastModifiedDate":"2024-02-08"},{"lineNumber":197,"author":{"gitId":"youdonnnn"},"content":"                } else {","lastModifiedDate":"2024-02-08"},{"lineNumber":198,"author":{"gitId":"youdonnnn"},"content":"                    data \u003d \"\";","lastModifiedDate":"2024-02-08"},{"lineNumber":199,"author":{"gitId":"youdonnnn"},"content":"                }","lastModifiedDate":"2024-02-08"},{"lineNumber":200,"author":{"gitId":"youdonnnn"},"content":"            }","lastModifiedDate":"2024-02-08"},{"lineNumber":201,"author":{"gitId":"youdonnnn"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":202,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":203,"author":{"gitId":"youdonnnn"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"youdonnnn":203}},{"path":"src/main/java/youdon/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"youdonnnn"},"content":"package youdon;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"youdonnnn"},"content":"import java.io.File;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"youdonnnn"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"youdonnnn"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"youdonnnn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"youdonnnn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"youdonnnn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"youdonnnn"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"youdonnnn"},"content":"public class Storage {","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"youdonnnn"},"content":"    // file path should be \"./src/main/data/save.txt\"","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"youdonnnn"},"content":"    private final String filepath;","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"youdonnnn"},"content":"    private final File saveFile;","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"youdonnnn"},"content":"    // create save file if it doesnt exist","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"youdonnnn"},"content":"    public Storage(String filepath) {","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"youdonnnn"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"youdonnnn"},"content":"        this.saveFile \u003d new File(filepath);","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"youdonnnn"},"content":"        try {","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"youdonnnn"},"content":"            if (!saveFile.exists()) {","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"youdonnnn"},"content":"                saveFile.getParentFile().mkdir();","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"youdonnnn"},"content":"                saveFile.createNewFile();","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"youdonnnn"},"content":"                System.out.println(\"Save File created successfully!\");","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"youdonnnn"},"content":"            } else {","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"youdonnnn"},"content":"                System.out.println(\"Save File already exists!\");","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"youdonnnn"},"content":"            }","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"youdonnnn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"youdonnnn"},"content":"            System.out.println(\"Error!\" + e.getMessage());","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"youdonnnn"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"youdonnnn"},"content":"    public void saveData(TaskList taskList) throws IOException {","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"youdonnnn"},"content":"        try (FileWriter writer \u003d new FileWriter(this.filepath)) {","lastModifiedDate":"2024-02-08"},{"lineNumber":35,"author":{"gitId":"youdonnnn"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2024-02-08"},{"lineNumber":36,"author":{"gitId":"youdonnnn"},"content":"                Task task \u003d taskList.get(i);","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"youdonnnn"},"content":"                writer.write(task.toString() + \"\\n\");","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"youdonnnn"},"content":"            }","lastModifiedDate":"2024-02-08"},{"lineNumber":39,"author":{"gitId":"youdonnnn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":40,"author":{"gitId":"youdonnnn"},"content":"            System.err.println(\"Error! \" + e.getMessage());","lastModifiedDate":"2024-02-08"},{"lineNumber":41,"author":{"gitId":"youdonnnn"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":42,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":43,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":44,"author":{"gitId":"youdonnnn"},"content":"    public ArrayList\u003cTask\u003e loadData() {","lastModifiedDate":"2024-02-08"},{"lineNumber":45,"author":{"gitId":"youdonnnn"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-08"},{"lineNumber":46,"author":{"gitId":"youdonnnn"},"content":"        try {","lastModifiedDate":"2024-02-08"},{"lineNumber":47,"author":{"gitId":"youdonnnn"},"content":"            if (saveFile.length() \u003e 0) {","lastModifiedDate":"2024-02-08"},{"lineNumber":48,"author":{"gitId":"youdonnnn"},"content":"                Scanner scanner \u003d new Scanner(saveFile);","lastModifiedDate":"2024-02-08"},{"lineNumber":49,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":50,"author":{"gitId":"youdonnnn"},"content":"                while (scanner.hasNextLine()) {","lastModifiedDate":"2024-02-08"},{"lineNumber":51,"author":{"gitId":"youdonnnn"},"content":"                    String data \u003d scanner.nextLine();","lastModifiedDate":"2024-02-08"},{"lineNumber":52,"author":{"gitId":"youdonnnn"},"content":"                    // identify task type","lastModifiedDate":"2024-02-08"},{"lineNumber":53,"author":{"gitId":"youdonnnn"},"content":"                    String taskType \u003d data.substring(1, 2);","lastModifiedDate":"2024-02-08"},{"lineNumber":54,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":55,"author":{"gitId":"youdonnnn"},"content":"                    if (taskType.equals(\"T\")) {","lastModifiedDate":"2024-02-08"},{"lineNumber":56,"author":{"gitId":"youdonnnn"},"content":"                        // identify task description","lastModifiedDate":"2024-02-08"},{"lineNumber":57,"author":{"gitId":"youdonnnn"},"content":"                        int startIndex \u003d data.indexOf(\"[\") + 7;","lastModifiedDate":"2024-02-08"},{"lineNumber":58,"author":{"gitId":"youdonnnn"},"content":"                        String description \u003d data.substring(startIndex);","lastModifiedDate":"2024-02-08"},{"lineNumber":59,"author":{"gitId":"youdonnnn"},"content":"                        taskList.add(new Todo(description));","lastModifiedDate":"2024-02-08"},{"lineNumber":60,"author":{"gitId":"youdonnnn"},"content":"                    }","lastModifiedDate":"2024-02-08"},{"lineNumber":61,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":62,"author":{"gitId":"youdonnnn"},"content":"                    if (taskType.equals(\"D\")) {","lastModifiedDate":"2024-02-08"},{"lineNumber":63,"author":{"gitId":"youdonnnn"},"content":"                        // identify task description","lastModifiedDate":"2024-02-08"},{"lineNumber":64,"author":{"gitId":"youdonnnn"},"content":"                        int startIndex \u003d data.indexOf(\"[\") + 7;","lastModifiedDate":"2024-02-08"},{"lineNumber":65,"author":{"gitId":"youdonnnn"},"content":"                        int endIndex \u003d data.indexOf(\" (by:\");","lastModifiedDate":"2024-02-08"},{"lineNumber":66,"author":{"gitId":"youdonnnn"},"content":"                        String description \u003d data.substring(startIndex, endIndex).trim();","lastModifiedDate":"2024-02-08"},{"lineNumber":67,"author":{"gitId":"youdonnnn"},"content":"                        // identify task deadline","lastModifiedDate":"2024-02-08"},{"lineNumber":68,"author":{"gitId":"youdonnnn"},"content":"                        startIndex \u003d data.indexOf(\"(by: \") + 5;","lastModifiedDate":"2024-02-08"},{"lineNumber":69,"author":{"gitId":"youdonnnn"},"content":"                        endIndex \u003d data.indexOf(\")\", startIndex);","lastModifiedDate":"2024-02-08"},{"lineNumber":70,"author":{"gitId":"youdonnnn"},"content":"                        String deadline \u003d data.substring(startIndex, endIndex);","lastModifiedDate":"2024-02-08"},{"lineNumber":71,"author":{"gitId":"youdonnnn"},"content":"                        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2024-02-08"},{"lineNumber":72,"author":{"gitId":"youdonnnn"},"content":"                        LocalDateTime deadlineDateTime \u003d LocalDateTime.parse(deadline, formatter);","lastModifiedDate":"2024-02-08"},{"lineNumber":73,"author":{"gitId":"youdonnnn"},"content":"                        taskList.add(new Deadline(description, deadlineDateTime));","lastModifiedDate":"2024-02-08"},{"lineNumber":74,"author":{"gitId":"youdonnnn"},"content":"                    }","lastModifiedDate":"2024-02-08"},{"lineNumber":75,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":76,"author":{"gitId":"youdonnnn"},"content":"                    if (taskType.equals(\"E\")) {","lastModifiedDate":"2024-02-08"},{"lineNumber":77,"author":{"gitId":"youdonnnn"},"content":"                        // identify task description","lastModifiedDate":"2024-02-08"},{"lineNumber":78,"author":{"gitId":"youdonnnn"},"content":"                        int startIndex \u003d data.indexOf(\"[\") + 7;","lastModifiedDate":"2024-02-08"},{"lineNumber":79,"author":{"gitId":"youdonnnn"},"content":"                        int endIndex \u003d data.indexOf(\" (from:\");","lastModifiedDate":"2024-02-08"},{"lineNumber":80,"author":{"gitId":"youdonnnn"},"content":"                        String description \u003d data.substring(startIndex, endIndex);","lastModifiedDate":"2024-02-08"},{"lineNumber":81,"author":{"gitId":"youdonnnn"},"content":"                        // identify task start time","lastModifiedDate":"2024-02-08"},{"lineNumber":82,"author":{"gitId":"youdonnnn"},"content":"                        startIndex \u003d data.indexOf(\"from: \") + 6;","lastModifiedDate":"2024-02-08"},{"lineNumber":83,"author":{"gitId":"youdonnnn"},"content":"                        endIndex \u003d data.indexOf(\" to:\", startIndex);","lastModifiedDate":"2024-02-08"},{"lineNumber":84,"author":{"gitId":"youdonnnn"},"content":"                        String start \u003d data.substring(startIndex, endIndex);","lastModifiedDate":"2024-02-08"},{"lineNumber":85,"author":{"gitId":"youdonnnn"},"content":"                        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2024-02-08"},{"lineNumber":86,"author":{"gitId":"youdonnnn"},"content":"                        LocalDateTime startDateTime \u003d LocalDateTime.parse(start, formatter);","lastModifiedDate":"2024-02-08"},{"lineNumber":87,"author":{"gitId":"youdonnnn"},"content":"                        // identify task end time","lastModifiedDate":"2024-02-08"},{"lineNumber":88,"author":{"gitId":"youdonnnn"},"content":"                        startIndex \u003d data.indexOf(\" to:\") + 5;","lastModifiedDate":"2024-02-09"},{"lineNumber":89,"author":{"gitId":"youdonnnn"},"content":"                        endIndex \u003d data.indexOf(\")\", startIndex);","lastModifiedDate":"2024-02-08"},{"lineNumber":90,"author":{"gitId":"youdonnnn"},"content":"                        String end \u003d data.substring(startIndex, endIndex);","lastModifiedDate":"2024-02-08"},{"lineNumber":91,"author":{"gitId":"youdonnnn"},"content":"                        LocalDateTime endDateTime \u003d LocalDateTime.parse(end, formatter);","lastModifiedDate":"2024-02-08"},{"lineNumber":92,"author":{"gitId":"youdonnnn"},"content":"                        taskList.add(new Event(description, startDateTime, endDateTime));","lastModifiedDate":"2024-02-08"},{"lineNumber":93,"author":{"gitId":"youdonnnn"},"content":"                    }","lastModifiedDate":"2024-02-08"},{"lineNumber":94,"author":{"gitId":"youdonnnn"},"content":"                }","lastModifiedDate":"2024-02-08"},{"lineNumber":95,"author":{"gitId":"youdonnnn"},"content":"                System.out.println(\"Save File loaded!\");","lastModifiedDate":"2024-02-08"},{"lineNumber":96,"author":{"gitId":"youdonnnn"},"content":"            } else {","lastModifiedDate":"2024-02-08"},{"lineNumber":97,"author":{"gitId":"youdonnnn"},"content":"                System.out.println(\"Save File is empty :(\");","lastModifiedDate":"2024-02-08"},{"lineNumber":98,"author":{"gitId":"youdonnnn"},"content":"            }","lastModifiedDate":"2024-02-08"},{"lineNumber":99,"author":{"gitId":"youdonnnn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":100,"author":{"gitId":"youdonnnn"},"content":"            System.out.println(\"Error!\" + e.getMessage());","lastModifiedDate":"2024-02-08"},{"lineNumber":101,"author":{"gitId":"youdonnnn"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":102,"author":{"gitId":"youdonnnn"},"content":"        return taskList;","lastModifiedDate":"2024-02-08"},{"lineNumber":103,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":104,"author":{"gitId":"youdonnnn"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"youdonnnn":104}},{"path":"src/main/java/youdon/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"youdonnnn"},"content":"package youdon;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"youdonnnn"},"content":"public class Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"youdonnnn"},"content":"    protected String description;","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"youdonnnn"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"youdonnnn"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"youdonnnn"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"youdonnnn"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"youdonnnn"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"youdonnnn"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"youdonnnn"},"content":"    public String toString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"youdonnnn"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"youdonnnn"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"youdonnnn":19}},{"path":"src/main/java/youdon/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"youdonnnn"},"content":"package youdon;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"youdonnnn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"youdonnnn"},"content":"public class TaskList {","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"youdonnnn"},"content":"    protected ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"youdonnnn"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"youdonnnn"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"youdonnnn"},"content":"    public int size() {","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"youdonnnn"},"content":"        return taskList.size();","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"youdonnnn"},"content":"    public Task get(int i) {","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"youdonnnn"},"content":"        return taskList.get(i);","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"youdonnnn"},"content":"    public void remove(int i) {","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"youdonnnn"},"content":"        taskList.remove(i);","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"youdonnnn"},"content":"    public void add(Task task) {","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"youdonnnn"},"content":"        taskList.add(task);","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"youdonnnn"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"youdonnnn":28}},{"path":"src/main/java/youdon/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"youdonnnn"},"content":"package youdon;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"youdonnnn"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"youdonnnn"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"youdonnnn"},"content":"        super(description);","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"youdonnnn"},"content":"    public String getTypeIcon() {","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"youdonnnn"},"content":"        return \"T\";","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"youdonnnn"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"youdonnnn"},"content":"    public String toString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"youdonnnn"},"content":"        return \"[\" + this.getTypeIcon() + \"][\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"youdonnnn"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"youdonnnn":16}},{"path":"src/main/java/youdon/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"youdonnnn"},"content":"package youdon;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"youdonnnn"},"content":"public class Ui {","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"youdonnnn"},"content":"    private final String DIVIDER_LINE \u003d \"----------------------------------------------------------------\";","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"youdonnnn"},"content":"    public Ui() {","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"youdonnnn"},"content":"    public void printWelcomeMsg() {","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"youdonnnn"},"content":"        System.out.println(DIVIDER_LINE);","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"youdonnnn"},"content":"        System.out.println(\"Hello! I\u0027m Youdon!\\nWhat can I do for you?\\n\");","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"youdonnnn"},"content":"        System.out.println(DIVIDER_LINE);","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"youdonnnn"},"content":"    public void printByeMsg() {","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"youdonnnn"},"content":"        System.out.println(DIVIDER_LINE);","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"youdonnnn"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"youdonnnn"},"content":"        System.out.println(DIVIDER_LINE);","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"youdonnnn"},"content":"    public void printErrorMsg(String message) {","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"youdonnnn"},"content":"        System.out.println(DIVIDER_LINE);","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"youdonnnn"},"content":"        System.out.println(\"Oh no!\" + message);","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"youdonnnn"},"content":"        System.out.println(DIVIDER_LINE);","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"youdonnnn"},"content":"    public void printYoudonErrorMsg(String message) {","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"youdonnnn"},"content":"        System.out.println(DIVIDER_LINE);","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"youdonnnn"},"content":"        System.out.println(message);","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"youdonnnn"},"content":"        System.out.println(DIVIDER_LINE);","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"youdonnnn"},"content":"    public void printTaskList(TaskList taskList) {","lastModifiedDate":"2024-02-08"},{"lineNumber":35,"author":{"gitId":"youdonnnn"},"content":"        System.out.println(DIVIDER_LINE);","lastModifiedDate":"2024-02-08"},{"lineNumber":36,"author":{"gitId":"youdonnnn"},"content":"        System.out.println(\"Here are your tasks:\");","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"youdonnnn"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"youdonnnn"},"content":"            System.out.println((i + 1) + \". \" + taskList.get(i).toString());","lastModifiedDate":"2024-02-08"},{"lineNumber":39,"author":{"gitId":"youdonnnn"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":40,"author":{"gitId":"youdonnnn"},"content":"        System.out.println(DIVIDER_LINE);","lastModifiedDate":"2024-02-08"},{"lineNumber":41,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":42,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":43,"author":{"gitId":"youdonnnn"},"content":"    public void printMarkMsg(TaskList taskList, int taskNumber) {","lastModifiedDate":"2024-02-08"},{"lineNumber":44,"author":{"gitId":"youdonnnn"},"content":"        System.out.println(DIVIDER_LINE);","lastModifiedDate":"2024-02-08"},{"lineNumber":45,"author":{"gitId":"youdonnnn"},"content":"        System.out.println(\"Nicely done! The task has been marked as done:\");","lastModifiedDate":"2024-02-08"},{"lineNumber":46,"author":{"gitId":"youdonnnn"},"content":"        System.out.println(\"  \" + taskList.get(taskNumber - 1).toString());","lastModifiedDate":"2024-02-08"},{"lineNumber":47,"author":{"gitId":"youdonnnn"},"content":"        System.out.println(DIVIDER_LINE);","lastModifiedDate":"2024-02-08"},{"lineNumber":48,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":49,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":50,"author":{"gitId":"youdonnnn"},"content":"    public void printUnmarkMsg(TaskList taskList, int taskNumber) {","lastModifiedDate":"2024-02-08"},{"lineNumber":51,"author":{"gitId":"youdonnnn"},"content":"        System.out.println(DIVIDER_LINE);","lastModifiedDate":"2024-02-08"},{"lineNumber":52,"author":{"gitId":"youdonnnn"},"content":"        System.out.println(\"Okies! The task has been marked as undone:\");","lastModifiedDate":"2024-02-08"},{"lineNumber":53,"author":{"gitId":"youdonnnn"},"content":"        System.out.println(\"  \" + taskList.get(taskNumber - 1).toString());","lastModifiedDate":"2024-02-08"},{"lineNumber":54,"author":{"gitId":"youdonnnn"},"content":"        System.out.println(DIVIDER_LINE);","lastModifiedDate":"2024-02-08"},{"lineNumber":55,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":56,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":57,"author":{"gitId":"youdonnnn"},"content":"    public void printDeleteMsg(TaskList taskList, int taskNumber) {","lastModifiedDate":"2024-02-08"},{"lineNumber":58,"author":{"gitId":"youdonnnn"},"content":"        System.out.println(DIVIDER_LINE);","lastModifiedDate":"2024-02-08"},{"lineNumber":59,"author":{"gitId":"youdonnnn"},"content":"        System.out.println(\"Alright! The task has been deleted:\");","lastModifiedDate":"2024-02-08"},{"lineNumber":60,"author":{"gitId":"youdonnnn"},"content":"        System.out.println(\"  \" + taskList.get(taskNumber - 1).toString());","lastModifiedDate":"2024-02-08"},{"lineNumber":61,"author":{"gitId":"youdonnnn"},"content":"        System.out.println(DIVIDER_LINE);","lastModifiedDate":"2024-02-08"},{"lineNumber":62,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":63,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":64,"author":{"gitId":"youdonnnn"},"content":"    public void printTaskAdded(TaskList taskList) {","lastModifiedDate":"2024-02-08"},{"lineNumber":65,"author":{"gitId":"youdonnnn"},"content":"        // index of most recently added item","lastModifiedDate":"2024-02-08"},{"lineNumber":66,"author":{"gitId":"youdonnnn"},"content":"        int index \u003d taskList.size() - 1;","lastModifiedDate":"2024-02-08"},{"lineNumber":67,"author":{"gitId":"youdonnnn"},"content":"        System.out.println(DIVIDER_LINE);","lastModifiedDate":"2024-02-08"},{"lineNumber":68,"author":{"gitId":"youdonnnn"},"content":"        System.out.println(\"Alright! Task added:\\n  \" + taskList.get(index).toString());","lastModifiedDate":"2024-02-08"},{"lineNumber":69,"author":{"gitId":"youdonnnn"},"content":"        System.out.println(\"You now have \" + (taskList.size()) + \" task(s) in the list.\");","lastModifiedDate":"2024-02-08"},{"lineNumber":70,"author":{"gitId":"youdonnnn"},"content":"        System.out.println(DIVIDER_LINE);","lastModifiedDate":"2024-02-08"},{"lineNumber":71,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":72,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":73,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":74,"author":{"gitId":"youdonnnn"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"youdonnnn":74}},{"path":"src/main/java/youdon/Youdon.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"youdonnnn"},"content":"package youdon;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"youdonnnn"},"content":"public class Youdon {","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"youdonnnn"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"youdonnnn"},"content":"        // initialise ui and storage (filepath \u003d \"./data/save.txt\")","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"youdonnnn"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"youdonnnn"},"content":"        Storage storage \u003d new Storage(\"./data/save.txt\");","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"youdonnnn"},"content":"        TaskList taskList \u003d  new TaskList(storage.loadData());","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"youdonnnn"},"content":"        Parser parser \u003d new Parser(ui, taskList, storage);","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"youdonnnn"},"content":"        // chatbot welcome message","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"youdonnnn"},"content":"        ui.printWelcomeMsg();","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"youdonnnn"},"content":"        // parse input","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"youdonnnn"},"content":"        parser.parse();","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"youdonnnn"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"youdonnnn":19}},{"path":"src/main/java/youdon/YoudonException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"youdonnnn"},"content":"package youdon;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"youdonnnn"},"content":"public class YoudonException extends Throwable {","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"youdonnnn"},"content":"    public static class EmptyDescException extends Exception {","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"youdonnnn"},"content":"        public EmptyDescException(String errorMessage) {","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"youdonnnn"},"content":"            super(errorMessage);","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"youdonnnn"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"youdonnnn"},"content":"        public static void detectMissingDesc(String input) throws EmptyDescException {","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"youdonnnn"},"content":"            if ((input.equals(\"todo\")) || (input.equals(\"deadline\")) || (input.equals(\"event\"))) {","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"youdonnnn"},"content":"                throw new YoudonException.EmptyDescException(\"Hey! The task description is empty!\");","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"youdonnnn"},"content":"            }","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"youdonnnn"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"youdonnnn"},"content":"    public static class InvalidCommandException extends Exception {","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"youdonnnn"},"content":"        public InvalidCommandException(String errorMessage) {","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"youdonnnn"},"content":"            super(errorMessage);","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"youdonnnn"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"youdonnnn"},"content":"        public static void detectInvalidCommand(String input) throws InvalidCommandException {","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"youdonnnn"},"content":"            for (validCommands command: validCommands.values()) {","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"youdonnnn"},"content":"                if (input.contains(command.getCommand())) {","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"youdonnnn"},"content":"                    return;","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"youdonnnn"},"content":"                }","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"youdonnnn"},"content":"            }","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"youdonnnn"},"content":"            throw new YoudonException.InvalidCommandException(\"Sorry, I do not recognise that command.\");","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"youdonnnn"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"youdonnnn"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"youdonnnn":30}},{"path":"src/main/java/youdon/validCommands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"youdonnnn"},"content":"package youdon;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"youdonnnn"},"content":"public enum validCommands {","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"youdonnnn"},"content":"    TODO(\"todo\"),","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"youdonnnn"},"content":"    DEADLINE(\"deadline\"),","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"youdonnnn"},"content":"    EVENT(\"event\"),","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"youdonnnn"},"content":"    MARK(\"mark\"),","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"youdonnnn"},"content":"    UNMARK(\"unmark\"),","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"youdonnnn"},"content":"    LIST(\"list\"),","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"youdonnnn"},"content":"    BYE(\"bye\"),","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"youdonnnn"},"content":"    DELETE(\"delete\");","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"youdonnnn"},"content":"    private final String command;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"youdonnnn"},"content":"    validCommands(String command) {","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"youdonnnn"},"content":"        this.command \u003d command;","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"youdonnnn"},"content":"    public String getCommand() {","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"youdonnnn"},"content":"        return this.command;","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"youdonnnn"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"youdonnnn":22}},{"path":"src/test/java/youdon/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"youdonnnn"},"content":"package youdon;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"youdonnnn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"youdonnnn"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"youdonnnn"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"youdonnnn"},"content":"import java.io.File;","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"youdonnnn"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"youdonnnn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"youdonnnn"},"content":"public class DeadlineTest {","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"youdonnnn"},"content":"    @Test","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"youdonnnn"},"content":"    // no save file, add first task","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"youdonnnn"},"content":"    public void testValidDeadline(){","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"youdonnnn"},"content":"        // delete save file","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"youdonnnn"},"content":"        File fileToDelete \u003d new File(\"./data/save.txt\");","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"youdonnnn"},"content":"        fileToDelete.delete();","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"youdonnnn"},"content":"        // set input in input stream","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"youdonnnn"},"content":"        ByteArrayInputStream inputStream \u003d new ByteArrayInputStream(\"deadline return book /by 2/12/2019 1800\".getBytes());","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"youdonnnn"},"content":"        System.setIn(inputStream);","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"youdonnnn"},"content":"        // capture output in output stream","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"youdonnnn"},"content":"        ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"youdonnnn"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"youdonnnn"},"content":"        // run main()","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"youdonnnn"},"content":"        Youdon.main(null);","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"youdonnnn"},"content":"        // retrieve output and replace all system line separators with \\n","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"youdonnnn"},"content":"        String actualOutput \u003d outputStream.toString().replaceAll(System.lineSeparator(), \"\\n\");","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"youdonnnn"},"content":"        // reset input and output back to System","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"youdonnnn"},"content":"        System.setIn(System.in);","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"youdonnnn"},"content":"        System.setOut(System.out);","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"youdonnnn"},"content":"        // expected output","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"youdonnnn"},"content":"        String expectedOutput \u003d \"Save File created successfully!\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"youdonnnn"},"content":"                + \"Save File is empty :(\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"youdonnnn"},"content":"                + \"----------------------------------------------------------------\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"youdonnnn"},"content":"                + \"Hello! I\u0027m Youdon!\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"youdonnnn"},"content":"                + \"What can I do for you?\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"youdonnnn"},"content":"                + \"\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"youdonnnn"},"content":"                + \"----------------------------------------------------------------\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":46,"author":{"gitId":"youdonnnn"},"content":"                + \"----------------------------------------------------------------\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"youdonnnn"},"content":"                + \"Alright! Task added:\\n  \"","lastModifiedDate":"2024-02-09"},{"lineNumber":48,"author":{"gitId":"youdonnnn"},"content":"                + \"[D][ ] return book (by: Dec 02 2019 18:00)\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":49,"author":{"gitId":"youdonnnn"},"content":"                + \"You now have 1 task(s) in the list.\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"youdonnnn"},"content":"                + \"----------------------------------------------------------------\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":51,"author":{"gitId":"youdonnnn"},"content":"                + \"Tasklist saved!\";","lastModifiedDate":"2024-02-09"},{"lineNumber":52,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":53,"author":{"gitId":"youdonnnn"},"content":"        // assert actual and expected output","lastModifiedDate":"2024-02-09"},{"lineNumber":54,"author":{"gitId":"youdonnnn"},"content":"        assertEquals(expectedOutput.trim(), actualOutput.trim());","lastModifiedDate":"2024-02-09"},{"lineNumber":55,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":56,"author":{"gitId":"youdonnnn"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"youdonnnn":56}},{"path":"src/test/java/youdon/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"youdonnnn"},"content":"package youdon;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"youdonnnn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"youdonnnn"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"youdonnnn"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"youdonnnn"},"content":"import java.io.File;","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"youdonnnn"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"youdonnnn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"youdonnnn"},"content":"public class EventTest {","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"youdonnnn"},"content":"    @Test","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"youdonnnn"},"content":"    // no save file, add first task","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"youdonnnn"},"content":"    public void testValidEvent(){","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"youdonnnn"},"content":"        // delete save file","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"youdonnnn"},"content":"        File fileToDelete \u003d new File(\"./data/save.txt\");","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"youdonnnn"},"content":"        fileToDelete.delete();","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"youdonnnn"},"content":"        // set input in input stream","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"youdonnnn"},"content":"        ByteArrayInputStream inputStream \u003d new ByteArrayInputStream(\"event project meeting /from 5/6/2020 1900 /to 7/7/2021 1900\".getBytes());","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"youdonnnn"},"content":"        System.setIn(inputStream);","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"youdonnnn"},"content":"        // capture output in output stream","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"youdonnnn"},"content":"        ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"youdonnnn"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"youdonnnn"},"content":"        // run main()","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"youdonnnn"},"content":"        Youdon.main(null);","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"youdonnnn"},"content":"        // retrieve output and replace all system line separators with \\n","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"youdonnnn"},"content":"        String actualOutput \u003d outputStream.toString().replaceAll(System.lineSeparator(), \"\\n\");","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"youdonnnn"},"content":"        // reset input and output back to System","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"youdonnnn"},"content":"        System.setIn(System.in);","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"youdonnnn"},"content":"        System.setOut(System.out);","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"youdonnnn"},"content":"        // expected output","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"youdonnnn"},"content":"        String expectedOutput \u003d \"Save File created successfully!\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"youdonnnn"},"content":"                + \"Save File is empty :(\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"youdonnnn"},"content":"                + \"----------------------------------------------------------------\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"youdonnnn"},"content":"                + \"Hello! I\u0027m Youdon!\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"youdonnnn"},"content":"                + \"What can I do for you?\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"youdonnnn"},"content":"                + \"\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"youdonnnn"},"content":"                + \"----------------------------------------------------------------\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":46,"author":{"gitId":"youdonnnn"},"content":"                + \"----------------------------------------------------------------\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"youdonnnn"},"content":"                + \"Alright! Task added:\\n  \"","lastModifiedDate":"2024-02-09"},{"lineNumber":48,"author":{"gitId":"youdonnnn"},"content":"                + \"[E][ ] project meeting (from: Jun 05 2020 19:00 to: Jul 07 2021 19:00)\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":49,"author":{"gitId":"youdonnnn"},"content":"                + \"You now have 1 task(s) in the list.\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"youdonnnn"},"content":"                + \"----------------------------------------------------------------\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":51,"author":{"gitId":"youdonnnn"},"content":"                + \"Tasklist saved!\";","lastModifiedDate":"2024-02-09"},{"lineNumber":52,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":53,"author":{"gitId":"youdonnnn"},"content":"        // assert actual and expected output","lastModifiedDate":"2024-02-09"},{"lineNumber":54,"author":{"gitId":"youdonnnn"},"content":"        assertEquals(expectedOutput.trim(), actualOutput.trim());","lastModifiedDate":"2024-02-09"},{"lineNumber":55,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":56,"author":{"gitId":"youdonnnn"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"youdonnnn":56}},{"path":"src/test/java/youdon/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"youdonnnn"},"content":"package youdon;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"youdonnnn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"youdonnnn"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"youdonnnn"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"youdonnnn"},"content":"import java.io.File;","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"youdonnnn"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"youdonnnn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"youdonnnn"},"content":"public class TodoTest {","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"youdonnnn"},"content":"    @Test","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"youdonnnn"},"content":"    // no save file, add first task","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"youdonnnn"},"content":"    public void testValidTodo(){","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"youdonnnn"},"content":"        // delete save file","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"youdonnnn"},"content":"        File fileToDelete \u003d new File(\"./data/save.txt\");","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"youdonnnn"},"content":"        fileToDelete.delete();","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"youdonnnn"},"content":"        // set input in input stream","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"youdonnnn"},"content":"        ByteArrayInputStream inputStream \u003d new ByteArrayInputStream(\"todo read book\".getBytes());","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"youdonnnn"},"content":"        System.setIn(inputStream);","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"youdonnnn"},"content":"        // capture output in output stream","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"youdonnnn"},"content":"        ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"youdonnnn"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"youdonnnn"},"content":"        // run main()","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"youdonnnn"},"content":"        Youdon.main(null);","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"youdonnnn"},"content":"        // retrieve output and replace all system line separators with \\n","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"youdonnnn"},"content":"        String actualOutput \u003d outputStream.toString().replaceAll(System.lineSeparator(), \"\\n\");","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"youdonnnn"},"content":"        // reset input and output back to System","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"youdonnnn"},"content":"        System.setIn(System.in);","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"youdonnnn"},"content":"        System.setOut(System.out);","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"youdonnnn"},"content":"        // expected output","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"youdonnnn"},"content":"        String expectedOutput \u003d \"Save File created successfully!\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"youdonnnn"},"content":"                + \"Save File is empty :(\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"youdonnnn"},"content":"                + \"----------------------------------------------------------------\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"youdonnnn"},"content":"                + \"Hello! I\u0027m Youdon!\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"youdonnnn"},"content":"                + \"What can I do for you?\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"youdonnnn"},"content":"                + \"\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"youdonnnn"},"content":"                + \"----------------------------------------------------------------\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":46,"author":{"gitId":"youdonnnn"},"content":"                + \"----------------------------------------------------------------\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"youdonnnn"},"content":"                + \"Alright! Task added:\\n  \"","lastModifiedDate":"2024-02-09"},{"lineNumber":48,"author":{"gitId":"youdonnnn"},"content":"                + \"[T][ ] read book\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":49,"author":{"gitId":"youdonnnn"},"content":"                + \"You now have 1 task(s) in the list.\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"youdonnnn"},"content":"                + \"----------------------------------------------------------------\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":51,"author":{"gitId":"youdonnnn"},"content":"                + \"Tasklist saved!\";","lastModifiedDate":"2024-02-09"},{"lineNumber":52,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":53,"author":{"gitId":"youdonnnn"},"content":"        // assert actual and expected output","lastModifiedDate":"2024-02-09"},{"lineNumber":54,"author":{"gitId":"youdonnnn"},"content":"        assertEquals(expectedOutput.trim(), actualOutput.trim());","lastModifiedDate":"2024-02-09"},{"lineNumber":55,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":56,"author":{"gitId":"youdonnnn"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"youdonnnn":56}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"youdonnnn"},"content":"todo borrow book","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"youdonnnn"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"youdonnnn"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"youdonnnn"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"youdonnnn"},"content":"mark 2","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"youdonnnn"},"content":"list","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"youdonnnn"},"content":"delete 2","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"youdonnnn"},"content":"list","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"youdonnnn"},"content":"deadline return book /by 2/12/2019 1800","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"youdonnnn"},"content":"event project meeting /from 5/6/2020 1900 /to 7/7/2021 1900","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"youdonnnn"},"content":"bye","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"youdonnnn":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"youdonnnn"},"content":"java -classpath ..\\bin Youdon \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"youdonnnn":1,"-":20}}]
