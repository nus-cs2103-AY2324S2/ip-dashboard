[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"agreatdayy"},"content":"# chrisPBacon project template","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"agreatdayy"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _chrisPBacon_. Given below are instructions on how to use it.","lastModifiedDate":"2024-02-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"agreatdayy"},"content":"3. After that, locate the `src/main/java/chrisPBacon.java` file, right-click it, and choose `Run chrisPBacon.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-02-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"agreatdayy"},"content":"                                -------,","lastModifiedDate":"2024-02-18"},{"lineNumber":19,"author":{"gitId":"agreatdayy"},"content":"                               |   --  |","lastModifiedDate":"2024-02-18"},{"lineNumber":20,"author":{"gitId":"agreatdayy"},"content":"                               |  |  | |","lastModifiedDate":"2024-02-18"},{"lineNumber":21,"author":{"gitId":"agreatdayy"},"content":"    ---- -   -  ---  ---  ---  |   --  |","lastModifiedDate":"2024-02-18"},{"lineNumber":22,"author":{"gitId":"agreatdayy"},"content":"   |     |   | |   |  |  |   | |  ,----\u0027","lastModifiedDate":"2024-02-18"},{"lineNumber":23,"author":{"gitId":"agreatdayy"},"content":"   |     |---| |---   |   `-_  |  |     ","lastModifiedDate":"2024-02-18"},{"lineNumber":24,"author":{"gitId":"agreatdayy"},"content":"   |     |   | | \\    |  |   | |  |     ","lastModifiedDate":"2024-02-18"},{"lineNumber":25,"author":{"gitId":"agreatdayy"},"content":"    ---- -   - -  -  ---  ---   --      ","lastModifiedDate":"2024-02-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"agreatdayy":11,"-":15}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"agreatdayy"},"content":"    mainClassName \u003d \"chrisPBacon.Main\"","lastModifiedDate":"2024-02-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"agreatdayy"},"content":"    archiveFileName \u003d \u0027chrisPBacon.jar\u0027","lastModifiedDate":"2024-02-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"agreatdayy":2,"-":38}},{"path":"data/list.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"agreatdayy"},"content":"[x][T] hh","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"agreatdayy"},"content":"[ ][D] bbt (by: Nov 10 2021)","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"agreatdayy"},"content":"[x][E] buy bbt (from: tdy to: tmr)","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"agreatdayy":3}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"agreatdayy"},"content":"# seedu.chrisPBacon.seedu.chrisPBacon User Guide","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Update the title above to match the actual product name","lastModifiedDate":"2024-01-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-01-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"// Product intro goes here","lastModifiedDate":"2024-01-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-01-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-01-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-01-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2024-01-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Feature ABC","lastModifiedDate":"2024-01-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Feature XYZ","lastModifiedDate":"2024-01-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07"}],"authorContributionMap":{"agreatdayy":1,"-":29}},{"path":"src/main/java/chrisPBacon/ChrisPBacon.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"agreatdayy"},"content":"package chrisPBacon;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"agreatdayy"},"content":"import task.TaskList;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"agreatdayy"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"agreatdayy"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"agreatdayy"},"content":" *  This class contains the main method for the chatbot, ChrisP Bacon.","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"agreatdayy"},"content":" *  ChrisP Bacon is a chatbot that manages the user\u0027s list of tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"agreatdayy"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"agreatdayy"},"content":"public class ChrisPBacon {","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"agreatdayy"},"content":"    private final Storage storage;","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"agreatdayy"},"content":"    private final Ui ui;","lastModifiedDate":"2024-02-18"},{"lineNumber":14,"author":{"gitId":"agreatdayy"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"agreatdayy"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"agreatdayy"},"content":"     * Initialises new ui and storage objects, loads tasks into a new task list object.","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"agreatdayy"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"agreatdayy"},"content":"     * @param filePath of the saved task list","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"agreatdayy"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"agreatdayy"},"content":"    public ChrisPBacon(String filePath) {","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"agreatdayy"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-18"},{"lineNumber":23,"author":{"gitId":"agreatdayy"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"agreatdayy"},"content":"        try {","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"agreatdayy"},"content":"            this.tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"agreatdayy"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"agreatdayy"},"content":"            ui.printError(\"Oink! File not found :(\\n\");","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"agreatdayy"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2024-02-18"},{"lineNumber":29,"author":{"gitId":"agreatdayy"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"agreatdayy"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":31,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"agreatdayy"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":33,"author":{"gitId":"agreatdayy"},"content":"     * Runs the chatbot program.","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"agreatdayy"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"agreatdayy"},"content":"    public void run() {","lastModifiedDate":"2024-02-10"},{"lineNumber":36,"author":{"gitId":"agreatdayy"},"content":"        ui.printIntro();","lastModifiedDate":"2024-02-18"},{"lineNumber":37,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"agreatdayy"},"content":"        UserInput userInput \u003d new UserInput();","lastModifiedDate":"2024-02-18"},{"lineNumber":39,"author":{"gitId":"agreatdayy"},"content":"        while (!userInput.isInputBye()) {","lastModifiedDate":"2024-02-18"},{"lineNumber":40,"author":{"gitId":"agreatdayy"},"content":"            userInput.processInput(ui, this.tasks);","lastModifiedDate":"2024-02-18"},{"lineNumber":41,"author":{"gitId":"agreatdayy"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":42,"author":{"gitId":"agreatdayy"},"content":"        // if user entered \"bye\", save list and exit chatbot.","lastModifiedDate":"2024-02-18"},{"lineNumber":43,"author":{"gitId":"agreatdayy"},"content":"        ui.printBye();","lastModifiedDate":"2024-02-18"},{"lineNumber":44,"author":{"gitId":"agreatdayy"},"content":"        storage.save(this.tasks);","lastModifiedDate":"2024-02-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"agreatdayy":44,"-":2}},{"path":"src/main/java/chrisPBacon/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"agreatdayy"},"content":"package chrisPBacon;","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"agreatdayy"},"content":"public class Main {","lastModifiedDate":"2024-02-18"},{"lineNumber":4,"author":{"gitId":"agreatdayy"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":5,"author":{"gitId":"agreatdayy"},"content":"     * Initialises and run chris p bacon program.","lastModifiedDate":"2024-02-18"},{"lineNumber":6,"author":{"gitId":"agreatdayy"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":7,"author":{"gitId":"agreatdayy"},"content":"     * @param args arguments","lastModifiedDate":"2024-02-18"},{"lineNumber":8,"author":{"gitId":"agreatdayy"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":9,"author":{"gitId":"agreatdayy"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-18"},{"lineNumber":10,"author":{"gitId":"agreatdayy"},"content":"        new ChrisPBacon(\"data/list.txt\").run();","lastModifiedDate":"2024-02-18"},{"lineNumber":11,"author":{"gitId":"agreatdayy"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":12,"author":{"gitId":"agreatdayy"},"content":"}","lastModifiedDate":"2024-02-18"}],"authorContributionMap":{"agreatdayy":12}},{"path":"src/main/java/chrisPBacon/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"agreatdayy"},"content":"package chrisPBacon;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"agreatdayy"},"content":"import exceptions.ChrisPBaconException;","lastModifiedDate":"2024-02-18"},{"lineNumber":4,"author":{"gitId":"agreatdayy"},"content":"import exceptions.InvalidTaskNameException;","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"agreatdayy"},"content":"import task.Task;","lastModifiedDate":"2024-02-18"},{"lineNumber":6,"author":{"gitId":"agreatdayy"},"content":"import task.TaskList;","lastModifiedDate":"2024-02-18"},{"lineNumber":7,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"agreatdayy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-18"},{"lineNumber":9,"author":{"gitId":"agreatdayy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-18"},{"lineNumber":10,"author":{"gitId":"agreatdayy"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-18"},{"lineNumber":11,"author":{"gitId":"agreatdayy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-18"},{"lineNumber":12,"author":{"gitId":"agreatdayy"},"content":"import java.util.List;","lastModifiedDate":"2024-02-18"},{"lineNumber":13,"author":{"gitId":"agreatdayy"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-02-18"},{"lineNumber":14,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"agreatdayy"},"content":"/**","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"agreatdayy"},"content":" *  This class makes sense of the user\u0027s inputs.","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"agreatdayy"},"content":" */","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"agreatdayy"},"content":"public class Parser {","lastModifiedDate":"2024-02-18"},{"lineNumber":19,"author":{"gitId":"agreatdayy"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"agreatdayy"},"content":"     * Constructor for Parser.","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"agreatdayy"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":22,"author":{"gitId":"agreatdayy"},"content":"    public Parser() { }","lastModifiedDate":"2024-02-18"},{"lineNumber":23,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":24,"author":{"gitId":"agreatdayy"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":25,"author":{"gitId":"agreatdayy"},"content":"     * Parses user input into todo task description.","lastModifiedDate":"2024-02-18"},{"lineNumber":26,"author":{"gitId":"agreatdayy"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"agreatdayy"},"content":"     * @return task description","lastModifiedDate":"2024-02-18"},{"lineNumber":28,"author":{"gitId":"agreatdayy"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"agreatdayy"},"content":"    public String parseTodo(String userInput) throws InvalidTaskNameException {","lastModifiedDate":"2024-02-18"},{"lineNumber":30,"author":{"gitId":"agreatdayy"},"content":"        if (userInput.length() \u003c 6) {","lastModifiedDate":"2024-02-18"},{"lineNumber":31,"author":{"gitId":"agreatdayy"},"content":"            // If user did not input task name.","lastModifiedDate":"2024-02-18"},{"lineNumber":32,"author":{"gitId":"agreatdayy"},"content":"            throw new InvalidTaskNameException(\"Ooink oink! What\u0027s the name of your task?\\n\"","lastModifiedDate":"2024-02-18"},{"lineNumber":33,"author":{"gitId":"agreatdayy"},"content":"                    + \" \u003e\u003e todo ...\\n\");","lastModifiedDate":"2024-02-18"},{"lineNumber":34,"author":{"gitId":"agreatdayy"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":35,"author":{"gitId":"agreatdayy"},"content":"        return userInput.substring(5);","lastModifiedDate":"2024-02-18"},{"lineNumber":36,"author":{"gitId":"agreatdayy"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":37,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":38,"author":{"gitId":"agreatdayy"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":39,"author":{"gitId":"agreatdayy"},"content":"     * Parses user input into task name for deadline tasks.","lastModifiedDate":"2024-02-18"},{"lineNumber":40,"author":{"gitId":"agreatdayy"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":41,"author":{"gitId":"agreatdayy"},"content":"     * @return task name","lastModifiedDate":"2024-02-18"},{"lineNumber":42,"author":{"gitId":"agreatdayy"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":43,"author":{"gitId":"agreatdayy"},"content":"    public String parseDeadlineName(String userInput) throws InvalidTaskNameException {","lastModifiedDate":"2024-02-18"},{"lineNumber":44,"author":{"gitId":"agreatdayy"},"content":"        int len \u003d userInput.length();","lastModifiedDate":"2024-02-18"},{"lineNumber":45,"author":{"gitId":"agreatdayy"},"content":"        int idx \u003d userInput.indexOf(\"/by\");","lastModifiedDate":"2024-02-18"},{"lineNumber":46,"author":{"gitId":"agreatdayy"},"content":"        boolean isWrongInput \u003d len \u003c 10 || idx \u003c 0 || len \u003c idx + 4;","lastModifiedDate":"2024-02-18"},{"lineNumber":47,"author":{"gitId":"agreatdayy"},"content":"        if (isWrongInput) {","lastModifiedDate":"2024-02-18"},{"lineNumber":48,"author":{"gitId":"agreatdayy"},"content":"            // If user did not input correct task description.","lastModifiedDate":"2024-02-18"},{"lineNumber":49,"author":{"gitId":"agreatdayy"},"content":"            throw new InvalidTaskNameException(\"Ooink oink! Please describe your deadline \u003e.\u003c\\n\"","lastModifiedDate":"2024-02-18"},{"lineNumber":50,"author":{"gitId":"agreatdayy"},"content":"                    + \" \u003e\u003e deadline ... /by dd/MM/yyyy\\n\");","lastModifiedDate":"2024-02-18"},{"lineNumber":51,"author":{"gitId":"agreatdayy"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":52,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":53,"author":{"gitId":"agreatdayy"},"content":"        return userInput.substring(9, idx - 1);","lastModifiedDate":"2024-02-18"},{"lineNumber":54,"author":{"gitId":"agreatdayy"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":55,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":56,"author":{"gitId":"agreatdayy"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":57,"author":{"gitId":"agreatdayy"},"content":"     * Parses user input into a LocalDate for deadline tasks.","lastModifiedDate":"2024-02-18"},{"lineNumber":58,"author":{"gitId":"agreatdayy"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":59,"author":{"gitId":"agreatdayy"},"content":"     * @return task deadline","lastModifiedDate":"2024-02-18"},{"lineNumber":60,"author":{"gitId":"agreatdayy"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":61,"author":{"gitId":"agreatdayy"},"content":"    public LocalDate parseDeadlineDate(String userInput) throws DateTimeParseException {","lastModifiedDate":"2024-02-18"},{"lineNumber":62,"author":{"gitId":"agreatdayy"},"content":"        int idx \u003d userInput.indexOf(\"/by\");","lastModifiedDate":"2024-02-18"},{"lineNumber":63,"author":{"gitId":"agreatdayy"},"content":"        String date \u003d userInput.substring(idx + 4);","lastModifiedDate":"2024-02-18"},{"lineNumber":64,"author":{"gitId":"agreatdayy"},"content":"        return LocalDate.parse(date, DateTimeFormatter.ofPattern(\"d/MM/yyyy\"));","lastModifiedDate":"2024-02-18"},{"lineNumber":65,"author":{"gitId":"agreatdayy"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":66,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":67,"author":{"gitId":"agreatdayy"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":68,"author":{"gitId":"agreatdayy"},"content":"     * Parses user input into task name for event tasks.","lastModifiedDate":"2024-02-18"},{"lineNumber":69,"author":{"gitId":"agreatdayy"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":70,"author":{"gitId":"agreatdayy"},"content":"     * @return task name","lastModifiedDate":"2024-02-18"},{"lineNumber":71,"author":{"gitId":"agreatdayy"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":72,"author":{"gitId":"agreatdayy"},"content":"    public String[] parseEvent(String userInput) throws InvalidTaskNameException {","lastModifiedDate":"2024-02-18"},{"lineNumber":73,"author":{"gitId":"agreatdayy"},"content":"        // Name, event start, event end.","lastModifiedDate":"2024-02-18"},{"lineNumber":74,"author":{"gitId":"agreatdayy"},"content":"        String[] description \u003d new String[3];","lastModifiedDate":"2024-02-18"},{"lineNumber":75,"author":{"gitId":"agreatdayy"},"content":"        int len \u003d userInput.length();","lastModifiedDate":"2024-02-18"},{"lineNumber":76,"author":{"gitId":"agreatdayy"},"content":"        int fromIdx \u003d userInput.indexOf(\"/from\");","lastModifiedDate":"2024-02-18"},{"lineNumber":77,"author":{"gitId":"agreatdayy"},"content":"        int toIdx \u003d userInput.indexOf(\"/to\");","lastModifiedDate":"2024-02-18"},{"lineNumber":78,"author":{"gitId":"agreatdayy"},"content":"        boolean isWrongInput \u003d len \u003c 7 || fromIdx \u003c 0 || toIdx \u003c 0","lastModifiedDate":"2024-02-18"},{"lineNumber":79,"author":{"gitId":"agreatdayy"},"content":"                || len \u003c fromIdx + 6 || len \u003c toIdx + 4;","lastModifiedDate":"2024-02-18"},{"lineNumber":80,"author":{"gitId":"agreatdayy"},"content":"        if (isWrongInput) {","lastModifiedDate":"2024-02-18"},{"lineNumber":81,"author":{"gitId":"agreatdayy"},"content":"            // If user did not input task description.","lastModifiedDate":"2024-02-18"},{"lineNumber":82,"author":{"gitId":"agreatdayy"},"content":"            throw new InvalidTaskNameException(\"Ooink oink! Please describe your event \u003e.\u003c\\n\"","lastModifiedDate":"2024-02-18"},{"lineNumber":83,"author":{"gitId":"agreatdayy"},"content":"                    + \" \u003e\u003e event ... /from ... /to ...\\n\");","lastModifiedDate":"2024-02-18"},{"lineNumber":84,"author":{"gitId":"agreatdayy"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":85,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":86,"author":{"gitId":"agreatdayy"},"content":"        description[0] \u003d userInput.substring(6, fromIdx - 1);","lastModifiedDate":"2024-02-18"},{"lineNumber":87,"author":{"gitId":"agreatdayy"},"content":"        description[1] \u003d userInput.substring(fromIdx + 6, toIdx - 1);","lastModifiedDate":"2024-02-18"},{"lineNumber":88,"author":{"gitId":"agreatdayy"},"content":"        description[2] \u003d userInput.substring(toIdx + 4);","lastModifiedDate":"2024-02-18"},{"lineNumber":89,"author":{"gitId":"agreatdayy"},"content":"        return description;","lastModifiedDate":"2024-02-18"},{"lineNumber":90,"author":{"gitId":"agreatdayy"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":91,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":92,"author":{"gitId":"agreatdayy"},"content":"    public TaskList parseFind(String userInput, TaskList tasks) throws ChrisPBaconException {","lastModifiedDate":"2024-02-18"},{"lineNumber":93,"author":{"gitId":"agreatdayy"},"content":"        int len \u003d userInput.length();","lastModifiedDate":"2024-02-18"},{"lineNumber":94,"author":{"gitId":"agreatdayy"},"content":"        if (len \u003c 6) {","lastModifiedDate":"2024-02-18"},{"lineNumber":95,"author":{"gitId":"agreatdayy"},"content":"            throw new ChrisPBaconException(\"Oink Oink! Please input what you want to find :)\\n\"","lastModifiedDate":"2024-02-18"},{"lineNumber":96,"author":{"gitId":"agreatdayy"},"content":"                    + \" \u003e\u003e find \u003ctask description\u003e\\n\");","lastModifiedDate":"2024-02-18"},{"lineNumber":97,"author":{"gitId":"agreatdayy"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":98,"author":{"gitId":"agreatdayy"},"content":"        String keyword \u003d userInput.substring(5);","lastModifiedDate":"2024-02-18"},{"lineNumber":99,"author":{"gitId":"agreatdayy"},"content":"        List\u003cTask\u003e matchingTasks \u003d tasks.getTaskList().stream()","lastModifiedDate":"2024-02-18"},{"lineNumber":100,"author":{"gitId":"agreatdayy"},"content":"                .filter(task -\u003e task.isMatchKeyword(keyword))","lastModifiedDate":"2024-02-18"},{"lineNumber":101,"author":{"gitId":"agreatdayy"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2024-02-18"},{"lineNumber":102,"author":{"gitId":"agreatdayy"},"content":"        return new TaskList(matchingTasks);","lastModifiedDate":"2024-02-18"},{"lineNumber":103,"author":{"gitId":"agreatdayy"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":104,"author":{"gitId":"agreatdayy"},"content":"}","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"agreatdayy":104}},{"path":"src/main/java/chrisPBacon/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"agreatdayy"},"content":"package chrisPBacon;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"agreatdayy"},"content":"import task.Deadline;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"agreatdayy"},"content":"import task.Event;","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"agreatdayy"},"content":"import task.Task;","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"agreatdayy"},"content":"import task.TaskList;","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"agreatdayy"},"content":"import task.Todo;","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"agreatdayy"},"content":"import java.io.File;","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"agreatdayy"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"agreatdayy"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"agreatdayy"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"agreatdayy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"agreatdayy"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"agreatdayy"},"content":"/**","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"agreatdayy"},"content":" * The storage class deals with loading tasks from the file and saving tasks in the file","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"agreatdayy"},"content":" */","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"agreatdayy"},"content":"public class Storage {","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"agreatdayy"},"content":"    private String filepath \u003d \"\";","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"agreatdayy"},"content":"    private File listFile \u003d null;","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"agreatdayy"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"agreatdayy"},"content":"     * Constructor for Storage class with filepath.","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"agreatdayy"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"agreatdayy"},"content":"     * @param filePath of the saved list","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"agreatdayy"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"agreatdayy"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"agreatdayy"},"content":"        this.filepath \u003d filePath;","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"agreatdayy"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"agreatdayy"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":33,"author":{"gitId":"agreatdayy"},"content":"     * Loads saved tasks from the existing file and returns them in a new task list.","lastModifiedDate":"2024-02-14"},{"lineNumber":34,"author":{"gitId":"agreatdayy"},"content":"     * If file cannot be found, a new directory with a new file is created and","lastModifiedDate":"2024-02-14"},{"lineNumber":35,"author":{"gitId":"agreatdayy"},"content":"     * a new empty task list is returned.","lastModifiedDate":"2024-02-14"},{"lineNumber":36,"author":{"gitId":"agreatdayy"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":37,"author":{"gitId":"agreatdayy"},"content":"     * @return a task list containing previously saved tasks or an empty list.","lastModifiedDate":"2024-02-14"},{"lineNumber":38,"author":{"gitId":"agreatdayy"},"content":"     * @throws FileNotFoundException if program cannot find the filepath.","lastModifiedDate":"2024-02-14"},{"lineNumber":39,"author":{"gitId":"agreatdayy"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":40,"author":{"gitId":"agreatdayy"},"content":"    public ArrayList\u003cTask\u003e load() throws FileNotFoundException {","lastModifiedDate":"2024-02-14"},{"lineNumber":41,"author":{"gitId":"agreatdayy"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-14"},{"lineNumber":42,"author":{"gitId":"agreatdayy"},"content":"        try {","lastModifiedDate":"2024-02-14"},{"lineNumber":43,"author":{"gitId":"agreatdayy"},"content":"            this.listFile \u003d new File(this.filepath);","lastModifiedDate":"2024-02-14"},{"lineNumber":44,"author":{"gitId":"agreatdayy"},"content":"            Scanner s \u003d new Scanner(this.listFile); // create a Scanner using the File as the source","lastModifiedDate":"2024-02-14"},{"lineNumber":45,"author":{"gitId":"agreatdayy"},"content":"            // Update the task list with tasks.","lastModifiedDate":"2024-02-14"},{"lineNumber":46,"author":{"gitId":"agreatdayy"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2024-02-14"},{"lineNumber":47,"author":{"gitId":"agreatdayy"},"content":"                String str \u003d s.nextLine();","lastModifiedDate":"2024-02-14"},{"lineNumber":48,"author":{"gitId":"agreatdayy"},"content":"                char type \u003d str.charAt(4);","lastModifiedDate":"2024-02-14"},{"lineNumber":49,"author":{"gitId":"agreatdayy"},"content":"                boolean isDone \u003d str.charAt(1) \u003d\u003d \u0027x\u0027;","lastModifiedDate":"2024-02-14"},{"lineNumber":50,"author":{"gitId":"agreatdayy"},"content":"                String task \u003d str.substring(7);","lastModifiedDate":"2024-02-14"},{"lineNumber":51,"author":{"gitId":"agreatdayy"},"content":"                switch (type) {","lastModifiedDate":"2024-02-14"},{"lineNumber":52,"author":{"gitId":"agreatdayy"},"content":"                    case \u0027T\u0027:","lastModifiedDate":"2024-02-14"},{"lineNumber":53,"author":{"gitId":"agreatdayy"},"content":"                        taskList.add(new Todo(task, isDone));","lastModifiedDate":"2024-02-14"},{"lineNumber":54,"author":{"gitId":"agreatdayy"},"content":"                        break;","lastModifiedDate":"2024-02-14"},{"lineNumber":55,"author":{"gitId":"agreatdayy"},"content":"                    case \u0027D\u0027:","lastModifiedDate":"2024-02-14"},{"lineNumber":56,"author":{"gitId":"agreatdayy"},"content":"                        taskList.add(new Deadline(task, isDone));","lastModifiedDate":"2024-02-14"},{"lineNumber":57,"author":{"gitId":"agreatdayy"},"content":"                        break;","lastModifiedDate":"2024-02-14"},{"lineNumber":58,"author":{"gitId":"agreatdayy"},"content":"                    case \u0027E\u0027:","lastModifiedDate":"2024-02-14"},{"lineNumber":59,"author":{"gitId":"agreatdayy"},"content":"                        taskList.add(new Event(task, isDone));","lastModifiedDate":"2024-02-14"},{"lineNumber":60,"author":{"gitId":"agreatdayy"},"content":"                        break;","lastModifiedDate":"2024-02-14"},{"lineNumber":61,"author":{"gitId":"agreatdayy"},"content":"                }","lastModifiedDate":"2024-02-14"},{"lineNumber":62,"author":{"gitId":"agreatdayy"},"content":"            }","lastModifiedDate":"2024-02-14"},{"lineNumber":63,"author":{"gitId":"agreatdayy"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-14"},{"lineNumber":64,"author":{"gitId":"agreatdayy"},"content":"            // Create new directory and new file.","lastModifiedDate":"2024-02-14"},{"lineNumber":65,"author":{"gitId":"agreatdayy"},"content":"            new File(\"./data\").mkdirs();","lastModifiedDate":"2024-02-14"},{"lineNumber":66,"author":{"gitId":"agreatdayy"},"content":"            this.listFile \u003d new File(filepath);","lastModifiedDate":"2024-02-14"},{"lineNumber":67,"author":{"gitId":"agreatdayy"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":68,"author":{"gitId":"agreatdayy"},"content":"        return taskList;","lastModifiedDate":"2024-02-14"},{"lineNumber":69,"author":{"gitId":"agreatdayy"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":70,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":71,"author":{"gitId":"agreatdayy"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":72,"author":{"gitId":"agreatdayy"},"content":"     * Saves the tasks into the file when the chatbot exits.","lastModifiedDate":"2024-02-14"},{"lineNumber":73,"author":{"gitId":"agreatdayy"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":74,"author":{"gitId":"agreatdayy"},"content":"     * @param taskList of tasks to be saved.","lastModifiedDate":"2024-02-14"},{"lineNumber":75,"author":{"gitId":"agreatdayy"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":76,"author":{"gitId":"agreatdayy"},"content":"    public void save(TaskList taskList) {","lastModifiedDate":"2024-02-14"},{"lineNumber":77,"author":{"gitId":"agreatdayy"},"content":"        try {","lastModifiedDate":"2024-02-14"},{"lineNumber":78,"author":{"gitId":"agreatdayy"},"content":"            FileWriter fw \u003d new FileWriter(this.listFile);","lastModifiedDate":"2024-02-14"},{"lineNumber":79,"author":{"gitId":"agreatdayy"},"content":"            for (Task task : taskList.getTaskList()) {","lastModifiedDate":"2024-02-14"},{"lineNumber":80,"author":{"gitId":"agreatdayy"},"content":"                fw.write(task.toString() + \"\\n\");","lastModifiedDate":"2024-02-14"},{"lineNumber":81,"author":{"gitId":"agreatdayy"},"content":"            }","lastModifiedDate":"2024-02-14"},{"lineNumber":82,"author":{"gitId":"agreatdayy"},"content":"            fw.close();","lastModifiedDate":"2024-02-14"},{"lineNumber":83,"author":{"gitId":"agreatdayy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-14"},{"lineNumber":84,"author":{"gitId":"agreatdayy"},"content":"            System.out.println(\"Oink! Something went wrong... I can\u0027t save it!\");","lastModifiedDate":"2024-02-14"},{"lineNumber":85,"author":{"gitId":"agreatdayy"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":86,"author":{"gitId":"agreatdayy"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":87,"author":{"gitId":"agreatdayy"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"agreatdayy":87}},{"path":"src/main/java/chrisPBacon/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"agreatdayy"},"content":"package chrisPBacon;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"agreatdayy"},"content":"import exceptions.ChrisPBaconException;","lastModifiedDate":"2024-02-18"},{"lineNumber":4,"author":{"gitId":"agreatdayy"},"content":"import exceptions.InvalidTaskNameException;","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"agreatdayy"},"content":"import task.Deadline;","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"agreatdayy"},"content":"import task.Event;","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"agreatdayy"},"content":"import task.TaskList;","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"agreatdayy"},"content":"import task.Todo;","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"agreatdayy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"agreatdayy"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"agreatdayy"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"agreatdayy"},"content":" *  This UI class contains methods that print out chatbot messages in the console to the user.","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"agreatdayy"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"agreatdayy"},"content":"public class Ui {","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"agreatdayy"},"content":"    private final Parser parser;","lastModifiedDate":"2024-02-18"},{"lineNumber":19,"author":{"gitId":"agreatdayy"},"content":"    private final String LINE \u003d \"_____________________________________________________\";","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"agreatdayy"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"agreatdayy"},"content":"     * Constructor for a UI object.","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"agreatdayy"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"agreatdayy"},"content":"    public Ui() {","lastModifiedDate":"2024-02-18"},{"lineNumber":25,"author":{"gitId":"agreatdayy"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2024-02-18"},{"lineNumber":26,"author":{"gitId":"agreatdayy"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":27,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"agreatdayy"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"agreatdayy"},"content":"     * Prints the introduction of the chatbot when the user","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"agreatdayy"},"content":"     * first enters the chatbot.","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"agreatdayy"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"agreatdayy"},"content":"    public void printIntro() {","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"agreatdayy"},"content":"        String introduction \u003d \"Oink Oink!\\nI\u0027m Chris P Bacon but you can call me ChrisP! Oink!\\n\"","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"agreatdayy"},"content":"                + \"What can I do for you today? :D\\n\"","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"agreatdayy"},"content":"                + \"~Type \u0027help\u0027 for more command info~\\n\";","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"agreatdayy"},"content":"        String logo \u003d \"                             -------,\\n\"","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"agreatdayy"},"content":"                + \"                            |   --  |\\n\"","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"agreatdayy"},"content":"                + \"                            |  |  | |\\n\"","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"agreatdayy"},"content":"                + \" ---- -   -  ---  ---  ---  |   --  |\\n\"","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"agreatdayy"},"content":"                + \"|     |   | |   |  |  |   | |  ,----\u0027\\n\"","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"agreatdayy"},"content":"                + \"|     |---| |---   |   `-_  |  |     \\n\"","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"agreatdayy"},"content":"                + \"|     |   | | \\\\    |  |   | |  |     \\n\"","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"agreatdayy"},"content":"                + \" ---- -   - -  -  ---  ---   --      \\n\";","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"agreatdayy"},"content":"        System.out.println(logo + LINE + \"\\n\" + introduction + LINE);","lastModifiedDate":"2024-02-17"},{"lineNumber":45,"author":{"gitId":"agreatdayy"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"agreatdayy"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"agreatdayy"},"content":"     * Prints bye when the user exits the chatbot.","lastModifiedDate":"2024-02-14"},{"lineNumber":49,"author":{"gitId":"agreatdayy"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"agreatdayy"},"content":"    public void printBye() {","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"agreatdayy"},"content":"        System.out.println(LINE + \"\\n\" + \"Oink! Okie byee... See you soon! :)\\n\" + LINE);","lastModifiedDate":"2024-02-17"},{"lineNumber":52,"author":{"gitId":"agreatdayy"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"agreatdayy"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"agreatdayy"},"content":"     * Prints the error message.","lastModifiedDate":"2024-02-14"},{"lineNumber":56,"author":{"gitId":"agreatdayy"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"agreatdayy"},"content":"     * @param msg error message","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"agreatdayy"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"agreatdayy"},"content":"    public void printError(String msg) {","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"agreatdayy"},"content":"        System.out.println(LINE + \"\\n\" + msg + LINE);","lastModifiedDate":"2024-02-17"},{"lineNumber":61,"author":{"gitId":"agreatdayy"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"agreatdayy"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"agreatdayy"},"content":"     * Prints the list of commands available.","lastModifiedDate":"2024-02-14"},{"lineNumber":65,"author":{"gitId":"agreatdayy"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"agreatdayy"},"content":"    public void printHelp() {","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"agreatdayy"},"content":"        String help \u003d \"Oink! Here are the Command Words:\\n\u0027list\u0027 - displays the list of task\\n\"","lastModifiedDate":"2024-02-13"},{"lineNumber":68,"author":{"gitId":"agreatdayy"},"content":"                + \"\u0027todo ...\u0027 - to add new task\\n\u0027deadline ... /by dd/MM/yyyy\u0027 - to add task with deadline\\n\"","lastModifiedDate":"2024-02-13"},{"lineNumber":69,"author":{"gitId":"agreatdayy"},"content":"                + \"\u0027event ... /from ... /to ...\u0027 - to add an event\\n\"","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"agreatdayy"},"content":"                + \"\u0027mark \u003ctask no.\u003e\u0027 - to mark a task done\\n\u0027unmark \u003ctask no.\u003e\u0027 - to unmark a task\\n\"","lastModifiedDate":"2024-02-13"},{"lineNumber":71,"author":{"gitId":"agreatdayy"},"content":"                + \"\u0027find ...\u0027 - to find tasks with matching descriptions\\n\"","lastModifiedDate":"2024-02-18"},{"lineNumber":72,"author":{"gitId":"agreatdayy"},"content":"                + \"\u0027delete \u003ctask no.\u003e\u0027 - to delete a task\\n\u0027bye\u0027 - to exit the chatbot\\n\";","lastModifiedDate":"2024-02-13"},{"lineNumber":73,"author":{"gitId":"agreatdayy"},"content":"        System.out.println(LINE + \"\\n\" + help + LINE);","lastModifiedDate":"2024-02-17"},{"lineNumber":74,"author":{"gitId":"agreatdayy"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"agreatdayy"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"agreatdayy"},"content":"     * Iterates through the list and prints the tasks.","lastModifiedDate":"2024-02-14"},{"lineNumber":78,"author":{"gitId":"agreatdayy"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":79,"author":{"gitId":"agreatdayy"},"content":"     * @param tasks task list","lastModifiedDate":"2024-02-13"},{"lineNumber":80,"author":{"gitId":"agreatdayy"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"agreatdayy"},"content":"    public void printList(TaskList tasks) {","lastModifiedDate":"2024-02-13"},{"lineNumber":82,"author":{"gitId":"agreatdayy"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-02-17"},{"lineNumber":83,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":84,"author":{"gitId":"agreatdayy"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-02-13"},{"lineNumber":85,"author":{"gitId":"agreatdayy"},"content":"            // If the list is empty.","lastModifiedDate":"2024-02-14"},{"lineNumber":86,"author":{"gitId":"agreatdayy"},"content":"            System.out.println(\"Oink! There are no tasks! Yeehaww\");","lastModifiedDate":"2024-02-02"},{"lineNumber":87,"author":{"gitId":"agreatdayy"},"content":"        } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":88,"author":{"gitId":"agreatdayy"},"content":"            // If the list is not empty.","lastModifiedDate":"2024-02-14"},{"lineNumber":89,"author":{"gitId":"agreatdayy"},"content":"            System.out.println(\"Oink! Here are the tasks:\");","lastModifiedDate":"2024-02-02"},{"lineNumber":90,"author":{"gitId":"agreatdayy"},"content":"            for (int i \u003d 1; i \u003c\u003d tasks.getSize(); i++) {","lastModifiedDate":"2024-02-13"},{"lineNumber":91,"author":{"gitId":"agreatdayy"},"content":"                System.out.println(i + \". \" + tasks.getTask(i - 1));","lastModifiedDate":"2024-02-13"},{"lineNumber":92,"author":{"gitId":"agreatdayy"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":93,"author":{"gitId":"agreatdayy"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":94,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":95,"author":{"gitId":"agreatdayy"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-02-17"},{"lineNumber":96,"author":{"gitId":"agreatdayy"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":97,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":98,"author":{"gitId":"agreatdayy"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":99,"author":{"gitId":"agreatdayy"},"content":"     * Prints the task marked completed.","lastModifiedDate":"2024-02-14"},{"lineNumber":100,"author":{"gitId":"agreatdayy"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":101,"author":{"gitId":"agreatdayy"},"content":"     * @param userInput a string","lastModifiedDate":"2024-02-02"},{"lineNumber":102,"author":{"gitId":"agreatdayy"},"content":"     * @param tasks task list","lastModifiedDate":"2024-02-13"},{"lineNumber":103,"author":{"gitId":"agreatdayy"},"content":"     * @throws InvalidTaskNameException Check for invalid input format.","lastModifiedDate":"2024-02-18"},{"lineNumber":104,"author":{"gitId":"agreatdayy"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":105,"author":{"gitId":"agreatdayy"},"content":"    public void printMark(String userInput, TaskList tasks) throws InvalidTaskNameException {","lastModifiedDate":"2024-02-13"},{"lineNumber":106,"author":{"gitId":"agreatdayy"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-02-17"},{"lineNumber":107,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":108,"author":{"gitId":"agreatdayy"},"content":"        if (userInput.length() \u003c 6) {","lastModifiedDate":"2024-02-02"},{"lineNumber":109,"author":{"gitId":"agreatdayy"},"content":"            throw new InvalidTaskNameException(\"Ooink oink! Please follow the format \u003e.\u003c\\n\"","lastModifiedDate":"2024-02-02"},{"lineNumber":110,"author":{"gitId":"agreatdayy"},"content":"                    + \" \u003e\u003e mark \u003ctask no.\u003e\\n\");","lastModifiedDate":"2024-02-13"},{"lineNumber":111,"author":{"gitId":"agreatdayy"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":112,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":113,"author":{"gitId":"agreatdayy"},"content":"        int idx \u003d userInput.charAt(5) - \u00270\u0027 - 1;","lastModifiedDate":"2024-02-02"},{"lineNumber":114,"author":{"gitId":"agreatdayy"},"content":"        System.out.println(tasks.markTask(idx) + LINE);","lastModifiedDate":"2024-02-17"},{"lineNumber":115,"author":{"gitId":"agreatdayy"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":116,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":117,"author":{"gitId":"agreatdayy"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":118,"author":{"gitId":"agreatdayy"},"content":"     * Prints the task unmarked completed.","lastModifiedDate":"2024-02-14"},{"lineNumber":119,"author":{"gitId":"agreatdayy"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":120,"author":{"gitId":"agreatdayy"},"content":"     * @param userInput a string","lastModifiedDate":"2024-02-02"},{"lineNumber":121,"author":{"gitId":"agreatdayy"},"content":"     * @param tasks task list","lastModifiedDate":"2024-02-13"},{"lineNumber":122,"author":{"gitId":"agreatdayy"},"content":"     * @throws InvalidTaskNameException Check for invalid input format.","lastModifiedDate":"2024-02-18"},{"lineNumber":123,"author":{"gitId":"agreatdayy"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":124,"author":{"gitId":"agreatdayy"},"content":"    public void printUnmark(String userInput, TaskList tasks) throws InvalidTaskNameException {","lastModifiedDate":"2024-02-13"},{"lineNumber":125,"author":{"gitId":"agreatdayy"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-02-17"},{"lineNumber":126,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":127,"author":{"gitId":"agreatdayy"},"content":"        if (userInput.length() \u003c 8) {","lastModifiedDate":"2024-02-02"},{"lineNumber":128,"author":{"gitId":"agreatdayy"},"content":"            throw new InvalidTaskNameException(\"Ooink oink! Please follow the format \u003e.\u003c\\n\"","lastModifiedDate":"2024-02-02"},{"lineNumber":129,"author":{"gitId":"agreatdayy"},"content":"                    + \" \u003e\u003e unmark \u003ctask no.\u003e\\n\");","lastModifiedDate":"2024-02-13"},{"lineNumber":130,"author":{"gitId":"agreatdayy"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":131,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":132,"author":{"gitId":"agreatdayy"},"content":"        int idx \u003d userInput.charAt(7) - \u00270\u0027 - 1;","lastModifiedDate":"2024-02-02"},{"lineNumber":133,"author":{"gitId":"agreatdayy"},"content":"        System.out.println(tasks.unmarkTask(idx) + LINE);","lastModifiedDate":"2024-02-17"},{"lineNumber":134,"author":{"gitId":"agreatdayy"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":135,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":136,"author":{"gitId":"agreatdayy"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":137,"author":{"gitId":"agreatdayy"},"content":"     * Deletes the task and prints the details of the deleted task.","lastModifiedDate":"2024-02-14"},{"lineNumber":138,"author":{"gitId":"agreatdayy"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":139,"author":{"gitId":"agreatdayy"},"content":"     * @param userInput a string","lastModifiedDate":"2024-02-02"},{"lineNumber":140,"author":{"gitId":"agreatdayy"},"content":"     * @param tasks task list","lastModifiedDate":"2024-02-13"},{"lineNumber":141,"author":{"gitId":"agreatdayy"},"content":"     * @throws InvalidTaskNameException Check for invalid input format.","lastModifiedDate":"2024-02-18"},{"lineNumber":142,"author":{"gitId":"agreatdayy"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":143,"author":{"gitId":"agreatdayy"},"content":"    public void printDelete(String userInput, TaskList tasks) throws InvalidTaskNameException {","lastModifiedDate":"2024-02-13"},{"lineNumber":144,"author":{"gitId":"agreatdayy"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-02-17"},{"lineNumber":145,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":146,"author":{"gitId":"agreatdayy"},"content":"        if (userInput.length() \u003c 8) {","lastModifiedDate":"2024-02-02"},{"lineNumber":147,"author":{"gitId":"agreatdayy"},"content":"            throw new InvalidTaskNameException(\"Ooink oink! Please follow the format \u003e.\u003c\\n\"","lastModifiedDate":"2024-02-02"},{"lineNumber":148,"author":{"gitId":"agreatdayy"},"content":"                    + \" \u003e\u003e delete \u003ctask no.\u003e\\n\");","lastModifiedDate":"2024-02-13"},{"lineNumber":149,"author":{"gitId":"agreatdayy"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":150,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":151,"author":{"gitId":"agreatdayy"},"content":"        int idx \u003d userInput.charAt(7) - \u00270\u0027- 1;","lastModifiedDate":"2024-02-02"},{"lineNumber":152,"author":{"gitId":"agreatdayy"},"content":"        System.out.println(tasks.deleteTask(idx) + LINE);","lastModifiedDate":"2024-02-17"},{"lineNumber":153,"author":{"gitId":"agreatdayy"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":154,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":155,"author":{"gitId":"agreatdayy"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":156,"author":{"gitId":"agreatdayy"},"content":"     * Adds a todo task and prints the details of the new task.","lastModifiedDate":"2024-02-14"},{"lineNumber":157,"author":{"gitId":"agreatdayy"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":158,"author":{"gitId":"agreatdayy"},"content":"     * @param userInput a string","lastModifiedDate":"2024-02-02"},{"lineNumber":159,"author":{"gitId":"agreatdayy"},"content":"     * @param tasks task list","lastModifiedDate":"2024-02-13"},{"lineNumber":160,"author":{"gitId":"agreatdayy"},"content":"     * @throws InvalidTaskNameException Check for invalid input format.","lastModifiedDate":"2024-02-18"},{"lineNumber":161,"author":{"gitId":"agreatdayy"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":162,"author":{"gitId":"agreatdayy"},"content":"    public void printTodo(String userInput, TaskList tasks) throws InvalidTaskNameException {","lastModifiedDate":"2024-02-13"},{"lineNumber":163,"author":{"gitId":"agreatdayy"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-02-17"},{"lineNumber":164,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":165,"author":{"gitId":"agreatdayy"},"content":"        String description \u003d parser.parseTodo(userInput);","lastModifiedDate":"2024-02-18"},{"lineNumber":166,"author":{"gitId":"agreatdayy"},"content":"        Todo task \u003d new Todo(description);","lastModifiedDate":"2024-02-18"},{"lineNumber":167,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":168,"author":{"gitId":"agreatdayy"},"content":"        System.out.println(tasks.addTask(task) + LINE);","lastModifiedDate":"2024-02-17"},{"lineNumber":169,"author":{"gitId":"agreatdayy"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":170,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":171,"author":{"gitId":"agreatdayy"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":172,"author":{"gitId":"agreatdayy"},"content":"     * Adds a deadLINE task and prints the details of the new task.","lastModifiedDate":"2024-02-17"},{"lineNumber":173,"author":{"gitId":"agreatdayy"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":174,"author":{"gitId":"agreatdayy"},"content":"     * @param userInput a string","lastModifiedDate":"2024-02-02"},{"lineNumber":175,"author":{"gitId":"agreatdayy"},"content":"     * @param tasks task list","lastModifiedDate":"2024-02-13"},{"lineNumber":176,"author":{"gitId":"agreatdayy"},"content":"     * @throws InvalidTaskNameException Check for invalid input format.","lastModifiedDate":"2024-02-18"},{"lineNumber":177,"author":{"gitId":"agreatdayy"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":178,"author":{"gitId":"agreatdayy"},"content":"    public void printDeadline(String userInput, TaskList tasks) throws InvalidTaskNameException {","lastModifiedDate":"2024-02-13"},{"lineNumber":179,"author":{"gitId":"agreatdayy"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-02-17"},{"lineNumber":180,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":181,"author":{"gitId":"agreatdayy"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":182,"author":{"gitId":"agreatdayy"},"content":"            String name  \u003d parser.parseDeadlineName(userInput);","lastModifiedDate":"2024-02-18"},{"lineNumber":183,"author":{"gitId":"agreatdayy"},"content":"            LocalDate deadline \u003d parser.parseDeadlineDate(userInput);","lastModifiedDate":"2024-02-18"},{"lineNumber":184,"author":{"gitId":"agreatdayy"},"content":"            Deadline task \u003d new Deadline(name, deadline);","lastModifiedDate":"2024-02-10"},{"lineNumber":185,"author":{"gitId":"agreatdayy"},"content":"            System.out.println(tasks.addTask(task) + LINE);","lastModifiedDate":"2024-02-17"},{"lineNumber":186,"author":{"gitId":"agreatdayy"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":187,"author":{"gitId":"agreatdayy"},"content":"            System.out.println(\"Oink! Invalid date format! Please follow:\\n\"","lastModifiedDate":"2024-02-02"},{"lineNumber":188,"author":{"gitId":"agreatdayy"},"content":"                    + \"\u003e\u003e dd/MM/yyyy\\n\" + LINE);","lastModifiedDate":"2024-02-17"},{"lineNumber":189,"author":{"gitId":"agreatdayy"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":190,"author":{"gitId":"agreatdayy"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":191,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":192,"author":{"gitId":"agreatdayy"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":193,"author":{"gitId":"agreatdayy"},"content":"     * Adds an event and prints the details of the new task.","lastModifiedDate":"2024-02-14"},{"lineNumber":194,"author":{"gitId":"agreatdayy"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":195,"author":{"gitId":"agreatdayy"},"content":"     * @param userInput a string.","lastModifiedDate":"2024-02-18"},{"lineNumber":196,"author":{"gitId":"agreatdayy"},"content":"     * @param tasks task list.","lastModifiedDate":"2024-02-18"},{"lineNumber":197,"author":{"gitId":"agreatdayy"},"content":"     * @throws InvalidTaskNameException Check for invalid input format.","lastModifiedDate":"2024-02-18"},{"lineNumber":198,"author":{"gitId":"agreatdayy"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":199,"author":{"gitId":"agreatdayy"},"content":"    public void printEvent(String userInput, TaskList tasks) throws InvalidTaskNameException {","lastModifiedDate":"2024-02-13"},{"lineNumber":200,"author":{"gitId":"agreatdayy"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-02-17"},{"lineNumber":201,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":202,"author":{"gitId":"agreatdayy"},"content":"        String[] description \u003d parser.parseEvent(userInput);","lastModifiedDate":"2024-02-18"},{"lineNumber":203,"author":{"gitId":"agreatdayy"},"content":"        Event task \u003d new Event(description);","lastModifiedDate":"2024-02-18"},{"lineNumber":204,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":205,"author":{"gitId":"agreatdayy"},"content":"        System.out.println(tasks.addTask(task) + LINE);","lastModifiedDate":"2024-02-17"},{"lineNumber":206,"author":{"gitId":"agreatdayy"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":207,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":208,"author":{"gitId":"agreatdayy"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":209,"author":{"gitId":"agreatdayy"},"content":"     * Finds tasks that matches the keyword by user and prints the list of matching tasks.","lastModifiedDate":"2024-02-18"},{"lineNumber":210,"author":{"gitId":"agreatdayy"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":211,"author":{"gitId":"agreatdayy"},"content":"     * @param userInput a string.","lastModifiedDate":"2024-02-18"},{"lineNumber":212,"author":{"gitId":"agreatdayy"},"content":"     * @param tasks task list.","lastModifiedDate":"2024-02-18"},{"lineNumber":213,"author":{"gitId":"agreatdayy"},"content":"     * @throws ChrisPBaconException Check for invalid input format.","lastModifiedDate":"2024-02-18"},{"lineNumber":214,"author":{"gitId":"agreatdayy"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":215,"author":{"gitId":"agreatdayy"},"content":"    public void printFind(String userInput, TaskList tasks) throws ChrisPBaconException {","lastModifiedDate":"2024-02-18"},{"lineNumber":216,"author":{"gitId":"agreatdayy"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-02-18"},{"lineNumber":217,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":218,"author":{"gitId":"agreatdayy"},"content":"        TaskList matchingTasks \u003d parser.parseFind(userInput, tasks);","lastModifiedDate":"2024-02-18"},{"lineNumber":219,"author":{"gitId":"agreatdayy"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2024-02-18"},{"lineNumber":220,"author":{"gitId":"agreatdayy"},"content":"            // If the list is empty.","lastModifiedDate":"2024-02-18"},{"lineNumber":221,"author":{"gitId":"agreatdayy"},"content":"            System.out.println(\"Oink! There are no matching tasks!\");","lastModifiedDate":"2024-02-18"},{"lineNumber":222,"author":{"gitId":"agreatdayy"},"content":"        } else {","lastModifiedDate":"2024-02-18"},{"lineNumber":223,"author":{"gitId":"agreatdayy"},"content":"            // If the list is not empty.","lastModifiedDate":"2024-02-18"},{"lineNumber":224,"author":{"gitId":"agreatdayy"},"content":"            System.out.println(\"Oink! Here are the matching tasks in the list:\");","lastModifiedDate":"2024-02-18"},{"lineNumber":225,"author":{"gitId":"agreatdayy"},"content":"            for (int i \u003d 1; i \u003c\u003d matchingTasks.getSize(); i++) {","lastModifiedDate":"2024-02-18"},{"lineNumber":226,"author":{"gitId":"agreatdayy"},"content":"                System.out.println(i + \". \" + matchingTasks.getTask(i - 1));","lastModifiedDate":"2024-02-18"},{"lineNumber":227,"author":{"gitId":"agreatdayy"},"content":"            }","lastModifiedDate":"2024-02-18"},{"lineNumber":228,"author":{"gitId":"agreatdayy"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":229,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":230,"author":{"gitId":"agreatdayy"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-02-18"},{"lineNumber":231,"author":{"gitId":"agreatdayy"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":232,"author":{"gitId":"agreatdayy"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"agreatdayy":232}},{"path":"src/main/java/chrisPBacon/UserInput.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"agreatdayy"},"content":"package chrisPBacon;","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"agreatdayy"},"content":"import exceptions.ChrisPBaconException;","lastModifiedDate":"2024-02-18"},{"lineNumber":4,"author":{"gitId":"agreatdayy"},"content":"import exceptions.InvalidTaskNameException;","lastModifiedDate":"2024-02-18"},{"lineNumber":5,"author":{"gitId":"agreatdayy"},"content":"import task.TaskList;","lastModifiedDate":"2024-02-18"},{"lineNumber":6,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":7,"author":{"gitId":"agreatdayy"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-18"},{"lineNumber":8,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":9,"author":{"gitId":"agreatdayy"},"content":"/**","lastModifiedDate":"2024-02-18"},{"lineNumber":10,"author":{"gitId":"agreatdayy"},"content":" * This class stores the user input and scans for the next input.","lastModifiedDate":"2024-02-18"},{"lineNumber":11,"author":{"gitId":"agreatdayy"},"content":" * If input is \"bye\", the scanner will be closed.","lastModifiedDate":"2024-02-18"},{"lineNumber":12,"author":{"gitId":"agreatdayy"},"content":" */","lastModifiedDate":"2024-02-18"},{"lineNumber":13,"author":{"gitId":"agreatdayy"},"content":"public class UserInput {","lastModifiedDate":"2024-02-18"},{"lineNumber":14,"author":{"gitId":"agreatdayy"},"content":"    private final Scanner scan;","lastModifiedDate":"2024-02-18"},{"lineNumber":15,"author":{"gitId":"agreatdayy"},"content":"    private String userInput;","lastModifiedDate":"2024-02-18"},{"lineNumber":16,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":17,"author":{"gitId":"agreatdayy"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":18,"author":{"gitId":"agreatdayy"},"content":"     * Constructor for UserInput.","lastModifiedDate":"2024-02-18"},{"lineNumber":19,"author":{"gitId":"agreatdayy"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":20,"author":{"gitId":"agreatdayy"},"content":"    public UserInput() {","lastModifiedDate":"2024-02-18"},{"lineNumber":21,"author":{"gitId":"agreatdayy"},"content":"        this.scan \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-18"},{"lineNumber":22,"author":{"gitId":"agreatdayy"},"content":"        this.userInput \u003d scan.nextLine();","lastModifiedDate":"2024-02-18"},{"lineNumber":23,"author":{"gitId":"agreatdayy"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":24,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":25,"author":{"gitId":"agreatdayy"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":26,"author":{"gitId":"agreatdayy"},"content":"     * Processes the userInput and scans for the next input.","lastModifiedDate":"2024-02-18"},{"lineNumber":27,"author":{"gitId":"agreatdayy"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":28,"author":{"gitId":"agreatdayy"},"content":"     * @param ui Ui management.","lastModifiedDate":"2024-02-18"},{"lineNumber":29,"author":{"gitId":"agreatdayy"},"content":"     * @param tasks The task list.","lastModifiedDate":"2024-02-18"},{"lineNumber":30,"author":{"gitId":"agreatdayy"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":31,"author":{"gitId":"agreatdayy"},"content":"    public void processInput(Ui ui, TaskList tasks) {","lastModifiedDate":"2024-02-18"},{"lineNumber":32,"author":{"gitId":"agreatdayy"},"content":"        try {","lastModifiedDate":"2024-02-18"},{"lineNumber":33,"author":{"gitId":"agreatdayy"},"content":"            String firstWord \u003d this.userInput.indexOf(\u0027 \u0027) \u003c 0","lastModifiedDate":"2024-02-18"},{"lineNumber":34,"author":{"gitId":"agreatdayy"},"content":"                    ? this.userInput","lastModifiedDate":"2024-02-18"},{"lineNumber":35,"author":{"gitId":"agreatdayy"},"content":"                    : this.userInput.substring(0, userInput.indexOf(\u0027 \u0027));","lastModifiedDate":"2024-02-18"},{"lineNumber":36,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":37,"author":{"gitId":"agreatdayy"},"content":"            switch (firstWord) {","lastModifiedDate":"2024-02-18"},{"lineNumber":38,"author":{"gitId":"agreatdayy"},"content":"            case \"help\":","lastModifiedDate":"2024-02-18"},{"lineNumber":39,"author":{"gitId":"agreatdayy"},"content":"                ui.printHelp();","lastModifiedDate":"2024-02-18"},{"lineNumber":40,"author":{"gitId":"agreatdayy"},"content":"                break;","lastModifiedDate":"2024-02-18"},{"lineNumber":41,"author":{"gitId":"agreatdayy"},"content":"            case \"list\":","lastModifiedDate":"2024-02-18"},{"lineNumber":42,"author":{"gitId":"agreatdayy"},"content":"                ui.printList(tasks);","lastModifiedDate":"2024-02-18"},{"lineNumber":43,"author":{"gitId":"agreatdayy"},"content":"                break;","lastModifiedDate":"2024-02-18"},{"lineNumber":44,"author":{"gitId":"agreatdayy"},"content":"            case \"mark\":","lastModifiedDate":"2024-02-18"},{"lineNumber":45,"author":{"gitId":"agreatdayy"},"content":"                ui.printMark(this.userInput, tasks);","lastModifiedDate":"2024-02-18"},{"lineNumber":46,"author":{"gitId":"agreatdayy"},"content":"                break;","lastModifiedDate":"2024-02-18"},{"lineNumber":47,"author":{"gitId":"agreatdayy"},"content":"            case \"unmark\":","lastModifiedDate":"2024-02-18"},{"lineNumber":48,"author":{"gitId":"agreatdayy"},"content":"                ui.printUnmark(this.userInput, tasks);","lastModifiedDate":"2024-02-18"},{"lineNumber":49,"author":{"gitId":"agreatdayy"},"content":"                break;","lastModifiedDate":"2024-02-18"},{"lineNumber":50,"author":{"gitId":"agreatdayy"},"content":"            case \"delete\":","lastModifiedDate":"2024-02-18"},{"lineNumber":51,"author":{"gitId":"agreatdayy"},"content":"                ui.printDelete(this.userInput, tasks);","lastModifiedDate":"2024-02-18"},{"lineNumber":52,"author":{"gitId":"agreatdayy"},"content":"                break;","lastModifiedDate":"2024-02-18"},{"lineNumber":53,"author":{"gitId":"agreatdayy"},"content":"            case \"find\":","lastModifiedDate":"2024-02-18"},{"lineNumber":54,"author":{"gitId":"agreatdayy"},"content":"                ui.printFind(this.userInput, tasks);","lastModifiedDate":"2024-02-18"},{"lineNumber":55,"author":{"gitId":"agreatdayy"},"content":"                break;","lastModifiedDate":"2024-02-18"},{"lineNumber":56,"author":{"gitId":"agreatdayy"},"content":"            case \"todo\":","lastModifiedDate":"2024-02-18"},{"lineNumber":57,"author":{"gitId":"agreatdayy"},"content":"                ui.printTodo(this.userInput, tasks);","lastModifiedDate":"2024-02-18"},{"lineNumber":58,"author":{"gitId":"agreatdayy"},"content":"                break;","lastModifiedDate":"2024-02-18"},{"lineNumber":59,"author":{"gitId":"agreatdayy"},"content":"            case \"deadline\":","lastModifiedDate":"2024-02-18"},{"lineNumber":60,"author":{"gitId":"agreatdayy"},"content":"                ui.printDeadline(this.userInput, tasks);","lastModifiedDate":"2024-02-18"},{"lineNumber":61,"author":{"gitId":"agreatdayy"},"content":"                break;","lastModifiedDate":"2024-02-18"},{"lineNumber":62,"author":{"gitId":"agreatdayy"},"content":"            case \"event\":","lastModifiedDate":"2024-02-18"},{"lineNumber":63,"author":{"gitId":"agreatdayy"},"content":"                ui.printEvent(this.userInput, tasks);","lastModifiedDate":"2024-02-18"},{"lineNumber":64,"author":{"gitId":"agreatdayy"},"content":"                break;","lastModifiedDate":"2024-02-18"},{"lineNumber":65,"author":{"gitId":"agreatdayy"},"content":"            default:","lastModifiedDate":"2024-02-18"},{"lineNumber":66,"author":{"gitId":"agreatdayy"},"content":"                // if user entered input that cannot be recognised.","lastModifiedDate":"2024-02-18"},{"lineNumber":67,"author":{"gitId":"agreatdayy"},"content":"                throw new ChrisPBaconException(\"Ooink oink! I\u0027m sorry, I don\u0027t understand.\\n\"","lastModifiedDate":"2024-02-18"},{"lineNumber":68,"author":{"gitId":"agreatdayy"},"content":"                        + \"Type \u0027help\u0027 for command info!\\n\");","lastModifiedDate":"2024-02-18"},{"lineNumber":69,"author":{"gitId":"agreatdayy"},"content":"            }","lastModifiedDate":"2024-02-18"},{"lineNumber":70,"author":{"gitId":"agreatdayy"},"content":"        } catch (ChrisPBaconException | InvalidTaskNameException e) {","lastModifiedDate":"2024-02-18"},{"lineNumber":71,"author":{"gitId":"agreatdayy"},"content":"            ui.printError(e.getMessage());","lastModifiedDate":"2024-02-18"},{"lineNumber":72,"author":{"gitId":"agreatdayy"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":73,"author":{"gitId":"agreatdayy"},"content":"        userInput \u003d scan.nextLine(); // Scan for next input.","lastModifiedDate":"2024-02-18"},{"lineNumber":74,"author":{"gitId":"agreatdayy"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":75,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":76,"author":{"gitId":"agreatdayy"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":77,"author":{"gitId":"agreatdayy"},"content":"     * Checks if user input is \"bye\".","lastModifiedDate":"2024-02-18"},{"lineNumber":78,"author":{"gitId":"agreatdayy"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":79,"author":{"gitId":"agreatdayy"},"content":"     * @return true if input is bye and close the scanner.","lastModifiedDate":"2024-02-18"},{"lineNumber":80,"author":{"gitId":"agreatdayy"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":81,"author":{"gitId":"agreatdayy"},"content":"    public boolean isInputBye() {","lastModifiedDate":"2024-02-18"},{"lineNumber":82,"author":{"gitId":"agreatdayy"},"content":"        boolean isBye \u003d userInput.equals(\"bye\");","lastModifiedDate":"2024-02-18"},{"lineNumber":83,"author":{"gitId":"agreatdayy"},"content":"        if (isBye) {","lastModifiedDate":"2024-02-18"},{"lineNumber":84,"author":{"gitId":"agreatdayy"},"content":"            // Close scanner if input \u003d\u003d bye.","lastModifiedDate":"2024-02-18"},{"lineNumber":85,"author":{"gitId":"agreatdayy"},"content":"            this.scan.close();","lastModifiedDate":"2024-02-18"},{"lineNumber":86,"author":{"gitId":"agreatdayy"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":87,"author":{"gitId":"agreatdayy"},"content":"        return isBye;","lastModifiedDate":"2024-02-18"},{"lineNumber":88,"author":{"gitId":"agreatdayy"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":89,"author":{"gitId":"agreatdayy"},"content":"}","lastModifiedDate":"2024-02-18"}],"authorContributionMap":{"agreatdayy":89}},{"path":"src/main/java/exceptions/ChrisPBaconException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"agreatdayy"},"content":"package exceptions;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"agreatdayy"},"content":"/**","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"agreatdayy"},"content":" * Handles general exceptions such as invalid command words.","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"agreatdayy"},"content":" */","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"agreatdayy"},"content":"public class ChrisPBaconException extends Exception {","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"agreatdayy"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"agreatdayy"},"content":"     * Constructor for ChrisPBaconException with the error message.","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"agreatdayy"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"agreatdayy"},"content":"     * @param errorMessage to be printed on console.","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"agreatdayy"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"agreatdayy"},"content":"    public ChrisPBaconException(String errorMessage) {","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"agreatdayy"},"content":"        super(errorMessage);","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"agreatdayy"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"agreatdayy"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"agreatdayy":15}},{"path":"src/main/java/exceptions/InvalidTaskNameException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"agreatdayy"},"content":"package exceptions;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"agreatdayy"},"content":"/**","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"agreatdayy"},"content":" * Handles errors generated when added tasks.","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"agreatdayy"},"content":" */","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"agreatdayy"},"content":"public class InvalidTaskNameException extends Exception {","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"agreatdayy"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"agreatdayy"},"content":"     * Constructor with error message.","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"agreatdayy"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"agreatdayy"},"content":"     * @param errorMessage to be printed on console.","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"agreatdayy"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"agreatdayy"},"content":"    public InvalidTaskNameException(String errorMessage) {","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"agreatdayy"},"content":"        super(errorMessage);","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"agreatdayy"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"agreatdayy"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"agreatdayy":15}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"agreatdayy"},"content":"package task;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"agreatdayy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"agreatdayy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"agreatdayy"},"content":"/**","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"agreatdayy"},"content":" * Deadlines are tasks that need to be done before a specific date/time.","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"agreatdayy"},"content":" */","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"agreatdayy"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"agreatdayy"},"content":"    protected String name;","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"agreatdayy"},"content":"    protected LocalDate deadline;","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"agreatdayy"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"agreatdayy"},"content":"     * Constructor for a task list object.","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"agreatdayy"},"content":"     *","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"agreatdayy"},"content":"     * @param name The task name.","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"agreatdayy"},"content":"     * @param date The deadline.","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"agreatdayy"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"agreatdayy"},"content":"    public Deadline(String name, LocalDate date) {","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"agreatdayy"},"content":"        super();","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"agreatdayy"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"agreatdayy"},"content":"        this.deadline \u003d date;","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"agreatdayy"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"agreatdayy"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"agreatdayy"},"content":"     * Constructor for loading from file.","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"agreatdayy"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"agreatdayy"},"content":"     * @param description of the task.","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"agreatdayy"},"content":"     * @param isDone Whether the task is completed.","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"agreatdayy"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"agreatdayy"},"content":"    public Deadline(String description, boolean isDone) {","lastModifiedDate":"2024-02-13"},{"lineNumber":32,"author":{"gitId":"agreatdayy"},"content":"        super(isDone);","lastModifiedDate":"2024-02-13"},{"lineNumber":33,"author":{"gitId":"agreatdayy"},"content":"        int idx \u003d description.indexOf(\"(by: \");","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"agreatdayy"},"content":"        this.name \u003d description.substring(0, idx - 1);","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"agreatdayy"},"content":"        String date \u003d description.substring(idx + 5, description.length() - 1);","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"agreatdayy"},"content":"        this.deadline \u003d LocalDate.parse(date, DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"agreatdayy"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":38,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":39,"author":{"gitId":"agreatdayy"},"content":"    @Override","lastModifiedDate":"2024-02-18"},{"lineNumber":40,"author":{"gitId":"agreatdayy"},"content":"    public boolean isMatchKeyword(String keyword) {","lastModifiedDate":"2024-02-18"},{"lineNumber":41,"author":{"gitId":"agreatdayy"},"content":"        return this.name.toLowerCase().contains(keyword.toLowerCase());","lastModifiedDate":"2024-02-18"},{"lineNumber":42,"author":{"gitId":"agreatdayy"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":43,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":44,"author":{"gitId":"agreatdayy"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":45,"author":{"gitId":"agreatdayy"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":46,"author":{"gitId":"agreatdayy"},"content":"        return super.toString() + \"[D] \" + this.name","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"agreatdayy"},"content":"                + \" (by: \" + this.deadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"agreatdayy"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":49,"author":{"gitId":"agreatdayy"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"agreatdayy":49}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"agreatdayy"},"content":"package task;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"agreatdayy"},"content":"/**","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"agreatdayy"},"content":" * Events are tasks that start at a specific date/time and ends at a specific date/time.","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"agreatdayy"},"content":" */","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"agreatdayy"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"agreatdayy"},"content":"    protected String name;","lastModifiedDate":"2024-02-18"},{"lineNumber":8,"author":{"gitId":"agreatdayy"},"content":"    protected String from;","lastModifiedDate":"2024-02-18"},{"lineNumber":9,"author":{"gitId":"agreatdayy"},"content":"    protected String to;","lastModifiedDate":"2024-02-18"},{"lineNumber":10,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":11,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"agreatdayy"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"agreatdayy"},"content":"     * Constructor for an Event object.","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"agreatdayy"},"content":"     *","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"agreatdayy"},"content":"     * @param description Includes name, event start and event end.","lastModifiedDate":"2024-02-18"},{"lineNumber":16,"author":{"gitId":"agreatdayy"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"agreatdayy"},"content":"    public Event(String[] description) {","lastModifiedDate":"2024-02-18"},{"lineNumber":18,"author":{"gitId":"agreatdayy"},"content":"        super();","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"agreatdayy"},"content":"        this.name \u003d description[0];","lastModifiedDate":"2024-02-18"},{"lineNumber":20,"author":{"gitId":"agreatdayy"},"content":"        this.from \u003d description[1];","lastModifiedDate":"2024-02-18"},{"lineNumber":21,"author":{"gitId":"agreatdayy"},"content":"        this.to \u003d description[2];","lastModifiedDate":"2024-02-18"},{"lineNumber":22,"author":{"gitId":"agreatdayy"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"agreatdayy"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"agreatdayy"},"content":"     * Constructor for loading from file.","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"agreatdayy"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"agreatdayy"},"content":"     * @param description of the event.","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"agreatdayy"},"content":"     * @param isDone Whether the task is completed.","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"agreatdayy"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"agreatdayy"},"content":"    public Event(String description, boolean isDone) {","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"agreatdayy"},"content":"        super(isDone);","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"agreatdayy"},"content":"        int fromIdx \u003d description.indexOf(\"(from:\");","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"agreatdayy"},"content":"        int toIdx \u003d description.indexOf(\"to:\");","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"agreatdayy"},"content":"        int len \u003d description.length();","lastModifiedDate":"2024-02-13"},{"lineNumber":35,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":36,"author":{"gitId":"agreatdayy"},"content":"        this.name \u003d description.substring(0, fromIdx - 1);","lastModifiedDate":"2024-02-18"},{"lineNumber":37,"author":{"gitId":"agreatdayy"},"content":"        this.from \u003d description.substring(fromIdx + 7, toIdx - 1);","lastModifiedDate":"2024-02-18"},{"lineNumber":38,"author":{"gitId":"agreatdayy"},"content":"        this.to \u003d description.substring(toIdx + 4, len - 1);","lastModifiedDate":"2024-02-18"},{"lineNumber":39,"author":{"gitId":"agreatdayy"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":40,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":41,"author":{"gitId":"agreatdayy"},"content":"    @Override","lastModifiedDate":"2024-02-18"},{"lineNumber":42,"author":{"gitId":"agreatdayy"},"content":"    public boolean isMatchKeyword(String keyword) {","lastModifiedDate":"2024-02-18"},{"lineNumber":43,"author":{"gitId":"agreatdayy"},"content":"        return this.name.toLowerCase().contains(keyword.toLowerCase());","lastModifiedDate":"2024-02-18"},{"lineNumber":44,"author":{"gitId":"agreatdayy"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":45,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":46,"author":{"gitId":"agreatdayy"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":47,"author":{"gitId":"agreatdayy"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":48,"author":{"gitId":"agreatdayy"},"content":"        return super.toString() + \"[E] \" + this.name","lastModifiedDate":"2024-02-18"},{"lineNumber":49,"author":{"gitId":"agreatdayy"},"content":"                + \" (from: \" + this.from + \" to: \" + this.to + \")\";","lastModifiedDate":"2024-02-18"},{"lineNumber":50,"author":{"gitId":"agreatdayy"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":51,"author":{"gitId":"agreatdayy"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"agreatdayy":51}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"agreatdayy"},"content":"package task;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"agreatdayy"},"content":"/**","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"agreatdayy"},"content":" * A Task object contains the status of the task.","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"agreatdayy"},"content":" */","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"agreatdayy"},"content":"public class Task {","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"agreatdayy"},"content":"    protected boolean isDone \u003d false;","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"agreatdayy"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"agreatdayy"},"content":"     * Constructor for initialising a Task object.","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"agreatdayy"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"agreatdayy"},"content":"    public Task() { }","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"agreatdayy"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"agreatdayy"},"content":"     * Constructor for loading from file.","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"agreatdayy"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"agreatdayy"},"content":"     * @param isDone Whether the task is completed.","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"agreatdayy"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"agreatdayy"},"content":"    public Task(boolean isDone) {","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"agreatdayy"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"agreatdayy"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"agreatdayy"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"agreatdayy"},"content":"     * Marks the task done.","lastModifiedDate":"2024-02-13"},{"lineNumber":25,"author":{"gitId":"agreatdayy"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"agreatdayy"},"content":"    public void markDone() {","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"agreatdayy"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-02-13"},{"lineNumber":28,"author":{"gitId":"agreatdayy"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"agreatdayy"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"agreatdayy"},"content":"     * Unchecks the task.","lastModifiedDate":"2024-02-13"},{"lineNumber":32,"author":{"gitId":"agreatdayy"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":33,"author":{"gitId":"agreatdayy"},"content":"    public void markUndone() {","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"agreatdayy"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-13"},{"lineNumber":35,"author":{"gitId":"agreatdayy"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":36,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":37,"author":{"gitId":"agreatdayy"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":38,"author":{"gitId":"agreatdayy"},"content":"     * Checks if the task description contains the keyword.","lastModifiedDate":"2024-02-18"},{"lineNumber":39,"author":{"gitId":"agreatdayy"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":40,"author":{"gitId":"agreatdayy"},"content":"     * @param keyword To be checked in the task description.","lastModifiedDate":"2024-02-18"},{"lineNumber":41,"author":{"gitId":"agreatdayy"},"content":"     * @return true if contains keyword.","lastModifiedDate":"2024-02-18"},{"lineNumber":42,"author":{"gitId":"agreatdayy"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":43,"author":{"gitId":"agreatdayy"},"content":"    public boolean isMatchKeyword(String keyword) {","lastModifiedDate":"2024-02-18"},{"lineNumber":44,"author":{"gitId":"agreatdayy"},"content":"        return false;","lastModifiedDate":"2024-02-18"},{"lineNumber":45,"author":{"gitId":"agreatdayy"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":46,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":47,"author":{"gitId":"agreatdayy"},"content":"    @Override","lastModifiedDate":"2024-02-10"},{"lineNumber":48,"author":{"gitId":"agreatdayy"},"content":"    public String toString() {","lastModifiedDate":"2024-02-10"},{"lineNumber":49,"author":{"gitId":"agreatdayy"},"content":"        return isDone ? \"[x]\" : \"[ ]\";","lastModifiedDate":"2024-02-10"},{"lineNumber":50,"author":{"gitId":"agreatdayy"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":51,"author":{"gitId":"agreatdayy"},"content":"}","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"agreatdayy":51}},{"path":"src/main/java/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"agreatdayy"},"content":"package task;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"agreatdayy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"agreatdayy"},"content":"import java.util.List;","lastModifiedDate":"2024-02-18"},{"lineNumber":5,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"agreatdayy"},"content":"/**","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"agreatdayy"},"content":" * This class contains a list of the tasks added by the user.","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"agreatdayy"},"content":" */","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"agreatdayy"},"content":"public class TaskList {","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"agreatdayy"},"content":"    private final List\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-18"},{"lineNumber":11,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"agreatdayy"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"agreatdayy"},"content":"     * Constructor for TaskList class with a new task list.","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"agreatdayy"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"agreatdayy"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"agreatdayy"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-02-18"},{"lineNumber":17,"author":{"gitId":"agreatdayy"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"agreatdayy"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"agreatdayy"},"content":"     * Constructor for TaskList class with an existing task list.","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"agreatdayy"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":22,"author":{"gitId":"agreatdayy"},"content":"     * @param tasks An existing task list.","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"agreatdayy"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"agreatdayy"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-18"},{"lineNumber":25,"author":{"gitId":"agreatdayy"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"agreatdayy"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"agreatdayy"},"content":"    public List\u003cTask\u003e getTaskList() {","lastModifiedDate":"2024-02-18"},{"lineNumber":29,"author":{"gitId":"agreatdayy"},"content":"        return this.tasks;","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"agreatdayy"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"agreatdayy"},"content":"    public int getSize() {","lastModifiedDate":"2024-02-10"},{"lineNumber":33,"author":{"gitId":"agreatdayy"},"content":"        return this.tasks.size();","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"agreatdayy"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":36,"author":{"gitId":"agreatdayy"},"content":"    public Task getTask(int idx) {","lastModifiedDate":"2024-02-10"},{"lineNumber":37,"author":{"gitId":"agreatdayy"},"content":"        return this.tasks.get(idx);","lastModifiedDate":"2024-02-10"},{"lineNumber":38,"author":{"gitId":"agreatdayy"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":39,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":40,"author":{"gitId":"agreatdayy"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":41,"author":{"gitId":"agreatdayy"},"content":"     * Checks if task list is empty.","lastModifiedDate":"2024-02-14"},{"lineNumber":42,"author":{"gitId":"agreatdayy"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":43,"author":{"gitId":"agreatdayy"},"content":"     * @return True if list is empty.","lastModifiedDate":"2024-02-14"},{"lineNumber":44,"author":{"gitId":"agreatdayy"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":45,"author":{"gitId":"agreatdayy"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2024-02-14"},{"lineNumber":46,"author":{"gitId":"agreatdayy"},"content":"        return this.tasks.isEmpty();","lastModifiedDate":"2024-02-14"},{"lineNumber":47,"author":{"gitId":"agreatdayy"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":48,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":49,"author":{"gitId":"agreatdayy"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":50,"author":{"gitId":"agreatdayy"},"content":"     * Removes a task from the list and returns the task details.","lastModifiedDate":"2024-02-14"},{"lineNumber":51,"author":{"gitId":"agreatdayy"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":52,"author":{"gitId":"agreatdayy"},"content":"     * @param idx The task number.","lastModifiedDate":"2024-02-14"},{"lineNumber":53,"author":{"gitId":"agreatdayy"},"content":"     * @return The message to be printed by ui.","lastModifiedDate":"2024-02-14"},{"lineNumber":54,"author":{"gitId":"agreatdayy"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":55,"author":{"gitId":"agreatdayy"},"content":"    public String deleteTask(int idx) {","lastModifiedDate":"2024-02-10"},{"lineNumber":56,"author":{"gitId":"agreatdayy"},"content":"        int taskCount \u003d this.getSize() - 1;","lastModifiedDate":"2024-02-10"},{"lineNumber":57,"author":{"gitId":"agreatdayy"},"content":"        String message \u003d \"Oink! Yosh I have removed this task:\\n\"","lastModifiedDate":"2024-02-13"},{"lineNumber":58,"author":{"gitId":"agreatdayy"},"content":"                + \" \u003e\u003e \" + this.getTask(idx) + \"\\nOink\u0027s task count: \" + taskCount + \"\\n\";","lastModifiedDate":"2024-02-13"},{"lineNumber":59,"author":{"gitId":"agreatdayy"},"content":"        this.tasks.remove(idx);","lastModifiedDate":"2024-02-10"},{"lineNumber":60,"author":{"gitId":"agreatdayy"},"content":"        return message;","lastModifiedDate":"2024-02-10"},{"lineNumber":61,"author":{"gitId":"agreatdayy"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":62,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":63,"author":{"gitId":"agreatdayy"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":64,"author":{"gitId":"agreatdayy"},"content":"     * Adds a task to the list and returns the task details.","lastModifiedDate":"2024-02-14"},{"lineNumber":65,"author":{"gitId":"agreatdayy"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":66,"author":{"gitId":"agreatdayy"},"content":"     * @param task The new task to be added.","lastModifiedDate":"2024-02-14"},{"lineNumber":67,"author":{"gitId":"agreatdayy"},"content":"     * @return The message to be printed by ui.","lastModifiedDate":"2024-02-14"},{"lineNumber":68,"author":{"gitId":"agreatdayy"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":69,"author":{"gitId":"agreatdayy"},"content":"    public String addTask(Task task) {","lastModifiedDate":"2024-02-10"},{"lineNumber":70,"author":{"gitId":"agreatdayy"},"content":"        this.tasks.add(task);","lastModifiedDate":"2024-02-10"},{"lineNumber":71,"author":{"gitId":"agreatdayy"},"content":"        return \"Oink! Nice I have added this task:\\n\"","lastModifiedDate":"2024-02-13"},{"lineNumber":72,"author":{"gitId":"agreatdayy"},"content":"                + \" \u003e\u003e \" + task + \"\\nOink\u0027s task count: \" + this.getSize() + \"\\n\";","lastModifiedDate":"2024-02-13"},{"lineNumber":73,"author":{"gitId":"agreatdayy"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":74,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":75,"author":{"gitId":"agreatdayy"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":76,"author":{"gitId":"agreatdayy"},"content":"     * Marks the task done and returns the task details.","lastModifiedDate":"2024-02-14"},{"lineNumber":77,"author":{"gitId":"agreatdayy"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":78,"author":{"gitId":"agreatdayy"},"content":"     * @param idx The task number.","lastModifiedDate":"2024-02-14"},{"lineNumber":79,"author":{"gitId":"agreatdayy"},"content":"     * @return The message to be printed by ui.","lastModifiedDate":"2024-02-14"},{"lineNumber":80,"author":{"gitId":"agreatdayy"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":81,"author":{"gitId":"agreatdayy"},"content":"    public String markTask(int idx) {","lastModifiedDate":"2024-02-10"},{"lineNumber":82,"author":{"gitId":"agreatdayy"},"content":"        this.getTask(idx).markDone();","lastModifiedDate":"2024-02-10"},{"lineNumber":83,"author":{"gitId":"agreatdayy"},"content":"        return \"Oink! You have completed this task! Nice nice nice\\n\"","lastModifiedDate":"2024-02-13"},{"lineNumber":84,"author":{"gitId":"agreatdayy"},"content":"                + \" \u003e\u003e \" + this.getTask(idx) + \"\\n\";","lastModifiedDate":"2024-02-10"},{"lineNumber":85,"author":{"gitId":"agreatdayy"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":86,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":87,"author":{"gitId":"agreatdayy"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":88,"author":{"gitId":"agreatdayy"},"content":"     * Marks the task done and returns the task details.","lastModifiedDate":"2024-02-14"},{"lineNumber":89,"author":{"gitId":"agreatdayy"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":90,"author":{"gitId":"agreatdayy"},"content":"     * @param idx The task number.","lastModifiedDate":"2024-02-14"},{"lineNumber":91,"author":{"gitId":"agreatdayy"},"content":"     * @return The message to be printed by ui.","lastModifiedDate":"2024-02-14"},{"lineNumber":92,"author":{"gitId":"agreatdayy"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":93,"author":{"gitId":"agreatdayy"},"content":"    public String unmarkTask(int idx) {","lastModifiedDate":"2024-02-10"},{"lineNumber":94,"author":{"gitId":"agreatdayy"},"content":"        this.getTask(idx).markUndone();","lastModifiedDate":"2024-02-10"},{"lineNumber":95,"author":{"gitId":"agreatdayy"},"content":"        return \"Oink! You have unmarked this task! Why why why\\n\"","lastModifiedDate":"2024-02-13"},{"lineNumber":96,"author":{"gitId":"agreatdayy"},"content":"                + \" \u003e\u003e \" + this.getTask(idx) + \"\\n\";","lastModifiedDate":"2024-02-10"},{"lineNumber":97,"author":{"gitId":"agreatdayy"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":98,"author":{"gitId":"agreatdayy"},"content":"}","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"agreatdayy":98}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"agreatdayy"},"content":"package task;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"agreatdayy"},"content":"/**","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"agreatdayy"},"content":" * Todos are tasks without any date/time attached to it.","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"agreatdayy"},"content":" */","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"agreatdayy"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"agreatdayy"},"content":"    protected String name;","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"agreatdayy"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"agreatdayy"},"content":"     * Constructor for a todo object.","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"agreatdayy"},"content":"     *","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"agreatdayy"},"content":"     * @param name task name","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"agreatdayy"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"agreatdayy"},"content":"    public Todo(String name) {","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"agreatdayy"},"content":"        super();","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"agreatdayy"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"agreatdayy"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"agreatdayy"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"agreatdayy"},"content":"     * Constructor for a loading from file.","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"agreatdayy"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"agreatdayy"},"content":"     * @param name The task name.","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"agreatdayy"},"content":"     * @param isDone Whether the task is completed.","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"agreatdayy"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"agreatdayy"},"content":"    public Todo(String name, boolean isDone) {","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"agreatdayy"},"content":"        super(isDone);","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"agreatdayy"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"agreatdayy"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"agreatdayy"},"content":"    @Override","lastModifiedDate":"2024-02-18"},{"lineNumber":31,"author":{"gitId":"agreatdayy"},"content":"    public boolean isMatchKeyword(String keyword) {","lastModifiedDate":"2024-02-18"},{"lineNumber":32,"author":{"gitId":"agreatdayy"},"content":"        return this.name.toLowerCase().contains(keyword.toLowerCase());","lastModifiedDate":"2024-02-18"},{"lineNumber":33,"author":{"gitId":"agreatdayy"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":34,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":35,"author":{"gitId":"agreatdayy"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":36,"author":{"gitId":"agreatdayy"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":37,"author":{"gitId":"agreatdayy"},"content":"        return super.toString() + \"[T] \" + this.name;","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"agreatdayy"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":39,"author":{"gitId":"agreatdayy"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"agreatdayy":39}},{"path":"src/test/java/chrisPBacon/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"agreatdayy"},"content":"package chrisPBacon;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"agreatdayy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"agreatdayy"},"content":"import exceptions.InvalidTaskNameException;","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"agreatdayy"},"content":"import task.TaskList;","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"agreatdayy"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"agreatdayy"},"content":"public class UiTest {","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"agreatdayy"},"content":"    @Test","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"agreatdayy"},"content":"    public void printTodo_invalidTaskNameExceptionThrown() {","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"agreatdayy"},"content":"        String errorMsg \u003d \"Ooink oink! What\u0027s the name of your task?\\n\"","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"agreatdayy"},"content":"                + \" \u003e\u003e todo ...\\n\";","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"agreatdayy"},"content":"        String userInput \u003d \"todo \";","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"agreatdayy"},"content":"        try {","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"agreatdayy"},"content":"            TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"agreatdayy"},"content":"            Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"agreatdayy"},"content":"            ui.printTodo(userInput, taskList);","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"agreatdayy"},"content":"            assertEquals(0, taskList.getSize());","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"agreatdayy"},"content":"            fail(); // the test should not reach this line","lastModifiedDate":"2024-02-13"},{"lineNumber":22,"author":{"gitId":"agreatdayy"},"content":"        } catch (InvalidTaskNameException e) {","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"agreatdayy"},"content":"            assertEquals(errorMsg, e.getMessage());","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"agreatdayy"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":25,"author":{"gitId":"agreatdayy"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":27,"author":{"gitId":"agreatdayy"},"content":"    @Test","lastModifiedDate":"2024-02-13"},{"lineNumber":28,"author":{"gitId":"agreatdayy"},"content":"    public void printDeadline_invalidTaskNameExceptionThrown(){","lastModifiedDate":"2024-02-13"},{"lineNumber":29,"author":{"gitId":"agreatdayy"},"content":"        String errorMsg \u003d \"Ooink oink! Please describe your deadline \u003e.\u003c\\n\"","lastModifiedDate":"2024-02-13"},{"lineNumber":30,"author":{"gitId":"agreatdayy"},"content":"                + \" \u003e\u003e deadline ... /by dd/MM/yyyy\\n\";","lastModifiedDate":"2024-02-13"},{"lineNumber":31,"author":{"gitId":"agreatdayy"},"content":"        String userInput \u003d \"deadline read book /by\";","lastModifiedDate":"2024-02-13"},{"lineNumber":32,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":33,"author":{"gitId":"agreatdayy"},"content":"        try {","lastModifiedDate":"2024-02-13"},{"lineNumber":34,"author":{"gitId":"agreatdayy"},"content":"            TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-02-13"},{"lineNumber":35,"author":{"gitId":"agreatdayy"},"content":"            Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-13"},{"lineNumber":36,"author":{"gitId":"agreatdayy"},"content":"            ui.printDeadline(userInput, taskList);","lastModifiedDate":"2024-02-13"},{"lineNumber":37,"author":{"gitId":"agreatdayy"},"content":"            assertEquals(0, taskList.getSize());","lastModifiedDate":"2024-02-13"},{"lineNumber":38,"author":{"gitId":"agreatdayy"},"content":"            fail(); // the test should not reach this line","lastModifiedDate":"2024-02-13"},{"lineNumber":39,"author":{"gitId":"agreatdayy"},"content":"        } catch (InvalidTaskNameException e) {","lastModifiedDate":"2024-02-13"},{"lineNumber":40,"author":{"gitId":"agreatdayy"},"content":"            assertEquals(errorMsg, e.getMessage());","lastModifiedDate":"2024-02-13"},{"lineNumber":41,"author":{"gitId":"agreatdayy"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":42,"author":{"gitId":"agreatdayy"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":43,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":44,"author":{"gitId":"agreatdayy"},"content":"    @Test","lastModifiedDate":"2024-02-13"},{"lineNumber":45,"author":{"gitId":"agreatdayy"},"content":"    public void printDeadline_dateTimeParseExceptionThrown(){","lastModifiedDate":"2024-02-13"},{"lineNumber":46,"author":{"gitId":"agreatdayy"},"content":"        String errorMsg \u003d \"Ooink oink! Please describe your deadline \u003e.\u003c\\n\"","lastModifiedDate":"2024-02-13"},{"lineNumber":47,"author":{"gitId":"agreatdayy"},"content":"                + \" \u003e\u003e deadline ... /by dd/MM/yyyy\\n\";","lastModifiedDate":"2024-02-13"},{"lineNumber":48,"author":{"gitId":"agreatdayy"},"content":"        String userInput \u003d \"deadline read book /by 22-10-2024\";","lastModifiedDate":"2024-02-13"},{"lineNumber":49,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":50,"author":{"gitId":"agreatdayy"},"content":"        try {","lastModifiedDate":"2024-02-13"},{"lineNumber":51,"author":{"gitId":"agreatdayy"},"content":"            TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-02-13"},{"lineNumber":52,"author":{"gitId":"agreatdayy"},"content":"            Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-13"},{"lineNumber":53,"author":{"gitId":"agreatdayy"},"content":"            ui.printDeadline(userInput, taskList);","lastModifiedDate":"2024-02-13"},{"lineNumber":54,"author":{"gitId":"agreatdayy"},"content":"            assertEquals(0, taskList.getSize()); // Exception is handled.","lastModifiedDate":"2024-02-13"},{"lineNumber":55,"author":{"gitId":"agreatdayy"},"content":"        } catch (InvalidTaskNameException e) {","lastModifiedDate":"2024-02-13"},{"lineNumber":56,"author":{"gitId":"agreatdayy"},"content":"            fail(); // the test should not reach this line","lastModifiedDate":"2024-02-13"},{"lineNumber":57,"author":{"gitId":"agreatdayy"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":58,"author":{"gitId":"agreatdayy"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":59,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":60,"author":{"gitId":"agreatdayy"},"content":"    @Test","lastModifiedDate":"2024-02-13"},{"lineNumber":61,"author":{"gitId":"agreatdayy"},"content":"    public void printEvent_invalidTaskNameExceptionThrown(){","lastModifiedDate":"2024-02-13"},{"lineNumber":62,"author":{"gitId":"agreatdayy"},"content":"        String errorMsg \u003d \"Ooink oink! Please describe your event \u003e.\u003c\\n\"","lastModifiedDate":"2024-02-13"},{"lineNumber":63,"author":{"gitId":"agreatdayy"},"content":"                + \" \u003e\u003e event ... /from ... /to ...\\n\";","lastModifiedDate":"2024-02-13"},{"lineNumber":64,"author":{"gitId":"agreatdayy"},"content":"        String userInput \u003d \"event read book /from tdy /to\";","lastModifiedDate":"2024-02-13"},{"lineNumber":65,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":66,"author":{"gitId":"agreatdayy"},"content":"        try {","lastModifiedDate":"2024-02-13"},{"lineNumber":67,"author":{"gitId":"agreatdayy"},"content":"            TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-02-13"},{"lineNumber":68,"author":{"gitId":"agreatdayy"},"content":"            Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-13"},{"lineNumber":69,"author":{"gitId":"agreatdayy"},"content":"            ui.printEvent(userInput, taskList);","lastModifiedDate":"2024-02-13"},{"lineNumber":70,"author":{"gitId":"agreatdayy"},"content":"            assertEquals(0, taskList.getSize());","lastModifiedDate":"2024-02-13"},{"lineNumber":71,"author":{"gitId":"agreatdayy"},"content":"            fail(); // the test should not reach this line","lastModifiedDate":"2024-02-13"},{"lineNumber":72,"author":{"gitId":"agreatdayy"},"content":"        } catch (InvalidTaskNameException e) {","lastModifiedDate":"2024-02-13"},{"lineNumber":73,"author":{"gitId":"agreatdayy"},"content":"            assertEquals(errorMsg, e.getMessage());","lastModifiedDate":"2024-02-13"},{"lineNumber":74,"author":{"gitId":"agreatdayy"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":75,"author":{"gitId":"agreatdayy"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":76,"author":{"gitId":"agreatdayy"},"content":"}","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"agreatdayy":76}},{"path":"src/test/java/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"agreatdayy"},"content":"package task;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"agreatdayy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"agreatdayy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"agreatdayy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"agreatdayy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"agreatdayy"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"agreatdayy"},"content":"public class TaskListTest {","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"agreatdayy"},"content":"    public TaskList sampleTaskList() {","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"agreatdayy"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"agreatdayy"},"content":"        tasks.add(new Todo(\"drink bbt\"));","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":16,"author":{"gitId":"agreatdayy"},"content":"        LocalDate date \u003d LocalDate.parse(\"15/02/2023\", DateTimeFormatter.ofPattern(\"d/MM/yyyy\"));","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"agreatdayy"},"content":"        tasks.add(new Deadline(\"make bbt\",  date));","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":19,"author":{"gitId":"agreatdayy"},"content":"        String[] description \u003d {\"sell bbt\", \"tdy\", \"tmr\"};","lastModifiedDate":"2024-02-18"},{"lineNumber":20,"author":{"gitId":"agreatdayy"},"content":"        Task event \u003d new Event(description);","lastModifiedDate":"2024-02-18"},{"lineNumber":21,"author":{"gitId":"agreatdayy"},"content":"        event.markDone();","lastModifiedDate":"2024-02-13"},{"lineNumber":22,"author":{"gitId":"agreatdayy"},"content":"        tasks.add(event);","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"agreatdayy"},"content":"        return new TaskList(tasks);","lastModifiedDate":"2024-02-13"},{"lineNumber":25,"author":{"gitId":"agreatdayy"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":27,"author":{"gitId":"agreatdayy"},"content":"    @Test","lastModifiedDate":"2024-02-13"},{"lineNumber":28,"author":{"gitId":"agreatdayy"},"content":"    public void deleteTaskTest() {","lastModifiedDate":"2024-02-13"},{"lineNumber":29,"author":{"gitId":"agreatdayy"},"content":"        // Delete task 1.","lastModifiedDate":"2024-02-13"},{"lineNumber":30,"author":{"gitId":"agreatdayy"},"content":"        TaskList sampleList \u003d sampleTaskList();","lastModifiedDate":"2024-02-13"},{"lineNumber":31,"author":{"gitId":"agreatdayy"},"content":"        Task deletedTask \u003d sampleList.getTask(0);","lastModifiedDate":"2024-02-13"},{"lineNumber":32,"author":{"gitId":"agreatdayy"},"content":"        sampleList.deleteTask(0);","lastModifiedDate":"2024-02-13"},{"lineNumber":33,"author":{"gitId":"agreatdayy"},"content":"        // Test if task 1 is indeed deleted.","lastModifiedDate":"2024-02-13"},{"lineNumber":34,"author":{"gitId":"agreatdayy"},"content":"        assertFalse(sampleList.getTaskList().contains(deletedTask));","lastModifiedDate":"2024-02-17"},{"lineNumber":35,"author":{"gitId":"agreatdayy"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":36,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":37,"author":{"gitId":"agreatdayy"},"content":"    @Test","lastModifiedDate":"2024-02-13"},{"lineNumber":38,"author":{"gitId":"agreatdayy"},"content":"    public void addTaskTest() {","lastModifiedDate":"2024-02-13"},{"lineNumber":39,"author":{"gitId":"agreatdayy"},"content":"        // Add a todo task.","lastModifiedDate":"2024-02-13"},{"lineNumber":40,"author":{"gitId":"agreatdayy"},"content":"        TaskList sampleList \u003d sampleTaskList();","lastModifiedDate":"2024-02-13"},{"lineNumber":41,"author":{"gitId":"agreatdayy"},"content":"        Task taskToAdd \u003d new Todo(\"buy milk\");","lastModifiedDate":"2024-02-13"},{"lineNumber":42,"author":{"gitId":"agreatdayy"},"content":"        sampleList.addTask(taskToAdd);","lastModifiedDate":"2024-02-13"},{"lineNumber":43,"author":{"gitId":"agreatdayy"},"content":"        // Test if the todo task is indeed added to the list.","lastModifiedDate":"2024-02-13"},{"lineNumber":44,"author":{"gitId":"agreatdayy"},"content":"        assertTrue(sampleList.getTaskList().contains(taskToAdd));","lastModifiedDate":"2024-02-17"},{"lineNumber":45,"author":{"gitId":"agreatdayy"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":46,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":47,"author":{"gitId":"agreatdayy"},"content":"    @Test","lastModifiedDate":"2024-02-13"},{"lineNumber":48,"author":{"gitId":"agreatdayy"},"content":"    public void markTaskTest() {","lastModifiedDate":"2024-02-13"},{"lineNumber":49,"author":{"gitId":"agreatdayy"},"content":"        // Mark task 2 done.","lastModifiedDate":"2024-02-13"},{"lineNumber":50,"author":{"gitId":"agreatdayy"},"content":"        TaskList sampleList \u003d sampleTaskList();","lastModifiedDate":"2024-02-13"},{"lineNumber":51,"author":{"gitId":"agreatdayy"},"content":"        sampleList.markTask(1);","lastModifiedDate":"2024-02-13"},{"lineNumber":52,"author":{"gitId":"agreatdayy"},"content":"        // Test if task 2 is indeed marked done.","lastModifiedDate":"2024-02-13"},{"lineNumber":53,"author":{"gitId":"agreatdayy"},"content":"        assertEquals(\"[x]\", sampleList.getTask(1).toString().substring(0, 3));","lastModifiedDate":"2024-02-13"},{"lineNumber":54,"author":{"gitId":"agreatdayy"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":55,"author":{"gitId":"agreatdayy"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":56,"author":{"gitId":"agreatdayy"},"content":"    @Test","lastModifiedDate":"2024-02-13"},{"lineNumber":57,"author":{"gitId":"agreatdayy"},"content":"    public void unmarkTaskTest() {","lastModifiedDate":"2024-02-13"},{"lineNumber":58,"author":{"gitId":"agreatdayy"},"content":"        // Mark the completed task 3 undone.","lastModifiedDate":"2024-02-13"},{"lineNumber":59,"author":{"gitId":"agreatdayy"},"content":"        TaskList sampleList \u003d sampleTaskList();","lastModifiedDate":"2024-02-13"},{"lineNumber":60,"author":{"gitId":"agreatdayy"},"content":"        sampleList.unmarkTask(2);","lastModifiedDate":"2024-02-13"},{"lineNumber":61,"author":{"gitId":"agreatdayy"},"content":"        // Test if task 3 is indeed marked undone.","lastModifiedDate":"2024-02-13"},{"lineNumber":62,"author":{"gitId":"agreatdayy"},"content":"        assertEquals(\"[ ]\", sampleList.getTask(2).toString().substring(0, 3));","lastModifiedDate":"2024-02-13"},{"lineNumber":63,"author":{"gitId":"agreatdayy"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":64,"author":{"gitId":"agreatdayy"},"content":"}","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"agreatdayy":64}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"agreatdayy"},"content":"help","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"agreatdayy"},"content":"todo drink bbt","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"agreatdayy"},"content":"deadline make bbt /by tonight","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"agreatdayy"},"content":"event sell bbt /from tmr /to next monday","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"agreatdayy"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"agreatdayy"},"content":"mark 1","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"agreatdayy"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"agreatdayy"},"content":"unmark 1","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"agreatdayy"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"agreatdayy"},"content":"delete 2","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"agreatdayy"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"agreatdayy"},"content":"bye","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"agreatdayy":12}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"agreatdayy"},"content":"if not exist C:\\Users\\xylee\\code\\CS2103T\\ip\\bin mkdir C:\\Users\\xylee\\code\\CS2103T\\ip\\bin","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"agreatdayy"},"content":"javac  -cp C:\\Users\\xylee\\code\\CS2103T\\ip\\src\\main\\java -Xlint:none -d C:\\Users\\xylee\\code\\CS2103T\\ip\\bin C:\\Users\\xylee\\code\\CS2103T\\ip\\src\\main\\java\\*.java","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"agreatdayy"},"content":"java -classpath C:\\Users\\xylee\\code\\CS2103T\\ip\\bin seedu.chrisPBacon.seedu.chrisPBacon \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"agreatdayy":3,"-":18}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"agreatdayy"},"content":"if [ ! -d \"C:/Users/xylee/code/CS2103T/ip/bin\" ]","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"agreatdayy"},"content":"    mkdir C:/Users/xylee/code/CS2103T/ip/bin","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"agreatdayy"},"content":"if ! javac -cp C:/Users/xylee/code/CS2103T/ip/src/main/java -Xlint:none -d C:/Users/xylee/code/CS2103T/ip/bin C:/Users/xylee/code/CS2103T/ip/src/main/java/src/main/java/*.java","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"agreatdayy"},"content":"java -classpath C:/Users/xylee/code/CS2103T/ip/bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"agreatdayy":4,"-":34}}]
