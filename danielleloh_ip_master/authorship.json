[{"path":"src/main/java/Scribbles.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielleloh"},"content":"package scribbles;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"danielleloh"},"content":"import parser.Parser;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"danielleloh"},"content":"import storage.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"danielleloh"},"content":"import task.Deadline;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"danielleloh"},"content":"import task.Event;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"danielleloh"},"content":"import task.Todo;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"danielleloh"},"content":"import tasklist.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"danielleloh"},"content":"import ui.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"danielleloh"},"content":"import java.io.*;","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"danielleloh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"danielleloh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"danielleloh"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"danielleloh"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"danielleloh"},"content":" * This class implements the chatbot Scribbles.","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"danielleloh"},"content":" *","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"danielleloh"},"content":" * @author danielle","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"danielleloh"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"danielleloh"},"content":"public class Scribbles {","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"danielleloh"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"danielleloh"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"danielleloh"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"danielleloh"},"content":"    private String filePath;","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"danielleloh"},"content":"    private Scanner scanner;","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"danielleloh"},"content":"    public Scribbles(String filePath) {","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"danielleloh"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"danielleloh"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"danielleloh"},"content":"        storage \u003d new Storage(this.filePath);","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"danielleloh"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"danielleloh"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"danielleloh"},"content":"     * Checks if file path exists.","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"danielleloh"},"content":"     * Creates file path if it does not exist.","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"danielleloh"},"content":"    public void loadFileScribbles() {","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"danielleloh"},"content":"        File f \u003d new File(this.filePath);","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"danielleloh"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"danielleloh"},"content":"            // check if filePath directory exists","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"danielleloh"},"content":"            File directory \u003d f.getParentFile();","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"danielleloh"},"content":"            if (!directory.exists()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"danielleloh"},"content":"                boolean hasCreatedDirectory \u003d directory.mkdir();","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"danielleloh"},"content":"                if (!hasCreatedDirectory) {","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"danielleloh"},"content":"                    System.out.println(\"Failed to create directory for file.\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"danielleloh"},"content":"                }","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"danielleloh"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"danielleloh"},"content":"            // Check if filePath file exists","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"danielleloh"},"content":"            if (!f.exists()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"danielleloh"},"content":"                boolean hasCreatedFile \u003d f.createNewFile();","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"danielleloh"},"content":"                if (!hasCreatedFile) {","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"danielleloh"},"content":"                    System.out.println(\"Failed to create file.\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"danielleloh"},"content":"                }","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"danielleloh"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"danielleloh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"danielleloh"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"danielleloh"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"danielleloh"},"content":"    public void run() {","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"danielleloh"},"content":"        // load file for Scribbles","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"danielleloh"},"content":"        loadFileScribbles();","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"danielleloh"},"content":"        // load data from file into task list","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"danielleloh"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":74,"author":{"gitId":"danielleloh"},"content":"            storage.loadFileData(taskList);","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"danielleloh"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":76,"author":{"gitId":"danielleloh"},"content":"            System.out.println(\"File not found.\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"danielleloh"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":78,"author":{"gitId":"danielleloh"},"content":"        //stopped here","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":80,"author":{"gitId":"danielleloh"},"content":"        // Greets the user","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"danielleloh"},"content":"        ui.greet();","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"danielleloh"},"content":"        boolean isByeCommand \u003d false;","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"danielleloh"},"content":"        while (!isByeCommand) {","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"danielleloh"},"content":"            String input \u003d scanner.nextLine();","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"danielleloh"},"content":"            isByeCommand \u003d parseInput(input);","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"danielleloh"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":88,"author":{"gitId":"danielleloh"},"content":"        scanner.close();","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":90,"author":{"gitId":"danielleloh"},"content":"        // Exits","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"danielleloh"},"content":"        ui.exit();","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":93,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":94,"author":{"gitId":"danielleloh"},"content":"    public boolean parseInput(String input) {","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"danielleloh"},"content":"        Parser parsedInput \u003d new Parser(input);","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"danielleloh"},"content":"        String command \u003d parsedInput.getCommand();","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":98,"author":{"gitId":"danielleloh"},"content":"        switch (command){","lastModifiedDate":"2024-02-01"},{"lineNumber":99,"author":{"gitId":"danielleloh"},"content":"            case \"bye\":","lastModifiedDate":"2024-02-01"},{"lineNumber":100,"author":{"gitId":"danielleloh"},"content":"                return true;","lastModifiedDate":"2024-02-01"},{"lineNumber":101,"author":{"gitId":"danielleloh"},"content":"            case \"list\":","lastModifiedDate":"2024-02-01"},{"lineNumber":102,"author":{"gitId":"danielleloh"},"content":"                ui.listTask(taskList);","lastModifiedDate":"2024-02-01"},{"lineNumber":103,"author":{"gitId":"danielleloh"},"content":"                break;","lastModifiedDate":"2024-02-01"},{"lineNumber":104,"author":{"gitId":"danielleloh"},"content":"            case \"mark\":","lastModifiedDate":"2024-02-01"},{"lineNumber":105,"author":{"gitId":"danielleloh"},"content":"                try {","lastModifiedDate":"2024-01-30"},{"lineNumber":106,"author":{"gitId":"danielleloh"},"content":"                    int index \u003d parsedInput.getIndex();","lastModifiedDate":"2024-02-01"},{"lineNumber":107,"author":{"gitId":"danielleloh"},"content":"                    taskList.get(index - 1).markComplete();","lastModifiedDate":"2024-02-01"},{"lineNumber":108,"author":{"gitId":"danielleloh"},"content":"                    ui.markCompletedMessage(index, taskList);","lastModifiedDate":"2024-02-01"},{"lineNumber":109,"author":{"gitId":"danielleloh"},"content":"                    storage.saveFileData(taskList);","lastModifiedDate":"2024-02-01"},{"lineNumber":110,"author":{"gitId":"danielleloh"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":111,"author":{"gitId":"danielleloh"},"content":"                    ui.invalidIndexMessage(taskList);","lastModifiedDate":"2024-02-01"},{"lineNumber":112,"author":{"gitId":"danielleloh"},"content":"                } catch (FileNotFoundException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":113,"author":{"gitId":"danielleloh"},"content":"                    ui.fileNotFoundMessage();","lastModifiedDate":"2024-02-01"},{"lineNumber":114,"author":{"gitId":"danielleloh"},"content":"                }","lastModifiedDate":"2024-01-30"},{"lineNumber":115,"author":{"gitId":"danielleloh"},"content":"                break;","lastModifiedDate":"2024-02-01"},{"lineNumber":116,"author":{"gitId":"danielleloh"},"content":"            case \"unmark\":","lastModifiedDate":"2024-02-01"},{"lineNumber":117,"author":{"gitId":"danielleloh"},"content":"                try {","lastModifiedDate":"2024-02-01"},{"lineNumber":118,"author":{"gitId":"danielleloh"},"content":"                    int index \u003d parsedInput.getIndex();","lastModifiedDate":"2024-02-01"},{"lineNumber":119,"author":{"gitId":"danielleloh"},"content":"                    taskList.get(index - 1).markIncomplete();","lastModifiedDate":"2024-02-01"},{"lineNumber":120,"author":{"gitId":"danielleloh"},"content":"                    ui.markIncompleteMessage(index, taskList);","lastModifiedDate":"2024-02-01"},{"lineNumber":121,"author":{"gitId":"danielleloh"},"content":"                    storage.saveFileData(taskList);","lastModifiedDate":"2024-02-01"},{"lineNumber":122,"author":{"gitId":"danielleloh"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":123,"author":{"gitId":"danielleloh"},"content":"                    ui.invalidIndexMessage(taskList);","lastModifiedDate":"2024-02-01"},{"lineNumber":124,"author":{"gitId":"danielleloh"},"content":"                } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":125,"author":{"gitId":"danielleloh"},"content":"                    ui.fileNotFoundMessage();","lastModifiedDate":"2024-02-01"},{"lineNumber":126,"author":{"gitId":"danielleloh"},"content":"                }","lastModifiedDate":"2024-01-30"},{"lineNumber":127,"author":{"gitId":"danielleloh"},"content":"                break;","lastModifiedDate":"2024-02-01"},{"lineNumber":128,"author":{"gitId":"danielleloh"},"content":"            case \"todo\":","lastModifiedDate":"2024-02-01"},{"lineNumber":129,"author":{"gitId":"danielleloh"},"content":"                try {","lastModifiedDate":"2024-01-30"},{"lineNumber":130,"author":{"gitId":"danielleloh"},"content":"                    String description \u003d parsedInput.getTodoDescription();","lastModifiedDate":"2024-02-01"},{"lineNumber":131,"author":{"gitId":"danielleloh"},"content":"                    taskList.addTask(new Todo(description, false));","lastModifiedDate":"2024-02-01"},{"lineNumber":132,"author":{"gitId":"danielleloh"},"content":"                    ui.confirmTaskAddition(taskList);","lastModifiedDate":"2024-02-01"},{"lineNumber":133,"author":{"gitId":"danielleloh"},"content":"                    storage.saveFileData(taskList);","lastModifiedDate":"2024-02-01"},{"lineNumber":134,"author":{"gitId":"danielleloh"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":135,"author":{"gitId":"danielleloh"},"content":"                    ui.taskMissingInformationMessage();","lastModifiedDate":"2024-02-01"},{"lineNumber":136,"author":{"gitId":"danielleloh"},"content":"                } catch (FileNotFoundException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":137,"author":{"gitId":"danielleloh"},"content":"                    ui.fileNotFoundMessage();","lastModifiedDate":"2024-02-01"},{"lineNumber":138,"author":{"gitId":"danielleloh"},"content":"                }","lastModifiedDate":"2024-01-30"},{"lineNumber":139,"author":{"gitId":"danielleloh"},"content":"                break;","lastModifiedDate":"2024-02-01"},{"lineNumber":140,"author":{"gitId":"danielleloh"},"content":"            case \"deadline\":","lastModifiedDate":"2024-02-01"},{"lineNumber":141,"author":{"gitId":"danielleloh"},"content":"                if (parsedInput.isMissingDeadlineInformation()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":142,"author":{"gitId":"danielleloh"},"content":"                    ui.taskMissingInformationMessage();","lastModifiedDate":"2024-02-01"},{"lineNumber":143,"author":{"gitId":"danielleloh"},"content":"                } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":144,"author":{"gitId":"danielleloh"},"content":"                    try {","lastModifiedDate":"2024-02-01"},{"lineNumber":145,"author":{"gitId":"danielleloh"},"content":"                        String description \u003d parsedInput.getDeadlineDescription();","lastModifiedDate":"2024-02-01"},{"lineNumber":146,"author":{"gitId":"danielleloh"},"content":"                        LocalDateTime by \u003d parsedInput.getDeadlineBy();","lastModifiedDate":"2024-02-01"},{"lineNumber":147,"author":{"gitId":"danielleloh"},"content":"                        taskList.addTask(new Deadline(description, false, by));","lastModifiedDate":"2024-02-01"},{"lineNumber":148,"author":{"gitId":"danielleloh"},"content":"                        ui.confirmTaskAddition(taskList);","lastModifiedDate":"2024-02-01"},{"lineNumber":149,"author":{"gitId":"danielleloh"},"content":"                        storage.saveFileData(taskList);","lastModifiedDate":"2024-02-01"},{"lineNumber":150,"author":{"gitId":"danielleloh"},"content":"                    } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":151,"author":{"gitId":"danielleloh"},"content":"                        ui.taskMissingInformationMessage();","lastModifiedDate":"2024-02-01"},{"lineNumber":152,"author":{"gitId":"danielleloh"},"content":"                    } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":153,"author":{"gitId":"danielleloh"},"content":"                        ui.wrongDateTimeFormatMessage();","lastModifiedDate":"2024-02-01"},{"lineNumber":154,"author":{"gitId":"danielleloh"},"content":"                    } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":155,"author":{"gitId":"danielleloh"},"content":"                        ui.fileNotFoundMessage();","lastModifiedDate":"2024-02-01"},{"lineNumber":156,"author":{"gitId":"danielleloh"},"content":"                    }","lastModifiedDate":"2024-01-30"},{"lineNumber":157,"author":{"gitId":"danielleloh"},"content":"                }","lastModifiedDate":"2024-01-30"},{"lineNumber":158,"author":{"gitId":"danielleloh"},"content":"                break;","lastModifiedDate":"2024-01-30"},{"lineNumber":159,"author":{"gitId":"danielleloh"},"content":"            case \"event\":","lastModifiedDate":"2024-02-01"},{"lineNumber":160,"author":{"gitId":"danielleloh"},"content":"                if (parsedInput.isInvalidEvent()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":161,"author":{"gitId":"danielleloh"},"content":"                    ui.taskMissingInformationMessage();","lastModifiedDate":"2024-02-01"},{"lineNumber":162,"author":{"gitId":"danielleloh"},"content":"                } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":163,"author":{"gitId":"danielleloh"},"content":"                    try {","lastModifiedDate":"2024-01-31"},{"lineNumber":164,"author":{"gitId":"danielleloh"},"content":"                        String description \u003d parsedInput.getEventDescription();","lastModifiedDate":"2024-02-01"},{"lineNumber":165,"author":{"gitId":"danielleloh"},"content":"                        LocalDateTime start \u003d parsedInput.getStartDateTime();","lastModifiedDate":"2024-02-01"},{"lineNumber":166,"author":{"gitId":"danielleloh"},"content":"                        LocalDateTime end \u003d parsedInput.getEndDateTime();","lastModifiedDate":"2024-02-01"},{"lineNumber":167,"author":{"gitId":"danielleloh"},"content":"                        taskList.addTask(new Event(description, false, start, end));","lastModifiedDate":"2024-02-01"},{"lineNumber":168,"author":{"gitId":"danielleloh"},"content":"                        ui.confirmTaskAddition(taskList);","lastModifiedDate":"2024-02-01"},{"lineNumber":169,"author":{"gitId":"danielleloh"},"content":"                        storage.saveFileData(taskList);","lastModifiedDate":"2024-02-01"},{"lineNumber":170,"author":{"gitId":"danielleloh"},"content":"                    } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":171,"author":{"gitId":"danielleloh"},"content":"                        ui.taskMissingInformationMessage();","lastModifiedDate":"2024-02-01"},{"lineNumber":172,"author":{"gitId":"danielleloh"},"content":"                    } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":173,"author":{"gitId":"danielleloh"},"content":"                        ui.wrongDateTimeFormatMessage();","lastModifiedDate":"2024-02-01"},{"lineNumber":174,"author":{"gitId":"danielleloh"},"content":"                    } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":175,"author":{"gitId":"danielleloh"},"content":"                        ui.fileNotFoundMessage();","lastModifiedDate":"2024-02-01"},{"lineNumber":176,"author":{"gitId":"danielleloh"},"content":"                    }","lastModifiedDate":"2024-02-01"},{"lineNumber":177,"author":{"gitId":"danielleloh"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":178,"author":{"gitId":"danielleloh"},"content":"                break;","lastModifiedDate":"2024-01-30"},{"lineNumber":179,"author":{"gitId":"danielleloh"},"content":"            case \"delete\":","lastModifiedDate":"2024-02-01"},{"lineNumber":180,"author":{"gitId":"danielleloh"},"content":"                try {","lastModifiedDate":"2024-01-31"},{"lineNumber":181,"author":{"gitId":"danielleloh"},"content":"                    int index \u003d parsedInput.getIndex();","lastModifiedDate":"2024-02-01"},{"lineNumber":182,"author":{"gitId":"danielleloh"},"content":"                    String taskRemoved \u003d taskList.get(index - 1).toString();","lastModifiedDate":"2024-02-01"},{"lineNumber":183,"author":{"gitId":"danielleloh"},"content":"                    taskList.deleteTask(index - 1);","lastModifiedDate":"2024-02-01"},{"lineNumber":184,"author":{"gitId":"danielleloh"},"content":"                    ui.taskDeletionMessage(taskRemoved, taskList);","lastModifiedDate":"2024-02-01"},{"lineNumber":185,"author":{"gitId":"danielleloh"},"content":"                    storage.saveFileData(taskList);","lastModifiedDate":"2024-02-01"},{"lineNumber":186,"author":{"gitId":"danielleloh"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":187,"author":{"gitId":"danielleloh"},"content":"                    ui.invalidIndexMessage(taskList);","lastModifiedDate":"2024-02-01"},{"lineNumber":188,"author":{"gitId":"danielleloh"},"content":"                } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":189,"author":{"gitId":"danielleloh"},"content":"                    ui.fileNotFoundMessage();","lastModifiedDate":"2024-02-01"},{"lineNumber":190,"author":{"gitId":"danielleloh"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":191,"author":{"gitId":"danielleloh"},"content":"                break;","lastModifiedDate":"2024-01-30"},{"lineNumber":192,"author":{"gitId":"danielleloh"},"content":"            default:","lastModifiedDate":"2024-01-30"},{"lineNumber":193,"author":{"gitId":"danielleloh"},"content":"                ui.invalidInputMessage();","lastModifiedDate":"2024-02-01"},{"lineNumber":194,"author":{"gitId":"danielleloh"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":195,"author":{"gitId":"danielleloh"},"content":"        return false;","lastModifiedDate":"2024-02-01"},{"lineNumber":196,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":197,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":198,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":199,"author":{"gitId":"danielleloh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-30"},{"lineNumber":200,"author":{"gitId":"danielleloh"},"content":"        new Scribbles(\"src/main/java/taskData.txt\").run();","lastModifiedDate":"2024-02-01"},{"lineNumber":201,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":202,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":203,"author":{"gitId":"danielleloh"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"danielleloh":203}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielleloh"},"content":"package parser;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"danielleloh"},"content":"import ui.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"danielleloh"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"danielleloh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"danielleloh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"danielleloh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"danielleloh"},"content":"public class Parser {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"danielleloh"},"content":"    private String input;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"danielleloh"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"danielleloh"},"content":"    public Parser(String input) {","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"danielleloh"},"content":"        this.input \u003d input;","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"danielleloh"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"danielleloh"},"content":"     * Gets the first word of instruction, which is the main command for following actions.","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"danielleloh"},"content":"     * @return The first word of input","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"danielleloh"},"content":"    public String getCommand() {","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"danielleloh"},"content":"        String[] inputParts \u003d this.input.split(\"\\\\s+\");","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"danielleloh"},"content":"        return inputParts[0];","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"danielleloh"},"content":"     * Gets the index of task to perform command on in input.","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"danielleloh"},"content":"     * @return index of task to perform instruction on","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"danielleloh"},"content":"     * @throws IndexOutOfBoundsException If user leaves out index from instructions","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"danielleloh"},"content":"    public int getIndex() throws IndexOutOfBoundsException {","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"danielleloh"},"content":"        String[] inputParts \u003d this.input.split(\"\\\\s+\");","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"danielleloh"},"content":"        String indexString \u003d inputParts[1].trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"danielleloh"},"content":"        int index \u003d Integer.parseInt(indexString);","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"danielleloh"},"content":"        return index;","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"danielleloh"},"content":"     * Gets the description of the to-do task in input","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"danielleloh"},"content":"     * @return Description of task","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"danielleloh"},"content":"     * @throws IndexOutOfBoundsException If user leaves the description blank","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"danielleloh"},"content":"    public String getTodoDescription() throws IndexOutOfBoundsException {","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"danielleloh"},"content":"        String[] inputParts \u003d this.input.split(\"\\\\s+\");","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"danielleloh"},"content":"        String description \u003d inputParts[1].trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"danielleloh"},"content":"        return description;","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"danielleloh"},"content":"     * Checks if there are missing information in deadline instructions.","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"danielleloh"},"content":"     * @return true if there are missing information.","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"danielleloh"},"content":"     * @throws IndexOutOfBoundsException If date/time string is missing","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"danielleloh"},"content":"    public boolean isMissingDeadlineInformation() throws IndexOutOfBoundsException {","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"danielleloh"},"content":"        if (!this.input.contains(\" /by \")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"danielleloh"},"content":"            return true;","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"danielleloh"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"danielleloh"},"content":"        if ((this.input.split(\"\\\\s+\", 2)[1].split(\"\\\\s+/by\\\\s+\", 2)[0].trim().isEmpty())) {","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"danielleloh"},"content":"            return true;","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"danielleloh"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"danielleloh"},"content":"        if ((this.input.split(\"\\\\s+\", 2)[1].split(\"\\\\s+/by\\\\s+\", 2)[1].isEmpty())) {","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"danielleloh"},"content":"            return true;","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"danielleloh"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"danielleloh"},"content":"        return false;","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"danielleloh"},"content":"     * Gets the description of the deadline task.","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"danielleloh"},"content":"     * @return Description of deadline","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"danielleloh"},"content":"    public String getDeadlineDescription() {","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"danielleloh"},"content":"        return this.input.split(\"\\\\s+\", 2)[1].split(\"\\\\s+/by\\\\s+\", 2)[0].trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"danielleloh"},"content":"     * Gets the date/time of the deadline.","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"danielleloh"},"content":"     * @return Date and time of deadline","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"danielleloh"},"content":"     * @throws IndexOutOfBoundsException If date/time are missing from instruction","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"danielleloh"},"content":"     * @throws DateTimeParseException If date/time String are in the wrong format","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"danielleloh"},"content":"    public LocalDateTime getDeadlineBy() throws IndexOutOfBoundsException, DateTimeParseException {","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"danielleloh"},"content":"        String dateTime \u003d this.input.split(\"\\\\s+\", 2)[1].split(\"\\\\s+/by\\\\s+\")[1].trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"danielleloh"},"content":"        DateTimeFormatter dateTimeFormat \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"danielleloh"},"content":"        LocalDateTime by \u003d LocalDateTime.parse(dateTime, dateTimeFormat);","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"danielleloh"},"content":"        return by;","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"danielleloh"},"content":"     * Checks if there are missing information in event instructions.","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":99,"author":{"gitId":"danielleloh"},"content":"     * @return true if there are missing information","lastModifiedDate":"2024-02-01"},{"lineNumber":100,"author":{"gitId":"danielleloh"},"content":"     * @throws IndexOutOfBoundsException If date/time string is missing","lastModifiedDate":"2024-02-01"},{"lineNumber":101,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":102,"author":{"gitId":"danielleloh"},"content":"    public boolean isInvalidEvent() throws IndexOutOfBoundsException {","lastModifiedDate":"2024-02-01"},{"lineNumber":103,"author":{"gitId":"danielleloh"},"content":"        if (!this.input.contains(\" /from \") || !this.input.contains(\" /to \")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":104,"author":{"gitId":"danielleloh"},"content":"            return true;","lastModifiedDate":"2024-02-01"},{"lineNumber":105,"author":{"gitId":"danielleloh"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":106,"author":{"gitId":"danielleloh"},"content":"        if (this.input.indexOf(\"/from\") \u003e this.input.indexOf(\"/to\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":107,"author":{"gitId":"danielleloh"},"content":"            return true;","lastModifiedDate":"2024-02-01"},{"lineNumber":108,"author":{"gitId":"danielleloh"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":109,"author":{"gitId":"danielleloh"},"content":"        if (this.input.split(\"\\\\s+\", 2)[1].split(\"\\\\s+/from\\\\s+\", 2)[0].trim().isEmpty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":110,"author":{"gitId":"danielleloh"},"content":"            // no description","lastModifiedDate":"2024-02-01"},{"lineNumber":111,"author":{"gitId":"danielleloh"},"content":"            return true;","lastModifiedDate":"2024-02-01"},{"lineNumber":112,"author":{"gitId":"danielleloh"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":113,"author":{"gitId":"danielleloh"},"content":"        if (this.input.split(\"\\\\s+/from\\\\s+\", 2)[1].split(\"\\\\s+/to\\\\s+\",","lastModifiedDate":"2024-02-01"},{"lineNumber":114,"author":{"gitId":"danielleloh"},"content":"                2)[0].trim().isEmpty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":115,"author":{"gitId":"danielleloh"},"content":"            // no start date and time","lastModifiedDate":"2024-02-01"},{"lineNumber":116,"author":{"gitId":"danielleloh"},"content":"            return true;","lastModifiedDate":"2024-02-01"},{"lineNumber":117,"author":{"gitId":"danielleloh"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":118,"author":{"gitId":"danielleloh"},"content":"        if (this.input.split(\"\\\\s+/to\\\\s+\", 2)[1].trim().isEmpty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":119,"author":{"gitId":"danielleloh"},"content":"            // no end date and time","lastModifiedDate":"2024-02-01"},{"lineNumber":120,"author":{"gitId":"danielleloh"},"content":"            return true;","lastModifiedDate":"2024-02-01"},{"lineNumber":121,"author":{"gitId":"danielleloh"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":122,"author":{"gitId":"danielleloh"},"content":"        return false;","lastModifiedDate":"2024-02-01"},{"lineNumber":123,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":124,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":125,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":126,"author":{"gitId":"danielleloh"},"content":"     * Gets event description","lastModifiedDate":"2024-02-01"},{"lineNumber":127,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":128,"author":{"gitId":"danielleloh"},"content":"     * @return The event description","lastModifiedDate":"2024-02-01"},{"lineNumber":129,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":130,"author":{"gitId":"danielleloh"},"content":"    public String getEventDescription() {","lastModifiedDate":"2024-02-01"},{"lineNumber":131,"author":{"gitId":"danielleloh"},"content":"        return this.input.split(\"\\\\s+\", 2)[1].split(\"\\\\s+/from\\\\s+\", 2)[0].trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":132,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":133,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":134,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":135,"author":{"gitId":"danielleloh"},"content":"    public LocalDateTime getStartDateTime() throws DateTimeParseException {","lastModifiedDate":"2024-02-01"},{"lineNumber":136,"author":{"gitId":"danielleloh"},"content":"        String startString \u003d this.input.split(\"\\\\s+/from\\\\s+\", 2)[1].split(\"\\\\s+/to\\\\s+\",","lastModifiedDate":"2024-02-01"},{"lineNumber":137,"author":{"gitId":"danielleloh"},"content":"                2)[0].trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":138,"author":{"gitId":"danielleloh"},"content":"        DateTimeFormatter dateTimeFormat \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2024-02-01"},{"lineNumber":139,"author":{"gitId":"danielleloh"},"content":"        LocalDateTime start \u003d LocalDateTime.parse(startString, dateTimeFormat);","lastModifiedDate":"2024-02-01"},{"lineNumber":140,"author":{"gitId":"danielleloh"},"content":"        return start;","lastModifiedDate":"2024-02-01"},{"lineNumber":141,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":142,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":143,"author":{"gitId":"danielleloh"},"content":"    public LocalDateTime getEndDateTime() throws IndexOutOfBoundsException, DateTimeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":144,"author":{"gitId":"danielleloh"},"content":"        String endString \u003d this.input.split(\"\\\\s+/to\\\\s+\", 2)[1].trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":145,"author":{"gitId":"danielleloh"},"content":"        DateTimeFormatter dateTimeFormat \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2024-02-01"},{"lineNumber":146,"author":{"gitId":"danielleloh"},"content":"        LocalDateTime end \u003d LocalDateTime.parse(endString, dateTimeFormat);","lastModifiedDate":"2024-02-01"},{"lineNumber":147,"author":{"gitId":"danielleloh"},"content":"        return end;","lastModifiedDate":"2024-02-01"},{"lineNumber":148,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":149,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":150,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":151,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":152,"author":{"gitId":"danielleloh"},"content":"}","lastModifiedDate":"2024-02-01"},{"lineNumber":153,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"danielleloh":153}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielleloh"},"content":"package storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"danielleloh"},"content":"import task.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"danielleloh"},"content":"import tasklist.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"danielleloh"},"content":"import task.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"danielleloh"},"content":"import task.Todo;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"danielleloh"},"content":"import task.Deadline;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"danielleloh"},"content":"import task.Event;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"danielleloh"},"content":"import java.io.*;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"danielleloh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"danielleloh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"danielleloh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"danielleloh"},"content":"public class Storage {","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"danielleloh"},"content":"    String filePath;","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"danielleloh"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"danielleloh"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"danielleloh"},"content":"     * Loads data from file to task list in Scribbles.","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"danielleloh"},"content":"     * @param taskList List to load data into","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"danielleloh"},"content":"     * @throws FileNotFoundException If data file does not exist","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"danielleloh"},"content":"    public void loadFileData(TaskList taskList) throws FileNotFoundException {","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"danielleloh"},"content":"        File f \u003d new File(this.filePath);","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"danielleloh"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"danielleloh"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(f));","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"danielleloh"},"content":"            String line \u003d reader.readLine();","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"danielleloh"},"content":"            String delimiter \u003d \"\\\\s*\\\\|\\\\s*\";","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"danielleloh"},"content":"            while(line !\u003d null) {","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"danielleloh"},"content":"                String[] tokens \u003d line.split(delimiter);","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"danielleloh"},"content":"                String typeOfTask \u003d tokens[0].trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"danielleloh"},"content":"                int completed \u003d Integer.parseInt(tokens[1].trim());","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"danielleloh"},"content":"                boolean isCompleted \u003d (completed \u003d\u003d 1 ? true : false);","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"danielleloh"},"content":"                String description \u003d tokens[2].trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"danielleloh"},"content":"                switch(typeOfTask) {","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"danielleloh"},"content":"                    case \"T\":","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"danielleloh"},"content":"                        taskList.addTask(new Todo(description, isCompleted));","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"danielleloh"},"content":"                        break;","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"danielleloh"},"content":"                    case \"D\":","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"danielleloh"},"content":"                        String deadlineString \u003d tokens[3].trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"danielleloh"},"content":"                        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"danielleloh"},"content":"                            DateTimeFormatter dateTimeFormat \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"danielleloh"},"content":"                            LocalDateTime deadline \u003d LocalDateTime.parse(deadlineString, dateTimeFormat);","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"danielleloh"},"content":"                            taskList.addTask(new Deadline(description, isCompleted, deadline));","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"danielleloh"},"content":"                        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"danielleloh"},"content":"                            System.out.println(\"Your deadline, \\\"\" + description + \"\\\" stored in file has incorrect \" +","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"danielleloh"},"content":"                                    \"date/time format and cannot be loaded into task list. \");","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"danielleloh"},"content":"                        }","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"danielleloh"},"content":"                        break;","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"danielleloh"},"content":"                    case \"E\":","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"danielleloh"},"content":"                        String startString \u003d tokens[3].trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"danielleloh"},"content":"                        String endString \u003d tokens[4].trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"danielleloh"},"content":"                        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"danielleloh"},"content":"                            DateTimeFormatter dateTimeFormat \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"danielleloh"},"content":"                            LocalDateTime start \u003d LocalDateTime.parse(startString, dateTimeFormat);","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"danielleloh"},"content":"                            LocalDateTime end \u003d LocalDateTime.parse(endString, dateTimeFormat);","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"danielleloh"},"content":"                            taskList.addTask(new Event(description, isCompleted, start, end));","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"danielleloh"},"content":"                        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"danielleloh"},"content":"                            System.out.println(\"Your event, \\\"\" + description + \"\\\" stored in file has incorrect \" +","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"danielleloh"},"content":"                                    \"date/time format and cannot be loaded into task list. \");","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"danielleloh"},"content":"                        }","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"danielleloh"},"content":"                        break;","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"danielleloh"},"content":"                    default:","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"danielleloh"},"content":"                        System.out.println(\"Invalid task type \\\"\" + typeOfTask + \"\\\" was found in file.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"danielleloh"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"danielleloh"},"content":"                line \u003d reader.readLine();","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"danielleloh"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"danielleloh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"danielleloh"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"danielleloh"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"danielleloh"},"content":"            System.out.println(\"Uh oh! looks like the data in your file is corrupted and cannot be read! \" +","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"danielleloh"},"content":"                    \"Please verify data in the file to proceed. Proceeding without verification may cause \" +","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"danielleloh"},"content":"                    \"current data to disappear. \\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"danielleloh"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"danielleloh"},"content":"     * Saves data from task list into file.","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"danielleloh"},"content":"     * @param taskList List that contains data to save into file","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"danielleloh"},"content":"     * @throws FileNotFoundException If file does not exist","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"danielleloh"},"content":"    public void saveFileData(TaskList taskList) throws FileNotFoundException {","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"danielleloh"},"content":"        File f \u003d new File(this.filePath);","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"danielleloh"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"danielleloh"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filePath));","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"danielleloh"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"danielleloh"},"content":"                Task task \u003d taskList.get(i);","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"danielleloh"},"content":"                if (task instanceof Todo) {","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"danielleloh"},"content":"                    writer.write(\"T | \" + (task.isCompleted() ? \"1\" : \"0\") + \" | \" + task.getDescription());","lastModifiedDate":"2024-02-01"},{"lineNumber":99,"author":{"gitId":"danielleloh"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":100,"author":{"gitId":"danielleloh"},"content":"                if (task instanceof Deadline) {","lastModifiedDate":"2024-02-01"},{"lineNumber":101,"author":{"gitId":"danielleloh"},"content":"                    writer.write(\"D | \" + (task.isCompleted() ? \"1\" : \"0\") + \" | \" + task.getDescription() +","lastModifiedDate":"2024-02-01"},{"lineNumber":102,"author":{"gitId":"danielleloh"},"content":"                            \" | \" + ((Deadline) task).getByString());","lastModifiedDate":"2024-02-01"},{"lineNumber":103,"author":{"gitId":"danielleloh"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":104,"author":{"gitId":"danielleloh"},"content":"                if (task instanceof Event) {","lastModifiedDate":"2024-02-01"},{"lineNumber":105,"author":{"gitId":"danielleloh"},"content":"                    writer.write(\"E | \" + (task.isCompleted() ? \"1\" : \"0\") + \" | \" + task.getDescription() +","lastModifiedDate":"2024-02-01"},{"lineNumber":106,"author":{"gitId":"danielleloh"},"content":"                            \" | \" + ((Event) task).getStartString() + \" | \" + ((Event) task).getEndString());","lastModifiedDate":"2024-02-01"},{"lineNumber":107,"author":{"gitId":"danielleloh"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":108,"author":{"gitId":"danielleloh"},"content":"                writer.newLine();","lastModifiedDate":"2024-02-01"},{"lineNumber":109,"author":{"gitId":"danielleloh"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":110,"author":{"gitId":"danielleloh"},"content":"            writer.close();","lastModifiedDate":"2024-02-01"},{"lineNumber":111,"author":{"gitId":"danielleloh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":112,"author":{"gitId":"danielleloh"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2024-02-01"},{"lineNumber":113,"author":{"gitId":"danielleloh"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":114,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":115,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":116,"author":{"gitId":"danielleloh"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"danielleloh":116}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielleloh"},"content":"package task;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"danielleloh"},"content":"import task.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"danielleloh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"danielleloh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"danielleloh"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"danielleloh"},"content":"    protected LocalDateTime by; // date/time to be done before","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"danielleloh"},"content":"    public Deadline(String description, boolean completed, LocalDateTime by) {","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"danielleloh"},"content":"        super(description, completed);","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"danielleloh"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"danielleloh"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"danielleloh"},"content":"        return this.by;","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"danielleloh"},"content":"    public String getByString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"danielleloh"},"content":"        DateTimeFormatter dateTimeFormat \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"danielleloh"},"content":"        return this.by.format(dateTimeFormat);","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"danielleloh"},"content":"    public void setBy(LocalDateTime dateTime) {","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"danielleloh"},"content":"        this.by \u003d dateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"danielleloh"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"danielleloh"},"content":"    public String toString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"danielleloh"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.getByString() + \")\";","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"danielleloh"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"danielleloh":33}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielleloh"},"content":"package task;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"danielleloh"},"content":"import task.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"danielleloh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"danielleloh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"danielleloh"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"danielleloh"},"content":"    private LocalDateTime start; // start date/time","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"danielleloh"},"content":"    private LocalDateTime end; // end date/time","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"danielleloh"},"content":"    public Event(String description, boolean completed, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"danielleloh"},"content":"        super(description, completed);","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"danielleloh"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"danielleloh"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"danielleloh"},"content":"    public LocalDateTime getStart() {","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"danielleloh"},"content":"        return this.start;","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"danielleloh"},"content":"    public String getStartString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"danielleloh"},"content":"        DateTimeFormatter dateTimeFormat \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"danielleloh"},"content":"        return this.start.format(dateTimeFormat);","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"danielleloh"},"content":"    public String getEndString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"danielleloh"},"content":"        DateTimeFormatter dateTimeFormat \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"danielleloh"},"content":"        return this.end.format(dateTimeFormat);","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"danielleloh"},"content":"    public LocalDateTime getEnd() {","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"danielleloh"},"content":"        return this.end;","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"danielleloh"},"content":"    public void setStart(LocalDateTime date) {","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"danielleloh"},"content":"        this.start \u003d date;","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"danielleloh"},"content":"    public void setEnd(LocalDateTime date) {","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"danielleloh"},"content":"        this.end \u003d date;","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"danielleloh"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"danielleloh"},"content":"    public String toString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"danielleloh"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.getStartString() + \" to: \" + this.getEndString() + \")\";","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"danielleloh"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"danielleloh":48}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielleloh"},"content":"package task;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"danielleloh"},"content":"public class Task {","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"danielleloh"},"content":"    protected String description; // task description","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"danielleloh"},"content":"    protected boolean completed; // true is task is completed","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"danielleloh"},"content":"    public Task(String description, boolean completed) {","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"danielleloh"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"danielleloh"},"content":"        this.completed \u003d completed;","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"danielleloh"},"content":"    public String getDescription() {","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"danielleloh"},"content":"        return this.description;","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"danielleloh"},"content":"    public boolean isCompleted() {","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"danielleloh"},"content":"        return this.completed;","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"danielleloh"},"content":"    public void markComplete() {","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"danielleloh"},"content":"        this.completed \u003d true;","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"danielleloh"},"content":"    public void markIncomplete() {","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"danielleloh"},"content":"        this.completed \u003d false;","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"danielleloh"},"content":"    public String toString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"danielleloh"},"content":"        if (this.completed) {","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"danielleloh"},"content":"            return \"[X] \" + this.description;","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"danielleloh"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"danielleloh"},"content":"        return \"[ ] \" + this.description;","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"danielleloh"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"danielleloh":34}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielleloh"},"content":"package task;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"danielleloh"},"content":"import task.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"danielleloh"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"danielleloh"},"content":"    public Todo(String description, boolean completed) {","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"danielleloh"},"content":"        super(description, completed);","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"danielleloh"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"danielleloh"},"content":"    public String toString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"danielleloh"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"danielleloh"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"danielleloh":14}},{"path":"src/main/java/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielleloh"},"content":"package tasklist;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"danielleloh"},"content":"import task.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"danielleloh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"danielleloh"},"content":"public class TaskList {","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"danielleloh"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"danielleloh"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"danielleloh"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"danielleloh"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"danielleloh"},"content":"        taskList.add(task);","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"danielleloh"},"content":"    public void deleteTask(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"danielleloh"},"content":"        taskList.remove(index);","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"danielleloh"},"content":"    public int size() {","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"danielleloh"},"content":"        return taskList.size();","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"danielleloh"},"content":"    public Task get(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"danielleloh"},"content":"        return taskList.get(index);","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"danielleloh"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"danielleloh":30}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielleloh"},"content":"package ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"danielleloh"},"content":"import tasklist.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"danielleloh"},"content":"public class Ui {","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"danielleloh"},"content":"     * Constructor of Ui for chatbot Scribbles","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"danielleloh"},"content":"    public Ui() {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"danielleloh"},"content":"     * Prints the greeting message of the chatbot.","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"danielleloh"},"content":"    public void greet() {","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"danielleloh"},"content":"        System.out.print(\"Hello! I\u0027m Scribbles :) What can I do for you? \\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"danielleloh"},"content":"     * Prints the error message if user inputs an invalid input into chatbot.","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"danielleloh"},"content":"    public void invalidInputMessage() {","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"danielleloh"},"content":"        System.out.println(\"Sorry, Scribbles was unable to understand your instructions :(\\n\" +","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"danielleloh"},"content":"                \"Try formatting your instructions as follows: \\n\" +","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"danielleloh"},"content":"                \"- type \\\"list\\\" to view your current list of tasks\\n\" +","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"danielleloh"},"content":"                \"- type \\\"mark [index]\\\" to mark task at index as completed\\n\" +","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"danielleloh"},"content":"                \"- type \\\"unmark [index]\\\" to mark task at index as incomplete\\n\" +","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"danielleloh"},"content":"                \"- type \\\"todo [task]\\\" to insert to-do task into your list\\n\" +","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"danielleloh"},"content":"                \"- type \\\"deadline [task] /by [date]\\\" to insert task into your list with deadline as date\\n\" +","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"danielleloh"},"content":"                \"- type \\\"event [task] /from [start] to [end]\\\" \" +","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"danielleloh"},"content":"                \"to insert task into your list with a start and end duration\\n\" +","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"danielleloh"},"content":"                \"- type \\\"delete [index]\\\" to remove a task at index from your list\\n\" +","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"danielleloh"},"content":"                \"Please try again :)\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"danielleloh"},"content":"     * Prints list of tasks in task list.","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"danielleloh"},"content":"     * @param taskList List which contains the tasks","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"danielleloh"},"content":"    public void listTask(TaskList taskList) {","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"danielleloh"},"content":"        int numOfTasks \u003d taskList.size();","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"danielleloh"},"content":"        int index \u003d 1;","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"danielleloh"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"danielleloh"},"content":"        while (numOfTasks !\u003d 0) {","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"danielleloh"},"content":"            System.out.println(index + \". \" + taskList.get(index - 1).toString());","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"danielleloh"},"content":"            numOfTasks--;","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"danielleloh"},"content":"            index++;","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"danielleloh"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"danielleloh"},"content":"     * Prints message if index input by user is out of bounds.","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"danielleloh"},"content":"     * @param taskList List containing the tasks","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"danielleloh"},"content":"    public void invalidIndexMessage(TaskList taskList) {","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"danielleloh"},"content":"        int numOfTasks \u003d taskList.size();","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"danielleloh"},"content":"        System.out.println(\"Please check that you\u0027ve input a valid index! \");","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"danielleloh"},"content":"        System.out.println(\"You currently only have \" + numOfTasks + \" task(s) in your list.\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"danielleloh"},"content":"    public void taskDeletionMessage(String taskDeleted, TaskList taskList){","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"danielleloh"},"content":"        System.out.println(\"I\u0027ve removed this task from your list:\");","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"danielleloh"},"content":"        System.out.println(taskDeleted);","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"danielleloh"},"content":"        System.out.println(\"Now you have \" + taskList.size() + \" task(s) in the list.\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"danielleloh"},"content":"     * Print message after marking task instruction is called","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"danielleloh"},"content":"     * @param index Index of task to mark","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"danielleloh"},"content":"     * @param taskList List containing the tasks","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"danielleloh"},"content":"    public void markCompletedMessage(int index, TaskList taskList) {","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"danielleloh"},"content":"        int numOfTasks \u003d taskList.size();","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"danielleloh"},"content":"        if (index \u003c\u003d numOfTasks) {","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"danielleloh"},"content":"            System.out.println(\"Nice! I\u0027ve marked task number \" + index + \" as done: \\n\" +","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"danielleloh"},"content":"                    taskList.get(index - 1).toString() + \"\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"danielleloh"},"content":"        } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"danielleloh"},"content":"            // if task index does not exist","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"danielleloh"},"content":"            System.out.println(\"Uh oh! looks like that task does not exist in your list.\\n\" +","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"danielleloh"},"content":"                    \"You currently only have \" + numOfTasks + \" task(s) in your list.\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"danielleloh"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"danielleloh"},"content":"     * Prints message after \"unmark\" task instruction is called.","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"danielleloh"},"content":"     * @param index Index of task to unmark","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"danielleloh"},"content":"     * @param taskList List containing the tasks","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"danielleloh"},"content":"    public void markIncompleteMessage(int index, TaskList taskList) {","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"danielleloh"},"content":"        int numOfTasks \u003d taskList.size();","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"danielleloh"},"content":"        if (index \u003c\u003d numOfTasks) {","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"danielleloh"},"content":"            System.out.println(\"Okay! I\u0027ve marked task number \" + index + \" as incomplete: \\n\" +","lastModifiedDate":"2024-02-01"},{"lineNumber":99,"author":{"gitId":"danielleloh"},"content":"                    taskList.get(index - 1).toString() + \"\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":100,"author":{"gitId":"danielleloh"},"content":"        } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":101,"author":{"gitId":"danielleloh"},"content":"            // message if task index does not exist","lastModifiedDate":"2024-02-01"},{"lineNumber":102,"author":{"gitId":"danielleloh"},"content":"            System.out.println(\"Uh oh! looks like that task does not exist in your list.\\n\" +","lastModifiedDate":"2024-02-01"},{"lineNumber":103,"author":{"gitId":"danielleloh"},"content":"                    \"You currently only have \" + numOfTasks + \" task(s) in your list.\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":104,"author":{"gitId":"danielleloh"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":105,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":106,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":107,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":108,"author":{"gitId":"danielleloh"},"content":"     * Prints message if there is missing information from user input when adding tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":109,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":110,"author":{"gitId":"danielleloh"},"content":"    public void taskMissingInformationMessage() {","lastModifiedDate":"2024-02-01"},{"lineNumber":111,"author":{"gitId":"danielleloh"},"content":"        System.out.println(\"Uh oh! Looks like there\u0027s missing information in your instructions!\\n\" +","lastModifiedDate":"2024-02-01"},{"lineNumber":112,"author":{"gitId":"danielleloh"},"content":"                \"Ensure your tasks are formatted as follows: \\n\" +","lastModifiedDate":"2024-02-01"},{"lineNumber":113,"author":{"gitId":"danielleloh"},"content":"                \"- type \\\"todo [task]\\\" to insert to-do task into your list\\n\" +","lastModifiedDate":"2024-02-01"},{"lineNumber":114,"author":{"gitId":"danielleloh"},"content":"                \"- type \\\"deadline [task] /by [date/time]\\\" to insert task into your list \" +","lastModifiedDate":"2024-02-01"},{"lineNumber":115,"author":{"gitId":"danielleloh"},"content":"                \"with [date/time] in the format dd/MM/yyyy HHmm\\n\" +","lastModifiedDate":"2024-02-01"},{"lineNumber":116,"author":{"gitId":"danielleloh"},"content":"                \"- type \\\"event [task] /from [start date/time] to [end date/time]\\\" \" +","lastModifiedDate":"2024-02-01"},{"lineNumber":117,"author":{"gitId":"danielleloh"},"content":"                \"to insert task into your list with a start and end date/time in format dd/MM/yyyy HHmm\\n\" +","lastModifiedDate":"2024-02-01"},{"lineNumber":118,"author":{"gitId":"danielleloh"},"content":"                \"Please try again :)\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":119,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":120,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":121,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":122,"author":{"gitId":"danielleloh"},"content":"     * Prints message if date/time String format is wrong.","lastModifiedDate":"2024-02-01"},{"lineNumber":123,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":124,"author":{"gitId":"danielleloh"},"content":"    public void wrongDateTimeFormatMessage() {","lastModifiedDate":"2024-02-01"},{"lineNumber":125,"author":{"gitId":"danielleloh"},"content":"        System.out.println(\"Uh oh! Looks like your date/time format is wrong!: \");","lastModifiedDate":"2024-02-01"},{"lineNumber":126,"author":{"gitId":"danielleloh"},"content":"        System.out.println(\"Try formatting your date/time as dd/MM/yyyy HHmm.\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":127,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":128,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":129,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":130,"author":{"gitId":"danielleloh"},"content":"     * Prints message if file is not found.","lastModifiedDate":"2024-02-01"},{"lineNumber":131,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":132,"author":{"gitId":"danielleloh"},"content":"    public void fileNotFoundMessage() {","lastModifiedDate":"2024-02-01"},{"lineNumber":133,"author":{"gitId":"danielleloh"},"content":"        System.out.println(\"File not found to save task update. \");","lastModifiedDate":"2024-02-01"},{"lineNumber":134,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":135,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":136,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":137,"author":{"gitId":"danielleloh"},"content":"     * Prints message after task has been successfully added into task list.","lastModifiedDate":"2024-02-01"},{"lineNumber":138,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":139,"author":{"gitId":"danielleloh"},"content":"     * @param taskList List containing the tasks","lastModifiedDate":"2024-02-01"},{"lineNumber":140,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":141,"author":{"gitId":"danielleloh"},"content":"    public void confirmTaskAddition(TaskList taskList) {","lastModifiedDate":"2024-02-01"},{"lineNumber":142,"author":{"gitId":"danielleloh"},"content":"        System.out.println(\"I\u0027ve added this task to your list: \");","lastModifiedDate":"2024-02-01"},{"lineNumber":143,"author":{"gitId":"danielleloh"},"content":"        System.out.println(taskList.get(taskList.size() - 1).toString());","lastModifiedDate":"2024-02-01"},{"lineNumber":144,"author":{"gitId":"danielleloh"},"content":"        System.out.println(\"Now you have \" + taskList.size() + \" task(s) in the list.\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":145,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":146,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":147,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":148,"author":{"gitId":"danielleloh"},"content":"     * Prints the exiting message of the chatbot.","lastModifiedDate":"2024-02-01"},{"lineNumber":149,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":150,"author":{"gitId":"danielleloh"},"content":"    public void exit() {","lastModifiedDate":"2024-02-01"},{"lineNumber":151,"author":{"gitId":"danielleloh"},"content":"        System.out.println(\"Bye! Hope to see you again soon :)\");","lastModifiedDate":"2024-02-01"},{"lineNumber":152,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":153,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":154,"author":{"gitId":"danielleloh"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"danielleloh":154}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"danielleloh"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"danielleloh"},"content":"todo borrow book","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"danielleloh"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"danielleloh"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"danielleloh"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"danielleloh"},"content":"mark 1","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"danielleloh"},"content":"mark 2","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"danielleloh"},"content":"mark 3","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"danielleloh"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"danielleloh"},"content":"unmark 1","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"danielleloh"},"content":"unmark 2","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"danielleloh"},"content":"unmark 3","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"danielleloh"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"danielleloh"},"content":"bye","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"danielleloh":14}}]
