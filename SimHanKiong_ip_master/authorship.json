[{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SimHanKiong"},"content":"public enum Command {","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"SimHanKiong"},"content":"    BYE(\"bye\"),","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"SimHanKiong"},"content":"    LIST(\"list\"),","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"SimHanKiong"},"content":"    MARK(\"mark\"),","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"SimHanKiong"},"content":"    UNMARK(\"unmark\"),","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"SimHanKiong"},"content":"    TODO(\"todo\"),","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"SimHanKiong"},"content":"    DEADLINE(\"deadline\"),","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"SimHanKiong"},"content":"    EVENT(\"event\"),","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"SimHanKiong"},"content":"    DELETE(\"delete\");","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"SimHanKiong"},"content":"    private String input;","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"SimHanKiong"},"content":"    Command(String input) {","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"SimHanKiong"},"content":"        this.input \u003d input;","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"SimHanKiong"},"content":"    public String getInput() {","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"SimHanKiong"},"content":"        return this.input;","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"SimHanKiong"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"SimHanKiong":22}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SimHanKiong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"SimHanKiong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"SimHanKiong"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-21"},{"lineNumber":5,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":6,"author":{"gitId":"SimHanKiong"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":8,"author":{"gitId":"SimHanKiong"},"content":"    public Deadline(String name, LocalDateTime by) {","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"SimHanKiong"},"content":"        super(name);","lastModifiedDate":"2024-01-21"},{"lineNumber":10,"author":{"gitId":"SimHanKiong"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-21"},{"lineNumber":11,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":12,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":13,"author":{"gitId":"SimHanKiong"},"content":"    @Override","lastModifiedDate":"2024-01-21"},{"lineNumber":14,"author":{"gitId":"SimHanKiong"},"content":"    public String toString() {","lastModifiedDate":"2024-01-21"},{"lineNumber":15,"author":{"gitId":"SimHanKiong"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy hh:mm a\")) +","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"SimHanKiong"},"content":"                \")\";","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":18,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":19,"author":{"gitId":"SimHanKiong"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"SimHanKiong"},"content":"    public String addToFile() {","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"SimHanKiong"},"content":"        return \"D | \" + super.addToFile() + \" | \" + by.format(DateTimeFormatter.ofPattern(\"yyyy/MM/dd HHmm\")) + \"\\n\";","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"SimHanKiong"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"SimHanKiong":24}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SimHanKiong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"SimHanKiong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"SimHanKiong"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-21"},{"lineNumber":5,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":6,"author":{"gitId":"SimHanKiong"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"SimHanKiong"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":9,"author":{"gitId":"SimHanKiong"},"content":"    public Event(String name, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"SimHanKiong"},"content":"        super(name);","lastModifiedDate":"2024-01-21"},{"lineNumber":11,"author":{"gitId":"SimHanKiong"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-21"},{"lineNumber":12,"author":{"gitId":"SimHanKiong"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-21"},{"lineNumber":13,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":14,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":15,"author":{"gitId":"SimHanKiong"},"content":"    @Override","lastModifiedDate":"2024-01-21"},{"lineNumber":16,"author":{"gitId":"SimHanKiong"},"content":"    public String toString() {","lastModifiedDate":"2024-01-21"},{"lineNumber":17,"author":{"gitId":"SimHanKiong"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy hh:mm a\")) +","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"SimHanKiong"},"content":"                \" to: \" + to.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy hh:mm a\")) + \")\";","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":20,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":21,"author":{"gitId":"SimHanKiong"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"SimHanKiong"},"content":"    public String addToFile() {","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"SimHanKiong"},"content":"        return \"E | \" + super.addToFile() + \" | \" + from.format(DateTimeFormatter.ofPattern(\"yyyy/MM/dd HHmm\")) +","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"SimHanKiong"},"content":"                \" | \" + to.format(DateTimeFormatter.ofPattern(\"yyyy/MM/dd HHmm\")) + \"\\n\";","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"SimHanKiong"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"SimHanKiong":27}},{"path":"src/main/java/Johnny.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SimHanKiong"},"content":"import java.io.File;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"SimHanKiong"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"SimHanKiong"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"SimHanKiong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"SimHanKiong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"SimHanKiong"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"SimHanKiong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-20"},{"lineNumber":8,"author":{"gitId":"SimHanKiong"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-01-21"},{"lineNumber":9,"author":{"gitId":"SimHanKiong"},"content":"import java.util.List;","lastModifiedDate":"2024-01-21"},{"lineNumber":10,"author":{"gitId":"SimHanKiong"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-20"},{"lineNumber":11,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":12,"author":{"gitId":"SimHanKiong"},"content":"public class Johnny {","lastModifiedDate":"2024-01-20"},{"lineNumber":13,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":14,"author":{"gitId":"SimHanKiong"},"content":"    private static ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-20"},{"lineNumber":15,"author":{"gitId":"SimHanKiong"},"content":"    private static DateTimeFormatter INPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd HHmm\");","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":17,"author":{"gitId":"SimHanKiong"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-20"},{"lineNumber":18,"author":{"gitId":"SimHanKiong"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"SimHanKiong"},"content":"            System.out.println(\"Johnny here. What do you want bro?\\n\");","lastModifiedDate":"2024-01-21"},{"lineNumber":20,"author":{"gitId":"SimHanKiong"},"content":"            Johnny.start();","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"SimHanKiong"},"content":"            Johnny.takeCommands();","lastModifiedDate":"2024-01-20"},{"lineNumber":22,"author":{"gitId":"SimHanKiong"},"content":"            System.out.println(\"Bye bro. I\u0027m going back to sleep.\");","lastModifiedDate":"2024-01-21"},{"lineNumber":23,"author":{"gitId":"SimHanKiong"},"content":"        } catch (JohnnyException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"SimHanKiong"},"content":"            System.out.println(e.getMessage() + \"\\n\");","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"SimHanKiong"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":27,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":28,"author":{"gitId":"SimHanKiong"},"content":"    public static void takeCommands() {","lastModifiedDate":"2024-01-20"},{"lineNumber":29,"author":{"gitId":"SimHanKiong"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-20"},{"lineNumber":30,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":31,"author":{"gitId":"SimHanKiong"},"content":"        while (true) {","lastModifiedDate":"2024-01-20"},{"lineNumber":32,"author":{"gitId":"SimHanKiong"},"content":"            try {","lastModifiedDate":"2024-01-21"},{"lineNumber":33,"author":{"gitId":"SimHanKiong"},"content":"                String input \u003d scanner.nextLine();","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"SimHanKiong"},"content":"                String command \u003d input.split(\" \")[0];","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":36,"author":{"gitId":"SimHanKiong"},"content":"                if (command.equals(Command.BYE.getInput())) {","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"SimHanKiong"},"content":"                    break;","lastModifiedDate":"2024-01-20"},{"lineNumber":38,"author":{"gitId":"SimHanKiong"},"content":"                } else if (command.equals(Command.LIST.getInput())) {","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"SimHanKiong"},"content":"                    Johnny.list();","lastModifiedDate":"2024-01-20"},{"lineNumber":40,"author":{"gitId":"SimHanKiong"},"content":"                } else if (command.equals(Command.MARK.getInput())) {","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"SimHanKiong"},"content":"                    Johnny.mark(input);","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"SimHanKiong"},"content":"                } else if (command.equals(Command.UNMARK.getInput())) {","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"SimHanKiong"},"content":"                    Johnny.unmark(input);","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"SimHanKiong"},"content":"                } else if (command.equals(Command.TODO.getInput())) {","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"SimHanKiong"},"content":"                    Johnny.addToDo(input);","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"SimHanKiong"},"content":"                } else if (command.equals(Command.DEADLINE.getInput())) {","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"SimHanKiong"},"content":"                    Johnny.addDeadline(input);","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"SimHanKiong"},"content":"                } else if (command.equals(Command.EVENT.getInput())) {","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"SimHanKiong"},"content":"                    Johnny.addEvent(input);","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"SimHanKiong"},"content":"                } else if (command.equals(Command.DELETE.getInput())) {","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"SimHanKiong"},"content":"                    Johnny.delete(input);","lastModifiedDate":"2024-01-25"},{"lineNumber":52,"author":{"gitId":"SimHanKiong"},"content":"                } else {","lastModifiedDate":"2024-01-21"},{"lineNumber":53,"author":{"gitId":"SimHanKiong"},"content":"                    throw new JohnnyException(\"Your command does not make sense bro.\");","lastModifiedDate":"2024-01-21"},{"lineNumber":54,"author":{"gitId":"SimHanKiong"},"content":"                }","lastModifiedDate":"2024-01-21"},{"lineNumber":55,"author":{"gitId":"SimHanKiong"},"content":"            } catch (JohnnyException e) {","lastModifiedDate":"2024-01-21"},{"lineNumber":56,"author":{"gitId":"SimHanKiong"},"content":"                System.out.println(e.getMessage() + \"\\n\");","lastModifiedDate":"2024-01-21"},{"lineNumber":57,"author":{"gitId":"SimHanKiong"},"content":"            }","lastModifiedDate":"2024-01-20"},{"lineNumber":58,"author":{"gitId":"SimHanKiong"},"content":"        }","lastModifiedDate":"2024-01-20"},{"lineNumber":59,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":60,"author":{"gitId":"SimHanKiong"},"content":"        scanner.close();","lastModifiedDate":"2024-01-20"},{"lineNumber":61,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":62,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":63,"author":{"gitId":"SimHanKiong"},"content":"    public static void start() throws JohnnyException {","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"SimHanKiong"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"SimHanKiong"},"content":"            File file \u003d new File(\"./data/johnny.txt\");","lastModifiedDate":"2024-01-28"},{"lineNumber":66,"author":{"gitId":"SimHanKiong"},"content":"            if (!file.isFile() \u0026\u0026 file.getParentFile().mkdir()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":67,"author":{"gitId":"SimHanKiong"},"content":"                file.createNewFile();","lastModifiedDate":"2024-01-28"},{"lineNumber":68,"author":{"gitId":"SimHanKiong"},"content":"            } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":69,"author":{"gitId":"SimHanKiong"},"content":"                Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2024-01-28"},{"lineNumber":70,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":71,"author":{"gitId":"SimHanKiong"},"content":"                while (scanner.hasNext()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":72,"author":{"gitId":"SimHanKiong"},"content":"                    String input \u003d scanner.nextLine();","lastModifiedDate":"2024-01-28"},{"lineNumber":73,"author":{"gitId":"SimHanKiong"},"content":"                    String[] parsedInput \u003d input.split(\" \\\\| \");","lastModifiedDate":"2024-01-28"},{"lineNumber":74,"author":{"gitId":"SimHanKiong"},"content":"                    Task task;","lastModifiedDate":"2024-01-28"},{"lineNumber":75,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":76,"author":{"gitId":"SimHanKiong"},"content":"                    if (parsedInput[0].equals(\"T\")) {","lastModifiedDate":"2024-01-28"},{"lineNumber":77,"author":{"gitId":"SimHanKiong"},"content":"                        task \u003d new ToDo(parsedInput[2]);","lastModifiedDate":"2024-01-28"},{"lineNumber":78,"author":{"gitId":"SimHanKiong"},"content":"                    } else if (parsedInput[0].equals(\"D\")) {","lastModifiedDate":"2024-01-28"},{"lineNumber":79,"author":{"gitId":"SimHanKiong"},"content":"                        LocalDateTime by \u003d LocalDateTime.parse(parsedInput[3], INPUT_FORMAT);","lastModifiedDate":"2024-01-29"},{"lineNumber":80,"author":{"gitId":"SimHanKiong"},"content":"                        task \u003d new Deadline(parsedInput[2], by);","lastModifiedDate":"2024-01-29"},{"lineNumber":81,"author":{"gitId":"SimHanKiong"},"content":"                    } else if (parsedInput[0].equals(\"E\")) {","lastModifiedDate":"2024-01-28"},{"lineNumber":82,"author":{"gitId":"SimHanKiong"},"content":"                        LocalDateTime from \u003d LocalDateTime.parse(parsedInput[3], INPUT_FORMAT);","lastModifiedDate":"2024-01-29"},{"lineNumber":83,"author":{"gitId":"SimHanKiong"},"content":"                        LocalDateTime to \u003d LocalDateTime.parse(parsedInput[4], INPUT_FORMAT);","lastModifiedDate":"2024-01-29"},{"lineNumber":84,"author":{"gitId":"SimHanKiong"},"content":"                        task \u003d new Event(parsedInput[2], from, to);","lastModifiedDate":"2024-01-29"},{"lineNumber":85,"author":{"gitId":"SimHanKiong"},"content":"                    } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":86,"author":{"gitId":"SimHanKiong"},"content":"                        throw new JohnnyException(\"The file has been corrupted bro.\");","lastModifiedDate":"2024-01-28"},{"lineNumber":87,"author":{"gitId":"SimHanKiong"},"content":"                    }","lastModifiedDate":"2024-01-28"},{"lineNumber":88,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":89,"author":{"gitId":"SimHanKiong"},"content":"                    if (parsedInput[1].equals(\"1\")) {","lastModifiedDate":"2024-01-28"},{"lineNumber":90,"author":{"gitId":"SimHanKiong"},"content":"                        task.mark();","lastModifiedDate":"2024-01-28"},{"lineNumber":91,"author":{"gitId":"SimHanKiong"},"content":"                    }","lastModifiedDate":"2024-01-28"},{"lineNumber":92,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":93,"author":{"gitId":"SimHanKiong"},"content":"                    Johnny.list.add(task);","lastModifiedDate":"2024-01-28"},{"lineNumber":94,"author":{"gitId":"SimHanKiong"},"content":"                }","lastModifiedDate":"2024-01-28"},{"lineNumber":95,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":96,"author":{"gitId":"SimHanKiong"},"content":"                scanner.close();","lastModifiedDate":"2024-01-28"},{"lineNumber":97,"author":{"gitId":"SimHanKiong"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":98,"author":{"gitId":"SimHanKiong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":99,"author":{"gitId":"SimHanKiong"},"content":"            throw new JohnnyException(\"I can\u0027t create a new file bro: \" + e.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":100,"author":{"gitId":"SimHanKiong"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":101,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":102,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":103,"author":{"gitId":"SimHanKiong"},"content":"    public static void list() {","lastModifiedDate":"2024-01-20"},{"lineNumber":104,"author":{"gitId":"SimHanKiong"},"content":"        System.out.println(\"Get all these done bro:\");","lastModifiedDate":"2024-01-21"},{"lineNumber":105,"author":{"gitId":"SimHanKiong"},"content":"        for (int i \u003d 0; i \u003c Johnny.list.size(); i++) {","lastModifiedDate":"2024-01-20"},{"lineNumber":106,"author":{"gitId":"SimHanKiong"},"content":"            System.out.println(i + 1 + \". \" + list.get(i));","lastModifiedDate":"2024-01-20"},{"lineNumber":107,"author":{"gitId":"SimHanKiong"},"content":"        }","lastModifiedDate":"2024-01-20"},{"lineNumber":108,"author":{"gitId":"SimHanKiong"},"content":"        System.out.println();","lastModifiedDate":"2024-01-20"},{"lineNumber":109,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":110,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":111,"author":{"gitId":"SimHanKiong"},"content":"    public static void mark(String command) throws JohnnyException {","lastModifiedDate":"2024-01-21"},{"lineNumber":112,"author":{"gitId":"SimHanKiong"},"content":"        try {","lastModifiedDate":"2024-01-21"},{"lineNumber":113,"author":{"gitId":"SimHanKiong"},"content":"            String[] arr \u003d command.split(\" \");","lastModifiedDate":"2024-01-21"},{"lineNumber":114,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":115,"author":{"gitId":"SimHanKiong"},"content":"            if (arr.length \u003d\u003d 1) {","lastModifiedDate":"2024-01-21"},{"lineNumber":116,"author":{"gitId":"SimHanKiong"},"content":"                throw new JohnnyException(\"Which task am I supposed to mark bro?\");","lastModifiedDate":"2024-01-21"},{"lineNumber":117,"author":{"gitId":"SimHanKiong"},"content":"            } else if (arr.length \u003e 2) {","lastModifiedDate":"2024-01-21"},{"lineNumber":118,"author":{"gitId":"SimHanKiong"},"content":"                throw new JohnnyException(\"I can only mark 1 task bro.\");","lastModifiedDate":"2024-01-21"},{"lineNumber":119,"author":{"gitId":"SimHanKiong"},"content":"            }","lastModifiedDate":"2024-01-21"},{"lineNumber":120,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":121,"author":{"gitId":"SimHanKiong"},"content":"            int index \u003d Integer.parseInt(arr[1]) - 1;","lastModifiedDate":"2024-01-21"},{"lineNumber":122,"author":{"gitId":"SimHanKiong"},"content":"            Task task \u003d Johnny.list.get(index);","lastModifiedDate":"2024-01-20"},{"lineNumber":123,"author":{"gitId":"SimHanKiong"},"content":"            task.mark();","lastModifiedDate":"2024-01-20"},{"lineNumber":124,"author":{"gitId":"SimHanKiong"},"content":"            rewriteFile();","lastModifiedDate":"2024-01-28"},{"lineNumber":125,"author":{"gitId":"SimHanKiong"},"content":"            System.out.println(\"Finally done bro.\");","lastModifiedDate":"2024-01-21"},{"lineNumber":126,"author":{"gitId":"SimHanKiong"},"content":"            System.out.println(task + \"\\n\");","lastModifiedDate":"2024-01-21"},{"lineNumber":127,"author":{"gitId":"SimHanKiong"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-21"},{"lineNumber":128,"author":{"gitId":"SimHanKiong"},"content":"            throw new JohnnyException(\"Key in a number bro.\");","lastModifiedDate":"2024-01-21"},{"lineNumber":129,"author":{"gitId":"SimHanKiong"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-21"},{"lineNumber":130,"author":{"gitId":"SimHanKiong"},"content":"            throw new JohnnyException(\"This task does not exist bro.\");","lastModifiedDate":"2024-01-21"},{"lineNumber":131,"author":{"gitId":"SimHanKiong"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":132,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":133,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":134,"author":{"gitId":"SimHanKiong"},"content":"    public static void unmark(String command) throws JohnnyException {","lastModifiedDate":"2024-01-21"},{"lineNumber":135,"author":{"gitId":"SimHanKiong"},"content":"        try {","lastModifiedDate":"2024-01-21"},{"lineNumber":136,"author":{"gitId":"SimHanKiong"},"content":"            String[] arr \u003d command.split(\" \");","lastModifiedDate":"2024-01-21"},{"lineNumber":137,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":138,"author":{"gitId":"SimHanKiong"},"content":"            if (arr.length \u003d\u003d 1) {","lastModifiedDate":"2024-01-21"},{"lineNumber":139,"author":{"gitId":"SimHanKiong"},"content":"                throw new JohnnyException(\"Which task am I supposed to unmark bro?\");","lastModifiedDate":"2024-01-21"},{"lineNumber":140,"author":{"gitId":"SimHanKiong"},"content":"            } else if (arr.length \u003e 2) {","lastModifiedDate":"2024-01-21"},{"lineNumber":141,"author":{"gitId":"SimHanKiong"},"content":"                throw new JohnnyException(\"I can only unmark 1 task bro.\");","lastModifiedDate":"2024-01-21"},{"lineNumber":142,"author":{"gitId":"SimHanKiong"},"content":"            }","lastModifiedDate":"2024-01-20"},{"lineNumber":143,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":144,"author":{"gitId":"SimHanKiong"},"content":"            int index \u003d Integer.parseInt(arr[1]) - 1;","lastModifiedDate":"2024-01-21"},{"lineNumber":145,"author":{"gitId":"SimHanKiong"},"content":"            Task task \u003d Johnny.list.get(index);","lastModifiedDate":"2024-01-20"},{"lineNumber":146,"author":{"gitId":"SimHanKiong"},"content":"            task.unmark();","lastModifiedDate":"2024-01-20"},{"lineNumber":147,"author":{"gitId":"SimHanKiong"},"content":"            rewriteFile();","lastModifiedDate":"2024-01-28"},{"lineNumber":148,"author":{"gitId":"SimHanKiong"},"content":"            System.out.println(\"Why are you not done yet bro?\");","lastModifiedDate":"2024-01-21"},{"lineNumber":149,"author":{"gitId":"SimHanKiong"},"content":"            System.out.println(task + \"\\n\");","lastModifiedDate":"2024-01-21"},{"lineNumber":150,"author":{"gitId":"SimHanKiong"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-21"},{"lineNumber":151,"author":{"gitId":"SimHanKiong"},"content":"            throw new JohnnyException(\"Key in a number bro.\");","lastModifiedDate":"2024-01-21"},{"lineNumber":152,"author":{"gitId":"SimHanKiong"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-21"},{"lineNumber":153,"author":{"gitId":"SimHanKiong"},"content":"            throw new JohnnyException(\"This task does not exist bro.\");","lastModifiedDate":"2024-01-21"},{"lineNumber":154,"author":{"gitId":"SimHanKiong"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":155,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":156,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":157,"author":{"gitId":"SimHanKiong"},"content":"    public static void addToDo(String command) throws JohnnyException {","lastModifiedDate":"2024-01-21"},{"lineNumber":158,"author":{"gitId":"SimHanKiong"},"content":"        List\u003cString\u003e l \u003d Arrays.asList(command.split(\" \"));","lastModifiedDate":"2024-01-21"},{"lineNumber":159,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":160,"author":{"gitId":"SimHanKiong"},"content":"        if (l.size() \u003d\u003d 1) {","lastModifiedDate":"2024-01-21"},{"lineNumber":161,"author":{"gitId":"SimHanKiong"},"content":"            throw new JohnnyException(\"What is your todo bro?\");","lastModifiedDate":"2024-01-21"},{"lineNumber":162,"author":{"gitId":"SimHanKiong"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":163,"author":{"gitId":"SimHanKiong"},"content":"        String name \u003d String.join(\" \", l.subList(1, l.size()));","lastModifiedDate":"2024-01-28"},{"lineNumber":164,"author":{"gitId":"SimHanKiong"},"content":"        Task task \u003d new ToDo(name);","lastModifiedDate":"2024-01-28"},{"lineNumber":165,"author":{"gitId":"SimHanKiong"},"content":"        Johnny.list.add(task);","lastModifiedDate":"2024-01-21"},{"lineNumber":166,"author":{"gitId":"SimHanKiong"},"content":"        appendToFile(task);","lastModifiedDate":"2024-01-28"},{"lineNumber":167,"author":{"gitId":"SimHanKiong"},"content":"        System.out.println(\"Go get this done bro:\");","lastModifiedDate":"2024-01-21"},{"lineNumber":168,"author":{"gitId":"SimHanKiong"},"content":"        System.out.println(task);","lastModifiedDate":"2024-01-20"},{"lineNumber":169,"author":{"gitId":"SimHanKiong"},"content":"        System.out.println(\"You still have \" + Johnny.list.size() + \" tasks in your list bro.\\n\");","lastModifiedDate":"2024-01-21"},{"lineNumber":170,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":171,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":172,"author":{"gitId":"SimHanKiong"},"content":"    public static void addDeadline(String command) throws JohnnyException {","lastModifiedDate":"2024-01-21"},{"lineNumber":173,"author":{"gitId":"SimHanKiong"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":174,"author":{"gitId":"SimHanKiong"},"content":"            List\u003cString\u003e l \u003d Arrays.asList(command.split(\" \"));","lastModifiedDate":"2024-01-21"},{"lineNumber":175,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":176,"author":{"gitId":"SimHanKiong"},"content":"            if (l.size() \u003d\u003d 1) {","lastModifiedDate":"2024-01-21"},{"lineNumber":177,"author":{"gitId":"SimHanKiong"},"content":"                throw new JohnnyException(\"What is your deadline bro?\");","lastModifiedDate":"2024-01-21"},{"lineNumber":178,"author":{"gitId":"SimHanKiong"},"content":"            }","lastModifiedDate":"2024-01-21"},{"lineNumber":179,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":180,"author":{"gitId":"SimHanKiong"},"content":"            int i \u003d l.indexOf(\"/by\");","lastModifiedDate":"2024-01-21"},{"lineNumber":181,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":182,"author":{"gitId":"SimHanKiong"},"content":"            if (i \u003d\u003d -1) {","lastModifiedDate":"2024-01-21"},{"lineNumber":183,"author":{"gitId":"SimHanKiong"},"content":"                throw new JohnnyException(\"When is your deadline by bro?\");","lastModifiedDate":"2024-01-21"},{"lineNumber":184,"author":{"gitId":"SimHanKiong"},"content":"            }","lastModifiedDate":"2024-01-21"},{"lineNumber":185,"author":{"gitId":"SimHanKiong"},"content":"            String name \u003d String.join(\" \", l.subList(1, i));","lastModifiedDate":"2024-01-28"},{"lineNumber":186,"author":{"gitId":"SimHanKiong"},"content":"            String by \u003d String.join(\" \", l.subList(i + 1, l.size()));","lastModifiedDate":"2024-01-28"},{"lineNumber":187,"author":{"gitId":"SimHanKiong"},"content":"            LocalDateTime byDate \u003d LocalDateTime.parse(by, INPUT_FORMAT);","lastModifiedDate":"2024-01-29"},{"lineNumber":188,"author":{"gitId":"SimHanKiong"},"content":"            Task task \u003d new Deadline(name, byDate);","lastModifiedDate":"2024-01-29"},{"lineNumber":189,"author":{"gitId":"SimHanKiong"},"content":"            Johnny.list.add(task);","lastModifiedDate":"2024-01-20"},{"lineNumber":190,"author":{"gitId":"SimHanKiong"},"content":"            appendToFile(task);","lastModifiedDate":"2024-01-28"},{"lineNumber":191,"author":{"gitId":"SimHanKiong"},"content":"            System.out.println(\"Go get this done bro:\");","lastModifiedDate":"2024-01-21"},{"lineNumber":192,"author":{"gitId":"SimHanKiong"},"content":"            System.out.println(task);","lastModifiedDate":"2024-01-21"},{"lineNumber":193,"author":{"gitId":"SimHanKiong"},"content":"            System.out.println(\"You still have \" + Johnny.list.size() + \" tasks in your list bro.\\n\");","lastModifiedDate":"2024-01-21"},{"lineNumber":194,"author":{"gitId":"SimHanKiong"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":195,"author":{"gitId":"SimHanKiong"},"content":"            throw new JohnnyException(\"Date and Time should be in the format of YYYY/MM/DD HHMM bro.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":196,"author":{"gitId":"SimHanKiong"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":197,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":198,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":199,"author":{"gitId":"SimHanKiong"},"content":"    public static void addEvent(String command) throws JohnnyException {","lastModifiedDate":"2024-01-21"},{"lineNumber":200,"author":{"gitId":"SimHanKiong"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":201,"author":{"gitId":"SimHanKiong"},"content":"            List\u003cString\u003e l \u003d Arrays.asList(command.split(\" \"));","lastModifiedDate":"2024-01-21"},{"lineNumber":202,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":203,"author":{"gitId":"SimHanKiong"},"content":"            if (l.size() \u003d\u003d 1) {","lastModifiedDate":"2024-01-21"},{"lineNumber":204,"author":{"gitId":"SimHanKiong"},"content":"                throw new JohnnyException(\"What is your event bro?\");","lastModifiedDate":"2024-01-21"},{"lineNumber":205,"author":{"gitId":"SimHanKiong"},"content":"            }","lastModifiedDate":"2024-01-21"},{"lineNumber":206,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":207,"author":{"gitId":"SimHanKiong"},"content":"            int i \u003d l.indexOf(\"/from\");","lastModifiedDate":"2024-01-21"},{"lineNumber":208,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":209,"author":{"gitId":"SimHanKiong"},"content":"            if (i \u003d\u003d -1) {","lastModifiedDate":"2024-01-21"},{"lineNumber":210,"author":{"gitId":"SimHanKiong"},"content":"                throw new JohnnyException(\"When does your event start from bro?\");","lastModifiedDate":"2024-01-21"},{"lineNumber":211,"author":{"gitId":"SimHanKiong"},"content":"            }","lastModifiedDate":"2024-01-21"},{"lineNumber":212,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":213,"author":{"gitId":"SimHanKiong"},"content":"            int j \u003d l.indexOf(\"/to\");","lastModifiedDate":"2024-01-21"},{"lineNumber":214,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":215,"author":{"gitId":"SimHanKiong"},"content":"            if (j \u003d\u003d -1) {","lastModifiedDate":"2024-01-21"},{"lineNumber":216,"author":{"gitId":"SimHanKiong"},"content":"                throw new JohnnyException(\"When does your event last to bro?\");","lastModifiedDate":"2024-01-21"},{"lineNumber":217,"author":{"gitId":"SimHanKiong"},"content":"            }","lastModifiedDate":"2024-01-21"},{"lineNumber":218,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":219,"author":{"gitId":"SimHanKiong"},"content":"            String name \u003d String.join(\" \", l.subList(1, i));","lastModifiedDate":"2024-01-28"},{"lineNumber":220,"author":{"gitId":"SimHanKiong"},"content":"            String from \u003d String.join(\" \", l.subList(i + 1, j));","lastModifiedDate":"2024-01-28"},{"lineNumber":221,"author":{"gitId":"SimHanKiong"},"content":"            String to \u003d String.join(\" \", l.subList(j + 1, l.size()));","lastModifiedDate":"2024-01-28"},{"lineNumber":222,"author":{"gitId":"SimHanKiong"},"content":"            LocalDateTime fromDate \u003d LocalDateTime.parse(from, INPUT_FORMAT);","lastModifiedDate":"2024-01-29"},{"lineNumber":223,"author":{"gitId":"SimHanKiong"},"content":"            LocalDateTime toDate \u003d LocalDateTime.parse(to, INPUT_FORMAT);","lastModifiedDate":"2024-01-29"},{"lineNumber":224,"author":{"gitId":"SimHanKiong"},"content":"            Task task \u003d new Event(name, fromDate, toDate);","lastModifiedDate":"2024-01-29"},{"lineNumber":225,"author":{"gitId":"SimHanKiong"},"content":"            Johnny.list.add(task);","lastModifiedDate":"2024-01-21"},{"lineNumber":226,"author":{"gitId":"SimHanKiong"},"content":"            appendToFile(task);","lastModifiedDate":"2024-01-28"},{"lineNumber":227,"author":{"gitId":"SimHanKiong"},"content":"            System.out.println(\"Go get this done bro:\");","lastModifiedDate":"2024-01-21"},{"lineNumber":228,"author":{"gitId":"SimHanKiong"},"content":"            System.out.println(task);","lastModifiedDate":"2024-01-21"},{"lineNumber":229,"author":{"gitId":"SimHanKiong"},"content":"            System.out.println(\"You still have \" + Johnny.list.size() + \" tasks in your list bro.\\n\");","lastModifiedDate":"2024-01-21"},{"lineNumber":230,"author":{"gitId":"SimHanKiong"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":231,"author":{"gitId":"SimHanKiong"},"content":"            throw new JohnnyException(\"Date and Time should be in the format of YYYY/MM/DD HHMM bro.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":232,"author":{"gitId":"SimHanKiong"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":233,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":234,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":235,"author":{"gitId":"SimHanKiong"},"content":"    public static void delete(String command) throws JohnnyException {","lastModifiedDate":"2024-01-21"},{"lineNumber":236,"author":{"gitId":"SimHanKiong"},"content":"        try {","lastModifiedDate":"2024-01-21"},{"lineNumber":237,"author":{"gitId":"SimHanKiong"},"content":"            String[] arr \u003d command.split(\" \");","lastModifiedDate":"2024-01-21"},{"lineNumber":238,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":239,"author":{"gitId":"SimHanKiong"},"content":"            if (arr.length \u003d\u003d 1) {","lastModifiedDate":"2024-01-21"},{"lineNumber":240,"author":{"gitId":"SimHanKiong"},"content":"                throw new JohnnyException(\"Which task am I supposed to delete bro?\");","lastModifiedDate":"2024-01-21"},{"lineNumber":241,"author":{"gitId":"SimHanKiong"},"content":"            } else if (arr.length \u003e 2) {","lastModifiedDate":"2024-01-21"},{"lineNumber":242,"author":{"gitId":"SimHanKiong"},"content":"                throw new JohnnyException(\"I can only delete 1 task bro.\");","lastModifiedDate":"2024-01-21"},{"lineNumber":243,"author":{"gitId":"SimHanKiong"},"content":"            }","lastModifiedDate":"2024-01-21"},{"lineNumber":244,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":245,"author":{"gitId":"SimHanKiong"},"content":"            int index \u003d Integer.parseInt(arr[1]) - 1;","lastModifiedDate":"2024-01-21"},{"lineNumber":246,"author":{"gitId":"SimHanKiong"},"content":"            Task task \u003d Johnny.list.remove(index);","lastModifiedDate":"2024-01-21"},{"lineNumber":247,"author":{"gitId":"SimHanKiong"},"content":"            rewriteFile();","lastModifiedDate":"2024-01-28"},{"lineNumber":248,"author":{"gitId":"SimHanKiong"},"content":"            System.out.println(\"Task removed. Why so lazy bro?\");","lastModifiedDate":"2024-01-21"},{"lineNumber":249,"author":{"gitId":"SimHanKiong"},"content":"            System.out.println(task);","lastModifiedDate":"2024-01-21"},{"lineNumber":250,"author":{"gitId":"SimHanKiong"},"content":"            System.out.println(\"You still have \" + Johnny.list.size() + \" tasks in your list bro.\\n\");","lastModifiedDate":"2024-01-21"},{"lineNumber":251,"author":{"gitId":"SimHanKiong"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-21"},{"lineNumber":252,"author":{"gitId":"SimHanKiong"},"content":"            throw new JohnnyException(\"Key in a number bro.\");","lastModifiedDate":"2024-01-21"},{"lineNumber":253,"author":{"gitId":"SimHanKiong"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-21"},{"lineNumber":254,"author":{"gitId":"SimHanKiong"},"content":"            throw new JohnnyException(\"This task does not exist bro.\");","lastModifiedDate":"2024-01-21"},{"lineNumber":255,"author":{"gitId":"SimHanKiong"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":256,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":257,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":258,"author":{"gitId":"SimHanKiong"},"content":"    public static void rewriteFile() throws JohnnyException {","lastModifiedDate":"2024-01-28"},{"lineNumber":259,"author":{"gitId":"SimHanKiong"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":260,"author":{"gitId":"SimHanKiong"},"content":"            FileWriter fw \u003d new FileWriter(\"./data/johnny.txt\");","lastModifiedDate":"2024-01-28"},{"lineNumber":261,"author":{"gitId":"SimHanKiong"},"content":"            for (Task task: Johnny.list) {","lastModifiedDate":"2024-01-28"},{"lineNumber":262,"author":{"gitId":"SimHanKiong"},"content":"                fw.write(task.addToFile());","lastModifiedDate":"2024-01-28"},{"lineNumber":263,"author":{"gitId":"SimHanKiong"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":264,"author":{"gitId":"SimHanKiong"},"content":"            fw.close();","lastModifiedDate":"2024-01-28"},{"lineNumber":265,"author":{"gitId":"SimHanKiong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":266,"author":{"gitId":"SimHanKiong"},"content":"            throw new JohnnyException(\"Cannot write to file bro: \" + e.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":267,"author":{"gitId":"SimHanKiong"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":268,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":269,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":270,"author":{"gitId":"SimHanKiong"},"content":"    public static void appendToFile(Task task) throws JohnnyException {","lastModifiedDate":"2024-01-28"},{"lineNumber":271,"author":{"gitId":"SimHanKiong"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":272,"author":{"gitId":"SimHanKiong"},"content":"            FileWriter fw \u003d new FileWriter(\"./data/johnny.txt\", true);","lastModifiedDate":"2024-01-28"},{"lineNumber":273,"author":{"gitId":"SimHanKiong"},"content":"            fw.write(task.addToFile());","lastModifiedDate":"2024-01-28"},{"lineNumber":274,"author":{"gitId":"SimHanKiong"},"content":"            fw.close();","lastModifiedDate":"2024-01-28"},{"lineNumber":275,"author":{"gitId":"SimHanKiong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":276,"author":{"gitId":"SimHanKiong"},"content":"            throw new JohnnyException(\"Cannot write to file bro: \" + e.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":277,"author":{"gitId":"SimHanKiong"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":278,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":279,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":280,"author":{"gitId":"SimHanKiong"},"content":"}","lastModifiedDate":"2024-01-20"}],"authorContributionMap":{"SimHanKiong":280}},{"path":"src/main/java/JohnnyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SimHanKiong"},"content":"public class JohnnyException extends Exception {","lastModifiedDate":"2024-01-21"},{"lineNumber":2,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":3,"author":{"gitId":"SimHanKiong"},"content":"    public JohnnyException(String errorMessage) {","lastModifiedDate":"2024-01-21"},{"lineNumber":4,"author":{"gitId":"SimHanKiong"},"content":"        super(errorMessage);","lastModifiedDate":"2024-01-21"},{"lineNumber":5,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":6,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":7,"author":{"gitId":"SimHanKiong"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"SimHanKiong":7}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SimHanKiong"},"content":"public class Task {","lastModifiedDate":"2024-01-20"},{"lineNumber":2,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":3,"author":{"gitId":"SimHanKiong"},"content":"    protected String name;","lastModifiedDate":"2024-01-20"},{"lineNumber":4,"author":{"gitId":"SimHanKiong"},"content":"    protected boolean isDone \u003d false;","lastModifiedDate":"2024-01-20"},{"lineNumber":5,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":6,"author":{"gitId":"SimHanKiong"},"content":"    public Task(String name) {","lastModifiedDate":"2024-01-20"},{"lineNumber":7,"author":{"gitId":"SimHanKiong"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-01-20"},{"lineNumber":8,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":9,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":10,"author":{"gitId":"SimHanKiong"},"content":"    public void mark() {","lastModifiedDate":"2024-01-20"},{"lineNumber":11,"author":{"gitId":"SimHanKiong"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":13,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":14,"author":{"gitId":"SimHanKiong"},"content":"    public void unmark() {","lastModifiedDate":"2024-01-20"},{"lineNumber":15,"author":{"gitId":"SimHanKiong"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":17,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":18,"author":{"gitId":"SimHanKiong"},"content":"    @Override","lastModifiedDate":"2024-01-20"},{"lineNumber":19,"author":{"gitId":"SimHanKiong"},"content":"    public String toString() {","lastModifiedDate":"2024-01-20"},{"lineNumber":20,"author":{"gitId":"SimHanKiong"},"content":"        String x \u003d isDone ? \"X\" : \" \";","lastModifiedDate":"2024-01-20"},{"lineNumber":21,"author":{"gitId":"SimHanKiong"},"content":"        return \"[\" + x + \"] \" + name;","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"SimHanKiong"},"content":"    public String addToFile() {","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"SimHanKiong"},"content":"        String isDone \u003d this.isDone ? \"1\" : \"0\";","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"SimHanKiong"},"content":"        return isDone + \" | \" + name;","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":28,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":29,"author":{"gitId":"SimHanKiong"},"content":"}","lastModifiedDate":"2024-01-20"}],"authorContributionMap":{"SimHanKiong":29}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SimHanKiong"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-21"},{"lineNumber":2,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":3,"author":{"gitId":"SimHanKiong"},"content":"    public ToDo(String name) {","lastModifiedDate":"2024-01-21"},{"lineNumber":4,"author":{"gitId":"SimHanKiong"},"content":"        super(name);","lastModifiedDate":"2024-01-21"},{"lineNumber":5,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":6,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":7,"author":{"gitId":"SimHanKiong"},"content":"    @Override","lastModifiedDate":"2024-01-21"},{"lineNumber":8,"author":{"gitId":"SimHanKiong"},"content":"    public String toString() {","lastModifiedDate":"2024-01-21"},{"lineNumber":9,"author":{"gitId":"SimHanKiong"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-21"},{"lineNumber":10,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":11,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"SimHanKiong"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"SimHanKiong"},"content":"    public String addToFile() {","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"SimHanKiong"},"content":"        return \"T | \" + super.addToFile() + \"\\n\";","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"SimHanKiong"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"SimHanKiong":17}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"SimHanKiong"},"content":"todo borrow book","lastModifiedDate":"2024-01-21"},{"lineNumber":2,"author":{"gitId":"SimHanKiong"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-21"},{"lineNumber":3,"author":{"gitId":"SimHanKiong"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-21"},{"lineNumber":4,"author":{"gitId":"SimHanKiong"},"content":"list","lastModifiedDate":"2024-01-21"},{"lineNumber":5,"author":{"gitId":"SimHanKiong"},"content":"mark 1","lastModifiedDate":"2024-01-21"},{"lineNumber":6,"author":{"gitId":"SimHanKiong"},"content":"list","lastModifiedDate":"2024-01-21"},{"lineNumber":7,"author":{"gitId":"SimHanKiong"},"content":"unmark 1","lastModifiedDate":"2024-01-21"},{"lineNumber":8,"author":{"gitId":"SimHanKiong"},"content":"list","lastModifiedDate":"2024-01-21"},{"lineNumber":9,"author":{"gitId":"SimHanKiong"},"content":"delete 2","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"SimHanKiong"},"content":"blablabla","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"SimHanKiong"},"content":"bye","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"SimHanKiong":11}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"SimHanKiong"},"content":"java -classpath ../bin Johnny \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"SimHanKiong":1,"-":37}}]
