[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ChenXy128"},"content":"# Jinni User Guide","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"ChenXy128"},"content":"![UI Screenshot](docs/Ui.png \"UI Screenshot\")","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"ChenXy128"},"content":"Before using, ensure that you have installed java 11 or above","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"ChenXy128"},"content":"## Jinni is a chatbot that assists you in managing the tasks you need to do. She can handle 3 types of tasks:","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"ChenXy128"},"content":"### Adding todos","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"ChenXy128"},"content":"***","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"ChenXy128"},"content":"Follow the command format below to add a *todo* task","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"ChenXy128"},"content":"`todo \u003cdescription\u003e`","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"ChenXy128"},"content":"After you tab `return` key, you will see response like the one below","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"ChenXy128"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"ChenXy128"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"ChenXy128"},"content":"  [T][] running","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"ChenXy128"},"content":"Now you have 2 tasks in the list","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"ChenXy128"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"ChenXy128"},"content":"* In the example above, the task description is *running*  ","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"ChenXy128"},"content":"* There\u0027s a *T* in the first [ ], which stands for task of type *todo*  ","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"ChenXy128"},"content":"* The next [ ] is for marking the task as done or undone (the example shows that the task is undone as the box is empty)","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"ChenXy128"},"content":"### Adding deadlines","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"ChenXy128"},"content":"***","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"ChenXy128"},"content":"Follow the command format below to add a *deadline* task","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"ChenXy128"},"content":"`deadline \u003cdescription\u003e /by dd/MM/yyyy`","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"ChenXy128"},"content":"After you tab `return` key, you will see response like the one below","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":32,"author":{"gitId":"ChenXy128"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"ChenXy128"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"ChenXy128"},"content":"  [D][] homework (by: Feb 02 2024)","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"ChenXy128"},"content":"Now you have 3 tasks in the list","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"ChenXy128"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"ChenXy128"},"content":"* In the example above, the task description is *homework*","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"ChenXy128"},"content":"* There\u0027s a *D* in the first [ ], which stands for task of type *deadline*","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"ChenXy128"},"content":"* The next [ ] is for marking the task as done or undone (the example shows that the task is undone as the box is empty)","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"ChenXy128"},"content":"* Remember the / before *by* and follow the date format as dd/MM/yyyy","lastModifiedDate":"2024-02-22"},{"lineNumber":41,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":43,"author":{"gitId":"ChenXy128"},"content":"### Adding events","lastModifiedDate":"2024-02-22"},{"lineNumber":44,"author":{"gitId":"ChenXy128"},"content":"***","lastModifiedDate":"2024-02-22"},{"lineNumber":45,"author":{"gitId":"ChenXy128"},"content":"Follow the command format below to add a *event* task","lastModifiedDate":"2024-02-22"},{"lineNumber":46,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":47,"author":{"gitId":"ChenXy128"},"content":"`event \u003cdescription\u003e /from dd/MM/yyyy /to dd/MM/yyyy`","lastModifiedDate":"2024-02-22"},{"lineNumber":48,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":49,"author":{"gitId":"ChenXy128"},"content":"After you tab `return` key, you will see response like the one below","lastModifiedDate":"2024-02-22"},{"lineNumber":50,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":51,"author":{"gitId":"ChenXy128"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":52,"author":{"gitId":"ChenXy128"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2024-02-22"},{"lineNumber":53,"author":{"gitId":"ChenXy128"},"content":"  [E][] open house (from Feb 02 2024 to Feb 03 2024)","lastModifiedDate":"2024-02-22"},{"lineNumber":54,"author":{"gitId":"ChenXy128"},"content":"Now you have 4 tasks in the list","lastModifiedDate":"2024-02-22"},{"lineNumber":55,"author":{"gitId":"ChenXy128"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":56,"author":{"gitId":"ChenXy128"},"content":"* In the example above, the task description is *open house*","lastModifiedDate":"2024-02-22"},{"lineNumber":57,"author":{"gitId":"ChenXy128"},"content":"* There\u0027s a *E* in the first [ ], which stands for task of type *event*","lastModifiedDate":"2024-02-22"},{"lineNumber":58,"author":{"gitId":"ChenXy128"},"content":"* The next [ ] is for marking the task as done or undone (the example shows that the task is undone as the box is empty)","lastModifiedDate":"2024-02-22"},{"lineNumber":59,"author":{"gitId":"ChenXy128"},"content":"* Remember the / before *from* and *to* and follow the date format as dd/MM/yyyy","lastModifiedDate":"2024-02-22"},{"lineNumber":60,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":61,"author":{"gitId":"ChenXy128"},"content":"## Besides adding tasks, Jinni also allows you to manage your tasks","lastModifiedDate":"2024-02-22"},{"lineNumber":62,"author":{"gitId":"ChenXy128"},"content":"### List all your tasks","lastModifiedDate":"2024-02-22"},{"lineNumber":63,"author":{"gitId":"ChenXy128"},"content":"***","lastModifiedDate":"2024-02-22"},{"lineNumber":64,"author":{"gitId":"ChenXy128"},"content":"Follow the command format below to *list* your tasks","lastModifiedDate":"2024-02-22"},{"lineNumber":65,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":66,"author":{"gitId":"ChenXy128"},"content":"`list`","lastModifiedDate":"2024-02-22"},{"lineNumber":67,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":68,"author":{"gitId":"ChenXy128"},"content":"After you tab `return` key, you will see response like the one below","lastModifiedDate":"2024-02-22"},{"lineNumber":69,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":70,"author":{"gitId":"ChenXy128"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":71,"author":{"gitId":"ChenXy128"},"content":"Here are the tasks in your list","lastModifiedDate":"2024-02-22"},{"lineNumber":72,"author":{"gitId":"ChenXy128"},"content":"1.[T][X] running","lastModifiedDate":"2024-02-22"},{"lineNumber":73,"author":{"gitId":"ChenXy128"},"content":"2.[D][] homework (by: Feb 24 2024)","lastModifiedDate":"2024-02-22"},{"lineNumber":74,"author":{"gitId":"ChenXy128"},"content":"3.[E][] open house (from Feb 02 2024 to Feb 03 2024)","lastModifiedDate":"2024-02-22"},{"lineNumber":75,"author":{"gitId":"ChenXy128"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":76,"author":{"gitId":"ChenXy128"},"content":"### Mark a task as done","lastModifiedDate":"2024-02-22"},{"lineNumber":77,"author":{"gitId":"ChenXy128"},"content":"***","lastModifiedDate":"2024-02-22"},{"lineNumber":78,"author":{"gitId":"ChenXy128"},"content":"Follow the command format below to *mark* your task as done","lastModifiedDate":"2024-02-22"},{"lineNumber":79,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":80,"author":{"gitId":"ChenXy128"},"content":"`mark x`, where *x* stands for the task number","lastModifiedDate":"2024-02-22"},{"lineNumber":81,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":82,"author":{"gitId":"ChenXy128"},"content":"After you tab `return` key, you will see response like the one below","lastModifiedDate":"2024-02-22"},{"lineNumber":83,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":84,"author":{"gitId":"ChenXy128"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":85,"author":{"gitId":"ChenXy128"},"content":"Nice! I have marked this task as done","lastModifiedDate":"2024-02-22"},{"lineNumber":86,"author":{"gitId":"ChenXy128"},"content":"[T][X] running","lastModifiedDate":"2024-02-22"},{"lineNumber":87,"author":{"gitId":"ChenXy128"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":88,"author":{"gitId":"ChenXy128"},"content":"* Now the second [ ] as an *X* in it, representing a task has been completed","lastModifiedDate":"2024-02-22"},{"lineNumber":89,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":90,"author":{"gitId":"ChenXy128"},"content":"### Unmark a task as undone ","lastModifiedDate":"2024-02-22"},{"lineNumber":91,"author":{"gitId":"ChenXy128"},"content":"***","lastModifiedDate":"2024-02-22"},{"lineNumber":92,"author":{"gitId":"ChenXy128"},"content":"Follow the command format below to *unmark* a task as undone","lastModifiedDate":"2024-02-22"},{"lineNumber":93,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":94,"author":{"gitId":"ChenXy128"},"content":"`unmark x`, where *x* stands for the task number","lastModifiedDate":"2024-02-22"},{"lineNumber":95,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":96,"author":{"gitId":"ChenXy128"},"content":"After you tab `return` key, you will see response like the one below","lastModifiedDate":"2024-02-22"},{"lineNumber":97,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":98,"author":{"gitId":"ChenXy128"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":99,"author":{"gitId":"ChenXy128"},"content":"Ok, I\u0027ve marked this task as not done yet","lastModifiedDate":"2024-02-22"},{"lineNumber":100,"author":{"gitId":"ChenXy128"},"content":"[T][] running","lastModifiedDate":"2024-02-22"},{"lineNumber":101,"author":{"gitId":"ChenXy128"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":102,"author":{"gitId":"ChenXy128"},"content":"* Now the second [ ] is empty again, meaning the task is not done yet","lastModifiedDate":"2024-02-22"},{"lineNumber":103,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":104,"author":{"gitId":"ChenXy128"},"content":"### Delete a task from the task list","lastModifiedDate":"2024-02-22"},{"lineNumber":105,"author":{"gitId":"ChenXy128"},"content":"***","lastModifiedDate":"2024-02-22"},{"lineNumber":106,"author":{"gitId":"ChenXy128"},"content":"Follow the command format below to *delete* a task","lastModifiedDate":"2024-02-22"},{"lineNumber":107,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":108,"author":{"gitId":"ChenXy128"},"content":"`delete x`, where *x* stand for the task number","lastModifiedDate":"2024-02-22"},{"lineNumber":109,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":110,"author":{"gitId":"ChenXy128"},"content":"After you tab `return` key, you will see response like the one below","lastModifiedDate":"2024-02-22"},{"lineNumber":111,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":112,"author":{"gitId":"ChenXy128"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":113,"author":{"gitId":"ChenXy128"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2024-02-22"},{"lineNumber":114,"author":{"gitId":"ChenXy128"},"content":"  [T][X] running","lastModifiedDate":"2024-02-22"},{"lineNumber":115,"author":{"gitId":"ChenXy128"},"content":"Now you have 3 tasks in the list","lastModifiedDate":"2024-02-22"},{"lineNumber":116,"author":{"gitId":"ChenXy128"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":117,"author":{"gitId":"ChenXy128"},"content":"### Find a task in the task list","lastModifiedDate":"2024-02-22"},{"lineNumber":118,"author":{"gitId":"ChenXy128"},"content":"***","lastModifiedDate":"2024-02-22"},{"lineNumber":119,"author":{"gitId":"ChenXy128"},"content":"Follow the command format below to *find* a task","lastModifiedDate":"2024-02-22"},{"lineNumber":120,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":121,"author":{"gitId":"ChenXy128"},"content":"`find \u003ckeyword\u003e`, where *keyword* is a part of task description you are looking for ","lastModifiedDate":"2024-02-22"},{"lineNumber":122,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":123,"author":{"gitId":"ChenXy128"},"content":"After you tab `return` key, you will see response like the one below","lastModifiedDate":"2024-02-22"},{"lineNumber":124,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":125,"author":{"gitId":"ChenXy128"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":126,"author":{"gitId":"ChenXy128"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2024-02-22"},{"lineNumber":127,"author":{"gitId":"ChenXy128"},"content":"1.[T][] running","lastModifiedDate":"2024-02-22"},{"lineNumber":128,"author":{"gitId":"ChenXy128"},"content":"2.[T][X] run with peter","lastModifiedDate":"2024-02-22"},{"lineNumber":129,"author":{"gitId":"ChenXy128"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":130,"author":{"gitId":"ChenXy128"},"content":"### Close the chatbot","lastModifiedDate":"2024-02-22"},{"lineNumber":131,"author":{"gitId":"ChenXy128"},"content":"***","lastModifiedDate":"2024-02-22"},{"lineNumber":132,"author":{"gitId":"ChenXy128"},"content":"Simple type `bye` followed by the `return` key, you will see the response below:","lastModifiedDate":"2024-02-22"},{"lineNumber":133,"author":{"gitId":"ChenXy128"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":134,"author":{"gitId":"ChenXy128"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2024-02-22"},{"lineNumber":135,"author":{"gitId":"ChenXy128"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":136,"author":{"gitId":"ChenXy128"},"content":"Wait for 2 seconds, the chatbot will be closed","lastModifiedDate":"2024-02-22"},{"lineNumber":137,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"ChenXy128":137}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"ChenXy128"},"content":"    /*","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"ChenXy128"},"content":"    testImplementation project(path: \u0027:\u0027)","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":16,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"ChenXy128"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"ChenXy128"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"ChenXy128"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"ChenXy128"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"ChenXy128"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"ChenXy128"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"ChenXy128"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"ChenXy128"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"ChenXy128"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"ChenXy128"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"ChenXy128"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"ChenXy128"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"ChenXy128"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"ChenXy128"},"content":"    mainClass.set(\"duke.main.Launcher\")","lastModifiedDate":"2024-02-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"ChenXy128"},"content":"    archiveFileName \u003d \u0027jinni.jar\u0027","lastModifiedDate":"2024-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ChenXy128":20,"-":41}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ChenXy128"},"content":"# Jinni User Guide","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"ChenXy128"},"content":"![UI Screenshot](Ui.png \"UI Screenshot\")","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"ChenXy128"},"content":"Before using, ensure that you have installed java 11 or above","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"ChenXy128"},"content":"## Jinni is a chatbot that assists you in managing the tasks you need to do. She can handle 3 types of tasks:","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"ChenXy128"},"content":"### Adding todos","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"ChenXy128"},"content":"***","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"ChenXy128"},"content":"Follow the command format below to add a *todo* task","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"ChenXy128"},"content":"`todo \u003cdescription\u003e`","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"ChenXy128"},"content":"After you tab `return` key, you will see response like the one below","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"ChenXy128"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"ChenXy128"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"ChenXy128"},"content":"  [T][] running","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"ChenXy128"},"content":"Now you have 2 tasks in the list","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"ChenXy128"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"ChenXy128"},"content":"* In the example above, the task description is *running*  ","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"ChenXy128"},"content":"* There\u0027s a *T* in the first [ ], which stands for task of type *todo*  ","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"ChenXy128"},"content":"* The next [ ] is for marking the task as done or undone (the example shows that the task is undone as the box is empty)","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"ChenXy128"},"content":"### Adding deadlines","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"ChenXy128"},"content":"***","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"ChenXy128"},"content":"Follow the command format below to add a *deadline* task","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"ChenXy128"},"content":"`deadline \u003cdescription\u003e /by dd/MM/yyyy`","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"ChenXy128"},"content":"After you tab `return` key, you will see response like the one below","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":32,"author":{"gitId":"ChenXy128"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"ChenXy128"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"ChenXy128"},"content":"  [D][] homework (by: Feb 02 2024)","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"ChenXy128"},"content":"Now you have 3 tasks in the list","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"ChenXy128"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"ChenXy128"},"content":"* In the example above, the task description is *homework*","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"ChenXy128"},"content":"* There\u0027s a *D* in the first [ ], which stands for task of type *deadline*","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"ChenXy128"},"content":"* The next [ ] is for marking the task as done or undone (the example shows that the task is undone as the box is empty)","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"ChenXy128"},"content":"* Remember the / before *by* and follow the date format as dd/MM/yyyy","lastModifiedDate":"2024-02-22"},{"lineNumber":41,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":43,"author":{"gitId":"ChenXy128"},"content":"### Adding events","lastModifiedDate":"2024-02-22"},{"lineNumber":44,"author":{"gitId":"ChenXy128"},"content":"***","lastModifiedDate":"2024-02-22"},{"lineNumber":45,"author":{"gitId":"ChenXy128"},"content":"Follow the command format below to add a *event* task","lastModifiedDate":"2024-02-22"},{"lineNumber":46,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":47,"author":{"gitId":"ChenXy128"},"content":"`event \u003cdescription\u003e /from dd/MM/yyyy /to dd/MM/yyyy`","lastModifiedDate":"2024-02-22"},{"lineNumber":48,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":49,"author":{"gitId":"ChenXy128"},"content":"After you tab `return` key, you will see response like the one below","lastModifiedDate":"2024-02-22"},{"lineNumber":50,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":51,"author":{"gitId":"ChenXy128"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":52,"author":{"gitId":"ChenXy128"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2024-02-22"},{"lineNumber":53,"author":{"gitId":"ChenXy128"},"content":"  [E][] open house (from Feb 02 2024 to Feb 03 2024)","lastModifiedDate":"2024-02-22"},{"lineNumber":54,"author":{"gitId":"ChenXy128"},"content":"Now you have 4 tasks in the list","lastModifiedDate":"2024-02-22"},{"lineNumber":55,"author":{"gitId":"ChenXy128"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":56,"author":{"gitId":"ChenXy128"},"content":"* In the example above, the task description is *open house*","lastModifiedDate":"2024-02-22"},{"lineNumber":57,"author":{"gitId":"ChenXy128"},"content":"* There\u0027s a *E* in the first [ ], which stands for task of type *event*","lastModifiedDate":"2024-02-22"},{"lineNumber":58,"author":{"gitId":"ChenXy128"},"content":"* The next [ ] is for marking the task as done or undone (the example shows that the task is undone as the box is empty)","lastModifiedDate":"2024-02-22"},{"lineNumber":59,"author":{"gitId":"ChenXy128"},"content":"* Remember the / before *from* and *to* and follow the date format as dd/MM/yyyy","lastModifiedDate":"2024-02-22"},{"lineNumber":60,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":61,"author":{"gitId":"ChenXy128"},"content":"## Besides adding tasks, Jinni also allows you to manage your tasks","lastModifiedDate":"2024-02-22"},{"lineNumber":62,"author":{"gitId":"ChenXy128"},"content":"### List all your tasks","lastModifiedDate":"2024-02-22"},{"lineNumber":63,"author":{"gitId":"ChenXy128"},"content":"***","lastModifiedDate":"2024-02-22"},{"lineNumber":64,"author":{"gitId":"ChenXy128"},"content":"Follow the command format below to *list* your tasks","lastModifiedDate":"2024-02-22"},{"lineNumber":65,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":66,"author":{"gitId":"ChenXy128"},"content":"`list`","lastModifiedDate":"2024-02-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":68,"author":{"gitId":"ChenXy128"},"content":"After you tab `return` key, you will see response like the one below","lastModifiedDate":"2024-02-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":70,"author":{"gitId":"ChenXy128"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":71,"author":{"gitId":"ChenXy128"},"content":"Here are the tasks in your list","lastModifiedDate":"2024-02-22"},{"lineNumber":72,"author":{"gitId":"ChenXy128"},"content":"1.[T][X] running","lastModifiedDate":"2024-02-22"},{"lineNumber":73,"author":{"gitId":"ChenXy128"},"content":"2.[D][] homework (by: Feb 24 2024)","lastModifiedDate":"2024-02-22"},{"lineNumber":74,"author":{"gitId":"ChenXy128"},"content":"3.[E][] open house (from Feb 02 2024 to Feb 03 2024)","lastModifiedDate":"2024-02-22"},{"lineNumber":75,"author":{"gitId":"ChenXy128"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":76,"author":{"gitId":"ChenXy128"},"content":"### Mark a task as done","lastModifiedDate":"2024-02-22"},{"lineNumber":77,"author":{"gitId":"ChenXy128"},"content":"***","lastModifiedDate":"2024-02-22"},{"lineNumber":78,"author":{"gitId":"ChenXy128"},"content":"Follow the command format below to *mark* your task as done","lastModifiedDate":"2024-02-22"},{"lineNumber":79,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":80,"author":{"gitId":"ChenXy128"},"content":"`mark x`, where *x* stands for the task number","lastModifiedDate":"2024-02-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":82,"author":{"gitId":"ChenXy128"},"content":"After you tab `return` key, you will see response like the one below","lastModifiedDate":"2024-02-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":85,"author":{"gitId":"ChenXy128"},"content":"Nice! I have marked this task as done","lastModifiedDate":"2024-02-22"},{"lineNumber":86,"author":{"gitId":"ChenXy128"},"content":"[T][X] running","lastModifiedDate":"2024-02-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":88,"author":{"gitId":"ChenXy128"},"content":"* Now the second [ ] as an *X* in it, representing a task has been completed","lastModifiedDate":"2024-02-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":90,"author":{"gitId":"ChenXy128"},"content":"### Unmark a task as undone ","lastModifiedDate":"2024-02-22"},{"lineNumber":91,"author":{"gitId":"ChenXy128"},"content":"***","lastModifiedDate":"2024-02-22"},{"lineNumber":92,"author":{"gitId":"ChenXy128"},"content":"Follow the command format below to *unmark* a task as undone","lastModifiedDate":"2024-02-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":94,"author":{"gitId":"ChenXy128"},"content":"`unmark x`, where *x* stands for the task number","lastModifiedDate":"2024-02-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":96,"author":{"gitId":"ChenXy128"},"content":"After you tab `return` key, you will see response like the one below","lastModifiedDate":"2024-02-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":99,"author":{"gitId":"ChenXy128"},"content":"Ok, I\u0027ve marked this task as not done yet","lastModifiedDate":"2024-02-22"},{"lineNumber":100,"author":{"gitId":"ChenXy128"},"content":"[T][] running","lastModifiedDate":"2024-02-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":102,"author":{"gitId":"ChenXy128"},"content":"* Now the second [ ] is empty again, meaning the task is not done yet","lastModifiedDate":"2024-02-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":104,"author":{"gitId":"ChenXy128"},"content":"### Delete a task from the task list","lastModifiedDate":"2024-02-22"},{"lineNumber":105,"author":{"gitId":"ChenXy128"},"content":"***","lastModifiedDate":"2024-02-22"},{"lineNumber":106,"author":{"gitId":"ChenXy128"},"content":"Follow the command format below to *delete* a task","lastModifiedDate":"2024-02-22"},{"lineNumber":107,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":108,"author":{"gitId":"ChenXy128"},"content":"`delete x`, where *x* stand for the task number","lastModifiedDate":"2024-02-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":110,"author":{"gitId":"ChenXy128"},"content":"After you tab `return` key, you will see response like the one below","lastModifiedDate":"2024-02-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":112,"author":{"gitId":"ChenXy128"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":113,"author":{"gitId":"ChenXy128"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2024-02-22"},{"lineNumber":114,"author":{"gitId":"ChenXy128"},"content":"  [T][X] running","lastModifiedDate":"2024-02-22"},{"lineNumber":115,"author":{"gitId":"ChenXy128"},"content":"Now you have 3 tasks in the list","lastModifiedDate":"2024-02-22"},{"lineNumber":116,"author":{"gitId":"ChenXy128"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":117,"author":{"gitId":"ChenXy128"},"content":"### Find a task in the task list","lastModifiedDate":"2024-02-22"},{"lineNumber":118,"author":{"gitId":"ChenXy128"},"content":"***","lastModifiedDate":"2024-02-22"},{"lineNumber":119,"author":{"gitId":"ChenXy128"},"content":"Follow the command format below to *find* a task","lastModifiedDate":"2024-02-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":121,"author":{"gitId":"ChenXy128"},"content":"`find \u003ckeyword\u003e`, where *keyword* is a part of task description you are looking for ","lastModifiedDate":"2024-02-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":123,"author":{"gitId":"ChenXy128"},"content":"After you tab `return` key, you will see response like the one below","lastModifiedDate":"2024-02-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07"},{"lineNumber":125,"author":{"gitId":"ChenXy128"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":126,"author":{"gitId":"ChenXy128"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2024-02-22"},{"lineNumber":127,"author":{"gitId":"ChenXy128"},"content":"1.[T][] running","lastModifiedDate":"2024-02-22"},{"lineNumber":128,"author":{"gitId":"ChenXy128"},"content":"2.[T][X] run with peter","lastModifiedDate":"2024-02-22"},{"lineNumber":129,"author":{"gitId":"ChenXy128"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":130,"author":{"gitId":"ChenXy128"},"content":"### Close the chatbot","lastModifiedDate":"2024-02-22"},{"lineNumber":131,"author":{"gitId":"ChenXy128"},"content":"***","lastModifiedDate":"2024-02-22"},{"lineNumber":132,"author":{"gitId":"ChenXy128"},"content":"Simple type `bye` followed by the `return` key, you will see the response below:","lastModifiedDate":"2024-02-22"},{"lineNumber":133,"author":{"gitId":"ChenXy128"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":134,"author":{"gitId":"ChenXy128"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2024-02-22"},{"lineNumber":135,"author":{"gitId":"ChenXy128"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":136,"author":{"gitId":"ChenXy128"},"content":"Wait for 2 seconds, the chatbot will be closed","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"ChenXy128":113,"-":23}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChenXy128"},"content":"package duke.exception;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"ChenXy128"},"content":"/**","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"ChenXy128"},"content":" * Represents exceptions specific to the Duke application. This class extends the standard Java {@code Exception}","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"ChenXy128"},"content":" * class and provides additional functionality to handle exceptions that occur during the execution of the Duke","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"ChenXy128"},"content":" * application. It is designed to encapsulate errors related to the application\u0027s logic and operations, providing","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"ChenXy128"},"content":" * a meaningful error message to the user.","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"ChenXy128"},"content":" */","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"ChenXy128"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"ChenXy128"},"content":"    protected String message;","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"ChenXy128"},"content":"     * Constructs a new {@code DukeException} with the specified detail message. The message can be retrieved later","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"ChenXy128"},"content":"     * by the {@link Throwable#getMessage()} method.","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"ChenXy128"},"content":"     * @param message The detail message. The detail message is saved for later retrieval by the","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"ChenXy128"},"content":"     *                {@link Throwable#getMessage()} method.","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"ChenXy128"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"ChenXy128"},"content":"        super(message);","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"ChenXy128"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"ChenXy128":22}},{"path":"src/main/java/duke/main/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChenXy128"},"content":"package duke.main;","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"ChenXy128"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-20"},{"lineNumber":4,"author":{"gitId":"ChenXy128"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-20"},{"lineNumber":5,"author":{"gitId":"ChenXy128"},"content":"import duke.parser.Parser;","lastModifiedDate":"2024-02-20"},{"lineNumber":6,"author":{"gitId":"ChenXy128"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"ChenXy128"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"ChenXy128"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-20"},{"lineNumber":9,"author":{"gitId":"ChenXy128"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2024-02-21"},{"lineNumber":10,"author":{"gitId":"ChenXy128"},"content":"import javafx.application.Platform;","lastModifiedDate":"2024-02-21"},{"lineNumber":11,"author":{"gitId":"ChenXy128"},"content":"import javafx.util.Duration;","lastModifiedDate":"2024-02-21"},{"lineNumber":12,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"ChenXy128"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-20"},{"lineNumber":14,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":15,"author":{"gitId":"ChenXy128"},"content":"/**","lastModifiedDate":"2024-02-20"},{"lineNumber":16,"author":{"gitId":"ChenXy128"},"content":" * Represents the command processor of the Duke application, responsible for","lastModifiedDate":"2024-02-20"},{"lineNumber":17,"author":{"gitId":"ChenXy128"},"content":" * executing user commands and interfacing between the UI, parser, storage, and task list.","lastModifiedDate":"2024-02-20"},{"lineNumber":18,"author":{"gitId":"ChenXy128"},"content":" */","lastModifiedDate":"2024-02-20"},{"lineNumber":19,"author":{"gitId":"ChenXy128"},"content":"public class Command {","lastModifiedDate":"2024-02-20"},{"lineNumber":20,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-20"},{"lineNumber":21,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"ChenXy128"},"content":"     * Retrieves a string representation of the list of tasks.","lastModifiedDate":"2024-02-20"},{"lineNumber":23,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"ChenXy128"},"content":"     * @param ui  The UI component of the application.","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"ChenXy128"},"content":"     * @param list The task list.","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"ChenXy128"},"content":"     * @return A string representing the listed tasks.","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":28,"author":{"gitId":"ChenXy128"},"content":"    public String getListResponse(Ui ui, TaskList list) {","lastModifiedDate":"2024-02-20"},{"lineNumber":29,"author":{"gitId":"ChenXy128"},"content":"        return ui.listing(list);","lastModifiedDate":"2024-02-20"},{"lineNumber":30,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":31,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-20"},{"lineNumber":32,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":33,"author":{"gitId":"ChenXy128"},"content":"     * Processes the marking of a task as done, updates storage, and returns a response message.","lastModifiedDate":"2024-02-20"},{"lineNumber":34,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":35,"author":{"gitId":"ChenXy128"},"content":"     * @param ui       The UI component of the application.","lastModifiedDate":"2024-02-20"},{"lineNumber":36,"author":{"gitId":"ChenXy128"},"content":"     * @param parser   The parser to interpret user input.","lastModifiedDate":"2024-02-20"},{"lineNumber":37,"author":{"gitId":"ChenXy128"},"content":"     * @param storage  The storage handler to persist task changes.","lastModifiedDate":"2024-02-20"},{"lineNumber":38,"author":{"gitId":"ChenXy128"},"content":"     * @param list     The task list.","lastModifiedDate":"2024-02-20"},{"lineNumber":39,"author":{"gitId":"ChenXy128"},"content":"     * @param input    The user input.","lastModifiedDate":"2024-02-20"},{"lineNumber":40,"author":{"gitId":"ChenXy128"},"content":"     * @return A response message after marking a task as done.","lastModifiedDate":"2024-02-20"},{"lineNumber":41,"author":{"gitId":"ChenXy128"},"content":"     * @throws DukeException If an error occurs during processing.","lastModifiedDate":"2024-02-20"},{"lineNumber":42,"author":{"gitId":"ChenXy128"},"content":"     * @throws IOException If an I/O error occurs.","lastModifiedDate":"2024-02-20"},{"lineNumber":43,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":44,"author":{"gitId":"ChenXy128"},"content":"    public String getMarkResponse(Ui ui, Parser parser, Storage storage, TaskList list, String input)","lastModifiedDate":"2024-02-20"},{"lineNumber":45,"author":{"gitId":"ChenXy128"},"content":"            throws DukeException, IOException {","lastModifiedDate":"2024-02-20"},{"lineNumber":46,"author":{"gitId":"ChenXy128"},"content":"        ui.handleMarkError(input, list);","lastModifiedDate":"2024-02-20"},{"lineNumber":47,"author":{"gitId":"ChenXy128"},"content":"        Task taskToMark \u003d parser.getTaskTobeMarked(input, list);","lastModifiedDate":"2024-02-20"},{"lineNumber":48,"author":{"gitId":"ChenXy128"},"content":"        taskToMark.markDone();","lastModifiedDate":"2024-02-20"},{"lineNumber":49,"author":{"gitId":"ChenXy128"},"content":"        storage.changeFileContent(list);","lastModifiedDate":"2024-02-20"},{"lineNumber":50,"author":{"gitId":"ChenXy128"},"content":"        return ui.marking(taskToMark);","lastModifiedDate":"2024-02-20"},{"lineNumber":51,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":52,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-20"},{"lineNumber":53,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":54,"author":{"gitId":"ChenXy128"},"content":"     * Processes the unmarking of a task as not done, updates storage, and returns a response message.","lastModifiedDate":"2024-02-20"},{"lineNumber":55,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":56,"author":{"gitId":"ChenXy128"},"content":"     * @param ui       The UI component of the application.","lastModifiedDate":"2024-02-20"},{"lineNumber":57,"author":{"gitId":"ChenXy128"},"content":"     * @param parser   The parser to interpret user input.","lastModifiedDate":"2024-02-20"},{"lineNumber":58,"author":{"gitId":"ChenXy128"},"content":"     * @param storage  The storage handler to persist task changes.","lastModifiedDate":"2024-02-20"},{"lineNumber":59,"author":{"gitId":"ChenXy128"},"content":"     * @param list     The task list.","lastModifiedDate":"2024-02-20"},{"lineNumber":60,"author":{"gitId":"ChenXy128"},"content":"     * @param input    The user input.","lastModifiedDate":"2024-02-20"},{"lineNumber":61,"author":{"gitId":"ChenXy128"},"content":"     * @return A response message after unmarking a task as not done.","lastModifiedDate":"2024-02-20"},{"lineNumber":62,"author":{"gitId":"ChenXy128"},"content":"     * @throws DukeException If an error occurs during processing.","lastModifiedDate":"2024-02-20"},{"lineNumber":63,"author":{"gitId":"ChenXy128"},"content":"     * @throws IOException If an I/O error occurs.","lastModifiedDate":"2024-02-20"},{"lineNumber":64,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":65,"author":{"gitId":"ChenXy128"},"content":"    public String getUnmarkResponse(Ui ui, Parser parser, Storage storage, TaskList list, String input)","lastModifiedDate":"2024-02-20"},{"lineNumber":66,"author":{"gitId":"ChenXy128"},"content":"            throws DukeException, IOException {","lastModifiedDate":"2024-02-20"},{"lineNumber":67,"author":{"gitId":"ChenXy128"},"content":"        ui.handleUnmarkError(input, list);","lastModifiedDate":"2024-02-20"},{"lineNumber":68,"author":{"gitId":"ChenXy128"},"content":"        Task taskToUnmark \u003d parser.getTaskToBeUnmarked(input, list);","lastModifiedDate":"2024-02-20"},{"lineNumber":69,"author":{"gitId":"ChenXy128"},"content":"        taskToUnmark.markUndone();","lastModifiedDate":"2024-02-20"},{"lineNumber":70,"author":{"gitId":"ChenXy128"},"content":"        storage.changeFileContent(list);","lastModifiedDate":"2024-02-20"},{"lineNumber":71,"author":{"gitId":"ChenXy128"},"content":"        return ui.unmarking(taskToUnmark);","lastModifiedDate":"2024-02-20"},{"lineNumber":72,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":73,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-20"},{"lineNumber":74,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":75,"author":{"gitId":"ChenXy128"},"content":"     * Processes the addition of a new ToDo task, updates storage, and returns a response message.","lastModifiedDate":"2024-02-20"},{"lineNumber":76,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":77,"author":{"gitId":"ChenXy128"},"content":"     * @param ui       The UI component of the application.","lastModifiedDate":"2024-02-20"},{"lineNumber":78,"author":{"gitId":"ChenXy128"},"content":"     * @param parser   The parser to interpret user input.","lastModifiedDate":"2024-02-20"},{"lineNumber":79,"author":{"gitId":"ChenXy128"},"content":"     * @param storage  The storage handler to persist task changes.","lastModifiedDate":"2024-02-20"},{"lineNumber":80,"author":{"gitId":"ChenXy128"},"content":"     * @param list     The task list.","lastModifiedDate":"2024-02-20"},{"lineNumber":81,"author":{"gitId":"ChenXy128"},"content":"     * @param input    The user input.","lastModifiedDate":"2024-02-20"},{"lineNumber":82,"author":{"gitId":"ChenXy128"},"content":"     * @return A response message after adding a new ToDo task.","lastModifiedDate":"2024-02-20"},{"lineNumber":83,"author":{"gitId":"ChenXy128"},"content":"     * @throws DukeException If an error occurs during processing.","lastModifiedDate":"2024-02-20"},{"lineNumber":84,"author":{"gitId":"ChenXy128"},"content":"     * @throws IOException If an I/O error occurs.","lastModifiedDate":"2024-02-20"},{"lineNumber":85,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":86,"author":{"gitId":"ChenXy128"},"content":"    public String getTodoResponse(Ui ui, Parser parser, Storage storage, TaskList list, String input)","lastModifiedDate":"2024-02-20"},{"lineNumber":87,"author":{"gitId":"ChenXy128"},"content":"            throws DukeException, IOException {","lastModifiedDate":"2024-02-20"},{"lineNumber":88,"author":{"gitId":"ChenXy128"},"content":"        ui.handleTodoError(input);","lastModifiedDate":"2024-02-20"},{"lineNumber":89,"author":{"gitId":"ChenXy128"},"content":"        Task todoTask \u003d parser.createToDo(input);","lastModifiedDate":"2024-02-20"},{"lineNumber":90,"author":{"gitId":"ChenXy128"},"content":"        storage.addTaskToFile(todoTask);","lastModifiedDate":"2024-02-20"},{"lineNumber":91,"author":{"gitId":"ChenXy128"},"content":"        return ui.echo(todoTask, list);","lastModifiedDate":"2024-02-20"},{"lineNumber":92,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":93,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-20"},{"lineNumber":94,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":95,"author":{"gitId":"ChenXy128"},"content":"     * Processes the addition of a new Deadline task, updates storage, and returns a response message.","lastModifiedDate":"2024-02-20"},{"lineNumber":96,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":97,"author":{"gitId":"ChenXy128"},"content":"     * @param ui       The UI component of the application.","lastModifiedDate":"2024-02-20"},{"lineNumber":98,"author":{"gitId":"ChenXy128"},"content":"     * @param parser   The parser to interpret user input.","lastModifiedDate":"2024-02-20"},{"lineNumber":99,"author":{"gitId":"ChenXy128"},"content":"     * @param storage  The storage handler to persist task changes.","lastModifiedDate":"2024-02-20"},{"lineNumber":100,"author":{"gitId":"ChenXy128"},"content":"     * @param list     The task list.","lastModifiedDate":"2024-02-20"},{"lineNumber":101,"author":{"gitId":"ChenXy128"},"content":"     * @param input    The user input.","lastModifiedDate":"2024-02-20"},{"lineNumber":102,"author":{"gitId":"ChenXy128"},"content":"     * @return A response message after adding a new Deadline task.","lastModifiedDate":"2024-02-20"},{"lineNumber":103,"author":{"gitId":"ChenXy128"},"content":"     * @throws DukeException If an error occurs during processing.","lastModifiedDate":"2024-02-20"},{"lineNumber":104,"author":{"gitId":"ChenXy128"},"content":"     * @throws IOException If an I/O error occurs.","lastModifiedDate":"2024-02-20"},{"lineNumber":105,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":106,"author":{"gitId":"ChenXy128"},"content":"    public String getDeadlineResponse(Ui ui, Parser parser, Storage storage, TaskList list, String input)","lastModifiedDate":"2024-02-20"},{"lineNumber":107,"author":{"gitId":"ChenXy128"},"content":"            throws DukeException, IOException {","lastModifiedDate":"2024-02-20"},{"lineNumber":108,"author":{"gitId":"ChenXy128"},"content":"        ui.handleDeadlineError(input);","lastModifiedDate":"2024-02-20"},{"lineNumber":109,"author":{"gitId":"ChenXy128"},"content":"        Task deadlineTask \u003d parser.createDeadline(input);","lastModifiedDate":"2024-02-20"},{"lineNumber":110,"author":{"gitId":"ChenXy128"},"content":"        storage.addTaskToFile(deadlineTask);","lastModifiedDate":"2024-02-20"},{"lineNumber":111,"author":{"gitId":"ChenXy128"},"content":"        return ui.echo(deadlineTask, list);","lastModifiedDate":"2024-02-20"},{"lineNumber":112,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":113,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-20"},{"lineNumber":114,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":115,"author":{"gitId":"ChenXy128"},"content":"     * Processes the addition of a new Event task, updates storage, and returns a response message.","lastModifiedDate":"2024-02-20"},{"lineNumber":116,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":117,"author":{"gitId":"ChenXy128"},"content":"     * @param ui       The UI component of the application.","lastModifiedDate":"2024-02-20"},{"lineNumber":118,"author":{"gitId":"ChenXy128"},"content":"     * @param parser   The parser to interpret user input.","lastModifiedDate":"2024-02-20"},{"lineNumber":119,"author":{"gitId":"ChenXy128"},"content":"     * @param storage  The storage handler to persist task changes.","lastModifiedDate":"2024-02-20"},{"lineNumber":120,"author":{"gitId":"ChenXy128"},"content":"     * @param list     The task list.","lastModifiedDate":"2024-02-20"},{"lineNumber":121,"author":{"gitId":"ChenXy128"},"content":"     * @param input    The user input.","lastModifiedDate":"2024-02-20"},{"lineNumber":122,"author":{"gitId":"ChenXy128"},"content":"     * @return A response message after adding a new Event task.","lastModifiedDate":"2024-02-20"},{"lineNumber":123,"author":{"gitId":"ChenXy128"},"content":"     * @throws DukeException If an error occurs during processing.","lastModifiedDate":"2024-02-20"},{"lineNumber":124,"author":{"gitId":"ChenXy128"},"content":"     * @throws IOException If an I/O error occurs.","lastModifiedDate":"2024-02-20"},{"lineNumber":125,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":126,"author":{"gitId":"ChenXy128"},"content":"    public String getEventResponse(Ui ui, Parser parser, Storage storage, TaskList list, String input)","lastModifiedDate":"2024-02-20"},{"lineNumber":127,"author":{"gitId":"ChenXy128"},"content":"            throws DukeException, IOException {","lastModifiedDate":"2024-02-20"},{"lineNumber":128,"author":{"gitId":"ChenXy128"},"content":"        ui.handleEventError(input);","lastModifiedDate":"2024-02-20"},{"lineNumber":129,"author":{"gitId":"ChenXy128"},"content":"        Task eventTask \u003d parser.createEvent(input);","lastModifiedDate":"2024-02-20"},{"lineNumber":130,"author":{"gitId":"ChenXy128"},"content":"        storage.addTaskToFile(eventTask);","lastModifiedDate":"2024-02-20"},{"lineNumber":131,"author":{"gitId":"ChenXy128"},"content":"        return ui.echo(eventTask, list);","lastModifiedDate":"2024-02-20"},{"lineNumber":132,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":133,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-20"},{"lineNumber":134,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":135,"author":{"gitId":"ChenXy128"},"content":"     * Processes the deletion of a task, updates storage, and returns a response message.","lastModifiedDate":"2024-02-20"},{"lineNumber":136,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":137,"author":{"gitId":"ChenXy128"},"content":"     * @param ui       The UI component of the application.","lastModifiedDate":"2024-02-20"},{"lineNumber":138,"author":{"gitId":"ChenXy128"},"content":"     * @param parser   The parser to interpret user input.","lastModifiedDate":"2024-02-20"},{"lineNumber":139,"author":{"gitId":"ChenXy128"},"content":"     * @param storage  The storage handler to persist task changes.","lastModifiedDate":"2024-02-20"},{"lineNumber":140,"author":{"gitId":"ChenXy128"},"content":"     * @param list     The task list.","lastModifiedDate":"2024-02-20"},{"lineNumber":141,"author":{"gitId":"ChenXy128"},"content":"     * @param input    The user input, expected to contain the index of the task to be deleted.","lastModifiedDate":"2024-02-20"},{"lineNumber":142,"author":{"gitId":"ChenXy128"},"content":"     * @return A response message after deleting a task.","lastModifiedDate":"2024-02-20"},{"lineNumber":143,"author":{"gitId":"ChenXy128"},"content":"     * @throws DukeException If an error occurs during processing.","lastModifiedDate":"2024-02-20"},{"lineNumber":144,"author":{"gitId":"ChenXy128"},"content":"     * @throws IOException If an I/O error occurs.","lastModifiedDate":"2024-02-20"},{"lineNumber":145,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":146,"author":{"gitId":"ChenXy128"},"content":"    public String getDeleteResponse(Ui ui, Parser parser, Storage storage, TaskList list, String input)","lastModifiedDate":"2024-02-20"},{"lineNumber":147,"author":{"gitId":"ChenXy128"},"content":"            throws DukeException, IOException {","lastModifiedDate":"2024-02-20"},{"lineNumber":148,"author":{"gitId":"ChenXy128"},"content":"        int index \u003d Integer.parseInt(input.substring(7));","lastModifiedDate":"2024-02-20"},{"lineNumber":149,"author":{"gitId":"ChenXy128"},"content":"        ui.handleDeleteError(list, index);","lastModifiedDate":"2024-02-20"},{"lineNumber":150,"author":{"gitId":"ChenXy128"},"content":"        Task taskDelete \u003d parser.getTaskToDelete(input, list);","lastModifiedDate":"2024-02-20"},{"lineNumber":151,"author":{"gitId":"ChenXy128"},"content":"        String result \u003d ui.deleting(taskDelete, list);","lastModifiedDate":"2024-02-20"},{"lineNumber":152,"author":{"gitId":"ChenXy128"},"content":"        list.delete(taskDelete);","lastModifiedDate":"2024-02-20"},{"lineNumber":153,"author":{"gitId":"ChenXy128"},"content":"        storage.changeFileContent(list);","lastModifiedDate":"2024-02-20"},{"lineNumber":154,"author":{"gitId":"ChenXy128"},"content":"        return result;","lastModifiedDate":"2024-02-20"},{"lineNumber":155,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":156,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-20"},{"lineNumber":157,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":158,"author":{"gitId":"ChenXy128"},"content":"     * Processes a search for tasks containing a specific keyword and returns a response message with matching tasks.","lastModifiedDate":"2024-02-20"},{"lineNumber":159,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":160,"author":{"gitId":"ChenXy128"},"content":"     * @param ui       The UI component of the application.","lastModifiedDate":"2024-02-20"},{"lineNumber":161,"author":{"gitId":"ChenXy128"},"content":"     * @param parser   The parser to interpret user input.","lastModifiedDate":"2024-02-20"},{"lineNumber":162,"author":{"gitId":"ChenXy128"},"content":"     * @param list     The task list.","lastModifiedDate":"2024-02-20"},{"lineNumber":163,"author":{"gitId":"ChenXy128"},"content":"     * @param input    The user input, containing the keyword to search for.","lastModifiedDate":"2024-02-20"},{"lineNumber":164,"author":{"gitId":"ChenXy128"},"content":"     * @return A response message listing tasks that contain the specified keyword.","lastModifiedDate":"2024-02-20"},{"lineNumber":165,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":166,"author":{"gitId":"ChenXy128"},"content":"    public String getFindResponse(Ui ui, Parser parser, TaskList list, String input) {","lastModifiedDate":"2024-02-20"},{"lineNumber":167,"author":{"gitId":"ChenXy128"},"content":"        String keyword \u003d parser.getKeywordForFind(input);","lastModifiedDate":"2024-02-20"},{"lineNumber":168,"author":{"gitId":"ChenXy128"},"content":"        return ui.finding(list, keyword);","lastModifiedDate":"2024-02-20"},{"lineNumber":169,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":170,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-20"},{"lineNumber":171,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":172,"author":{"gitId":"ChenXy128"},"content":"     * Handles the response for help command.","lastModifiedDate":"2024-02-21"},{"lineNumber":173,"author":{"gitId":"ChenXy128"},"content":"     * @param ui The UI component of the application.","lastModifiedDate":"2024-02-21"},{"lineNumber":174,"author":{"gitId":"ChenXy128"},"content":"     * @return A response for help command.","lastModifiedDate":"2024-02-21"},{"lineNumber":175,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":176,"author":{"gitId":"ChenXy128"},"content":"    public String getHelpResponse(Ui ui) {","lastModifiedDate":"2024-02-20"},{"lineNumber":177,"author":{"gitId":"ChenXy128"},"content":"        return ui.help();","lastModifiedDate":"2024-02-20"},{"lineNumber":178,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":179,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-21"},{"lineNumber":180,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":181,"author":{"gitId":"ChenXy128"},"content":"     * Closes the application when bye command is triggered, with a pause of 2 seconds","lastModifiedDate":"2024-02-21"},{"lineNumber":182,"author":{"gitId":"ChenXy128"},"content":"     * to allow the user to read the response.","lastModifiedDate":"2024-02-21"},{"lineNumber":183,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":184,"author":{"gitId":"ChenXy128"},"content":"    public void byeResponse() {","lastModifiedDate":"2024-02-21"},{"lineNumber":185,"author":{"gitId":"ChenXy128"},"content":"        PauseTransition delay \u003d new PauseTransition(Duration.seconds(2));","lastModifiedDate":"2024-02-21"},{"lineNumber":186,"author":{"gitId":"ChenXy128"},"content":"        delay.setOnFinished(event -\u003e {","lastModifiedDate":"2024-02-21"},{"lineNumber":187,"author":{"gitId":"ChenXy128"},"content":"            Platform.exit();","lastModifiedDate":"2024-02-21"},{"lineNumber":188,"author":{"gitId":"ChenXy128"},"content":"            System.exit(0);","lastModifiedDate":"2024-02-21"},{"lineNumber":189,"author":{"gitId":"ChenXy128"},"content":"        });","lastModifiedDate":"2024-02-21"},{"lineNumber":190,"author":{"gitId":"ChenXy128"},"content":"        delay.play();","lastModifiedDate":"2024-02-21"},{"lineNumber":191,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":192,"author":{"gitId":"ChenXy128"},"content":"}","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"ChenXy128":192}},{"path":"src/main/java/duke/main/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChenXy128"},"content":"package duke.main;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"ChenXy128"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"ChenXy128"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"ChenXy128"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"ChenXy128"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"ChenXy128"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"ChenXy128"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"ChenXy128"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"ChenXy128"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"ChenXy128"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"ChenXy128"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"ChenXy128"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"ChenXy128"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"ChenXy128"},"content":"/**","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"ChenXy128"},"content":" * Represents a dialog box in the UI, designed to display messages alongside an image representing the speaker.","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"ChenXy128"},"content":" * This custom control uses FXML for layout and is composed of an ImageView for the speaker\u0027s avatar and a Label","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"ChenXy128"},"content":" * for the message text.","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"ChenXy128"},"content":" */","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"ChenXy128"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"ChenXy128"},"content":"    @FXML","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"ChenXy128"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"ChenXy128"},"content":"    @FXML","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"ChenXy128"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"ChenXy128"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"ChenXy128"},"content":"        try {","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"ChenXy128"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"ChenXy128"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"ChenXy128"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-10"},{"lineNumber":33,"author":{"gitId":"ChenXy128"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"ChenXy128"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"ChenXy128"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-10"},{"lineNumber":36,"author":{"gitId":"ChenXy128"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":37,"author":{"gitId":"ChenXy128"},"content":"        ","lastModifiedDate":"2024-02-10"},{"lineNumber":38,"author":{"gitId":"ChenXy128"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-10"},{"lineNumber":39,"author":{"gitId":"ChenXy128"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-10"},{"lineNumber":40,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":41,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-10"},{"lineNumber":42,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":43,"author":{"gitId":"ChenXy128"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-10"},{"lineNumber":44,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":45,"author":{"gitId":"ChenXy128"},"content":"    private void flip() {","lastModifiedDate":"2024-02-10"},{"lineNumber":46,"author":{"gitId":"ChenXy128"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-10"},{"lineNumber":47,"author":{"gitId":"ChenXy128"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-10"},{"lineNumber":48,"author":{"gitId":"ChenXy128"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-10"},{"lineNumber":49,"author":{"gitId":"ChenXy128"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-10"},{"lineNumber":50,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":51,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-10"},{"lineNumber":52,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":53,"author":{"gitId":"ChenXy128"},"content":"     * Factory method for creating a dialog box for user messages.","lastModifiedDate":"2024-02-10"},{"lineNumber":54,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":55,"author":{"gitId":"ChenXy128"},"content":"     * @param text The message text from the user.","lastModifiedDate":"2024-02-10"},{"lineNumber":56,"author":{"gitId":"ChenXy128"},"content":"     * @param img The user\u0027s avatar image.","lastModifiedDate":"2024-02-10"},{"lineNumber":57,"author":{"gitId":"ChenXy128"},"content":"     * @return A DialogBox instance configured for displaying user messages.","lastModifiedDate":"2024-02-10"},{"lineNumber":58,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":59,"author":{"gitId":"ChenXy128"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-10"},{"lineNumber":60,"author":{"gitId":"ChenXy128"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-10"},{"lineNumber":61,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":62,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-10"},{"lineNumber":63,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":64,"author":{"gitId":"ChenXy128"},"content":"     * Factory method for creating a dialog box for Duke\u0027s responses.","lastModifiedDate":"2024-02-10"},{"lineNumber":65,"author":{"gitId":"ChenXy128"},"content":"     * The dialog box is flipped to distinguish Duke\u0027s messages from the user\u0027s messages.","lastModifiedDate":"2024-02-10"},{"lineNumber":66,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":67,"author":{"gitId":"ChenXy128"},"content":"     * @param text The message text from Duke.","lastModifiedDate":"2024-02-10"},{"lineNumber":68,"author":{"gitId":"ChenXy128"},"content":"     * @param img Duke\u0027s avatar image.","lastModifiedDate":"2024-02-10"},{"lineNumber":69,"author":{"gitId":"ChenXy128"},"content":"     * @return A DialogBox instance configured for displaying Duke\u0027s messages.","lastModifiedDate":"2024-02-10"},{"lineNumber":70,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":71,"author":{"gitId":"ChenXy128"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-02-10"},{"lineNumber":72,"author":{"gitId":"ChenXy128"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-10"},{"lineNumber":73,"author":{"gitId":"ChenXy128"},"content":"        db.flip();","lastModifiedDate":"2024-02-10"},{"lineNumber":74,"author":{"gitId":"ChenXy128"},"content":"        return db;","lastModifiedDate":"2024-02-10"},{"lineNumber":75,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":76,"author":{"gitId":"ChenXy128"},"content":"}","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"ChenXy128":76}},{"path":"src/main/java/duke/main/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChenXy128"},"content":"package duke.main;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"ChenXy128"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"ChenXy128"},"content":"import duke.parser.Parser;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"ChenXy128"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"ChenXy128"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"ChenXy128"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"ChenXy128"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"ChenXy128"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"ChenXy128"},"content":"import java.io.File;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"ChenXy128"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"ChenXy128"},"content":" * Represents the main logic of the Duke application, a personal assistant chatbot designed to help users manage tasks.","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"ChenXy128"},"content":" * It supports operations such as adding, deleting, marking, and listing tasks, among others. The application combines","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"ChenXy128"},"content":" * various components for task management, including storage, parsing, user interface, and task list management.","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"ChenXy128"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"ChenXy128"},"content":"    private static final String FILE_PATH \u003d System.getProperty(\"user.home\") + File.separator","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"ChenXy128"},"content":"            + \"data\" + File.separator + \"jinni.txt\";","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"ChenXy128"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"ChenXy128"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"ChenXy128"},"content":"    private Parser parser;","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"ChenXy128"},"content":"    private TaskList list;","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"ChenXy128"},"content":"     * Constructs a new Duke object with a specified file path for data storage.","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"ChenXy128"},"content":"     * Initializes the UI, Parser, TaskList, and Storage components of Duke.","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"ChenXy128"},"content":"     * @param filePath The path of the file where task data is stored.","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"ChenXy128"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"ChenXy128"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"ChenXy128"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"ChenXy128"},"content":"        this.list \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"ChenXy128"},"content":"        this.storage \u003d new Storage(filePath, parser);","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"ChenXy128"},"content":"        ","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":41,"author":{"gitId":"ChenXy128"},"content":"     * Initializes a Duke instance with a default file path for data storage.","lastModifiedDate":"2024-02-10"},{"lineNumber":42,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":43,"author":{"gitId":"ChenXy128"},"content":"    public Duke() {","lastModifiedDate":"2024-02-10"},{"lineNumber":44,"author":{"gitId":"ChenXy128"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2024-02-10"},{"lineNumber":45,"author":{"gitId":"ChenXy128"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2024-02-10"},{"lineNumber":46,"author":{"gitId":"ChenXy128"},"content":"        this.list \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-02-10"},{"lineNumber":47,"author":{"gitId":"ChenXy128"},"content":"        this.storage \u003d new Storage(FILE_PATH, parser);","lastModifiedDate":"2024-02-10"},{"lineNumber":48,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":49,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-10"},{"lineNumber":50,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"ChenXy128"},"content":"     * Enum representing possible instructions that Duke can process.","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"ChenXy128"},"content":"    public enum Instruction {","lastModifiedDate":"2024-01-26"},{"lineNumber":54,"author":{"gitId":"ChenXy128"},"content":"        LIST, MARK, UNMARK, TODO, DEADLINE, EVENT, DELETE, BYE, FIND, HELP, ANYTHING_ELSE","lastModifiedDate":"2024-02-20"},{"lineNumber":55,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":56,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-01-26"},{"lineNumber":57,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"ChenXy128"},"content":"     * Determines the type of instruction given by the user input.","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"ChenXy128"},"content":"     * @param input The raw input string from the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"ChenXy128"},"content":"     * @return The Instruction that corresponds to the user\u0027s command.","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"ChenXy128"},"content":"    public Instruction getInstr(String input) {","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"ChenXy128"},"content":"        if (input.toLowerCase().startsWith(\"list\")) {","lastModifiedDate":"2024-01-26"},{"lineNumber":65,"author":{"gitId":"ChenXy128"},"content":"            return Instruction.LIST;","lastModifiedDate":"2024-01-26"},{"lineNumber":66,"author":{"gitId":"ChenXy128"},"content":"        } else if (input.toLowerCase().startsWith(\"mark\")) {","lastModifiedDate":"2024-01-26"},{"lineNumber":67,"author":{"gitId":"ChenXy128"},"content":"            return Instruction.MARK;","lastModifiedDate":"2024-01-26"},{"lineNumber":68,"author":{"gitId":"ChenXy128"},"content":"        } else if (input.toLowerCase().startsWith(\"unmark\")) {","lastModifiedDate":"2024-01-26"},{"lineNumber":69,"author":{"gitId":"ChenXy128"},"content":"            return Instruction.UNMARK;","lastModifiedDate":"2024-01-26"},{"lineNumber":70,"author":{"gitId":"ChenXy128"},"content":"        } else if (input.toLowerCase().startsWith(\"todo\")) {","lastModifiedDate":"2024-01-26"},{"lineNumber":71,"author":{"gitId":"ChenXy128"},"content":"            return Instruction.TODO;","lastModifiedDate":"2024-01-26"},{"lineNumber":72,"author":{"gitId":"ChenXy128"},"content":"        } else if (input.toLowerCase().startsWith(\"deadline\")) {","lastModifiedDate":"2024-01-26"},{"lineNumber":73,"author":{"gitId":"ChenXy128"},"content":"            return Instruction.DEADLINE;","lastModifiedDate":"2024-01-26"},{"lineNumber":74,"author":{"gitId":"ChenXy128"},"content":"        } else if (input.toLowerCase().startsWith(\"event\")) {","lastModifiedDate":"2024-01-26"},{"lineNumber":75,"author":{"gitId":"ChenXy128"},"content":"            return Instruction.EVENT;","lastModifiedDate":"2024-01-26"},{"lineNumber":76,"author":{"gitId":"ChenXy128"},"content":"        } else if (input.toLowerCase().startsWith(\"delete\")) {","lastModifiedDate":"2024-01-26"},{"lineNumber":77,"author":{"gitId":"ChenXy128"},"content":"            return Instruction.DELETE;","lastModifiedDate":"2024-01-26"},{"lineNumber":78,"author":{"gitId":"ChenXy128"},"content":"        } else if (input.toLowerCase().startsWith(\"find\")) {","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"ChenXy128"},"content":"            return Instruction.FIND;","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"ChenXy128"},"content":"        } else if (input.toLowerCase().startsWith(\"bye\")){","lastModifiedDate":"2024-01-26"},{"lineNumber":81,"author":{"gitId":"ChenXy128"},"content":"            return Instruction.BYE;","lastModifiedDate":"2024-01-26"},{"lineNumber":82,"author":{"gitId":"ChenXy128"},"content":"        } else if(input.toLowerCase().startsWith(\"help\")) {","lastModifiedDate":"2024-02-20"},{"lineNumber":83,"author":{"gitId":"ChenXy128"},"content":"            return Instruction.HELP;","lastModifiedDate":"2024-02-20"},{"lineNumber":84,"author":{"gitId":"ChenXy128"},"content":"        } else {","lastModifiedDate":"2024-01-26"},{"lineNumber":85,"author":{"gitId":"ChenXy128"},"content":"            return Instruction.ANYTHING_ELSE;","lastModifiedDate":"2024-01-26"},{"lineNumber":86,"author":{"gitId":"ChenXy128"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":87,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":88,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-01-26"},{"lineNumber":89,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":90,"author":{"gitId":"ChenXy128"},"content":"     * Processes a given input from the user, executing the corresponding task operation and returning a response.","lastModifiedDate":"2024-02-10"},{"lineNumber":91,"author":{"gitId":"ChenXy128"},"content":"     * This method handles all user commands, managing tasks according to the specified instructions.","lastModifiedDate":"2024-02-10"},{"lineNumber":92,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"ChenXy128"},"content":"     * @param inputFromUser The user\u0027s input command.","lastModifiedDate":"2024-02-10"},{"lineNumber":94,"author":{"gitId":"ChenXy128"},"content":"     * @return A string response indicating the outcome of the command.","lastModifiedDate":"2024-02-10"},{"lineNumber":95,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":96,"author":{"gitId":"ChenXy128"},"content":"    public String getResponse(String inputFromUser) {","lastModifiedDate":"2024-02-10"},{"lineNumber":97,"author":{"gitId":"ChenXy128"},"content":"        String response;","lastModifiedDate":"2024-02-10"},{"lineNumber":98,"author":{"gitId":"ChenXy128"},"content":"        Command command \u003d new Command();","lastModifiedDate":"2024-02-20"},{"lineNumber":99,"author":{"gitId":"ChenXy128"},"content":"        try {","lastModifiedDate":"2024-02-10"},{"lineNumber":100,"author":{"gitId":"ChenXy128"},"content":"            Duke duke \u003d new Duke(FILE_PATH);","lastModifiedDate":"2024-02-10"},{"lineNumber":101,"author":{"gitId":"ChenXy128"},"content":"            Instruction instruction \u003d duke.getInstr(inputFromUser);","lastModifiedDate":"2024-02-02"},{"lineNumber":102,"author":{"gitId":"ChenXy128"},"content":"            duke.storage.loadFile(duke.list);","lastModifiedDate":"2024-02-10"},{"lineNumber":103,"author":{"gitId":"ChenXy128"},"content":"            ","lastModifiedDate":"2024-01-26"},{"lineNumber":104,"author":{"gitId":"ChenXy128"},"content":"            switch (instruction) {","lastModifiedDate":"2024-01-26"},{"lineNumber":105,"author":{"gitId":"ChenXy128"},"content":"            case LIST:","lastModifiedDate":"2024-01-26"},{"lineNumber":106,"author":{"gitId":"ChenXy128"},"content":"                response \u003d command.getListResponse(duke.ui, duke.list);","lastModifiedDate":"2024-02-20"},{"lineNumber":107,"author":{"gitId":"ChenXy128"},"content":"                break;","lastModifiedDate":"2024-01-26"},{"lineNumber":108,"author":{"gitId":"ChenXy128"},"content":"            case MARK:","lastModifiedDate":"2024-01-26"},{"lineNumber":109,"author":{"gitId":"ChenXy128"},"content":"                response \u003d command.getMarkResponse(duke.ui, duke.parser, duke.storage, duke.list, inputFromUser);","lastModifiedDate":"2024-02-20"},{"lineNumber":110,"author":{"gitId":"ChenXy128"},"content":"                break;","lastModifiedDate":"2024-01-26"},{"lineNumber":111,"author":{"gitId":"ChenXy128"},"content":"            case UNMARK:","lastModifiedDate":"2024-01-26"},{"lineNumber":112,"author":{"gitId":"ChenXy128"},"content":"                response \u003d command.getUnmarkResponse(duke.ui, duke.parser, duke.storage, duke.list, inputFromUser);","lastModifiedDate":"2024-02-20"},{"lineNumber":113,"author":{"gitId":"ChenXy128"},"content":"                break;","lastModifiedDate":"2024-01-26"},{"lineNumber":114,"author":{"gitId":"ChenXy128"},"content":"            case TODO:","lastModifiedDate":"2024-01-26"},{"lineNumber":115,"author":{"gitId":"ChenXy128"},"content":"                response \u003d command.getTodoResponse(duke.ui, duke.parser, duke.storage, duke.list, inputFromUser);","lastModifiedDate":"2024-02-20"},{"lineNumber":116,"author":{"gitId":"ChenXy128"},"content":"                break;","lastModifiedDate":"2024-01-26"},{"lineNumber":117,"author":{"gitId":"ChenXy128"},"content":"            case DEADLINE:","lastModifiedDate":"2024-01-26"},{"lineNumber":118,"author":{"gitId":"ChenXy128"},"content":"                response \u003d command.getDeadlineResponse(duke.ui, duke.parser, duke.storage, duke.list, inputFromUser);","lastModifiedDate":"2024-02-20"},{"lineNumber":119,"author":{"gitId":"ChenXy128"},"content":"                break;","lastModifiedDate":"2024-01-26"},{"lineNumber":120,"author":{"gitId":"ChenXy128"},"content":"            case EVENT:","lastModifiedDate":"2024-01-26"},{"lineNumber":121,"author":{"gitId":"ChenXy128"},"content":"                response \u003d command.getEventResponse(duke.ui, duke.parser, duke.storage, duke.list, inputFromUser);","lastModifiedDate":"2024-02-20"},{"lineNumber":122,"author":{"gitId":"ChenXy128"},"content":"                break;","lastModifiedDate":"2024-01-26"},{"lineNumber":123,"author":{"gitId":"ChenXy128"},"content":"            case DELETE:","lastModifiedDate":"2024-01-26"},{"lineNumber":124,"author":{"gitId":"ChenXy128"},"content":"                response \u003d command.getDeleteResponse(duke.ui, duke.parser, duke.storage, duke.list, inputFromUser);","lastModifiedDate":"2024-02-20"},{"lineNumber":125,"author":{"gitId":"ChenXy128"},"content":"                break;","lastModifiedDate":"2024-01-26"},{"lineNumber":126,"author":{"gitId":"ChenXy128"},"content":"            case FIND:","lastModifiedDate":"2024-02-03"},{"lineNumber":127,"author":{"gitId":"ChenXy128"},"content":"                response \u003d command.getFindResponse(duke.ui, duke.parser, duke.list, inputFromUser);","lastModifiedDate":"2024-02-20"},{"lineNumber":128,"author":{"gitId":"ChenXy128"},"content":"                break;","lastModifiedDate":"2024-02-03"},{"lineNumber":129,"author":{"gitId":"ChenXy128"},"content":"            case HELP:","lastModifiedDate":"2024-02-20"},{"lineNumber":130,"author":{"gitId":"ChenXy128"},"content":"                response \u003d command.getHelpResponse(duke.ui);","lastModifiedDate":"2024-02-20"},{"lineNumber":131,"author":{"gitId":"ChenXy128"},"content":"                break;","lastModifiedDate":"2024-02-20"},{"lineNumber":132,"author":{"gitId":"ChenXy128"},"content":"            case BYE:","lastModifiedDate":"2024-01-26"},{"lineNumber":133,"author":{"gitId":"ChenXy128"},"content":"                response \u003d duke.ui.bye();","lastModifiedDate":"2024-02-10"},{"lineNumber":134,"author":{"gitId":"ChenXy128"},"content":"                command.byeResponse();","lastModifiedDate":"2024-02-21"},{"lineNumber":135,"author":{"gitId":"ChenXy128"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":136,"author":{"gitId":"ChenXy128"},"content":"            default:","lastModifiedDate":"2024-01-26"},{"lineNumber":137,"author":{"gitId":"ChenXy128"},"content":"                 response \u003d \"Can\u0027t understand your instruction. Try typing help\";","lastModifiedDate":"2024-02-20"},{"lineNumber":138,"author":{"gitId":"ChenXy128"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":139,"author":{"gitId":"ChenXy128"},"content":"        } catch (DukeException | IOException e) {","lastModifiedDate":"2024-02-21"},{"lineNumber":140,"author":{"gitId":"ChenXy128"},"content":"            response \u003d e.getMessage();","lastModifiedDate":"2024-02-10"},{"lineNumber":141,"author":{"gitId":"ChenXy128"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":142,"author":{"gitId":"ChenXy128"},"content":"        assert response !\u003d null : \"Response cannot be null\";","lastModifiedDate":"2024-02-20"},{"lineNumber":143,"author":{"gitId":"ChenXy128"},"content":"        return response;","lastModifiedDate":"2024-02-10"},{"lineNumber":144,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"ChenXy128":143,"-":2}},{"path":"src/main/java/duke/main/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChenXy128"},"content":"package duke.main;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"ChenXy128"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"ChenXy128"},"content":"/**","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"ChenXy128"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"ChenXy128"},"content":" */","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"ChenXy128"},"content":"public class Launcher {","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"ChenXy128"},"content":"     * Main method to launch the Duke JavaFX application.","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"ChenXy128"},"content":"     * @param args Command-line arguments passed to the application. Not used directly by Duke.","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"ChenXy128"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"ChenXy128"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"ChenXy128"},"content":"}","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"ChenXy128":19}},{"path":"src/main/java/duke/main/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChenXy128"},"content":"package duke.main;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"ChenXy128"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"ChenXy128"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"ChenXy128"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"ChenXy128"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"ChenXy128"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"ChenXy128"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"ChenXy128"},"content":"/**","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"ChenXy128"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"ChenXy128"},"content":" */","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"ChenXy128"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"ChenXy128"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"ChenXy128"},"content":"     * Starts the application by setting up the primary stage. It loads the FXML for the main window,","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"ChenXy128"},"content":"     * initializes the scene, and displays it. Also, it links the Duke instance with the controller.","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"ChenXy128"},"content":"     * @param stage The primary stage for this application, onto which the application scene can be set.","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"ChenXy128"},"content":"    @Override","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"ChenXy128"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"ChenXy128"},"content":"        try {","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"ChenXy128"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"ChenXy128"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"ChenXy128"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"ChenXy128"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"ChenXy128"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"ChenXy128"},"content":"            stage.show();","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"ChenXy128"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":33,"author":{"gitId":"ChenXy128"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"ChenXy128"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":36,"author":{"gitId":"ChenXy128"},"content":"}","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"ChenXy128":36}},{"path":"src/main/java/duke/main/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChenXy128"},"content":"package duke.main;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"ChenXy128"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"ChenXy128"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"ChenXy128"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"ChenXy128"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"ChenXy128"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"ChenXy128"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"ChenXy128"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"ChenXy128"},"content":"/**","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"ChenXy128"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"ChenXy128"},"content":" */","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"ChenXy128"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"ChenXy128"},"content":"    @FXML","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"ChenXy128"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"ChenXy128"},"content":"    @FXML","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"ChenXy128"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"ChenXy128"},"content":"    @FXML","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"ChenXy128"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"ChenXy128"},"content":"    @FXML","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"ChenXy128"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"ChenXy128"},"content":"    private Duke duke;","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"ChenXy128"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"ChenXy128"},"content":"    private Image jinniImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Jinni.png\"));","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"ChenXy128"},"content":"    @FXML","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"ChenXy128"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"ChenXy128"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-10"},{"lineNumber":33,"author":{"gitId":"ChenXy128"},"content":"        String greeting \u003d \"Hello! I\u0027m Jinni\\n\" + \"What can I do for you?\";","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"ChenXy128"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(greeting, jinniImage));","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":36,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-10"},{"lineNumber":37,"author":{"gitId":"ChenXy128"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2024-02-10"},{"lineNumber":38,"author":{"gitId":"ChenXy128"},"content":"        duke \u003d d;","lastModifiedDate":"2024-02-10"},{"lineNumber":39,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":40,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-10"},{"lineNumber":41,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":42,"author":{"gitId":"ChenXy128"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-10"},{"lineNumber":43,"author":{"gitId":"ChenXy128"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-10"},{"lineNumber":44,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":45,"author":{"gitId":"ChenXy128"},"content":"    @FXML","lastModifiedDate":"2024-02-10"},{"lineNumber":46,"author":{"gitId":"ChenXy128"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-10"},{"lineNumber":47,"author":{"gitId":"ChenXy128"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-10"},{"lineNumber":48,"author":{"gitId":"ChenXy128"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2024-02-10"},{"lineNumber":49,"author":{"gitId":"ChenXy128"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-10"},{"lineNumber":50,"author":{"gitId":"ChenXy128"},"content":"            DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-10"},{"lineNumber":51,"author":{"gitId":"ChenXy128"},"content":"            DialogBox.getDukeDialog(response, jinniImage)","lastModifiedDate":"2024-02-10"},{"lineNumber":52,"author":{"gitId":"ChenXy128"},"content":"        );","lastModifiedDate":"2024-02-10"},{"lineNumber":53,"author":{"gitId":"ChenXy128"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-10"},{"lineNumber":54,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":55,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-10"},{"lineNumber":56,"author":{"gitId":"ChenXy128"},"content":"}","lastModifiedDate":"2024-02-10"},{"lineNumber":57,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"ChenXy128":57}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChenXy128"},"content":"package duke.parser;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"ChenXy128"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"ChenXy128"},"content":"import duke.task.ToDo;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"ChenXy128"},"content":"import duke.task.Deadline;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"ChenXy128"},"content":"import duke.task.Event;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"ChenXy128"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"ChenXy128"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"ChenXy128"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"ChenXy128"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"ChenXy128"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"ChenXy128"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"ChenXy128"},"content":" * The Parser class is responsible for interpreting user input and converting it into","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"ChenXy128"},"content":" * commands that can be executed by the Duke application. It also handles parsing","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"ChenXy128"},"content":" * of task data from and to the storage format.","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"ChenXy128"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"ChenXy128"},"content":"public class Parser {","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"ChenXy128"},"content":"     * Parses the input command to identify the task to be marked as done.","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"ChenXy128"},"content":"     * @param input The user input string.","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"ChenXy128"},"content":"     * @param list The TaskList containing all tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"ChenXy128"},"content":"     * @return The Task to be marked as done.","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"ChenXy128"},"content":"    public Task getTaskTobeMarked(String input, TaskList list) {","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"ChenXy128"},"content":"        int index \u003d Integer.parseInt(input.substring(5)) - 1;","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"ChenXy128"},"content":"        return list.getTask(index);","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"ChenXy128"},"content":"     * Parses the input command to identify the task to be unmarked (marked as not done).","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"ChenXy128"},"content":"     * @param input The user input string.","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"ChenXy128"},"content":"     * @param list The TaskList containing all tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"ChenXy128"},"content":"     * @return The Task to be unmarked.","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"ChenXy128"},"content":"    public Task getTaskToBeUnmarked(String input, TaskList list) {","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"ChenXy128"},"content":"        int index \u003d Integer.parseInt(input.substring(7)) - 1;","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"ChenXy128"},"content":"        return list.getTask(index);","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"ChenXy128"},"content":"     * Parses the input command to identify the task to be deleted.","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"ChenXy128"},"content":"     * @param input The user input string.","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"ChenXy128"},"content":"     * @param list The TaskList containing all tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"ChenXy128"},"content":"     * @return The Task to be deleted.","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"ChenXy128"},"content":"    public Task getTaskToDelete(String input, TaskList list) {","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"ChenXy128"},"content":"        int indexOfTaskToDelete \u003d Integer.parseInt(input.substring(7)) - 1;","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"ChenXy128"},"content":"        return list.getTask(indexOfTaskToDelete);","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"ChenXy128"},"content":"     * Parses the input command to retrieve the keyword the user is finding in the task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"ChenXy128"},"content":"     * @param input The user input string.","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"ChenXy128"},"content":"     * @return The String that is in the descriptions of the tasks in task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"ChenXy128"},"content":"    public String getKeywordForFind(String input) {","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"ChenXy128"},"content":"        return input.substring(5);","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"ChenXy128"},"content":"     * Creates a ToDo task from the input command.","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"ChenXy128"},"content":"     * @param input The user input string.","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"ChenXy128"},"content":"     * @return A new ToDo Task.","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"ChenXy128"},"content":"    public Task createToDo(String input) {","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"ChenXy128"},"content":"        String todoDescription \u003d input.substring(5);","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"ChenXy128"},"content":"        return new ToDo(todoDescription);","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"ChenXy128"},"content":"     * Creates a Deadline task from the input command, including parsing the due date.","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"ChenXy128"},"content":"     * @param input The user input string.","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"ChenXy128"},"content":"     * @return A new Deadline Task.","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"ChenXy128"},"content":"     * @throws DukeException If the input date is invalid or the input format is incorrect.","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"ChenXy128"},"content":"    public Task createDeadline(String input) throws DukeException{","lastModifiedDate":"2024-02-10"},{"lineNumber":85,"author":{"gitId":"ChenXy128"},"content":"        int indexOfBy \u003d input.indexOf(\"/by\");","lastModifiedDate":"2024-02-02"},{"lineNumber":86,"author":{"gitId":"ChenXy128"},"content":"        if (indexOfBy \u003d\u003d -1) {","lastModifiedDate":"2024-02-10"},{"lineNumber":87,"author":{"gitId":"ChenXy128"},"content":"            throw new DukeException(\"Invalid command format for deadline. Use: deadline \u003cdescription\u003e /by \u003cdate\u003e\");","lastModifiedDate":"2024-02-10"},{"lineNumber":88,"author":{"gitId":"ChenXy128"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":89,"author":{"gitId":"ChenXy128"},"content":"        String deadlineDescription \u003d input.substring(9, indexOfBy - 1);","lastModifiedDate":"2024-02-02"},{"lineNumber":90,"author":{"gitId":"ChenXy128"},"content":"        String deadline \u003d input.substring(indexOfBy + 4);","lastModifiedDate":"2024-02-02"},{"lineNumber":91,"author":{"gitId":"ChenXy128"},"content":"        LocalDate by;","lastModifiedDate":"2024-02-10"},{"lineNumber":92,"author":{"gitId":"ChenXy128"},"content":"        try {","lastModifiedDate":"2024-02-10"},{"lineNumber":93,"author":{"gitId":"ChenXy128"},"content":"            by \u003d formatInputDate(deadline);","lastModifiedDate":"2024-02-10"},{"lineNumber":94,"author":{"gitId":"ChenXy128"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":95,"author":{"gitId":"ChenXy128"},"content":"            throw new DukeException(\"Invalid date format. Please use dd/MM/yyyy.\");","lastModifiedDate":"2024-02-10"},{"lineNumber":96,"author":{"gitId":"ChenXy128"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":97,"author":{"gitId":"ChenXy128"},"content":"        return new Deadline(deadlineDescription, by);","lastModifiedDate":"2024-02-03"},{"lineNumber":98,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":99,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":100,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":101,"author":{"gitId":"ChenXy128"},"content":"     * Creates an Event task from the input command, including parsing the start and end dates.","lastModifiedDate":"2024-02-03"},{"lineNumber":102,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":103,"author":{"gitId":"ChenXy128"},"content":"     * @param input The user input string.","lastModifiedDate":"2024-02-03"},{"lineNumber":104,"author":{"gitId":"ChenXy128"},"content":"     * @return A new Event Task.","lastModifiedDate":"2024-02-03"},{"lineNumber":105,"author":{"gitId":"ChenXy128"},"content":"     * @throws DukeException If any input date is invalid or the input format is incorrect.","lastModifiedDate":"2024-02-03"},{"lineNumber":106,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":107,"author":{"gitId":"ChenXy128"},"content":"    public Task createEvent(String input) throws DukeException{","lastModifiedDate":"2024-02-10"},{"lineNumber":108,"author":{"gitId":"ChenXy128"},"content":"        int indexOfFrom \u003d input.indexOf(\"/from\");","lastModifiedDate":"2024-02-02"},{"lineNumber":109,"author":{"gitId":"ChenXy128"},"content":"        int indexOfTo \u003d input.indexOf(\"/to\");","lastModifiedDate":"2024-02-02"},{"lineNumber":110,"author":{"gitId":"ChenXy128"},"content":"        if (indexOfFrom \u003d\u003d -1 || indexOfTo \u003d\u003d -1) {","lastModifiedDate":"2024-02-10"},{"lineNumber":111,"author":{"gitId":"ChenXy128"},"content":"            throw new DukeException(\"Invalid command format for event. Use: event \u003cdescription\u003e /from \u003cstart date\u003e /to \u003cend date\u003e\");","lastModifiedDate":"2024-02-10"},{"lineNumber":112,"author":{"gitId":"ChenXy128"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":113,"author":{"gitId":"ChenXy128"},"content":"        String eventDescription \u003d input.substring(6, indexOfFrom - 1);","lastModifiedDate":"2024-02-02"},{"lineNumber":114,"author":{"gitId":"ChenXy128"},"content":"        String startString \u003d input.substring(indexOfFrom + 6, indexOfTo - 1);","lastModifiedDate":"2024-02-02"},{"lineNumber":115,"author":{"gitId":"ChenXy128"},"content":"        String endString \u003d input.substring(indexOfTo + 4);","lastModifiedDate":"2024-02-02"},{"lineNumber":116,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-10"},{"lineNumber":117,"author":{"gitId":"ChenXy128"},"content":"        LocalDate start, end;","lastModifiedDate":"2024-02-10"},{"lineNumber":118,"author":{"gitId":"ChenXy128"},"content":"        try {","lastModifiedDate":"2024-02-10"},{"lineNumber":119,"author":{"gitId":"ChenXy128"},"content":"            start \u003d formatInputDate(startString);","lastModifiedDate":"2024-02-10"},{"lineNumber":120,"author":{"gitId":"ChenXy128"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":121,"author":{"gitId":"ChenXy128"},"content":"            throw new DukeException(\"Invalid start date format for event. Please use dd/MM/yyyy.\");","lastModifiedDate":"2024-02-10"},{"lineNumber":122,"author":{"gitId":"ChenXy128"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":123,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-10"},{"lineNumber":124,"author":{"gitId":"ChenXy128"},"content":"        try {","lastModifiedDate":"2024-02-10"},{"lineNumber":125,"author":{"gitId":"ChenXy128"},"content":"            end \u003d formatInputDate(endString);","lastModifiedDate":"2024-02-10"},{"lineNumber":126,"author":{"gitId":"ChenXy128"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":127,"author":{"gitId":"ChenXy128"},"content":"            throw new DukeException(\"Invalid end date format for event. Please use dd/MM/yyyy.\");","lastModifiedDate":"2024-02-10"},{"lineNumber":128,"author":{"gitId":"ChenXy128"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":129,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-10"},{"lineNumber":130,"author":{"gitId":"ChenXy128"},"content":"        return new Event(eventDescription, start, end);","lastModifiedDate":"2024-02-03"},{"lineNumber":131,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":132,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":133,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":134,"author":{"gitId":"ChenXy128"},"content":"     * Parses a string representation of a task from the storage file into a Task object.","lastModifiedDate":"2024-02-03"},{"lineNumber":135,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":136,"author":{"gitId":"ChenXy128"},"content":"     * @param line The string representation of the task from the storage file.","lastModifiedDate":"2024-02-03"},{"lineNumber":137,"author":{"gitId":"ChenXy128"},"content":"     * @return The corresponding Task object.","lastModifiedDate":"2024-02-03"},{"lineNumber":138,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":139,"author":{"gitId":"ChenXy128"},"content":"    public Task parseStringToTask(String line) {","lastModifiedDate":"2024-02-02"},{"lineNumber":140,"author":{"gitId":"ChenXy128"},"content":"        char typeOfTask \u003d line.charAt(1);","lastModifiedDate":"2024-02-02"},{"lineNumber":141,"author":{"gitId":"ChenXy128"},"content":"        char status \u003d line.charAt(4);","lastModifiedDate":"2024-02-02"},{"lineNumber":142,"author":{"gitId":"ChenXy128"},"content":"        Task t \u003d null;","lastModifiedDate":"2024-02-02"},{"lineNumber":143,"author":{"gitId":"ChenXy128"},"content":"        if (typeOfTask \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2024-02-02"},{"lineNumber":144,"author":{"gitId":"ChenXy128"},"content":"            String description \u003d line.substring(7);","lastModifiedDate":"2024-02-02"},{"lineNumber":145,"author":{"gitId":"ChenXy128"},"content":"            t \u003d new ToDo(description);","lastModifiedDate":"2024-02-03"},{"lineNumber":146,"author":{"gitId":"ChenXy128"},"content":"        } else if (typeOfTask \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2024-02-02"},{"lineNumber":147,"author":{"gitId":"ChenXy128"},"content":"            int indexOfTime \u003d line.indexOf(\"(by: \");","lastModifiedDate":"2024-02-02"},{"lineNumber":148,"author":{"gitId":"ChenXy128"},"content":"            String description \u003d line.substring(7, indexOfTime - 1);","lastModifiedDate":"2024-02-02"},{"lineNumber":149,"author":{"gitId":"ChenXy128"},"content":"            String byString \u003d line.substring(indexOfTime + 5, line.indexOf(\")\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":150,"author":{"gitId":"ChenXy128"},"content":"            LocalDate by \u003d parseFileDateToStorageDate(byString);","lastModifiedDate":"2024-02-02"},{"lineNumber":151,"author":{"gitId":"ChenXy128"},"content":"            t \u003d new Deadline(description, by);","lastModifiedDate":"2024-02-03"},{"lineNumber":152,"author":{"gitId":"ChenXy128"},"content":"        } else if (typeOfTask \u003d\u003d \u0027E\u0027) {","lastModifiedDate":"2024-02-02"},{"lineNumber":153,"author":{"gitId":"ChenXy128"},"content":"            int indexOfStartTime \u003d line.indexOf(\"(from\");","lastModifiedDate":"2024-02-02"},{"lineNumber":154,"author":{"gitId":"ChenXy128"},"content":"            int indexOfEndTime \u003d line .indexOf(\"to\");","lastModifiedDate":"2024-02-02"},{"lineNumber":155,"author":{"gitId":"ChenXy128"},"content":"            String description \u003d line.substring(7, indexOfStartTime - 1);","lastModifiedDate":"2024-02-02"},{"lineNumber":156,"author":{"gitId":"ChenXy128"},"content":"            String startString \u003d line.substring(indexOfStartTime + 6, indexOfEndTime - 1);","lastModifiedDate":"2024-02-02"},{"lineNumber":157,"author":{"gitId":"ChenXy128"},"content":"            String endString \u003d line.substring(indexOfEndTime + 3, line.indexOf(\")\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":158,"author":{"gitId":"ChenXy128"},"content":"            LocalDate start \u003d parseFileDateToStorageDate(startString);","lastModifiedDate":"2024-02-02"},{"lineNumber":159,"author":{"gitId":"ChenXy128"},"content":"            LocalDate end \u003d parseFileDateToStorageDate(endString);","lastModifiedDate":"2024-02-02"},{"lineNumber":160,"author":{"gitId":"ChenXy128"},"content":"            t \u003d new Event(description, start, end);","lastModifiedDate":"2024-02-03"},{"lineNumber":161,"author":{"gitId":"ChenXy128"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":162,"author":{"gitId":"ChenXy128"},"content":"        boolean doneOrNot \u003d (status \u003d\u003d \u0027X\u0027);","lastModifiedDate":"2024-02-02"},{"lineNumber":163,"author":{"gitId":"ChenXy128"},"content":"        assert t !\u003d null;","lastModifiedDate":"2024-02-20"},{"lineNumber":164,"author":{"gitId":"ChenXy128"},"content":"        t.setStatus(doneOrNot);","lastModifiedDate":"2024-02-02"},{"lineNumber":165,"author":{"gitId":"ChenXy128"},"content":"        return t;","lastModifiedDate":"2024-02-02"},{"lineNumber":166,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":167,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":168,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":169,"author":{"gitId":"ChenXy128"},"content":"     * Converts a date string from the file storage format into a LocalDate object.","lastModifiedDate":"2024-02-03"},{"lineNumber":170,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":171,"author":{"gitId":"ChenXy128"},"content":"     * @param fileDate The date string in the file storage format.","lastModifiedDate":"2024-02-03"},{"lineNumber":172,"author":{"gitId":"ChenXy128"},"content":"     * @return The LocalDate object corresponding to the date string.","lastModifiedDate":"2024-02-03"},{"lineNumber":173,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":174,"author":{"gitId":"ChenXy128"},"content":"    public LocalDate parseFileDateToStorageDate(String fileDate) {","lastModifiedDate":"2024-02-02"},{"lineNumber":175,"author":{"gitId":"ChenXy128"},"content":"        DateTimeFormatter fileDateFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2024-02-02"},{"lineNumber":176,"author":{"gitId":"ChenXy128"},"content":"        LocalDate date \u003d LocalDate.parse(fileDate, fileDateFormatter);","lastModifiedDate":"2024-02-02"},{"lineNumber":177,"author":{"gitId":"ChenXy128"},"content":"        DateTimeFormatter storageDateFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-02-02"},{"lineNumber":178,"author":{"gitId":"ChenXy128"},"content":"        String acceptedDate \u003d date.format(storageDateFormatter);","lastModifiedDate":"2024-02-02"},{"lineNumber":179,"author":{"gitId":"ChenXy128"},"content":"        return LocalDate.parse(acceptedDate);","lastModifiedDate":"2024-02-02"},{"lineNumber":180,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":181,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":182,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":183,"author":{"gitId":"ChenXy128"},"content":"     * Formats an input date string from the user into a LocalDate object.","lastModifiedDate":"2024-02-03"},{"lineNumber":184,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":185,"author":{"gitId":"ChenXy128"},"content":"     * @param input The date string input by the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":186,"author":{"gitId":"ChenXy128"},"content":"     * @return The LocalDate object formatted according to the application\u0027s storage format.","lastModifiedDate":"2024-02-03"},{"lineNumber":187,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":188,"author":{"gitId":"ChenXy128"},"content":"    public LocalDate formatInputDate(String input) {","lastModifiedDate":"2024-02-20"},{"lineNumber":189,"author":{"gitId":"ChenXy128"},"content":"        DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2024-02-02"},{"lineNumber":190,"author":{"gitId":"ChenXy128"},"content":"        LocalDate date \u003d LocalDate.parse(input, inputFormatter);","lastModifiedDate":"2024-02-02"},{"lineNumber":191,"author":{"gitId":"ChenXy128"},"content":"        DateTimeFormatter storageFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-02-02"},{"lineNumber":192,"author":{"gitId":"ChenXy128"},"content":"        String acceptedDate \u003d date.format(storageFormatter);","lastModifiedDate":"2024-02-02"},{"lineNumber":193,"author":{"gitId":"ChenXy128"},"content":"        return LocalDate.parse(acceptedDate);","lastModifiedDate":"2024-02-02"},{"lineNumber":194,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":195,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-10"},{"lineNumber":196,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-10"},{"lineNumber":197,"author":{"gitId":"ChenXy128"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"ChenXy128":197}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChenXy128"},"content":"package duke.storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"ChenXy128"},"content":"import duke.parser.Parser;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"ChenXy128"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"ChenXy128"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"ChenXy128"},"content":"import java.io.File;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"ChenXy128"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"ChenXy128"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"ChenXy128"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"ChenXy128"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"ChenXy128"},"content":" * Handles loading from and saving tasks to the file system. This class provides functionality","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"ChenXy128"},"content":" * to read tasks from a file upon startup and write tasks to the same file when tasks are added","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"ChenXy128"},"content":" * or modified.","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"ChenXy128"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"ChenXy128"},"content":"public class Storage {","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"ChenXy128"},"content":"    protected String filePath;","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"ChenXy128"},"content":"    protected Parser parser;","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"ChenXy128"},"content":"     * Creates an instance of Storage with a specified file path for task data and a parser","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"ChenXy128"},"content":"     * for converting task data between its textual representation and Task objects.","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"ChenXy128"},"content":"     * @param filePath The path of the file where task data is stored.","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"ChenXy128"},"content":"     * @param parser The parser used to interpret and format task data.","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"ChenXy128"},"content":"    public Storage(String filePath, Parser parser) {","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"ChenXy128"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"ChenXy128"},"content":"        this.parser \u003d parser;","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"ChenXy128"},"content":"    public Parser getParser() {","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"ChenXy128"},"content":"        return this.parser;","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"ChenXy128"},"content":"    public String getFilePath() {","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"ChenXy128"},"content":"        return this.filePath;","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"ChenXy128"},"content":"     * Loads the tasks from the file specified by filePath into the provided TaskList.","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"ChenXy128"},"content":"     * If the file does not exist, it will be created.","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"ChenXy128"},"content":"     * @param list The TaskList to which the loaded tasks will be added.","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"ChenXy128"},"content":"     * @return The updated TaskList with tasks loaded from the file.","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"ChenXy128"},"content":"     * @throws IOException If an I/O error occurs during reading from the file.","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"ChenXy128"},"content":"    public TaskList loadFile(TaskList list) throws IOException {","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"ChenXy128"},"content":"        String filePath \u003d this.getFilePath();","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"ChenXy128"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"ChenXy128"},"content":"        if (!file.exists()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"ChenXy128"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"ChenXy128"},"content":"            file.createNewFile();","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"ChenXy128"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"ChenXy128"},"content":"        Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"ChenXy128"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"ChenXy128"},"content":"            String taskContent \u003d sc.nextLine();","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"ChenXy128"},"content":"            Task t \u003d this.getParser().parseStringToTask(taskContent);","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"ChenXy128"},"content":"            list.add(t);","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"ChenXy128"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"ChenXy128"},"content":"        return list;","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"ChenXy128"},"content":"     * Adds a task to the task data file. This method appends the task\u0027s string representation","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"ChenXy128"},"content":"     * to the end of the file, ensuring it is saved persistently.","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"ChenXy128"},"content":"     * @param task The task to be added to the file.","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"ChenXy128"},"content":"     * @throws IOException If an I/O error occurs during writing to the file.","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"ChenXy128"},"content":"    public void addTaskToFile(Task task) throws IOException{","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"ChenXy128"},"content":"        FileWriter fw \u003d new FileWriter(this.getFilePath(), true);","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"ChenXy128"},"content":"        fw.write(task.toString() + System.lineSeparator());","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"ChenXy128"},"content":"        fw.close();","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"ChenXy128"},"content":"     * Writes a given string to the task data file, overwriting its current contents.","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"ChenXy128"},"content":"     * This method is used for updating the entire task list in the file.","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"ChenXy128"},"content":"     * @param textToAdd The complete string representation of the task list to write to the file.","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"ChenXy128"},"content":"     * @throws IOException If an I/O error occurs during writing to the file.","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"ChenXy128"},"content":"    public void writeToFile(String textToAdd) throws IOException{","lastModifiedDate":"2024-02-02"},{"lineNumber":86,"author":{"gitId":"ChenXy128"},"content":"        FileWriter fw \u003d new FileWriter(this.getFilePath());","lastModifiedDate":"2024-02-02"},{"lineNumber":87,"author":{"gitId":"ChenXy128"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2024-02-02"},{"lineNumber":88,"author":{"gitId":"ChenXy128"},"content":"        fw.close();","lastModifiedDate":"2024-02-02"},{"lineNumber":89,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":90,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":91,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":92,"author":{"gitId":"ChenXy128"},"content":"     * Updates the task data file with the current contents of the TaskList. This method","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"ChenXy128"},"content":"     * generates the complete string representation of all tasks in the list and writes it","lastModifiedDate":"2024-02-03"},{"lineNumber":94,"author":{"gitId":"ChenXy128"},"content":"     * to the file, replacing any existing content.","lastModifiedDate":"2024-02-03"},{"lineNumber":95,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":96,"author":{"gitId":"ChenXy128"},"content":"     * @param list The TaskList containing all current tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":97,"author":{"gitId":"ChenXy128"},"content":"     * @throws IOException If an I/O error occurs during writing to the file.","lastModifiedDate":"2024-02-03"},{"lineNumber":98,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":99,"author":{"gitId":"ChenXy128"},"content":"    public void changeFileContent(TaskList list) throws IOException {","lastModifiedDate":"2024-02-02"},{"lineNumber":100,"author":{"gitId":"ChenXy128"},"content":"        StringBuilder contentBuilder \u003d new StringBuilder();","lastModifiedDate":"2024-02-02"},{"lineNumber":101,"author":{"gitId":"ChenXy128"},"content":"        for (Task t: list.getList()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":102,"author":{"gitId":"ChenXy128"},"content":"            contentBuilder.append(t.toString()).append(System.lineSeparator());","lastModifiedDate":"2024-02-02"},{"lineNumber":103,"author":{"gitId":"ChenXy128"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":104,"author":{"gitId":"ChenXy128"},"content":"        writeToFile(contentBuilder.toString());","lastModifiedDate":"2024-02-02"},{"lineNumber":105,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":106,"author":{"gitId":"ChenXy128"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"ChenXy128":106}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChenXy128"},"content":"package duke.task;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"ChenXy128"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"ChenXy128"},"content":"/**","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"ChenXy128"},"content":" * Represents a task with a deadline. It extends the {@code Task} class and includes a specific due date.","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"ChenXy128"},"content":" */","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"ChenXy128"},"content":"public class Deadline extends Task{","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"ChenXy128"},"content":"    protected LocalDate by;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"ChenXy128"},"content":"     * Constructs a {@code Deadline} task with the specified description and due date.","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"ChenXy128"},"content":"     * @param description The task\u0027s textual description.","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"ChenXy128"},"content":"     * @param by The due date of the task.","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"ChenXy128"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"ChenXy128"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"ChenXy128"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"ChenXy128"},"content":"     * Returns the due date of the task.","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"ChenXy128"},"content":"     * @return The due date as a {@code LocalDate}.","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"ChenXy128"},"content":"    public LocalDate getBy() {","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"ChenXy128"},"content":"        return this.by;","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"ChenXy128"},"content":"     * Returns a string representation of the deadline task, including its type, status, description, and due date.","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":33,"author":{"gitId":"ChenXy128"},"content":"     * @return A formatted string indicating the task\u0027s type (D for Deadline), completion status, description, and due date.","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"ChenXy128"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"ChenXy128"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"ChenXy128"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + formatDateForPrinting(this.getBy()) + \")\";","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"ChenXy128"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"ChenXy128":39}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChenXy128"},"content":"package duke.task;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"ChenXy128"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"ChenXy128"},"content":"/**","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"ChenXy128"},"content":" * Represents an event task that has both a start and an end date. It extends the {@code Task} class,","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"ChenXy128"},"content":" * incorporating the duration of the event.","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"ChenXy128"},"content":" */","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"ChenXy128"},"content":"public class Event extends Task{","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"ChenXy128"},"content":"    protected LocalDate start;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"ChenXy128"},"content":"    protected LocalDate end;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"ChenXy128"},"content":"     * Constructs an {@code Event} task with the specified description, start date, and end date.","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"ChenXy128"},"content":"     * @param description The textual description of the event.","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"ChenXy128"},"content":"     * @param start The starting date of the event.","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"ChenXy128"},"content":"     * @param end The ending date of the event.","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"ChenXy128"},"content":"    public Event(String description, LocalDate start, LocalDate end) {","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"ChenXy128"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"ChenXy128"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"ChenXy128"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"ChenXy128"},"content":"     * Returns the start date of the event.","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"ChenXy128"},"content":"     * @return The start date as a {@code LocalDate}.","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"ChenXy128"},"content":"    public LocalDate getStart() {","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"ChenXy128"},"content":"        return this.start;","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"ChenXy128"},"content":"     * Returns the end date of the event.","lastModifiedDate":"2024-02-10"},{"lineNumber":36,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":37,"author":{"gitId":"ChenXy128"},"content":"     * @return The end date as a {@code LocalDate}.","lastModifiedDate":"2024-02-10"},{"lineNumber":38,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":39,"author":{"gitId":"ChenXy128"},"content":"    public LocalDate getEnd() {","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"ChenXy128"},"content":"        return this.end;","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":44,"author":{"gitId":"ChenXy128"},"content":"     * Returns a string representation of the event task, including its type, status, description, start date, and end date.","lastModifiedDate":"2024-02-10"},{"lineNumber":45,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":46,"author":{"gitId":"ChenXy128"},"content":"     * @return A formatted string indicating the task\u0027s type (E for Event), completion status, description, and duration (start to end date).","lastModifiedDate":"2024-02-10"},{"lineNumber":47,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":48,"author":{"gitId":"ChenXy128"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"ChenXy128"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"ChenXy128"},"content":"        return \"[E]\" + super.toString() + \" (from \" + formatDateForPrinting(this.getStart())","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"ChenXy128"},"content":"                + \" to \" + formatDateForPrinting(this.getEnd()) + \")\";","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":53,"author":{"gitId":"ChenXy128"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"ChenXy128":53}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChenXy128"},"content":"package duke.task;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"ChenXy128"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"ChenXy128"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"ChenXy128"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"ChenXy128"},"content":" * Represents a task with a description and a done status. This class serves as a base class for different types of tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"ChenXy128"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"ChenXy128"},"content":"public class Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"ChenXy128"},"content":"    protected String description;","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"ChenXy128"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"ChenXy128"},"content":"     * Creates a new Task with the specified description. The task is initially not done.","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"ChenXy128"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"ChenXy128"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"ChenXy128"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"ChenXy128"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"ChenXy128"},"content":"     * Returns the status icon of the task, indicating whether it is done or not.","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"ChenXy128"},"content":"     * @return A string representing the status icon (\"X\" for done, \" \" for not done).","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"ChenXy128"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"ChenXy128"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"ChenXy128"},"content":"     * Returns the description of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"ChenXy128"},"content":"     * @return The description of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"ChenXy128"},"content":"    public String getDescription() {","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"ChenXy128"},"content":"        return this.description;","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"ChenXy128"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"ChenXy128"},"content":"    public void markDone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"ChenXy128"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"ChenXy128"},"content":"     * Marks the task as undone.","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"ChenXy128"},"content":"    public void markUndone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":52,"author":{"gitId":"ChenXy128"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":53,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":54,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"ChenXy128"},"content":"     * Sets the done status of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"ChenXy128"},"content":"     * @param status The new done status of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"ChenXy128"},"content":"    public void setStatus(boolean status) {","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"ChenXy128"},"content":"        this.isDone \u003d status;","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"ChenXy128"},"content":"     * Returns a string representation of the task, including its status and description.","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"ChenXy128"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"ChenXy128"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":70,"author":{"gitId":"ChenXy128"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":71,"author":{"gitId":"ChenXy128"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.getDescription();","lastModifiedDate":"2024-01-25"},{"lineNumber":72,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":73,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"ChenXy128"},"content":"     * Formats a given LocalDate for printing, using the format \"MMM dd yyyy\".","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"ChenXy128"},"content":"     * @param date The date to be formatted.","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"ChenXy128"},"content":"     * @return A string representing the formatted date.","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"ChenXy128"},"content":"    public static String formatDateForPrinting(LocalDate date) {","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"ChenXy128"},"content":"        DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"ChenXy128"},"content":"        return date.format(outputFormatter);","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"ChenXy128"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"ChenXy128":84}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChenXy128"},"content":"package duke.task;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"ChenXy128"},"content":"/**","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"ChenXy128"},"content":" * Represents a to-do task without any specific date or time attached. It extends the {@code Task} class,","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"ChenXy128"},"content":" * representing the simplest form of a task.","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"ChenXy128"},"content":" */","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"ChenXy128"},"content":"public class ToDo extends Task{","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"ChenXy128"},"content":"     * Constructs a {@code ToDo} task with the specified description.","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"ChenXy128"},"content":"     * @param description The textual description of the to-do task.","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"ChenXy128"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"ChenXy128"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"ChenXy128"},"content":"     * Returns a string representation of the to-do task, including its type and status.","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"ChenXy128"},"content":"     * @return A formatted string indicating the task\u0027s type (T for ToDo), completion status, and description.","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"ChenXy128"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"ChenXy128"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"ChenXy128"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"ChenXy128"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"ChenXy128":27}},{"path":"src/main/java/duke/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChenXy128"},"content":"package duke.tasklist;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"ChenXy128"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"ChenXy128"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"ChenXy128"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"ChenXy128"},"content":" * Represents a list of tasks. This class provides methods to manipulate","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"ChenXy128"},"content":" * and query the list of tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"ChenXy128"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"ChenXy128"},"content":"public class TaskList {","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"ChenXy128"},"content":"    protected ArrayList\u003cTask\u003e list;","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"ChenXy128"},"content":"     * Constructs a new TaskList using the provided list of tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"ChenXy128"},"content":"     * @param list The initial list of tasks to be managed.","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"ChenXy128"},"content":"    public TaskList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"ChenXy128"},"content":"        this.list \u003d list;","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"ChenXy128"},"content":"     * Returns the list of tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"ChenXy128"},"content":"     * @return The current list of tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"ChenXy128"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"ChenXy128"},"content":"        return this.list;","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"ChenXy128"},"content":"     * Adds a task to the list.","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"ChenXy128"},"content":"     * @param t The task to add.","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"ChenXy128"},"content":"    public void add(Task t) {","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"ChenXy128"},"content":"        this.getList().add(t);","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"ChenXy128"},"content":"     * Deletes a task from the list.","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"ChenXy128"},"content":"     * @param t The task to delete.","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"ChenXy128"},"content":"    public void delete(Task t) {","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"ChenXy128"},"content":"        this.getList().remove(t);","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"ChenXy128"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"ChenXy128"},"content":"     * @return The size of the list.","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"ChenXy128"},"content":"    public int size() {","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"ChenXy128"},"content":"        return this.getList().size();","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"ChenXy128"},"content":"     * Retrieves a task by its position in the list.","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"ChenXy128"},"content":"     * @param index The index of the task to retrieve.","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"ChenXy128"},"content":"     * @return The task at the specified index, or null if the index is out of bounds.","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"ChenXy128"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"ChenXy128"},"content":"        return index \u003e\u003d 0 \u0026\u0026 index \u003c this.size() ? this.getList().get(index) : null;","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"ChenXy128"},"content":"     * Checks if a specific task is contained in the list.","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"ChenXy128"},"content":"     * @param t The task to check for.","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"ChenXy128"},"content":"     * @return true if the task is in the list, otherwise false.","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"ChenXy128"},"content":"    public boolean contains(Task t) {","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"ChenXy128"},"content":"        return this.getList().contains(t);","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"ChenXy128"},"content":"     * Searches for tasks that contain the specified keyword in their description.","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"ChenXy128"},"content":"     * @param keyword The keyword to search for.","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"ChenXy128"},"content":"     * @return A string containing a list of tasks that match the keyword, or a message if no tasks match.","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"ChenXy128"},"content":"    public String findTask(String keyword) {","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"ChenXy128"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"ChenXy128"},"content":"        int num \u003d 0;","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"ChenXy128"},"content":"        for (Task t: this.getList()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":89,"author":{"gitId":"ChenXy128"},"content":"            if (t.getDescription().toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2024-02-03"},{"lineNumber":90,"author":{"gitId":"ChenXy128"},"content":"                num +\u003d 1;","lastModifiedDate":"2024-02-03"},{"lineNumber":91,"author":{"gitId":"ChenXy128"},"content":"                sb.append(num).append(\".\").append(t.toString()).append(System.lineSeparator());","lastModifiedDate":"2024-02-03"},{"lineNumber":92,"author":{"gitId":"ChenXy128"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"ChenXy128"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":94,"author":{"gitId":"ChenXy128"},"content":"        if (num \u003d\u003d 0) {","lastModifiedDate":"2024-02-03"},{"lineNumber":95,"author":{"gitId":"ChenXy128"},"content":"            sb.append(\"No tasks match your find query for: \").append(keyword);","lastModifiedDate":"2024-02-03"},{"lineNumber":96,"author":{"gitId":"ChenXy128"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":97,"author":{"gitId":"ChenXy128"},"content":"        return sb.toString();","lastModifiedDate":"2024-02-03"},{"lineNumber":98,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":99,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":100,"author":{"gitId":"ChenXy128"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"ChenXy128":100}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChenXy128"},"content":"package duke.ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"ChenXy128"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"ChenXy128"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"ChenXy128"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"ChenXy128"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"ChenXy128"},"content":" * Manages user interactions in the Duke application, handling the display of messages for various operations","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"ChenXy128"},"content":" * including task addition, deletion, marking, unmarking, and listing, as well as providing error feedback.","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"ChenXy128"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"ChenXy128"},"content":"public class Ui {","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"ChenXy128"},"content":"     * Generates a message indicating a task has been added to the list, displaying the task and the updated total count.","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"ChenXy128"},"content":"     * @param task The newly added task.","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"ChenXy128"},"content":"     * @param list The task list to which the task was added.","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"ChenXy128"},"content":"     * @return A string containing the confirmation message and the current task count.","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"ChenXy128"},"content":"    public String echo(Task task, TaskList list) {","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"ChenXy128"},"content":"        String echo \u003d \"Got it. I\u0027ve added this task:\\n\" + \"  \" + task.toString() + \"\\n\"","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"ChenXy128"},"content":"            + \"Now you have \" + (list.size() + 1) + \" tasks in the list\";","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"ChenXy128"},"content":"        list.add(task);","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"ChenXy128"},"content":"        return echo;","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"ChenXy128"},"content":"     * Compiles and returns a string listing all tasks currently in the task list.","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"ChenXy128"},"content":"     * @param list The task list containing the tasks to be listed.","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"ChenXy128"},"content":"     * @return A formatted string listing all tasks with their status and description.","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"ChenXy128"},"content":"    public String listing(TaskList list) {","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"ChenXy128"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"ChenXy128"},"content":"        sb.append(\"Here are the tasks in your list\").append(System.lineSeparator());","lastModifiedDate":"2024-02-10"},{"lineNumber":36,"author":{"gitId":"ChenXy128"},"content":"        if (list.size() !\u003d 0) {","lastModifiedDate":"2024-02-10"},{"lineNumber":37,"author":{"gitId":"ChenXy128"},"content":"            int num \u003d 1;","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"ChenXy128"},"content":"            for (Task t : list.getList()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"ChenXy128"},"content":"                sb.append(num + \".\" + t.toString()).append(System.lineSeparator());","lastModifiedDate":"2024-02-10"},{"lineNumber":40,"author":{"gitId":"ChenXy128"},"content":"                num++;","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"ChenXy128"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"ChenXy128"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"ChenXy128"},"content":"        return sb.toString();","lastModifiedDate":"2024-02-10"},{"lineNumber":44,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"ChenXy128"},"content":"     * Creates a message indicating a specific task has been marked as completed.","lastModifiedDate":"2024-02-10"},{"lineNumber":48,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"ChenXy128"},"content":"     * @param t The task that has been marked as done.","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"ChenXy128"},"content":"     * @return A confirmation message stating the task is done.","lastModifiedDate":"2024-02-10"},{"lineNumber":51,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"ChenXy128"},"content":"    public String marking(Task t) {","lastModifiedDate":"2024-02-10"},{"lineNumber":53,"author":{"gitId":"ChenXy128"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-02-10"},{"lineNumber":54,"author":{"gitId":"ChenXy128"},"content":"        sb.append(\"Nice! I have marked this task as done\\n\").append(t.toString());","lastModifiedDate":"2024-02-10"},{"lineNumber":55,"author":{"gitId":"ChenXy128"},"content":"        return sb.toString();","lastModifiedDate":"2024-02-10"},{"lineNumber":56,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"ChenXy128"},"content":"     * Generates a message indicating a specific task has been unmarked, implying it is not completed.","lastModifiedDate":"2024-02-10"},{"lineNumber":60,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"ChenXy128"},"content":"     * @param t The task that has been unmarked.","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"ChenXy128"},"content":"     * @return A message stating the task is marked as not done.","lastModifiedDate":"2024-02-10"},{"lineNumber":63,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"ChenXy128"},"content":"    public String unmarking(Task t) {","lastModifiedDate":"2024-02-10"},{"lineNumber":65,"author":{"gitId":"ChenXy128"},"content":"        return \"Ok, I\u0027ve marked this task as not done yet\\n\" + t.toString();","lastModifiedDate":"2024-02-10"},{"lineNumber":66,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"ChenXy128"},"content":"     * Produces a message confirming the deletion of a task and shows the new total count of tasks.","lastModifiedDate":"2024-02-10"},{"lineNumber":70,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"ChenXy128"},"content":"     * @param t The task that has been deleted.","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"ChenXy128"},"content":"     * @param list The task list from which the task was removed.","lastModifiedDate":"2024-02-10"},{"lineNumber":73,"author":{"gitId":"ChenXy128"},"content":"     * @return A string confirming the task\u0027s deletion and the updated task count.","lastModifiedDate":"2024-02-10"},{"lineNumber":74,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"ChenXy128"},"content":"    public String deleting(Task t, TaskList list) {","lastModifiedDate":"2024-02-10"},{"lineNumber":76,"author":{"gitId":"ChenXy128"},"content":"        String toPrint \u003d \"Noted. I\u0027ve removed this task:\\n\" + \"  \" + t.toString() + \"\\n\"","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"ChenXy128"},"content":"            + \"Now you have \" + (list.size() - 1) + \" tasks in the list\";","lastModifiedDate":"2024-02-10"},{"lineNumber":78,"author":{"gitId":"ChenXy128"},"content":"        return toPrint;","lastModifiedDate":"2024-02-10"},{"lineNumber":79,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"ChenXy128"},"content":"     * Searches for and lists tasks containing the specified keyword in their description.","lastModifiedDate":"2024-02-10"},{"lineNumber":83,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"ChenXy128"},"content":"     * @param list The task list to search within.","lastModifiedDate":"2024-02-10"},{"lineNumber":85,"author":{"gitId":"ChenXy128"},"content":"     * @param keyword The keyword to search for in the task descriptions.","lastModifiedDate":"2024-02-10"},{"lineNumber":86,"author":{"gitId":"ChenXy128"},"content":"     * @return A string listing all tasks that match the search criterion.","lastModifiedDate":"2024-02-10"},{"lineNumber":87,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"ChenXy128"},"content":"    public String finding(TaskList list, String keyword) {","lastModifiedDate":"2024-02-10"},{"lineNumber":89,"author":{"gitId":"ChenXy128"},"content":"        String result \u003d list.findTask(keyword);","lastModifiedDate":"2024-02-03"},{"lineNumber":90,"author":{"gitId":"ChenXy128"},"content":"        String toPrint \u003d \"Here are the matching tasks in your list:\\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":91,"author":{"gitId":"ChenXy128"},"content":"                + result;","lastModifiedDate":"2024-02-10"},{"lineNumber":92,"author":{"gitId":"ChenXy128"},"content":"        return toPrint;","lastModifiedDate":"2024-02-10"},{"lineNumber":93,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":94,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":95,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":96,"author":{"gitId":"ChenXy128"},"content":"     * Generates a farewell message to be displayed when the application is exited.","lastModifiedDate":"2024-02-10"},{"lineNumber":97,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":98,"author":{"gitId":"ChenXy128"},"content":"     * @return A goodbye message.","lastModifiedDate":"2024-02-10"},{"lineNumber":99,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":100,"author":{"gitId":"ChenXy128"},"content":"    public String bye() {","lastModifiedDate":"2024-02-10"},{"lineNumber":101,"author":{"gitId":"ChenXy128"},"content":"        String bye \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2024-02-10"},{"lineNumber":102,"author":{"gitId":"ChenXy128"},"content":"        return bye;","lastModifiedDate":"2024-02-10"},{"lineNumber":103,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":104,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":105,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":106,"author":{"gitId":"ChenXy128"},"content":"     * Generate a help message to help the user navigate the chatbot.","lastModifiedDate":"2024-02-20"},{"lineNumber":107,"author":{"gitId":"ChenXy128"},"content":"     * @return A help message","lastModifiedDate":"2024-02-20"},{"lineNumber":108,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":109,"author":{"gitId":"ChenXy128"},"content":"    public String help() {","lastModifiedDate":"2024-02-20"},{"lineNumber":110,"author":{"gitId":"ChenXy128"},"content":"        String help \u003d \"Here\u0027s a guide to using Jinni:\\n\"","lastModifiedDate":"2024-02-20"},{"lineNumber":111,"author":{"gitId":"ChenXy128"},"content":"                + \"type\\n\"","lastModifiedDate":"2024-02-20"},{"lineNumber":112,"author":{"gitId":"ChenXy128"},"content":"                + \"\u0027list\u0027: allows you to view all tasks you have\\n\"","lastModifiedDate":"2024-02-20"},{"lineNumber":113,"author":{"gitId":"ChenXy128"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-02-20"},{"lineNumber":114,"author":{"gitId":"ChenXy128"},"content":"                + \"\u0027mark X\u0027: allows you to mark a task as done (X stands for the task number)\\n\"","lastModifiedDate":"2024-02-20"},{"lineNumber":115,"author":{"gitId":"ChenXy128"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-02-20"},{"lineNumber":116,"author":{"gitId":"ChenXy128"},"content":"                + \"\u0027unmark X\u0027: allows you to unmark a task as undone (X stands for the task number)\\n\"","lastModifiedDate":"2024-02-20"},{"lineNumber":117,"author":{"gitId":"ChenXy128"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-02-20"},{"lineNumber":118,"author":{"gitId":"ChenXy128"},"content":"                + \"\u0027todo description\u0027: allows you to add a task of todo followed by the description of the task\\n\"","lastModifiedDate":"2024-02-20"},{"lineNumber":119,"author":{"gitId":"ChenXy128"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-02-20"},{"lineNumber":120,"author":{"gitId":"ChenXy128"},"content":"                + \"\u0027deadline description /by dd/mm/yyyy\u0027: allows you to add a task with deadline (note the date format must be precise)\\n\"","lastModifiedDate":"2024-02-20"},{"lineNumber":121,"author":{"gitId":"ChenXy128"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-02-20"},{"lineNumber":122,"author":{"gitId":"ChenXy128"},"content":"                + \"\u0027event description /from dd/mm/yyyy /to dd/mm/yyyy\u0027: allows you to add an event task with the duration (note the date formate too \\n\"","lastModifiedDate":"2024-02-20"},{"lineNumber":123,"author":{"gitId":"ChenXy128"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-02-20"},{"lineNumber":124,"author":{"gitId":"ChenXy128"},"content":"                + \"\u0027delete X\u0027: allows you to delete a task (X stands for the task number)\\n\"","lastModifiedDate":"2024-02-20"},{"lineNumber":125,"author":{"gitId":"ChenXy128"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-02-20"},{"lineNumber":126,"author":{"gitId":"ChenXy128"},"content":"                + \"\u0027find keyword\u0027: allows you to find the tasks with the keyword you desire\\n\"","lastModifiedDate":"2024-02-20"},{"lineNumber":127,"author":{"gitId":"ChenXy128"},"content":"            + System.lineSeparator()","lastModifiedDate":"2024-02-20"},{"lineNumber":128,"author":{"gitId":"ChenXy128"},"content":"                + \"\u0027bye\u0027: quits Jinni\";","lastModifiedDate":"2024-02-20"},{"lineNumber":129,"author":{"gitId":"ChenXy128"},"content":"        return help;","lastModifiedDate":"2024-02-20"},{"lineNumber":130,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":131,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-20"},{"lineNumber":132,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":133,"author":{"gitId":"ChenXy128"},"content":"     * Checks for errors in the mark command input by the user and throws an exception if the input is invalid.","lastModifiedDate":"2024-02-03"},{"lineNumber":134,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":135,"author":{"gitId":"ChenXy128"},"content":"     * @param inputFromUser The user input for marking a task.","lastModifiedDate":"2024-02-03"},{"lineNumber":136,"author":{"gitId":"ChenXy128"},"content":"     * @param list The task list against which to validate the input.","lastModifiedDate":"2024-02-03"},{"lineNumber":137,"author":{"gitId":"ChenXy128"},"content":"     * @throws DukeException If the specified task index is invalid.","lastModifiedDate":"2024-02-03"},{"lineNumber":138,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":139,"author":{"gitId":"ChenXy128"},"content":"    public void handleMarkError(String inputFromUser, TaskList list) throws DukeException {","lastModifiedDate":"2024-02-02"},{"lineNumber":140,"author":{"gitId":"ChenXy128"},"content":"        if (Integer.parseInt(inputFromUser.substring(5)) \u003e list.size()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":141,"author":{"gitId":"ChenXy128"},"content":"            throw new DukeException(\"You do not have that many tasks\");","lastModifiedDate":"2024-02-02"},{"lineNumber":142,"author":{"gitId":"ChenXy128"},"content":"            ","lastModifiedDate":"2024-02-10"},{"lineNumber":143,"author":{"gitId":"ChenXy128"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":144,"author":{"gitId":"ChenXy128"},"content":"        if (Integer.parseInt(inputFromUser.substring(5)) \u003c 1) {","lastModifiedDate":"2024-02-02"},{"lineNumber":145,"author":{"gitId":"ChenXy128"},"content":"            throw new DukeException(\"No negative task number\");","lastModifiedDate":"2024-02-02"},{"lineNumber":146,"author":{"gitId":"ChenXy128"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":147,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":148,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":149,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":150,"author":{"gitId":"ChenXy128"},"content":"     * Checks for errors in the unmark command input by the user and throws an exception if the input is invalid.","lastModifiedDate":"2024-02-03"},{"lineNumber":151,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":152,"author":{"gitId":"ChenXy128"},"content":"     * @param inputFromUser The user input for unmarking a task.","lastModifiedDate":"2024-02-03"},{"lineNumber":153,"author":{"gitId":"ChenXy128"},"content":"     * @param list The task list against which to validate the input.","lastModifiedDate":"2024-02-03"},{"lineNumber":154,"author":{"gitId":"ChenXy128"},"content":"     * @throws DukeException If the specified task index is invalid.","lastModifiedDate":"2024-02-03"},{"lineNumber":155,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":156,"author":{"gitId":"ChenXy128"},"content":"    public void handleUnmarkError(String inputFromUser, TaskList list) throws DukeException {","lastModifiedDate":"2024-02-02"},{"lineNumber":157,"author":{"gitId":"ChenXy128"},"content":"        if (Integer.parseInt(inputFromUser.substring(7)) \u003e list.size()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":158,"author":{"gitId":"ChenXy128"},"content":"            throw new DukeException(\"You do not have that many tasks\");","lastModifiedDate":"2024-02-02"},{"lineNumber":159,"author":{"gitId":"ChenXy128"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":160,"author":{"gitId":"ChenXy128"},"content":"        if (Integer.parseInt(inputFromUser.substring(7)) \u003c 1) {","lastModifiedDate":"2024-02-02"},{"lineNumber":161,"author":{"gitId":"ChenXy128"},"content":"            throw new DukeException(\"No negative task number\");","lastModifiedDate":"2024-02-02"},{"lineNumber":162,"author":{"gitId":"ChenXy128"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":163,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":164,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":165,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":166,"author":{"gitId":"ChenXy128"},"content":"     * Validates the input for a todo command and throws an exception if the input is invalid.","lastModifiedDate":"2024-02-03"},{"lineNumber":167,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":168,"author":{"gitId":"ChenXy128"},"content":"     * @param inputFromUser The user input for creating a todo task.","lastModifiedDate":"2024-02-03"},{"lineNumber":169,"author":{"gitId":"ChenXy128"},"content":"     * @throws DukeException If the task description is empty.","lastModifiedDate":"2024-02-03"},{"lineNumber":170,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":171,"author":{"gitId":"ChenXy128"},"content":"    public void handleTodoError(String inputFromUser) throws DukeException {","lastModifiedDate":"2024-02-02"},{"lineNumber":172,"author":{"gitId":"ChenXy128"},"content":"        if (!(inputFromUser.substring(4).matches(\".*\\\\S.*\"))) {","lastModifiedDate":"2024-02-02"},{"lineNumber":173,"author":{"gitId":"ChenXy128"},"content":"            throw new DukeException(\"Description of the task can\u0027t be empty\");","lastModifiedDate":"2024-02-02"},{"lineNumber":174,"author":{"gitId":"ChenXy128"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":175,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":176,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":177,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":178,"author":{"gitId":"ChenXy128"},"content":"     * Validates the input for a deadline command and throws an exception if the input is invalid.","lastModifiedDate":"2024-02-03"},{"lineNumber":179,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":180,"author":{"gitId":"ChenXy128"},"content":"     * @param inputFromUser The user input for creating a deadline task.","lastModifiedDate":"2024-02-03"},{"lineNumber":181,"author":{"gitId":"ChenXy128"},"content":"     * @throws DukeException If the task description or date is empty or invalid.","lastModifiedDate":"2024-02-03"},{"lineNumber":182,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":183,"author":{"gitId":"ChenXy128"},"content":"    public void handleDeadlineError(String inputFromUser) throws DukeException {","lastModifiedDate":"2024-02-02"},{"lineNumber":184,"author":{"gitId":"ChenXy128"},"content":"        if (!(inputFromUser.substring(8).matches(\".*\\\\S.*\"))) {","lastModifiedDate":"2024-02-02"},{"lineNumber":185,"author":{"gitId":"ChenXy128"},"content":"            throw new DukeException(\"Description of the task can\u0027t be empty\");","lastModifiedDate":"2024-02-02"},{"lineNumber":186,"author":{"gitId":"ChenXy128"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":187,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":188,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":189,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":190,"author":{"gitId":"ChenXy128"},"content":"     * Validates the input for an event command and throws an exception if the input is invalid.","lastModifiedDate":"2024-02-03"},{"lineNumber":191,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":192,"author":{"gitId":"ChenXy128"},"content":"     * @param inputFromUser The user input for creating an event task.","lastModifiedDate":"2024-02-03"},{"lineNumber":193,"author":{"gitId":"ChenXy128"},"content":"     * @throws DukeException If the task description or dates are empty or invalid.","lastModifiedDate":"2024-02-03"},{"lineNumber":194,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":195,"author":{"gitId":"ChenXy128"},"content":"    public void handleEventError(String inputFromUser) throws DukeException {","lastModifiedDate":"2024-02-02"},{"lineNumber":196,"author":{"gitId":"ChenXy128"},"content":"        if (!(inputFromUser.substring(5).matches(\".*\\\\S.*\"))) {","lastModifiedDate":"2024-02-02"},{"lineNumber":197,"author":{"gitId":"ChenXy128"},"content":"            throw new DukeException(\"Description of the task can\u0027t be empty\");","lastModifiedDate":"2024-02-02"},{"lineNumber":198,"author":{"gitId":"ChenXy128"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":199,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":200,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":201,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":202,"author":{"gitId":"ChenXy128"},"content":"     * Validates the input for a delete command and throws an exception if the task index is invalid.","lastModifiedDate":"2024-02-03"},{"lineNumber":203,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":204,"author":{"gitId":"ChenXy128"},"content":"     * @param list The task list from which a task is to be deleted.","lastModifiedDate":"2024-02-03"},{"lineNumber":205,"author":{"gitId":"ChenXy128"},"content":"     * @param indexOfTaskToDelete The index of the task to delete.","lastModifiedDate":"2024-02-03"},{"lineNumber":206,"author":{"gitId":"ChenXy128"},"content":"     * @throws DukeException If the task index is out of bounds.","lastModifiedDate":"2024-02-03"},{"lineNumber":207,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":208,"author":{"gitId":"ChenXy128"},"content":"    public void handleDeleteError(TaskList list, int indexOfTaskToDelete) throws DukeException {","lastModifiedDate":"2024-02-02"},{"lineNumber":209,"author":{"gitId":"ChenXy128"},"content":"        if (list.size() \u003c 1) {","lastModifiedDate":"2024-02-02"},{"lineNumber":210,"author":{"gitId":"ChenXy128"},"content":"            throw new DukeException(\"No task at the moment\");","lastModifiedDate":"2024-02-02"},{"lineNumber":211,"author":{"gitId":"ChenXy128"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":212,"author":{"gitId":"ChenXy128"},"content":"        if (indexOfTaskToDelete \u003e list.size() || indexOfTaskToDelete \u003c 1) {","lastModifiedDate":"2024-02-02"},{"lineNumber":213,"author":{"gitId":"ChenXy128"},"content":"            throw new DukeException(\"Check you task number\");","lastModifiedDate":"2024-02-02"},{"lineNumber":214,"author":{"gitId":"ChenXy128"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":215,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":216,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":217,"author":{"gitId":"ChenXy128"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"ChenXy128":217}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ChenXy128"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"ChenXy128"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"ChenXy128"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"ChenXy128"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"ChenXy128"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"ChenXy128"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"ChenXy128"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"ChenXy128"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\" /\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"ChenXy128"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"ChenXy128"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"ChenXy128"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"ChenXy128"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"ChenXy128"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"ChenXy128"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"ChenXy128":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ChenXy128"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"ChenXy128"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"ChenXy128"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"ChenXy128"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"ChenXy128"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"ChenXy128"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"ChenXy128"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.main.MainWindow\"\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"ChenXy128"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"ChenXy128"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"ChenXy128"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"ChenXy128"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"ChenXy128"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"ChenXy128"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"ChenXy128"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"ChenXy128"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"ChenXy128"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"ChenXy128"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"ChenXy128":19}},{"path":"src/test/java/duke/parsertest/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChenXy128"},"content":"package duke.parsertest;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"ChenXy128"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"ChenXy128"},"content":"import duke.parser.Parser;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"ChenXy128"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"ChenXy128"},"content":"import duke.task.ToDo;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"ChenXy128"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"ChenXy128"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"ChenXy128"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"ChenXy128"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"ChenXy128"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"ChenXy128"},"content":" * Tests the functionality of the Parser class.","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"ChenXy128"},"content":" * Ensures that tasks are created correctly from user input strings","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"ChenXy128"},"content":" * and that appropriate exceptions are thrown for invalid inputs.","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"ChenXy128"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"ChenXy128"},"content":"public class ParserTest {","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"ChenXy128"},"content":"     * Tests the creation of a ToDo task with valid input.","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"ChenXy128"},"content":"     * Ensures that the task is created correctly and matches the expected description.","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"ChenXy128"},"content":"     * @throws DukeException If an error occurs during task creation.","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"ChenXy128"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"ChenXy128"},"content":"    public void createToDo_validInput_success() throws DukeException {","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"ChenXy128"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"ChenXy128"},"content":"        String input \u003d \"todo buy milk\";","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"ChenXy128"},"content":"        ","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"ChenXy128"},"content":"        Task result \u003d parser.createToDo(input);","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"ChenXy128"},"content":" ","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"ChenXy128"},"content":"        assertTrue(result instanceof ToDo, \"The result should be an instance of ToDos\");","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"ChenXy128"},"content":"        assertEquals(\"buy milk\", result.getDescription(), \"The description of the todo should match the input\");","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"ChenXy128"},"content":"     * Tests the creation of a ToDo task with invalid input.","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"ChenXy128"},"content":"     * Expects the method to throw a StringIndexOutOfBoundsException due to missing task description.","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"ChenXy128"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"ChenXy128"},"content":"    public void createToDo_invalidInput_throwsException() {","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"ChenXy128"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"ChenXy128"},"content":"        String input \u003d \"todo\";","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"ChenXy128"},"content":"        ","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"ChenXy128"},"content":"        assertThrows(StringIndexOutOfBoundsException.class, () -\u003e {","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"ChenXy128"},"content":"            parser.createToDo(input);","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"ChenXy128"},"content":"        }, \"Expected createToDo to throw StringIndexOutOfBoundException as task description is empty\" +","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"ChenXy128"},"content":"                \"but it did not\");","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"ChenXy128"},"content":"        ","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"ChenXy128"},"content":"}","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"ChenXy128":54}},{"path":"src/test/java/duke/storagetest/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChenXy128"},"content":"package duke.storagetest;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"ChenXy128"},"content":"import duke.parser.Parser;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"ChenXy128"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"ChenXy128"},"content":"import duke.task.ToDo;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"ChenXy128"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"ChenXy128"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"ChenXy128"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"ChenXy128"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"ChenXy128"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"ChenXy128"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"ChenXy128"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"ChenXy128"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"ChenXy128"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"ChenXy128"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"ChenXy128"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"ChenXy128"},"content":" * Tests for the Storage class functionality.","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"ChenXy128"},"content":" * This includes testing the loading of tasks from a file,","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"ChenXy128"},"content":" * adding tasks to a file, and changing the content of the file.","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"ChenXy128"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"ChenXy128"},"content":"public class StorageTest {","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"ChenXy128"},"content":"    private Parser parser;","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"ChenXy128"},"content":"    private TaskList list;","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"ChenXy128"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"ChenXy128"},"content":"    @TempDir","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"ChenXy128"},"content":"    Path tempDir;","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"ChenXy128"},"content":"     * Sets up the environment for each test.","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"ChenXy128"},"content":"     * Initializes a new Parser, TaskList, and Storage with a temporary file.","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"ChenXy128"},"content":"    @BeforeEach","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"ChenXy128"},"content":"    void setUp() {","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"ChenXy128"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"ChenXy128"},"content":"        list \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"ChenXy128"},"content":"        storage \u003d new Storage(tempDir.resolve(\"dukeTest.txt\").toString(), parser);","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"ChenXy128"},"content":"     * Tests loading tasks from an empty file.","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"ChenXy128"},"content":"     * Verifies that the loaded TaskList is empty.","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"ChenXy128"},"content":"     * @throws IOException If an I/O error occurs creating the empty file.","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"ChenXy128"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"ChenXy128"},"content":"    void testLoadFile_emptyFile() throws IOException {","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"ChenXy128"},"content":"        Files.createFile(tempDir.resolve(\"dukeTest.txt\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"ChenXy128"},"content":"        TaskList loadedList \u003d storage.loadFile(new TaskList(new ArrayList\u003c\u003e()));","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"ChenXy128"},"content":"        assertTrue(loadedList.getList().isEmpty(), \"Loaded list should be empty for an empty file\");","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"ChenXy128"},"content":"     * Tests adding a single task to the file.","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"ChenXy128"},"content":"     * Verifies that the file contains the description of the added task.","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"ChenXy128"},"content":"     * @throws IOException If an I/O error occurs reading the file content.","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"ChenXy128"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"ChenXy128"},"content":"    void testAddTaskToFile() throws IOException {","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"ChenXy128"},"content":"        Task task \u003d new ToDo(\"running\");","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"ChenXy128"},"content":"        storage.addTaskToFile(task);","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"ChenXy128"},"content":"        String content \u003d Files.readString(tempDir.resolve(\"dukeTest.txt\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"ChenXy128"},"content":"        assertTrue(content.contains(\"running\"), \"File should contain the added task\u0027s description\");","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"ChenXy128"},"content":"     * Tests changing the file content with a new list of tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"ChenXy128"},"content":"     * Verifies that the file contains the descriptions of all tasks in the list.","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"ChenXy128"},"content":"     * @throws IOException If an I/O error occurs reading the file content.","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"ChenXy128"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"ChenXy128"},"content":"    void testChangeFileContent() throws IOException {","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"ChenXy128"},"content":"        Task task1 \u003d new ToDo(\"sleep\");","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"ChenXy128"},"content":"        Task task2 \u003d new ToDo(\"eat\");","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"ChenXy128"},"content":"        list.add(task1);","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"ChenXy128"},"content":"        list.add(task2);","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"ChenXy128"},"content":"        storage.changeFileContent(list);","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"ChenXy128"},"content":"        String content \u003d Files.readString(tempDir.resolve(\"dukeTest.txt\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":84,"author":{"gitId":"ChenXy128"},"content":"        assertTrue(content.contains(\"sleep\") \u0026\u0026 content.contains(\"eat\"), \"File should contain both tasks\u0027 descriptions\");","lastModifiedDate":"2024-02-02"},{"lineNumber":85,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":86,"author":{"gitId":"ChenXy128"},"content":"}","lastModifiedDate":"2024-02-02"},{"lineNumber":87,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"ChenXy128":87}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ChenXy128"},"content":"deadline ip /by friday","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"ChenXy128"},"content":"list","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"ChenXy128"},"content":"mark 1","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"ChenXy128"},"content":"todo running","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"ChenXy128"},"content":"event meeting /from 9pm /to 10pm","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"ChenXy128"},"content":"list","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"ChenXy128"},"content":"mark 2","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"ChenXy128"},"content":"mark 1","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"ChenXy128"},"content":"unmark 2","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"ChenXy128"},"content":"list","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"ChenXy128"},"content":"mark 3","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"ChenXy128"},"content":"list","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"ChenXy128"},"content":"bye","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"ChenXy128":13}}]
