[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rickkoh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"rickkoh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"rickkoh"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"rickkoh"},"content":" * Class representing a Deadline task with a due date.","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"rickkoh"},"content":" * Inherits from the Task class and adds a deadline date.","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"rickkoh"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"rickkoh"},"content":"class Deadline extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"rickkoh"},"content":"  private LocalDate by;","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"rickkoh"},"content":"  /**","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"rickkoh"},"content":"   * Constructor to create a new Deadline task.","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"rickkoh"},"content":"   * Initializes the task with a title and a deadline date.","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"rickkoh"},"content":"   *","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"rickkoh"},"content":"   * @param title The title of the deadline task.","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"rickkoh"},"content":"   * @param by    The deadline date for the task.","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"rickkoh"},"content":"   */","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"rickkoh"},"content":"  public Deadline(String title, LocalDate by) {","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"rickkoh"},"content":"    super(title);","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"rickkoh"},"content":"    this.by \u003d by;","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"rickkoh"},"content":"  }","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"rickkoh"},"content":"  /**","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"rickkoh"},"content":"   * Constructor to create a new Deadline task.","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"rickkoh"},"content":"   * Initializes the task with a title, a deadline date and a completion status.","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"rickkoh"},"content":"   *","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"rickkoh"},"content":"   * @param title  The title of the deadline task.","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"rickkoh"},"content":"   * @param by     The deadline date for the task.","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"rickkoh"},"content":"   * @param isDone The completion status of the task.","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"rickkoh"},"content":"   */","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"rickkoh"},"content":"  public Deadline(String title, LocalDate by, boolean isDone) {","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"rickkoh"},"content":"    super(title, isDone);","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"rickkoh"},"content":"    this.by \u003d by;","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"rickkoh"},"content":"  }","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"rickkoh"},"content":"  /**","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"rickkoh"},"content":"   * Provides a string representation of the Deadline task.","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"rickkoh"},"content":"   * Format: \"[D][\\u2713 or \\u2718] Title (by: deadline date)\" for completed or","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"rickkoh"},"content":"   * pending tasks respectively.","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"rickkoh"},"content":"   *","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"rickkoh"},"content":"   * @return The formatted string representation of the Deadline task.","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"rickkoh"},"content":"   */","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"rickkoh"},"content":"  @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"rickkoh"},"content":"  public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"rickkoh"},"content":"    return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"rickkoh"},"content":"  }","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"rickkoh"},"content":"  /**","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"rickkoh"},"content":"   * Provides a string representation of the Deadline task for saving to disk.","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"rickkoh"},"content":"   * Format: \"D | 0 or 1 | Title | deadline date\" for pending or completed tasks","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"rickkoh"},"content":"   * respectively.","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"rickkoh"},"content":"   *","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"rickkoh"},"content":"   * @return The formatted string representation of the Deadline task for saving","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"rickkoh"},"content":"   *         to disk.","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"rickkoh"},"content":"   */","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"rickkoh"},"content":"  @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"rickkoh"},"content":"  public String serialize() {","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"rickkoh"},"content":"    return \"D | \" + super.serialize() + \" | \" + by;","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"rickkoh"},"content":"  }","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"rickkoh"},"content":"  /**","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"rickkoh"},"content":"   * Deserializes a Deadline task from a string representation.","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"rickkoh"},"content":"   * Format: \"D | 0 or 1 | Title | deadline date\" for pending or completed tasks","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"rickkoh"},"content":"   * respectively.","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"rickkoh"},"content":"   *","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"rickkoh"},"content":"   * @param text The string representation of the Deadline task.","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"rickkoh"},"content":"   * @return The Deadline task represented by the string.","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"rickkoh"},"content":"   */","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"rickkoh"},"content":"  public static Deadline deserialize(String text) {","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"rickkoh"},"content":"    String[] parts \u003d text.split(\" \\\\| \");","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"rickkoh"},"content":"    return new Deadline(parts[2], LocalDate.parse(parts[3]), parts[1].equals(\"1\"));","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"rickkoh"},"content":"  }","lastModifiedDate":"2024-01-30"},{"lineNumber":73,"author":{"gitId":"rickkoh"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"rickkoh":73}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rickkoh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"rickkoh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"rickkoh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"rickkoh"},"content":"import java.util.List;","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"rickkoh"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"rickkoh"},"content":"        // Greet user","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"rickkoh"},"content":"        String logo \u003d \"\\n /$$      /$$  /$$$$$$  /$$$$$$$  /$$$$$$$$ /$$     /$$\\n\"","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"rickkoh"},"content":"                + \"| $$$    /$$$ /$$__  $$| $$__  $$|__  $$__/|  $$   /$$/\\n\"","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"rickkoh"},"content":"                + \"| $$$$  /$$$$| $$  \\\\ $$| $$  \\\\ $$   | $$    \\\\  $$ /$$/ \\n\"","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"rickkoh"},"content":"                + \"| $$ $$/$$ $$| $$  | $$| $$$$$$$/   | $$     \\\\  $$$$/  \\n\"","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"rickkoh"},"content":"                + \"| $$  $$$| $$| $$  | $$| $$__  $$   | $$      \\\\  $$/   \\n\"","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"rickkoh"},"content":"                + \"| $$\\\\  $ | $$| $$  | $$| $$  \\\\ $$   | $$       | $$    \\n\"","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"rickkoh"},"content":"                + \"| $$ \\\\/  | $$|  $$$$$$/| $$  | $$   | $$       | $$    \\n\"","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"rickkoh"},"content":"                + \"|__/     |__/ \\\\______/ |__/  |__/   |__/       |__/    \\n\";","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"rickkoh"},"content":"        System.out.println(\"\\nHello I\u0027m\\n\" + logo);","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"rickkoh"},"content":"        System.out.println(\"What can I do for you?\\n\");","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"rickkoh"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"rickkoh"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"rickkoh"},"content":"        // Main loop for command processing","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"rickkoh"},"content":"        while (true) {","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"rickkoh"},"content":"            // Read and process user input","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"rickkoh"},"content":"            String command \u003d scanner.nextLine();","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"rickkoh"},"content":"            String[] tokens \u003d command.split(\" \", 2);","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"rickkoh"},"content":"            tasks \u003d TaskLoader.load();","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"rickkoh"},"content":"            System.out.println(\"\\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\");","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"rickkoh"},"content":"            // Handle different commands","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"rickkoh"},"content":"            try {","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"rickkoh"},"content":"                if (command.equals(\"bye\")) {","lastModifiedDate":"2024-01-23"},{"lineNumber":35,"author":{"gitId":"rickkoh"},"content":"                    // Exit program","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"rickkoh"},"content":"                    System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-01-23"},{"lineNumber":37,"author":{"gitId":"rickkoh"},"content":"                    break;","lastModifiedDate":"2024-01-23"},{"lineNumber":38,"author":{"gitId":"rickkoh"},"content":"                } else if (command.equals(\"list\")) {","lastModifiedDate":"2024-01-23"},{"lineNumber":39,"author":{"gitId":"rickkoh"},"content":"                    // List all tasks","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"rickkoh"},"content":"                    for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"rickkoh"},"content":"                        System.out.println((i + 1) + \". \" + tasks.get(i).toString());","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"rickkoh"},"content":"                    }","lastModifiedDate":"2024-01-23"},{"lineNumber":43,"author":{"gitId":"rickkoh"},"content":"                } else if (tokens[0].equals(\"todo\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"rickkoh"},"content":"                    // Add a new todo task","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"rickkoh"},"content":"                    if (tokens.length \u003c 2) {","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"rickkoh"},"content":"                        throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"rickkoh"},"content":"                    }","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"rickkoh"},"content":"                    String title \u003d tokens[1];","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"rickkoh"},"content":"                    Todo newTodo \u003d new Todo(title);","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"rickkoh"},"content":"                    tasks.add(newTodo);","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"rickkoh"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-25"},{"lineNumber":52,"author":{"gitId":"rickkoh"},"content":"                    System.out.println(newTodo.toString());","lastModifiedDate":"2024-01-25"},{"lineNumber":53,"author":{"gitId":"rickkoh"},"content":"                    System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":54,"author":{"gitId":"rickkoh"},"content":"                } else if (tokens[0].equals(\"deadline\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":55,"author":{"gitId":"rickkoh"},"content":"                    // Add a new deadline task","lastModifiedDate":"2024-01-25"},{"lineNumber":56,"author":{"gitId":"rickkoh"},"content":"                    if (tokens.length \u003c 2) {","lastModifiedDate":"2024-01-25"},{"lineNumber":57,"author":{"gitId":"rickkoh"},"content":"                        throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":58,"author":{"gitId":"rickkoh"},"content":"                    }","lastModifiedDate":"2024-01-25"},{"lineNumber":59,"author":{"gitId":"rickkoh"},"content":"                    String[] deadlineTokens \u003d tokens[1].split(\" /by \");","lastModifiedDate":"2024-01-25"},{"lineNumber":60,"author":{"gitId":"rickkoh"},"content":"                    if (deadlineTokens.length \u003c 2) {","lastModifiedDate":"2024-01-25"},{"lineNumber":61,"author":{"gitId":"rickkoh"},"content":"                        throw new DukeException(\"☹ OOPS!!! The deadline details cannot be empty.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":62,"author":{"gitId":"rickkoh"},"content":"                    }","lastModifiedDate":"2024-01-25"},{"lineNumber":63,"author":{"gitId":"rickkoh"},"content":"                    LocalDate by;","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"rickkoh"},"content":"                    try {","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"rickkoh"},"content":"                        by \u003d LocalDate.parse(deadlineTokens[1]);","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"rickkoh"},"content":"                    } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"rickkoh"},"content":"                        throw new DukeException(","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"rickkoh"},"content":"                                \"☹ OOPS!!! The event date must be a valid date in the format YYYY-MM-DD.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"rickkoh"},"content":"                    }","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"rickkoh"},"content":"                    String title \u003d deadlineTokens[0];","lastModifiedDate":"2024-01-25"},{"lineNumber":71,"author":{"gitId":"rickkoh"},"content":"                    Deadline newDeadline \u003d new Deadline(title, by);","lastModifiedDate":"2024-01-25"},{"lineNumber":72,"author":{"gitId":"rickkoh"},"content":"                    tasks.add(newDeadline);","lastModifiedDate":"2024-01-25"},{"lineNumber":73,"author":{"gitId":"rickkoh"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-25"},{"lineNumber":74,"author":{"gitId":"rickkoh"},"content":"                    System.out.println(newDeadline.toString());","lastModifiedDate":"2024-01-25"},{"lineNumber":75,"author":{"gitId":"rickkoh"},"content":"                    System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":76,"author":{"gitId":"rickkoh"},"content":"                } else if (tokens[0].equals(\"event\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":77,"author":{"gitId":"rickkoh"},"content":"                    // Add a new event task","lastModifiedDate":"2024-01-25"},{"lineNumber":78,"author":{"gitId":"rickkoh"},"content":"                    if (tokens.length \u003c 2) {","lastModifiedDate":"2024-01-25"},{"lineNumber":79,"author":{"gitId":"rickkoh"},"content":"                        throw new DukeException(\"☹ OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":80,"author":{"gitId":"rickkoh"},"content":"                    }","lastModifiedDate":"2024-01-25"},{"lineNumber":81,"author":{"gitId":"rickkoh"},"content":"                    String[] eventTokens \u003d tokens[1].split(\" /at \");","lastModifiedDate":"2024-01-25"},{"lineNumber":82,"author":{"gitId":"rickkoh"},"content":"                    if (eventTokens.length \u003c 2) {","lastModifiedDate":"2024-01-25"},{"lineNumber":83,"author":{"gitId":"rickkoh"},"content":"                        throw new DukeException(\"☹ OOPS!!! The event details cannot be empty.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":84,"author":{"gitId":"rickkoh"},"content":"                    }","lastModifiedDate":"2024-01-25"},{"lineNumber":85,"author":{"gitId":"rickkoh"},"content":"                    LocalDate at;","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"rickkoh"},"content":"                    try {","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"rickkoh"},"content":"                        at \u003d LocalDate.parse(eventTokens[1]);","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"rickkoh"},"content":"                    } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"rickkoh"},"content":"                        throw new DukeException(","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"rickkoh"},"content":"                                \"☹ OOPS!!! The event date must be a valid date in the format YYYY-MM-DD.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":91,"author":{"gitId":"rickkoh"},"content":"                    }","lastModifiedDate":"2024-01-30"},{"lineNumber":92,"author":{"gitId":"rickkoh"},"content":"                    String title \u003d eventTokens[0];","lastModifiedDate":"2024-01-25"},{"lineNumber":93,"author":{"gitId":"rickkoh"},"content":"                    Event newEvent \u003d new Event(title, at);","lastModifiedDate":"2024-01-25"},{"lineNumber":94,"author":{"gitId":"rickkoh"},"content":"                    tasks.add(newEvent);","lastModifiedDate":"2024-01-25"},{"lineNumber":95,"author":{"gitId":"rickkoh"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-25"},{"lineNumber":96,"author":{"gitId":"rickkoh"},"content":"                    System.out.println(newEvent.toString());","lastModifiedDate":"2024-01-25"},{"lineNumber":97,"author":{"gitId":"rickkoh"},"content":"                    System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":98,"author":{"gitId":"rickkoh"},"content":"                } else if (tokens[0].equals(\"done\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":99,"author":{"gitId":"rickkoh"},"content":"                    // Mark a task as done","lastModifiedDate":"2024-01-25"},{"lineNumber":100,"author":{"gitId":"rickkoh"},"content":"                    if (tokens.length \u003c 2) {","lastModifiedDate":"2024-01-25"},{"lineNumber":101,"author":{"gitId":"rickkoh"},"content":"                        throw new DukeException(\"☹ OOPS!!! The task number cannot be empty.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":102,"author":{"gitId":"rickkoh"},"content":"                    }","lastModifiedDate":"2024-01-25"},{"lineNumber":103,"author":{"gitId":"rickkoh"},"content":"                    if (!tokens[1].matches(\"\\\\d+\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":104,"author":{"gitId":"rickkoh"},"content":"                        throw new DukeException(\"☹ OOPS!!! The task number must be an integer.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":105,"author":{"gitId":"rickkoh"},"content":"                    }","lastModifiedDate":"2024-01-25"},{"lineNumber":106,"author":{"gitId":"rickkoh"},"content":"                    int i \u003d Integer.parseInt(tokens[1]) - 1;","lastModifiedDate":"2024-01-25"},{"lineNumber":107,"author":{"gitId":"rickkoh"},"content":"                    if (i \u003c 0 || i \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":108,"author":{"gitId":"rickkoh"},"content":"                        throw new DukeException(\"☹ OOPS!!! The task number is invalid.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":109,"author":{"gitId":"rickkoh"},"content":"                    }","lastModifiedDate":"2024-01-25"},{"lineNumber":110,"author":{"gitId":"rickkoh"},"content":"                    tasks.get(i).markDone();","lastModifiedDate":"2024-01-25"},{"lineNumber":111,"author":{"gitId":"rickkoh"},"content":"                    System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-01-25"},{"lineNumber":112,"author":{"gitId":"rickkoh"},"content":"                    System.out.println(tasks.get(i).toString());","lastModifiedDate":"2024-01-25"},{"lineNumber":113,"author":{"gitId":"rickkoh"},"content":"                } else if (tokens[0].equals(\"delete\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":114,"author":{"gitId":"rickkoh"},"content":"                    // Mark a task as done","lastModifiedDate":"2024-01-25"},{"lineNumber":115,"author":{"gitId":"rickkoh"},"content":"                    if (tokens.length \u003c 2) {","lastModifiedDate":"2024-01-25"},{"lineNumber":116,"author":{"gitId":"rickkoh"},"content":"                        throw new DukeException(\"☹ OOPS!!! The task number cannot be empty.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":117,"author":{"gitId":"rickkoh"},"content":"                    }","lastModifiedDate":"2024-01-25"},{"lineNumber":118,"author":{"gitId":"rickkoh"},"content":"                    if (!tokens[1].matches(\"\\\\d+\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":119,"author":{"gitId":"rickkoh"},"content":"                        throw new DukeException(\"☹ OOPS!!! The task number must be an integer.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":120,"author":{"gitId":"rickkoh"},"content":"                    }","lastModifiedDate":"2024-01-25"},{"lineNumber":121,"author":{"gitId":"rickkoh"},"content":"                    int i \u003d Integer.parseInt(tokens[1]) - 1;","lastModifiedDate":"2024-01-25"},{"lineNumber":122,"author":{"gitId":"rickkoh"},"content":"                    if (i \u003c 0 || i \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":123,"author":{"gitId":"rickkoh"},"content":"                        throw new DukeException(\"☹ OOPS!!! The task number is invalid.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":124,"author":{"gitId":"rickkoh"},"content":"                    }","lastModifiedDate":"2024-01-25"},{"lineNumber":125,"author":{"gitId":"rickkoh"},"content":"                    Task removedTask \u003d tasks.remove(i);","lastModifiedDate":"2024-01-30"},{"lineNumber":126,"author":{"gitId":"rickkoh"},"content":"                    System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-01-25"},{"lineNumber":127,"author":{"gitId":"rickkoh"},"content":"                    System.out.println(removedTask);","lastModifiedDate":"2024-01-30"},{"lineNumber":128,"author":{"gitId":"rickkoh"},"content":"                    System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":129,"author":{"gitId":"rickkoh"},"content":"                } else {","lastModifiedDate":"2024-01-23"},{"lineNumber":130,"author":{"gitId":"rickkoh"},"content":"                    throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2024-01-25"},{"lineNumber":131,"author":{"gitId":"rickkoh"},"content":"                }","lastModifiedDate":"2024-01-23"},{"lineNumber":132,"author":{"gitId":"rickkoh"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":133,"author":{"gitId":"rickkoh"},"content":"                System.err.println(e);","lastModifiedDate":"2024-01-25"},{"lineNumber":134,"author":{"gitId":"rickkoh"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":135,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":136,"author":{"gitId":"rickkoh"},"content":"            System.out.println(\"\\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\");","lastModifiedDate":"2024-01-25"},{"lineNumber":137,"author":{"gitId":"rickkoh"},"content":"            TaskLoader.save(tasks);","lastModifiedDate":"2024-01-30"},{"lineNumber":138,"author":{"gitId":"rickkoh"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":139,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":140,"author":{"gitId":"rickkoh"},"content":"        scanner.close();","lastModifiedDate":"2024-01-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"rickkoh":138,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rickkoh"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"rickkoh"},"content":"  public DukeException(String message) {","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"rickkoh"},"content":"    super(message);","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"rickkoh"},"content":"  }","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"rickkoh"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"rickkoh":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rickkoh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"rickkoh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"rickkoh"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"rickkoh"},"content":" * Class representing an Event task with a location or time.","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"rickkoh"},"content":" * Inherits from the Task class and adds event details.","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"rickkoh"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"rickkoh"},"content":"class Event extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"rickkoh"},"content":"  private LocalDate at;","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"rickkoh"},"content":"  /**","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"rickkoh"},"content":"   * Constructor to create a new Event task.","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"rickkoh"},"content":"   * Initializes the task with a title and event details.","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"rickkoh"},"content":"   *","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"rickkoh"},"content":"   * @param title The title of the event task.","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"rickkoh"},"content":"   * @param at    The time of the event.","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"rickkoh"},"content":"   */","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"rickkoh"},"content":"  public Event(String title, LocalDate at) {","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"rickkoh"},"content":"    super(title);","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"rickkoh"},"content":"    this.at \u003d at;","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"rickkoh"},"content":"  }","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"rickkoh"},"content":"  /**","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"rickkoh"},"content":"   * Constructor to create a new Event task.","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"rickkoh"},"content":"   * Initializes the task with a title, event details and a completion status.","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"rickkoh"},"content":"   *","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"rickkoh"},"content":"   * @param title  The title of the event task.","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"rickkoh"},"content":"   * @param at     The location or time of the event.","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"rickkoh"},"content":"   * @param isDone The completion status of the task.","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"rickkoh"},"content":"   */","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"rickkoh"},"content":"  public Event(String title, LocalDate at, boolean isDone) {","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"rickkoh"},"content":"    super(title, isDone);","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"rickkoh"},"content":"    this.at \u003d at;","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"rickkoh"},"content":"  }","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"rickkoh"},"content":"  /**","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"rickkoh"},"content":"   * Provides a string representation of the Event task.","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"rickkoh"},"content":"   * Format: \"[E][\\u2713 or \\u2718] Title (at: event details)\" for completed or","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"rickkoh"},"content":"   * pending tasks respectively.","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"rickkoh"},"content":"   *","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"rickkoh"},"content":"   * @return The formatted string representation of the Event task.","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"rickkoh"},"content":"   */","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"rickkoh"},"content":"  @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"rickkoh"},"content":"  public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"rickkoh"},"content":"    return \"[E]\" + super.toString() + \" (at: \" + at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"rickkoh"},"content":"  }","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"rickkoh"},"content":"  /**","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"rickkoh"},"content":"   * Provides a string representation of the Event task for saving to disk.","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"rickkoh"},"content":"   * Format: \"E | 0 or 1 | Title | event details\" for pending or completed tasks","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"rickkoh"},"content":"   * respectively.","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"rickkoh"},"content":"   *","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"rickkoh"},"content":"   * @return The formatted string representation of the Event task for saving","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"rickkoh"},"content":"   *         to disk.","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"rickkoh"},"content":"   */","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"rickkoh"},"content":"  @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"rickkoh"},"content":"  public String serialize() {","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"rickkoh"},"content":"    return \"E | \" + super.serialize() + \" | \" + at;","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"rickkoh"},"content":"  }","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"rickkoh"},"content":"  /**","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"rickkoh"},"content":"   * Deserializes an Event task from a string representation.","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"rickkoh"},"content":"   * Format: \"E | 0 or 1 | Title | event details\" for pending or completed tasks","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"rickkoh"},"content":"   * respectively.","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"rickkoh"},"content":"   *","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"rickkoh"},"content":"   * @return The formatted string representation of the Event task for saving","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"rickkoh"},"content":"   *         to disk.","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"rickkoh"},"content":"   */","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"rickkoh"},"content":"  public static Event deserialize(String text) {","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"rickkoh"},"content":"    String[] parts \u003d text.split(\" \\\\| \");","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"rickkoh"},"content":"    return new Event(parts[2], LocalDate.parse(parts[3]), parts[1].equals(\"1\"));","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"rickkoh"},"content":"  }","lastModifiedDate":"2024-01-30"},{"lineNumber":73,"author":{"gitId":"rickkoh"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"rickkoh":73}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rickkoh"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"rickkoh"},"content":" * Class representing a task with an identifier, title, and completion status.","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"rickkoh"},"content":" * Each task has a unique ID, a title, and a boolean flag to mark it as done or","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"rickkoh"},"content":" * not.","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"rickkoh"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"rickkoh"},"content":"public abstract class Task {","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"rickkoh"},"content":"  private String title;","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"rickkoh"},"content":"  private boolean isDone;","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"rickkoh"},"content":"  /**","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"rickkoh"},"content":"   * Constructor to create a new task.","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"rickkoh"},"content":"   * Initializes the task with a unique ID and the specified title.","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"rickkoh"},"content":"   * The task is initially marked as not done.","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"rickkoh"},"content":"   *","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"rickkoh"},"content":"   * @param title The title of the task.","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"rickkoh"},"content":"   */","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"rickkoh"},"content":"  public Task(String title) {","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"rickkoh"},"content":"    this.title \u003d title;","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"rickkoh"},"content":"    this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"rickkoh"},"content":"  }","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"rickkoh"},"content":"  /**","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"rickkoh"},"content":"   * Constructor to create a new task.","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"rickkoh"},"content":"   * Initializes the task with a unique ID, the specified title and completion","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"rickkoh"},"content":"   * status.","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"rickkoh"},"content":"   *","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"rickkoh"},"content":"   * @param title  The title of the task.","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"rickkoh"},"content":"   * @param isDone The completion status of the task.","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"rickkoh"},"content":"   */","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"rickkoh"},"content":"  public Task(String title, boolean isDone) {","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"rickkoh"},"content":"    this.title \u003d title;","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"rickkoh"},"content":"    this.isDone \u003d isDone;","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"rickkoh"},"content":"  }","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"rickkoh"},"content":"  /**","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"rickkoh"},"content":"   * Marks the task as done by setting its completion status to true.","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"rickkoh"},"content":"   */","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"rickkoh"},"content":"  public void markDone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"rickkoh"},"content":"    this.isDone \u003d true;","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"rickkoh"},"content":"  }","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"rickkoh"},"content":"  /**","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"rickkoh"},"content":"   * Provides a string representation of the task.","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"rickkoh"},"content":"   * Format: \"[\\u2713] Title\" for completed tasks, \"[\\u2718] Title\" for pending","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"rickkoh"},"content":"   * tasks.","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"rickkoh"},"content":"   *","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"rickkoh"},"content":"   * @return The formatted string representation of the task.","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"rickkoh"},"content":"   */","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"rickkoh"},"content":"  @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"rickkoh"},"content":"  public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"rickkoh"},"content":"    return (isDone ? \"[\\u2713] \" : \"[\\u2718] \") + title;","lastModifiedDate":"2024-01-25"},{"lineNumber":52,"author":{"gitId":"rickkoh"},"content":"  }","lastModifiedDate":"2024-01-25"},{"lineNumber":53,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"rickkoh"},"content":"  public String serialize() {","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"rickkoh"},"content":"    return (this.isDone ? \"1\" : \"0\") + \" | \" + title;","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"rickkoh"},"content":"  }","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"rickkoh"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"rickkoh":57}},{"path":"src/main/java/TaskLoader.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rickkoh"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"rickkoh"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"rickkoh"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"rickkoh"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"rickkoh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"rickkoh"},"content":"import java.util.List;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"rickkoh"},"content":"public class TaskLoader {","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"rickkoh"},"content":"  public static List\u003cTask\u003e load() {","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"rickkoh"},"content":"    try {","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"rickkoh"},"content":"      FileReader reader \u003d new FileReader(\"tasks.txt\");","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"rickkoh"},"content":"      BufferedReader bufferedReader \u003d new BufferedReader(reader);","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"rickkoh"},"content":"      String line;","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"rickkoh"},"content":"      List\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"rickkoh"},"content":"      while ((line \u003d bufferedReader.readLine()) !\u003d null) {","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"rickkoh"},"content":"        char taskType \u003d line.charAt(0);","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"rickkoh"},"content":"        switch (taskType) {","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"rickkoh"},"content":"          case \u0027T\u0027:","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"rickkoh"},"content":"            tasks.add(Todo.deserialize(line));","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"rickkoh"},"content":"            break;","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"rickkoh"},"content":"          case \u0027D\u0027:","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"rickkoh"},"content":"            tasks.add(Deadline.deserialize(line));","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"rickkoh"},"content":"            break;","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"rickkoh"},"content":"          case \u0027E\u0027:","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"rickkoh"},"content":"            tasks.add(Event.deserialize(line));","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"rickkoh"},"content":"            break;","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"rickkoh"},"content":"          default:","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"rickkoh"},"content":"            break;","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"rickkoh"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"rickkoh"},"content":"      }","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"rickkoh"},"content":"      bufferedReader.close();","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"rickkoh"},"content":"      return tasks;","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"rickkoh"},"content":"    } catch (Exception e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"rickkoh"},"content":"      return new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"rickkoh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"rickkoh"},"content":"  }","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"rickkoh"},"content":"  public static void save(List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"rickkoh"},"content":"    try {","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"rickkoh"},"content":"      FileWriter writer \u003d new FileWriter(\"tasks.txt\");","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"rickkoh"},"content":"      for (Task task : tasks) {","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"rickkoh"},"content":"        writer.write(task.serialize() + \"\\n\");","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"rickkoh"},"content":"      }","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"rickkoh"},"content":"      writer.close();","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"rickkoh"},"content":"    } catch (IOException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"rickkoh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"rickkoh"},"content":"  }","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"rickkoh"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"rickkoh":50}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rickkoh"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"rickkoh"},"content":" * Class representing a Todo task.","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"rickkoh"},"content":" * Inherits from the Task class and adds specific formatting to the toString","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"rickkoh"},"content":" * method.","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"rickkoh"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"rickkoh"},"content":"class Todo extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"rickkoh"},"content":"  /**","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"rickkoh"},"content":"   * Constructor to create a new Todo task.","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"rickkoh"},"content":"   * Calls the constructor of the parent Task class.","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"rickkoh"},"content":"   *","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"rickkoh"},"content":"   * @param title The title of the todo task.","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"rickkoh"},"content":"   */","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"rickkoh"},"content":"  public Todo(String title) {","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"rickkoh"},"content":"    super(title);","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"rickkoh"},"content":"  }","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"rickkoh"},"content":"  /**","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"rickkoh"},"content":"   * Constructor to create a new Todo task.","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"rickkoh"},"content":"   * Calls the constructor of the parent Task class.","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"rickkoh"},"content":"   *","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"rickkoh"},"content":"   * @param title The title of the todo task.","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"rickkoh"},"content":"   */","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"rickkoh"},"content":"  public Todo(String title, boolean isDone) {","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"rickkoh"},"content":"    super(title, isDone);","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"rickkoh"},"content":"  }","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"rickkoh"},"content":"  /**","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"rickkoh"},"content":"   * Provides a string representation of the Todo task.","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"rickkoh"},"content":"   * Format: \"[T][\\u2713 or \\u2718] Title\" for completed or pending tasks","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"rickkoh"},"content":"   * respectively.","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"rickkoh"},"content":"   *","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"rickkoh"},"content":"   * @return The formatted string representation of the Todo task.","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"rickkoh"},"content":"   */","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"rickkoh"},"content":"  @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"rickkoh"},"content":"  public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"rickkoh"},"content":"    return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"rickkoh"},"content":"  }","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"rickkoh"},"content":"  /**","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"rickkoh"},"content":"   * Provides a string representation of the Todo task for saving to disk.","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"rickkoh"},"content":"   * Format: \"T | 0 or 1 | Title\" for pending or completed tasks respectively.","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"rickkoh"},"content":"   *","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"rickkoh"},"content":"   * @return The formatted string representation of the Todo task for saving to","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"rickkoh"},"content":"   *         disk.","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"rickkoh"},"content":"   */","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"rickkoh"},"content":"  @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"rickkoh"},"content":"  public String serialize() {","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"rickkoh"},"content":"    return \"T | \" + super.serialize();","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"rickkoh"},"content":"  }","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"rickkoh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"rickkoh"},"content":"  /**","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"rickkoh"},"content":"   * Deserializes a Todo task from a string representation.","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"rickkoh"},"content":"   * Format: \"T | 0 or 1 | Title\" for pending or completed tasks respectively.","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"rickkoh"},"content":"   *","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"rickkoh"},"content":"   * @param text The string representation of the Todo task.","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"rickkoh"},"content":"   * @return The Todo task represented by the string.","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"rickkoh"},"content":"   */","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"rickkoh"},"content":"  public static Todo deserialize(String text) {","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"rickkoh"},"content":"    String[] parts \u003d text.split(\" \\\\| \");","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"rickkoh"},"content":"    return new Todo(parts[2], parts[1].equals(\"1\"));","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"rickkoh"},"content":"  }","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"rickkoh"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"rickkoh":62}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"rickkoh"},"content":"todo borrow book","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"rickkoh"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"rickkoh"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"rickkoh"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"rickkoh"},"content":"bye","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"rickkoh":5}}]
