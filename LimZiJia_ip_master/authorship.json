[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"# duke.Duke project template","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"LimZiJia"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"LimZiJia":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"LimZiJia"},"content":"    testImplementation \"org.mockito:mockito-inline:3.+\"","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"LimZiJia"},"content":"    testImplementation \"org.mockito:mockito-junit-jupiter:3.+\"","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"LimZiJia"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"LimZiJia"},"content":"    archiveVersion \u003d \"v0.1\"","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"LimZiJia"},"content":"sourceSets {","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"LimZiJia"},"content":"    test {","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"LimZiJia"},"content":"        java {","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"LimZiJia"},"content":"            srcDirs \u003d [\u0027src/test\u0027]","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"LimZiJia"},"content":"    main {","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"LimZiJia"},"content":"        java {","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"LimZiJia"},"content":"            srcDirs \u003d [\u0027src/main\u0027]","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"LimZiJia"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"LimZiJia":18,"-":41}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":" * Class that runs the chatbot.","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":" *","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":" * @author Lim Zi Jia","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"    /** The storage object that is used in Duke. */","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"LimZiJia"},"content":"    /** A list that contains all your tasks. */","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"LimZiJia"},"content":"    private TaskList tasks \u003d new TaskList();","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"LimZiJia"},"content":"    /** The class that prints to screen and chat. */","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"LimZiJia"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"LimZiJia"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"LimZiJia"},"content":"     * Creates a Duke object that is capable of running a chatbot.","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"LimZiJia"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"LimZiJia"},"content":"     * @param filePath The path of the saved data file.","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"LimZiJia"},"content":"     * @param fileName The name of the saved data file.","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"LimZiJia"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"LimZiJia"},"content":"    public Duke(String filePath, String fileName) {","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"LimZiJia"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"LimZiJia"},"content":"        storage \u003d new Storage(filePath, fileName);","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"LimZiJia"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"LimZiJia"},"content":"     * Runs the main flow of the program. Greet -\u003e Load saved file -\u003e Chat -\u003e Exit/Bye.","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"LimZiJia"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"LimZiJia"},"content":"    public void run() {","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"LimZiJia"},"content":"        ui.greet();","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"LimZiJia"},"content":"        tasks \u003d storage.load();","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"LimZiJia"},"content":"        ui.chat(tasks, storage);","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"LimZiJia"},"content":"        ui.bye();","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":42,"author":{"gitId":"LimZiJia"},"content":"        new Duke(\"/data/\", \"duke.txt\").run();","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"LimZiJia":40,"-":4}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"import exceptions.DukeEmptyArgumentException;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":"import exceptions.DukeErroneousArgumentException;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"import exceptions.DukeInvalidInputException;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"import exceptions.DukeWrongDateOrderException;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"import tasks.Deadline;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"import tasks.Event;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":"import tasks.Todo;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"LimZiJia"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"LimZiJia"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"LimZiJia"},"content":" * This class helps the chatbot to parse inputs in order to execute the reactions that the user wants.","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"LimZiJia"},"content":" *","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"LimZiJia"},"content":" * @author Lim Zi Jia","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"LimZiJia"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"LimZiJia"},"content":"public class Parser {","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"LimZiJia"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"LimZiJia"},"content":"     * The main parsing logic. Takes the input and calls the relevant functions for the desired outputs.","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"LimZiJia"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"LimZiJia"},"content":"     * @param in The string input that the user has passed into the program.","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"LimZiJia"},"content":"     * @param tasks A list of the current tasks that maybe needed to modify.","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"LimZiJia"},"content":"     * @param storage The place where the task list might be needed to be stored.","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"LimZiJia"},"content":"     * @return A TaskList that has been altered if there is a need to. The value is null if the command is \u0027bye\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"LimZiJia"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"LimZiJia"},"content":"    public TaskList parse(String in, TaskList tasks, Storage storage) {","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"LimZiJia"},"content":"        if (in.equals(\"bye\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"LimZiJia"},"content":"            return null;","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"LimZiJia"},"content":"        else if (in.equals(\"list\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"LimZiJia"},"content":"            tasks.printList();","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"LimZiJia"},"content":"        else if (in.equals(\"save\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"LimZiJia"},"content":"            try {","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"LimZiJia"},"content":"                storage.save(tasks);","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"LimZiJia"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"LimZiJia"},"content":"                System.out.println(\"I/O Exception\");","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"LimZiJia"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"LimZiJia"},"content":"        else if (in.startsWith(\"mark \")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"LimZiJia"},"content":"            tasks.mark(in);","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"LimZiJia"},"content":"        else if (in.startsWith(\"unmark \")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"LimZiJia"},"content":"            tasks.unmark(in);","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"LimZiJia"},"content":"        else if (in.startsWith(\"delete \")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"LimZiJia"},"content":"            tasks.delete(in);","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"LimZiJia"},"content":"        else if (in.startsWith(\"find \")) {","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"LimZiJia"},"content":"            tasks.find(in);","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"LimZiJia"},"content":"        else {","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"LimZiJia"},"content":"            try {","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"LimZiJia"},"content":"                tasks \u003d addTask(in, tasks);","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"LimZiJia"},"content":"            } catch (DukeInvalidInputException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"LimZiJia"},"content":"                System.out.println(\"This is not a valid input!!!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"LimZiJia"},"content":"            } catch (DukeEmptyArgumentException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"LimZiJia"},"content":"                System.out.println(\"There is an argument that is empty!!!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"LimZiJia"},"content":"            } catch (DukeErroneousArgumentException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"LimZiJia"},"content":"                System.out.println(\"There is an argument in the wrong format!!!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"LimZiJia"},"content":"            } catch (DateTimeException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"LimZiJia"},"content":"                System.out.println(\"The format of your date is wrong! Make sure it is of the form \u0027yyyy-MM-dd\u0027.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"LimZiJia"},"content":"                System.out.println(\"More specifically: \\n\" + e.getMessage());","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"LimZiJia"},"content":"            } catch (DukeWrongDateOrderException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"LimZiJia"},"content":"                System.out.println(\"The end date should be after the start date\");","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"LimZiJia"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"LimZiJia"},"content":"        return tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"LimZiJia"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"LimZiJia"},"content":"     * A helper function that is dedicated to adding tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"LimZiJia"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":84,"author":{"gitId":"LimZiJia"},"content":"     * @param s String of input to be parsed.","lastModifiedDate":"2024-02-02"},{"lineNumber":85,"author":{"gitId":"LimZiJia"},"content":"     * @param tasks The original task list to be added onto.","lastModifiedDate":"2024-02-02"},{"lineNumber":86,"author":{"gitId":"LimZiJia"},"content":"     * @return The edited task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":87,"author":{"gitId":"LimZiJia"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":88,"author":{"gitId":"LimZiJia"},"content":"    public TaskList addTask(String s, TaskList tasks) {","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"LimZiJia"},"content":"        // Todo_","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"LimZiJia"},"content":"        if (s.startsWith(\"todo \")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"LimZiJia"},"content":"            // Get name and if it is empty, throw exception","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"LimZiJia"},"content":"            String n \u003d s.substring(5);","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"LimZiJia"},"content":"            if (n.isEmpty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"LimZiJia"},"content":"                throw new DukeEmptyArgumentException();","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"LimZiJia"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"LimZiJia"},"content":"            tasks.add(new Todo(n));","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":99,"author":{"gitId":"LimZiJia"},"content":"            // tasks.Deadline","lastModifiedDate":"2024-02-01"},{"lineNumber":100,"author":{"gitId":"LimZiJia"},"content":"        } else if (s.startsWith(\"deadline \")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":101,"author":{"gitId":"LimZiJia"},"content":"            // Try to get the index of the first \u0027/\u0027, if it does not exist, the statement is invalid.","lastModifiedDate":"2024-02-01"},{"lineNumber":102,"author":{"gitId":"LimZiJia"},"content":"            // Also, it should adhere to \"/by\"","lastModifiedDate":"2024-02-01"},{"lineNumber":103,"author":{"gitId":"LimZiJia"},"content":"            int first \u003d s.indexOf(\u0027/\u0027);","lastModifiedDate":"2024-02-01"},{"lineNumber":104,"author":{"gitId":"LimZiJia"},"content":"            if (first \u003d\u003d -1) {","lastModifiedDate":"2024-02-02"},{"lineNumber":105,"author":{"gitId":"LimZiJia"},"content":"                throw new DukeErroneousArgumentException();","lastModifiedDate":"2024-02-01"},{"lineNumber":106,"author":{"gitId":"LimZiJia"},"content":"            } else if (!s.startsWith(\"/by \", first)) {","lastModifiedDate":"2024-02-01"},{"lineNumber":107,"author":{"gitId":"LimZiJia"},"content":"                throw new DukeErroneousArgumentException();","lastModifiedDate":"2024-02-01"},{"lineNumber":108,"author":{"gitId":"LimZiJia"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":109,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":110,"author":{"gitId":"LimZiJia"},"content":"            // Get name and time. If empty, throw exception","lastModifiedDate":"2024-02-01"},{"lineNumber":111,"author":{"gitId":"LimZiJia"},"content":"            String n \u003d s.substring(9, Math.max(first - 1, 9));","lastModifiedDate":"2024-02-02"},{"lineNumber":112,"author":{"gitId":"LimZiJia"},"content":"            String t \u003d s.substring(first + 4);","lastModifiedDate":"2024-02-02"},{"lineNumber":113,"author":{"gitId":"LimZiJia"},"content":"            if (n.isEmpty() || t.isEmpty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":114,"author":{"gitId":"LimZiJia"},"content":"                throw new DukeEmptyArgumentException();","lastModifiedDate":"2024-02-01"},{"lineNumber":115,"author":{"gitId":"LimZiJia"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":116,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":117,"author":{"gitId":"LimZiJia"},"content":"            tasks.add(new Deadline(n, t));","lastModifiedDate":"2024-02-01"},{"lineNumber":118,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":119,"author":{"gitId":"LimZiJia"},"content":"            // tasks.Event","lastModifiedDate":"2024-02-01"},{"lineNumber":120,"author":{"gitId":"LimZiJia"},"content":"        } else if (s.startsWith(\"event \")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":121,"author":{"gitId":"LimZiJia"},"content":"            // Try to get the index of the first  and second \u0027/\u0027, if it does not exist, the statement is invalid.","lastModifiedDate":"2024-02-01"},{"lineNumber":122,"author":{"gitId":"LimZiJia"},"content":"            // Also, the format should adhere to \"/from\" and \"/to\"","lastModifiedDate":"2024-02-01"},{"lineNumber":123,"author":{"gitId":"LimZiJia"},"content":"            int first \u003d s.indexOf(\u0027/\u0027);","lastModifiedDate":"2024-02-01"},{"lineNumber":124,"author":{"gitId":"LimZiJia"},"content":"            int second \u003d s.indexOf(\u0027/\u0027, first + 1);","lastModifiedDate":"2024-02-01"},{"lineNumber":125,"author":{"gitId":"LimZiJia"},"content":"            if (first \u003d\u003d -1) {","lastModifiedDate":"2024-02-02"},{"lineNumber":126,"author":{"gitId":"LimZiJia"},"content":"                throw new DukeErroneousArgumentException();","lastModifiedDate":"2024-02-01"},{"lineNumber":127,"author":{"gitId":"LimZiJia"},"content":"            } else if (!s.startsWith(\"/from \", first)","lastModifiedDate":"2024-02-01"},{"lineNumber":128,"author":{"gitId":"LimZiJia"},"content":"                    || !s.startsWith(\"/to \", second)) {","lastModifiedDate":"2024-02-01"},{"lineNumber":129,"author":{"gitId":"LimZiJia"},"content":"                throw new DukeErroneousArgumentException();","lastModifiedDate":"2024-02-01"},{"lineNumber":130,"author":{"gitId":"LimZiJia"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":131,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":132,"author":{"gitId":"LimZiJia"},"content":"            String n \u003d s.substring(6, Math.max(first - 1, 6));","lastModifiedDate":"2024-02-02"},{"lineNumber":133,"author":{"gitId":"LimZiJia"},"content":"            String f \u003d s.substring(first + 6,  Math.max(second - 1, first + 6));","lastModifiedDate":"2024-02-02"},{"lineNumber":134,"author":{"gitId":"LimZiJia"},"content":"            String t \u003d s.substring(second + 4);","lastModifiedDate":"2024-02-02"},{"lineNumber":135,"author":{"gitId":"LimZiJia"},"content":"            if (n.isEmpty() || f.isEmpty() || t.isEmpty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":136,"author":{"gitId":"LimZiJia"},"content":"                throw new DukeEmptyArgumentException();","lastModifiedDate":"2024-02-01"},{"lineNumber":137,"author":{"gitId":"LimZiJia"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":138,"author":{"gitId":"LimZiJia"},"content":"            Event e \u003d new Event(n, f, t);","lastModifiedDate":"2024-02-01"},{"lineNumber":139,"author":{"gitId":"LimZiJia"},"content":"            if (!e.isCorrectOrder()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":140,"author":{"gitId":"LimZiJia"},"content":"                throw new DukeWrongDateOrderException();","lastModifiedDate":"2024-02-01"},{"lineNumber":141,"author":{"gitId":"LimZiJia"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":142,"author":{"gitId":"LimZiJia"},"content":"            tasks.add(e);","lastModifiedDate":"2024-02-01"},{"lineNumber":143,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":144,"author":{"gitId":"LimZiJia"},"content":"        } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":145,"author":{"gitId":"LimZiJia"},"content":"            throw new DukeInvalidInputException();","lastModifiedDate":"2024-02-01"},{"lineNumber":146,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":147,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":148,"author":{"gitId":"LimZiJia"},"content":"        System.out.print(\"Got it added this task:\\n  \" + tasks.get(tasks.size() - 1));","lastModifiedDate":"2024-02-01"},{"lineNumber":149,"author":{"gitId":"LimZiJia"},"content":"        System.out.printf(\"Now you have %d tasks in the list.\", tasks.size());","lastModifiedDate":"2024-02-01"},{"lineNumber":150,"author":{"gitId":"LimZiJia"},"content":"        return tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":151,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":152,"author":{"gitId":"LimZiJia"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"LimZiJia":152}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"import tasks.*;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":"import java.util.List;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"LimZiJia"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"LimZiJia"},"content":" * The storage class contains the file paths and methods to load and save task lists.","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"LimZiJia"},"content":" *","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"LimZiJia"},"content":" * @author Lim Zi Jia","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"LimZiJia"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"LimZiJia"},"content":"public class Storage {","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"LimZiJia"},"content":"    /** The path to the saved file\u0027s directory. */","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"LimZiJia"},"content":"    private static Path PATH_DIR;","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"LimZiJia"},"content":"    /** The path to the saved file. */","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"LimZiJia"},"content":"    private static Path PATH_FILE;","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"LimZiJia"},"content":"    public Storage() {}","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"LimZiJia"},"content":"    public Storage(String dir, String name) {","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"LimZiJia"},"content":"        String userDir \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"LimZiJia"},"content":"        PATH_DIR \u003d Paths.get(userDir + dir);","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"LimZiJia"},"content":"        PATH_FILE \u003d Paths.get(userDir + dir + name);","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"LimZiJia"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"LimZiJia"},"content":"     * Loads the saved file if there is one.","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"LimZiJia"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"LimZiJia"},"content":"     * @return The saved TaskList if it exists or an empty one if there is none.","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"LimZiJia"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"LimZiJia"},"content":"    public TaskList load() {","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"LimZiJia"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"LimZiJia"},"content":"            List\u003cString\u003e read \u003d Files.readAllLines(PATH_FILE);","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"LimZiJia"},"content":"            List\u003cTask\u003e list \u003d read.stream()","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"LimZiJia"},"content":"                    .map(this::stringToTask)","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"LimZiJia"},"content":"                    .collect(Collectors.toList());","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"LimZiJia"},"content":"            TaskList tl \u003d new TaskList(list);","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"LimZiJia"},"content":"            System.out.println(\"Your current list:\");","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"LimZiJia"},"content":"            tl.printList();","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"LimZiJia"},"content":"            Ui.printLine();","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"LimZiJia"},"content":"            return tl;","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"LimZiJia"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"LimZiJia"},"content":"            System.out.println(\"You do not have a saved list.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"LimZiJia"},"content":"            Ui.printLine();","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"LimZiJia"},"content":"        return new TaskList();","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"LimZiJia"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"LimZiJia"},"content":"     * Converts strings in the saved file into Tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"LimZiJia"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"LimZiJia"},"content":"     * @param s Line from the saved file representing a Task.","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"LimZiJia"},"content":"     * @return Task that is derived from the saved string representation.","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"LimZiJia"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"LimZiJia"},"content":"    private Task stringToTask(String s) {","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"LimZiJia"},"content":"        List\u003cString\u003e taskLst \u003d Arrays.asList(s.split(\",\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"LimZiJia"},"content":"        Task t \u003d null;","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"LimZiJia"},"content":"        switch (taskLst.get(0)) {","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"LimZiJia"},"content":"            case \"T\":","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"LimZiJia"},"content":"                t \u003d new Todo(taskLst.get(1).equals(\"1\"), taskLst.get(2));","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"LimZiJia"},"content":"                break;","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"LimZiJia"},"content":"            case \"D\":","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"LimZiJia"},"content":"                t \u003d new Deadline(taskLst.get(1).equals(\"1\"), taskLst.get(2), taskLst.get(3));","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"LimZiJia"},"content":"                break;","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"LimZiJia"},"content":"            case \"E\":","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"LimZiJia"},"content":"                t \u003d new Event(taskLst.get(1).equals(\"1\"), taskLst.get(2), taskLst.get(3), taskLst.get(4));","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"LimZiJia"},"content":"                break;","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"LimZiJia"},"content":"        return t;","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"LimZiJia"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"LimZiJia"},"content":"     * Writes the saved content to the directory and file paths indicated in the private fields.","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"LimZiJia"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"LimZiJia"},"content":"     * @param f The path of the file that should be written to.","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"LimZiJia"},"content":"     * @param tl The task list to be saved.","lastModifiedDate":"2024-02-02"},{"lineNumber":84,"author":{"gitId":"LimZiJia"},"content":"     * @throws IOException If file at the path does not exist.","lastModifiedDate":"2024-02-02"},{"lineNumber":85,"author":{"gitId":"LimZiJia"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":86,"author":{"gitId":"LimZiJia"},"content":"    private void writeToFile(Path f, TaskList tl) throws IOException {","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"LimZiJia"},"content":"        List\u003cString\u003e lines \u003d tl.taskToSavedString();","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"LimZiJia"},"content":"        Files.write(f, lines);","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"LimZiJia"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":92,"author":{"gitId":"LimZiJia"},"content":"     * Saves desired TaskList to memory.","lastModifiedDate":"2024-02-02"},{"lineNumber":93,"author":{"gitId":"LimZiJia"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":94,"author":{"gitId":"LimZiJia"},"content":"     * @param tl The TaskList to be saved.","lastModifiedDate":"2024-02-02"},{"lineNumber":95,"author":{"gitId":"LimZiJia"},"content":"     * @throws IOException If directory or file at the paths do not exist.","lastModifiedDate":"2024-02-02"},{"lineNumber":96,"author":{"gitId":"LimZiJia"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":97,"author":{"gitId":"LimZiJia"},"content":"    public void save(TaskList tl) throws IOException {","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"LimZiJia"},"content":"        // Check if the directory exists","lastModifiedDate":"2024-02-01"},{"lineNumber":99,"author":{"gitId":"LimZiJia"},"content":"        if (!Files.exists(PATH_DIR)) {","lastModifiedDate":"2024-02-01"},{"lineNumber":100,"author":{"gitId":"LimZiJia"},"content":"            Files.createDirectories(PATH_DIR);","lastModifiedDate":"2024-02-01"},{"lineNumber":101,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":102,"author":{"gitId":"LimZiJia"},"content":"        // Check if the save file exists","lastModifiedDate":"2024-02-01"},{"lineNumber":103,"author":{"gitId":"LimZiJia"},"content":"        if (Files.exists(PATH_FILE)) {","lastModifiedDate":"2024-02-01"},{"lineNumber":104,"author":{"gitId":"LimZiJia"},"content":"            Files.delete(PATH_FILE);","lastModifiedDate":"2024-02-01"},{"lineNumber":105,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":106,"author":{"gitId":"LimZiJia"},"content":"        Files.createFile(PATH_FILE);","lastModifiedDate":"2024-02-01"},{"lineNumber":107,"author":{"gitId":"LimZiJia"},"content":"        // Writing to the file","lastModifiedDate":"2024-02-01"},{"lineNumber":108,"author":{"gitId":"LimZiJia"},"content":"        writeToFile(PATH_FILE, tl);","lastModifiedDate":"2024-02-01"},{"lineNumber":109,"author":{"gitId":"LimZiJia"},"content":"        System.out.println(\"Your list has been saved to \" + PATH_FILE);","lastModifiedDate":"2024-02-01"},{"lineNumber":110,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":111,"author":{"gitId":"LimZiJia"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"LimZiJia":111}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"import tasks.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"import java.util.List;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":" * The main class that prints outputs.","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":" *","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"LimZiJia"},"content":" * @author Lim Zi Jia","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"LimZiJia"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"LimZiJia"},"content":"public class Ui {","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"LimZiJia"},"content":"    /** Logo of Skibidi. */","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"LimZiJia"},"content":"    public static String logo \u003d \" ____  _  _____ ____ ___ ____ ___ \\n\" +","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"LimZiJia"},"content":"            \"/ ___|| |/ /_ _| __ )_ _|  _ \\\\_ _|\\n\" +","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"LimZiJia"},"content":"            \"\\\\___ \\\\| \u0027 / | ||  _ \\\\| || | | | | \\n\" +","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"LimZiJia"},"content":"            \" ___) | . \\\\ | || |_) | || |_| | | \\n\" +","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"LimZiJia"},"content":"            \"|____/|_|\\\\_\\\\___|____/___|____/___|\";","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"LimZiJia"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"LimZiJia"},"content":"     * Prints a solid line that separates each action.","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"LimZiJia"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"LimZiJia"},"content":"    public static void printLine() {","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"LimZiJia"},"content":"        System.out.println(\"\\n-------------------------------------------------------------------\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"LimZiJia"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"LimZiJia"},"content":"     * Greets the user in the console.","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"LimZiJia"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"LimZiJia"},"content":"    public void greet() {","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"LimZiJia"},"content":"        System.out.println(Ui.logo);","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"LimZiJia"},"content":"        printLine();","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"LimZiJia"},"content":"        System.out.println(\"Hello! I\u0027m Skibidi!\\nWhat can I do for you?\");","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"LimZiJia"},"content":"        printLine();","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"LimZiJia"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"LimZiJia"},"content":"     * Says goodbye to the user.","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"LimZiJia"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"LimZiJia"},"content":"    public void bye() {","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"LimZiJia"},"content":"        System.out.println(\"Bye! Hope to see you again soon!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"LimZiJia"},"content":"        printLine();","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"LimZiJia"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"LimZiJia"},"content":"     * The main chatting loop of the chatbot.","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"LimZiJia"},"content":"     * @param tasks The current tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"LimZiJia"},"content":"     * @param storage An object that has the paths to the save location and ability to load and save the list.","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"LimZiJia"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"LimZiJia"},"content":"    public void chat(TaskList tasks, Storage storage) {","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"LimZiJia"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"LimZiJia"},"content":"        String in;","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"LimZiJia"},"content":"        Parser p \u003d new Parser();","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"LimZiJia"},"content":"        while (!(tasks \u003d\u003d null)) {","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"LimZiJia"},"content":"            in \u003d sc.nextLine();","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"LimZiJia"},"content":"            tasks \u003d p.parse(in, tasks, storage); // Parse will return null if command is \"bye\"","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"LimZiJia"},"content":"            printLine();","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"LimZiJia"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"LimZiJia":67}},{"path":"src/main/java/exceptions/DukeEmptyArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package exceptions;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":" * An exception that is thrown when an argument is empty.","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"public class DukeEmptyArgumentException extends DukeException {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"    public DukeEmptyArgumentException() {}","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"LimZiJia":8}},{"path":"src/main/java/exceptions/DukeErroneousArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package exceptions;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":" * An exception that is thrown when an argument is wrong.","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"public class DukeErroneousArgumentException extends DukeException {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"    public DukeErroneousArgumentException() {}","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"LimZiJia":8}},{"path":"src/main/java/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package exceptions;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":" * Parent class for Duke exceptions.","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"    public DukeException() {}","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"LimZiJia":8}},{"path":"src/main/java/exceptions/DukeInvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package exceptions;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":" * An exception that is thrown when an input is invalid.","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"public class DukeInvalidInputException extends DukeException {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"    public DukeInvalidInputException() {}","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"LimZiJia":8}},{"path":"src/main/java/exceptions/DukeWrongDateOrderException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package exceptions;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":" * An exception that is thrown when the order of dates are wrong.","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":" * e.g. Date D1 that is supposed to be after D2 is actually before D2 instead.","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"public class DukeWrongDateOrderException extends DukeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"    public DukeWrongDateOrderException() {}","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"LimZiJia":9}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":" * An encapsulation of a deadline type task.","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":" *","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":" * @author Lim Zi Jia","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":"    /** The time of the deadline. */","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"LimZiJia"},"content":"    private LocalDate time;","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"LimZiJia"},"content":"    public Deadline(boolean done, String name, String time) {","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"LimZiJia"},"content":"        super(done, name);","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"LimZiJia"},"content":"        this.time \u003d LocalDate.parse(time);","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"LimZiJia"},"content":"    public Deadline(String name, String time) {","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"LimZiJia"},"content":"        super(name);","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"LimZiJia"},"content":"        this.time \u003d LocalDate.parse(time);","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"LimZiJia"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"LimZiJia"},"content":"    public String toSavedString() {","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"LimZiJia"},"content":"        return String.format(\"D,%s,%s,%s\",","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"LimZiJia"},"content":"                this.done ? \u00271\u0027 : \u00270\u0027,","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"LimZiJia"},"content":"                this.name,","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"LimZiJia"},"content":"                this.time.format(DateTimeFormatter.ISO_LOCAL_DATE));","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":33,"author":{"gitId":"LimZiJia"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"LimZiJia"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"LimZiJia"},"content":"        return String.format(\"[D][%s] %s (by: %s)\\n\",","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"LimZiJia"},"content":"                this.done ? \"X\" : \" \",","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"LimZiJia"},"content":"                this.name,","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"LimZiJia"},"content":"                this.time.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")));","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":40,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"LimZiJia"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"LimZiJia"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"LimZiJia"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"LimZiJia"},"content":"            return false;","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"LimZiJia"},"content":"        if (obj.getClass() !\u003d this.getClass()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"LimZiJia"},"content":"            return false;","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"LimZiJia"},"content":"        Deadline deadline \u003d (Deadline) obj;","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"LimZiJia"},"content":"        return this.name.equals(deadline.name)","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"LimZiJia"},"content":"                \u0026\u0026 this.done \u003d\u003d deadline.done","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"LimZiJia"},"content":"                \u0026\u0026 this.time.equals(deadline.time);","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"LimZiJia"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"LimZiJia":56}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":" * An encapsulation of an event type task.","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":" *","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":" * @author Lim Zi Jia","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":"    /** The time of the start of the event. */","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"LimZiJia"},"content":"    private final LocalDate from;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"LimZiJia"},"content":"    /** The time of the end of the event. */","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"LimZiJia"},"content":"    private final LocalDate to;","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"LimZiJia"},"content":"    public Event(boolean done, String name, String from, String to) {","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"LimZiJia"},"content":"        super(done, name);","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"LimZiJia"},"content":"        this.from \u003d LocalDate.parse(from);","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"LimZiJia"},"content":"        this.to \u003d LocalDate.parse(to);","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"LimZiJia"},"content":"    public Event(String name, String from, String to) {","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"LimZiJia"},"content":"        super(name);","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"LimZiJia"},"content":"        this.from \u003d LocalDate.parse(from);","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"LimZiJia"},"content":"        this.to \u003d LocalDate.parse(to);","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"LimZiJia"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"LimZiJia"},"content":"     * Checks if from \u003c to.","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"LimZiJia"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"LimZiJia"},"content":"     * @return True if the dates are in the correct order.","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"LimZiJia"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"LimZiJia"},"content":"    public boolean isCorrectOrder() {","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"LimZiJia"},"content":"        return this.to.isAfter(this.from) | this.to.isEqual(this.from);","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"LimZiJia"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"LimZiJia"},"content":"    public String toSavedString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"LimZiJia"},"content":"        return String.format(\"E,%s,%s,%s,%s\",","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"LimZiJia"},"content":"                this.done ? \u00271\u0027 : \u00270\u0027,","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"LimZiJia"},"content":"                this.name,","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"LimZiJia"},"content":"                this.from.format(DateTimeFormatter.ISO_LOCAL_DATE),","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"LimZiJia"},"content":"                this.to.format(DateTimeFormatter.ISO_LOCAL_DATE));","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":45,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":46,"author":{"gitId":"LimZiJia"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"LimZiJia"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":48,"author":{"gitId":"LimZiJia"},"content":"        return String.format(\"[E][%s] %s (from: %s to: %s)\\n\",","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"LimZiJia"},"content":"                this.done ? \"X\" : \" \",","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"LimZiJia"},"content":"                this.name,","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"LimZiJia"},"content":"                this.from.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")),","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"LimZiJia"},"content":"                this.to.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")));","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":54,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"LimZiJia"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"LimZiJia"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"LimZiJia"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"LimZiJia"},"content":"            return false;","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"LimZiJia"},"content":"        if (obj.getClass() !\u003d this.getClass()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"LimZiJia"},"content":"            return false;","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"LimZiJia"},"content":"        Event event \u003d (Event) obj;","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"LimZiJia"},"content":"        return this.name.equals(event.name)","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"LimZiJia"},"content":"                \u0026\u0026 this.done \u003d\u003d event.done","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"LimZiJia"},"content":"                \u0026\u0026 this.from.equals(event.from)","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"LimZiJia"},"content":"                \u0026\u0026 this.to.equals(event.to);","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"LimZiJia"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"LimZiJia":71}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":" * An encapsulation of a task.","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":" *","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":" * @author Lim Zi Jia","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"public abstract class Task {","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":"    /** The name of the task */","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":"    protected final String name;","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"    /** Represents if a task is done */","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":"    protected boolean done;","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"LimZiJia"},"content":"    public Task(boolean done, String name) {","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"LimZiJia"},"content":"        this.done \u003d done;","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"LimZiJia"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"LimZiJia"},"content":"    public Task(String name) {","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"LimZiJia"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"LimZiJia"},"content":"        this.done \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"LimZiJia"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"LimZiJia"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"LimZiJia"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"LimZiJia"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"LimZiJia"},"content":"        this.done \u003d true;","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"LimZiJia"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"LimZiJia"},"content":"     * Marks the task as not done.","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"LimZiJia"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"LimZiJia"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"LimZiJia"},"content":"        this.done \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":36,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":37,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"LimZiJia"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"LimZiJia"},"content":"     * An abstract method that asks subclasses to be able to convert themselves into a format that is used for saving.","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"LimZiJia"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"LimZiJia"},"content":"     * @return The string of the saved object.","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"LimZiJia"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"LimZiJia"},"content":"    public abstract String toSavedString();","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"LimZiJia"},"content":"    public boolean has(String toFind) {","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"LimZiJia"},"content":"        return this.name.contains(toFind);","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"LimZiJia"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"LimZiJia":48}},{"path":"src/main/java/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":"import java.util.List;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":" * An encapsulation of a task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":" *","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":" * @author Lim Zi Jia","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":"public class TaskList {","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"LimZiJia"},"content":"    /** List of tasks. */","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"LimZiJia"},"content":"    private List\u003cTask\u003e list;","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"LimZiJia"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"LimZiJia"},"content":"        list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"LimZiJia"},"content":"    public TaskList(List\u003cTask\u003e list) {","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"LimZiJia"},"content":"        this.list \u003d list;","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"LimZiJia"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"LimZiJia"},"content":"     * Prints a list containing the current tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"LimZiJia"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"LimZiJia"},"content":"    public void printList() {","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"LimZiJia"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"LimZiJia"},"content":"        int number \u003d 1;","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"LimZiJia"},"content":"        for (Task t : this.list) {","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"LimZiJia"},"content":"            System.out.printf(\"%d. %s\", number, t);","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"LimZiJia"},"content":"            number++;","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"LimZiJia"},"content":"    public void add(Task t) {","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"LimZiJia"},"content":"        this.list.add(t);","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"LimZiJia"},"content":"    public Task get(int idx) {","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"LimZiJia"},"content":"        return this.list.get(idx);","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"LimZiJia"},"content":"    public int size() {","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"LimZiJia"},"content":"        return this.list.size();","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"LimZiJia"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"LimZiJia"},"content":"     * Marks a task as done.","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"LimZiJia"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"LimZiJia"},"content":"     * @param in The index of the task that should be marked as done.","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"LimZiJia"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"LimZiJia"},"content":"    public void mark(String in) {","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"LimZiJia"},"content":"        int i;","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"LimZiJia"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"LimZiJia"},"content":"            i \u003d Integer.parseInt(in.substring(5));","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"LimZiJia"},"content":"            Task t \u003d this.list.get(i-1);","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"LimZiJia"},"content":"            t.markAsDone();","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"LimZiJia"},"content":"            System.out.print(\"Nice! I\u0027ve marked this task as done:\\n  \");","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"LimZiJia"},"content":"            System.out.print(t);","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"LimZiJia"},"content":"            this.list.set(i-1, t);","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"LimZiJia"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"LimZiJia"},"content":"            System.out.println(\"Not a valid number!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"LimZiJia"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"LimZiJia"},"content":"            System.out.println(\"Sorry, index out of range!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"LimZiJia"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"LimZiJia"},"content":"     * Marks a task as not done.","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"LimZiJia"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"LimZiJia"},"content":"     * @param in The index of the task that should be marked as not done.","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"LimZiJia"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"LimZiJia"},"content":"    public void unmark(String in) {","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"LimZiJia"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"LimZiJia"},"content":"            int i \u003d Integer.parseInt(in.substring(7));","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"LimZiJia"},"content":"            Task t \u003d this.list.get(i-1);","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"LimZiJia"},"content":"            t.markAsNotDone();","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"LimZiJia"},"content":"            System.out.print(\"OK, I\u0027ve marked this task as not done yet:\\n  \");","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"LimZiJia"},"content":"            System.out.print(t);","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"LimZiJia"},"content":"            this.list.set(i-1, t);","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"LimZiJia"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"LimZiJia"},"content":"            System.out.println(\"Not a valid number!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"LimZiJia"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"LimZiJia"},"content":"            System.out.println(\"Sorry, index out of range!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"LimZiJia"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":92,"author":{"gitId":"LimZiJia"},"content":"     * Deletes a task from the list.","lastModifiedDate":"2024-02-02"},{"lineNumber":93,"author":{"gitId":"LimZiJia"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":94,"author":{"gitId":"LimZiJia"},"content":"     * @param in The index of the task that should be deleted.","lastModifiedDate":"2024-02-02"},{"lineNumber":95,"author":{"gitId":"LimZiJia"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":96,"author":{"gitId":"LimZiJia"},"content":"    public void delete(String in) {","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"LimZiJia"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"LimZiJia"},"content":"            int i \u003d Integer.parseInt(in.substring(7));","lastModifiedDate":"2024-02-01"},{"lineNumber":99,"author":{"gitId":"LimZiJia"},"content":"            Task t \u003d this.list.remove(i-1);","lastModifiedDate":"2024-02-01"},{"lineNumber":100,"author":{"gitId":"LimZiJia"},"content":"            System.out.print(\"Noted. I\u0027ve removed this task::\\n  \");","lastModifiedDate":"2024-02-01"},{"lineNumber":101,"author":{"gitId":"LimZiJia"},"content":"            System.out.println(t);","lastModifiedDate":"2024-02-01"},{"lineNumber":102,"author":{"gitId":"LimZiJia"},"content":"            System.out.printf(\"Now you have %d tasks in the list.\\n\", this.list.size());","lastModifiedDate":"2024-02-01"},{"lineNumber":103,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":104,"author":{"gitId":"LimZiJia"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":105,"author":{"gitId":"LimZiJia"},"content":"            System.out.println(\"Not a valid number! Or perhaps add a \u0027 \u0027\");","lastModifiedDate":"2024-02-01"},{"lineNumber":106,"author":{"gitId":"LimZiJia"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":107,"author":{"gitId":"LimZiJia"},"content":"            System.out.println(\"Sorry, index out of range!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":108,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":109,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":110,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":111,"author":{"gitId":"LimZiJia"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":112,"author":{"gitId":"LimZiJia"},"content":"     * Converts a list of tasks to a list of strings that are in the format used for saving.","lastModifiedDate":"2024-02-02"},{"lineNumber":113,"author":{"gitId":"LimZiJia"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":114,"author":{"gitId":"LimZiJia"},"content":"     * @return A list of strings that will be used for saving.","lastModifiedDate":"2024-02-02"},{"lineNumber":115,"author":{"gitId":"LimZiJia"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":116,"author":{"gitId":"LimZiJia"},"content":"    public List\u003cString\u003e taskToSavedString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":117,"author":{"gitId":"LimZiJia"},"content":"        return list.stream()","lastModifiedDate":"2024-02-01"},{"lineNumber":118,"author":{"gitId":"LimZiJia"},"content":"                .map(Task::toSavedString)","lastModifiedDate":"2024-02-01"},{"lineNumber":119,"author":{"gitId":"LimZiJia"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2024-02-01"},{"lineNumber":120,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":121,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":122,"author":{"gitId":"LimZiJia"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":123,"author":{"gitId":"LimZiJia"},"content":"     * Finds if the substring is in the name of th list of tasks and print it if there is.","lastModifiedDate":"2024-02-03"},{"lineNumber":124,"author":{"gitId":"LimZiJia"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":125,"author":{"gitId":"LimZiJia"},"content":"     * @param in A string in the format of \"find x\" where x is the substring to find.","lastModifiedDate":"2024-02-03"},{"lineNumber":126,"author":{"gitId":"LimZiJia"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":127,"author":{"gitId":"LimZiJia"},"content":"    public void find(String in) {","lastModifiedDate":"2024-02-03"},{"lineNumber":128,"author":{"gitId":"LimZiJia"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2024-02-03"},{"lineNumber":129,"author":{"gitId":"LimZiJia"},"content":"        int number \u003d 1;","lastModifiedDate":"2024-02-03"},{"lineNumber":130,"author":{"gitId":"LimZiJia"},"content":"        String toFind \u003d in.substring(5);","lastModifiedDate":"2024-02-03"},{"lineNumber":131,"author":{"gitId":"LimZiJia"},"content":"        for (Task t : this.list) {","lastModifiedDate":"2024-02-03"},{"lineNumber":132,"author":{"gitId":"LimZiJia"},"content":"            if (t.has(toFind)) {","lastModifiedDate":"2024-02-03"},{"lineNumber":133,"author":{"gitId":"LimZiJia"},"content":"                System.out.printf(\"%d. %s\", number, t);","lastModifiedDate":"2024-02-03"},{"lineNumber":134,"author":{"gitId":"LimZiJia"},"content":"                number++;","lastModifiedDate":"2024-02-03"},{"lineNumber":135,"author":{"gitId":"LimZiJia"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":136,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":137,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":138,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":139,"author":{"gitId":"LimZiJia"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":140,"author":{"gitId":"LimZiJia"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-02-02"},{"lineNumber":141,"author":{"gitId":"LimZiJia"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2024-02-02"},{"lineNumber":142,"author":{"gitId":"LimZiJia"},"content":"            return false;","lastModifiedDate":"2024-02-02"},{"lineNumber":143,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":144,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":145,"author":{"gitId":"LimZiJia"},"content":"        if (obj.getClass() !\u003d this.getClass()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":146,"author":{"gitId":"LimZiJia"},"content":"            return false;","lastModifiedDate":"2024-02-02"},{"lineNumber":147,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":148,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":149,"author":{"gitId":"LimZiJia"},"content":"        TaskList tl \u003d (TaskList) obj;","lastModifiedDate":"2024-02-02"},{"lineNumber":150,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":151,"author":{"gitId":"LimZiJia"},"content":"        return this.list.equals(tl.list);","lastModifiedDate":"2024-02-02"},{"lineNumber":152,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":153,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":154,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":155,"author":{"gitId":"LimZiJia"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"LimZiJia":155}},{"path":"src/main/java/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":" * An encapsulation of a todo type task.","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":" *","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":" * @author Lim Zi Jia ","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"public class Todo extends Task{","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":"    public Todo(boolean done, String name){","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":"        super(done, name);","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"    };","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":"    public Todo(String name) {","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"LimZiJia"},"content":"        super(name);","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"LimZiJia"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"LimZiJia"},"content":"    public String toSavedString() {","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"LimZiJia"},"content":"        return String.format(\"T,%s,%s\"","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"LimZiJia"},"content":"                , this.done ? \u00271\u0027 : \u00270\u0027","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"LimZiJia"},"content":"                , this.name);","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"LimZiJia"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"LimZiJia"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"LimZiJia"},"content":"        return String.format(\"[T][%s] %s\\n\", this.done ? \"X\" : \" \", this.name);","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"LimZiJia"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"LimZiJia"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"LimZiJia"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"LimZiJia"},"content":"            return false;","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"LimZiJia"},"content":"        if (obj.getClass() !\u003d this.getClass()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"LimZiJia"},"content":"            return false;","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"LimZiJia"},"content":"        Todo todo \u003d (Todo) obj;","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"LimZiJia"},"content":"        return this.name.equals(todo.name) \u0026\u0026 this.done \u003d\u003d todo.done;","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"LimZiJia"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"LimZiJia":41}},{"path":"src/test/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package duke;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"import exceptions.DukeEmptyArgumentException;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":"import exceptions.DukeErroneousArgumentException;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"import org.junit.jupiter.api.extension.ExtendWith;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"import org.mockito.Mock;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"import org.mockito.junit.jupiter.MockitoExtension;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":"import tasks.*;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"LimZiJia"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"LimZiJia"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"LimZiJia"},"content":"import java.util.List;","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"LimZiJia"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"LimZiJia"},"content":"import static org.mockito.Mockito.mock;","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"LimZiJia"},"content":"import static org.mockito.Mockito.verify;","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"LimZiJia"},"content":"@ExtendWith(MockitoExtension.class)","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"LimZiJia"},"content":"class ParserTest {","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"LimZiJia"},"content":"    Parser p \u003d new Parser();","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"LimZiJia"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"LimZiJia"},"content":"    void byeShouldReturnNull() {","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"LimZiJia"},"content":"        TaskList tl  \u003d new TaskList();","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"LimZiJia"},"content":"        String in \u003d \"bye\";","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"LimZiJia"},"content":"        Storage store \u003d new Storage();","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"LimZiJia"},"content":"        assertNull(p.parse(in, tl, store));","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"LimZiJia"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"LimZiJia"},"content":"    void listShouldCallPrintList() {","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"LimZiJia"},"content":"        TaskList tl  \u003d mock(TaskList.class);","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"LimZiJia"},"content":"        String in \u003d \"list\";","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"LimZiJia"},"content":"        Storage store \u003d new Storage();","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"LimZiJia"},"content":"        p.parse(in, tl, store);","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"LimZiJia"},"content":"        verify(tl).printList();","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"LimZiJia"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"LimZiJia"},"content":"    void saveShouldCallStorageSaveSuccess() {","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"LimZiJia"},"content":"        TaskList tl  \u003d new TaskList();","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"LimZiJia"},"content":"        String in \u003d \"save\";","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"LimZiJia"},"content":"        Storage store \u003d mock(Storage.class);","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"LimZiJia"},"content":"        boolean thrown \u003d false;","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"LimZiJia"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"LimZiJia"},"content":"            p.parse(in, tl, store);","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"LimZiJia"},"content":"            verify(store).save(tl);","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"LimZiJia"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"LimZiJia"},"content":"            thrown \u003d true;","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"LimZiJia"},"content":"        assertFalse(thrown);","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"LimZiJia"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"LimZiJia"},"content":"    void markShouldReturnMarkedTasks() {","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"LimZiJia"},"content":"        List\u003cTask\u003e lstBefore \u003d new ArrayList\u003c\u003e(Arrays.asList(new Todo(\"task1\"), new Todo(\"task2\")));","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"LimZiJia"},"content":"        List\u003cTask\u003e lstAfter \u003d new ArrayList\u003c\u003e(Arrays.asList(new Todo(\"task1\"), new Todo(true,\"task2\")));","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"LimZiJia"},"content":"        TaskList tl1 \u003d new TaskList(lstBefore);","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"LimZiJia"},"content":"        TaskList tl2 \u003d new TaskList(lstAfter);","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"LimZiJia"},"content":"        String in \u003d \"mark 2\";","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"LimZiJia"},"content":"        Storage store \u003d new Storage();","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"LimZiJia"},"content":"        tl1 \u003d p.parse(in, tl1, store);","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"LimZiJia"},"content":"        assertEquals(tl2, tl1);","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"LimZiJia"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"LimZiJia"},"content":"    void unmarkShouldReturnUnmarkedTasks() {","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"LimZiJia"},"content":"        List\u003cTask\u003e lstBefore \u003d new ArrayList\u003c\u003e(Arrays.asList(new Todo(\"task1\"), new Todo(true,\"task2\")));","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"LimZiJia"},"content":"        List\u003cTask\u003e lstAfter \u003d new ArrayList\u003c\u003e(Arrays.asList(new Todo(\"task1\"), new Todo(\"task2\")));","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"LimZiJia"},"content":"        TaskList tl1 \u003d new TaskList(lstBefore);","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"LimZiJia"},"content":"        TaskList tl2 \u003d new TaskList(lstAfter);","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"LimZiJia"},"content":"        String in \u003d \"unmark 2\";","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"LimZiJia"},"content":"        Storage store \u003d new Storage();","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"LimZiJia"},"content":"        tl1 \u003d p.parse(in, tl1, store);","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"LimZiJia"},"content":"        assertEquals(tl2, tl1);","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"LimZiJia"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"LimZiJia"},"content":"    void deleteShouldReturnDeletedTaskList() {","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"LimZiJia"},"content":"        List\u003cTask\u003e lstBefore \u003d new ArrayList\u003c\u003e(Arrays.asList(new Todo(\"task1\"), new Todo(\"task2\")));","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"LimZiJia"},"content":"        List\u003cTask\u003e lstAfter \u003d new ArrayList\u003c\u003e(Arrays.asList(new Todo(\"task1\")));","lastModifiedDate":"2024-02-02"},{"lineNumber":84,"author":{"gitId":"LimZiJia"},"content":"        TaskList tl1 \u003d new TaskList(lstBefore);","lastModifiedDate":"2024-02-02"},{"lineNumber":85,"author":{"gitId":"LimZiJia"},"content":"        TaskList tl2 \u003d new TaskList(lstAfter);","lastModifiedDate":"2024-02-02"},{"lineNumber":86,"author":{"gitId":"LimZiJia"},"content":"        String in \u003d \"delete 2\";","lastModifiedDate":"2024-02-02"},{"lineNumber":87,"author":{"gitId":"LimZiJia"},"content":"        Storage store \u003d new Storage();","lastModifiedDate":"2024-02-02"},{"lineNumber":88,"author":{"gitId":"LimZiJia"},"content":"        tl1 \u003d p.parse(in, tl1, store);","lastModifiedDate":"2024-02-02"},{"lineNumber":89,"author":{"gitId":"LimZiJia"},"content":"        assertEquals(tl2, tl1);","lastModifiedDate":"2024-02-02"},{"lineNumber":90,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":91,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":92,"author":{"gitId":"LimZiJia"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":93,"author":{"gitId":"LimZiJia"},"content":"    void todoShouldAddTodoTask() {","lastModifiedDate":"2024-02-02"},{"lineNumber":94,"author":{"gitId":"LimZiJia"},"content":"        List\u003cTask\u003e lstBefore \u003d new ArrayList\u003c\u003e(Arrays.asList(new Todo(\"task1\")));","lastModifiedDate":"2024-02-02"},{"lineNumber":95,"author":{"gitId":"LimZiJia"},"content":"        List\u003cTask\u003e lstAfter \u003d new ArrayList\u003c\u003e(Arrays.asList(new Todo(\"task1\"), new Todo(\"task2\")));","lastModifiedDate":"2024-02-02"},{"lineNumber":96,"author":{"gitId":"LimZiJia"},"content":"        TaskList tl1 \u003d new TaskList(lstBefore);","lastModifiedDate":"2024-02-02"},{"lineNumber":97,"author":{"gitId":"LimZiJia"},"content":"        TaskList tl2 \u003d new TaskList(lstAfter);","lastModifiedDate":"2024-02-02"},{"lineNumber":98,"author":{"gitId":"LimZiJia"},"content":"        String in \u003d \"todo task2\";","lastModifiedDate":"2024-02-02"},{"lineNumber":99,"author":{"gitId":"LimZiJia"},"content":"        tl1 \u003d p.addTask(in, tl1);","lastModifiedDate":"2024-02-02"},{"lineNumber":100,"author":{"gitId":"LimZiJia"},"content":"        assertEquals(tl2, tl1);","lastModifiedDate":"2024-02-02"},{"lineNumber":101,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":102,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":103,"author":{"gitId":"LimZiJia"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":104,"author":{"gitId":"LimZiJia"},"content":"    void deadlineShouldAddDeadlineTask() {","lastModifiedDate":"2024-02-02"},{"lineNumber":105,"author":{"gitId":"LimZiJia"},"content":"        List\u003cTask\u003e lstBefore \u003d new ArrayList\u003c\u003e(Arrays.asList(new Todo(\"task1\")));","lastModifiedDate":"2024-02-02"},{"lineNumber":106,"author":{"gitId":"LimZiJia"},"content":"        List\u003cTask\u003e lstAfter \u003d new ArrayList\u003c\u003e(Arrays.asList(","lastModifiedDate":"2024-02-02"},{"lineNumber":107,"author":{"gitId":"LimZiJia"},"content":"                new Todo(\"task1\"), new Deadline(\"task2\", \"2024-01-31\")));","lastModifiedDate":"2024-02-02"},{"lineNumber":108,"author":{"gitId":"LimZiJia"},"content":"        TaskList tl1 \u003d new TaskList(lstBefore);","lastModifiedDate":"2024-02-02"},{"lineNumber":109,"author":{"gitId":"LimZiJia"},"content":"        TaskList tl2 \u003d new TaskList(lstAfter);","lastModifiedDate":"2024-02-02"},{"lineNumber":110,"author":{"gitId":"LimZiJia"},"content":"        String in \u003d \"deadline task2 /by 2024-01-31\";","lastModifiedDate":"2024-02-02"},{"lineNumber":111,"author":{"gitId":"LimZiJia"},"content":"        tl1 \u003d p.addTask(in, tl1);","lastModifiedDate":"2024-02-02"},{"lineNumber":112,"author":{"gitId":"LimZiJia"},"content":"        assertEquals(tl2, tl1);","lastModifiedDate":"2024-02-02"},{"lineNumber":113,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":114,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":115,"author":{"gitId":"LimZiJia"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":116,"author":{"gitId":"LimZiJia"},"content":"    void eventShouldAddEventTask() {","lastModifiedDate":"2024-02-02"},{"lineNumber":117,"author":{"gitId":"LimZiJia"},"content":"        List\u003cTask\u003e lstBefore \u003d new ArrayList\u003c\u003e(Arrays.asList(new Todo(\"task1\")));","lastModifiedDate":"2024-02-02"},{"lineNumber":118,"author":{"gitId":"LimZiJia"},"content":"        List\u003cTask\u003e lstAfter \u003d new ArrayList\u003c\u003e(Arrays.asList(","lastModifiedDate":"2024-02-02"},{"lineNumber":119,"author":{"gitId":"LimZiJia"},"content":"                new Todo(\"task1\"), new Event(\"task2\", \"2024-01-31\", \"2024-02-01\")));","lastModifiedDate":"2024-02-02"},{"lineNumber":120,"author":{"gitId":"LimZiJia"},"content":"        TaskList tl1 \u003d new TaskList(lstBefore);","lastModifiedDate":"2024-02-02"},{"lineNumber":121,"author":{"gitId":"LimZiJia"},"content":"        TaskList tl2 \u003d new TaskList(lstAfter);","lastModifiedDate":"2024-02-02"},{"lineNumber":122,"author":{"gitId":"LimZiJia"},"content":"        String in \u003d \"event task2 /from 2024-01-31 /to 2024-02-01\";","lastModifiedDate":"2024-02-02"},{"lineNumber":123,"author":{"gitId":"LimZiJia"},"content":"        tl1 \u003d p.addTask(in, tl1);","lastModifiedDate":"2024-02-02"},{"lineNumber":124,"author":{"gitId":"LimZiJia"},"content":"        assertEquals(tl2, tl1);","lastModifiedDate":"2024-02-02"},{"lineNumber":125,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":126,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":127,"author":{"gitId":"LimZiJia"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":128,"author":{"gitId":"LimZiJia"},"content":"    void emptyTodoShouldThrowEmptyArgumentException() {","lastModifiedDate":"2024-02-02"},{"lineNumber":129,"author":{"gitId":"LimZiJia"},"content":"        boolean thrown \u003d false;","lastModifiedDate":"2024-02-02"},{"lineNumber":130,"author":{"gitId":"LimZiJia"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":131,"author":{"gitId":"LimZiJia"},"content":"            TaskList tl  \u003d new TaskList();","lastModifiedDate":"2024-02-02"},{"lineNumber":132,"author":{"gitId":"LimZiJia"},"content":"            String in \u003d \"todo \";","lastModifiedDate":"2024-02-02"},{"lineNumber":133,"author":{"gitId":"LimZiJia"},"content":"            tl \u003d p.addTask(in, tl);","lastModifiedDate":"2024-02-02"},{"lineNumber":134,"author":{"gitId":"LimZiJia"},"content":"        } catch (DukeEmptyArgumentException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":135,"author":{"gitId":"LimZiJia"},"content":"            thrown \u003d true;","lastModifiedDate":"2024-02-02"},{"lineNumber":136,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":137,"author":{"gitId":"LimZiJia"},"content":"        assertTrue(thrown);","lastModifiedDate":"2024-02-02"},{"lineNumber":138,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":139,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":140,"author":{"gitId":"LimZiJia"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":141,"author":{"gitId":"LimZiJia"},"content":"    void emptyDeadlineShouldThrowEmptyArgumentException() {","lastModifiedDate":"2024-02-02"},{"lineNumber":142,"author":{"gitId":"LimZiJia"},"content":"        boolean thrown \u003d false;","lastModifiedDate":"2024-02-02"},{"lineNumber":143,"author":{"gitId":"LimZiJia"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":144,"author":{"gitId":"LimZiJia"},"content":"            TaskList tl  \u003d new TaskList();","lastModifiedDate":"2024-02-02"},{"lineNumber":145,"author":{"gitId":"LimZiJia"},"content":"            String in \u003d \"deadline /by 2024-01-01\";","lastModifiedDate":"2024-02-02"},{"lineNumber":146,"author":{"gitId":"LimZiJia"},"content":"            tl \u003d p.addTask(in, tl);","lastModifiedDate":"2024-02-02"},{"lineNumber":147,"author":{"gitId":"LimZiJia"},"content":"        } catch (DukeEmptyArgumentException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":148,"author":{"gitId":"LimZiJia"},"content":"            thrown \u003d true;","lastModifiedDate":"2024-02-02"},{"lineNumber":149,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":150,"author":{"gitId":"LimZiJia"},"content":"        assertTrue(thrown);","lastModifiedDate":"2024-02-02"},{"lineNumber":151,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":152,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":153,"author":{"gitId":"LimZiJia"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":154,"author":{"gitId":"LimZiJia"},"content":"    void emptyDeadlineDateTimeShouldThrowEmptyArgumentException() {","lastModifiedDate":"2024-02-02"},{"lineNumber":155,"author":{"gitId":"LimZiJia"},"content":"        boolean thrown \u003d false;","lastModifiedDate":"2024-02-02"},{"lineNumber":156,"author":{"gitId":"LimZiJia"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":157,"author":{"gitId":"LimZiJia"},"content":"            TaskList tl  \u003d new TaskList();","lastModifiedDate":"2024-02-02"},{"lineNumber":158,"author":{"gitId":"LimZiJia"},"content":"            String in \u003d \"deadline test /by \";","lastModifiedDate":"2024-02-02"},{"lineNumber":159,"author":{"gitId":"LimZiJia"},"content":"            tl \u003d p.addTask(in, tl);","lastModifiedDate":"2024-02-02"},{"lineNumber":160,"author":{"gitId":"LimZiJia"},"content":"        } catch (DukeEmptyArgumentException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":161,"author":{"gitId":"LimZiJia"},"content":"            thrown \u003d true;","lastModifiedDate":"2024-02-02"},{"lineNumber":162,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":163,"author":{"gitId":"LimZiJia"},"content":"        assertTrue(thrown);","lastModifiedDate":"2024-02-02"},{"lineNumber":164,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":165,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":166,"author":{"gitId":"LimZiJia"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":167,"author":{"gitId":"LimZiJia"},"content":"    void erroneousDeadlineShouldThrowErroneousArgumentException() {","lastModifiedDate":"2024-02-02"},{"lineNumber":168,"author":{"gitId":"LimZiJia"},"content":"        boolean thrown \u003d false;","lastModifiedDate":"2024-02-02"},{"lineNumber":169,"author":{"gitId":"LimZiJia"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":170,"author":{"gitId":"LimZiJia"},"content":"            TaskList tl  \u003d new TaskList();","lastModifiedDate":"2024-02-02"},{"lineNumber":171,"author":{"gitId":"LimZiJia"},"content":"            String in \u003d \"deadline test /by2024-01-01\";","lastModifiedDate":"2024-02-02"},{"lineNumber":172,"author":{"gitId":"LimZiJia"},"content":"            tl \u003d p.addTask(in, tl);","lastModifiedDate":"2024-02-02"},{"lineNumber":173,"author":{"gitId":"LimZiJia"},"content":"        } catch (DukeErroneousArgumentException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":174,"author":{"gitId":"LimZiJia"},"content":"            thrown \u003d true;","lastModifiedDate":"2024-02-02"},{"lineNumber":175,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":176,"author":{"gitId":"LimZiJia"},"content":"        assertTrue(thrown);","lastModifiedDate":"2024-02-02"},{"lineNumber":177,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":178,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":179,"author":{"gitId":"LimZiJia"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":180,"author":{"gitId":"LimZiJia"},"content":"    void erroneousDeadLineFormatShouldThrowDateTimeException() {","lastModifiedDate":"2024-02-02"},{"lineNumber":181,"author":{"gitId":"LimZiJia"},"content":"        boolean thrown \u003d false;","lastModifiedDate":"2024-02-02"},{"lineNumber":182,"author":{"gitId":"LimZiJia"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":183,"author":{"gitId":"LimZiJia"},"content":"            TaskList tl  \u003d new TaskList();","lastModifiedDate":"2024-02-02"},{"lineNumber":184,"author":{"gitId":"LimZiJia"},"content":"            String in \u003d \"deadline test /by 2024-0-01\";","lastModifiedDate":"2024-02-02"},{"lineNumber":185,"author":{"gitId":"LimZiJia"},"content":"            tl \u003d p.addTask(in, tl);","lastModifiedDate":"2024-02-02"},{"lineNumber":186,"author":{"gitId":"LimZiJia"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":187,"author":{"gitId":"LimZiJia"},"content":"            thrown \u003d true;","lastModifiedDate":"2024-02-02"},{"lineNumber":188,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":189,"author":{"gitId":"LimZiJia"},"content":"        assertTrue(thrown);","lastModifiedDate":"2024-02-02"},{"lineNumber":190,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":191,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":192,"author":{"gitId":"LimZiJia"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":193,"author":{"gitId":"LimZiJia"},"content":"    void emptyEventShouldThrowEmptyArgumentException() {","lastModifiedDate":"2024-02-02"},{"lineNumber":194,"author":{"gitId":"LimZiJia"},"content":"        boolean thrown \u003d false;","lastModifiedDate":"2024-02-02"},{"lineNumber":195,"author":{"gitId":"LimZiJia"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":196,"author":{"gitId":"LimZiJia"},"content":"            TaskList tl  \u003d new TaskList();","lastModifiedDate":"2024-02-02"},{"lineNumber":197,"author":{"gitId":"LimZiJia"},"content":"            String in \u003d \"event /from 2024-01-01 /to 2024-01-02\";","lastModifiedDate":"2024-02-02"},{"lineNumber":198,"author":{"gitId":"LimZiJia"},"content":"            tl \u003d p.addTask(in, tl);","lastModifiedDate":"2024-02-02"},{"lineNumber":199,"author":{"gitId":"LimZiJia"},"content":"        } catch (DukeEmptyArgumentException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":200,"author":{"gitId":"LimZiJia"},"content":"            thrown \u003d true;","lastModifiedDate":"2024-02-02"},{"lineNumber":201,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":202,"author":{"gitId":"LimZiJia"},"content":"        assertTrue(thrown);","lastModifiedDate":"2024-02-02"},{"lineNumber":203,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":204,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":205,"author":{"gitId":"LimZiJia"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":206,"author":{"gitId":"LimZiJia"},"content":"    void emptyEventDateTimeShouldThrowEmptyArgumentException1() {","lastModifiedDate":"2024-02-02"},{"lineNumber":207,"author":{"gitId":"LimZiJia"},"content":"        boolean thrown \u003d false;","lastModifiedDate":"2024-02-02"},{"lineNumber":208,"author":{"gitId":"LimZiJia"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":209,"author":{"gitId":"LimZiJia"},"content":"            TaskList tl  \u003d new TaskList();","lastModifiedDate":"2024-02-02"},{"lineNumber":210,"author":{"gitId":"LimZiJia"},"content":"            String in \u003d \"event test /from  /to 2024-01-02\";","lastModifiedDate":"2024-02-02"},{"lineNumber":211,"author":{"gitId":"LimZiJia"},"content":"            tl \u003d p.addTask(in, tl);","lastModifiedDate":"2024-02-02"},{"lineNumber":212,"author":{"gitId":"LimZiJia"},"content":"        } catch (DukeEmptyArgumentException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":213,"author":{"gitId":"LimZiJia"},"content":"            thrown \u003d true;","lastModifiedDate":"2024-02-02"},{"lineNumber":214,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":215,"author":{"gitId":"LimZiJia"},"content":"        assertTrue(thrown);","lastModifiedDate":"2024-02-02"},{"lineNumber":216,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":217,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":218,"author":{"gitId":"LimZiJia"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":219,"author":{"gitId":"LimZiJia"},"content":"    void emptyEventDateTimeShouldThrowEmptyArgumentException2() {","lastModifiedDate":"2024-02-02"},{"lineNumber":220,"author":{"gitId":"LimZiJia"},"content":"        boolean thrown \u003d false;","lastModifiedDate":"2024-02-02"},{"lineNumber":221,"author":{"gitId":"LimZiJia"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":222,"author":{"gitId":"LimZiJia"},"content":"            TaskList tl  \u003d new TaskList();","lastModifiedDate":"2024-02-02"},{"lineNumber":223,"author":{"gitId":"LimZiJia"},"content":"            String in \u003d \"event test /from 2024-01-02 /to \";","lastModifiedDate":"2024-02-02"},{"lineNumber":224,"author":{"gitId":"LimZiJia"},"content":"            tl \u003d p.addTask(in, tl);","lastModifiedDate":"2024-02-02"},{"lineNumber":225,"author":{"gitId":"LimZiJia"},"content":"        } catch (DukeEmptyArgumentException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":226,"author":{"gitId":"LimZiJia"},"content":"            thrown \u003d true;","lastModifiedDate":"2024-02-02"},{"lineNumber":227,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":228,"author":{"gitId":"LimZiJia"},"content":"        assertTrue(thrown);","lastModifiedDate":"2024-02-02"},{"lineNumber":229,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":230,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":231,"author":{"gitId":"LimZiJia"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":232,"author":{"gitId":"LimZiJia"},"content":"    void erroneousEventShouldThrowErroneousArgumentException1() {","lastModifiedDate":"2024-02-02"},{"lineNumber":233,"author":{"gitId":"LimZiJia"},"content":"        boolean thrown \u003d false;","lastModifiedDate":"2024-02-02"},{"lineNumber":234,"author":{"gitId":"LimZiJia"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":235,"author":{"gitId":"LimZiJia"},"content":"            TaskList tl  \u003d new TaskList();","lastModifiedDate":"2024-02-02"},{"lineNumber":236,"author":{"gitId":"LimZiJia"},"content":"            String in \u003d \"event test /from2024-01-01 /to 2024-01-02\";","lastModifiedDate":"2024-02-02"},{"lineNumber":237,"author":{"gitId":"LimZiJia"},"content":"            tl \u003d p.addTask(in, tl);","lastModifiedDate":"2024-02-02"},{"lineNumber":238,"author":{"gitId":"LimZiJia"},"content":"        } catch (DukeErroneousArgumentException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":239,"author":{"gitId":"LimZiJia"},"content":"            thrown \u003d true;","lastModifiedDate":"2024-02-02"},{"lineNumber":240,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":241,"author":{"gitId":"LimZiJia"},"content":"        assertTrue(thrown);","lastModifiedDate":"2024-02-02"},{"lineNumber":242,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":243,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":244,"author":{"gitId":"LimZiJia"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":245,"author":{"gitId":"LimZiJia"},"content":"    void erroneousEventShouldThrowErroneousArgumentException2() {","lastModifiedDate":"2024-02-02"},{"lineNumber":246,"author":{"gitId":"LimZiJia"},"content":"        boolean thrown \u003d false;","lastModifiedDate":"2024-02-02"},{"lineNumber":247,"author":{"gitId":"LimZiJia"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":248,"author":{"gitId":"LimZiJia"},"content":"            TaskList tl  \u003d new TaskList();","lastModifiedDate":"2024-02-02"},{"lineNumber":249,"author":{"gitId":"LimZiJia"},"content":"            String in \u003d \"event test /from 2024-01-01 /to2024-01-02\";","lastModifiedDate":"2024-02-02"},{"lineNumber":250,"author":{"gitId":"LimZiJia"},"content":"            tl \u003d p.addTask(in, tl);","lastModifiedDate":"2024-02-02"},{"lineNumber":251,"author":{"gitId":"LimZiJia"},"content":"        } catch (DukeErroneousArgumentException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":252,"author":{"gitId":"LimZiJia"},"content":"            thrown \u003d true;","lastModifiedDate":"2024-02-02"},{"lineNumber":253,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":254,"author":{"gitId":"LimZiJia"},"content":"        assertTrue(thrown);","lastModifiedDate":"2024-02-02"},{"lineNumber":255,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":256,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":257,"author":{"gitId":"LimZiJia"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":258,"author":{"gitId":"LimZiJia"},"content":"    void erroneousEventFormatShouldThrowDateTimeException1() {","lastModifiedDate":"2024-02-02"},{"lineNumber":259,"author":{"gitId":"LimZiJia"},"content":"        boolean thrown \u003d false;","lastModifiedDate":"2024-02-02"},{"lineNumber":260,"author":{"gitId":"LimZiJia"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":261,"author":{"gitId":"LimZiJia"},"content":"            TaskList tl  \u003d new TaskList();","lastModifiedDate":"2024-02-02"},{"lineNumber":262,"author":{"gitId":"LimZiJia"},"content":"            String in \u003d \"event test /from 2024-00-01 /to 2024-01-02\";","lastModifiedDate":"2024-02-02"},{"lineNumber":263,"author":{"gitId":"LimZiJia"},"content":"            tl \u003d p.addTask(in, tl);","lastModifiedDate":"2024-02-02"},{"lineNumber":264,"author":{"gitId":"LimZiJia"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":265,"author":{"gitId":"LimZiJia"},"content":"            thrown \u003d true;","lastModifiedDate":"2024-02-02"},{"lineNumber":266,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":267,"author":{"gitId":"LimZiJia"},"content":"        assertTrue(thrown);","lastModifiedDate":"2024-02-02"},{"lineNumber":268,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":269,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":270,"author":{"gitId":"LimZiJia"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":271,"author":{"gitId":"LimZiJia"},"content":"    void erroneousEventFormatShouldThrowDateTimeException2() {","lastModifiedDate":"2024-02-02"},{"lineNumber":272,"author":{"gitId":"LimZiJia"},"content":"        boolean thrown \u003d false;","lastModifiedDate":"2024-02-02"},{"lineNumber":273,"author":{"gitId":"LimZiJia"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":274,"author":{"gitId":"LimZiJia"},"content":"            TaskList tl  \u003d new TaskList();","lastModifiedDate":"2024-02-02"},{"lineNumber":275,"author":{"gitId":"LimZiJia"},"content":"            String in \u003d \"event test /from 2024-01-01 /to 2024-00-02\";","lastModifiedDate":"2024-02-02"},{"lineNumber":276,"author":{"gitId":"LimZiJia"},"content":"            tl \u003d p.addTask(in, tl);","lastModifiedDate":"2024-02-02"},{"lineNumber":277,"author":{"gitId":"LimZiJia"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":278,"author":{"gitId":"LimZiJia"},"content":"            thrown \u003d true;","lastModifiedDate":"2024-02-02"},{"lineNumber":279,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":280,"author":{"gitId":"LimZiJia"},"content":"        assertTrue(thrown);","lastModifiedDate":"2024-02-02"},{"lineNumber":281,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":282,"author":{"gitId":"LimZiJia"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"LimZiJia":282}},{"path":"src/test/tasks/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package tasks;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"import org.junit.jupiter.api.extension.ExtendWith;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"import org.mockito.junit.jupiter.MockitoExtension;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"LimZiJia"},"content":"import java.util.List;","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"LimZiJia"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"LimZiJia"},"content":"@ExtendWith(MockitoExtension.class)","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"LimZiJia"},"content":"class TaskListTest {","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"LimZiJia"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"LimZiJia"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"LimZiJia"},"content":"    @BeforeEach","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"LimZiJia"},"content":"    public void setUpStreams() {","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"LimZiJia"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"LimZiJia"},"content":"    @AfterEach","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"LimZiJia"},"content":"    public void restoreStreams() {","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"LimZiJia"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"LimZiJia"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"LimZiJia"},"content":"    void printListShouldPrintList() {","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"LimZiJia"},"content":"        Todo todo \u003d new Todo(\"task1\");","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"LimZiJia"},"content":"        List\u003cTask\u003e lst \u003d new ArrayList\u003c\u003e(List.of(todo));","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"LimZiJia"},"content":"        TaskList tl \u003d new TaskList(lst);","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"LimZiJia"},"content":"        tl.printList();","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"LimZiJia"},"content":"        assertEquals(\"Here are the tasks in your list:\"","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"LimZiJia"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"LimZiJia"},"content":"                + \"1. \"","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"LimZiJia"},"content":"                + todo, outContent.toString());","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"LimZiJia"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"LimZiJia"},"content":"    void convertTasksToStringForm() {","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"LimZiJia"},"content":"        Todo todo \u003d new Todo(\"task1\");","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"LimZiJia"},"content":"        Deadline deadline \u003d new Deadline(\"task2\", \"2024-01-01\");","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"LimZiJia"},"content":"        Event event \u003d new Event(\"task3\", \"2024-01-01\", \"2024-01-02\");","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"LimZiJia"},"content":"        List\u003cTask\u003e lst \u003d new ArrayList\u003c\u003e(Arrays.asList(todo, deadline, event));","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"LimZiJia"},"content":"        TaskList tl \u003d new TaskList(lst);","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"LimZiJia"},"content":"        List\u003cString\u003e str \u003d new ArrayList\u003c\u003e(Arrays.asList(todo.toSavedString(),","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"LimZiJia"},"content":"                deadline.toSavedString(),","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"LimZiJia"},"content":"                event.toSavedString()));","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"LimZiJia"},"content":"        assertEquals(tl.taskToSavedString(), str);","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"LimZiJia"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"LimZiJia"},"content":"    void findShouldFindTasksAndPrint() {","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"LimZiJia"},"content":"        Todo todo \u003d new Todo(\"tass1\");","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"LimZiJia"},"content":"        Deadline deadline \u003d new Deadline(\"task2\", \"2024-01-01\");","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"LimZiJia"},"content":"        Event event \u003d new Event(\"task3\", \"2024-01-01\", \"2024-01-02\");","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"LimZiJia"},"content":"        List\u003cTask\u003e lst \u003d new ArrayList\u003c\u003e(Arrays.asList(todo, deadline, event));","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"LimZiJia"},"content":"        TaskList tl \u003d new TaskList(lst);","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"LimZiJia"},"content":"        tl.find(\"find task\");","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"LimZiJia"},"content":"        assertEquals(\"Here are the matching tasks in your list:\"","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"LimZiJia"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"LimZiJia"},"content":"                + \"1. \"","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"LimZiJia"},"content":"                + deadline","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"LimZiJia"},"content":"                + \"2. \"","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"LimZiJia"},"content":"                + event, outContent.toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"LimZiJia"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"LimZiJia":71}},{"path":"text-ui-test/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"T,0,task1","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"LimZiJia"},"content":"D,0,task2 ,2024-01-31","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"E,0,task3,2024-02-01,2024-02-28","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"LimZiJia":3}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"delete 1","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"LimZiJia"},"content":"delete 1","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"delete 1","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":"todo task1","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"deadline task2 /by 2024-01-31","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"event task3 /from 2024-02-01 /to 2024-02-28","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"no such command","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"todo for deleting","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":"deadline task4 /wrong argument","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":"event task5 /from 24-02-01 /to 2024-02-28","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"event task6 /from 2024-99-01 /to 2024-02-28","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":"event task7 /from 2024-02-01 /to 2024-02-30","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"LimZiJia"},"content":"event task7 /from 2024-02-28 /to 2024-02-01","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"LimZiJia"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"LimZiJia"},"content":"mark 1","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"LimZiJia"},"content":"mark 2","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"LimZiJia"},"content":"mark 3","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"LimZiJia"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"LimZiJia"},"content":"unmark 1","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"LimZiJia"},"content":"unmark 2","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"LimZiJia"},"content":"unmark 3","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"LimZiJia"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"LimZiJia"},"content":"mark 5","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"LimZiJia"},"content":"unmark 5","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"LimZiJia"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"LimZiJia"},"content":"delete 4","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"LimZiJia"},"content":"save","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"LimZiJia"},"content":"bye","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"LimZiJia":28}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":"javac -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\tasks\\*.java","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"javac -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":"javac -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\exceptions\\*.java","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"LimZiJia"},"content":"java -cp ..\\bin\\duke Duke.class \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"LimZiJia":5,"-":19}}]
