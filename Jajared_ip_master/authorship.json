[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jajared"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Jajared"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Jajared"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Jajared"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"Jajared"},"content":"  protected LocalDate by;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"Jajared"},"content":"  public static Deadline createFromInput(String input) throws DukeException {","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"Jajared"},"content":"    try {","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"Jajared"},"content":"      String[] parts \u003d input.split(\"/by \");","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"Jajared"},"content":"      String description \u003d parts[0].split(\"deadline \")[1];","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"Jajared"},"content":"      String by \u003d parts[1];","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"Jajared"},"content":"      DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Jajared"},"content":"      LocalDate parsedBy \u003d LocalDate.parse(by, formatter);","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Jajared"},"content":"      return new Deadline(description, parsedBy);","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"Jajared"},"content":"    } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"Jajared"},"content":"      throw new DukeException(\"Invalid deadline format. Please use \u0027deadline description /by date\u0027.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"Jajared"},"content":"    } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Jajared"},"content":"      throw new DukeException(\"Invalid date format. Please use \u0027yyyy-MM-dd\u0027.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"Jajared"},"content":"  }","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"Jajared"},"content":"  public Deadline(String description, LocalDate by) {","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"Jajared"},"content":"    super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"Jajared"},"content":"    this.by \u003d by;","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"Jajared"},"content":"  }","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"Jajared"},"content":"  @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"Jajared"},"content":"  public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"Jajared"},"content":"    return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"Jajared"},"content":"  }","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"Jajared"},"content":"  @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"Jajared"},"content":"  public String toFileString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"Jajared"},"content":"    return \"D | \" + (this.isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + by;","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"Jajared"},"content":"  }","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"Jajared"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"Jajared":38}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jajared"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"Jajared"},"content":"  public DukeException(String message) {","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"Jajared"},"content":"    super(message);","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"Jajared"},"content":"  }","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"Jajared"},"content":"  public void printErrorMessage() {","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"Jajared"},"content":"    System.out.println(getMessage());","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"Jajared"},"content":"  }","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"Jajared"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"Jajared":9}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jajared"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Jajared"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Jajared"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Jajared"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"Jajared"},"content":"  protected LocalDate from;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Jajared"},"content":"  protected LocalDate by;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"Jajared"},"content":"  public static Event createFromInput(String input) throws DukeException {","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"Jajared"},"content":"    try {","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"Jajared"},"content":"      String[] parts \u003d input.split(\"/from | /to \");","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"Jajared"},"content":"      String description \u003d parts[0].split(\"event \")[1];","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"Jajared"},"content":"      String at \u003d parts[1];","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"Jajared"},"content":"      String by \u003d parts[2];","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"Jajared"},"content":"      DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"Jajared"},"content":"      LocalDate parsedAt \u003d LocalDate.parse(at, formatter);","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Jajared"},"content":"      LocalDate parsedBy \u003d LocalDate.parse(by, formatter);","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Jajared"},"content":"      return new Event(description, parsedAt, parsedBy);","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Jajared"},"content":"    } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"Jajared"},"content":"      throw new DukeException(\"Invalid event format. Please use \u0027event description /from start /to end\u0027.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"Jajared"},"content":"    } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"Jajared"},"content":"      throw new DukeException(\"Invalid date format. Please use \u0027yyyy-MM-dd\u0027.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"Jajared"},"content":"  }","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"Jajared"},"content":"  public Event(String description, LocalDate from, LocalDate by) {","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"Jajared"},"content":"    super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"Jajared"},"content":"    this.from \u003d from;","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"Jajared"},"content":"    this.by \u003d by;","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"Jajared"},"content":"  }","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"Jajared"},"content":"  @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"Jajared"},"content":"  public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"Jajared"},"content":"    return \"[E]\" + super.toString() + \" (from: \" + from.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \" to: \"","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"Jajared"},"content":"        + by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"Jajared"},"content":"  }","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"Jajared"},"content":"  @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"Jajared"},"content":"  public String toFileString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"Jajared"},"content":"    return \"E | \" + (this.isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + from + \" | \" + by;","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"Jajared"},"content":"  }","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"Jajared"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"Jajared":43}},{"path":"src/main/java/GeePeeTee.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jajared"},"content":"import java.io.File;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Jajared"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Jajared"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"Jajared"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"Jajared"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"Jajared"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"Jajared"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"Jajared"},"content":"public class GeePeeTee {","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"Jajared"},"content":"  private static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();// Array of tasks","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"Jajared"},"content":"  public static void main(String[] args) {","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"Jajared"},"content":"    try {","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"Jajared"},"content":"      taskList \u003d loadTaskList();","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"Jajared"},"content":"    } catch (FileNotFoundException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"Jajared"},"content":"      System.out.println(\"File not found.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"Jajared"},"content":"    } catch (IOException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"Jajared"},"content":"      System.out.println(\"Error loading the task list file.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"Jajared"},"content":"    } catch (DukeException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"Jajared"},"content":"      e.printErrorMessage();","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"Jajared"},"content":"    String input \u003d \"\";","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"Jajared"},"content":"    String botName \u003d \"GeePeeTee\";","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"Jajared"},"content":"    // Welcome Message","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"Jajared"},"content":"    System.out.println(\"Hello! I\u0027m \" + botName + \"\\nWhat can I do for you?\");","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"Jajared"},"content":"    Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"Jajared"},"content":"    while (!input.equals(\"bye\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"Jajared"},"content":"      try {","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"Jajared"},"content":"        input \u003d scanner.nextLine();","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"Jajared"},"content":"        System.out.println(\"\\n--------------------------------------------------\");","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"Jajared"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"Jajared"},"content":"          scanner.close();","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"Jajared"},"content":"          System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"Jajared"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"Jajared"},"content":"        processInput(input);","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"Jajared"},"content":"      } catch (DukeException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"Jajared"},"content":"        e.printErrorMessage();","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"Jajared"},"content":"      }","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"Jajared"},"content":"      System.out.println(\"--------------------------------------------------\\n\");","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"Jajared"},"content":"  }","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"Jajared"},"content":"  /*","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"Jajared"},"content":"   * Process input","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"Jajared"},"content":"   */","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"Jajared"},"content":"  private static void processInput(String input) throws DukeException {","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"Jajared"},"content":"    String command \u003d input.split(\" \")[0];","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"Jajared"},"content":"    switch (command) {","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"Jajared"},"content":"      // Help command","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"Jajared"},"content":"      case \"help\":","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"Jajared"},"content":"        getListOfCommands();","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"Jajared"},"content":"        break;","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"Jajared"},"content":"      // Bye command","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"Jajared"},"content":"      case \"bye\":","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"Jajared"},"content":"        break;","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"Jajared"},"content":"      // List command","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"Jajared"},"content":"      case \"list\":","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"Jajared"},"content":"        printList(taskList);","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"Jajared"},"content":"        break;","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"Jajared"},"content":"      // Mark command","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"Jajared"},"content":"      case \"mark\":","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"Jajared"},"content":"        if (input.trim().equals(\"mark\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"Jajared"},"content":"          throw new DukeException(\"The index of a task cannot be empty.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"Jajared"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"Jajared"},"content":"        int markIndex \u003d Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"Jajared"},"content":"        if (markIndex \u003e getTaskCount()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"Jajared"},"content":"          throw new DukeException(\"The index of a task cannot be greater than the number of tasks.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":73,"author":{"gitId":"Jajared"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":74,"author":{"gitId":"Jajared"},"content":"        if (markIndex \u003c\u003d 0) {","lastModifiedDate":"2024-01-30"},{"lineNumber":75,"author":{"gitId":"Jajared"},"content":"          throw new DukeException(\"The index of a task cannot be 0 or negative.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":76,"author":{"gitId":"Jajared"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":77,"author":{"gitId":"Jajared"},"content":"        Task taskToMark \u003d taskList.get(markIndex - 1);","lastModifiedDate":"2024-01-30"},{"lineNumber":78,"author":{"gitId":"Jajared"},"content":"        if (taskToMark \u003d\u003d null) {","lastModifiedDate":"2024-01-30"},{"lineNumber":79,"author":{"gitId":"Jajared"},"content":"          throw new DukeException(\"The task at index \" + markIndex + \" does not exist.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":80,"author":{"gitId":"Jajared"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":81,"author":{"gitId":"Jajared"},"content":"        taskToMark.markAsDone();","lastModifiedDate":"2024-01-30"},{"lineNumber":82,"author":{"gitId":"Jajared"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-01-30"},{"lineNumber":83,"author":{"gitId":"Jajared"},"content":"        System.out.println(taskToMark);","lastModifiedDate":"2024-01-30"},{"lineNumber":84,"author":{"gitId":"Jajared"},"content":"        saveTaskList();","lastModifiedDate":"2024-01-30"},{"lineNumber":85,"author":{"gitId":"Jajared"},"content":"        break;","lastModifiedDate":"2024-01-30"},{"lineNumber":86,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":87,"author":{"gitId":"Jajared"},"content":"      // Unmark command","lastModifiedDate":"2024-01-30"},{"lineNumber":88,"author":{"gitId":"Jajared"},"content":"      case \"unmark\":","lastModifiedDate":"2024-01-30"},{"lineNumber":89,"author":{"gitId":"Jajared"},"content":"        if (input.trim().equals(\"unmark\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":90,"author":{"gitId":"Jajared"},"content":"          throw new DukeException(\"The index of a task cannot be empty.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":91,"author":{"gitId":"Jajared"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":92,"author":{"gitId":"Jajared"},"content":"        int unmarkIndex \u003d Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2024-01-30"},{"lineNumber":93,"author":{"gitId":"Jajared"},"content":"        if (unmarkIndex \u003e getTaskCount()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":94,"author":{"gitId":"Jajared"},"content":"          throw new DukeException(\"The index of a task cannot be greater than the number of tasks.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":95,"author":{"gitId":"Jajared"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":96,"author":{"gitId":"Jajared"},"content":"        if (unmarkIndex \u003c\u003d 0) {","lastModifiedDate":"2024-01-30"},{"lineNumber":97,"author":{"gitId":"Jajared"},"content":"          throw new DukeException(\"The index of a task cannot be 0 or negative.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":98,"author":{"gitId":"Jajared"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":99,"author":{"gitId":"Jajared"},"content":"        Task taskToUnmark \u003d taskList.get(unmarkIndex - 1);","lastModifiedDate":"2024-01-30"},{"lineNumber":100,"author":{"gitId":"Jajared"},"content":"        if (taskToUnmark \u003d\u003d null) {","lastModifiedDate":"2024-01-30"},{"lineNumber":101,"author":{"gitId":"Jajared"},"content":"          throw new DukeException(\"The task at index \" + unmarkIndex + \" does not exist.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":102,"author":{"gitId":"Jajared"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":103,"author":{"gitId":"Jajared"},"content":"        taskToUnmark.unmarkAsDone();","lastModifiedDate":"2024-01-30"},{"lineNumber":104,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":105,"author":{"gitId":"Jajared"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-01-30"},{"lineNumber":106,"author":{"gitId":"Jajared"},"content":"        System.out.println(taskToUnmark);","lastModifiedDate":"2024-01-30"},{"lineNumber":107,"author":{"gitId":"Jajared"},"content":"        saveTaskList();","lastModifiedDate":"2024-01-30"},{"lineNumber":108,"author":{"gitId":"Jajared"},"content":"        break;","lastModifiedDate":"2024-01-30"},{"lineNumber":109,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":110,"author":{"gitId":"Jajared"},"content":"      // Delete command","lastModifiedDate":"2024-01-30"},{"lineNumber":111,"author":{"gitId":"Jajared"},"content":"      case \"delete\":","lastModifiedDate":"2024-01-30"},{"lineNumber":112,"author":{"gitId":"Jajared"},"content":"        if (input.trim().equals(\"delete\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":113,"author":{"gitId":"Jajared"},"content":"          throw new DukeException(\"The index of a task cannot be empty.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":114,"author":{"gitId":"Jajared"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":115,"author":{"gitId":"Jajared"},"content":"        int index \u003d Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2024-01-30"},{"lineNumber":116,"author":{"gitId":"Jajared"},"content":"        if (index \u003e getTaskCount()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":117,"author":{"gitId":"Jajared"},"content":"          throw new DukeException(\"The index of a task cannot be greater than the number of tasks.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":118,"author":{"gitId":"Jajared"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":119,"author":{"gitId":"Jajared"},"content":"        if (index \u003c\u003d 0) {","lastModifiedDate":"2024-01-30"},{"lineNumber":120,"author":{"gitId":"Jajared"},"content":"          throw new DukeException(\"The index of a task cannot be 0 or negative.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":121,"author":{"gitId":"Jajared"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":122,"author":{"gitId":"Jajared"},"content":"        if (taskList.get(index - 1) \u003d\u003d null) {","lastModifiedDate":"2024-01-30"},{"lineNumber":123,"author":{"gitId":"Jajared"},"content":"          throw new DukeException(\"The task at index \" + index + \" does not exist.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":124,"author":{"gitId":"Jajared"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":125,"author":{"gitId":"Jajared"},"content":"        removeTask(index);","lastModifiedDate":"2024-01-30"},{"lineNumber":126,"author":{"gitId":"Jajared"},"content":"        saveTaskList();","lastModifiedDate":"2024-01-30"},{"lineNumber":127,"author":{"gitId":"Jajared"},"content":"        break;","lastModifiedDate":"2024-01-30"},{"lineNumber":128,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":129,"author":{"gitId":"Jajared"},"content":"      // Create event command","lastModifiedDate":"2024-01-30"},{"lineNumber":130,"author":{"gitId":"Jajared"},"content":"      case \"event\":","lastModifiedDate":"2024-01-30"},{"lineNumber":131,"author":{"gitId":"Jajared"},"content":"        Event newEvent \u003d Event.createFromInput(input);","lastModifiedDate":"2024-01-30"},{"lineNumber":132,"author":{"gitId":"Jajared"},"content":"        addTask(newEvent);","lastModifiedDate":"2024-01-30"},{"lineNumber":133,"author":{"gitId":"Jajared"},"content":"        saveTaskList();","lastModifiedDate":"2024-01-30"},{"lineNumber":134,"author":{"gitId":"Jajared"},"content":"        break;","lastModifiedDate":"2024-01-30"},{"lineNumber":135,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":136,"author":{"gitId":"Jajared"},"content":"      // Create deadline command","lastModifiedDate":"2024-01-30"},{"lineNumber":137,"author":{"gitId":"Jajared"},"content":"      case \"deadline\":","lastModifiedDate":"2024-01-30"},{"lineNumber":138,"author":{"gitId":"Jajared"},"content":"        Deadline newDeadline \u003d Deadline.createFromInput(input);","lastModifiedDate":"2024-01-30"},{"lineNumber":139,"author":{"gitId":"Jajared"},"content":"        addTask(newDeadline);","lastModifiedDate":"2024-01-30"},{"lineNumber":140,"author":{"gitId":"Jajared"},"content":"        saveTaskList();","lastModifiedDate":"2024-01-30"},{"lineNumber":141,"author":{"gitId":"Jajared"},"content":"        break;","lastModifiedDate":"2024-01-30"},{"lineNumber":142,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":143,"author":{"gitId":"Jajared"},"content":"      // Create todo command","lastModifiedDate":"2024-01-30"},{"lineNumber":144,"author":{"gitId":"Jajared"},"content":"      case \"todo\":","lastModifiedDate":"2024-01-30"},{"lineNumber":145,"author":{"gitId":"Jajared"},"content":"        ToDo newToDo \u003d ToDo.createFromInput(input);","lastModifiedDate":"2024-01-30"},{"lineNumber":146,"author":{"gitId":"Jajared"},"content":"        addTask(newToDo);","lastModifiedDate":"2024-01-30"},{"lineNumber":147,"author":{"gitId":"Jajared"},"content":"        saveTaskList();","lastModifiedDate":"2024-01-30"},{"lineNumber":148,"author":{"gitId":"Jajared"},"content":"        break;","lastModifiedDate":"2024-01-30"},{"lineNumber":149,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":150,"author":{"gitId":"Jajared"},"content":"      // Invalid command","lastModifiedDate":"2024-01-30"},{"lineNumber":151,"author":{"gitId":"Jajared"},"content":"      default:","lastModifiedDate":"2024-01-30"},{"lineNumber":152,"author":{"gitId":"Jajared"},"content":"        throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2024-01-30"},{"lineNumber":153,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":154,"author":{"gitId":"Jajared"},"content":"  }","lastModifiedDate":"2024-01-30"},{"lineNumber":155,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":156,"author":{"gitId":"Jajared"},"content":"  /*","lastModifiedDate":"2024-01-30"},{"lineNumber":157,"author":{"gitId":"Jajared"},"content":"   * Prints the list of tasks","lastModifiedDate":"2024-01-30"},{"lineNumber":158,"author":{"gitId":"Jajared"},"content":"   */","lastModifiedDate":"2024-01-30"},{"lineNumber":159,"author":{"gitId":"Jajared"},"content":"  private static void printList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2024-01-30"},{"lineNumber":160,"author":{"gitId":"Jajared"},"content":"    System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-01-30"},{"lineNumber":161,"author":{"gitId":"Jajared"},"content":"    for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2024-01-30"},{"lineNumber":162,"author":{"gitId":"Jajared"},"content":"      System.out.println((i + 1) + \". \" + list.get(i));","lastModifiedDate":"2024-01-30"},{"lineNumber":163,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":164,"author":{"gitId":"Jajared"},"content":"  }","lastModifiedDate":"2024-01-30"},{"lineNumber":165,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":166,"author":{"gitId":"Jajared"},"content":"  /*","lastModifiedDate":"2024-01-30"},{"lineNumber":167,"author":{"gitId":"Jajared"},"content":"   * Returns the number of tasks in the list","lastModifiedDate":"2024-01-30"},{"lineNumber":168,"author":{"gitId":"Jajared"},"content":"   */","lastModifiedDate":"2024-01-30"},{"lineNumber":169,"author":{"gitId":"Jajared"},"content":"  private static int getTaskCount() {","lastModifiedDate":"2024-01-30"},{"lineNumber":170,"author":{"gitId":"Jajared"},"content":"    return taskList.size();","lastModifiedDate":"2024-01-30"},{"lineNumber":171,"author":{"gitId":"Jajared"},"content":"  }","lastModifiedDate":"2024-01-30"},{"lineNumber":172,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":173,"author":{"gitId":"Jajared"},"content":"  /*","lastModifiedDate":"2024-01-30"},{"lineNumber":174,"author":{"gitId":"Jajared"},"content":"   * Return number of task message","lastModifiedDate":"2024-01-30"},{"lineNumber":175,"author":{"gitId":"Jajared"},"content":"   */","lastModifiedDate":"2024-01-30"},{"lineNumber":176,"author":{"gitId":"Jajared"},"content":"  private static String getTaskCountMessage() {","lastModifiedDate":"2024-01-30"},{"lineNumber":177,"author":{"gitId":"Jajared"},"content":"    if (getTaskCount() \u003d\u003d 1) {","lastModifiedDate":"2024-01-30"},{"lineNumber":178,"author":{"gitId":"Jajared"},"content":"      return \"Now you have \" + getTaskCount() + \" task in the list.\";","lastModifiedDate":"2024-01-30"},{"lineNumber":179,"author":{"gitId":"Jajared"},"content":"    } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":180,"author":{"gitId":"Jajared"},"content":"      return \"Now you have \" + getTaskCount() + \" tasks in the list.\";","lastModifiedDate":"2024-01-30"},{"lineNumber":181,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":182,"author":{"gitId":"Jajared"},"content":"  }","lastModifiedDate":"2024-01-30"},{"lineNumber":183,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":184,"author":{"gitId":"Jajared"},"content":"  /*","lastModifiedDate":"2024-01-30"},{"lineNumber":185,"author":{"gitId":"Jajared"},"content":"   * Prints available commands","lastModifiedDate":"2024-01-30"},{"lineNumber":186,"author":{"gitId":"Jajared"},"content":"   */","lastModifiedDate":"2024-01-30"},{"lineNumber":187,"author":{"gitId":"Jajared"},"content":"  private static void getListOfCommands() {","lastModifiedDate":"2024-01-30"},{"lineNumber":188,"author":{"gitId":"Jajared"},"content":"    System.out.println(\"Here are the available commands:\");","lastModifiedDate":"2024-01-30"},{"lineNumber":189,"author":{"gitId":"Jajared"},"content":"    System.out.println(\"list\");","lastModifiedDate":"2024-01-30"},{"lineNumber":190,"author":{"gitId":"Jajared"},"content":"    System.out.println(\"todo \u003cdescription\u003e\");","lastModifiedDate":"2024-01-30"},{"lineNumber":191,"author":{"gitId":"Jajared"},"content":"    System.out.println(\"deadline \u003cdescription\u003e /by \u003cdate\u003e\");","lastModifiedDate":"2024-01-30"},{"lineNumber":192,"author":{"gitId":"Jajared"},"content":"    System.out.println(\"event \u003cdescription\u003e /from \u003cdate\u003e /to \u003cdate\u003e\");","lastModifiedDate":"2024-01-30"},{"lineNumber":193,"author":{"gitId":"Jajared"},"content":"    System.out.println(\"delete \u003cindex\u003e\");","lastModifiedDate":"2024-01-30"},{"lineNumber":194,"author":{"gitId":"Jajared"},"content":"    System.out.println(\"mark \u003cindex\u003e\");","lastModifiedDate":"2024-01-30"},{"lineNumber":195,"author":{"gitId":"Jajared"},"content":"    System.out.println(\"unmark \u003cindex\u003e\");","lastModifiedDate":"2024-01-30"},{"lineNumber":196,"author":{"gitId":"Jajared"},"content":"    System.out.println(\"bye\");","lastModifiedDate":"2024-01-30"},{"lineNumber":197,"author":{"gitId":"Jajared"},"content":"  }","lastModifiedDate":"2024-01-30"},{"lineNumber":198,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":199,"author":{"gitId":"Jajared"},"content":"  /*","lastModifiedDate":"2024-01-30"},{"lineNumber":200,"author":{"gitId":"Jajared"},"content":"   * Adds a task to the list","lastModifiedDate":"2024-01-30"},{"lineNumber":201,"author":{"gitId":"Jajared"},"content":"   */","lastModifiedDate":"2024-01-30"},{"lineNumber":202,"author":{"gitId":"Jajared"},"content":"  private static void addTask(Task task) {","lastModifiedDate":"2024-01-30"},{"lineNumber":203,"author":{"gitId":"Jajared"},"content":"    System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-30"},{"lineNumber":204,"author":{"gitId":"Jajared"},"content":"    taskList.add(task);","lastModifiedDate":"2024-01-30"},{"lineNumber":205,"author":{"gitId":"Jajared"},"content":"    System.out.println(task);","lastModifiedDate":"2024-01-30"},{"lineNumber":206,"author":{"gitId":"Jajared"},"content":"    System.out.println(getTaskCountMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":207,"author":{"gitId":"Jajared"},"content":"  }","lastModifiedDate":"2024-01-30"},{"lineNumber":208,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":209,"author":{"gitId":"Jajared"},"content":"  /*","lastModifiedDate":"2024-01-30"},{"lineNumber":210,"author":{"gitId":"Jajared"},"content":"   * Removes a task from the list","lastModifiedDate":"2024-01-30"},{"lineNumber":211,"author":{"gitId":"Jajared"},"content":"   */","lastModifiedDate":"2024-01-30"},{"lineNumber":212,"author":{"gitId":"Jajared"},"content":"  private static void removeTask(int index) {","lastModifiedDate":"2024-01-30"},{"lineNumber":213,"author":{"gitId":"Jajared"},"content":"    System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-01-30"},{"lineNumber":214,"author":{"gitId":"Jajared"},"content":"    System.out.println(taskList.get(index - 1));","lastModifiedDate":"2024-01-30"},{"lineNumber":215,"author":{"gitId":"Jajared"},"content":"    taskList.remove(index - 1);","lastModifiedDate":"2024-01-30"},{"lineNumber":216,"author":{"gitId":"Jajared"},"content":"    System.out.println(getTaskCountMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":217,"author":{"gitId":"Jajared"},"content":"  }","lastModifiedDate":"2024-01-30"},{"lineNumber":218,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":219,"author":{"gitId":"Jajared"},"content":"  /*","lastModifiedDate":"2024-01-30"},{"lineNumber":220,"author":{"gitId":"Jajared"},"content":"   * Load task list from hard disk","lastModifiedDate":"2024-01-30"},{"lineNumber":221,"author":{"gitId":"Jajared"},"content":"   */","lastModifiedDate":"2024-01-30"},{"lineNumber":222,"author":{"gitId":"Jajared"},"content":"  private static ArrayList\u003cTask\u003e loadTaskList() throws FileNotFoundException, DukeException, IOException {","lastModifiedDate":"2024-01-30"},{"lineNumber":223,"author":{"gitId":"Jajared"},"content":"    ArrayList\u003cTask\u003e result \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-01-30"},{"lineNumber":224,"author":{"gitId":"Jajared"},"content":"    File f \u003d new File(\"./data/GeePeeTee.txt\");","lastModifiedDate":"2024-01-30"},{"lineNumber":225,"author":{"gitId":"Jajared"},"content":"    Scanner s \u003d new Scanner(f);","lastModifiedDate":"2024-01-30"},{"lineNumber":226,"author":{"gitId":"Jajared"},"content":"    while (s.hasNext()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":227,"author":{"gitId":"Jajared"},"content":"      String line \u003d s.nextLine();","lastModifiedDate":"2024-01-30"},{"lineNumber":228,"author":{"gitId":"Jajared"},"content":"      String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2024-01-30"},{"lineNumber":229,"author":{"gitId":"Jajared"},"content":"      String type \u003d parts[0];","lastModifiedDate":"2024-01-30"},{"lineNumber":230,"author":{"gitId":"Jajared"},"content":"      boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2024-01-30"},{"lineNumber":231,"author":{"gitId":"Jajared"},"content":"      String description \u003d parts[2];","lastModifiedDate":"2024-01-30"},{"lineNumber":232,"author":{"gitId":"Jajared"},"content":"      Task task;","lastModifiedDate":"2024-01-30"},{"lineNumber":233,"author":{"gitId":"Jajared"},"content":"      switch (type) {","lastModifiedDate":"2024-01-30"},{"lineNumber":234,"author":{"gitId":"Jajared"},"content":"        case \"T\":","lastModifiedDate":"2024-01-30"},{"lineNumber":235,"author":{"gitId":"Jajared"},"content":"          task \u003d new ToDo(description);","lastModifiedDate":"2024-01-30"},{"lineNumber":236,"author":{"gitId":"Jajared"},"content":"          break;","lastModifiedDate":"2024-01-30"},{"lineNumber":237,"author":{"gitId":"Jajared"},"content":"        case \"D\":","lastModifiedDate":"2024-01-30"},{"lineNumber":238,"author":{"gitId":"Jajared"},"content":"          task \u003d new Deadline(description, LocalDate.parse(parts[3]));","lastModifiedDate":"2024-01-31"},{"lineNumber":239,"author":{"gitId":"Jajared"},"content":"          break;","lastModifiedDate":"2024-01-30"},{"lineNumber":240,"author":{"gitId":"Jajared"},"content":"        case \"E\":","lastModifiedDate":"2024-01-30"},{"lineNumber":241,"author":{"gitId":"Jajared"},"content":"          task \u003d new Event(description, LocalDate.parse(parts[3]), LocalDate.parse(parts[4]));","lastModifiedDate":"2024-01-31"},{"lineNumber":242,"author":{"gitId":"Jajared"},"content":"          break;","lastModifiedDate":"2024-01-30"},{"lineNumber":243,"author":{"gitId":"Jajared"},"content":"        default:","lastModifiedDate":"2024-01-30"},{"lineNumber":244,"author":{"gitId":"Jajared"},"content":"          throw new DukeException(\"File contains invalid task type.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":245,"author":{"gitId":"Jajared"},"content":"      }","lastModifiedDate":"2024-01-30"},{"lineNumber":246,"author":{"gitId":"Jajared"},"content":"      if (isDone) {","lastModifiedDate":"2024-01-30"},{"lineNumber":247,"author":{"gitId":"Jajared"},"content":"        task.markAsDone();","lastModifiedDate":"2024-01-30"},{"lineNumber":248,"author":{"gitId":"Jajared"},"content":"      }","lastModifiedDate":"2024-01-30"},{"lineNumber":249,"author":{"gitId":"Jajared"},"content":"      result.add(task);","lastModifiedDate":"2024-01-30"},{"lineNumber":250,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":251,"author":{"gitId":"Jajared"},"content":"    s.close();","lastModifiedDate":"2024-01-30"},{"lineNumber":252,"author":{"gitId":"Jajared"},"content":"    return result;","lastModifiedDate":"2024-01-30"},{"lineNumber":253,"author":{"gitId":"Jajared"},"content":"  }","lastModifiedDate":"2024-01-30"},{"lineNumber":254,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":255,"author":{"gitId":"Jajared"},"content":"  /*","lastModifiedDate":"2024-01-30"},{"lineNumber":256,"author":{"gitId":"Jajared"},"content":"   * Save task list to hard disk","lastModifiedDate":"2024-01-30"},{"lineNumber":257,"author":{"gitId":"Jajared"},"content":"   */","lastModifiedDate":"2024-01-30"},{"lineNumber":258,"author":{"gitId":"Jajared"},"content":"  private static void saveTaskList() throws DukeException {","lastModifiedDate":"2024-01-30"},{"lineNumber":259,"author":{"gitId":"Jajared"},"content":"    try {","lastModifiedDate":"2024-01-30"},{"lineNumber":260,"author":{"gitId":"Jajared"},"content":"      File file \u003d new File(\"./data/GeePeeTee.txt\");","lastModifiedDate":"2024-01-30"},{"lineNumber":261,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":262,"author":{"gitId":"Jajared"},"content":"      try (FileWriter fw \u003d new FileWriter(file)) {","lastModifiedDate":"2024-01-30"},{"lineNumber":263,"author":{"gitId":"Jajared"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2024-01-30"},{"lineNumber":264,"author":{"gitId":"Jajared"},"content":"          fw.write(task.toFileString() + System.lineSeparator());","lastModifiedDate":"2024-01-30"},{"lineNumber":265,"author":{"gitId":"Jajared"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":266,"author":{"gitId":"Jajared"},"content":"      }","lastModifiedDate":"2024-01-30"},{"lineNumber":267,"author":{"gitId":"Jajared"},"content":"    } catch (IOException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":268,"author":{"gitId":"Jajared"},"content":"      System.out.println(e.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":269,"author":{"gitId":"Jajared"},"content":"      throw new DukeException(\"Error saving the task list file.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":270,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":271,"author":{"gitId":"Jajared"},"content":"  }","lastModifiedDate":"2024-01-30"},{"lineNumber":272,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":273,"author":{"gitId":"Jajared"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"Jajared":273}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jajared"},"content":"public class Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"Jajared"},"content":"  protected String description;","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"Jajared"},"content":"  protected boolean isDone;","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"Jajared"},"content":"  public Task(String description) {","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"Jajared"},"content":"    this.description \u003d description;","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"Jajared"},"content":"    this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"Jajared"},"content":"  }","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"Jajared"},"content":"  public String getStatusIcon() {","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"Jajared"},"content":"    return (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"Jajared"},"content":"  }","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"Jajared"},"content":"  public void markAsDone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"Jajared"},"content":"    this.isDone \u003d true;","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"Jajared"},"content":"  }","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"Jajared"},"content":"  public void unmarkAsDone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"Jajared"},"content":"    this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"Jajared"},"content":"  }","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"Jajared"},"content":"  @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"Jajared"},"content":"  public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"Jajared"},"content":"    return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"Jajared"},"content":"  }","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"Jajared"},"content":"  public String toFileString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"Jajared"},"content":"    return (this.isDone ? \"1\" : \"0\") + \" | \" + this.description;","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"Jajared"},"content":"  }","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"Jajared"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"Jajared":31}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jajared"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"Jajared"},"content":"  public static ToDo createFromInput(String input) throws DukeException {","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"Jajared"},"content":"    try {","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"Jajared"},"content":"      String description \u003d input.split(\"todo \")[1];","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"Jajared"},"content":"      return new ToDo(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"Jajared"},"content":"    } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"Jajared"},"content":"      throw new DukeException(\"Invalid todo format. Please use \u0027todo description\u0027.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"Jajared"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"Jajared"},"content":"  }","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"Jajared"},"content":"  public ToDo(String description) {","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"Jajared"},"content":"    super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"Jajared"},"content":"  }","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"Jajared"},"content":"  @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"Jajared"},"content":"  public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"Jajared"},"content":"    return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"Jajared"},"content":"  }","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"Jajared"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"Jajared"},"content":"  @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"Jajared"},"content":"  public String toFileString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"Jajared"},"content":"    return \"T | \" + (this.isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"Jajared"},"content":"  }","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"Jajared"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"Jajared":25}},{"path":"src/main/java/data/GeePeeTee.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Jajared"},"content":"T | 0 | borrow book","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Jajared":1}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Jajared"},"content":"todo borrow book","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"Jajared"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"Jajared"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"Jajared"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"Jajared"},"content":"mark 2","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"Jajared"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"Jajared"},"content":"bye","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"Jajared":7}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Jajared"},"content":"java -classpath ..\\bin GeePeeTee \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"Jajared":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"Jajared"},"content":"java -classpath ../bin GeePeeTee \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":37,"Jajared":1}}]
