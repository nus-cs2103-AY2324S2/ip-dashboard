[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"SampsonYe1999"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"SampsonYe1999"},"content":"    implementation \u0027org.testng:testng:7.1.0\u0027","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"SampsonYe1999"},"content":"    implementation \u0027junit:junit:4.13.1\u0027","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":17,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"SampsonYe1999"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"SampsonYe1999"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"SampsonYe1999"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"SampsonYe1999"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"SampsonYe1999"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"SampsonYe1999"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"SampsonYe1999"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-24"},{"lineNumber":26,"author":{"gitId":"SampsonYe1999"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"SampsonYe1999"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-24"},{"lineNumber":28,"author":{"gitId":"SampsonYe1999"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-24"},{"lineNumber":29,"author":{"gitId":"SampsonYe1999"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"SampsonYe1999"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-24"},{"lineNumber":31,"author":{"gitId":"SampsonYe1999"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"SampsonYe1999"},"content":"    mainClass.set(\"sam.Launcher\")","lastModifiedDate":"2024-02-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"SampsonYe1999"},"content":"    archiveFileName \u003d \"sam.jar\"","lastModifiedDate":"2024-02-24"},{"lineNumber":54,"author":{"gitId":"SampsonYe1999"},"content":"    archiveBaseName \u003d \"sam\"","lastModifiedDate":"2024-02-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":63,"author":{"gitId":"SampsonYe1999"},"content":"checkstyle {","lastModifiedDate":"2024-02-24"},{"lineNumber":64,"author":{"gitId":"SampsonYe1999"},"content":"    toolVersion \u003d \"10.2\"","lastModifiedDate":"2024-02-24"},{"lineNumber":65,"author":{"gitId":"SampsonYe1999"},"content":"}","lastModifiedDate":"2024-02-24"}],"authorContributionMap":{"-":40,"SampsonYe1999":25}},{"path":"data/Sam.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"SampsonYe1999"},"content":"T | 1 | read book","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"SampsonYe1999"},"content":"T | 1 | attend tutorial","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"SampsonYe1999"},"content":"D | 1 | finish paper | 2023-12-01 1300","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"SampsonYe1999"},"content":"E | 0 | attend interview | 2023-02-22 1200 to 2023-02-22 1300","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"SampsonYe1999"},"content":"E | 0 | career fair | 2024-02-28 1300 to 2024-02-28 1700","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"SampsonYe1999":5}},{"path":"src/main/java/sam/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SampsonYe1999"},"content":"package sam;","lastModifiedDate":"2024-02-24"},{"lineNumber":2,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":3,"author":{"gitId":"SampsonYe1999"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"SampsonYe1999"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"SampsonYe1999"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"SampsonYe1999"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"SampsonYe1999"},"content":"public class Launcher {","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"SampsonYe1999"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"SampsonYe1999"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"SampsonYe1999"},"content":"}","lastModifiedDate":"2024-02-24"}],"authorContributionMap":{"SampsonYe1999":12}},{"path":"src/main/java/sam/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SampsonYe1999"},"content":"package sam;","lastModifiedDate":"2024-02-24"},{"lineNumber":2,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":3,"author":{"gitId":"SampsonYe1999"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"SampsonYe1999"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"SampsonYe1999"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"SampsonYe1999"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"SampsonYe1999"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"SampsonYe1999"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"SampsonYe1999"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"SampsonYe1999"},"content":"import sam.ui.MainWindow;","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"SampsonYe1999"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"SampsonYe1999"},"content":" * The main class of the application.","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"SampsonYe1999"},"content":" *","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"SampsonYe1999"},"content":" * This class serves as the entry point for the JavaFX application.","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"SampsonYe1999"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"SampsonYe1999"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"SampsonYe1999"},"content":"    private final Sam sam \u003d new Sam(Paths.get(\"data\", \"Sam.txt\").toAbsolutePath().toString());","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"SampsonYe1999"},"content":"    @Override","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"SampsonYe1999"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"SampsonYe1999"},"content":"        try {","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"SampsonYe1999"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"SampsonYe1999"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-24"},{"lineNumber":26,"author":{"gitId":"SampsonYe1999"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"SampsonYe1999"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-24"},{"lineNumber":28,"author":{"gitId":"SampsonYe1999"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setSam(sam);","lastModifiedDate":"2024-02-24"},{"lineNumber":29,"author":{"gitId":"SampsonYe1999"},"content":"            stage.show();","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"SampsonYe1999"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-24"},{"lineNumber":31,"author":{"gitId":"SampsonYe1999"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-24"},{"lineNumber":32,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":33,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"SampsonYe1999"},"content":"}","lastModifiedDate":"2024-02-24"}],"authorContributionMap":{"SampsonYe1999":34}},{"path":"src/main/java/sam/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SampsonYe1999"},"content":"package sam;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"SampsonYe1999"},"content":"import sam.command.ByeCommand;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"SampsonYe1999"},"content":"import sam.command.Command;","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"SampsonYe1999"},"content":"import sam.command.DeadlineCommand;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"SampsonYe1999"},"content":"import sam.command.DeleteCommand;","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"SampsonYe1999"},"content":"import sam.command.EventCommand;","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"SampsonYe1999"},"content":"import sam.command.FindCommand;","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"SampsonYe1999"},"content":"import sam.command.ListCommand;","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"SampsonYe1999"},"content":"import sam.command.MarkCommand;","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"SampsonYe1999"},"content":"import sam.command.TodoCommand;","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"SampsonYe1999"},"content":"import sam.command.UnknownCommand;","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"SampsonYe1999"},"content":"import sam.command.UnmarkCommand;","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"SampsonYe1999"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"SampsonYe1999"},"content":" * Represents a Parser object for processing commands.","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"SampsonYe1999"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"SampsonYe1999"},"content":"public class Parser {","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"SampsonYe1999"},"content":"    private enum CommandType {","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"SampsonYe1999"},"content":"        LIST, FIND, TODO, DEADLINE, EVENT, MARK, UNMARK, DELETE, BYE, UNKNOWN","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"SampsonYe1999"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"SampsonYe1999"},"content":"     * Processes a command type and task information to create and return the corresponding Command object.","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":26,"author":{"gitId":"SampsonYe1999"},"content":"     * Based on the provided CommandType, creates an instance of the appropriate Command subclass","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"SampsonYe1999"},"content":"     * and initializes it with the given task information. If the command type is unrecognized,","lastModifiedDate":"2024-02-24"},{"lineNumber":28,"author":{"gitId":"SampsonYe1999"},"content":"     * creates an UnknownCommand object.","lastModifiedDate":"2024-02-24"},{"lineNumber":29,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"SampsonYe1999"},"content":"     * @param commandType the type of command to process","lastModifiedDate":"2024-02-24"},{"lineNumber":31,"author":{"gitId":"SampsonYe1999"},"content":"     * @param taskInfo    additional information related to the command (e.g., task description)","lastModifiedDate":"2024-02-24"},{"lineNumber":32,"author":{"gitId":"SampsonYe1999"},"content":"     * @return the Command object corresponding to the specified command type","lastModifiedDate":"2024-02-24"},{"lineNumber":33,"author":{"gitId":"SampsonYe1999"},"content":"     * @throws SamException if an error occurs during command processing","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"SampsonYe1999"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":35,"author":{"gitId":"SampsonYe1999"},"content":"    private static Command processCommand(CommandType commandType, String taskInfo) throws SamException {","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"SampsonYe1999"},"content":"        switch (commandType) {","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"SampsonYe1999"},"content":"        case LIST:","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"SampsonYe1999"},"content":"            return new ListCommand();","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"SampsonYe1999"},"content":"        case FIND:","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"SampsonYe1999"},"content":"            return new FindCommand(taskInfo);","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"SampsonYe1999"},"content":"        case MARK:","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"SampsonYe1999"},"content":"            return new MarkCommand(taskInfo);","lastModifiedDate":"2024-02-22"},{"lineNumber":43,"author":{"gitId":"SampsonYe1999"},"content":"        case UNMARK:","lastModifiedDate":"2024-02-22"},{"lineNumber":44,"author":{"gitId":"SampsonYe1999"},"content":"            return new UnmarkCommand(taskInfo);","lastModifiedDate":"2024-02-22"},{"lineNumber":45,"author":{"gitId":"SampsonYe1999"},"content":"        case TODO:","lastModifiedDate":"2024-02-22"},{"lineNumber":46,"author":{"gitId":"SampsonYe1999"},"content":"            return new TodoCommand(taskInfo);","lastModifiedDate":"2024-02-22"},{"lineNumber":47,"author":{"gitId":"SampsonYe1999"},"content":"        case DEADLINE:","lastModifiedDate":"2024-02-22"},{"lineNumber":48,"author":{"gitId":"SampsonYe1999"},"content":"            return new DeadlineCommand(taskInfo);","lastModifiedDate":"2024-02-22"},{"lineNumber":49,"author":{"gitId":"SampsonYe1999"},"content":"        case EVENT:","lastModifiedDate":"2024-02-22"},{"lineNumber":50,"author":{"gitId":"SampsonYe1999"},"content":"            return new EventCommand(taskInfo);","lastModifiedDate":"2024-02-22"},{"lineNumber":51,"author":{"gitId":"SampsonYe1999"},"content":"        case DELETE:","lastModifiedDate":"2024-02-22"},{"lineNumber":52,"author":{"gitId":"SampsonYe1999"},"content":"            return new DeleteCommand(taskInfo);","lastModifiedDate":"2024-02-22"},{"lineNumber":53,"author":{"gitId":"SampsonYe1999"},"content":"        case BYE:","lastModifiedDate":"2024-02-22"},{"lineNumber":54,"author":{"gitId":"SampsonYe1999"},"content":"            return new ByeCommand();","lastModifiedDate":"2024-02-22"},{"lineNumber":55,"author":{"gitId":"SampsonYe1999"},"content":"        default:","lastModifiedDate":"2024-02-22"},{"lineNumber":56,"author":{"gitId":"SampsonYe1999"},"content":"            return new UnknownCommand();","lastModifiedDate":"2024-02-22"},{"lineNumber":57,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":58,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":59,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":60,"author":{"gitId":"SampsonYe1999"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":61,"author":{"gitId":"SampsonYe1999"},"content":"     * Parses userInput to determine the commandType and taskInfo, then returns the corresponding Command object.","lastModifiedDate":"2024-02-24"},{"lineNumber":62,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":63,"author":{"gitId":"SampsonYe1999"},"content":"     * Splits the userInput into two parts: the command type and the task information (if present).","lastModifiedDate":"2024-02-24"},{"lineNumber":64,"author":{"gitId":"SampsonYe1999"},"content":"     * Converts the command type to uppercase and attempts to match it with a value of the CommandType enum.","lastModifiedDate":"2024-02-24"},{"lineNumber":65,"author":{"gitId":"SampsonYe1999"},"content":"     * If the command type is unrecognized, sets it to UNKNOWN.","lastModifiedDate":"2024-02-24"},{"lineNumber":66,"author":{"gitId":"SampsonYe1999"},"content":"     * Delegates the creation of the Command object to the processCommand method, passing the commandType and taskInfo.","lastModifiedDate":"2024-02-24"},{"lineNumber":67,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":68,"author":{"gitId":"SampsonYe1999"},"content":"     * @param userInput the input provided by the user","lastModifiedDate":"2024-02-24"},{"lineNumber":69,"author":{"gitId":"SampsonYe1999"},"content":"     * @return the Command object corresponding to the parsed user input","lastModifiedDate":"2024-02-24"},{"lineNumber":70,"author":{"gitId":"SampsonYe1999"},"content":"     * @throws SamException if an error occurs during parsing or command processing","lastModifiedDate":"2024-02-24"},{"lineNumber":71,"author":{"gitId":"SampsonYe1999"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":72,"author":{"gitId":"SampsonYe1999"},"content":"    public static Command parse(String userInput) throws SamException {","lastModifiedDate":"2024-02-22"},{"lineNumber":73,"author":{"gitId":"SampsonYe1999"},"content":"        String[] command \u003d userInput.split(\" \", 2);","lastModifiedDate":"2024-02-22"},{"lineNumber":74,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":75,"author":{"gitId":"SampsonYe1999"},"content":"        CommandType commandType;","lastModifiedDate":"2024-02-22"},{"lineNumber":76,"author":{"gitId":"SampsonYe1999"},"content":"        String taskInfo \u003d command.length \u003c 2 ? \"\" : command[1];","lastModifiedDate":"2024-02-22"},{"lineNumber":77,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":78,"author":{"gitId":"SampsonYe1999"},"content":"        try {","lastModifiedDate":"2024-02-22"},{"lineNumber":79,"author":{"gitId":"SampsonYe1999"},"content":"            commandType \u003d CommandType.valueOf(command[0].toUpperCase());","lastModifiedDate":"2024-02-22"},{"lineNumber":80,"author":{"gitId":"SampsonYe1999"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":81,"author":{"gitId":"SampsonYe1999"},"content":"            commandType \u003d CommandType.UNKNOWN;","lastModifiedDate":"2024-02-22"},{"lineNumber":82,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":83,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":84,"author":{"gitId":"SampsonYe1999"},"content":"        return processCommand(commandType, taskInfo);","lastModifiedDate":"2024-02-22"},{"lineNumber":85,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":86,"author":{"gitId":"SampsonYe1999"},"content":"}","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"SampsonYe1999":86}},{"path":"src/main/java/sam/Sam.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SampsonYe1999"},"content":"package sam;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"SampsonYe1999"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"SampsonYe1999"},"content":"import sam.command.Command;","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"SampsonYe1999"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"SampsonYe1999"},"content":" * The main class of the Sam application.","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"SampsonYe1999"},"content":" *","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"SampsonYe1999"},"content":" * This class serves as the entry point for Sam. It contains the main method","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"SampsonYe1999"},"content":" * where the application starts its execution.","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"SampsonYe1999"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"SampsonYe1999"},"content":"public class Sam {","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"SampsonYe1999"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"SampsonYe1999"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"SampsonYe1999"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"SampsonYe1999"},"content":"     * Constructs a new Sam object.","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"SampsonYe1999"},"content":"     * Initializes the user interface, storage, and taskList.","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"SampsonYe1999"},"content":"     * If loading tasks from the specified file path fails due to IOException or SamException,","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"SampsonYe1999"},"content":"     * displays a loading error message and initializes an empty task list.","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"SampsonYe1999"},"content":"     * @param filePath the file path from which to load tasks","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"SampsonYe1999"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"SampsonYe1999"},"content":"    public Sam(String filePath) {","lastModifiedDate":"2024-02-24"},{"lineNumber":26,"author":{"gitId":"SampsonYe1999"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"SampsonYe1999"},"content":"        try {","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"SampsonYe1999"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"SampsonYe1999"},"content":"        } catch (IOException | SamException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"SampsonYe1999"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":32,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"SampsonYe1999"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-02-24"},{"lineNumber":35,"author":{"gitId":"SampsonYe1999"},"content":"        try {","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"SampsonYe1999"},"content":"            Command command \u003d Parser.parse(input);","lastModifiedDate":"2024-02-24"},{"lineNumber":37,"author":{"gitId":"SampsonYe1999"},"content":"            if (command.isExit()) {","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"SampsonYe1999"},"content":"                System.exit(0);","lastModifiedDate":"2024-02-24"},{"lineNumber":39,"author":{"gitId":"SampsonYe1999"},"content":"            }","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"SampsonYe1999"},"content":"            return command.execute(tasks, storage);","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"SampsonYe1999"},"content":"        } catch (SamException e) {","lastModifiedDate":"2024-02-24"},{"lineNumber":42,"author":{"gitId":"SampsonYe1999"},"content":"            return e.getMessage();","lastModifiedDate":"2024-02-24"},{"lineNumber":43,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":44,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":1,"SampsonYe1999":44}},{"path":"src/main/java/sam/SamException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SampsonYe1999"},"content":"package sam;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":3,"author":{"gitId":"SampsonYe1999"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"SampsonYe1999"},"content":" * The exception class for errors specific to Sam .","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"SampsonYe1999"},"content":" *","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"SampsonYe1999"},"content":" * Extends the Exception class to represent custom exceptions that can occur within Sam.","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"SampsonYe1999"},"content":" * Each instance of SamException contains a message detailing the specific error.","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"SampsonYe1999"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"SampsonYe1999"},"content":"public class SamException extends Exception {","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"SampsonYe1999"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"SampsonYe1999"},"content":"     * Constructs a new SamException with the specified detail message.","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"SampsonYe1999"},"content":"     * @param message the detail message (which is saved for later retrieval by the getMessage() method)","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"SampsonYe1999"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"SampsonYe1999"},"content":"    public SamException(String message) {","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"SampsonYe1999"},"content":"        super(message);","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"SampsonYe1999"},"content":"}","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"SampsonYe1999":18}},{"path":"src/main/java/sam/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SampsonYe1999"},"content":"package sam;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"SampsonYe1999"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"SampsonYe1999"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"SampsonYe1999"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"SampsonYe1999"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"SampsonYe1999"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"SampsonYe1999"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"SampsonYe1999"},"content":"import sam.task.Deadline;","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"SampsonYe1999"},"content":"import sam.task.Event;","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"SampsonYe1999"},"content":"import sam.task.Task;","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"SampsonYe1999"},"content":"import sam.task.ToDo;","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"SampsonYe1999"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"SampsonYe1999"},"content":" * Represents a Storage object for file IO.","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"SampsonYe1999"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"SampsonYe1999"},"content":"public class Storage {","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"SampsonYe1999"},"content":"    private final String filePath;","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"SampsonYe1999"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"SampsonYe1999"},"content":"     * Constructs a Storage object with the specified file path.","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"SampsonYe1999"},"content":"     * Initializes the Storage object with the provided file path, which indicates the location","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"SampsonYe1999"},"content":"     * where data will be stored or retrieved.","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":26,"author":{"gitId":"SampsonYe1999"},"content":"     * @param filePath the file path used by the Storage object","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"SampsonYe1999"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":28,"author":{"gitId":"SampsonYe1999"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-02-24"},{"lineNumber":29,"author":{"gitId":"SampsonYe1999"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":32,"author":{"gitId":"SampsonYe1999"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":33,"author":{"gitId":"SampsonYe1999"},"content":"     * Loads tasks from the specified file.","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":35,"author":{"gitId":"SampsonYe1999"},"content":"     * Reads task from the file indicated by the FILE_PATH attribute and returns them as an ArrayList.","lastModifiedDate":"2024-02-24"},{"lineNumber":36,"author":{"gitId":"SampsonYe1999"},"content":"     * If an IOException occurs during file reading, or if there\u0027s an issue with the file format or content,","lastModifiedDate":"2024-02-24"},{"lineNumber":37,"author":{"gitId":"SampsonYe1999"},"content":"     * a SamException is thrown.","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":39,"author":{"gitId":"SampsonYe1999"},"content":"     * @return an ArrayList containing the tasks loaded from the file","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"SampsonYe1999"},"content":"     * @throws SamException if an error occurs during task loading","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"SampsonYe1999"},"content":"     * @throws IOException if an I/O error occurs while reading from the file","lastModifiedDate":"2024-02-24"},{"lineNumber":42,"author":{"gitId":"SampsonYe1999"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":43,"author":{"gitId":"SampsonYe1999"},"content":"    public ArrayList\u003cTask\u003e load() throws SamException, IOException {","lastModifiedDate":"2024-02-22"},{"lineNumber":44,"author":{"gitId":"SampsonYe1999"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-22"},{"lineNumber":45,"author":{"gitId":"SampsonYe1999"},"content":"        BufferedReader reader \u003d new BufferedReader(new FileReader(filePath));","lastModifiedDate":"2024-02-24"},{"lineNumber":46,"author":{"gitId":"SampsonYe1999"},"content":"        String line;","lastModifiedDate":"2024-02-22"},{"lineNumber":47,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":48,"author":{"gitId":"SampsonYe1999"},"content":"        while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2024-02-22"},{"lineNumber":49,"author":{"gitId":"SampsonYe1999"},"content":"            Task task \u003d createTaskFromLine(line);","lastModifiedDate":"2024-02-22"},{"lineNumber":50,"author":{"gitId":"SampsonYe1999"},"content":"            if (task !\u003d null) {","lastModifiedDate":"2024-02-22"},{"lineNumber":51,"author":{"gitId":"SampsonYe1999"},"content":"                taskList.add(task);","lastModifiedDate":"2024-02-22"},{"lineNumber":52,"author":{"gitId":"SampsonYe1999"},"content":"            }","lastModifiedDate":"2024-02-22"},{"lineNumber":53,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":54,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":55,"author":{"gitId":"SampsonYe1999"},"content":"        reader.close();","lastModifiedDate":"2024-02-22"},{"lineNumber":56,"author":{"gitId":"SampsonYe1999"},"content":"        return taskList;","lastModifiedDate":"2024-02-22"},{"lineNumber":57,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":58,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":59,"author":{"gitId":"SampsonYe1999"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":60,"author":{"gitId":"SampsonYe1999"},"content":"     * Saves the given list of tasks to a file.","lastModifiedDate":"2024-02-24"},{"lineNumber":61,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":62,"author":{"gitId":"SampsonYe1999"},"content":"     * Writes the provided TaskList to the file indicated by the FILE_PATH attribute.","lastModifiedDate":"2024-02-24"},{"lineNumber":63,"author":{"gitId":"SampsonYe1999"},"content":"     * If an IOException occurs during file writing, an error message is displayed,","lastModifiedDate":"2024-02-24"},{"lineNumber":64,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":65,"author":{"gitId":"SampsonYe1999"},"content":"     * @param tasks the TaskList to be saved to the file","lastModifiedDate":"2024-02-24"},{"lineNumber":66,"author":{"gitId":"SampsonYe1999"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":67,"author":{"gitId":"SampsonYe1999"},"content":"    public void save(TaskList tasks) {","lastModifiedDate":"2024-02-22"},{"lineNumber":68,"author":{"gitId":"SampsonYe1999"},"content":"        try {","lastModifiedDate":"2024-02-22"},{"lineNumber":69,"author":{"gitId":"SampsonYe1999"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filePath));","lastModifiedDate":"2024-02-24"},{"lineNumber":70,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":71,"author":{"gitId":"SampsonYe1999"},"content":"            for (String item : tasks.getFileStrings()) {","lastModifiedDate":"2024-02-22"},{"lineNumber":72,"author":{"gitId":"SampsonYe1999"},"content":"                writer.write(item + \"\\n\");","lastModifiedDate":"2024-02-22"},{"lineNumber":73,"author":{"gitId":"SampsonYe1999"},"content":"            }","lastModifiedDate":"2024-02-22"},{"lineNumber":74,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":75,"author":{"gitId":"SampsonYe1999"},"content":"            writer.close();","lastModifiedDate":"2024-02-22"},{"lineNumber":76,"author":{"gitId":"SampsonYe1999"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":77,"author":{"gitId":"SampsonYe1999"},"content":"            System.out.println(\"Error saving tasks to file.\");","lastModifiedDate":"2024-02-22"},{"lineNumber":78,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":79,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":80,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":81,"author":{"gitId":"SampsonYe1999"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":82,"author":{"gitId":"SampsonYe1999"},"content":"     * Creates a Task object from the provided line of text.","lastModifiedDate":"2024-02-24"},{"lineNumber":83,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":84,"author":{"gitId":"SampsonYe1999"},"content":"     * Parses the given line of text to extract task details and constructs a Task object accordingly.","lastModifiedDate":"2024-02-24"},{"lineNumber":85,"author":{"gitId":"SampsonYe1999"},"content":"     * If the line format is invalid or incomplete, a SamException is thrown.","lastModifiedDate":"2024-02-24"},{"lineNumber":86,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":87,"author":{"gitId":"SampsonYe1999"},"content":"     * @param line the line of text containing task details","lastModifiedDate":"2024-02-24"},{"lineNumber":88,"author":{"gitId":"SampsonYe1999"},"content":"     * @return the Task object created from the line of text","lastModifiedDate":"2024-02-24"},{"lineNumber":89,"author":{"gitId":"SampsonYe1999"},"content":"     * @throws SamException if an error occurs while creating the Task object due to invalid or incomplete data","lastModifiedDate":"2024-02-24"},{"lineNumber":90,"author":{"gitId":"SampsonYe1999"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":91,"author":{"gitId":"SampsonYe1999"},"content":"    @SuppressWarnings(\"checkstyle:Indentation\")","lastModifiedDate":"2024-02-24"},{"lineNumber":92,"author":{"gitId":"SampsonYe1999"},"content":"    private static Task createTaskFromLine(String line) throws SamException {","lastModifiedDate":"2024-02-23"},{"lineNumber":93,"author":{"gitId":"SampsonYe1999"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2024-02-22"},{"lineNumber":94,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":95,"author":{"gitId":"SampsonYe1999"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2024-02-22"},{"lineNumber":96,"author":{"gitId":"SampsonYe1999"},"content":"            System.out.println(\"Skipped invalid line in data file: \" + line);","lastModifiedDate":"2024-02-22"},{"lineNumber":97,"author":{"gitId":"SampsonYe1999"},"content":"            return null;","lastModifiedDate":"2024-02-22"},{"lineNumber":98,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":99,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":100,"author":{"gitId":"SampsonYe1999"},"content":"        String taskType \u003d parts[0];","lastModifiedDate":"2024-02-22"},{"lineNumber":101,"author":{"gitId":"SampsonYe1999"},"content":"        int isDone \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2024-02-22"},{"lineNumber":102,"author":{"gitId":"SampsonYe1999"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2024-02-22"},{"lineNumber":103,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":104,"author":{"gitId":"SampsonYe1999"},"content":"        Task task;","lastModifiedDate":"2024-02-22"},{"lineNumber":105,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":106,"author":{"gitId":"SampsonYe1999"},"content":"        switch (taskType) {","lastModifiedDate":"2024-02-22"},{"lineNumber":107,"author":{"gitId":"SampsonYe1999"},"content":"        case \"T\":","lastModifiedDate":"2024-02-22"},{"lineNumber":108,"author":{"gitId":"SampsonYe1999"},"content":"            task \u003d new ToDo(description);","lastModifiedDate":"2024-02-22"},{"lineNumber":109,"author":{"gitId":"SampsonYe1999"},"content":"            break;","lastModifiedDate":"2024-02-22"},{"lineNumber":110,"author":{"gitId":"SampsonYe1999"},"content":"        case \"D\":","lastModifiedDate":"2024-02-22"},{"lineNumber":111,"author":{"gitId":"SampsonYe1999"},"content":"            String by \u003d parts.length \u003e 3 ? parts[3] : \"\";","lastModifiedDate":"2024-02-22"},{"lineNumber":112,"author":{"gitId":"SampsonYe1999"},"content":"            task \u003d new Deadline(description, by);","lastModifiedDate":"2024-02-22"},{"lineNumber":113,"author":{"gitId":"SampsonYe1999"},"content":"            break;","lastModifiedDate":"2024-02-22"},{"lineNumber":114,"author":{"gitId":"SampsonYe1999"},"content":"        case \"E\":","lastModifiedDate":"2024-02-22"},{"lineNumber":115,"author":{"gitId":"SampsonYe1999"},"content":"            String fromTo \u003d parts.length \u003e 3 ? parts[3] : \"\";","lastModifiedDate":"2024-02-22"},{"lineNumber":116,"author":{"gitId":"SampsonYe1999"},"content":"            String[] fromToArray \u003d fromTo.split(\" to \");","lastModifiedDate":"2024-02-22"},{"lineNumber":117,"author":{"gitId":"SampsonYe1999"},"content":"            String from \u003d fromToArray.length \u003e 0 ? fromToArray[0] : \"\";","lastModifiedDate":"2024-02-22"},{"lineNumber":118,"author":{"gitId":"SampsonYe1999"},"content":"            String to \u003d fromToArray.length \u003e 1 ? fromToArray[1] : \"\";","lastModifiedDate":"2024-02-22"},{"lineNumber":119,"author":{"gitId":"SampsonYe1999"},"content":"            task \u003d new Event(description, from, to);","lastModifiedDate":"2024-02-22"},{"lineNumber":120,"author":{"gitId":"SampsonYe1999"},"content":"            break;","lastModifiedDate":"2024-02-22"},{"lineNumber":121,"author":{"gitId":"SampsonYe1999"},"content":"        default:","lastModifiedDate":"2024-02-22"},{"lineNumber":122,"author":{"gitId":"SampsonYe1999"},"content":"            System.out.println(\"Skipped unknown task type in data file: \" + taskType);","lastModifiedDate":"2024-02-22"},{"lineNumber":123,"author":{"gitId":"SampsonYe1999"},"content":"            return null;","lastModifiedDate":"2024-02-22"},{"lineNumber":124,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":125,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":126,"author":{"gitId":"SampsonYe1999"},"content":"        if (isDone \u003d\u003d 1) {","lastModifiedDate":"2024-02-23"},{"lineNumber":127,"author":{"gitId":"SampsonYe1999"},"content":"            task.markAsDone();","lastModifiedDate":"2024-02-23"},{"lineNumber":128,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":129,"author":{"gitId":"SampsonYe1999"},"content":"        return task;","lastModifiedDate":"2024-02-22"},{"lineNumber":130,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":131,"author":{"gitId":"SampsonYe1999"},"content":"}","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"SampsonYe1999":131}},{"path":"src/main/java/sam/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SampsonYe1999"},"content":"package sam;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"SampsonYe1999"},"content":"import java.lang.reflect.Array;","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"SampsonYe1999"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"SampsonYe1999"},"content":"import sam.task.Task;","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"SampsonYe1999"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"SampsonYe1999"},"content":" * Represents a list of tasks.","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"SampsonYe1999"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"SampsonYe1999"},"content":"public class TaskList {","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"SampsonYe1999"},"content":"    private ArrayList\u003cTask\u003e items;","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"SampsonYe1999"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"SampsonYe1999"},"content":"        this.items \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"SampsonYe1999"},"content":"    public TaskList(ArrayList\u003cTask\u003e items) {","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"SampsonYe1999"},"content":"        this.items \u003d items;","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"SampsonYe1999"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"SampsonYe1999"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"SampsonYe1999"},"content":"     * @return Number of tasks in the list.","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"SampsonYe1999"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":26,"author":{"gitId":"SampsonYe1999"},"content":"    public int getNumOfTasks() {","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"SampsonYe1999"},"content":"        return items.size();","lastModifiedDate":"2024-02-24"},{"lineNumber":28,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"SampsonYe1999"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":31,"author":{"gitId":"SampsonYe1999"},"content":"     * Gets the list of tasks.","lastModifiedDate":"2024-02-24"},{"lineNumber":32,"author":{"gitId":"SampsonYe1999"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":33,"author":{"gitId":"SampsonYe1999"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"SampsonYe1999"},"content":"        return new ArrayList\u003c\u003e(items);","lastModifiedDate":"2024-02-24"},{"lineNumber":35,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"SampsonYe1999"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"SampsonYe1999"},"content":"     * Marks a task in the list as done.","lastModifiedDate":"2024-02-24"},{"lineNumber":39,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"SampsonYe1999"},"content":"     * Marks the task at the specified index in the task list as done.","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":42,"author":{"gitId":"SampsonYe1999"},"content":"     * @param index the index of the task to mark as done","lastModifiedDate":"2024-02-24"},{"lineNumber":43,"author":{"gitId":"SampsonYe1999"},"content":"     * @throws SamException if the index is out of bounds","lastModifiedDate":"2024-02-24"},{"lineNumber":44,"author":{"gitId":"SampsonYe1999"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":45,"author":{"gitId":"SampsonYe1999"},"content":"    public Task markTask(int index) throws SamException {","lastModifiedDate":"2024-02-24"},{"lineNumber":46,"author":{"gitId":"SampsonYe1999"},"content":"        if (index \u003c 0 || index \u003e\u003d items.size()) {","lastModifiedDate":"2024-02-22"},{"lineNumber":47,"author":{"gitId":"SampsonYe1999"},"content":"            throw new SamException(\"Please check how many tasks are there in your list.\");","lastModifiedDate":"2024-02-22"},{"lineNumber":48,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":49,"author":{"gitId":"SampsonYe1999"},"content":"        items.get(index).markAsDone();","lastModifiedDate":"2024-02-22"},{"lineNumber":50,"author":{"gitId":"SampsonYe1999"},"content":"        return items.get(index);","lastModifiedDate":"2024-02-24"},{"lineNumber":51,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":52,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":53,"author":{"gitId":"SampsonYe1999"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":54,"author":{"gitId":"SampsonYe1999"},"content":"     * Unmarks a task in the list as undone.","lastModifiedDate":"2024-02-24"},{"lineNumber":55,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":56,"author":{"gitId":"SampsonYe1999"},"content":"     * Unmarks the task at the specified index in the task list as undone.","lastModifiedDate":"2024-02-24"},{"lineNumber":57,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":58,"author":{"gitId":"SampsonYe1999"},"content":"     * @param index the index of the task to unmark as undone","lastModifiedDate":"2024-02-24"},{"lineNumber":59,"author":{"gitId":"SampsonYe1999"},"content":"     * @throws SamException if the index is out of bounds","lastModifiedDate":"2024-02-24"},{"lineNumber":60,"author":{"gitId":"SampsonYe1999"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":61,"author":{"gitId":"SampsonYe1999"},"content":"    public Task unmarkTask(int index) throws SamException {","lastModifiedDate":"2024-02-24"},{"lineNumber":62,"author":{"gitId":"SampsonYe1999"},"content":"        if (index \u003c 0 || index \u003e\u003d items.size()) {","lastModifiedDate":"2024-02-22"},{"lineNumber":63,"author":{"gitId":"SampsonYe1999"},"content":"            throw new SamException(\"Please check how many tasks are there in your list.\");","lastModifiedDate":"2024-02-22"},{"lineNumber":64,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":65,"author":{"gitId":"SampsonYe1999"},"content":"        items.get(index).markAsUndone();","lastModifiedDate":"2024-02-22"},{"lineNumber":66,"author":{"gitId":"SampsonYe1999"},"content":"        return items.get(index);","lastModifiedDate":"2024-02-24"},{"lineNumber":67,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":68,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":69,"author":{"gitId":"SampsonYe1999"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":70,"author":{"gitId":"SampsonYe1999"},"content":"     * Adds a new task to the task list.","lastModifiedDate":"2024-02-24"},{"lineNumber":71,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":72,"author":{"gitId":"SampsonYe1999"},"content":"     * Adds the provided Task object to the task list.","lastModifiedDate":"2024-02-24"},{"lineNumber":73,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":74,"author":{"gitId":"SampsonYe1999"},"content":"     * @param newTask the task to be added to the list","lastModifiedDate":"2024-02-24"},{"lineNumber":75,"author":{"gitId":"SampsonYe1999"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":76,"author":{"gitId":"SampsonYe1999"},"content":"    public void addTask(Task newTask) {","lastModifiedDate":"2024-02-22"},{"lineNumber":77,"author":{"gitId":"SampsonYe1999"},"content":"        items.add(newTask);","lastModifiedDate":"2024-02-22"},{"lineNumber":78,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":79,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":80,"author":{"gitId":"SampsonYe1999"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":81,"author":{"gitId":"SampsonYe1999"},"content":"     * Deletes a task from the task list.","lastModifiedDate":"2024-02-24"},{"lineNumber":82,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":83,"author":{"gitId":"SampsonYe1999"},"content":"     * Removes the task at the specified index from the task list.","lastModifiedDate":"2024-02-24"},{"lineNumber":84,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":85,"author":{"gitId":"SampsonYe1999"},"content":"     * @param index the index of the task to delete from the list","lastModifiedDate":"2024-02-24"},{"lineNumber":86,"author":{"gitId":"SampsonYe1999"},"content":"     * @throws SamException if the index is out of bounds","lastModifiedDate":"2024-02-24"},{"lineNumber":87,"author":{"gitId":"SampsonYe1999"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":88,"author":{"gitId":"SampsonYe1999"},"content":"    public String deleteTask(int index) throws SamException {","lastModifiedDate":"2024-02-24"},{"lineNumber":89,"author":{"gitId":"SampsonYe1999"},"content":"        if (index \u003c 0 || index \u003e\u003d items.size()) {","lastModifiedDate":"2024-02-22"},{"lineNumber":90,"author":{"gitId":"SampsonYe1999"},"content":"            throw new SamException(\"Invalid task number. Please check how many tasks your have in the list.\");","lastModifiedDate":"2024-02-22"},{"lineNumber":91,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":92,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":93,"author":{"gitId":"SampsonYe1999"},"content":"        Task removedTask \u003d items.remove(index);","lastModifiedDate":"2024-02-22"},{"lineNumber":94,"author":{"gitId":"SampsonYe1999"},"content":"        String notice \u003d String.format(\"This task has been deleted \\n$s\\n\", removedTask);","lastModifiedDate":"2024-02-24"},{"lineNumber":95,"author":{"gitId":"SampsonYe1999"},"content":"        return notice;","lastModifiedDate":"2024-02-24"},{"lineNumber":96,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":97,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":98,"author":{"gitId":"SampsonYe1999"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":99,"author":{"gitId":"SampsonYe1999"},"content":"     * Finds tasks containing the specified keyword.","lastModifiedDate":"2024-02-24"},{"lineNumber":100,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":101,"author":{"gitId":"SampsonYe1999"},"content":"     * Searches through the list of tasks and adds tasks containing the specified keyword to a new list.","lastModifiedDate":"2024-02-24"},{"lineNumber":102,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":103,"author":{"gitId":"SampsonYe1999"},"content":"     * @param keyword the keyword to search for in task descriptions","lastModifiedDate":"2024-02-24"},{"lineNumber":104,"author":{"gitId":"SampsonYe1999"},"content":"     * @return an ArrayList containing tasks that match the keyword","lastModifiedDate":"2024-02-24"},{"lineNumber":105,"author":{"gitId":"SampsonYe1999"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":106,"author":{"gitId":"SampsonYe1999"},"content":"    public ArrayList\u003cTask\u003e findTasksByKeyword(String keyword) {","lastModifiedDate":"2024-02-24"},{"lineNumber":107,"author":{"gitId":"SampsonYe1999"},"content":"        ArrayList\u003cTask\u003e matchList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-24"},{"lineNumber":108,"author":{"gitId":"SampsonYe1999"},"content":"        for (Task task : items) {","lastModifiedDate":"2024-02-24"},{"lineNumber":109,"author":{"gitId":"SampsonYe1999"},"content":"            if (task.containsKeyword(keyword)) {","lastModifiedDate":"2024-02-24"},{"lineNumber":110,"author":{"gitId":"SampsonYe1999"},"content":"                matchList.add(task);","lastModifiedDate":"2024-02-24"},{"lineNumber":111,"author":{"gitId":"SampsonYe1999"},"content":"            }","lastModifiedDate":"2024-02-24"},{"lineNumber":112,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":113,"author":{"gitId":"SampsonYe1999"},"content":"        return matchList;","lastModifiedDate":"2024-02-24"},{"lineNumber":114,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":115,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":116,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":117,"author":{"gitId":"SampsonYe1999"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":118,"author":{"gitId":"SampsonYe1999"},"content":"     * Retrieves the file strings from the Storage object.","lastModifiedDate":"2024-02-24"},{"lineNumber":119,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":120,"author":{"gitId":"SampsonYe1999"},"content":"     * Returns an ArrayList containing the file strings stored in the Storage object.","lastModifiedDate":"2024-02-24"},{"lineNumber":121,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":122,"author":{"gitId":"SampsonYe1999"},"content":"     * @return an ArrayList containing the file strings","lastModifiedDate":"2024-02-24"},{"lineNumber":123,"author":{"gitId":"SampsonYe1999"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":124,"author":{"gitId":"SampsonYe1999"},"content":"    public ArrayList\u003cString\u003e getFileStrings() {","lastModifiedDate":"2024-02-22"},{"lineNumber":125,"author":{"gitId":"SampsonYe1999"},"content":"        ArrayList\u003cString\u003e ret \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-22"},{"lineNumber":126,"author":{"gitId":"SampsonYe1999"},"content":"        for (Task item : items) {","lastModifiedDate":"2024-02-22"},{"lineNumber":127,"author":{"gitId":"SampsonYe1999"},"content":"            ret.add(item.toFileFormat());","lastModifiedDate":"2024-02-22"},{"lineNumber":128,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":129,"author":{"gitId":"SampsonYe1999"},"content":"        return ret;","lastModifiedDate":"2024-02-22"},{"lineNumber":130,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":131,"author":{"gitId":"SampsonYe1999"},"content":"}","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"SampsonYe1999":131}},{"path":"src/main/java/sam/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SampsonYe1999"},"content":"package sam;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"SampsonYe1999"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"SampsonYe1999"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"SampsonYe1999"},"content":" * Represents the user interface of the application.","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"SampsonYe1999"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"SampsonYe1999"},"content":"public class Ui {","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"SampsonYe1999"},"content":"    private Scanner scanner;","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"SampsonYe1999"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"SampsonYe1999"},"content":"     * Constructs a new Ui object.","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"SampsonYe1999"},"content":"     * Initializes the Ui object by creating a new Scanner object to read input from the console.","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"SampsonYe1999"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"SampsonYe1999"},"content":"    public Ui() {","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"SampsonYe1999"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"SampsonYe1999"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"SampsonYe1999"},"content":"     * Reads a command from the user input.","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"SampsonYe1999"},"content":"     * Creates a new Scanner object to read input from the console and waits for the user to input a command.","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"SampsonYe1999"},"content":"     * Returns the command entered by the user as a string.","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":26,"author":{"gitId":"SampsonYe1999"},"content":"     * @return the command entered by the user","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"SampsonYe1999"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":28,"author":{"gitId":"SampsonYe1999"},"content":"    public String readCommand() {","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"SampsonYe1999"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"SampsonYe1999"},"content":"        return scanner.nextLine();","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":32,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":33,"author":{"gitId":"SampsonYe1999"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"SampsonYe1999"},"content":"     * Displays a greeting message.","lastModifiedDate":"2024-02-24"},{"lineNumber":35,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":36,"author":{"gitId":"SampsonYe1999"},"content":"     * Prints a greeting message along with a logo to the console.","lastModifiedDate":"2024-02-24"},{"lineNumber":37,"author":{"gitId":"SampsonYe1999"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"SampsonYe1999"},"content":"    public void greet() {","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"SampsonYe1999"},"content":"        String logo \u003d \"  ______\\n\"","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"SampsonYe1999"},"content":"                + \" |           /  \\\\ \\n\"","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"SampsonYe1999"},"content":"                + \" |______    /____\\\\     / \\\\    / \\\\\\n\"","lastModifiedDate":"2024-02-24"},{"lineNumber":42,"author":{"gitId":"SampsonYe1999"},"content":"                + \"        |  /      \\\\   /   \\\\  /   \\\\\\n\"","lastModifiedDate":"2024-02-24"},{"lineNumber":43,"author":{"gitId":"SampsonYe1999"},"content":"                + \"  ______| /        \\\\ /     \\\\/     \\\\\\n\";","lastModifiedDate":"2024-02-24"},{"lineNumber":44,"author":{"gitId":"SampsonYe1999"},"content":"        String greetMessage \u003d \"Hello! I\u0027m Sam\\n\"","lastModifiedDate":"2024-02-24"},{"lineNumber":45,"author":{"gitId":"SampsonYe1999"},"content":"                + \"How can I help you?\";","lastModifiedDate":"2024-02-24"},{"lineNumber":46,"author":{"gitId":"SampsonYe1999"},"content":"        System.out.println(logo);","lastModifiedDate":"2024-02-22"},{"lineNumber":47,"author":{"gitId":"SampsonYe1999"},"content":"        System.out.println(greetMessage);","lastModifiedDate":"2024-02-22"},{"lineNumber":48,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":49,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":50,"author":{"gitId":"SampsonYe1999"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":51,"author":{"gitId":"SampsonYe1999"},"content":"     * Shows the error message.","lastModifiedDate":"2024-02-24"},{"lineNumber":52,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":53,"author":{"gitId":"SampsonYe1999"},"content":"     * @param err The error message.","lastModifiedDate":"2024-02-24"},{"lineNumber":54,"author":{"gitId":"SampsonYe1999"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":55,"author":{"gitId":"SampsonYe1999"},"content":"    public void showError(String err) {","lastModifiedDate":"2024-02-22"},{"lineNumber":56,"author":{"gitId":"SampsonYe1999"},"content":"        System.err.println(err);","lastModifiedDate":"2024-02-22"},{"lineNumber":57,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":58,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":59,"author":{"gitId":"SampsonYe1999"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":60,"author":{"gitId":"SampsonYe1999"},"content":"     * Shows the error message when error loading file.","lastModifiedDate":"2024-02-24"},{"lineNumber":61,"author":{"gitId":"SampsonYe1999"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":62,"author":{"gitId":"SampsonYe1999"},"content":"    public void showLoadingError() {","lastModifiedDate":"2024-02-22"},{"lineNumber":63,"author":{"gitId":"SampsonYe1999"},"content":"        System.err.println(\"Error reading tasks from file.\");","lastModifiedDate":"2024-02-22"},{"lineNumber":64,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":65,"author":{"gitId":"SampsonYe1999"},"content":"}","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"SampsonYe1999":65}},{"path":"src/main/java/sam/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SampsonYe1999"},"content":"package sam.command;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"SampsonYe1999"},"content":"import sam.SamException;","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"SampsonYe1999"},"content":"import sam.Storage;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"SampsonYe1999"},"content":"import sam.TaskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"SampsonYe1999"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"SampsonYe1999"},"content":" * Represents a command to exit the program.","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"SampsonYe1999"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"SampsonYe1999"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"SampsonYe1999"},"content":"    @Override","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"SampsonYe1999"},"content":"    public String execute(TaskList tasks, Storage storage) throws SamException {","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"SampsonYe1999"},"content":"        return \"Hope you enjoy my help.\";","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"SampsonYe1999"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"SampsonYe1999"},"content":"        return true;","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"SampsonYe1999"},"content":"}","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"SampsonYe1999":20}},{"path":"src/main/java/sam/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SampsonYe1999"},"content":"package sam.command;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"SampsonYe1999"},"content":"import sam.SamException;","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"SampsonYe1999"},"content":"import sam.Storage;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"SampsonYe1999"},"content":"import sam.TaskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"SampsonYe1999"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"SampsonYe1999"},"content":" * Represents a command to be executed by the application.","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"SampsonYe1999"},"content":" *","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"SampsonYe1999"},"content":" * This is an abstract class and should be subclassed to define specific command behaviors.","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"SampsonYe1999"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"SampsonYe1999"},"content":"public abstract class Command {","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"SampsonYe1999"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"SampsonYe1999"},"content":"     * Executes the command.","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"SampsonYe1999"},"content":"     * This method should be implemented by subclasses to execute the specific behavior of the command.","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"SampsonYe1999"},"content":"     * It typically involves interacting with the task list and storage components.","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"SampsonYe1999"},"content":"     * @param tasks the TaskList containing the tasks","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"SampsonYe1999"},"content":"     * @param storage the Storage object for data storage and retrieval","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"SampsonYe1999"},"content":"     * @throws SamException if an error occurs during command execution","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"SampsonYe1999"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"SampsonYe1999"},"content":"    public abstract String execute(TaskList tasks, Storage storage) throws SamException;","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"SampsonYe1999"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":26,"author":{"gitId":"SampsonYe1999"},"content":"     * Checks if the command indicates an exit signal.","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":28,"author":{"gitId":"SampsonYe1999"},"content":"     * Returns false by default. Subclasses can override this method to indicate whether","lastModifiedDate":"2024-02-24"},{"lineNumber":29,"author":{"gitId":"SampsonYe1999"},"content":"     * executing the command should terminate the application.","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":31,"author":{"gitId":"SampsonYe1999"},"content":"     * @return false, indicating that the command does not trigger an exit","lastModifiedDate":"2024-02-24"},{"lineNumber":32,"author":{"gitId":"SampsonYe1999"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":33,"author":{"gitId":"SampsonYe1999"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"SampsonYe1999"},"content":"        return false;","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"SampsonYe1999"},"content":"}","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"SampsonYe1999":36}},{"path":"src/main/java/sam/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SampsonYe1999"},"content":"package sam.command;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"SampsonYe1999"},"content":"import sam.SamException;","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"SampsonYe1999"},"content":"import sam.Storage;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"SampsonYe1999"},"content":"import sam.TaskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"SampsonYe1999"},"content":"import sam.task.Deadline;","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"SampsonYe1999"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"SampsonYe1999"},"content":" * Represents a command to add a deadline task.","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"SampsonYe1999"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"SampsonYe1999"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"SampsonYe1999"},"content":"    private String description;","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"SampsonYe1999"},"content":"    private String by;","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"SampsonYe1999"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"SampsonYe1999"},"content":"     * Constructs a DeadlineCommand with the specified task information.","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"SampsonYe1999"},"content":"     * Initializes a DeadlineCommand with the provided task information. If the task information is blank,","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"SampsonYe1999"},"content":"     * throws a SamException with a message indicating the need to provide task details.","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"SampsonYe1999"},"content":"     * @param taskInfo the task information for creating the deadline task","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"SampsonYe1999"},"content":"     * @throws SamException if the provided task information is blank","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"SampsonYe1999"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"SampsonYe1999"},"content":"    public DeadlineCommand(String taskInfo) throws SamException {","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"SampsonYe1999"},"content":"        if (!taskInfo.contains(\"/by\")) {","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"SampsonYe1999"},"content":"            throw new SamException(\"Invalid format for deadline, please provide a deadline using /by.\");","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":28,"author":{"gitId":"SampsonYe1999"},"content":"        String[] details \u003d taskInfo.split(\" /by \");","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"SampsonYe1999"},"content":"        if (details.length \u003c 2) {","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"SampsonYe1999"},"content":"            throw new SamException(\"Invalid format for deadline, please provide a deadline using /by.\");","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"SampsonYe1999"},"content":"        if (details[0].isBlank()) {","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"SampsonYe1999"},"content":"            throw new SamException(\"Please provide a description of the task\");","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"SampsonYe1999"},"content":"        if (details[1].isBlank()) {","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"SampsonYe1999"},"content":"            throw new SamException(\"Please provide a deadline?\");","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"SampsonYe1999"},"content":"        this.description \u003d details[0];","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"SampsonYe1999"},"content":"        this.by \u003d details[1];","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":41,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"SampsonYe1999"},"content":"    @Override","lastModifiedDate":"2024-02-22"},{"lineNumber":43,"author":{"gitId":"SampsonYe1999"},"content":"    public String execute(TaskList tasks, Storage storage) throws SamException {","lastModifiedDate":"2024-02-24"},{"lineNumber":44,"author":{"gitId":"SampsonYe1999"},"content":"        Deadline newTask \u003d new Deadline(description, by);","lastModifiedDate":"2024-02-24"},{"lineNumber":45,"author":{"gitId":"SampsonYe1999"},"content":"        tasks.addTask(newTask);","lastModifiedDate":"2024-02-24"},{"lineNumber":46,"author":{"gitId":"SampsonYe1999"},"content":"        storage.save(tasks);","lastModifiedDate":"2024-02-22"},{"lineNumber":47,"author":{"gitId":"SampsonYe1999"},"content":"        return String.format(\"I\u0027ve added this task \\n%s\\n You have %d tasks left in the list.\\n\",","lastModifiedDate":"2024-02-24"},{"lineNumber":48,"author":{"gitId":"SampsonYe1999"},"content":"                newTask, tasks.getNumOfTasks());","lastModifiedDate":"2024-02-24"},{"lineNumber":49,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":50,"author":{"gitId":"SampsonYe1999"},"content":"}","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"SampsonYe1999":50}},{"path":"src/main/java/sam/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SampsonYe1999"},"content":"package sam.command;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"SampsonYe1999"},"content":"import sam.SamException;","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"SampsonYe1999"},"content":"import sam.Storage;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"SampsonYe1999"},"content":"import sam.TaskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"SampsonYe1999"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"SampsonYe1999"},"content":" * Represents a command to delete a task.","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"SampsonYe1999"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"SampsonYe1999"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"SampsonYe1999"},"content":"    private int index;","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"SampsonYe1999"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"SampsonYe1999"},"content":"     * Constructs a DeleteCommand with the specified task number to delete.","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"SampsonYe1999"},"content":"     * Initializes a DeleteCommand with the provided task number. If the task number is blank,","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"SampsonYe1999"},"content":"     * throws a SamException with a message indicating the need to provide the task number to delete.","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"SampsonYe1999"},"content":"     * If the provided task number is not a valid integer, throws a SamException with a message","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"SampsonYe1999"},"content":"     * indicating the need to provide a valid number.","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"SampsonYe1999"},"content":"     * @param taskInfo the task number to delete","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"SampsonYe1999"},"content":"     * @throws SamException if the provided task number is blank or not a valid integer","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"SampsonYe1999"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"SampsonYe1999"},"content":"    public DeleteCommand(String taskInfo) throws SamException {","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"SampsonYe1999"},"content":"        if (taskInfo.isBlank()) {","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"SampsonYe1999"},"content":"            throw new SamException(\"Please provide the task number to delete.\");","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":28,"author":{"gitId":"SampsonYe1999"},"content":"        try {","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"SampsonYe1999"},"content":"            this.index \u003d Integer.parseInt(taskInfo) - 1;","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"SampsonYe1999"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"SampsonYe1999"},"content":"            throw new SamException(\"Please provide a number\");","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"SampsonYe1999"},"content":"    @Override","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"SampsonYe1999"},"content":"    public String execute(TaskList tasks, Storage storage) throws SamException {","lastModifiedDate":"2024-02-24"},{"lineNumber":37,"author":{"gitId":"SampsonYe1999"},"content":"        String deletedTask \u003d tasks.deleteTask(index);","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"SampsonYe1999"},"content":"        storage.save(tasks);","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"SampsonYe1999"},"content":"        return String.format(\"This task has been deleted from the list: \\n%s\\nNow you have %d tasks left.\\n\",","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"SampsonYe1999"},"content":"                deletedTask, tasks.getNumOfTasks());","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"SampsonYe1999"},"content":"}","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"SampsonYe1999":42}},{"path":"src/main/java/sam/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SampsonYe1999"},"content":"package sam.command;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"SampsonYe1999"},"content":"import sam.SamException;","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"SampsonYe1999"},"content":"import sam.Storage;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"SampsonYe1999"},"content":"import sam.TaskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"SampsonYe1999"},"content":"import sam.task.Event;","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"SampsonYe1999"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"SampsonYe1999"},"content":" * Represents a command to add an event task.","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"SampsonYe1999"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"SampsonYe1999"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"SampsonYe1999"},"content":"    private final String description;","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"SampsonYe1999"},"content":"    private final String from;","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"SampsonYe1999"},"content":"    private final String to;","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"SampsonYe1999"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"SampsonYe1999"},"content":"     * Constructs an EventCommand with the specified event details.","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"SampsonYe1999"},"content":"     * Initializes an EventCommand with the provided event details. If the task info does not contain","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"SampsonYe1999"},"content":"     * \"/from\" or \"/to\" indicating the event\u0027s start and end times, throws a SamException with a message","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"SampsonYe1999"},"content":"     * indicating the invalid format. If any of the event details (description, start time, end time) are blank,","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"SampsonYe1999"},"content":"     * throws a SamException with a message indicating the need to provide all required details.","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"SampsonYe1999"},"content":"     * @param taskInfo the string containing event details (description, start time, end time)","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"SampsonYe1999"},"content":"     * @throws SamException if the task info is missing \"/from\" or \"/to\", or if any of the event details are blank","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"SampsonYe1999"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":26,"author":{"gitId":"SampsonYe1999"},"content":"    public EventCommand(String taskInfo) throws SamException {","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"SampsonYe1999"},"content":"        if (!taskInfo.contains(\"/from\") || !taskInfo.contains(\"/to\")) {","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"SampsonYe1999"},"content":"            throw new SamException(\"Invalid format for event, please provide event details by using /from and /to.\");","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"SampsonYe1999"},"content":"        String[] details \u003d taskInfo.split(\" /from | /to \");","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"SampsonYe1999"},"content":"        if (details.length \u003c 3) {","lastModifiedDate":"2024-02-24"},{"lineNumber":32,"author":{"gitId":"SampsonYe1999"},"content":"            throw new SamException(\"Please check whether you have provided a description and both start/end time.\");","lastModifiedDate":"2024-02-24"},{"lineNumber":33,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":35,"author":{"gitId":"SampsonYe1999"},"content":"        String description \u003d details[0];","lastModifiedDate":"2024-02-24"},{"lineNumber":36,"author":{"gitId":"SampsonYe1999"},"content":"        String from \u003d \"\";","lastModifiedDate":"2024-02-24"},{"lineNumber":37,"author":{"gitId":"SampsonYe1999"},"content":"        String to \u003d \"\";","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"SampsonYe1999"},"content":"        if (taskInfo.indexOf(\"/from\") \u003c taskInfo.indexOf(\"/to\")) {","lastModifiedDate":"2024-02-24"},{"lineNumber":39,"author":{"gitId":"SampsonYe1999"},"content":"            from \u003d details[1];","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"SampsonYe1999"},"content":"            to \u003d details[2];","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"SampsonYe1999"},"content":"        } else {","lastModifiedDate":"2024-02-24"},{"lineNumber":42,"author":{"gitId":"SampsonYe1999"},"content":"            from \u003d details[2];","lastModifiedDate":"2024-02-24"},{"lineNumber":43,"author":{"gitId":"SampsonYe1999"},"content":"            to \u003d details[1];","lastModifiedDate":"2024-02-24"},{"lineNumber":44,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":45,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":46,"author":{"gitId":"SampsonYe1999"},"content":"        if (description.isBlank()) {","lastModifiedDate":"2024-02-24"},{"lineNumber":47,"author":{"gitId":"SampsonYe1999"},"content":"            throw new SamException(\"Please provide a description\");","lastModifiedDate":"2024-02-24"},{"lineNumber":48,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":49,"author":{"gitId":"SampsonYe1999"},"content":"        if (from.isBlank()) {","lastModifiedDate":"2024-02-24"},{"lineNumber":50,"author":{"gitId":"SampsonYe1999"},"content":"            throw new SamException(\"Missing /from\");","lastModifiedDate":"2024-02-24"},{"lineNumber":51,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":52,"author":{"gitId":"SampsonYe1999"},"content":"        if (to.isBlank()) {","lastModifiedDate":"2024-02-24"},{"lineNumber":53,"author":{"gitId":"SampsonYe1999"},"content":"            throw new SamException(\"Missing /to\");","lastModifiedDate":"2024-02-24"},{"lineNumber":54,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":55,"author":{"gitId":"SampsonYe1999"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-24"},{"lineNumber":56,"author":{"gitId":"SampsonYe1999"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-24"},{"lineNumber":57,"author":{"gitId":"SampsonYe1999"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-02-24"},{"lineNumber":58,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":59,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":60,"author":{"gitId":"SampsonYe1999"},"content":"    @Override","lastModifiedDate":"2024-02-22"},{"lineNumber":61,"author":{"gitId":"SampsonYe1999"},"content":"    public String execute(TaskList tasks, Storage storage) throws SamException {","lastModifiedDate":"2024-02-24"},{"lineNumber":62,"author":{"gitId":"SampsonYe1999"},"content":"        Event newTask \u003d new Event(this.description, this.from, this.to);","lastModifiedDate":"2024-02-24"},{"lineNumber":63,"author":{"gitId":"SampsonYe1999"},"content":"        tasks.addTask(newTask);","lastModifiedDate":"2024-02-24"},{"lineNumber":64,"author":{"gitId":"SampsonYe1999"},"content":"        storage.save(tasks);","lastModifiedDate":"2024-02-22"},{"lineNumber":65,"author":{"gitId":"SampsonYe1999"},"content":"        return String.format(\"The task has been added to the list:\\n%s\\nNow you have %d tasks left.\\n\",","lastModifiedDate":"2024-02-24"},{"lineNumber":66,"author":{"gitId":"SampsonYe1999"},"content":"                newTask, tasks.getNumOfTasks());","lastModifiedDate":"2024-02-24"},{"lineNumber":67,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":68,"author":{"gitId":"SampsonYe1999"},"content":"}","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"SampsonYe1999":68}},{"path":"src/main/java/sam/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SampsonYe1999"},"content":"package sam.command;","lastModifiedDate":"2024-02-24"},{"lineNumber":2,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":3,"author":{"gitId":"SampsonYe1999"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"SampsonYe1999"},"content":"import sam.SamException;","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"SampsonYe1999"},"content":"import sam.Storage;","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"SampsonYe1999"},"content":"import sam.TaskList;","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"SampsonYe1999"},"content":"import sam.task.Task;","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"SampsonYe1999"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"SampsonYe1999"},"content":" * Represents a command to find tasks with a given keyword.","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"SampsonYe1999"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"SampsonYe1999"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"SampsonYe1999"},"content":"    private String keyword;","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"SampsonYe1999"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"SampsonYe1999"},"content":"     * Constructs a FindCommand with the specified keyword for searching.","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"SampsonYe1999"},"content":"     * @param keyword the keyword for searching","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"SampsonYe1999"},"content":"     * @throws SamException if the provided keyword is blank","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"SampsonYe1999"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"SampsonYe1999"},"content":"    public FindCommand(String keyword) throws SamException {","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"SampsonYe1999"},"content":"        if (keyword.isBlank()) {","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"SampsonYe1999"},"content":"            throw new SamException(\"Please provide a keyword for searching.\");","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":26,"author":{"gitId":"SampsonYe1999"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":28,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":29,"author":{"gitId":"SampsonYe1999"},"content":"    @Override","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"SampsonYe1999"},"content":"    public String execute(TaskList tasks, Storage storage) throws SamException {","lastModifiedDate":"2024-02-24"},{"lineNumber":31,"author":{"gitId":"SampsonYe1999"},"content":"        ArrayList\u003cTask\u003e list \u003d tasks.findTasksByKeyword(this.keyword);","lastModifiedDate":"2024-02-24"},{"lineNumber":32,"author":{"gitId":"SampsonYe1999"},"content":"        StringBuilder notice \u003d new StringBuilder(\"These are the tasks with the specified keyword\");","lastModifiedDate":"2024-02-24"},{"lineNumber":33,"author":{"gitId":"SampsonYe1999"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"SampsonYe1999"},"content":"            notice.append(String.format(\"%d. %s\\n\", i + 1, list.get(i)));","lastModifiedDate":"2024-02-24"},{"lineNumber":35,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":36,"author":{"gitId":"SampsonYe1999"},"content":"        return notice + \"\\n\";","lastModifiedDate":"2024-02-24"},{"lineNumber":37,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"SampsonYe1999"},"content":"}","lastModifiedDate":"2024-02-24"}],"authorContributionMap":{"SampsonYe1999":38}},{"path":"src/main/java/sam/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SampsonYe1999"},"content":"package sam.command;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"SampsonYe1999"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"SampsonYe1999"},"content":"import sam.Storage;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"SampsonYe1999"},"content":"import sam.TaskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"SampsonYe1999"},"content":"import sam.task.Task;","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"SampsonYe1999"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"SampsonYe1999"},"content":" * Represents a command to list all tasks.","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"SampsonYe1999"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"SampsonYe1999"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"SampsonYe1999"},"content":"    @Override","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"SampsonYe1999"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"SampsonYe1999"},"content":"        ArrayList\u003cTask\u003e list \u003d tasks.getTasks();","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"SampsonYe1999"},"content":"        StringBuilder notice \u003d new StringBuilder(\"Here is the list of tasks:\\n\");","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"SampsonYe1999"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"SampsonYe1999"},"content":"            notice.append(String.format(\"%d. %s\\n\", i + 1, list.get(i)));","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"SampsonYe1999"},"content":"        return notice + \"\\n\";","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"SampsonYe1999"},"content":"}","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"SampsonYe1999":22}},{"path":"src/main/java/sam/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SampsonYe1999"},"content":"package sam.command;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"SampsonYe1999"},"content":"import sam.SamException;","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"SampsonYe1999"},"content":"import sam.Storage;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"SampsonYe1999"},"content":"import sam.TaskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"SampsonYe1999"},"content":"import sam.task.Task;","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"SampsonYe1999"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"SampsonYe1999"},"content":" * Represents a command to mark a task as done.","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"SampsonYe1999"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"SampsonYe1999"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"SampsonYe1999"},"content":"    private final int index;","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"SampsonYe1999"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"SampsonYe1999"},"content":"     * Constructs a MarkCommand with the specified task index.","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"SampsonYe1999"},"content":"     * Initializes a MarkCommand with the provided task index. If the index is blank,","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"SampsonYe1999"},"content":"     * throws a SamException with a message indicating the need to provide a task index.","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"SampsonYe1999"},"content":"     * @param index the index of the task to mark as done","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"SampsonYe1999"},"content":"     * @throws SamException if the provided index is blank","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"SampsonYe1999"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"SampsonYe1999"},"content":"    public MarkCommand(String index) throws SamException {","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"SampsonYe1999"},"content":"        if (index.isBlank()) {","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"SampsonYe1999"},"content":"            throw new SamException(\"Please provide a task number.\");","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"SampsonYe1999"},"content":"        try {","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"SampsonYe1999"},"content":"            this.index \u003d Integer.parseInt(index) - 1;","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"SampsonYe1999"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"SampsonYe1999"},"content":"            throw new SamException(\"Please provide a number\");","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"SampsonYe1999"},"content":"    @Override","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"SampsonYe1999"},"content":"    public String execute(TaskList tasks, Storage storage) throws SamException {","lastModifiedDate":"2024-02-24"},{"lineNumber":36,"author":{"gitId":"SampsonYe1999"},"content":"        Task task \u003d tasks.markTask(index);","lastModifiedDate":"2024-02-24"},{"lineNumber":37,"author":{"gitId":"SampsonYe1999"},"content":"        storage.save(tasks);","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"SampsonYe1999"},"content":"        return String.format(\"This task has been marked as done:\\n%s\\n\", task);","lastModifiedDate":"2024-02-24"},{"lineNumber":39,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"SampsonYe1999"},"content":"}","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"SampsonYe1999":40}},{"path":"src/main/java/sam/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SampsonYe1999"},"content":"package sam.command;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"SampsonYe1999"},"content":"import sam.SamException;","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"SampsonYe1999"},"content":"import sam.Storage;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"SampsonYe1999"},"content":"import sam.TaskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"SampsonYe1999"},"content":"import sam.task.ToDo;","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"SampsonYe1999"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"SampsonYe1999"},"content":" * Represents a command to add a todo task.","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"SampsonYe1999"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"SampsonYe1999"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"SampsonYe1999"},"content":"    private final String description;","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"SampsonYe1999"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"SampsonYe1999"},"content":"     * Constructs a TodoCommand with the specified task description.","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"SampsonYe1999"},"content":"     * Initializes a TodoCommand with the provided task description. If the task description is blank,","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"SampsonYe1999"},"content":"     * throws a SamException with a message indicating the need to provide a task description.","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"SampsonYe1999"},"content":"     * @param taskInfo the description of the Todo task","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"SampsonYe1999"},"content":"     * @throws SamException if the provided task description is blank","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"SampsonYe1999"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"SampsonYe1999"},"content":"    public TodoCommand(String taskInfo) throws SamException {","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"SampsonYe1999"},"content":"        if (taskInfo.isBlank()) {","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"SampsonYe1999"},"content":"            throw new SamException(\"Please provide a task description.\");","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"SampsonYe1999"},"content":"        this.description \u003d taskInfo;","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"SampsonYe1999"},"content":"    @Override","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"SampsonYe1999"},"content":"    public String execute(TaskList tasks, Storage storage) throws SamException {","lastModifiedDate":"2024-02-24"},{"lineNumber":31,"author":{"gitId":"SampsonYe1999"},"content":"        ToDo newTask \u003d new ToDo(description);","lastModifiedDate":"2024-02-24"},{"lineNumber":32,"author":{"gitId":"SampsonYe1999"},"content":"        tasks.addTask(newTask);","lastModifiedDate":"2024-02-24"},{"lineNumber":33,"author":{"gitId":"SampsonYe1999"},"content":"        storage.save(tasks);","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"SampsonYe1999"},"content":"        return String.format(\"This task has been added to the list:\\n%s\\nNow you have %d tasks left.\\n\",","lastModifiedDate":"2024-02-24"},{"lineNumber":35,"author":{"gitId":"SampsonYe1999"},"content":"                newTask, tasks.getNumOfTasks());","lastModifiedDate":"2024-02-24"},{"lineNumber":36,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"SampsonYe1999"},"content":"}","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"SampsonYe1999":37}},{"path":"src/main/java/sam/command/UnknownCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SampsonYe1999"},"content":"package sam.command;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"SampsonYe1999"},"content":"import sam.SamException;","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"SampsonYe1999"},"content":"import sam.Storage;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"SampsonYe1999"},"content":"import sam.TaskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"SampsonYe1999"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"SampsonYe1999"},"content":" * Represents a command that is not recognised.","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"SampsonYe1999"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"SampsonYe1999"},"content":"public class UnknownCommand extends Command {","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"SampsonYe1999"},"content":"    public UnknownCommand() {}","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"SampsonYe1999"},"content":"    @Override","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"SampsonYe1999"},"content":"    public String execute(TaskList tasks, Storage storage) throws SamException {","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"SampsonYe1999"},"content":"        throw new SamException(\"Hey, please choose from the following commands\\n\"","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"SampsonYe1999"},"content":"                + \"if you want to add task, please use todo, deadline or event\\n\"","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"SampsonYe1999"},"content":"                + \"if you want to mark or unmark task, please use mark or unmark\\n\"","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"SampsonYe1999"},"content":"                + \"if you want delete a task, please use delete\\n\"","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"SampsonYe1999"},"content":"                + \"if you want to view the existing task list, please enter list.\");","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"SampsonYe1999"},"content":"}","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"SampsonYe1999":21}},{"path":"src/main/java/sam/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SampsonYe1999"},"content":"package sam.command;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"SampsonYe1999"},"content":"import sam.SamException;","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"SampsonYe1999"},"content":"import sam.Storage;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"SampsonYe1999"},"content":"import sam.TaskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"SampsonYe1999"},"content":"import sam.task.Task;","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"SampsonYe1999"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"SampsonYe1999"},"content":" * Represents a command to unmark a task as done.","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"SampsonYe1999"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"SampsonYe1999"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"SampsonYe1999"},"content":"    private final int index;","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"SampsonYe1999"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"SampsonYe1999"},"content":"     * Constructs an UnmarkCommand with the specified task index.","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"SampsonYe1999"},"content":"     * Initializes an UnmarkCommand with the provided task index. If the index is blank,","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"SampsonYe1999"},"content":"     * throws a SamException with a message indicating the need to provide a task index.","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"SampsonYe1999"},"content":"     * @param index the index of the task to unmark as undone","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"SampsonYe1999"},"content":"     * @throws SamException if the provided index is blank","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"SampsonYe1999"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"SampsonYe1999"},"content":"    public UnmarkCommand(String index) throws SamException {","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"SampsonYe1999"},"content":"        if (index.isBlank()) {","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"SampsonYe1999"},"content":"            throw new SamException(\"Please provide a task number.\");","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"SampsonYe1999"},"content":"        try {","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"SampsonYe1999"},"content":"            this.index \u003d Integer.parseInt(index) - 1;","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"SampsonYe1999"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"SampsonYe1999"},"content":"            throw new SamException(\"Please provide a number\");","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"SampsonYe1999"},"content":"    @Override","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"SampsonYe1999"},"content":"    public String execute(TaskList tasks, Storage storage) throws SamException {","lastModifiedDate":"2024-02-24"},{"lineNumber":36,"author":{"gitId":"SampsonYe1999"},"content":"        Task task \u003d tasks.unmarkTask(index);","lastModifiedDate":"2024-02-24"},{"lineNumber":37,"author":{"gitId":"SampsonYe1999"},"content":"        storage.save(tasks);","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"SampsonYe1999"},"content":"        return String.format(\"This task has been unmarked as done:\\n%s\\n\", task);","lastModifiedDate":"2024-02-24"},{"lineNumber":39,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"SampsonYe1999"},"content":"}","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"SampsonYe1999":40}},{"path":"src/main/java/sam/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SampsonYe1999"},"content":"package sam.task;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"SampsonYe1999"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"SampsonYe1999"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"SampsonYe1999"},"content":"import sam.SamException;","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"SampsonYe1999"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"SampsonYe1999"},"content":" * Represents a deadline task.","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"SampsonYe1999"},"content":" *","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"SampsonYe1999"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"SampsonYe1999"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"SampsonYe1999"},"content":"    private static final DateTimeFormatter INPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"SampsonYe1999"},"content":"    private static final DateTimeFormatter OUTPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"SampsonYe1999"},"content":"    protected LocalDateTime date;","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"SampsonYe1999"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"SampsonYe1999"},"content":"     * Constructs a Deadline task with the specified description and due date/time.","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"SampsonYe1999"},"content":"     * @param description the description of the Deadline task","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"SampsonYe1999"},"content":"     * @param by the due date/time of the Deadline task","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"SampsonYe1999"},"content":"     * @throws SamException if there is an issue with the provided parameters","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"SampsonYe1999"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"SampsonYe1999"},"content":"    public Deadline(String description, String by) throws SamException {","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"SampsonYe1999"},"content":"        super(description);","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"SampsonYe1999"},"content":"        if (by.isBlank()) {","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"SampsonYe1999"},"content":"            throw new SamException(\"No due date specified.\");","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"SampsonYe1999"},"content":"        this.date \u003d LocalDateTime.parse(by, INPUT_FORMATTER);","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"SampsonYe1999"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"SampsonYe1999"},"content":"    public String toString() {","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"SampsonYe1999"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), date.format(OUTPUT_FORMATTER));","lastModifiedDate":"2024-02-14"},{"lineNumber":36,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"SampsonYe1999"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"SampsonYe1999"},"content":"    public String toFileFormat() {","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"SampsonYe1999"},"content":"        return String.format(\"D | %d | %s | %s\", isDone ? 1 : 0, this.description, date.format(INPUT_FORMATTER));","lastModifiedDate":"2024-02-14"},{"lineNumber":41,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"SampsonYe1999"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"SampsonYe1999":42}},{"path":"src/main/java/sam/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SampsonYe1999"},"content":"package sam.task;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"SampsonYe1999"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"SampsonYe1999"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"SampsonYe1999"},"content":"import sam.SamException;","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"SampsonYe1999"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"SampsonYe1999"},"content":" * Represents an event task.","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"SampsonYe1999"},"content":" *","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"SampsonYe1999"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"SampsonYe1999"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"SampsonYe1999"},"content":"    private static final DateTimeFormatter INPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"SampsonYe1999"},"content":"    private static final DateTimeFormatter OUTPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"SampsonYe1999"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"SampsonYe1999"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"SampsonYe1999"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"SampsonYe1999"},"content":"     * Constructs an Event task with the specified description and time frame.","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"SampsonYe1999"},"content":"     * @param description the description of the Event task","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"SampsonYe1999"},"content":"     * @param from the starting time of the Event task","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"SampsonYe1999"},"content":"     * @param to the ending time of the Event task","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"SampsonYe1999"},"content":"     * @throws SamException if there is an issue with the provided parameters","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"SampsonYe1999"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"SampsonYe1999"},"content":"    public Event(String description, String from, String to) throws SamException {","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"SampsonYe1999"},"content":"        super(description);","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"SampsonYe1999"},"content":"        if (from.isBlank()) {","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"SampsonYe1999"},"content":"            throw new SamException(\"Please provide a starting time.\");","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"SampsonYe1999"},"content":"        } else if (to.isBlank()) {","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"SampsonYe1999"},"content":"            throw new SamException(\"Please provide an ending time.\");","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"SampsonYe1999"},"content":"        this.from \u003d LocalDateTime.parse(from, INPUT_FORMATTER);","lastModifiedDate":"2024-02-14"},{"lineNumber":35,"author":{"gitId":"SampsonYe1999"},"content":"        this.to \u003d LocalDateTime.parse(to, INPUT_FORMATTER);","lastModifiedDate":"2024-02-14"},{"lineNumber":36,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"SampsonYe1999"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"SampsonYe1999"},"content":"    public String toString() {","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"SampsonYe1999"},"content":"        return String.format(\"[E]%s (from: %s to: %s\", super.toString(), from.format(OUTPUT_FORMATTER),","lastModifiedDate":"2024-02-14"},{"lineNumber":41,"author":{"gitId":"SampsonYe1999"},"content":"                to.format(OUTPUT_FORMATTER));","lastModifiedDate":"2024-02-14"},{"lineNumber":42,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"SampsonYe1999"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"SampsonYe1999"},"content":"    public String toFileFormat() {","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"SampsonYe1999"},"content":"        return String.format(\"E | %d | %s | %s to %s\", isDone ? 1 : 0, this.description, from.format(INPUT_FORMATTER),","lastModifiedDate":"2024-02-14"},{"lineNumber":47,"author":{"gitId":"SampsonYe1999"},"content":"                to.format(INPUT_FORMATTER));","lastModifiedDate":"2024-02-14"},{"lineNumber":48,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"SampsonYe1999"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"SampsonYe1999":49}},{"path":"src/main/java/sam/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SampsonYe1999"},"content":"package sam.task;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"SampsonYe1999"},"content":"import sam.SamException;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"SampsonYe1999"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"SampsonYe1999"},"content":" * Represents a task.","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"SampsonYe1999"},"content":" *","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"SampsonYe1999"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"SampsonYe1999"},"content":"public class Task {","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"SampsonYe1999"},"content":"    protected String description;","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"SampsonYe1999"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"SampsonYe1999"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"SampsonYe1999"},"content":"     * Constructs a Task with the specified description.","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"SampsonYe1999"},"content":"     * Initializes a Task with the given description. If the description is blank,","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"SampsonYe1999"},"content":"     * throws a SamException with a message indicating the need to provide a task description.","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"SampsonYe1999"},"content":"     * @param description the description of the Task","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"SampsonYe1999"},"content":"     * @throws SamException if the provided description is blank","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"SampsonYe1999"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"SampsonYe1999"},"content":"    public Task(String description) throws SamException {","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"SampsonYe1999"},"content":"        if (description.isBlank()) {","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"SampsonYe1999"},"content":"            throw new SamException(\"Please provide a task description.\");","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"SampsonYe1999"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"SampsonYe1999"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-26"},{"lineNumber":27,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":29,"author":{"gitId":"SampsonYe1999"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"SampsonYe1999"},"content":"     * Retrieves the status icon for the task.","lastModifiedDate":"2024-02-24"},{"lineNumber":31,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":32,"author":{"gitId":"SampsonYe1999"},"content":"     * Returns a string representing the status of the task. If the task is done, returns \"[X]\";","lastModifiedDate":"2024-02-24"},{"lineNumber":33,"author":{"gitId":"SampsonYe1999"},"content":"     * otherwise, returns \"[ ]\".","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":35,"author":{"gitId":"SampsonYe1999"},"content":"     * @return a string representing the status icon of the task","lastModifiedDate":"2024-02-24"},{"lineNumber":36,"author":{"gitId":"SampsonYe1999"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":37,"author":{"gitId":"SampsonYe1999"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-26"},{"lineNumber":38,"author":{"gitId":"SampsonYe1999"},"content":"        return (isDone ? \"[X]\" : \"[ ]\"); // mark done task with X","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":40,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":41,"author":{"gitId":"SampsonYe1999"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":42,"author":{"gitId":"SampsonYe1999"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-02-24"},{"lineNumber":43,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":44,"author":{"gitId":"SampsonYe1999"},"content":"     * @throws SamException If the task was already marked.","lastModifiedDate":"2024-02-24"},{"lineNumber":45,"author":{"gitId":"SampsonYe1999"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":46,"author":{"gitId":"SampsonYe1999"},"content":"    public void markAsDone() throws SamException {","lastModifiedDate":"2024-02-24"},{"lineNumber":47,"author":{"gitId":"SampsonYe1999"},"content":"        if (this.isDone) {","lastModifiedDate":"2024-02-24"},{"lineNumber":48,"author":{"gitId":"SampsonYe1999"},"content":"            throw new SamException(\"This task was already marked.\");","lastModifiedDate":"2024-02-24"},{"lineNumber":49,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":50,"author":{"gitId":"SampsonYe1999"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-26"},{"lineNumber":51,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":52,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":53,"author":{"gitId":"SampsonYe1999"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":54,"author":{"gitId":"SampsonYe1999"},"content":"     * Marks the task as undone.","lastModifiedDate":"2024-02-24"},{"lineNumber":55,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":56,"author":{"gitId":"SampsonYe1999"},"content":"     * @throws SamException If the task was already unmarked.","lastModifiedDate":"2024-02-24"},{"lineNumber":57,"author":{"gitId":"SampsonYe1999"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":58,"author":{"gitId":"SampsonYe1999"},"content":"    public void markAsUndone() throws SamException {","lastModifiedDate":"2024-02-24"},{"lineNumber":59,"author":{"gitId":"SampsonYe1999"},"content":"        if (!this.isDone) {","lastModifiedDate":"2024-02-24"},{"lineNumber":60,"author":{"gitId":"SampsonYe1999"},"content":"            throw new SamException(\"This task was already unmarked.\");","lastModifiedDate":"2024-02-24"},{"lineNumber":61,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":62,"author":{"gitId":"SampsonYe1999"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-26"},{"lineNumber":63,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":64,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"SampsonYe1999"},"content":"    public boolean containsKeyword(String keyword) {","lastModifiedDate":"2024-02-24"},{"lineNumber":66,"author":{"gitId":"SampsonYe1999"},"content":"        return description.contains(keyword);","lastModifiedDate":"2024-02-24"},{"lineNumber":67,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":68,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":69,"author":{"gitId":"SampsonYe1999"},"content":"    public String toString() {","lastModifiedDate":"2024-01-29"},{"lineNumber":70,"author":{"gitId":"SampsonYe1999"},"content":"        return (this.getStatusIcon() + \" \" + this.description);","lastModifiedDate":"2024-01-29"},{"lineNumber":71,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":73,"author":{"gitId":"SampsonYe1999"},"content":"    public String toFileFormat() {","lastModifiedDate":"2024-02-05"},{"lineNumber":74,"author":{"gitId":"SampsonYe1999"},"content":"        return null;","lastModifiedDate":"2024-02-05"},{"lineNumber":75,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":76,"author":{"gitId":"SampsonYe1999"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"SampsonYe1999":76}},{"path":"src/main/java/sam/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SampsonYe1999"},"content":"package sam.task;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"SampsonYe1999"},"content":"import sam.SamException;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"SampsonYe1999"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"SampsonYe1999"},"content":" * Represents a todo task.","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"SampsonYe1999"},"content":" *","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"SampsonYe1999"},"content":" * Inherits from the Task class.","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"SampsonYe1999"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"SampsonYe1999"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"SampsonYe1999"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"SampsonYe1999"},"content":"     * Constructs a ToDo task with the specified description.","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"SampsonYe1999"},"content":"     * @param description the description of the ToDo task","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"SampsonYe1999"},"content":"     * @throws SamException if there is an issue with the provided description","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"SampsonYe1999"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"SampsonYe1999"},"content":"    public ToDo(String description) throws SamException {","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"SampsonYe1999"},"content":"        super(description);","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"SampsonYe1999"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"SampsonYe1999"},"content":"    public String toString() {","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"SampsonYe1999"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"SampsonYe1999"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"SampsonYe1999"},"content":"    public String toFileFormat() {","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"SampsonYe1999"},"content":"        return String.format(\"T | %d | %s\", isDone ? 1 : 0, this.description);","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"SampsonYe1999"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"SampsonYe1999":30}},{"path":"src/main/java/sam/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SampsonYe1999"},"content":"package sam.ui;","lastModifiedDate":"2024-02-24"},{"lineNumber":2,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":3,"author":{"gitId":"SampsonYe1999"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"SampsonYe1999"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"SampsonYe1999"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"SampsonYe1999"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"SampsonYe1999"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"SampsonYe1999"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"SampsonYe1999"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"SampsonYe1999"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"SampsonYe1999"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"SampsonYe1999"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"SampsonYe1999"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"SampsonYe1999"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"SampsonYe1999"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"SampsonYe1999"},"content":" * Represents a custom dialog box for displaying messages.","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"SampsonYe1999"},"content":" *","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"SampsonYe1999"},"content":" * This class extends the JavaFX HBox class to create a custom dialog box","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"SampsonYe1999"},"content":" * for displaying messages in a user interface.","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"SampsonYe1999"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"SampsonYe1999"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"SampsonYe1999"},"content":"    @FXML","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"SampsonYe1999"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-24"},{"lineNumber":26,"author":{"gitId":"SampsonYe1999"},"content":"    @FXML","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"SampsonYe1999"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-24"},{"lineNumber":28,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":29,"author":{"gitId":"SampsonYe1999"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"SampsonYe1999"},"content":"        try {","lastModifiedDate":"2024-02-24"},{"lineNumber":31,"author":{"gitId":"SampsonYe1999"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-24"},{"lineNumber":32,"author":{"gitId":"SampsonYe1999"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-24"},{"lineNumber":33,"author":{"gitId":"SampsonYe1999"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"SampsonYe1999"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-24"},{"lineNumber":35,"author":{"gitId":"SampsonYe1999"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-24"},{"lineNumber":36,"author":{"gitId":"SampsonYe1999"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-24"},{"lineNumber":37,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":39,"author":{"gitId":"SampsonYe1999"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"SampsonYe1999"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":42,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":43,"author":{"gitId":"SampsonYe1999"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":44,"author":{"gitId":"SampsonYe1999"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-24"},{"lineNumber":45,"author":{"gitId":"SampsonYe1999"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":46,"author":{"gitId":"SampsonYe1999"},"content":"    private void flip() {","lastModifiedDate":"2024-02-24"},{"lineNumber":47,"author":{"gitId":"SampsonYe1999"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-24"},{"lineNumber":48,"author":{"gitId":"SampsonYe1999"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-24"},{"lineNumber":49,"author":{"gitId":"SampsonYe1999"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-24"},{"lineNumber":50,"author":{"gitId":"SampsonYe1999"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-24"},{"lineNumber":51,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":52,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":53,"author":{"gitId":"SampsonYe1999"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-24"},{"lineNumber":54,"author":{"gitId":"SampsonYe1999"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-24"},{"lineNumber":55,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":56,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":57,"author":{"gitId":"SampsonYe1999"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-02-24"},{"lineNumber":58,"author":{"gitId":"SampsonYe1999"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-24"},{"lineNumber":59,"author":{"gitId":"SampsonYe1999"},"content":"        db.flip();","lastModifiedDate":"2024-02-24"},{"lineNumber":60,"author":{"gitId":"SampsonYe1999"},"content":"        return db;","lastModifiedDate":"2024-02-24"},{"lineNumber":61,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":62,"author":{"gitId":"SampsonYe1999"},"content":"}","lastModifiedDate":"2024-02-24"}],"authorContributionMap":{"SampsonYe1999":62}},{"path":"src/main/java/sam/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SampsonYe1999"},"content":"package sam.ui;","lastModifiedDate":"2024-02-24"},{"lineNumber":2,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":3,"author":{"gitId":"SampsonYe1999"},"content":"import sam.Sam;","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"SampsonYe1999"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"SampsonYe1999"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"SampsonYe1999"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"SampsonYe1999"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"SampsonYe1999"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"SampsonYe1999"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"SampsonYe1999"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"SampsonYe1999"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"SampsonYe1999"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"SampsonYe1999"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"SampsonYe1999"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"SampsonYe1999"},"content":"    @FXML","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"SampsonYe1999"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"SampsonYe1999"},"content":"    @FXML","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"SampsonYe1999"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"SampsonYe1999"},"content":"    @FXML","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"SampsonYe1999"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"SampsonYe1999"},"content":"    @FXML","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"SampsonYe1999"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"SampsonYe1999"},"content":"    private Sam sam;","lastModifiedDate":"2024-02-24"},{"lineNumber":26,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"SampsonYe1999"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2024-02-24"},{"lineNumber":28,"author":{"gitId":"SampsonYe1999"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2024-02-24"},{"lineNumber":29,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"SampsonYe1999"},"content":"    @FXML","lastModifiedDate":"2024-02-24"},{"lineNumber":31,"author":{"gitId":"SampsonYe1999"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-24"},{"lineNumber":32,"author":{"gitId":"SampsonYe1999"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-24"},{"lineNumber":33,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":35,"author":{"gitId":"SampsonYe1999"},"content":"    public void setSam(Sam newSam) {","lastModifiedDate":"2024-02-24"},{"lineNumber":36,"author":{"gitId":"SampsonYe1999"},"content":"        sam \u003d newSam;","lastModifiedDate":"2024-02-24"},{"lineNumber":37,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":39,"author":{"gitId":"SampsonYe1999"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"SampsonYe1999"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"SampsonYe1999"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-24"},{"lineNumber":42,"author":{"gitId":"SampsonYe1999"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":43,"author":{"gitId":"SampsonYe1999"},"content":"    @FXML","lastModifiedDate":"2024-02-24"},{"lineNumber":44,"author":{"gitId":"SampsonYe1999"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-24"},{"lineNumber":45,"author":{"gitId":"SampsonYe1999"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-24"},{"lineNumber":46,"author":{"gitId":"SampsonYe1999"},"content":"        String response \u003d sam.getResponse(input);","lastModifiedDate":"2024-02-24"},{"lineNumber":47,"author":{"gitId":"SampsonYe1999"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-24"},{"lineNumber":48,"author":{"gitId":"SampsonYe1999"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-24"},{"lineNumber":49,"author":{"gitId":"SampsonYe1999"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2024-02-24"},{"lineNumber":50,"author":{"gitId":"SampsonYe1999"},"content":"        );","lastModifiedDate":"2024-02-24"},{"lineNumber":51,"author":{"gitId":"SampsonYe1999"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-24"},{"lineNumber":52,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":53,"author":{"gitId":"SampsonYe1999"},"content":"}","lastModifiedDate":"2024-02-24"}],"authorContributionMap":{"SampsonYe1999":53}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"SampsonYe1999"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":2,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":3,"author":{"gitId":"SampsonYe1999"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"SampsonYe1999"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"SampsonYe1999"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"SampsonYe1999"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"SampsonYe1999"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"SampsonYe1999"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"SampsonYe1999"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"SampsonYe1999"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"SampsonYe1999"},"content":"  \u003c/children\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"SampsonYe1999"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"SampsonYe1999"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"SampsonYe1999"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"SampsonYe1999"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-24"}],"authorContributionMap":{"SampsonYe1999":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"SampsonYe1999"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":2,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":3,"author":{"gitId":"SampsonYe1999"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"SampsonYe1999"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"SampsonYe1999"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"SampsonYe1999"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"SampsonYe1999"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"SampsonYe1999"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"sam.ui.MainWindow\"\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"SampsonYe1999"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"SampsonYe1999"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"SampsonYe1999"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"SampsonYe1999"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"SampsonYe1999"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"SampsonYe1999"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"SampsonYe1999"},"content":"      \u003c/content\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"SampsonYe1999"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"SampsonYe1999"},"content":"  \u003c/children\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"SampsonYe1999"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-24"}],"authorContributionMap":{"SampsonYe1999":19}},{"path":"src/test/java/sam/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SampsonYe1999"},"content":"package sam;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"SampsonYe1999"},"content":"import sam.command.ByeCommand;","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"SampsonYe1999"},"content":"import sam.command.Command;","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"SampsonYe1999"},"content":"import sam.command.DeadlineCommand;","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"SampsonYe1999"},"content":"import sam.command.DeleteCommand;","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"SampsonYe1999"},"content":"import sam.command.EventCommand;","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"SampsonYe1999"},"content":"import sam.command.FindCommand;","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"SampsonYe1999"},"content":"import sam.command.ListCommand;","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"SampsonYe1999"},"content":"import sam.command.MarkCommand;","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"SampsonYe1999"},"content":"import sam.command.TodoCommand;","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"SampsonYe1999"},"content":"import sam.command.UnknownCommand;","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"SampsonYe1999"},"content":"import sam.command.UnmarkCommand;","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"SampsonYe1999"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"SampsonYe1999"},"content":" * Represents a Parser object for processing commands.","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"SampsonYe1999"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"SampsonYe1999"},"content":"public class Parser {","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"SampsonYe1999"},"content":"    private enum CommandType {","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"SampsonYe1999"},"content":"        LIST, FIND, TODO, DEADLINE, EVENT, MARK, UNMARK, DELETE, BYE, UNKNOWN","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"SampsonYe1999"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"SampsonYe1999"},"content":"     * Processes a command type and task information to create and return the corresponding Command object.","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":26,"author":{"gitId":"SampsonYe1999"},"content":"     * Based on the provided CommandType, creates an instance of the appropriate Command subclass","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"SampsonYe1999"},"content":"     * and initializes it with the given task information. If the command type is unrecognized,","lastModifiedDate":"2024-02-24"},{"lineNumber":28,"author":{"gitId":"SampsonYe1999"},"content":"     * creates an UnknownCommand object.","lastModifiedDate":"2024-02-24"},{"lineNumber":29,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"SampsonYe1999"},"content":"     * @param commandType the type of command to process","lastModifiedDate":"2024-02-24"},{"lineNumber":31,"author":{"gitId":"SampsonYe1999"},"content":"     * @param taskInfo    additional information related to the command (e.g., task description)","lastModifiedDate":"2024-02-24"},{"lineNumber":32,"author":{"gitId":"SampsonYe1999"},"content":"     * @return the Command object corresponding to the specified command type","lastModifiedDate":"2024-02-24"},{"lineNumber":33,"author":{"gitId":"SampsonYe1999"},"content":"     * @throws SamException if an error occurs during command processing","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"SampsonYe1999"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":35,"author":{"gitId":"SampsonYe1999"},"content":"    private static Command processCommand(CommandType commandType, String taskInfo) throws SamException {","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"SampsonYe1999"},"content":"        switch (commandType) {","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"SampsonYe1999"},"content":"        case LIST:","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"SampsonYe1999"},"content":"            return new ListCommand();","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"SampsonYe1999"},"content":"        case FIND:","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"SampsonYe1999"},"content":"            return new FindCommand(taskInfo);","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"SampsonYe1999"},"content":"        case MARK:","lastModifiedDate":"2024-02-23"},{"lineNumber":42,"author":{"gitId":"SampsonYe1999"},"content":"            return new MarkCommand(taskInfo);","lastModifiedDate":"2024-02-23"},{"lineNumber":43,"author":{"gitId":"SampsonYe1999"},"content":"        case UNMARK:","lastModifiedDate":"2024-02-23"},{"lineNumber":44,"author":{"gitId":"SampsonYe1999"},"content":"            return new UnmarkCommand(taskInfo);","lastModifiedDate":"2024-02-23"},{"lineNumber":45,"author":{"gitId":"SampsonYe1999"},"content":"        case TODO:","lastModifiedDate":"2024-02-23"},{"lineNumber":46,"author":{"gitId":"SampsonYe1999"},"content":"            return new TodoCommand(taskInfo);","lastModifiedDate":"2024-02-23"},{"lineNumber":47,"author":{"gitId":"SampsonYe1999"},"content":"        case DEADLINE:","lastModifiedDate":"2024-02-23"},{"lineNumber":48,"author":{"gitId":"SampsonYe1999"},"content":"            return new DeadlineCommand(taskInfo);","lastModifiedDate":"2024-02-23"},{"lineNumber":49,"author":{"gitId":"SampsonYe1999"},"content":"        case EVENT:","lastModifiedDate":"2024-02-23"},{"lineNumber":50,"author":{"gitId":"SampsonYe1999"},"content":"            return new EventCommand(taskInfo);","lastModifiedDate":"2024-02-23"},{"lineNumber":51,"author":{"gitId":"SampsonYe1999"},"content":"        case DELETE:","lastModifiedDate":"2024-02-23"},{"lineNumber":52,"author":{"gitId":"SampsonYe1999"},"content":"            return new DeleteCommand(taskInfo);","lastModifiedDate":"2024-02-23"},{"lineNumber":53,"author":{"gitId":"SampsonYe1999"},"content":"        case BYE:","lastModifiedDate":"2024-02-23"},{"lineNumber":54,"author":{"gitId":"SampsonYe1999"},"content":"            return new ByeCommand();","lastModifiedDate":"2024-02-23"},{"lineNumber":55,"author":{"gitId":"SampsonYe1999"},"content":"        default:","lastModifiedDate":"2024-02-23"},{"lineNumber":56,"author":{"gitId":"SampsonYe1999"},"content":"            return new UnknownCommand();","lastModifiedDate":"2024-02-23"},{"lineNumber":57,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":58,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":59,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":60,"author":{"gitId":"SampsonYe1999"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":61,"author":{"gitId":"SampsonYe1999"},"content":"     * Parses userInput to determine the commandType and taskInfo, then returns the corresponding Command object.","lastModifiedDate":"2024-02-24"},{"lineNumber":62,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":63,"author":{"gitId":"SampsonYe1999"},"content":"     * Splits the userInput into two parts: the command type and the task information (if present).","lastModifiedDate":"2024-02-24"},{"lineNumber":64,"author":{"gitId":"SampsonYe1999"},"content":"     * Converts the command type to uppercase and attempts to match it with a value of the CommandType enum.","lastModifiedDate":"2024-02-24"},{"lineNumber":65,"author":{"gitId":"SampsonYe1999"},"content":"     * If the command type is unrecognized, sets it to UNKNOWN.","lastModifiedDate":"2024-02-24"},{"lineNumber":66,"author":{"gitId":"SampsonYe1999"},"content":"     * Delegates the creation of the Command object to the processCommand method, passing the commandType and taskInfo.","lastModifiedDate":"2024-02-24"},{"lineNumber":67,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":68,"author":{"gitId":"SampsonYe1999"},"content":"     * @param userInput the input provided by the user","lastModifiedDate":"2024-02-24"},{"lineNumber":69,"author":{"gitId":"SampsonYe1999"},"content":"     * @return the Command object corresponding to the parsed user input","lastModifiedDate":"2024-02-24"},{"lineNumber":70,"author":{"gitId":"SampsonYe1999"},"content":"     * @throws SamException if an error occurs during parsing or command processing","lastModifiedDate":"2024-02-24"},{"lineNumber":71,"author":{"gitId":"SampsonYe1999"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":72,"author":{"gitId":"SampsonYe1999"},"content":"    public static Command parse(String userInput) throws SamException {","lastModifiedDate":"2024-02-23"},{"lineNumber":73,"author":{"gitId":"SampsonYe1999"},"content":"        String[] command \u003d userInput.split(\" \", 2);","lastModifiedDate":"2024-02-23"},{"lineNumber":74,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":75,"author":{"gitId":"SampsonYe1999"},"content":"        CommandType commandType;","lastModifiedDate":"2024-02-23"},{"lineNumber":76,"author":{"gitId":"SampsonYe1999"},"content":"        String taskInfo \u003d command.length \u003c 2 ? \"\" : command[1];","lastModifiedDate":"2024-02-23"},{"lineNumber":77,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":78,"author":{"gitId":"SampsonYe1999"},"content":"        try {","lastModifiedDate":"2024-02-23"},{"lineNumber":79,"author":{"gitId":"SampsonYe1999"},"content":"            commandType \u003d CommandType.valueOf(command[0].toUpperCase());","lastModifiedDate":"2024-02-23"},{"lineNumber":80,"author":{"gitId":"SampsonYe1999"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-02-23"},{"lineNumber":81,"author":{"gitId":"SampsonYe1999"},"content":"            commandType \u003d CommandType.UNKNOWN;","lastModifiedDate":"2024-02-23"},{"lineNumber":82,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":83,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":84,"author":{"gitId":"SampsonYe1999"},"content":"        return processCommand(commandType, taskInfo);","lastModifiedDate":"2024-02-23"},{"lineNumber":85,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":86,"author":{"gitId":"SampsonYe1999"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"SampsonYe1999":86}},{"path":"src/test/java/sam/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SampsonYe1999"},"content":"package sam;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"SampsonYe1999"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"SampsonYe1999"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"SampsonYe1999"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"SampsonYe1999"},"content":"public class ParserTest {","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"SampsonYe1999"},"content":"    @Test","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"SampsonYe1999"},"content":"    public void testTodoWithoutDescription() {","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"SampsonYe1999"},"content":"        Exception exception \u003d assertThrows(SamException.class, () -\u003e Parser.parse(\"todo\"));","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"SampsonYe1999"},"content":"        assertEquals(\"Please provide a task description.\", exception.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"SampsonYe1999"},"content":"    @Test","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"SampsonYe1999"},"content":"    public void testEventWithoutDescription() {","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"SampsonYe1999"},"content":"        Exception exception \u003d assertThrows(SamException.class, ()","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"SampsonYe1999"},"content":"                -\u003e Parser.parse(\"event /from 29/1/2024 1800 /to 29/1/2024 1900\"));","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"SampsonYe1999"},"content":"        assertEquals(\"Please check whether you have provided a description and both start/end time.\",","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"SampsonYe1999"},"content":"                exception.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"SampsonYe1999"},"content":"    @Test","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"SampsonYe1999"},"content":"    public void testEventWithoutToDateTime() {","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"SampsonYe1999"},"content":"        Exception exception \u003d assertThrows(SamException.class, ()","lastModifiedDate":"2024-02-24"},{"lineNumber":26,"author":{"gitId":"SampsonYe1999"},"content":"                -\u003e Parser.parse(\"event event /from 29/2/2012\"));","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"SampsonYe1999"},"content":"        assertEquals(\"Invalid format for event, please provide event details by using /from and /to.\",","lastModifiedDate":"2024-02-24"},{"lineNumber":28,"author":{"gitId":"SampsonYe1999"},"content":"                exception.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"SampsonYe1999"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"SampsonYe1999":30}},{"path":"src/test/java/sam/Sam.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SampsonYe1999"},"content":"package sam;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"SampsonYe1999"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"SampsonYe1999"},"content":"import sam.command.Command;","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"SampsonYe1999"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"SampsonYe1999"},"content":" * The main class of the Sam application.","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"SampsonYe1999"},"content":" *","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"SampsonYe1999"},"content":" * This class serves as the entry point for Sam. It contains the main method","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"SampsonYe1999"},"content":" * where the application starts its execution.","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"SampsonYe1999"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"SampsonYe1999"},"content":"public class Sam {","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"SampsonYe1999"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"SampsonYe1999"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"SampsonYe1999"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"SampsonYe1999"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"SampsonYe1999"},"content":"     * Constructs a new Sam object.","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"SampsonYe1999"},"content":"     * Initializes the user interface, storage, and taskList.","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"SampsonYe1999"},"content":"     * If loading tasks from the specified file path fails due to IOException or SamException,","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"SampsonYe1999"},"content":"     * displays a loading error message and initializes an empty task list.","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"SampsonYe1999"},"content":"     * @param filePath the file path from which to load tasks","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"SampsonYe1999"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":26,"author":{"gitId":"SampsonYe1999"},"content":"    public Sam(String filePath) {","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"SampsonYe1999"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"SampsonYe1999"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2024-02-24"},{"lineNumber":29,"author":{"gitId":"SampsonYe1999"},"content":"        try {","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"SampsonYe1999"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"SampsonYe1999"},"content":"        } catch (IOException | SamException e) {","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"SampsonYe1999"},"content":"            ui.showLoadingError();","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"SampsonYe1999"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":37,"author":{"gitId":"SampsonYe1999"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"SampsonYe1999"},"content":"     * Runs the program.","lastModifiedDate":"2024-02-24"},{"lineNumber":39,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"SampsonYe1999"},"content":"     * Greets the user, then enters a loop to continuously read commands from the user.","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"SampsonYe1999"},"content":"     * Each command is parsed and executed. If a command execution results in an exit signal,","lastModifiedDate":"2024-02-24"},{"lineNumber":42,"author":{"gitId":"SampsonYe1999"},"content":"     * the loop terminates. Displays error messages if any SamException occurs during command execution.","lastModifiedDate":"2024-02-24"},{"lineNumber":43,"author":{"gitId":"SampsonYe1999"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":44,"author":{"gitId":"SampsonYe1999"},"content":"    public void run() {","lastModifiedDate":"2024-02-23"},{"lineNumber":45,"author":{"gitId":"SampsonYe1999"},"content":"        ui.greet();","lastModifiedDate":"2024-02-23"},{"lineNumber":46,"author":{"gitId":"SampsonYe1999"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2024-02-23"},{"lineNumber":47,"author":{"gitId":"SampsonYe1999"},"content":"        while (!isExit) {","lastModifiedDate":"2024-02-23"},{"lineNumber":48,"author":{"gitId":"SampsonYe1999"},"content":"            try {","lastModifiedDate":"2024-02-23"},{"lineNumber":49,"author":{"gitId":"SampsonYe1999"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2024-02-23"},{"lineNumber":50,"author":{"gitId":"SampsonYe1999"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2024-02-23"},{"lineNumber":51,"author":{"gitId":"SampsonYe1999"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2024-02-23"},{"lineNumber":52,"author":{"gitId":"SampsonYe1999"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2024-02-23"},{"lineNumber":53,"author":{"gitId":"SampsonYe1999"},"content":"            } catch (SamException e) {","lastModifiedDate":"2024-02-23"},{"lineNumber":54,"author":{"gitId":"SampsonYe1999"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":55,"author":{"gitId":"SampsonYe1999"},"content":"            }","lastModifiedDate":"2024-02-23"},{"lineNumber":56,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":57,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":58,"author":{"gitId":"SampsonYe1999"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"SampsonYe1999":58}},{"path":"src/test/java/sam/SamException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SampsonYe1999"},"content":"package sam;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":3,"author":{"gitId":"SampsonYe1999"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"SampsonYe1999"},"content":" * The exception class for errors specific to Sam .","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"SampsonYe1999"},"content":" *","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"SampsonYe1999"},"content":" * Extends the Exception class to represent custom exceptions that can occur within Sam.","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"SampsonYe1999"},"content":" * Each instance of SamException contains a message detailing the specific error.","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"SampsonYe1999"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"SampsonYe1999"},"content":"public class SamException extends Exception {","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"SampsonYe1999"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"SampsonYe1999"},"content":"     * Constructs a new SamException with the specified detail message.","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"SampsonYe1999"},"content":"     * @param message the detail message (which is saved for later retrieval by the getMessage() method)","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"SampsonYe1999"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"SampsonYe1999"},"content":"    public SamException(String message) {","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"SampsonYe1999"},"content":"        super(message);","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"SampsonYe1999"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"SampsonYe1999":18}},{"path":"src/test/java/sam/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SampsonYe1999"},"content":"package sam;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"SampsonYe1999"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"SampsonYe1999"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"SampsonYe1999"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"SampsonYe1999"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"SampsonYe1999"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"SampsonYe1999"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"SampsonYe1999"},"content":"import sam.task.Deadline;","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"SampsonYe1999"},"content":"import sam.task.Event;","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"SampsonYe1999"},"content":"import sam.task.Task;","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"SampsonYe1999"},"content":"import sam.task.ToDo;","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"SampsonYe1999"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"SampsonYe1999"},"content":" * Represents a Storage object for file IO.","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"SampsonYe1999"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"SampsonYe1999"},"content":"public class Storage {","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"SampsonYe1999"},"content":"    private final String filePath;","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"SampsonYe1999"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"SampsonYe1999"},"content":"     * Constructs a Storage object with the specified file path.","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"SampsonYe1999"},"content":"     * Initializes the Storage object with the provided file path, which indicates the location","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"SampsonYe1999"},"content":"     * where data will be stored or retrieved.","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":26,"author":{"gitId":"SampsonYe1999"},"content":"     * @param filePath the file path used by the Storage object","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"SampsonYe1999"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":28,"author":{"gitId":"SampsonYe1999"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-02-24"},{"lineNumber":29,"author":{"gitId":"SampsonYe1999"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":32,"author":{"gitId":"SampsonYe1999"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":33,"author":{"gitId":"SampsonYe1999"},"content":"     * Loads tasks from the specified file.","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":35,"author":{"gitId":"SampsonYe1999"},"content":"     * Reads task from the file indicated by the FILE_PATH attribute and returns them as an ArrayList.","lastModifiedDate":"2024-02-24"},{"lineNumber":36,"author":{"gitId":"SampsonYe1999"},"content":"     * If an IOException occurs during file reading, or if there\u0027s an issue with the file format or content,","lastModifiedDate":"2024-02-24"},{"lineNumber":37,"author":{"gitId":"SampsonYe1999"},"content":"     * a SamException is thrown.","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":39,"author":{"gitId":"SampsonYe1999"},"content":"     * @return an ArrayList containing the tasks loaded from the file","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"SampsonYe1999"},"content":"     * @throws SamException if an error occurs during task loading","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"SampsonYe1999"},"content":"     * @throws IOException if an I/O error occurs while reading from the file","lastModifiedDate":"2024-02-24"},{"lineNumber":42,"author":{"gitId":"SampsonYe1999"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":43,"author":{"gitId":"SampsonYe1999"},"content":"    public ArrayList\u003cTask\u003e load() throws SamException, IOException {","lastModifiedDate":"2024-02-23"},{"lineNumber":44,"author":{"gitId":"SampsonYe1999"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-23"},{"lineNumber":45,"author":{"gitId":"SampsonYe1999"},"content":"        BufferedReader reader \u003d new BufferedReader(new FileReader(filePath));","lastModifiedDate":"2024-02-24"},{"lineNumber":46,"author":{"gitId":"SampsonYe1999"},"content":"        String line;","lastModifiedDate":"2024-02-23"},{"lineNumber":47,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":48,"author":{"gitId":"SampsonYe1999"},"content":"        while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2024-02-23"},{"lineNumber":49,"author":{"gitId":"SampsonYe1999"},"content":"            Task task \u003d createTaskFromLine(line);","lastModifiedDate":"2024-02-23"},{"lineNumber":50,"author":{"gitId":"SampsonYe1999"},"content":"            if (task !\u003d null) {","lastModifiedDate":"2024-02-23"},{"lineNumber":51,"author":{"gitId":"SampsonYe1999"},"content":"                taskList.add(task);","lastModifiedDate":"2024-02-23"},{"lineNumber":52,"author":{"gitId":"SampsonYe1999"},"content":"            }","lastModifiedDate":"2024-02-23"},{"lineNumber":53,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":54,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":55,"author":{"gitId":"SampsonYe1999"},"content":"        reader.close();","lastModifiedDate":"2024-02-23"},{"lineNumber":56,"author":{"gitId":"SampsonYe1999"},"content":"        return taskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":57,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":58,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":59,"author":{"gitId":"SampsonYe1999"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":60,"author":{"gitId":"SampsonYe1999"},"content":"     * Saves the given list of tasks to a file.","lastModifiedDate":"2024-02-24"},{"lineNumber":61,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":62,"author":{"gitId":"SampsonYe1999"},"content":"     * Writes the provided TaskList to the file indicated by the FILE_PATH attribute.","lastModifiedDate":"2024-02-24"},{"lineNumber":63,"author":{"gitId":"SampsonYe1999"},"content":"     * If an IOException occurs during file writing, an error message is displayed,","lastModifiedDate":"2024-02-24"},{"lineNumber":64,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":65,"author":{"gitId":"SampsonYe1999"},"content":"     * @param tasks the TaskList to be saved to the file","lastModifiedDate":"2024-02-24"},{"lineNumber":66,"author":{"gitId":"SampsonYe1999"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":67,"author":{"gitId":"SampsonYe1999"},"content":"    public void save(TaskList tasks) {","lastModifiedDate":"2024-02-23"},{"lineNumber":68,"author":{"gitId":"SampsonYe1999"},"content":"        try {","lastModifiedDate":"2024-02-23"},{"lineNumber":69,"author":{"gitId":"SampsonYe1999"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filePath));","lastModifiedDate":"2024-02-24"},{"lineNumber":70,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":71,"author":{"gitId":"SampsonYe1999"},"content":"            for (String item : tasks.getFileStrings()) {","lastModifiedDate":"2024-02-23"},{"lineNumber":72,"author":{"gitId":"SampsonYe1999"},"content":"                writer.write(item + \"\\n\");","lastModifiedDate":"2024-02-23"},{"lineNumber":73,"author":{"gitId":"SampsonYe1999"},"content":"            }","lastModifiedDate":"2024-02-23"},{"lineNumber":74,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":75,"author":{"gitId":"SampsonYe1999"},"content":"            writer.close();","lastModifiedDate":"2024-02-23"},{"lineNumber":76,"author":{"gitId":"SampsonYe1999"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-23"},{"lineNumber":77,"author":{"gitId":"SampsonYe1999"},"content":"            System.out.println(\"Error saving tasks to file.\");","lastModifiedDate":"2024-02-23"},{"lineNumber":78,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":79,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":80,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":81,"author":{"gitId":"SampsonYe1999"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":82,"author":{"gitId":"SampsonYe1999"},"content":"     * Creates a Task object from the provided line of text.","lastModifiedDate":"2024-02-24"},{"lineNumber":83,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":84,"author":{"gitId":"SampsonYe1999"},"content":"     * Parses the given line of text to extract task details and constructs a Task object accordingly.","lastModifiedDate":"2024-02-24"},{"lineNumber":85,"author":{"gitId":"SampsonYe1999"},"content":"     * If the line format is invalid or incomplete, a SamException is thrown.","lastModifiedDate":"2024-02-24"},{"lineNumber":86,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":87,"author":{"gitId":"SampsonYe1999"},"content":"     * @param line the line of text containing task details","lastModifiedDate":"2024-02-24"},{"lineNumber":88,"author":{"gitId":"SampsonYe1999"},"content":"     * @return the Task object created from the line of text","lastModifiedDate":"2024-02-24"},{"lineNumber":89,"author":{"gitId":"SampsonYe1999"},"content":"     * @throws SamException if an error occurs while creating the Task object due to invalid or incomplete data","lastModifiedDate":"2024-02-24"},{"lineNumber":90,"author":{"gitId":"SampsonYe1999"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":91,"author":{"gitId":"SampsonYe1999"},"content":"    private static Task createTaskFromLine(String line) throws SamException {","lastModifiedDate":"2024-02-24"},{"lineNumber":92,"author":{"gitId":"SampsonYe1999"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2024-02-23"},{"lineNumber":93,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":94,"author":{"gitId":"SampsonYe1999"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2024-02-23"},{"lineNumber":95,"author":{"gitId":"SampsonYe1999"},"content":"            System.out.println(\"Skipped invalid line in data file: \" + line);","lastModifiedDate":"2024-02-23"},{"lineNumber":96,"author":{"gitId":"SampsonYe1999"},"content":"            return null;","lastModifiedDate":"2024-02-23"},{"lineNumber":97,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":98,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":99,"author":{"gitId":"SampsonYe1999"},"content":"        String taskType \u003d parts[0];","lastModifiedDate":"2024-02-23"},{"lineNumber":100,"author":{"gitId":"SampsonYe1999"},"content":"        int isDone \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2024-02-23"},{"lineNumber":101,"author":{"gitId":"SampsonYe1999"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2024-02-23"},{"lineNumber":102,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":103,"author":{"gitId":"SampsonYe1999"},"content":"        Task task;","lastModifiedDate":"2024-02-23"},{"lineNumber":104,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":105,"author":{"gitId":"SampsonYe1999"},"content":"        switch (taskType) {","lastModifiedDate":"2024-02-23"},{"lineNumber":106,"author":{"gitId":"SampsonYe1999"},"content":"        case \"T\":","lastModifiedDate":"2024-02-23"},{"lineNumber":107,"author":{"gitId":"SampsonYe1999"},"content":"            task \u003d new ToDo(description);","lastModifiedDate":"2024-02-23"},{"lineNumber":108,"author":{"gitId":"SampsonYe1999"},"content":"            break;","lastModifiedDate":"2024-02-23"},{"lineNumber":109,"author":{"gitId":"SampsonYe1999"},"content":"        case \"D\":","lastModifiedDate":"2024-02-23"},{"lineNumber":110,"author":{"gitId":"SampsonYe1999"},"content":"            String by \u003d parts.length \u003e 3 ? parts[3] : \"\";","lastModifiedDate":"2024-02-23"},{"lineNumber":111,"author":{"gitId":"SampsonYe1999"},"content":"            task \u003d new Deadline(description, by);","lastModifiedDate":"2024-02-23"},{"lineNumber":112,"author":{"gitId":"SampsonYe1999"},"content":"            break;","lastModifiedDate":"2024-02-23"},{"lineNumber":113,"author":{"gitId":"SampsonYe1999"},"content":"        case \"E\":","lastModifiedDate":"2024-02-23"},{"lineNumber":114,"author":{"gitId":"SampsonYe1999"},"content":"            String fromTo \u003d parts.length \u003e 3 ? parts[3] : \"\";","lastModifiedDate":"2024-02-23"},{"lineNumber":115,"author":{"gitId":"SampsonYe1999"},"content":"            String[] fromToArray \u003d fromTo.split(\" to \");","lastModifiedDate":"2024-02-23"},{"lineNumber":116,"author":{"gitId":"SampsonYe1999"},"content":"            String from \u003d fromToArray.length \u003e 0 ? fromToArray[0] : \"\";","lastModifiedDate":"2024-02-23"},{"lineNumber":117,"author":{"gitId":"SampsonYe1999"},"content":"            String to \u003d fromToArray.length \u003e 1 ? fromToArray[1] : \"\";","lastModifiedDate":"2024-02-23"},{"lineNumber":118,"author":{"gitId":"SampsonYe1999"},"content":"            task \u003d new Event(description, from, to);","lastModifiedDate":"2024-02-23"},{"lineNumber":119,"author":{"gitId":"SampsonYe1999"},"content":"            break;","lastModifiedDate":"2024-02-23"},{"lineNumber":120,"author":{"gitId":"SampsonYe1999"},"content":"        default:","lastModifiedDate":"2024-02-23"},{"lineNumber":121,"author":{"gitId":"SampsonYe1999"},"content":"            System.out.println(\"Skipped unknown task type in data file: \" + taskType);","lastModifiedDate":"2024-02-23"},{"lineNumber":122,"author":{"gitId":"SampsonYe1999"},"content":"            return null;","lastModifiedDate":"2024-02-23"},{"lineNumber":123,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":124,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":125,"author":{"gitId":"SampsonYe1999"},"content":"        if (isDone \u003d\u003d 1) {","lastModifiedDate":"2024-02-23"},{"lineNumber":126,"author":{"gitId":"SampsonYe1999"},"content":"            task.markAsDone();","lastModifiedDate":"2024-02-23"},{"lineNumber":127,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":128,"author":{"gitId":"SampsonYe1999"},"content":"        return task;","lastModifiedDate":"2024-02-23"},{"lineNumber":129,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":130,"author":{"gitId":"SampsonYe1999"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"SampsonYe1999":130}},{"path":"src/test/java/sam/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SampsonYe1999"},"content":"package sam;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"SampsonYe1999"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"SampsonYe1999"},"content":"import sam.task.Task;","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"SampsonYe1999"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"SampsonYe1999"},"content":" * Represents a list of tasks.","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"SampsonYe1999"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"SampsonYe1999"},"content":"public class TaskList {","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"SampsonYe1999"},"content":"    private ArrayList\u003cTask\u003e items;","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"SampsonYe1999"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"SampsonYe1999"},"content":"        this.items \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"SampsonYe1999"},"content":"    public TaskList(ArrayList\u003cTask\u003e items) {","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"SampsonYe1999"},"content":"        this.items \u003d items;","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"SampsonYe1999"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"SampsonYe1999"},"content":"     * Displays the list of tasks.","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"SampsonYe1999"},"content":"     * Prints the details of each task in the task list to the console,","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"SampsonYe1999"},"content":"     * typically showing information such as task type, description, and status.","lastModifiedDate":"2024-02-24"},{"lineNumber":26,"author":{"gitId":"SampsonYe1999"},"content":"     * If the task list is empty, prints a message indicating that there are no tasks.","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"SampsonYe1999"},"content":"     * Each task is numbered for easy identification.","lastModifiedDate":"2024-02-24"},{"lineNumber":28,"author":{"gitId":"SampsonYe1999"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":29,"author":{"gitId":"SampsonYe1999"},"content":"    public void displayList() {","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"SampsonYe1999"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"SampsonYe1999"},"content":"        if (items.isEmpty()) {","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"SampsonYe1999"},"content":"            System.out.println(\"No tasks in the list.\");","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"SampsonYe1999"},"content":"        } else {","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"SampsonYe1999"},"content":"            System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"SampsonYe1999"},"content":"            for (int i \u003d 0; i \u003c items.size(); i++) {","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"SampsonYe1999"},"content":"                Task task \u003d items.get(i);","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"SampsonYe1999"},"content":"                System.out.println(((i + 1) + \".\" + task));","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"SampsonYe1999"},"content":"            }","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"SampsonYe1999"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-02-23"},{"lineNumber":41,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":42,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":43,"author":{"gitId":"SampsonYe1999"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":44,"author":{"gitId":"SampsonYe1999"},"content":"     * Marks a task in the list as done.","lastModifiedDate":"2024-02-24"},{"lineNumber":45,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":46,"author":{"gitId":"SampsonYe1999"},"content":"     * Marks the task at the specified index in the task list as done.","lastModifiedDate":"2024-02-24"},{"lineNumber":47,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":48,"author":{"gitId":"SampsonYe1999"},"content":"     * @param index the index of the task to mark as done","lastModifiedDate":"2024-02-24"},{"lineNumber":49,"author":{"gitId":"SampsonYe1999"},"content":"     * @throws SamException if the index is out of bounds","lastModifiedDate":"2024-02-24"},{"lineNumber":50,"author":{"gitId":"SampsonYe1999"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":51,"author":{"gitId":"SampsonYe1999"},"content":"    public void markTask(int index) throws SamException {","lastModifiedDate":"2024-02-23"},{"lineNumber":52,"author":{"gitId":"SampsonYe1999"},"content":"        if (index \u003c 0 || index \u003e\u003d items.size()) {","lastModifiedDate":"2024-02-23"},{"lineNumber":53,"author":{"gitId":"SampsonYe1999"},"content":"            throw new SamException(\"Please check how many tasks are there in your list.\");","lastModifiedDate":"2024-02-23"},{"lineNumber":54,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":55,"author":{"gitId":"SampsonYe1999"},"content":"        items.get(index).markAsDone();","lastModifiedDate":"2024-02-23"},{"lineNumber":56,"author":{"gitId":"SampsonYe1999"},"content":"        System.out.println(\"Nice, I\u0027ve marked this task as done for you:\");","lastModifiedDate":"2024-02-23"},{"lineNumber":57,"author":{"gitId":"SampsonYe1999"},"content":"        System.out.println((items.get(index)));","lastModifiedDate":"2024-02-23"},{"lineNumber":58,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":59,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":60,"author":{"gitId":"SampsonYe1999"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":61,"author":{"gitId":"SampsonYe1999"},"content":"     * Unmarks a task in the list as undone.","lastModifiedDate":"2024-02-24"},{"lineNumber":62,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":63,"author":{"gitId":"SampsonYe1999"},"content":"     * Unmarks the task at the specified index in the task list as undone.","lastModifiedDate":"2024-02-24"},{"lineNumber":64,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":65,"author":{"gitId":"SampsonYe1999"},"content":"     * @param index the index of the task to unmark as undone","lastModifiedDate":"2024-02-24"},{"lineNumber":66,"author":{"gitId":"SampsonYe1999"},"content":"     * @throws SamException if the index is out of bounds","lastModifiedDate":"2024-02-24"},{"lineNumber":67,"author":{"gitId":"SampsonYe1999"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":68,"author":{"gitId":"SampsonYe1999"},"content":"    public void unmarkTask(int index) throws SamException {","lastModifiedDate":"2024-02-23"},{"lineNumber":69,"author":{"gitId":"SampsonYe1999"},"content":"        if (index \u003c 0 || index \u003e\u003d items.size()) {","lastModifiedDate":"2024-02-23"},{"lineNumber":70,"author":{"gitId":"SampsonYe1999"},"content":"            throw new SamException(\"Please check how many tasks are there in your list.\");","lastModifiedDate":"2024-02-23"},{"lineNumber":71,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":72,"author":{"gitId":"SampsonYe1999"},"content":"        items.get(index).markAsUndone();","lastModifiedDate":"2024-02-23"},{"lineNumber":73,"author":{"gitId":"SampsonYe1999"},"content":"        System.out.println(\"Nice, I\u0027ve marked this task as undone for you:\");","lastModifiedDate":"2024-02-23"},{"lineNumber":74,"author":{"gitId":"SampsonYe1999"},"content":"        System.out.println((items.get(index)));","lastModifiedDate":"2024-02-23"},{"lineNumber":75,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":76,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":77,"author":{"gitId":"SampsonYe1999"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":78,"author":{"gitId":"SampsonYe1999"},"content":"     * Adds a new task to the task list.","lastModifiedDate":"2024-02-24"},{"lineNumber":79,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":80,"author":{"gitId":"SampsonYe1999"},"content":"     * Adds the provided Task object to the task list.","lastModifiedDate":"2024-02-24"},{"lineNumber":81,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":82,"author":{"gitId":"SampsonYe1999"},"content":"     * @param newTask the task to be added to the list","lastModifiedDate":"2024-02-24"},{"lineNumber":83,"author":{"gitId":"SampsonYe1999"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":84,"author":{"gitId":"SampsonYe1999"},"content":"    public void addTask(Task newTask) {","lastModifiedDate":"2024-02-23"},{"lineNumber":85,"author":{"gitId":"SampsonYe1999"},"content":"        items.add(newTask);","lastModifiedDate":"2024-02-23"},{"lineNumber":86,"author":{"gitId":"SampsonYe1999"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-02-23"},{"lineNumber":87,"author":{"gitId":"SampsonYe1999"},"content":"        System.out.println(\"  \" + newTask);","lastModifiedDate":"2024-02-23"},{"lineNumber":88,"author":{"gitId":"SampsonYe1999"},"content":"        System.out.println(\"Now you have \" + items.size() + \" tasks in the list.\");","lastModifiedDate":"2024-02-23"},{"lineNumber":89,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":90,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":91,"author":{"gitId":"SampsonYe1999"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":92,"author":{"gitId":"SampsonYe1999"},"content":"     * Deletes a task from the task list.","lastModifiedDate":"2024-02-24"},{"lineNumber":93,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":94,"author":{"gitId":"SampsonYe1999"},"content":"     * Removes the task at the specified index from the task list.","lastModifiedDate":"2024-02-24"},{"lineNumber":95,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":96,"author":{"gitId":"SampsonYe1999"},"content":"     * @param index the index of the task to delete from the list","lastModifiedDate":"2024-02-24"},{"lineNumber":97,"author":{"gitId":"SampsonYe1999"},"content":"     * @throws SamException if the index is out of bounds","lastModifiedDate":"2024-02-24"},{"lineNumber":98,"author":{"gitId":"SampsonYe1999"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":99,"author":{"gitId":"SampsonYe1999"},"content":"    public void deleteTask(int index) throws SamException {","lastModifiedDate":"2024-02-23"},{"lineNumber":100,"author":{"gitId":"SampsonYe1999"},"content":"        if (index \u003c 0 || index \u003e\u003d items.size()) {","lastModifiedDate":"2024-02-23"},{"lineNumber":101,"author":{"gitId":"SampsonYe1999"},"content":"            throw new SamException(\"Invalid task number. Please check how many tasks your have in the list.\");","lastModifiedDate":"2024-02-23"},{"lineNumber":102,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":103,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":104,"author":{"gitId":"SampsonYe1999"},"content":"        Task removedTask \u003d items.remove(index);","lastModifiedDate":"2024-02-23"},{"lineNumber":105,"author":{"gitId":"SampsonYe1999"},"content":"        System.out.println(\"---------------------------\");","lastModifiedDate":"2024-02-23"},{"lineNumber":106,"author":{"gitId":"SampsonYe1999"},"content":"        System.out.println(\"I\u0027ve removed this task:\");","lastModifiedDate":"2024-02-23"},{"lineNumber":107,"author":{"gitId":"SampsonYe1999"},"content":"        System.out.println(\" \" + removedTask);","lastModifiedDate":"2024-02-23"},{"lineNumber":108,"author":{"gitId":"SampsonYe1999"},"content":"        System.out.println(\"Now you have \" + items.size() + \" task(s) left in the list. \");","lastModifiedDate":"2024-02-23"},{"lineNumber":109,"author":{"gitId":"SampsonYe1999"},"content":"        System.out.println(\"---------------------------\");","lastModifiedDate":"2024-02-23"},{"lineNumber":110,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":111,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":112,"author":{"gitId":"SampsonYe1999"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":113,"author":{"gitId":"SampsonYe1999"},"content":"     * Finds tasks containing the specified keyword.","lastModifiedDate":"2024-02-24"},{"lineNumber":114,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":115,"author":{"gitId":"SampsonYe1999"},"content":"     * Searches through the list of tasks and adds tasks containing the specified keyword to a new list.","lastModifiedDate":"2024-02-24"},{"lineNumber":116,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":117,"author":{"gitId":"SampsonYe1999"},"content":"     * @param keyword the keyword to search for in task descriptions","lastModifiedDate":"2024-02-24"},{"lineNumber":118,"author":{"gitId":"SampsonYe1999"},"content":"     * @return an ArrayList containing tasks that match the keyword","lastModifiedDate":"2024-02-24"},{"lineNumber":119,"author":{"gitId":"SampsonYe1999"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":120,"author":{"gitId":"SampsonYe1999"},"content":"    public ArrayList\u003cTask\u003e findTasksByKeyword(String keyword) {","lastModifiedDate":"2024-02-24"},{"lineNumber":121,"author":{"gitId":"SampsonYe1999"},"content":"        ArrayList\u003cTask\u003e matchList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-24"},{"lineNumber":122,"author":{"gitId":"SampsonYe1999"},"content":"        for (Task task : items) {","lastModifiedDate":"2024-02-24"},{"lineNumber":123,"author":{"gitId":"SampsonYe1999"},"content":"            if (task.containsKeyword(keyword)) {","lastModifiedDate":"2024-02-24"},{"lineNumber":124,"author":{"gitId":"SampsonYe1999"},"content":"                matchList.add(task);","lastModifiedDate":"2024-02-24"},{"lineNumber":125,"author":{"gitId":"SampsonYe1999"},"content":"            }","lastModifiedDate":"2024-02-24"},{"lineNumber":126,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":127,"author":{"gitId":"SampsonYe1999"},"content":"        return matchList;","lastModifiedDate":"2024-02-24"},{"lineNumber":128,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":129,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":130,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":131,"author":{"gitId":"SampsonYe1999"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":132,"author":{"gitId":"SampsonYe1999"},"content":"     * Retrieves the file strings from the Storage object.","lastModifiedDate":"2024-02-24"},{"lineNumber":133,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":134,"author":{"gitId":"SampsonYe1999"},"content":"     * Returns an ArrayList containing the file strings stored in the Storage object.","lastModifiedDate":"2024-02-24"},{"lineNumber":135,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":136,"author":{"gitId":"SampsonYe1999"},"content":"     * @return an ArrayList containing the file strings","lastModifiedDate":"2024-02-24"},{"lineNumber":137,"author":{"gitId":"SampsonYe1999"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":138,"author":{"gitId":"SampsonYe1999"},"content":"    public ArrayList\u003cString\u003e getFileStrings() {","lastModifiedDate":"2024-02-23"},{"lineNumber":139,"author":{"gitId":"SampsonYe1999"},"content":"        ArrayList\u003cString\u003e ret \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-23"},{"lineNumber":140,"author":{"gitId":"SampsonYe1999"},"content":"        for (Task item : items) {","lastModifiedDate":"2024-02-23"},{"lineNumber":141,"author":{"gitId":"SampsonYe1999"},"content":"            ret.add(item.toFileFormat());","lastModifiedDate":"2024-02-23"},{"lineNumber":142,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":143,"author":{"gitId":"SampsonYe1999"},"content":"        return ret;","lastModifiedDate":"2024-02-23"},{"lineNumber":144,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":145,"author":{"gitId":"SampsonYe1999"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"SampsonYe1999":145}},{"path":"src/test/java/sam/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SampsonYe1999"},"content":"package sam;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"SampsonYe1999"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"SampsonYe1999"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"SampsonYe1999"},"content":" * Represents the user interface of the application.","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"SampsonYe1999"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"SampsonYe1999"},"content":"public class Ui {","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"SampsonYe1999"},"content":"    private Scanner scanner;","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"SampsonYe1999"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"SampsonYe1999"},"content":"     * Constructs a new Ui object.","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"SampsonYe1999"},"content":"     * Initializes the Ui object by creating a new Scanner object to read input from the console.","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"SampsonYe1999"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"SampsonYe1999"},"content":"    public Ui() {","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"SampsonYe1999"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"SampsonYe1999"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"SampsonYe1999"},"content":"     * Reads a command from the user input.","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"SampsonYe1999"},"content":"     * Creates a new Scanner object to read input from the console and waits for the user to input a command.","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"SampsonYe1999"},"content":"     * Returns the command entered by the user as a string.","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":26,"author":{"gitId":"SampsonYe1999"},"content":"     * @return the command entered by the user","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"SampsonYe1999"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":28,"author":{"gitId":"SampsonYe1999"},"content":"    public String readCommand() {","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"SampsonYe1999"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"SampsonYe1999"},"content":"        return scanner.nextLine();","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":33,"author":{"gitId":"SampsonYe1999"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"SampsonYe1999"},"content":"     * Displays a greeting message.","lastModifiedDate":"2024-02-24"},{"lineNumber":35,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":36,"author":{"gitId":"SampsonYe1999"},"content":"     * Prints a greeting message along with a logo to the console.","lastModifiedDate":"2024-02-24"},{"lineNumber":37,"author":{"gitId":"SampsonYe1999"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"SampsonYe1999"},"content":"    public void greet() {","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"SampsonYe1999"},"content":"        String logo \u003d \"  ______\\n\"","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"SampsonYe1999"},"content":"                + \" |           /  \\\\ \\n\"","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"SampsonYe1999"},"content":"                + \" |______    /____\\\\     / \\\\    / \\\\\\n\"","lastModifiedDate":"2024-02-24"},{"lineNumber":42,"author":{"gitId":"SampsonYe1999"},"content":"                + \"        |  /      \\\\   /   \\\\  /   \\\\\\n\"","lastModifiedDate":"2024-02-24"},{"lineNumber":43,"author":{"gitId":"SampsonYe1999"},"content":"                + \"  ______| /        \\\\ /     \\\\/     \\\\\\n\";","lastModifiedDate":"2024-02-24"},{"lineNumber":44,"author":{"gitId":"SampsonYe1999"},"content":"        String greetMessage \u003d \"Hello! I\u0027m Sam\\n\"","lastModifiedDate":"2024-02-24"},{"lineNumber":45,"author":{"gitId":"SampsonYe1999"},"content":"                + \"How can I help you?\";","lastModifiedDate":"2024-02-24"},{"lineNumber":46,"author":{"gitId":"SampsonYe1999"},"content":"        System.out.println(logo);","lastModifiedDate":"2024-02-23"},{"lineNumber":47,"author":{"gitId":"SampsonYe1999"},"content":"        System.out.println(greetMessage);","lastModifiedDate":"2024-02-23"},{"lineNumber":48,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":49,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":50,"author":{"gitId":"SampsonYe1999"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":51,"author":{"gitId":"SampsonYe1999"},"content":"     * Shows the error message.","lastModifiedDate":"2024-02-24"},{"lineNumber":52,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":53,"author":{"gitId":"SampsonYe1999"},"content":"     * @param err The error message.","lastModifiedDate":"2024-02-24"},{"lineNumber":54,"author":{"gitId":"SampsonYe1999"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":55,"author":{"gitId":"SampsonYe1999"},"content":"    public void showError(String err) {","lastModifiedDate":"2024-02-23"},{"lineNumber":56,"author":{"gitId":"SampsonYe1999"},"content":"        System.err.println(err);","lastModifiedDate":"2024-02-23"},{"lineNumber":57,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":58,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":59,"author":{"gitId":"SampsonYe1999"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":60,"author":{"gitId":"SampsonYe1999"},"content":"     * Shows the error message when error loading file.","lastModifiedDate":"2024-02-24"},{"lineNumber":61,"author":{"gitId":"SampsonYe1999"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":62,"author":{"gitId":"SampsonYe1999"},"content":"    public void showLoadingError() {","lastModifiedDate":"2024-02-23"},{"lineNumber":63,"author":{"gitId":"SampsonYe1999"},"content":"        System.err.println(\"Error reading tasks from file.\");","lastModifiedDate":"2024-02-23"},{"lineNumber":64,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":65,"author":{"gitId":"SampsonYe1999"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"SampsonYe1999":65}},{"path":"src/test/java/sam/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SampsonYe1999"},"content":"package sam.command;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"SampsonYe1999"},"content":"import sam.SamException;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"SampsonYe1999"},"content":"import sam.Storage;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"SampsonYe1999"},"content":"import sam.TaskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"SampsonYe1999"},"content":"import sam.Ui;","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"SampsonYe1999"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"SampsonYe1999"},"content":" * Represents a command to exit the program.","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"SampsonYe1999"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"SampsonYe1999"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"SampsonYe1999"},"content":"    @Override","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"SampsonYe1999"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws SamException {","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"SampsonYe1999"},"content":"        System.out.println(\"Hope you enjoy my help.\");","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"SampsonYe1999"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"SampsonYe1999"},"content":"        return true;","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"SampsonYe1999"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"SampsonYe1999":20}},{"path":"src/test/java/sam/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SampsonYe1999"},"content":"package sam.command;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"SampsonYe1999"},"content":"import sam.SamException;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"SampsonYe1999"},"content":"import sam.Storage;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"SampsonYe1999"},"content":"import sam.TaskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"SampsonYe1999"},"content":"import sam.Ui;","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"SampsonYe1999"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"SampsonYe1999"},"content":" * Represents a command to be executed by the application.","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"SampsonYe1999"},"content":" *","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"SampsonYe1999"},"content":" * This is an abstract class and should be subclassed to define specific command behaviors.","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"SampsonYe1999"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"SampsonYe1999"},"content":"public abstract class Command {","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"SampsonYe1999"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"SampsonYe1999"},"content":"     * Executes the command.","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"SampsonYe1999"},"content":"     * This method should be implemented by subclasses to execute the specific behavior of the command.","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"SampsonYe1999"},"content":"     * It typically involves interacting with the task list, user interface, and storage components.","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"SampsonYe1999"},"content":"     * @param tasks the TaskList containing the tasks","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"SampsonYe1999"},"content":"     * @param ui the Ui object for user interaction","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"SampsonYe1999"},"content":"     * @param storage the Storage object for data storage and retrieval","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"SampsonYe1999"},"content":"     * @throws SamException if an error occurs during command execution","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"SampsonYe1999"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"SampsonYe1999"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws SamException;","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"SampsonYe1999"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":28,"author":{"gitId":"SampsonYe1999"},"content":"     * Checks if the command indicates an exit signal.","lastModifiedDate":"2024-02-24"},{"lineNumber":29,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"SampsonYe1999"},"content":"     * Returns false by default. Subclasses can override this method to indicate whether","lastModifiedDate":"2024-02-24"},{"lineNumber":31,"author":{"gitId":"SampsonYe1999"},"content":"     * executing the command should terminate the application.","lastModifiedDate":"2024-02-24"},{"lineNumber":32,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":33,"author":{"gitId":"SampsonYe1999"},"content":"     * @return false, indicating that the command does not trigger an exit","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"SampsonYe1999"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":35,"author":{"gitId":"SampsonYe1999"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"SampsonYe1999"},"content":"        return false;","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"SampsonYe1999"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"SampsonYe1999":38}},{"path":"src/test/java/sam/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SampsonYe1999"},"content":"package sam.command;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"SampsonYe1999"},"content":"import sam.SamException;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"SampsonYe1999"},"content":"import sam.Storage;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"SampsonYe1999"},"content":"import sam.TaskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"SampsonYe1999"},"content":"import sam.Ui;","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"SampsonYe1999"},"content":"import sam.task.Deadline;","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"SampsonYe1999"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"SampsonYe1999"},"content":" * Represents a command to add a deadline task.","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"SampsonYe1999"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"SampsonYe1999"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"SampsonYe1999"},"content":"    private String description;","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"SampsonYe1999"},"content":"    private String by;","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"SampsonYe1999"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"SampsonYe1999"},"content":"     * Constructs a DeadlineCommand with the specified task information.","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"SampsonYe1999"},"content":"     * Initializes a DeadlineCommand with the provided task information. If the task information is blank,","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"SampsonYe1999"},"content":"     * throws a SamException with a message indicating the need to provide task details.","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"SampsonYe1999"},"content":"     * @param taskInfo the task information for creating the deadline task","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"SampsonYe1999"},"content":"     * @throws SamException if the provided task information is blank","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"SampsonYe1999"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"SampsonYe1999"},"content":"    public DeadlineCommand(String taskInfo) throws SamException {","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"SampsonYe1999"},"content":"        if (!taskInfo.contains(\"/by\")) {","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"SampsonYe1999"},"content":"            throw new SamException(\"Invalid format for deadline, please provide a deadline using /by.\");","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":28,"author":{"gitId":"SampsonYe1999"},"content":"        String[] details \u003d taskInfo.split(\" /by \");","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"SampsonYe1999"},"content":"        if (details.length \u003c 2) {","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"SampsonYe1999"},"content":"            throw new SamException(\"Invalid format for deadline, please provide a deadline using /by.\");","lastModifiedDate":"2024-02-24"},{"lineNumber":31,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":32,"author":{"gitId":"SampsonYe1999"},"content":"        if (details[0].isBlank()) {","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"SampsonYe1999"},"content":"            throw new SamException(\"Please provide a description of the task\");","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"SampsonYe1999"},"content":"        if (details[1].isBlank()) {","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"SampsonYe1999"},"content":"            throw new SamException(\"Please provide a deadline?\");","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"SampsonYe1999"},"content":"        this.description \u003d details[0];","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"SampsonYe1999"},"content":"        this.by \u003d details[1];","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":41,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":42,"author":{"gitId":"SampsonYe1999"},"content":"    @Override","lastModifiedDate":"2024-02-23"},{"lineNumber":43,"author":{"gitId":"SampsonYe1999"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws SamException {","lastModifiedDate":"2024-02-23"},{"lineNumber":44,"author":{"gitId":"SampsonYe1999"},"content":"        tasks.addTask(new Deadline(description, by));","lastModifiedDate":"2024-02-23"},{"lineNumber":45,"author":{"gitId":"SampsonYe1999"},"content":"        storage.save(tasks);","lastModifiedDate":"2024-02-23"},{"lineNumber":46,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":47,"author":{"gitId":"SampsonYe1999"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"SampsonYe1999":47}},{"path":"src/test/java/sam/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SampsonYe1999"},"content":"package sam.command;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"SampsonYe1999"},"content":"import sam.SamException;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"SampsonYe1999"},"content":"import sam.Storage;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"SampsonYe1999"},"content":"import sam.TaskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"SampsonYe1999"},"content":"import sam.Ui;","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"SampsonYe1999"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"SampsonYe1999"},"content":" * Represents a command to delete a task.","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"SampsonYe1999"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"SampsonYe1999"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"SampsonYe1999"},"content":"    private int index;","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"SampsonYe1999"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"SampsonYe1999"},"content":"     * Constructs a DeleteCommand with the specified task number to delete.","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"SampsonYe1999"},"content":"     * Initializes a DeleteCommand with the provided task number. If the task number is blank,","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"SampsonYe1999"},"content":"     * throws a SamException with a message indicating the need to provide the task number to delete.","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"SampsonYe1999"},"content":"     * If the provided task number is not a valid integer, throws a SamException with a message","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"SampsonYe1999"},"content":"     * indicating the need to provide a valid number.","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"SampsonYe1999"},"content":"     * @param taskInfo the task number to delete","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"SampsonYe1999"},"content":"     * @throws SamException if the provided task number is blank or not a valid integer","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"SampsonYe1999"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"SampsonYe1999"},"content":"    public DeleteCommand(String taskInfo) throws SamException {","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"SampsonYe1999"},"content":"        if (taskInfo.isBlank()) {","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"SampsonYe1999"},"content":"            throw new SamException(\"Please provide the task number to delete.\");","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":28,"author":{"gitId":"SampsonYe1999"},"content":"        try {","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"SampsonYe1999"},"content":"            this.index \u003d Integer.parseInt(taskInfo) - 1;","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"SampsonYe1999"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"SampsonYe1999"},"content":"            throw new SamException(\"Please provide a number\");","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"SampsonYe1999"},"content":"    @Override","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"SampsonYe1999"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws SamException {","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"SampsonYe1999"},"content":"        tasks.deleteTask(index);","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"SampsonYe1999"},"content":"        storage.save(tasks);","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"SampsonYe1999"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"SampsonYe1999":40}},{"path":"src/test/java/sam/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SampsonYe1999"},"content":"package sam.command;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"SampsonYe1999"},"content":"import sam.SamException;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"SampsonYe1999"},"content":"import sam.Storage;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"SampsonYe1999"},"content":"import sam.TaskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"SampsonYe1999"},"content":"import sam.Ui;","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"SampsonYe1999"},"content":"import sam.task.Event;","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"SampsonYe1999"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"SampsonYe1999"},"content":" * Represents a command to add an event task.","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"SampsonYe1999"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"SampsonYe1999"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"SampsonYe1999"},"content":"    private final String description;","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"SampsonYe1999"},"content":"    private final String from;","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"SampsonYe1999"},"content":"    private final String to;","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"SampsonYe1999"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"SampsonYe1999"},"content":"     * Constructs an EventCommand with the specified event details.","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"SampsonYe1999"},"content":"     * Initializes an EventCommand with the provided event details. If the task info does not contain","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"SampsonYe1999"},"content":"     * \"/from\" or \"/to\" indicating the event\u0027s start and end times, throws a SamException with a message","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"SampsonYe1999"},"content":"     * indicating the invalid format. If any of the event details (description, start time, end time) are blank,","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"SampsonYe1999"},"content":"     * throws a SamException with a message indicating the need to provide all required details.","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"SampsonYe1999"},"content":"     * @param taskInfo the string containing event details (description, start time, end time)","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"SampsonYe1999"},"content":"     * @throws SamException if the task info is missing \"/from\" or \"/to\", or if any of the event details are blank","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"SampsonYe1999"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":26,"author":{"gitId":"SampsonYe1999"},"content":"    public EventCommand(String taskInfo) throws SamException {","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"SampsonYe1999"},"content":"        if (!taskInfo.contains(\"/from\") || !taskInfo.contains(\"/to\")) {","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"SampsonYe1999"},"content":"            throw new SamException(\"Invalid format for event, please provide event details by using /from and /to.\");","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"SampsonYe1999"},"content":"        String[] details \u003d taskInfo.split(\" /from | /to \");","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"SampsonYe1999"},"content":"        if (details.length \u003c 3) {","lastModifiedDate":"2024-02-24"},{"lineNumber":32,"author":{"gitId":"SampsonYe1999"},"content":"            throw new SamException(\"Please check whether you have provided a description and both start/end time.\");","lastModifiedDate":"2024-02-24"},{"lineNumber":33,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":35,"author":{"gitId":"SampsonYe1999"},"content":"        String description \u003d details[0];","lastModifiedDate":"2024-02-24"},{"lineNumber":36,"author":{"gitId":"SampsonYe1999"},"content":"        String from \u003d \"\";","lastModifiedDate":"2024-02-24"},{"lineNumber":37,"author":{"gitId":"SampsonYe1999"},"content":"        String to \u003d \"\";","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"SampsonYe1999"},"content":"        if (taskInfo.indexOf(\"/from\") \u003c taskInfo.indexOf(\"/to\")) {","lastModifiedDate":"2024-02-24"},{"lineNumber":39,"author":{"gitId":"SampsonYe1999"},"content":"            from \u003d details[1];","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"SampsonYe1999"},"content":"            to \u003d details[2];","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"SampsonYe1999"},"content":"        } else {","lastModifiedDate":"2024-02-24"},{"lineNumber":42,"author":{"gitId":"SampsonYe1999"},"content":"            from \u003d details[2];","lastModifiedDate":"2024-02-24"},{"lineNumber":43,"author":{"gitId":"SampsonYe1999"},"content":"            to \u003d details[1];","lastModifiedDate":"2024-02-24"},{"lineNumber":44,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":45,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":46,"author":{"gitId":"SampsonYe1999"},"content":"        if (description.isBlank()) {","lastModifiedDate":"2024-02-24"},{"lineNumber":47,"author":{"gitId":"SampsonYe1999"},"content":"            throw new SamException(\"Please provide a description\");","lastModifiedDate":"2024-02-24"},{"lineNumber":48,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":49,"author":{"gitId":"SampsonYe1999"},"content":"        if (from.isBlank()) {","lastModifiedDate":"2024-02-24"},{"lineNumber":50,"author":{"gitId":"SampsonYe1999"},"content":"            throw new SamException(\"Missing /from\");","lastModifiedDate":"2024-02-24"},{"lineNumber":51,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":52,"author":{"gitId":"SampsonYe1999"},"content":"        if (to.isBlank()) {","lastModifiedDate":"2024-02-24"},{"lineNumber":53,"author":{"gitId":"SampsonYe1999"},"content":"            throw new SamException(\"Missing /to\");","lastModifiedDate":"2024-02-24"},{"lineNumber":54,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":55,"author":{"gitId":"SampsonYe1999"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-24"},{"lineNumber":56,"author":{"gitId":"SampsonYe1999"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-24"},{"lineNumber":57,"author":{"gitId":"SampsonYe1999"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-02-24"},{"lineNumber":58,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":59,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":60,"author":{"gitId":"SampsonYe1999"},"content":"    @Override","lastModifiedDate":"2024-02-23"},{"lineNumber":61,"author":{"gitId":"SampsonYe1999"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws SamException {","lastModifiedDate":"2024-02-23"},{"lineNumber":62,"author":{"gitId":"SampsonYe1999"},"content":"        tasks.addTask(new Event(this.description, this.from, this.to));","lastModifiedDate":"2024-02-23"},{"lineNumber":63,"author":{"gitId":"SampsonYe1999"},"content":"        storage.save(tasks);","lastModifiedDate":"2024-02-23"},{"lineNumber":64,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":65,"author":{"gitId":"SampsonYe1999"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"SampsonYe1999":65}},{"path":"src/test/java/sam/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SampsonYe1999"},"content":"package sam.command;","lastModifiedDate":"2024-02-24"},{"lineNumber":2,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":3,"author":{"gitId":"SampsonYe1999"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"SampsonYe1999"},"content":"import sam.SamException;","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"SampsonYe1999"},"content":"import sam.Storage;","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"SampsonYe1999"},"content":"import sam.TaskList;","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"SampsonYe1999"},"content":"import sam.Ui;","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"SampsonYe1999"},"content":"import sam.task.Task;","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"SampsonYe1999"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"SampsonYe1999"},"content":" * Represents a command to find tasks with a given keyword.","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"SampsonYe1999"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"SampsonYe1999"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"SampsonYe1999"},"content":"    private String keyword;","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"SampsonYe1999"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"SampsonYe1999"},"content":"     * Constructs a FindCommand with the specified keyword for searching.","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"SampsonYe1999"},"content":"     * @param keyword the keyword for searching","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"SampsonYe1999"},"content":"     * @throws SamException if the provided keyword is blank","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"SampsonYe1999"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"SampsonYe1999"},"content":"    public FindCommand(String keyword) throws SamException {","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"SampsonYe1999"},"content":"        if (keyword.isBlank()) {","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"SampsonYe1999"},"content":"            throw new SamException(\"Please provide a keyword for searching.\");","lastModifiedDate":"2024-02-24"},{"lineNumber":26,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"SampsonYe1999"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2024-02-24"},{"lineNumber":28,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":29,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"SampsonYe1999"},"content":"    @Override","lastModifiedDate":"2024-02-24"},{"lineNumber":31,"author":{"gitId":"SampsonYe1999"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws SamException {","lastModifiedDate":"2024-02-24"},{"lineNumber":32,"author":{"gitId":"SampsonYe1999"},"content":"        ArrayList\u003cTask\u003e list \u003d tasks.findTasksByKeyword(this.keyword);","lastModifiedDate":"2024-02-24"},{"lineNumber":33,"author":{"gitId":"SampsonYe1999"},"content":"        System.out.println(\"These are the tasks with the specified keyword\");","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"SampsonYe1999"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2024-02-24"},{"lineNumber":35,"author":{"gitId":"SampsonYe1999"},"content":"            System.out.println(((i + 1) + \".\" + list.get(i)));","lastModifiedDate":"2024-02-24"},{"lineNumber":36,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":37,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"SampsonYe1999"},"content":"}","lastModifiedDate":"2024-02-24"}],"authorContributionMap":{"SampsonYe1999":38}},{"path":"src/test/java/sam/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SampsonYe1999"},"content":"package sam.command;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"SampsonYe1999"},"content":"import sam.Storage;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"SampsonYe1999"},"content":"import sam.TaskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"SampsonYe1999"},"content":"import sam.Ui;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"SampsonYe1999"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"SampsonYe1999"},"content":" * Represents a command to list all tasks.","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"SampsonYe1999"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"SampsonYe1999"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"SampsonYe1999"},"content":"    @Override","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"SampsonYe1999"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"SampsonYe1999"},"content":"        tasks.displayList();","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"SampsonYe1999"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"SampsonYe1999":15}},{"path":"src/test/java/sam/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SampsonYe1999"},"content":"package sam.command;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"SampsonYe1999"},"content":"import sam.SamException;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"SampsonYe1999"},"content":"import sam.Storage;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"SampsonYe1999"},"content":"import sam.TaskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"SampsonYe1999"},"content":"import sam.Ui;","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"SampsonYe1999"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"SampsonYe1999"},"content":" * Represents a command to mark a task as done.","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"SampsonYe1999"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"SampsonYe1999"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"SampsonYe1999"},"content":"    private final int index;","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"SampsonYe1999"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"SampsonYe1999"},"content":"     * Constructs a MarkCommand with the specified task index.","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"SampsonYe1999"},"content":"     * Initializes a MarkCommand with the provided task index. If the index is blank,","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"SampsonYe1999"},"content":"     * throws a SamException with a message indicating the need to provide a task index.","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"SampsonYe1999"},"content":"     * @param index the index of the task to mark as done","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"SampsonYe1999"},"content":"     * @throws SamException if the provided index is blank","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"SampsonYe1999"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"SampsonYe1999"},"content":"    public MarkCommand(String index) throws SamException {","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"SampsonYe1999"},"content":"        if (index.isBlank()) {","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"SampsonYe1999"},"content":"            throw new SamException(\"Please provide a task number.\");","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":26,"author":{"gitId":"SampsonYe1999"},"content":"        try {","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"SampsonYe1999"},"content":"            this.index \u003d Integer.parseInt(index) - 1;","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"SampsonYe1999"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"SampsonYe1999"},"content":"            throw new SamException(\"Please provide a number\");","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"SampsonYe1999"},"content":"    @Override","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"SampsonYe1999"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws SamException {","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"SampsonYe1999"},"content":"        tasks.markTask(index);","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"SampsonYe1999"},"content":"        storage.save(tasks);","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"SampsonYe1999"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"SampsonYe1999":38}},{"path":"src/test/java/sam/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SampsonYe1999"},"content":"package sam.command;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"SampsonYe1999"},"content":"import sam.SamException;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"SampsonYe1999"},"content":"import sam.Storage;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"SampsonYe1999"},"content":"import sam.TaskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"SampsonYe1999"},"content":"import sam.Ui;","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"SampsonYe1999"},"content":"import sam.task.ToDo;","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"SampsonYe1999"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"SampsonYe1999"},"content":" * Represents a command to add a todo task.","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"SampsonYe1999"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"SampsonYe1999"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"SampsonYe1999"},"content":"    private final String description;","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"SampsonYe1999"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"SampsonYe1999"},"content":"     * Constructs a TodoCommand with the specified task description.","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"SampsonYe1999"},"content":"     * Initializes a TodoCommand with the provided task description. If the task description is blank,","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"SampsonYe1999"},"content":"     * throws a SamException with a message indicating the need to provide a task description.","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"SampsonYe1999"},"content":"     * @param taskInfo the description of the Todo task","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"SampsonYe1999"},"content":"     * @throws SamException if the provided task description is blank","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"SampsonYe1999"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"SampsonYe1999"},"content":"    public TodoCommand(String taskInfo) throws SamException {","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"SampsonYe1999"},"content":"        if (taskInfo.isBlank()) {","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"SampsonYe1999"},"content":"            throw new SamException(\"Please provide a task description.\");","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"SampsonYe1999"},"content":"        this.description \u003d taskInfo;","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"SampsonYe1999"},"content":"    @Override","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"SampsonYe1999"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws SamException {","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"SampsonYe1999"},"content":"        tasks.addTask(new ToDo(description));","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"SampsonYe1999"},"content":"        storage.save(tasks);","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"SampsonYe1999"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"SampsonYe1999":35}},{"path":"src/test/java/sam/command/UnknownCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SampsonYe1999"},"content":"package sam.command;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"SampsonYe1999"},"content":"import sam.SamException;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"SampsonYe1999"},"content":"import sam.Storage;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"SampsonYe1999"},"content":"import sam.TaskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"SampsonYe1999"},"content":"import sam.Ui;","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"SampsonYe1999"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"SampsonYe1999"},"content":" * Represents a command that is not recognised.","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"SampsonYe1999"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"SampsonYe1999"},"content":"public class UnknownCommand extends Command {","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"SampsonYe1999"},"content":"    public UnknownCommand() {}","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"SampsonYe1999"},"content":"    @Override","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"SampsonYe1999"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws SamException {","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"SampsonYe1999"},"content":"        throw new SamException(\"Hey, please choose from the following commands\\n\"","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"SampsonYe1999"},"content":"                + \"if you want to add task, please use todo, deadline or event\\n\"","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"SampsonYe1999"},"content":"                + \"if you want to mark or unmark task, please use mark or unmark\\n\"","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"SampsonYe1999"},"content":"                + \"if you want delete a task, please use delete\\n\"","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"SampsonYe1999"},"content":"                + \"if you want to view the existing task list, please enter list.\");","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"SampsonYe1999"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"SampsonYe1999":22}},{"path":"src/test/java/sam/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SampsonYe1999"},"content":"package sam.command;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"SampsonYe1999"},"content":"import sam.SamException;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"SampsonYe1999"},"content":"import sam.Storage;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"SampsonYe1999"},"content":"import sam.TaskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"SampsonYe1999"},"content":"import sam.Ui;","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"SampsonYe1999"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"SampsonYe1999"},"content":" * Represents a command to unmark a task as done.","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"SampsonYe1999"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"SampsonYe1999"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"SampsonYe1999"},"content":"    private final int index;","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"SampsonYe1999"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"SampsonYe1999"},"content":"     * Constructs an UnmarkCommand with the specified task index.","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"SampsonYe1999"},"content":"     * Initializes an UnmarkCommand with the provided task index. If the index is blank,","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"SampsonYe1999"},"content":"     * throws a SamException with a message indicating the need to provide a task index.","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"SampsonYe1999"},"content":"     * @param index the index of the task to unmark as undone","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"SampsonYe1999"},"content":"     * @throws SamException if the provided index is blank","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"SampsonYe1999"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"SampsonYe1999"},"content":"    public UnmarkCommand(String index) throws SamException {","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"SampsonYe1999"},"content":"        if (index.isBlank()) {","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"SampsonYe1999"},"content":"            throw new SamException(\"Please provide a task number.\");","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"SampsonYe1999"},"content":"        try {","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"SampsonYe1999"},"content":"            this.index \u003d Integer.parseInt(index) - 1;","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"SampsonYe1999"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"SampsonYe1999"},"content":"            throw new SamException(\"Please provide a number\");","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"SampsonYe1999"},"content":"    @Override","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"SampsonYe1999"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws SamException {","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"SampsonYe1999"},"content":"        tasks.unmarkTask(index);","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"SampsonYe1999"},"content":"        storage.save(tasks);","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"SampsonYe1999"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"SampsonYe1999":39}},{"path":"src/test/java/sam/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SampsonYe1999"},"content":"package sam.task;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"SampsonYe1999"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"SampsonYe1999"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"SampsonYe1999"},"content":"import sam.SamException;","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"SampsonYe1999"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"SampsonYe1999"},"content":" * Represents a deadline task.","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"SampsonYe1999"},"content":" *","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"SampsonYe1999"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"SampsonYe1999"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"SampsonYe1999"},"content":"    private static final DateTimeFormatter INPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"SampsonYe1999"},"content":"    private static final DateTimeFormatter OUTPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"SampsonYe1999"},"content":"    protected LocalDateTime date;","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"SampsonYe1999"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"SampsonYe1999"},"content":"     * Constructs a Deadline task with the specified description and due date/time.","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"SampsonYe1999"},"content":"     * @param description the description of the Deadline task","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"SampsonYe1999"},"content":"     * @param by the due date/time of the Deadline task","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"SampsonYe1999"},"content":"     * @throws SamException if there is an issue with the provided parameters","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"SampsonYe1999"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"SampsonYe1999"},"content":"    public Deadline(String description, String by) throws SamException {","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"SampsonYe1999"},"content":"        super(description);","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":26,"author":{"gitId":"SampsonYe1999"},"content":"        if (by.isBlank()) {","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"SampsonYe1999"},"content":"            throw new SamException(\"No due date specified.\");","lastModifiedDate":"2024-02-24"},{"lineNumber":28,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":29,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"SampsonYe1999"},"content":"        this.date \u003d LocalDateTime.parse(by, INPUT_FORMATTER);","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"SampsonYe1999"},"content":"    @Override","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"SampsonYe1999"},"content":"    public String toString() {","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"SampsonYe1999"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), date.format(OUTPUT_FORMATTER));","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"SampsonYe1999"},"content":"    @Override","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"SampsonYe1999"},"content":"    public String toFileFormat() {","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"SampsonYe1999"},"content":"        return String.format(\"D | %d | %s | %s\", isDone ? 1 : 0, this.description, date.format(INPUT_FORMATTER));","lastModifiedDate":"2024-02-23"},{"lineNumber":41,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":42,"author":{"gitId":"SampsonYe1999"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"SampsonYe1999":42}},{"path":"src/test/java/sam/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SampsonYe1999"},"content":"package sam.task;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"SampsonYe1999"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"SampsonYe1999"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"SampsonYe1999"},"content":"import sam.SamException;","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"SampsonYe1999"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"SampsonYe1999"},"content":" * Represents an event task.","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"SampsonYe1999"},"content":" *","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"SampsonYe1999"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"SampsonYe1999"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"SampsonYe1999"},"content":"    private static final DateTimeFormatter INPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"SampsonYe1999"},"content":"    private static final DateTimeFormatter OUTPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"SampsonYe1999"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"SampsonYe1999"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"SampsonYe1999"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"SampsonYe1999"},"content":"     * Constructs an Event task with the specified description and time frame.","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"SampsonYe1999"},"content":"     * @param description the description of the Event task","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"SampsonYe1999"},"content":"     * @param from the starting time of the Event task","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"SampsonYe1999"},"content":"     * @param to the ending time of the Event task","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"SampsonYe1999"},"content":"     * @throws SamException if there is an issue with the provided parameters","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"SampsonYe1999"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"SampsonYe1999"},"content":"    public Event(String description, String from, String to) throws SamException {","lastModifiedDate":"2024-02-24"},{"lineNumber":26,"author":{"gitId":"SampsonYe1999"},"content":"        super(description);","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":28,"author":{"gitId":"SampsonYe1999"},"content":"        if (from.isBlank()) {","lastModifiedDate":"2024-02-24"},{"lineNumber":29,"author":{"gitId":"SampsonYe1999"},"content":"            throw new SamException(\"Please provide a starting time.\");","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"SampsonYe1999"},"content":"        } else if (to.isBlank()) {","lastModifiedDate":"2024-02-24"},{"lineNumber":31,"author":{"gitId":"SampsonYe1999"},"content":"            throw new SamException(\"Please provide an ending time.\");","lastModifiedDate":"2024-02-24"},{"lineNumber":32,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":33,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"SampsonYe1999"},"content":"        this.from \u003d LocalDateTime.parse(from, INPUT_FORMATTER);","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"SampsonYe1999"},"content":"        this.to \u003d LocalDateTime.parse(to, INPUT_FORMATTER);","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"SampsonYe1999"},"content":"    @Override","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"SampsonYe1999"},"content":"    public String toString() {","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"SampsonYe1999"},"content":"        return String.format(\"[E]%s (from: %s to: %s\", super.toString(), from.format(OUTPUT_FORMATTER),","lastModifiedDate":"2024-02-23"},{"lineNumber":41,"author":{"gitId":"SampsonYe1999"},"content":"                to.format(OUTPUT_FORMATTER));","lastModifiedDate":"2024-02-23"},{"lineNumber":42,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":43,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":44,"author":{"gitId":"SampsonYe1999"},"content":"    @Override","lastModifiedDate":"2024-02-23"},{"lineNumber":45,"author":{"gitId":"SampsonYe1999"},"content":"    public String toFileFormat() {","lastModifiedDate":"2024-02-23"},{"lineNumber":46,"author":{"gitId":"SampsonYe1999"},"content":"        return String.format(\"E | %d | %s | %s to %s\", isDone ? 1 : 0, this.description, from.format(INPUT_FORMATTER),","lastModifiedDate":"2024-02-23"},{"lineNumber":47,"author":{"gitId":"SampsonYe1999"},"content":"                to.format(INPUT_FORMATTER));","lastModifiedDate":"2024-02-23"},{"lineNumber":48,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":49,"author":{"gitId":"SampsonYe1999"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"SampsonYe1999":49}},{"path":"src/test/java/sam/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SampsonYe1999"},"content":"package sam.task;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":3,"author":{"gitId":"SampsonYe1999"},"content":"import sam.SamException;","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"SampsonYe1999"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"SampsonYe1999"},"content":" * Represents a task.","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"SampsonYe1999"},"content":" *","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"SampsonYe1999"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"SampsonYe1999"},"content":"public class Task {","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"SampsonYe1999"},"content":"    protected String description;","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"SampsonYe1999"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"SampsonYe1999"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"SampsonYe1999"},"content":"     * Constructs a Task with the specified description.","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"SampsonYe1999"},"content":"     * Initializes a Task with the given description. If the description is blank,","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"SampsonYe1999"},"content":"     * throws a SamException with a message indicating the need to provide a task description.","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"SampsonYe1999"},"content":"     * @param description the description of the Task","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"SampsonYe1999"},"content":"     * @throws SamException if the provided description is blank","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"SampsonYe1999"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"SampsonYe1999"},"content":"    public Task(String description) throws SamException {","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"SampsonYe1999"},"content":"        if (description.isBlank()) {","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"SampsonYe1999"},"content":"            throw new SamException(\"Please provide a task description.\");","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"SampsonYe1999"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"SampsonYe1999"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"SampsonYe1999"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"SampsonYe1999"},"content":"     * Retrieves the status icon for the task.","lastModifiedDate":"2024-02-24"},{"lineNumber":31,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":32,"author":{"gitId":"SampsonYe1999"},"content":"     * Returns a string representing the status of the task. If the task is done, returns \"[X]\";","lastModifiedDate":"2024-02-24"},{"lineNumber":33,"author":{"gitId":"SampsonYe1999"},"content":"     * otherwise, returns \"[ ]\".","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":35,"author":{"gitId":"SampsonYe1999"},"content":"     * @return a string representing the status icon of the task","lastModifiedDate":"2024-02-24"},{"lineNumber":36,"author":{"gitId":"SampsonYe1999"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":37,"author":{"gitId":"SampsonYe1999"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"SampsonYe1999"},"content":"        return (isDone ? \"[X]\" : \"[ ]\"); // mark done task with X","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":41,"author":{"gitId":"SampsonYe1999"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":42,"author":{"gitId":"SampsonYe1999"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-02-24"},{"lineNumber":43,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":44,"author":{"gitId":"SampsonYe1999"},"content":"     * @throws SamException If the task was already marked.","lastModifiedDate":"2024-02-24"},{"lineNumber":45,"author":{"gitId":"SampsonYe1999"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":46,"author":{"gitId":"SampsonYe1999"},"content":"    public void markAsDone() throws SamException {","lastModifiedDate":"2024-02-24"},{"lineNumber":47,"author":{"gitId":"SampsonYe1999"},"content":"        if (this.isDone) {","lastModifiedDate":"2024-02-24"},{"lineNumber":48,"author":{"gitId":"SampsonYe1999"},"content":"            throw new SamException(\"This task was already marked.\");","lastModifiedDate":"2024-02-24"},{"lineNumber":49,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":50,"author":{"gitId":"SampsonYe1999"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-02-23"},{"lineNumber":51,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":52,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":53,"author":{"gitId":"SampsonYe1999"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":54,"author":{"gitId":"SampsonYe1999"},"content":"     * Marks the task as undone.","lastModifiedDate":"2024-02-24"},{"lineNumber":55,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":56,"author":{"gitId":"SampsonYe1999"},"content":"     * @throws SamException If the task was already unmarked.","lastModifiedDate":"2024-02-24"},{"lineNumber":57,"author":{"gitId":"SampsonYe1999"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":58,"author":{"gitId":"SampsonYe1999"},"content":"    public void markAsUndone() throws SamException {","lastModifiedDate":"2024-02-24"},{"lineNumber":59,"author":{"gitId":"SampsonYe1999"},"content":"        if (!this.isDone) {","lastModifiedDate":"2024-02-24"},{"lineNumber":60,"author":{"gitId":"SampsonYe1999"},"content":"            throw new SamException(\"This task was already unmarked.\");","lastModifiedDate":"2024-02-24"},{"lineNumber":61,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":62,"author":{"gitId":"SampsonYe1999"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-23"},{"lineNumber":63,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":64,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":65,"author":{"gitId":"SampsonYe1999"},"content":"    public boolean containsKeyword(String keyword) {","lastModifiedDate":"2024-02-24"},{"lineNumber":66,"author":{"gitId":"SampsonYe1999"},"content":"        return description.contains(keyword);","lastModifiedDate":"2024-02-24"},{"lineNumber":67,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":68,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":69,"author":{"gitId":"SampsonYe1999"},"content":"    public String toString() {","lastModifiedDate":"2024-02-23"},{"lineNumber":70,"author":{"gitId":"SampsonYe1999"},"content":"        return (this.getStatusIcon() + \" \" + this.description);","lastModifiedDate":"2024-02-23"},{"lineNumber":71,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":72,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":73,"author":{"gitId":"SampsonYe1999"},"content":"    public String toFileFormat() {","lastModifiedDate":"2024-02-23"},{"lineNumber":74,"author":{"gitId":"SampsonYe1999"},"content":"        return null;","lastModifiedDate":"2024-02-23"},{"lineNumber":75,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":76,"author":{"gitId":"SampsonYe1999"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"SampsonYe1999":76}},{"path":"src/test/java/sam/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SampsonYe1999"},"content":"package sam.task;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"SampsonYe1999"},"content":"import sam.SamException;","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"SampsonYe1999"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"SampsonYe1999"},"content":" * Represents a todo task.","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"SampsonYe1999"},"content":" *","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"SampsonYe1999"},"content":" * Inherits from the Task class.","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"SampsonYe1999"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"SampsonYe1999"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"SampsonYe1999"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"SampsonYe1999"},"content":"     * Constructs a ToDo task with the specified description.","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"SampsonYe1999"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"SampsonYe1999"},"content":"     * @param description the description of the ToDo task","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"SampsonYe1999"},"content":"     * @throws SamException if there is an issue with the provided description","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"SampsonYe1999"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"SampsonYe1999"},"content":"    public ToDo(String description) throws SamException {","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"SampsonYe1999"},"content":"        super(description);","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"SampsonYe1999"},"content":"    @Override","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"SampsonYe1999"},"content":"    public String toString() {","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"SampsonYe1999"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"SampsonYe1999"},"content":"    @Override","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"SampsonYe1999"},"content":"    public String toFileFormat() {","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"SampsonYe1999"},"content":"        return String.format(\"T | %d | %s\", isDone ? 1 : 0, this.description);","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"SampsonYe1999"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"SampsonYe1999":30}},{"path":"src/test/java/sam/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SampsonYe1999"},"content":"package sam.task;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"SampsonYe1999"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"SampsonYe1999"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"SampsonYe1999"},"content":"import sam.SamException;","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"SampsonYe1999"},"content":"public class ToDoTest {","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"SampsonYe1999"},"content":"    @Test","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"SampsonYe1999"},"content":"    public void constructor_validInput1_success() throws SamException {","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"SampsonYe1999"},"content":"        ToDo task \u003d new ToDo(\"test1\");","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"SampsonYe1999"},"content":"        assertEquals(\"[T][ ] test1\", task.toString());","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"SampsonYe1999"},"content":"    @Test","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"SampsonYe1999"},"content":"    public void constructor_validInput2_success() throws SamException {","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"SampsonYe1999"},"content":"        ToDo task \u003d new ToDo(\"test2\");","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"SampsonYe1999"},"content":"        assertEquals(\"T | 0 | test2\", task.toFileFormat());","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"SampsonYe1999"},"content":"    @Test","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"SampsonYe1999"},"content":"    public void constructor_markAsDone_success() throws SamException {","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"SampsonYe1999"},"content":"        ToDo task \u003d new ToDo(\"test3\");","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"SampsonYe1999"},"content":"        task.markAsDone();","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"SampsonYe1999"},"content":"        assertEquals(\"[T][X] test3\", task.toString());","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"SampsonYe1999"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"SampsonYe1999":28}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"SampsonYe1999"},"content":"todo","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"SampsonYe1999"},"content":"abc","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"SampsonYe1999"},"content":"todo borrow book","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"SampsonYe1999"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"SampsonYe1999"},"content":"event project meeting /from 2pm /to 4pm","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"SampsonYe1999"},"content":"deadline return book /by 2024-01-01T00:00:00","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"SampsonYe1999"},"content":"event project meeting /from 2024-01-02T01:00:00 /to 2024-01-02T02:00:00","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"SampsonYe1999"},"content":"list","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"SampsonYe1999"},"content":"mark 1","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"SampsonYe1999"},"content":"list","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"SampsonYe1999":10}}]
