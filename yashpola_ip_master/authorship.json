[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"yashpola"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"yashpola"},"content":"checkstyle {","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"yashpola"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"yashpola"},"content":"}","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"yashpola"},"content":"mainClassName \u003d \u0027nicole.entry.Nicole\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"yashpola"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":22,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"yashpola"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"yashpola"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"yashpola"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"yashpola"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"yashpola"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"yashpola"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"yashpola"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"yashpola"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"yashpola"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"yashpola"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"yashpola"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"yashpola"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"yashpola"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"yashpola"},"content":"    mainClass.set(\"nicole.entry.Nicole\")","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"yashpola"},"content":"    archiveFileName \u003d \"nicole.jar\"","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"yashpola"},"content":"    archiveBaseName \u003d \"nicole\"","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"yashpola"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"yashpola":27,"-":30}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"yashpola"},"content":"# Nicole [Mark 0.2] User Guide","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"yashpola"},"content":"\u003cimg src\u003d\"Ui.png\" width\u003d\"350\"\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"yashpola"},"content":"Nicole is your smart task, deadline","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"yashpola"},"content":"and event manager! Give her commands using the formats","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"yashpola"},"content":"specified in this guide and ","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"yashpola"},"content":"look forward to easier days ahead :D","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":10,"author":{"gitId":"yashpola"},"content":"## Setting up","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":12,"author":{"gitId":"yashpola"},"content":"Skip to the basic guide if you need a little more help :hearts:","lastModifiedDate":"2024-02-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":14,"author":{"gitId":"yashpola"},"content":"### Intermediate Guide","lastModifiedDate":"2024-02-18"},{"lineNumber":15,"author":{"gitId":"yashpola"},"content":"1. Ensure the version you are currently running is `Java 11` and switch if necessary.","lastModifiedDate":"2024-02-18"},{"lineNumber":16,"author":{"gitId":"yashpola"},"content":"   - Switching for [Windows](https://stackoverflow.com/questions/26993101/switching-between-different-jdk-versions-in-windows)","lastModifiedDate":"2024-02-18"},{"lineNumber":17,"author":{"gitId":"yashpola"},"content":"   - Switching for [Mac](https://stackoverflow.com/questions/21964709/how-to-set-or-change-the-default-java-jdk-version-on-macos)","lastModifiedDate":"2024-02-18"},{"lineNumber":18,"author":{"gitId":"yashpola"},"content":"2. Follow from Step 2 of the Basic Guide!","lastModifiedDate":"2024-02-18"},{"lineNumber":19,"author":{"gitId":"yashpola"},"content":"   - :speaker: MacOS users, you may need to download a specific version of `Java` if you encounter issues","lastModifiedDate":"2024-02-18"},{"lineNumber":20,"author":{"gitId":"yashpola"},"content":"     launching Nicole. Simply follow from Step 1 of the Basic Guide in this scenario.","lastModifiedDate":"2024-02-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":23,"author":{"gitId":"yashpola"},"content":"### Basic Guide","lastModifiedDate":"2024-02-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":25,"author":{"gitId":"yashpola"},"content":"1. Download `Java 11`","lastModifiedDate":"2024-02-18"},{"lineNumber":26,"author":{"gitId":"yashpola"},"content":"   - For [Windows](https://arc.net/l/quote/xrxbvatl)","lastModifiedDate":"2024-02-18"},{"lineNumber":27,"author":{"gitId":"yashpola"},"content":"   - For MacOS (navigate to the \"About This Mac\" menu to find out which chip your mac has installed): ","lastModifiedDate":"2024-02-18"},{"lineNumber":28,"author":{"gitId":"yashpola"},"content":"     - [M1](https://arc.net/l/quote/rqjezudg)","lastModifiedDate":"2024-02-18"},{"lineNumber":29,"author":{"gitId":"yashpola"},"content":"     - [Intel](https://arc.net/l/quote/luolepqe)","lastModifiedDate":"2024-02-18"},{"lineNumber":30,"author":{"gitId":"yashpola"},"content":"2. Once you\u0027ve downloaded `Java`, download the `Nicole.jar` file from [here](https://github.com/yashpola/ip/releases/tag/Level-10)","lastModifiedDate":"2024-02-18"},{"lineNumber":31,"author":{"gitId":"yashpola"},"content":"3. Navigate to your `downloads` directory and","lastModifiedDate":"2024-02-18"},{"lineNumber":32,"author":{"gitId":"yashpola"},"content":"   - Create a folder to put the `jar` file in","lastModifiedDate":"2024-02-17"},{"lineNumber":33,"author":{"gitId":"yashpola"},"content":"   - Double-click the `jar` file to launch Nicole. A window like the one shown below should open","lastModifiedDate":"2024-02-18"},{"lineNumber":34,"author":{"gitId":"yashpola"},"content":"   - Fire away!","lastModifiedDate":"2024-02-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":36,"author":{"gitId":"yashpola"},"content":"![initialWindow.png](initialWindowSS.png)","lastModifiedDate":"2024-02-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":38,"author":{"gitId":"yashpola"},"content":"Take note that when using Nicole, a `tasks.txt` file will","lastModifiedDate":"2024-02-17"},{"lineNumber":39,"author":{"gitId":"yashpola"},"content":"appear in your computer. This file will simply ","lastModifiedDate":"2024-02-18"},{"lineNumber":40,"author":{"gitId":"yashpola"},"content":"be used to save your items between sessions.","lastModifiedDate":"2024-02-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":42,"author":{"gitId":"yashpola"},"content":"## Getting started","lastModifiedDate":"2024-02-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":44,"author":{"gitId":"yashpola"},"content":"To know what basic commands Nicole can help you with, ","lastModifiedDate":"2024-02-17"},{"lineNumber":45,"author":{"gitId":"yashpola"},"content":"simply type-in `help` and you should see ","lastModifiedDate":"2024-02-17"},{"lineNumber":46,"author":{"gitId":"yashpola"},"content":"something like this:","lastModifiedDate":"2024-02-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":48,"author":{"gitId":"yashpola"},"content":"![helpSS.png](helpSS.png)","lastModifiedDate":"2024-02-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":50,"author":{"gitId":"yashpola"},"content":"Take note that when typing the actual commands, ","lastModifiedDate":"2024-02-17"},{"lineNumber":51,"author":{"gitId":"yashpola"},"content":"you should omit any square braces ([ ]) pictured above. ","lastModifiedDate":"2024-02-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":53,"author":{"gitId":"yashpola"},"content":"You can find other helpful pointers below for a few of Nicole\u0027s commands.","lastModifiedDate":"2024-02-17"},{"lineNumber":54,"author":{"gitId":"yashpola"},"content":"Pay closer attention to the points marked with :writing_hand:!","lastModifiedDate":"2024-02-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":56,"author":{"gitId":"yashpola"},"content":"## Adding an item","lastModifiedDate":"2024-02-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":58,"author":{"gitId":"yashpola"},"content":"After adding an item in the following formats: ","lastModifiedDate":"2024-02-17"},{"lineNumber":59,"author":{"gitId":"yashpola"},"content":"1. `todo [task]`","lastModifiedDate":"2024-02-17"},{"lineNumber":60,"author":{"gitId":"yashpola"},"content":"2. `deadline [task] by YYYY-MM-DD`","lastModifiedDate":"2024-02-17"},{"lineNumber":61,"author":{"gitId":"yashpola"},"content":"3. `event [description] from YYYY-MM-DD at HH:MM:SS to YYYY-MM-DD at HH:MM:SS`","lastModifiedDate":"2024-02-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07"},{"lineNumber":63,"author":{"gitId":"yashpola"},"content":"The item will appear in a `tasks.txt` file respectively in the following","lastModifiedDate":"2024-02-17"},{"lineNumber":64,"author":{"gitId":"yashpola"},"content":"formats: ","lastModifiedDate":"2024-02-17"},{"lineNumber":65,"author":{"gitId":"yashpola"},"content":"1. `[T][I] [task]`","lastModifiedDate":"2024-02-17"},{"lineNumber":66,"author":{"gitId":"yashpola"},"content":"2. `[D][I] [task] by YYYY-MM-DD`","lastModifiedDate":"2024-02-17"},{"lineNumber":67,"author":{"gitId":"yashpola"},"content":"3. `[E][I] [description] from YYYY-MM-DD at HH:MM:SS to YYYY-MM-DD at HH:MM:SS`","lastModifiedDate":"2024-02-17"},{"lineNumber":68,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":69,"author":{"gitId":"yashpola"},"content":"where `T, D, E` stand for `Todo`, `Deadline`, `Event` respectively","lastModifiedDate":"2024-02-17"},{"lineNumber":70,"author":{"gitId":"yashpola"},"content":"and `I` is the default status of the item","lastModifiedDate":"2024-02-17"},{"lineNumber":71,"author":{"gitId":"yashpola"},"content":"which is `Incomplete`.","lastModifiedDate":"2024-02-17"},{"lineNumber":72,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":73,"author":{"gitId":"yashpola"},"content":"## Marking, Unmarking, Deleting, and Updating items","lastModifiedDate":"2024-02-17"},{"lineNumber":74,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":75,"author":{"gitId":"yashpola"},"content":"Ensure you enter the correct item number for the item ","lastModifiedDate":"2024-02-17"},{"lineNumber":76,"author":{"gitId":"yashpola"},"content":"you are trying to `mark`, `unmark`, `delete` or `update`.","lastModifiedDate":"2024-02-17"},{"lineNumber":77,"author":{"gitId":"yashpola"},"content":"You can always ask Nicole to `list` ","lastModifiedDate":"2024-02-17"},{"lineNumber":78,"author":{"gitId":"yashpola"},"content":"first to check the items and their ","lastModifiedDate":"2024-02-17"},{"lineNumber":79,"author":{"gitId":"yashpola"},"content":"tasknumbers.","lastModifiedDate":"2024-02-17"},{"lineNumber":80,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":81,"author":{"gitId":"yashpola"},"content":"For example, if you wish to delete a `todo`, you","lastModifiedDate":"2024-02-17"},{"lineNumber":82,"author":{"gitId":"yashpola"},"content":"could `list`:","lastModifiedDate":"2024-02-17"},{"lineNumber":83,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":84,"author":{"gitId":"yashpola"},"content":"![list.png](listSS.png)","lastModifiedDate":"2024-02-18"},{"lineNumber":85,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":86,"author":{"gitId":"yashpola"},"content":"and then accordingly `delete 1` to see a confirmation:","lastModifiedDate":"2024-02-17"},{"lineNumber":87,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":88,"author":{"gitId":"yashpola"},"content":"![delete.png](deleteSS.png)","lastModifiedDate":"2024-02-18"},{"lineNumber":89,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":90,"author":{"gitId":"yashpola"},"content":"In this particular case since `borrow book` was the only","lastModifiedDate":"2024-02-17"},{"lineNumber":91,"author":{"gitId":"yashpola"},"content":"item, no items remained after deleting it.","lastModifiedDate":"2024-02-17"},{"lineNumber":92,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":93,"author":{"gitId":"yashpola"},"content":":writing_hand: If you `mark` an item, its `I` status will change to `C` (meaning `Complete`). Vice versa for `unmark`.","lastModifiedDate":"2024-02-18"},{"lineNumber":94,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":95,"author":{"gitId":"yashpola"},"content":"## Adding Deadlines and Events","lastModifiedDate":"2024-02-17"},{"lineNumber":96,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":97,"author":{"gitId":"yashpola"},"content":"Take note!","lastModifiedDate":"2024-02-18"},{"lineNumber":98,"author":{"gitId":"yashpola"},"content":"- The specified formats of `by YYYY:MM:DD` for deadlines ","lastModifiedDate":"2024-02-18"},{"lineNumber":99,"author":{"gitId":"yashpola"},"content":"and `from YYYY:MM:DD at HH:MM:SS to YYYY:MM:DD at HH:MM:SS`","lastModifiedDate":"2024-02-17"},{"lineNumber":100,"author":{"gitId":"yashpola"},"content":"for events are strict! ","lastModifiedDate":"2024-02-17"},{"lineNumber":101,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":102,"author":{"gitId":"yashpola"},"content":"Potential triggers for errors :warning:","lastModifiedDate":"2024-02-18"},{"lineNumber":103,"author":{"gitId":"yashpola"},"content":"- For events specifically:","lastModifiedDate":"2024-02-18"},{"lineNumber":104,"author":{"gitId":"yashpola"},"content":"  - Adding events that overlap one another in any way","lastModifiedDate":"2024-02-17"},{"lineNumber":105,"author":{"gitId":"yashpola"},"content":"  - Specifying a `to...at` datetime for events that precedes the","lastModifiedDate":"2024-02-17"},{"lineNumber":106,"author":{"gitId":"yashpola"},"content":"    `from...at` datetime (for example, `event meeting from 2010-01-01...`)","lastModifiedDate":"2024-02-18"},{"lineNumber":107,"author":{"gitId":"yashpola"},"content":"- For both events and deadlines: ","lastModifiedDate":"2024-02-18"},{"lineNumber":108,"author":{"gitId":"yashpola"},"content":"  - Specifying date(time)s that precede the current date(time)","lastModifiedDate":"2024-02-18"},{"lineNumber":109,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":110,"author":{"gitId":"yashpola"},"content":"Nicole will indicate to you very clearly if you made ","lastModifiedDate":"2024-02-17"},{"lineNumber":111,"author":{"gitId":"yashpola"},"content":"any of the above errors and also guide you ","lastModifiedDate":"2024-02-17"},{"lineNumber":112,"author":{"gitId":"yashpola"},"content":"on how to rectify your command, so fret not!","lastModifiedDate":"2024-02-17"},{"lineNumber":113,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":114,"author":{"gitId":"yashpola"},"content":":writing_hand: Updating an event could also lead to ","lastModifiedDate":"2024-02-18"},{"lineNumber":115,"author":{"gitId":"yashpola"},"content":"problems with clashing events. When in doubt, `list` to ","lastModifiedDate":"2024-02-17"},{"lineNumber":116,"author":{"gitId":"yashpola"},"content":"peruse your current items first.","lastModifiedDate":"2024-02-17"},{"lineNumber":117,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":118,"author":{"gitId":"yashpola"},"content":"## Sorting","lastModifiedDate":"2024-02-17"},{"lineNumber":119,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":120,"author":{"gitId":"yashpola"},"content":"`sort by date` will rearrange your list","lastModifiedDate":"2024-02-17"},{"lineNumber":121,"author":{"gitId":"yashpola"},"content":"of items from earliest to latest as per their date(time) like so:","lastModifiedDate":"2024-02-17"},{"lineNumber":122,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":123,"author":{"gitId":"yashpola"},"content":"![sort.png](sortByDateSS.png)","lastModifiedDate":"2024-02-18"},{"lineNumber":124,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":125,"author":{"gitId":"yashpola"},"content":"where events are sorted per their  `from` datetime. If an event\u0027s ","lastModifiedDate":"2024-02-18"},{"lineNumber":126,"author":{"gitId":"yashpola"},"content":"`from` date matches the date of a deadline, the event will","lastModifiedDate":"2024-02-18"},{"lineNumber":127,"author":{"gitId":"yashpola"},"content":"take precedence (such as items 2 and 3 above).","lastModifiedDate":"2024-02-18"},{"lineNumber":128,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":129,"author":{"gitId":"yashpola"},"content":":writing_hand: Since `todos` do not have a datetime, they are ordered","lastModifiedDate":"2024-02-18"},{"lineNumber":130,"author":{"gitId":"yashpola"},"content":"**last** by default.","lastModifiedDate":"2024-02-17"},{"lineNumber":131,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":132,"author":{"gitId":"yashpola"},"content":"## Finally...","lastModifiedDate":"2024-02-17"},{"lineNumber":133,"author":{"gitId":"yashpola"},"content":"Remember to ***have fun*** with Nicole!","lastModifiedDate":"2024-02-18"},{"lineNumber":134,"author":{"gitId":"yashpola"},"content":"She will help you as much as possible in error and save your","lastModifiedDate":"2024-02-17"},{"lineNumber":135,"author":{"gitId":"yashpola"},"content":"item history for ease of repeated use. ","lastModifiedDate":"2024-02-17"}],"authorContributionMap":{"yashpola":117,"-":18}},{"path":"src/main/java/nicole/entry/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yashpola"},"content":"package nicole.entry;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"yashpola"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"yashpola"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"yashpola"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"yashpola"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"yashpola"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"yashpola"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"yashpola"},"content":"import nicole.gui.MainWindow;","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"yashpola"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"yashpola"},"content":" * A GUI for Nicole using FXML.","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"yashpola"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"yashpola"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"yashpola"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"yashpola"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"yashpola"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"yashpola"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"yashpola"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"yashpola"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"yashpola"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"yashpola"},"content":"            stage.setTitle(\"Nicole\");","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"yashpola"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setNicole(new Nicole());","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"yashpola"},"content":"            stage.show();","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"yashpola"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"yashpola"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"yashpola"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"yashpola":31}},{"path":"src/main/java/nicole/entry/Nicole.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yashpola"},"content":"package nicole.entry;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"yashpola"},"content":"import java.io.File;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"yashpola"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-18"},{"lineNumber":5,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"yashpola"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"yashpola"},"content":"import nicole.nicoleexceptions.NicoleException;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"yashpola"},"content":"import nicole.taskstorage.Storage;","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"yashpola"},"content":"public class Nicole {","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"yashpola"},"content":"    public Nicole() {","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"yashpola"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"yashpola"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"yashpola"},"content":"            File tasksFile \u003d new File(\"tasks.txt\");","lastModifiedDate":"2024-02-18"},{"lineNumber":17,"author":{"gitId":"yashpola"},"content":"            tasksFile.createNewFile();","lastModifiedDate":"2024-02-18"},{"lineNumber":18,"author":{"gitId":"yashpola"},"content":"            new Storage().loadTasksFromFile(tasksFile);","lastModifiedDate":"2024-02-18"},{"lineNumber":19,"author":{"gitId":"yashpola"},"content":"            Application.launch(Main.class, args);","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"yashpola"},"content":"        } catch (NicoleException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"yashpola"},"content":"            System.out.println(e);","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"yashpola"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-18"},{"lineNumber":23,"author":{"gitId":"yashpola"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2024-02-18"},{"lineNumber":24,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"yashpola"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"yashpola":26}},{"path":"src/main/java/nicole/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yashpola"},"content":"package nicole.gui;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"yashpola"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"yashpola"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"yashpola"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"yashpola"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"yashpola"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"yashpola"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"yashpola"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"yashpola"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"yashpola"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"yashpola"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"yashpola"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"yashpola"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"yashpola"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"yashpola"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"yashpola"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"yashpola"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"yashpola"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"yashpola"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"yashpola"},"content":"    @FXML","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"yashpola"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"yashpola"},"content":"    @FXML","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"yashpola"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"yashpola"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"yashpola"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"yashpola"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"yashpola"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"yashpola"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"yashpola"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"yashpola"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"yashpola"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"yashpola"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"yashpola"},"content":"//        displayPicture.setImage(img);","lastModifiedDate":"2024-02-17"},{"lineNumber":43,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"yashpola"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"yashpola"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"yashpola"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"yashpola"},"content":"    private void flip() {","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"yashpola"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"yashpola"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"yashpola"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2024-02-17"},{"lineNumber":52,"author":{"gitId":"yashpola"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-17"},{"lineNumber":53,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"yashpola"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"yashpola"},"content":"        return new DialogBox(\"You: \\n\" + text, img);","lastModifiedDate":"2024-02-17"},{"lineNumber":57,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"yashpola"},"content":"    public static DialogBox getNicoleDialog(String text, Image img) {","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"yashpola"},"content":"        var db \u003d new DialogBox(\"Nicole: \\n\" + text, img);","lastModifiedDate":"2024-02-17"},{"lineNumber":61,"author":{"gitId":"yashpola"},"content":"        db.flip();","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"yashpola"},"content":"        return db;","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"yashpola"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"yashpola":64}},{"path":"src/main/java/nicole/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yashpola"},"content":"package nicole.gui;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"yashpola"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"yashpola"},"content":"import java.util.Objects;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"yashpola"},"content":"import java.util.Timer;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"yashpola"},"content":"import java.util.TimerTask;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"yashpola"},"content":"import javafx.application.Platform;","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"yashpola"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"yashpola"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"yashpola"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"yashpola"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"yashpola"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"yashpola"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"yashpola"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"yashpola"},"content":"import nicole.userrequests.Ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"yashpola"},"content":"import nicole.entry.Nicole;","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"yashpola"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"yashpola"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"yashpola"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"yashpola"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"yashpola"},"content":"    @FXML","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"yashpola"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"yashpola"},"content":"    @FXML","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"yashpola"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"yashpola"},"content":"    @FXML","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"yashpola"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"yashpola"},"content":"    @FXML","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"yashpola"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"yashpola"},"content":"    private Nicole nicole;","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"yashpola"},"content":"    private final Image userImage \u003d new Image(Objects.requireNonNull(","lastModifiedDate":"2024-02-10"},{"lineNumber":39,"author":{"gitId":"yashpola"},"content":"            this.getClass().getResourceAsStream(\"/images/user.jpeg\")));","lastModifiedDate":"2024-02-17"},{"lineNumber":40,"author":{"gitId":"yashpola"},"content":"    private final Image nicoleImage \u003d new Image(Objects.requireNonNull(","lastModifiedDate":"2024-02-10"},{"lineNumber":41,"author":{"gitId":"yashpola"},"content":"            this.getClass().getResourceAsStream(\"/images/raiden.jpeg\")));","lastModifiedDate":"2024-02-10"},{"lineNumber":42,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"yashpola"},"content":"    @FXML","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"yashpola"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"yashpola"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"yashpola"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"yashpola"},"content":"                DialogBox.getNicoleDialog(Ui.greetUser(), nicoleImage)","lastModifiedDate":"2024-02-10"},{"lineNumber":48,"author":{"gitId":"yashpola"},"content":"        );","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"yashpola"},"content":"    public void setNicole(Nicole n) {","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"yashpola"},"content":"        nicole \u003d n;","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"yashpola"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"yashpola"},"content":"     * Sets the exit for the MainWindow.","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"yashpola"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"yashpola"},"content":"    private void exit() {","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"yashpola"},"content":"        int delayInMillis \u003d 1000;","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"yashpola"},"content":"        Timer timer \u003d new Timer();","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"yashpola"},"content":"        timer.schedule(new TimerTask() {","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"yashpola"},"content":"            @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"yashpola"},"content":"            public void run() {","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"yashpola"},"content":"                Platform.exit();","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"yashpola"},"content":"                System.exit(0);","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"yashpola"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"yashpola"},"content":"        }, delayInMillis);","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"yashpola"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"yashpola"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-04"},{"lineNumber":72,"author":{"gitId":"yashpola"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-04"},{"lineNumber":73,"author":{"gitId":"yashpola"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":74,"author":{"gitId":"yashpola"},"content":"    @FXML","lastModifiedDate":"2024-02-04"},{"lineNumber":75,"author":{"gitId":"yashpola"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-04"},{"lineNumber":76,"author":{"gitId":"yashpola"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-04"},{"lineNumber":77,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":78,"author":{"gitId":"yashpola"},"content":"        if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2024-02-04"},{"lineNumber":79,"author":{"gitId":"yashpola"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-04"},{"lineNumber":80,"author":{"gitId":"yashpola"},"content":"                    DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-10"},{"lineNumber":81,"author":{"gitId":"yashpola"},"content":"                    DialogBox.getNicoleDialog(\"Bye, for now ;)\", nicoleImage)","lastModifiedDate":"2024-02-10"},{"lineNumber":82,"author":{"gitId":"yashpola"},"content":"            );","lastModifiedDate":"2024-02-04"},{"lineNumber":83,"author":{"gitId":"yashpola"},"content":"            this.exit();","lastModifiedDate":"2024-02-04"},{"lineNumber":84,"author":{"gitId":"yashpola"},"content":"        } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":85,"author":{"gitId":"yashpola"},"content":"            try {","lastModifiedDate":"2024-02-04"},{"lineNumber":86,"author":{"gitId":"yashpola"},"content":"                Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-04"},{"lineNumber":87,"author":{"gitId":"yashpola"},"content":"                String response \u003d ui.interactWithUser(input);","lastModifiedDate":"2024-02-10"},{"lineNumber":88,"author":{"gitId":"yashpola"},"content":"                dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-04"},{"lineNumber":89,"author":{"gitId":"yashpola"},"content":"                        DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-10"},{"lineNumber":90,"author":{"gitId":"yashpola"},"content":"                        DialogBox.getNicoleDialog(response, nicoleImage)","lastModifiedDate":"2024-02-10"},{"lineNumber":91,"author":{"gitId":"yashpola"},"content":"                );","lastModifiedDate":"2024-02-04"},{"lineNumber":92,"author":{"gitId":"yashpola"},"content":"                userInput.clear();","lastModifiedDate":"2024-02-04"},{"lineNumber":93,"author":{"gitId":"yashpola"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":94,"author":{"gitId":"yashpola"},"content":"                System.out.println(e);","lastModifiedDate":"2024-02-04"},{"lineNumber":95,"author":{"gitId":"yashpola"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":96,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":97,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":98,"author":{"gitId":"yashpola"},"content":"}","lastModifiedDate":"2024-02-04"},{"lineNumber":99,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"yashpola":99}},{"path":"src/main/java/nicole/nicoleexceptions/NicoleException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yashpola"},"content":"package nicole.nicoleexceptions;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"yashpola"},"content":"public class NicoleException extends Exception {","lastModifiedDate":"2024-01-21"},{"lineNumber":4,"author":{"gitId":"yashpola"},"content":"    private final String ERROR_MESSAGE;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"yashpola"},"content":"    public NicoleException(String errorMessage) {","lastModifiedDate":"2024-01-21"},{"lineNumber":6,"author":{"gitId":"yashpola"},"content":"        this.ERROR_MESSAGE \u003d errorMessage;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":8,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":9,"author":{"gitId":"yashpola"},"content":"    @Override","lastModifiedDate":"2024-01-21"},{"lineNumber":10,"author":{"gitId":"yashpola"},"content":"    public String toString() {","lastModifiedDate":"2024-01-21"},{"lineNumber":11,"author":{"gitId":"yashpola"},"content":"        return \"ERROR. \" + ERROR_MESSAGE;","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":13,"author":{"gitId":"yashpola"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"yashpola":13}},{"path":"src/main/java/nicole/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yashpola"},"content":"package nicole.task;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"yashpola"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"yashpola"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"yashpola"},"content":"import nicole.nicoleexceptions.NicoleException;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"yashpola"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-20"},{"lineNumber":9,"author":{"gitId":"yashpola"},"content":"    private LocalDate deadlineDateLocalDate;","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"yashpola"},"content":"    private String deadlineDateReformattedString;","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"yashpola"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"yashpola"},"content":"     * Initialises a Deadline","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"yashpola"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"yashpola"},"content":"     * @param name the user request.","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"yashpola"},"content":"     * @throws NicoleException if the description is not as deadline [task] by YYYY-MM-DD.","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"yashpola"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"yashpola"},"content":"    public Deadline(String name) throws NicoleException {","lastModifiedDate":"2024-01-21"},{"lineNumber":19,"author":{"gitId":"yashpola"},"content":"        super();","lastModifiedDate":"2024-01-21"},{"lineNumber":20,"author":{"gitId":"yashpola"},"content":"        if (name.contains(\"null\")) {","lastModifiedDate":"2024-01-21"},{"lineNumber":21,"author":{"gitId":"yashpola"},"content":"            throw new NicoleException(\"Describe your deadline like this: deadline [task] by YYYY-MM-DD\");","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":23,"author":{"gitId":"yashpola"},"content":"        this.parseDate(name);","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":25,"author":{"gitId":"yashpola"},"content":"    private void parseDate(String name) throws NicoleException {","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"yashpola"},"content":"        // The expected structure of this array is [..., date] where the ... are the deadline description words","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"yashpola"},"content":"        String[] whiteSpaceSeparatedDate \u003d name.split(\" \");","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"yashpola"},"content":"        StringBuilder deadlineDescription \u003d new StringBuilder();","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"yashpola"},"content":"        for (int i \u003d 0; i \u003c whiteSpaceSeparatedDate.length - 1; i++) {","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"yashpola"},"content":"            deadlineDescription.append(whiteSpaceSeparatedDate[i]).append(\" \");","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":33,"author":{"gitId":"yashpola"},"content":"        super.updateName(deadlineDescription.toString().trim());","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"yashpola"},"content":"        String date \u003d whiteSpaceSeparatedDate[whiteSpaceSeparatedDate.length - 1];","lastModifiedDate":"2024-02-10"},{"lineNumber":36,"author":{"gitId":"yashpola"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"yashpola"},"content":"            deadlineDateLocalDate \u003d LocalDate.parse(date);","lastModifiedDate":"2024-02-10"},{"lineNumber":38,"author":{"gitId":"yashpola"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"yashpola"},"content":"            throw new NicoleException(\"Are you sure your date is in the proper [YYYY-MM-DD] format...?\");","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"yashpola"},"content":"        if (LocalDate.now().isAfter(deadlineDateLocalDate)) {","lastModifiedDate":"2024-02-10"},{"lineNumber":42,"author":{"gitId":"yashpola"},"content":"            throw new NicoleException(\"Erm, the deadline can\u0027t be before now right...\");","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"yashpola"},"content":"        deadlineDateReformattedString \u003d \"\"","lastModifiedDate":"2024-02-10"},{"lineNumber":46,"author":{"gitId":"yashpola"},"content":"                + deadlineDateLocalDate.getDayOfMonth() + \" \"","lastModifiedDate":"2024-02-10"},{"lineNumber":47,"author":{"gitId":"yashpola"},"content":"                + deadlineDateLocalDate.getMonth().toString() + \" \"","lastModifiedDate":"2024-02-10"},{"lineNumber":48,"author":{"gitId":"yashpola"},"content":"                + deadlineDateLocalDate.getYear();","lastModifiedDate":"2024-02-10"},{"lineNumber":49,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"yashpola"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"yashpola"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"yashpola"},"content":"        return deadlineDateLocalDate;","lastModifiedDate":"2024-02-10"},{"lineNumber":54,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":56,"author":{"gitId":"yashpola"},"content":"    @Override","lastModifiedDate":"2024-01-20"},{"lineNumber":57,"author":{"gitId":"yashpola"},"content":"    public String toString() {","lastModifiedDate":"2024-01-20"},{"lineNumber":58,"author":{"gitId":"yashpola"},"content":"        return \"[D]\" + super.toString() + \" \" + deadlineDateLocalDate;","lastModifiedDate":"2024-02-10"},{"lineNumber":59,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":60,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":61,"author":{"gitId":"yashpola"},"content":"    @Override","lastModifiedDate":"2024-02-10"},{"lineNumber":62,"author":{"gitId":"yashpola"},"content":"    public boolean equals(Object object) {","lastModifiedDate":"2024-02-10"},{"lineNumber":63,"author":{"gitId":"yashpola"},"content":"        if (!(object instanceof Deadline)) {","lastModifiedDate":"2024-02-10"},{"lineNumber":64,"author":{"gitId":"yashpola"},"content":"            return false;","lastModifiedDate":"2024-02-10"},{"lineNumber":65,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":66,"author":{"gitId":"yashpola"},"content":"        Deadline task \u003d (Deadline)object;","lastModifiedDate":"2024-02-10"},{"lineNumber":67,"author":{"gitId":"yashpola"},"content":"        return super.equals(object) \u0026\u0026 this.getDate().equals(task.getDate());","lastModifiedDate":"2024-02-10"},{"lineNumber":68,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":69,"author":{"gitId":"yashpola"},"content":"}","lastModifiedDate":"2024-01-20"}],"authorContributionMap":{"yashpola":69}},{"path":"src/main/java/nicole/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yashpola"},"content":"package nicole.task;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"yashpola"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"yashpola"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"yashpola"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"yashpola"},"content":"import nicole.nicoleexceptions.NicoleException;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"yashpola"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-20"},{"lineNumber":10,"author":{"gitId":"yashpola"},"content":"    private LocalDateTime deadlineFromDateTimeLocalDate;","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"yashpola"},"content":"    private LocalDateTime deadlineToDateTimeLocalDate;","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"yashpola"},"content":"    private String deadlineFromDateReformattedString;","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"yashpola"},"content":"    private String deadlineFromTimeReformattedString;","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"yashpola"},"content":"    private String deadlineToDateReformattedString;","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"yashpola"},"content":"    private String deadlineToTimeReformattedString;","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"yashpola"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"yashpola"},"content":"     * Initialises a Event","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"yashpola"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"yashpola"},"content":"     * @param name the user request.","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"yashpola"},"content":"     * @throws NicoleException if the description is not","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"yashpola"},"content":"     *                         as event [name] from YYYY-MM-DD at HH-MM-SS","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"yashpola"},"content":"     *                         to YYYY-MM-DD at HH-MM-SS.","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"yashpola"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"yashpola"},"content":"    public Event(String name) throws NicoleException {","lastModifiedDate":"2024-01-21"},{"lineNumber":26,"author":{"gitId":"yashpola"},"content":"        super();","lastModifiedDate":"2024-01-21"},{"lineNumber":27,"author":{"gitId":"yashpola"},"content":"        if (name.contains(\"null\")) {","lastModifiedDate":"2024-01-21"},{"lineNumber":28,"author":{"gitId":"yashpola"},"content":"            throw new NicoleException(\"Describe your event like this: \"","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"yashpola"},"content":"                                      + \"event [name] from YYYY-MM-DD at HH-MM-SS to YYYY-MM-DD at HH-MM-SS\");","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":31,"author":{"gitId":"yashpola"},"content":"        parseDateTime(name);","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":33,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":34,"author":{"gitId":"yashpola"},"content":"    private void parseDateTime(String name) throws NicoleException {","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"yashpola"},"content":"        /*","lastModifiedDate":"2024-02-10"},{"lineNumber":36,"author":{"gitId":"yashpola"},"content":"         The expected structure of this array is [..., from, date, at, time, to, date, at, time] where the","lastModifiedDate":"2024-02-10"},{"lineNumber":37,"author":{"gitId":"yashpola"},"content":"         ... are the event description words","lastModifiedDate":"2024-02-10"},{"lineNumber":38,"author":{"gitId":"yashpola"},"content":"         */","lastModifiedDate":"2024-02-10"},{"lineNumber":39,"author":{"gitId":"yashpola"},"content":"        String[] whiteSpaceSeparatedDate \u003d name.split(\" \");","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"yashpola"},"content":"        StringBuilder eventDescription \u003d new StringBuilder();","lastModifiedDate":"2024-02-10"},{"lineNumber":42,"author":{"gitId":"yashpola"},"content":"        for (int i \u003d 0; i \u003c whiteSpaceSeparatedDate.length - 8; i++) {","lastModifiedDate":"2024-02-17"},{"lineNumber":43,"author":{"gitId":"yashpola"},"content":"            eventDescription.append(whiteSpaceSeparatedDate[i]).append(\" \");","lastModifiedDate":"2024-02-10"},{"lineNumber":44,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":45,"author":{"gitId":"yashpola"},"content":"        super.updateName(eventDescription.toString());","lastModifiedDate":"2024-02-10"},{"lineNumber":46,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":47,"author":{"gitId":"yashpola"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"yashpola"},"content":"            for (int i \u003d 0; i \u003c whiteSpaceSeparatedDate.length; i++) {","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"yashpola"},"content":"                if (whiteSpaceSeparatedDate[i].matches(\"\\\\d{4}-\\\\d{2}-\\\\d{2}\")","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"yashpola"},"content":"                    \u0026\u0026 i \u003c whiteSpaceSeparatedDate.length - 4) {","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"yashpola"},"content":"                    deadlineFromDateTimeLocalDate \u003d LocalDateTime.parse(whiteSpaceSeparatedDate[i]","lastModifiedDate":"2024-02-10"},{"lineNumber":52,"author":{"gitId":"yashpola"},"content":"                            + \"T\" + whiteSpaceSeparatedDate[i + 2]);","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"yashpola"},"content":"                } else if (whiteSpaceSeparatedDate[i].matches(\"\\\\d{4}-\\\\d{2}-\\\\d{2}\")","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"yashpola"},"content":"                           \u0026\u0026 i \u003e whiteSpaceSeparatedDate.length - 4) {","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"yashpola"},"content":"                    deadlineToDateTimeLocalDate \u003d LocalDateTime.parse(whiteSpaceSeparatedDate[i]","lastModifiedDate":"2024-02-10"},{"lineNumber":56,"author":{"gitId":"yashpola"},"content":"                            + \"T\" + whiteSpaceSeparatedDate[i + 2]);","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"yashpola"},"content":"                } else {","lastModifiedDate":"2024-02-10"},{"lineNumber":58,"author":{"gitId":"yashpola"},"content":"                    eventDescription.append(whiteSpaceSeparatedDate[i]).append(\" \");","lastModifiedDate":"2024-02-10"},{"lineNumber":59,"author":{"gitId":"yashpola"},"content":"                }","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"yashpola"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"yashpola"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"yashpola"},"content":"            throw new NicoleException(\"Are you sure your date and time are in the proper \"","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"yashpola"},"content":"                                      + \"[YYYY-MM-DD] and [HH-MM-SS] format...?\");","lastModifiedDate":"2024-02-10"},{"lineNumber":64,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"yashpola"},"content":"        if (deadlineFromDateTimeLocalDate.isAfter(deadlineToDateTimeLocalDate)) {","lastModifiedDate":"2024-02-10"},{"lineNumber":66,"author":{"gitId":"yashpola"},"content":"            throw new NicoleException(\"Erm, the \u0027to\u0027 datetime can\u0027t be before \u0027from\u0027 right...\");","lastModifiedDate":"2024-01-28"},{"lineNumber":67,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":68,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":69,"author":{"gitId":"yashpola"},"content":"        deadlineFromDateReformattedString \u003d \"\"","lastModifiedDate":"2024-02-10"},{"lineNumber":70,"author":{"gitId":"yashpola"},"content":"                + deadlineFromDateTimeLocalDate.getDayOfMonth() + \" \"","lastModifiedDate":"2024-02-10"},{"lineNumber":71,"author":{"gitId":"yashpola"},"content":"                + deadlineFromDateTimeLocalDate.getMonth().toString() + \" \"","lastModifiedDate":"2024-02-10"},{"lineNumber":72,"author":{"gitId":"yashpola"},"content":"                + deadlineFromDateTimeLocalDate.getYear();","lastModifiedDate":"2024-02-10"},{"lineNumber":73,"author":{"gitId":"yashpola"},"content":"        deadlineToDateReformattedString \u003d \"\"","lastModifiedDate":"2024-02-10"},{"lineNumber":74,"author":{"gitId":"yashpola"},"content":"                + deadlineToDateTimeLocalDate.getDayOfMonth() + \" \"","lastModifiedDate":"2024-02-10"},{"lineNumber":75,"author":{"gitId":"yashpola"},"content":"                + deadlineToDateTimeLocalDate.getMonth().toString() + \" \"","lastModifiedDate":"2024-02-10"},{"lineNumber":76,"author":{"gitId":"yashpola"},"content":"                + deadlineToDateTimeLocalDate.getYear();","lastModifiedDate":"2024-02-10"},{"lineNumber":77,"author":{"gitId":"yashpola"},"content":"        deadlineFromTimeReformattedString \u003d \"\"","lastModifiedDate":"2024-02-10"},{"lineNumber":78,"author":{"gitId":"yashpola"},"content":"                + deadlineFromDateTimeLocalDate.getHour() + \" \"","lastModifiedDate":"2024-02-10"},{"lineNumber":79,"author":{"gitId":"yashpola"},"content":"                + deadlineFromDateTimeLocalDate.getMinute() + \" \"","lastModifiedDate":"2024-02-10"},{"lineNumber":80,"author":{"gitId":"yashpola"},"content":"                + deadlineFromDateTimeLocalDate.getSecond();","lastModifiedDate":"2024-02-10"},{"lineNumber":81,"author":{"gitId":"yashpola"},"content":"        deadlineToTimeReformattedString \u003d \"\"","lastModifiedDate":"2024-02-10"},{"lineNumber":82,"author":{"gitId":"yashpola"},"content":"                + deadlineToDateTimeLocalDate.getHour() + \" \"","lastModifiedDate":"2024-02-10"},{"lineNumber":83,"author":{"gitId":"yashpola"},"content":"                + deadlineToDateTimeLocalDate.getMinute() + \" \"","lastModifiedDate":"2024-02-10"},{"lineNumber":84,"author":{"gitId":"yashpola"},"content":"                + deadlineToDateTimeLocalDate.getSecond();","lastModifiedDate":"2024-02-10"},{"lineNumber":85,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":86,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":87,"author":{"gitId":"yashpola"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":88,"author":{"gitId":"yashpola"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2024-01-28"},{"lineNumber":89,"author":{"gitId":"yashpola"},"content":"        return deadlineFromDateTimeLocalDate.toLocalDate();","lastModifiedDate":"2024-02-10"},{"lineNumber":90,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":91,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":92,"author":{"gitId":"yashpola"},"content":"    @Override","lastModifiedDate":"2024-02-10"},{"lineNumber":93,"author":{"gitId":"yashpola"},"content":"    public LocalDateTime getFromDateTime() {","lastModifiedDate":"2024-02-10"},{"lineNumber":94,"author":{"gitId":"yashpola"},"content":"        return deadlineFromDateTimeLocalDate;","lastModifiedDate":"2024-02-10"},{"lineNumber":95,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":96,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":97,"author":{"gitId":"yashpola"},"content":"    @Override","lastModifiedDate":"2024-02-10"},{"lineNumber":98,"author":{"gitId":"yashpola"},"content":"    public LocalDateTime getToDateTime() {","lastModifiedDate":"2024-02-10"},{"lineNumber":99,"author":{"gitId":"yashpola"},"content":"        return deadlineToDateTimeLocalDate;","lastModifiedDate":"2024-02-10"},{"lineNumber":100,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":101,"author":{"gitId":"yashpola"},"content":"    @Override","lastModifiedDate":"2024-01-20"},{"lineNumber":102,"author":{"gitId":"yashpola"},"content":"    public String toString() {","lastModifiedDate":"2024-01-20"},{"lineNumber":103,"author":{"gitId":"yashpola"},"content":"        return \"[E]\"","lastModifiedDate":"2024-02-10"},{"lineNumber":104,"author":{"gitId":"yashpola"},"content":"                + super.toString()","lastModifiedDate":"2024-02-10"},{"lineNumber":105,"author":{"gitId":"yashpola"},"content":"                + \"from \"","lastModifiedDate":"2024-02-10"},{"lineNumber":106,"author":{"gitId":"yashpola"},"content":"                + deadlineFromDateTimeLocalDate.toLocalDate()","lastModifiedDate":"2024-02-10"},{"lineNumber":107,"author":{"gitId":"yashpola"},"content":"                + \" at \"","lastModifiedDate":"2024-02-10"},{"lineNumber":108,"author":{"gitId":"yashpola"},"content":"                + formatTime(deadlineFromDateTimeLocalDate.toLocalTime().toString())","lastModifiedDate":"2024-02-17"},{"lineNumber":109,"author":{"gitId":"yashpola"},"content":"                + \" to \"","lastModifiedDate":"2024-02-10"},{"lineNumber":110,"author":{"gitId":"yashpola"},"content":"                + deadlineToDateTimeLocalDate.toLocalDate()","lastModifiedDate":"2024-02-10"},{"lineNumber":111,"author":{"gitId":"yashpola"},"content":"                + \" at \"","lastModifiedDate":"2024-02-10"},{"lineNumber":112,"author":{"gitId":"yashpola"},"content":"                + formatTime(deadlineToDateTimeLocalDate.toLocalTime().toString());","lastModifiedDate":"2024-02-17"},{"lineNumber":113,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":114,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":115,"author":{"gitId":"yashpola"},"content":"    private String formatTime(String fromDateTime) {","lastModifiedDate":"2024-02-17"},{"lineNumber":116,"author":{"gitId":"yashpola"},"content":"        return fromDateTime.length() \u003d\u003d 5 ? fromDateTime + \":00\" : fromDateTime;","lastModifiedDate":"2024-02-17"},{"lineNumber":117,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":118,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":119,"author":{"gitId":"yashpola"},"content":"    @Override","lastModifiedDate":"2024-02-10"},{"lineNumber":120,"author":{"gitId":"yashpola"},"content":"    public boolean equals(Object object) {","lastModifiedDate":"2024-02-10"},{"lineNumber":121,"author":{"gitId":"yashpola"},"content":"        if (!(object instanceof Event)) {","lastModifiedDate":"2024-02-10"},{"lineNumber":122,"author":{"gitId":"yashpola"},"content":"            return false;","lastModifiedDate":"2024-02-10"},{"lineNumber":123,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":124,"author":{"gitId":"yashpola"},"content":"        Event task \u003d (Event)object;","lastModifiedDate":"2024-02-10"},{"lineNumber":125,"author":{"gitId":"yashpola"},"content":"        return super.equals(object)","lastModifiedDate":"2024-02-10"},{"lineNumber":126,"author":{"gitId":"yashpola"},"content":"                \u0026\u0026 this.getFromDateTime().equals(task.getFromDateTime())","lastModifiedDate":"2024-02-10"},{"lineNumber":127,"author":{"gitId":"yashpola"},"content":"                \u0026\u0026 this.getToDateTime().equals(task.getToDateTime());","lastModifiedDate":"2024-02-10"},{"lineNumber":128,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":129,"author":{"gitId":"yashpola"},"content":"}","lastModifiedDate":"2024-01-20"}],"authorContributionMap":{"yashpola":129}},{"path":"src/main/java/nicole/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yashpola"},"content":"package nicole.task;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"yashpola"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"yashpola"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"yashpola"},"content":"import nicole.nicoleexceptions.NicoleException;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"yashpola"},"content":"public class Task {","lastModifiedDate":"2024-01-20"},{"lineNumber":9,"author":{"gitId":"yashpola"},"content":"    private boolean isComplete;","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"yashpola"},"content":"    private String name;","lastModifiedDate":"2024-01-20"},{"lineNumber":11,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":12,"author":{"gitId":"yashpola"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"yashpola"},"content":"     * Initialises a Task. The default state of a Task is incomplete.","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"yashpola"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"yashpola"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"yashpola"},"content":"    public Task() {","lastModifiedDate":"2024-01-21"},{"lineNumber":17,"author":{"gitId":"yashpola"},"content":"        this.isComplete \u003d false;","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":19,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":20,"author":{"gitId":"yashpola"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"yashpola"},"content":"     * Factory method for Tasks.","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"yashpola"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"yashpola"},"content":"     * @param name the user request.","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"yashpola"},"content":"     * @param taskType \u0027T\u0027 for Todo, \u0027D\u0027 for Deadline, \u0027E\u0027 for Event.","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"yashpola"},"content":"     * @throws NicoleException if any of Task, Deadline, or Event throws it due to","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"yashpola"},"content":"     *                         invalid request.","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"yashpola"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"yashpola"},"content":"    public static Task taskFactory(String name, char taskType) throws NicoleException {","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"yashpola"},"content":"        switch(taskType) {","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"yashpola"},"content":"            case \u0027T\u0027:","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"yashpola"},"content":"                return new Todo(name);","lastModifiedDate":"2024-01-20"},{"lineNumber":32,"author":{"gitId":"yashpola"},"content":"            case \u0027D\u0027:","lastModifiedDate":"2024-02-10"},{"lineNumber":33,"author":{"gitId":"yashpola"},"content":"                return new Deadline(name);","lastModifiedDate":"2024-01-20"},{"lineNumber":34,"author":{"gitId":"yashpola"},"content":"            case \u0027E\u0027:","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"yashpola"},"content":"                return new Event(name);","lastModifiedDate":"2024-01-20"},{"lineNumber":36,"author":{"gitId":"yashpola"},"content":"            default:","lastModifiedDate":"2024-02-10"},{"lineNumber":37,"author":{"gitId":"yashpola"},"content":"                assert(false);","lastModifiedDate":"2024-02-10"},{"lineNumber":38,"author":{"gitId":"yashpola"},"content":"                return null;","lastModifiedDate":"2024-02-10"},{"lineNumber":39,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-01-20"},{"lineNumber":40,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":41,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":42,"author":{"gitId":"yashpola"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":43,"author":{"gitId":"yashpola"},"content":"     * Overwrites the name of this task.","lastModifiedDate":"2024-02-10"},{"lineNumber":44,"author":{"gitId":"yashpola"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":45,"author":{"gitId":"yashpola"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":46,"author":{"gitId":"yashpola"},"content":"    public void updateName(String newTaskName) {","lastModifiedDate":"2024-02-10"},{"lineNumber":47,"author":{"gitId":"yashpola"},"content":"        name \u003d newTaskName;","lastModifiedDate":"2024-02-10"},{"lineNumber":48,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":49,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":50,"author":{"gitId":"yashpola"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"yashpola"},"content":"     * Marks a task object as completed.","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"yashpola"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"yashpola"},"content":"     * @throws NicoleException if the task is already marked completed.","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"yashpola"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"yashpola"},"content":"    public String markDone() throws NicoleException {","lastModifiedDate":"2024-01-27"},{"lineNumber":56,"author":{"gitId":"yashpola"},"content":"        if (isComplete) {","lastModifiedDate":"2024-02-10"},{"lineNumber":57,"author":{"gitId":"yashpola"},"content":"            throw new NicoleException(\"That is already marked complete -_-\");","lastModifiedDate":"2024-01-21"},{"lineNumber":58,"author":{"gitId":"yashpola"},"content":"        } else {","lastModifiedDate":"2024-01-20"},{"lineNumber":59,"author":{"gitId":"yashpola"},"content":"            isComplete \u003d true;","lastModifiedDate":"2024-02-10"},{"lineNumber":60,"author":{"gitId":"yashpola"},"content":"            return \"Marked as completed! Good job :3\";","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-01-20"},{"lineNumber":62,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":63,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":64,"author":{"gitId":"yashpola"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"yashpola"},"content":"     * Marks a task object as incomplete.","lastModifiedDate":"2024-01-28"},{"lineNumber":66,"author":{"gitId":"yashpola"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":67,"author":{"gitId":"yashpola"},"content":"     * @throws NicoleException if the task is already marked incomplete.","lastModifiedDate":"2024-01-28"},{"lineNumber":68,"author":{"gitId":"yashpola"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":69,"author":{"gitId":"yashpola"},"content":"    public String markUndone() throws NicoleException {","lastModifiedDate":"2024-01-27"},{"lineNumber":70,"author":{"gitId":"yashpola"},"content":"        if (!isComplete) {","lastModifiedDate":"2024-02-10"},{"lineNumber":71,"author":{"gitId":"yashpola"},"content":"            throw new NicoleException(\"That is already marked incomplete -_-\");","lastModifiedDate":"2024-01-21"},{"lineNumber":72,"author":{"gitId":"yashpola"},"content":"        } else {","lastModifiedDate":"2024-01-20"},{"lineNumber":73,"author":{"gitId":"yashpola"},"content":"            isComplete \u003d false;","lastModifiedDate":"2024-02-10"},{"lineNumber":74,"author":{"gitId":"yashpola"},"content":"            return \"Marked as incomplete. We\u0027ll get em next time\";","lastModifiedDate":"2024-02-04"},{"lineNumber":75,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-01-20"},{"lineNumber":76,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":77,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":78,"author":{"gitId":"yashpola"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":79,"author":{"gitId":"yashpola"},"content":"     * Retrieves the date associated with the Task object.","lastModifiedDate":"2024-01-28"},{"lineNumber":80,"author":{"gitId":"yashpola"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":81,"author":{"gitId":"yashpola"},"content":"     * @return the max LocalDate by default.","lastModifiedDate":"2024-01-28"},{"lineNumber":82,"author":{"gitId":"yashpola"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":83,"author":{"gitId":"yashpola"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2024-01-28"},{"lineNumber":84,"author":{"gitId":"yashpola"},"content":"        return LocalDate.parse(\"+999999999-12-31\");","lastModifiedDate":"2024-01-28"},{"lineNumber":85,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":86,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":87,"author":{"gitId":"yashpola"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":88,"author":{"gitId":"yashpola"},"content":"     * Retrieves the \"from\" datetime associated with the Task object. This method is not not implemented by the","lastModifiedDate":"2024-02-10"},{"lineNumber":89,"author":{"gitId":"yashpola"},"content":"     * Todo subtype.","lastModifiedDate":"2024-02-10"},{"lineNumber":90,"author":{"gitId":"yashpola"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":91,"author":{"gitId":"yashpola"},"content":"     * @return the maximum LocalDateTime by default.","lastModifiedDate":"2024-02-10"},{"lineNumber":92,"author":{"gitId":"yashpola"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":93,"author":{"gitId":"yashpola"},"content":"    public LocalDateTime getFromDateTime() {","lastModifiedDate":"2024-02-10"},{"lineNumber":94,"author":{"gitId":"yashpola"},"content":"        return LocalDateTime.parse(\"+999999999-12-31T23:59:59.999999999\");","lastModifiedDate":"2024-02-10"},{"lineNumber":95,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":96,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":97,"author":{"gitId":"yashpola"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":98,"author":{"gitId":"yashpola"},"content":"     * Retrieves the \"to\" datetime associated with the Task object. This method is only implemented for the Event","lastModifiedDate":"2024-02-10"},{"lineNumber":99,"author":{"gitId":"yashpola"},"content":"     * subtype.","lastModifiedDate":"2024-02-10"},{"lineNumber":100,"author":{"gitId":"yashpola"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":101,"author":{"gitId":"yashpola"},"content":"     * @return the minimum LocalDateTime by default.","lastModifiedDate":"2024-02-10"},{"lineNumber":102,"author":{"gitId":"yashpola"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":103,"author":{"gitId":"yashpola"},"content":"    public LocalDateTime getToDateTime() {","lastModifiedDate":"2024-02-10"},{"lineNumber":104,"author":{"gitId":"yashpola"},"content":"        return LocalDateTime.parse(\"-999999999-01-01T00:00:00\");","lastModifiedDate":"2024-02-10"},{"lineNumber":105,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":106,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":107,"author":{"gitId":"yashpola"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":108,"author":{"gitId":"yashpola"},"content":"     * Verifies if there is a keyword match with this task.","lastModifiedDate":"2024-01-28"},{"lineNumber":109,"author":{"gitId":"yashpola"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":110,"author":{"gitId":"yashpola"},"content":"     * @param keyword the partial or full keyword.","lastModifiedDate":"2024-02-10"},{"lineNumber":111,"author":{"gitId":"yashpola"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":112,"author":{"gitId":"yashpola"},"content":"    public boolean contains(String keyword) {","lastModifiedDate":"2024-02-10"},{"lineNumber":113,"author":{"gitId":"yashpola"},"content":"        return this.name.contains(keyword);","lastModifiedDate":"2024-02-10"},{"lineNumber":114,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":115,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":116,"author":{"gitId":"yashpola"},"content":"    @Override","lastModifiedDate":"2024-01-20"},{"lineNumber":117,"author":{"gitId":"yashpola"},"content":"    public String toString() {","lastModifiedDate":"2024-01-20"},{"lineNumber":118,"author":{"gitId":"yashpola"},"content":"        return isComplete ? \"[C] \" + name : \"[I] \" + name;","lastModifiedDate":"2024-02-10"},{"lineNumber":119,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":120,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":121,"author":{"gitId":"yashpola"},"content":"    @Override","lastModifiedDate":"2024-02-10"},{"lineNumber":122,"author":{"gitId":"yashpola"},"content":"    public boolean equals(Object object) {","lastModifiedDate":"2024-02-10"},{"lineNumber":123,"author":{"gitId":"yashpola"},"content":"        if (!(object instanceof Task)) {","lastModifiedDate":"2024-02-10"},{"lineNumber":124,"author":{"gitId":"yashpola"},"content":"            return false;","lastModifiedDate":"2024-02-10"},{"lineNumber":125,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":126,"author":{"gitId":"yashpola"},"content":"        Task task \u003d (Task)object;","lastModifiedDate":"2024-02-10"},{"lineNumber":127,"author":{"gitId":"yashpola"},"content":"        return this.name.equals(task.name);","lastModifiedDate":"2024-02-10"},{"lineNumber":128,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":129,"author":{"gitId":"yashpola"},"content":"}","lastModifiedDate":"2024-01-20"}],"authorContributionMap":{"yashpola":129}},{"path":"src/main/java/nicole/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yashpola"},"content":"package nicole.task;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"yashpola"},"content":"import nicole.nicoleexceptions.NicoleException;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"yashpola"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-20"},{"lineNumber":6,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"yashpola"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"yashpola"},"content":"     * Initialises a Todo","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"yashpola"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"yashpola"},"content":"     * @param name the user request.","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"yashpola"},"content":"     * @throws NicoleException if the description is not in todo [task]","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"yashpola"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"yashpola"},"content":"    public Todo(String name) throws NicoleException {","lastModifiedDate":"2024-01-21"},{"lineNumber":14,"author":{"gitId":"yashpola"},"content":"        super();","lastModifiedDate":"2024-01-21"},{"lineNumber":15,"author":{"gitId":"yashpola"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2024-01-21"},{"lineNumber":16,"author":{"gitId":"yashpola"},"content":"            throw new NicoleException(\"What exactly do you want me to note...tell me in the form of: todo [task]\");","lastModifiedDate":"2024-01-21"},{"lineNumber":17,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":18,"author":{"gitId":"yashpola"},"content":"        super.updateName(name);","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":20,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":21,"author":{"gitId":"yashpola"},"content":"    @Override","lastModifiedDate":"2024-01-20"},{"lineNumber":22,"author":{"gitId":"yashpola"},"content":"    public String toString() {","lastModifiedDate":"2024-01-20"},{"lineNumber":23,"author":{"gitId":"yashpola"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-20"},{"lineNumber":24,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":25,"author":{"gitId":"yashpola"},"content":"}","lastModifiedDate":"2024-01-20"}],"authorContributionMap":{"yashpola":25}},{"path":"src/main/java/nicole/taskstorage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yashpola"},"content":"package nicole.taskstorage;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"yashpola"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"yashpola"},"content":"import java.io.File;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"yashpola"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"yashpola"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"yashpola"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"yashpola"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"yashpola"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"yashpola"},"content":"import nicole.nicoleexceptions.NicoleException;","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"yashpola"},"content":"import nicole.task.Task;","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"yashpola"},"content":"public class Storage {","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"yashpola"},"content":"    public Storage() {","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"yashpola"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"yashpola"},"content":"     * Saves user tasks to \"./data/tasks.txt\"","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"yashpola"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"yashpola"},"content":"     * @throws NicoleException if there are write issues to tasks.txt","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"yashpola"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"yashpola"},"content":"    protected void saveTasksToFile() throws NicoleException {","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"yashpola"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"yashpola"},"content":"            FileWriter taskFileWriter \u003d new FileWriter(\"tasks.txt\");","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"yashpola"},"content":"            for (int i \u003d 0; i \u003c TaskList.TASKS.size(); i++) {","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"yashpola"},"content":"                taskFileWriter.write(TaskList.TASKS.get(i) + \"\\n\");","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"yashpola"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"yashpola"},"content":"            taskFileWriter.close();","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"yashpola"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"yashpola"},"content":"            throw new NicoleException(\"I couldn\u0027t save the task \u003e\u003c try again plss\");","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"yashpola"},"content":"    public void loadTasksFromFile(File file) throws NicoleException {","lastModifiedDate":"2024-02-18"},{"lineNumber":37,"author":{"gitId":"yashpola"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"yashpola"},"content":"            int numTasksInFile \u003d 0;","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"yashpola"},"content":"            BufferedReader numTasksReader \u003d new BufferedReader(new FileReader(file));","lastModifiedDate":"2024-02-18"},{"lineNumber":40,"author":{"gitId":"yashpola"},"content":"            while (numTasksReader.readLine() !\u003d null) {","lastModifiedDate":"2024-02-10"},{"lineNumber":41,"author":{"gitId":"yashpola"},"content":"                numTasksInFile++;","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"yashpola"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"yashpola"},"content":"            numTasksReader.close();","lastModifiedDate":"2024-02-10"},{"lineNumber":44,"author":{"gitId":"yashpola"},"content":"            Scanner userTaskFileReader \u003d new Scanner(file);","lastModifiedDate":"2024-02-18"},{"lineNumber":45,"author":{"gitId":"yashpola"},"content":"            while (userTaskFileReader.hasNextLine()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"yashpola"},"content":"                String task \u003d userTaskFileReader.nextLine();","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"yashpola"},"content":"                /*","lastModifiedDate":"2024-02-10"},{"lineNumber":48,"author":{"gitId":"yashpola"},"content":"                    Checking for size \u003c numTasks prevents us from creating duplicate tasks since we call the","lastModifiedDate":"2024-02-10"},{"lineNumber":49,"author":{"gitId":"yashpola"},"content":"                    loadTasksFromFile method both at initialisation when the file is empty and during when","lastModifiedDate":"2024-02-10"},{"lineNumber":50,"author":{"gitId":"yashpola"},"content":"                    running operations on tasks (add, update, delete, etc)","lastModifiedDate":"2024-02-10"},{"lineNumber":51,"author":{"gitId":"yashpola"},"content":"                 */","lastModifiedDate":"2024-02-10"},{"lineNumber":52,"author":{"gitId":"yashpola"},"content":"                if (TaskList.TASKS.size() \u003c numTasksInFile) {","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"yashpola"},"content":"                    char taskType \u003d task.charAt(1);","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"yashpola"},"content":"                    char taskCompleted \u003d task.charAt(4);","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"yashpola"},"content":"                    String taskDescription \u003d task.substring(7);","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"yashpola"},"content":"                    Task recreatedTask \u003d Task.taskFactory(taskDescription, taskType);","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"yashpola"},"content":"                    if (taskCompleted \u003d\u003d \u0027C\u0027) {","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"yashpola"},"content":"                        assert recreatedTask !\u003d null;","lastModifiedDate":"2024-02-10"},{"lineNumber":59,"author":{"gitId":"yashpola"},"content":"                        recreatedTask.markDone();","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"yashpola"},"content":"                    }","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"yashpola"},"content":"                    TaskList.TASKS.add(recreatedTask);","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"yashpola"},"content":"                }","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"yashpola"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"yashpola"},"content":"            userTaskFileReader.close();","lastModifiedDate":"2024-02-10"},{"lineNumber":65,"author":{"gitId":"yashpola"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":66,"author":{"gitId":"yashpola"},"content":"            throw new NicoleException(\"I have no past data with you, let\u0027s start something ;)\");","lastModifiedDate":"2024-02-10"},{"lineNumber":67,"author":{"gitId":"yashpola"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":68,"author":{"gitId":"yashpola"},"content":"            throw new NicoleException(\"Sorry sorry I have trouble loading your tasks from storage....\");","lastModifiedDate":"2024-01-28"},{"lineNumber":69,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":70,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":71,"author":{"gitId":"yashpola"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"yashpola":71}},{"path":"src/main/java/nicole/taskstorage/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yashpola"},"content":"package nicole.taskstorage;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"yashpola"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"yashpola"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"yashpola"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"yashpola"},"content":"import java.util.Comparator;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"yashpola"},"content":"import java.util.List;","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"yashpola"},"content":"import nicole.nicoleexceptions.NicoleException;","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"yashpola"},"content":"import nicole.task.Event;","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"yashpola"},"content":"import nicole.task.Task;","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"yashpola"},"content":"public class TaskList {","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"yashpola"},"content":"    protected static final List\u003cTask\u003e TASKS \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"yashpola"},"content":"    private final Storage storage;","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"yashpola"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"yashpola"},"content":"     * Initialises a TaskList and creates Storage for tasks.","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"yashpola"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"yashpola"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"yashpola"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"yashpola"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"yashpola"},"content":"    private void checkValidTaskNumber(int taskNumber) throws NicoleException {","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"yashpola"},"content":"        if (taskNumber \u003c\u003d 0 || taskNumber \u003e TASKS.size()) {","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"yashpola"},"content":"            throw new NicoleException(\"Huh? That\u0027s not a valid item number :\u0027)\");","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"yashpola"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"yashpola"},"content":"     * Unmarks a task in the list.","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"yashpola"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"yashpola"},"content":"     * @return a success response if the task is unmarked","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"yashpola"},"content":"     * @throws NicoleException if the unmark index is out of bounds of the list or the task is already unmarked.","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"yashpola"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"yashpola"},"content":"    public String unmarkTask(int taskNumber) throws NicoleException {","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"yashpola"},"content":"        checkValidTaskNumber(taskNumber);","lastModifiedDate":"2024-02-10"},{"lineNumber":40,"author":{"gitId":"yashpola"},"content":"        String unmarkedMessage \u003d TASKS.get(taskNumber - 1).markUndone();","lastModifiedDate":"2024-02-10"},{"lineNumber":41,"author":{"gitId":"yashpola"},"content":"        storage.saveTasksToFile();","lastModifiedDate":"2024-02-17"},{"lineNumber":42,"author":{"gitId":"yashpola"},"content":"        return unmarkedMessage;","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"yashpola"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"yashpola"},"content":"     * Marks a task in the list.","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"yashpola"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"yashpola"},"content":"     * @return a success response if the task is marked","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"yashpola"},"content":"     * @throws NicoleException if the mark index is out of bounds of the list or the task is already marked.","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"yashpola"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"yashpola"},"content":"    public String markTask(int taskNumber) throws NicoleException {","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"yashpola"},"content":"        checkValidTaskNumber(taskNumber);","lastModifiedDate":"2024-02-10"},{"lineNumber":53,"author":{"gitId":"yashpola"},"content":"        String markedMessage \u003d TASKS.get(taskNumber - 1).markDone();","lastModifiedDate":"2024-02-10"},{"lineNumber":54,"author":{"gitId":"yashpola"},"content":"        storage.saveTasksToFile();","lastModifiedDate":"2024-02-17"},{"lineNumber":55,"author":{"gitId":"yashpola"},"content":"        return markedMessage;","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"yashpola"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"yashpola"},"content":"     * Deletes a task in the list.","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"yashpola"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"yashpola"},"content":"     * @return a success response if the task is deleted.","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"yashpola"},"content":"     * @throws NicoleException if the delete index is out of bounds of the list.","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"yashpola"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"yashpola"},"content":"    public String deleteTask(int taskNumber) throws NicoleException {","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"yashpola"},"content":"        checkValidTaskNumber(taskNumber);","lastModifiedDate":"2024-02-10"},{"lineNumber":66,"author":{"gitId":"yashpola"},"content":"        TASKS.remove(taskNumber - 1);","lastModifiedDate":"2024-02-10"},{"lineNumber":67,"author":{"gitId":"yashpola"},"content":"        storage.saveTasksToFile();","lastModifiedDate":"2024-02-17"},{"lineNumber":68,"author":{"gitId":"yashpola"},"content":"        return \"Phew...deleted  :\u003e\";","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":70,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":71,"author":{"gitId":"yashpola"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":72,"author":{"gitId":"yashpola"},"content":"     * Adds a task to the list.","lastModifiedDate":"2024-01-28"},{"lineNumber":73,"author":{"gitId":"yashpola"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":74,"author":{"gitId":"yashpola"},"content":"     * @return a success response if the task is added.","lastModifiedDate":"2024-02-04"},{"lineNumber":75,"author":{"gitId":"yashpola"},"content":"     * @throws NicoleException if there are write issues to tasks.txt","lastModifiedDate":"2024-01-28"},{"lineNumber":76,"author":{"gitId":"yashpola"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":77,"author":{"gitId":"yashpola"},"content":"    public String addTask(Task newTask) throws NicoleException {","lastModifiedDate":"2024-02-04"},{"lineNumber":78,"author":{"gitId":"yashpola"},"content":"        checkClashingTasks(newTask);","lastModifiedDate":"2024-02-10"},{"lineNumber":79,"author":{"gitId":"yashpola"},"content":"        TASKS.add(newTask);","lastModifiedDate":"2024-02-10"},{"lineNumber":80,"author":{"gitId":"yashpola"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":81,"author":{"gitId":"yashpola"},"content":"            FileWriter taskFileWriter \u003d new FileWriter(\"tasks.txt\", true);","lastModifiedDate":"2024-01-29"},{"lineNumber":82,"author":{"gitId":"yashpola"},"content":"            taskFileWriter.write(newTask.toString() + \"\\n\");","lastModifiedDate":"2024-01-28"},{"lineNumber":83,"author":{"gitId":"yashpola"},"content":"            taskFileWriter.close();","lastModifiedDate":"2024-01-28"},{"lineNumber":84,"author":{"gitId":"yashpola"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":85,"author":{"gitId":"yashpola"},"content":"            throw new NicoleException(\"I couldn\u0027t save the task \u003e\u003c try again plss\");","lastModifiedDate":"2024-01-28"},{"lineNumber":86,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":87,"author":{"gitId":"yashpola"},"content":"        return \"Oki I added \" + \"\\\"\" + newTask.toString().substring(7) + \"\\\"\";","lastModifiedDate":"2024-02-04"},{"lineNumber":88,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":89,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":90,"author":{"gitId":"yashpola"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":91,"author":{"gitId":"yashpola"},"content":"     * Searches for a task using a specific keyword.","lastModifiedDate":"2024-01-28"},{"lineNumber":92,"author":{"gitId":"yashpola"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":93,"author":{"gitId":"yashpola"},"content":"     * @param name the keyword.","lastModifiedDate":"2024-01-28"},{"lineNumber":94,"author":{"gitId":"yashpola"},"content":"     * @return a filler message and the matching tasks, each on a new line.","lastModifiedDate":"2024-02-04"},{"lineNumber":95,"author":{"gitId":"yashpola"},"content":"     * @throws NicoleException if there are no matching tasks.","lastModifiedDate":"2024-01-28"},{"lineNumber":96,"author":{"gitId":"yashpola"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":97,"author":{"gitId":"yashpola"},"content":"    public String findTasks(String name) throws NicoleException {","lastModifiedDate":"2024-02-04"},{"lineNumber":98,"author":{"gitId":"yashpola"},"content":"        StringBuilder namesMatchingTasks \u003d new StringBuilder();","lastModifiedDate":"2024-02-04"},{"lineNumber":99,"author":{"gitId":"yashpola"},"content":"        int numMatchingTasks \u003d 0;","lastModifiedDate":"2024-01-28"},{"lineNumber":100,"author":{"gitId":"yashpola"},"content":"        namesMatchingTasks.append(\"Hmmm let me see...\").append(\"\\n\");","lastModifiedDate":"2024-02-04"},{"lineNumber":101,"author":{"gitId":"yashpola"},"content":"        for (int i \u003d 0; i \u003c TASKS.size(); i++) {","lastModifiedDate":"2024-02-10"},{"lineNumber":102,"author":{"gitId":"yashpola"},"content":"            // This method looks for a full match of the keyword not just partial","lastModifiedDate":"2024-02-10"},{"lineNumber":103,"author":{"gitId":"yashpola"},"content":"            if (TASKS.get(i).contains(name)) {","lastModifiedDate":"2024-02-10"},{"lineNumber":104,"author":{"gitId":"yashpola"},"content":"                namesMatchingTasks.append(i + 1).append(\". \").append(TASKS.get(i)).append(\"\\n\");","lastModifiedDate":"2024-02-04"},{"lineNumber":105,"author":{"gitId":"yashpola"},"content":"                numMatchingTasks +\u003d 1;","lastModifiedDate":"2024-01-28"},{"lineNumber":106,"author":{"gitId":"yashpola"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":107,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":108,"author":{"gitId":"yashpola"},"content":"        if (numMatchingTasks \u003d\u003d 0) {","lastModifiedDate":"2024-01-28"},{"lineNumber":109,"author":{"gitId":"yashpola"},"content":"            throw new NicoleException(\"Sorry I couldn\u0027t find any matching tasks\");","lastModifiedDate":"2024-01-28"},{"lineNumber":110,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":111,"author":{"gitId":"yashpola"},"content":"        return namesMatchingTasks.toString();","lastModifiedDate":"2024-02-04"},{"lineNumber":112,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":113,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":114,"author":{"gitId":"yashpola"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":115,"author":{"gitId":"yashpola"},"content":"     * Updates a task\u0027s name in the list.","lastModifiedDate":"2024-02-10"},{"lineNumber":116,"author":{"gitId":"yashpola"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":117,"author":{"gitId":"yashpola"},"content":"     * @param newTaskName the new task name","lastModifiedDate":"2024-02-10"},{"lineNumber":118,"author":{"gitId":"yashpola"},"content":"     * @param taskNumber the index of the task to update","lastModifiedDate":"2024-02-10"},{"lineNumber":119,"author":{"gitId":"yashpola"},"content":"     * @return a success response if the task is deleted.","lastModifiedDate":"2024-02-10"},{"lineNumber":120,"author":{"gitId":"yashpola"},"content":"     * @throws NicoleException if the delete index is out of bounds of the list.","lastModifiedDate":"2024-02-10"},{"lineNumber":121,"author":{"gitId":"yashpola"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":122,"author":{"gitId":"yashpola"},"content":"    public String updateTask(String newTaskName, int taskNumber) throws NicoleException {","lastModifiedDate":"2024-02-10"},{"lineNumber":123,"author":{"gitId":"yashpola"},"content":"        checkValidTaskNumber(taskNumber);","lastModifiedDate":"2024-02-10"},{"lineNumber":124,"author":{"gitId":"yashpola"},"content":"        TASKS.get(taskNumber - 1).updateName(newTaskName);","lastModifiedDate":"2024-02-10"},{"lineNumber":125,"author":{"gitId":"yashpola"},"content":"        storage.saveTasksToFile();","lastModifiedDate":"2024-02-17"},{"lineNumber":126,"author":{"gitId":"yashpola"},"content":"        return \"Okie I updated the name\";","lastModifiedDate":"2024-02-10"},{"lineNumber":127,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":128,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":129,"author":{"gitId":"yashpola"},"content":"    private void checkDuplicateTasks(Task newTask, String oldTaskName) throws NicoleException {","lastModifiedDate":"2024-02-10"},{"lineNumber":130,"author":{"gitId":"yashpola"},"content":"        boolean existsDuplicateTask \u003d TASKS.stream().anyMatch(task -\u003e task.equals(newTask));","lastModifiedDate":"2024-02-10"},{"lineNumber":131,"author":{"gitId":"yashpola"},"content":"        if (existsDuplicateTask) {","lastModifiedDate":"2024-02-10"},{"lineNumber":132,"author":{"gitId":"yashpola"},"content":"            newTask.updateName(oldTaskName);","lastModifiedDate":"2024-02-10"},{"lineNumber":133,"author":{"gitId":"yashpola"},"content":"            throw new NicoleException(\"Ouh sorry a task with that description already exists\");","lastModifiedDate":"2024-02-10"},{"lineNumber":134,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":135,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":136,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":137,"author":{"gitId":"yashpola"},"content":"    private void checkClashingTasks(Task newTask) throws NicoleException {","lastModifiedDate":"2024-02-10"},{"lineNumber":138,"author":{"gitId":"yashpola"},"content":"        long numClashingTasks \u003d TASKS.stream().filter(task -\u003e {","lastModifiedDate":"2024-02-10"},{"lineNumber":139,"author":{"gitId":"yashpola"},"content":"            // The datetime clashes only apply to Events since Deadlines can be the same","lastModifiedDate":"2024-02-17"},{"lineNumber":140,"author":{"gitId":"yashpola"},"content":"            return task instanceof Event","lastModifiedDate":"2024-02-10"},{"lineNumber":141,"author":{"gitId":"yashpola"},"content":"                    // Case when two event intervals are exactly the same","lastModifiedDate":"2024-02-10"},{"lineNumber":142,"author":{"gitId":"yashpola"},"content":"                    \u0026\u0026 (newTask.getFromDateTime().isEqual(task.getFromDateTime())","lastModifiedDate":"2024-02-10"},{"lineNumber":143,"author":{"gitId":"yashpola"},"content":"                        \u0026\u0026 newTask.getToDateTime().isEqual(task.getToDateTime()))","lastModifiedDate":"2024-02-10"},{"lineNumber":144,"author":{"gitId":"yashpola"},"content":"                    // Case when the new event starts after but ends before an existing event","lastModifiedDate":"2024-02-10"},{"lineNumber":145,"author":{"gitId":"yashpola"},"content":"                    || (newTask.getFromDateTime().isAfter(task.getFromDateTime())","lastModifiedDate":"2024-02-10"},{"lineNumber":146,"author":{"gitId":"yashpola"},"content":"                        \u0026\u0026 newTask.getFromDateTime().isBefore(task.getToDateTime()))","lastModifiedDate":"2024-02-10"},{"lineNumber":147,"author":{"gitId":"yashpola"},"content":"                    // Case when the new event starts before and continues into an existing event","lastModifiedDate":"2024-02-10"},{"lineNumber":148,"author":{"gitId":"yashpola"},"content":"                    ||  (newTask.getFromDateTime().isBefore(task.getFromDateTime())","lastModifiedDate":"2024-02-10"},{"lineNumber":149,"author":{"gitId":"yashpola"},"content":"                        \u0026\u0026 newTask.getToDateTime().isAfter(task.getFromDateTime()))","lastModifiedDate":"2024-02-10"},{"lineNumber":150,"author":{"gitId":"yashpola"},"content":"                    // Case when the new event starts before an existing event ends but after it begins","lastModifiedDate":"2024-02-10"},{"lineNumber":151,"author":{"gitId":"yashpola"},"content":"                    ||  (newTask.getFromDateTime().isBefore(task.getToDateTime())","lastModifiedDate":"2024-02-10"},{"lineNumber":152,"author":{"gitId":"yashpola"},"content":"                        \u0026\u0026 newTask.getToDateTime().isAfter(task.getToDateTime()));","lastModifiedDate":"2024-02-10"},{"lineNumber":153,"author":{"gitId":"yashpola"},"content":"        }).count();","lastModifiedDate":"2024-02-10"},{"lineNumber":154,"author":{"gitId":"yashpola"},"content":"        if (numClashingTasks \u003e 0) {","lastModifiedDate":"2024-02-10"},{"lineNumber":155,"author":{"gitId":"yashpola"},"content":"            throw new NicoleException(\"Careful! You already have an event at the same time\");","lastModifiedDate":"2024-02-17"},{"lineNumber":156,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":157,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":158,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":159,"author":{"gitId":"yashpola"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":160,"author":{"gitId":"yashpola"},"content":"     * Lists the present tasks. Sorts the list by task date if the user requests it","lastModifiedDate":"2024-01-28"},{"lineNumber":161,"author":{"gitId":"yashpola"},"content":"     * before printing the tasks.","lastModifiedDate":"2024-01-28"},{"lineNumber":162,"author":{"gitId":"yashpola"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":163,"author":{"gitId":"yashpola"},"content":"     * @return a filler message and the saved tasks or just a filler message if there are no tasks yet.","lastModifiedDate":"2024-02-04"},{"lineNumber":164,"author":{"gitId":"yashpola"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":165,"author":{"gitId":"yashpola"},"content":"    public String listTasks() {","lastModifiedDate":"2024-02-04"},{"lineNumber":166,"author":{"gitId":"yashpola"},"content":"        StringBuilder savedTasks \u003d new StringBuilder();","lastModifiedDate":"2024-02-04"},{"lineNumber":167,"author":{"gitId":"yashpola"},"content":"        if (TASKS.size() \u003d\u003d 0) {","lastModifiedDate":"2024-02-10"},{"lineNumber":168,"author":{"gitId":"yashpola"},"content":"            savedTasks.append(\"No tasks yet. Let\u0027s make some moves BD\");","lastModifiedDate":"2024-02-04"},{"lineNumber":169,"author":{"gitId":"yashpola"},"content":"        } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":170,"author":{"gitId":"yashpola"},"content":"            savedTasks.append(\"Here\u0027s the tasks I saved so far,\").append(\"\\n\");","lastModifiedDate":"2024-02-04"},{"lineNumber":171,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":172,"author":{"gitId":"yashpola"},"content":"        for (int i \u003d 0; i \u003c TASKS.size(); i++) {","lastModifiedDate":"2024-02-10"},{"lineNumber":173,"author":{"gitId":"yashpola"},"content":"            savedTasks.append(i + 1).append(\". \").append(TASKS.get(i)).append(\"\\n\");","lastModifiedDate":"2024-02-10"},{"lineNumber":174,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":175,"author":{"gitId":"yashpola"},"content":"        return savedTasks.toString();","lastModifiedDate":"2024-02-04"},{"lineNumber":176,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":177,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":178,"author":{"gitId":"yashpola"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":179,"author":{"gitId":"yashpola"},"content":"     * Sorts the list by task date if the user requests priority ordering.","lastModifiedDate":"2024-02-02"},{"lineNumber":180,"author":{"gitId":"yashpola"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":181,"author":{"gitId":"yashpola"},"content":"     * @return a success message.","lastModifiedDate":"2024-02-10"},{"lineNumber":182,"author":{"gitId":"yashpola"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":183,"author":{"gitId":"yashpola"},"content":"    public String sortTasksByDate() throws NicoleException {","lastModifiedDate":"2024-02-17"},{"lineNumber":184,"author":{"gitId":"yashpola"},"content":"        // This sorter doesn\u0027t meaningfully sort Todos, whose Date is by default the maximum possible date","lastModifiedDate":"2024-02-10"},{"lineNumber":185,"author":{"gitId":"yashpola"},"content":"        Comparator\u003cTask\u003e dateSorter \u003d (task1, task2) -\u003e {","lastModifiedDate":"2024-02-10"},{"lineNumber":186,"author":{"gitId":"yashpola"},"content":"            if (task1.getDate().isBefore(task2.getDate())) {","lastModifiedDate":"2024-01-28"},{"lineNumber":187,"author":{"gitId":"yashpola"},"content":"                return -1;","lastModifiedDate":"2024-01-28"},{"lineNumber":188,"author":{"gitId":"yashpola"},"content":"            } else if (task1.getDate().isEqual(task2.getDate())) {","lastModifiedDate":"2024-01-28"},{"lineNumber":189,"author":{"gitId":"yashpola"},"content":"                if (task1.getFromDateTime().isBefore(task2.getFromDateTime())) {","lastModifiedDate":"2024-02-17"},{"lineNumber":190,"author":{"gitId":"yashpola"},"content":"                    return -1;","lastModifiedDate":"2024-02-17"},{"lineNumber":191,"author":{"gitId":"yashpola"},"content":"                } else if (task1.getFromDateTime().isAfter(task2.getFromDateTime())) {","lastModifiedDate":"2024-02-17"},{"lineNumber":192,"author":{"gitId":"yashpola"},"content":"                    return 1;","lastModifiedDate":"2024-02-17"},{"lineNumber":193,"author":{"gitId":"yashpola"},"content":"                } else {","lastModifiedDate":"2024-02-17"},{"lineNumber":194,"author":{"gitId":"yashpola"},"content":"                    return 0;","lastModifiedDate":"2024-01-28"},{"lineNumber":195,"author":{"gitId":"yashpola"},"content":"                }","lastModifiedDate":"2024-02-17"},{"lineNumber":196,"author":{"gitId":"yashpola"},"content":"            } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":197,"author":{"gitId":"yashpola"},"content":"                return 1;","lastModifiedDate":"2024-01-28"},{"lineNumber":198,"author":{"gitId":"yashpola"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":199,"author":{"gitId":"yashpola"},"content":"        };","lastModifiedDate":"2024-01-28"},{"lineNumber":200,"author":{"gitId":"yashpola"},"content":"        TASKS.sort(dateSorter);","lastModifiedDate":"2024-02-10"},{"lineNumber":201,"author":{"gitId":"yashpola"},"content":"        storage.saveTasksToFile();","lastModifiedDate":"2024-02-17"},{"lineNumber":202,"author":{"gitId":"yashpola"},"content":"        return \"Alriiiiighty sorted by date :6\";","lastModifiedDate":"2024-02-04"},{"lineNumber":203,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":204,"author":{"gitId":"yashpola"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"yashpola":204}},{"path":"src/main/java/nicole/userrequests/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yashpola"},"content":"package nicole.userrequests;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"yashpola"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"yashpola"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"yashpola"},"content":"import nicole.nicoleexceptions.NicoleException;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"yashpola"},"content":"import nicole.task.Task;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"yashpola"},"content":"public class Parser {","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"yashpola"},"content":"    public Parser() {","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"yashpola"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"yashpola"},"content":"     * Checks the validity of the user request.","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"yashpola"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"yashpola"},"content":"     * @param name the user request.","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"yashpola"},"content":"     * @return the appropriate task for the user request.","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"yashpola"},"content":"     * @throws NicoleException if the request is unknown or in the wrong format.","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"yashpola"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"yashpola"},"content":"    protected static Task parseRequest(String name) throws NicoleException {","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"yashpola"},"content":"        Pattern todoPattern \u003d Pattern.compile(\"^todo(?: (.*?))?$\");","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"yashpola"},"content":"        Pattern deadlinePattern \u003d Pattern.compile(\"^deadline(?: (.*?))?(?: by (\\\\d{4}-\\\\d{2}-\\\\d{2}))?$\");","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"yashpola"},"content":"        Pattern eventPattern \u003d Pattern.compile(\"^event(?: (.*?))?(?: \"","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"yashpola"},"content":"                + \"from (\\\\d{4}-\\\\d{2}-\\\\d{2}) at (\\\\d{2}:\\\\d{2}:\\\\d{2}) \"","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"yashpola"},"content":"                + \"to (\\\\d{4}-\\\\d{2}-\\\\d{2}) at (\\\\d{2}:\\\\d{2}:\\\\d{2}))?$\");","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"yashpola"},"content":"        Matcher todoMatcher \u003d todoPattern.matcher(name);","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"yashpola"},"content":"        Matcher deadlineMatcher \u003d deadlinePattern.matcher(name);","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"yashpola"},"content":"        Matcher eventMatcher \u003d eventPattern.matcher(name);","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"yashpola"},"content":"        if (todoMatcher.matches()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"yashpola"},"content":"            return Task.taskFactory(todoMatcher.group(1), \u0027T\u0027);","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"yashpola"},"content":"        } else if (deadlineMatcher.matches()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"yashpola"},"content":"            return Task.taskFactory(","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"yashpola"},"content":"                        deadlineMatcher.group(1) + \" by \" + deadlineMatcher.group(2),","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"yashpola"},"content":"                        \u0027D\u0027);","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"yashpola"},"content":"        } else if (eventMatcher.matches()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"yashpola"},"content":"            return Task.taskFactory(eventMatcher.group(1)","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"yashpola"},"content":"                        + \" from \"","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"yashpola"},"content":"                        + eventMatcher.group(2) + \" at \" + eventMatcher.group(3)","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"yashpola"},"content":"                        + \" to \"","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"yashpola"},"content":"                        + eventMatcher.group(4) + \" at \" + eventMatcher.group(5), \u0027E\u0027);","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"yashpola"},"content":"        } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"yashpola"},"content":"            throw new NicoleException(\"What does this mean? \"","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"yashpola"},"content":"                    + \"Send \\\"help\\\" if you want to know what commands I can help you with\");","lastModifiedDate":"2024-02-10"},{"lineNumber":45,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"yashpola"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"yashpola":47}},{"path":"src/main/java/nicole/userrequests/Request.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yashpola"},"content":"package nicole.userrequests;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"yashpola"},"content":"import nicole.nicoleexceptions.NicoleException;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"yashpola"},"content":"import nicole.task.Task;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"yashpola"},"content":"import nicole.taskstorage.TaskList;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"yashpola"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"yashpola"},"content":"public class Request {","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"yashpola"},"content":"    private Task newTask;","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"yashpola"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"yashpola"},"content":"     * Initialises a Request","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"yashpola"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"yashpola"},"content":"     * @param request the user request.","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"yashpola"},"content":"     * @throws NicoleException if the Parser throws this exception due to issues","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"yashpola"},"content":"     *                         with the request.","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"yashpola"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"yashpola"},"content":"    public Request(String request) throws NicoleException {","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"yashpola"},"content":"        if (request.equals(\"list\")","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"yashpola"},"content":"                || request.contains(\"mark\")","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"yashpola"},"content":"                || request.contains(\"unmark\")","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"yashpola"},"content":"                || request.contains(\"help\")","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"yashpola"},"content":"                || request.contains(\"delete\")","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"yashpola"},"content":"                || request.contains(\"sort by date\")","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"yashpola"},"content":"                || request.contains(\"find\")","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"yashpola"},"content":"                || request.contains(\"update\")) {","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"yashpola"},"content":"        } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"yashpola"},"content":"            newTask \u003d Parser.parseRequest(request);","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"yashpola"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"yashpola"},"content":"     * Handles user requests.","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"yashpola"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"yashpola"},"content":"     * @param request the user request.","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"yashpola"},"content":"     * @return nicole\u0027s response to the request.","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"yashpola"},"content":"     * @throws NicoleException if there are issues from TaskList or Storage when handling the request.","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"yashpola"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"yashpola"},"content":"    public String handleRequest(String request) throws NicoleException {","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"yashpola"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"yashpola"},"content":"        if (request.contains(\"unmark\")) {","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"yashpola"},"content":"            try {","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"yashpola"},"content":"                int taskNumber \u003d Integer.parseInt(request.substring(7));","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"yashpola"},"content":"                return taskList.unmarkTask(taskNumber);","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"yashpola"},"content":"            } catch (StringIndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"yashpola"},"content":"                throw new NicoleException(\"unmark [task number] pls...\");","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"yashpola"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"yashpola"},"content":"        } else if (request.contains(\"mark\")) {","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"yashpola"},"content":"            try {","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"yashpola"},"content":"                int taskNumber \u003d Integer.parseInt(request.substring(5));","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"yashpola"},"content":"                return taskList.markTask(taskNumber);","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"yashpola"},"content":"            } catch (StringIndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"yashpola"},"content":"                throw new NicoleException(\"mark [task number] pls...\");","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"yashpola"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"yashpola"},"content":"        } else if (request.contains(\"delete\")) {","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"yashpola"},"content":"            try {","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"yashpola"},"content":"                int taskNumber \u003d Integer.parseInt(request.substring(7));","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"yashpola"},"content":"                return taskList.deleteTask(taskNumber);","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"yashpola"},"content":"            } catch (StringIndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"yashpola"},"content":"                throw new NicoleException(\"delete [task number] pls...\");","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"yashpola"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"yashpola"},"content":"        } else if (request.equals(\"help\")) {","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"yashpola"},"content":"            return \"I\u0027m your task/deadline/event manager! I\u0027m down with these requests,\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"yashpola"},"content":"                    + \"1. todo [task]\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"yashpola"},"content":"                    + \"2. deadline [task] by YYYY-MM-DD\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"yashpola"},"content":"                    + \"3. event [description] from YYYY-MM-DD at HH:MM:SS to YYYY-MM-DD at HH:MM:SS\\n\"","lastModifiedDate":"2024-02-21"},{"lineNumber":68,"author":{"gitId":"yashpola"},"content":"                    + \"4. list\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"yashpola"},"content":"                    + \"5. mark [tasknumber]\\n\"","lastModifiedDate":"2024-02-17"},{"lineNumber":70,"author":{"gitId":"yashpola"},"content":"                    + \"6. unmark [tasknumber]\\n\"","lastModifiedDate":"2024-02-17"},{"lineNumber":71,"author":{"gitId":"yashpola"},"content":"                    + \"7. delete [tasknumber]\\n\"","lastModifiedDate":"2024-02-17"},{"lineNumber":72,"author":{"gitId":"yashpola"},"content":"                    + \"8. sort by date\\n\"","lastModifiedDate":"2024-02-17"},{"lineNumber":73,"author":{"gitId":"yashpola"},"content":"                    + \"9. find [keyword]\\n\"","lastModifiedDate":"2024-02-17"},{"lineNumber":74,"author":{"gitId":"yashpola"},"content":"                    + \"10. update [tasknumber] [new task name]\\n\"","lastModifiedDate":"2024-02-17"},{"lineNumber":75,"author":{"gitId":"yashpola"},"content":"                    + \"11. bye\\n\"","lastModifiedDate":"2024-02-17"},{"lineNumber":76,"author":{"gitId":"yashpola"},"content":"                    + \"12. help\";","lastModifiedDate":"2024-02-17"},{"lineNumber":77,"author":{"gitId":"yashpola"},"content":"        } else if (request.equals(\"sort by date\")) {","lastModifiedDate":"2024-02-10"},{"lineNumber":78,"author":{"gitId":"yashpola"},"content":"            return taskList.sortTasksByDate();","lastModifiedDate":"2024-02-10"},{"lineNumber":79,"author":{"gitId":"yashpola"},"content":"        } else if (request.contains(\"find\")) {","lastModifiedDate":"2024-02-04"},{"lineNumber":80,"author":{"gitId":"yashpola"},"content":"            try {","lastModifiedDate":"2024-02-04"},{"lineNumber":81,"author":{"gitId":"yashpola"},"content":"                String taskKeyWord \u003d request.substring(6);","lastModifiedDate":"2024-02-04"},{"lineNumber":82,"author":{"gitId":"yashpola"},"content":"                return taskList.findTasks(taskKeyWord);","lastModifiedDate":"2024-02-04"},{"lineNumber":83,"author":{"gitId":"yashpola"},"content":"            } catch (StringIndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":84,"author":{"gitId":"yashpola"},"content":"                throw new NicoleException(\"find [keyword] pls...\");","lastModifiedDate":"2024-02-04"},{"lineNumber":85,"author":{"gitId":"yashpola"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":86,"author":{"gitId":"yashpola"},"content":"        } else if (request.contains(\"update\")) {","lastModifiedDate":"2024-02-10"},{"lineNumber":87,"author":{"gitId":"yashpola"},"content":"            try {","lastModifiedDate":"2024-02-10"},{"lineNumber":88,"author":{"gitId":"yashpola"},"content":"                int taskNumber \u003d Integer.parseInt(request.substring(7, 8));","lastModifiedDate":"2024-02-10"},{"lineNumber":89,"author":{"gitId":"yashpola"},"content":"                String newTaskName \u003d request.substring(9);","lastModifiedDate":"2024-02-10"},{"lineNumber":90,"author":{"gitId":"yashpola"},"content":"                return taskList.updateTask(newTaskName, taskNumber);","lastModifiedDate":"2024-02-10"},{"lineNumber":91,"author":{"gitId":"yashpola"},"content":"            } catch (StringIndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":92,"author":{"gitId":"yashpola"},"content":"                throw new NicoleException(\"update [task number] [name] pls...\");","lastModifiedDate":"2024-02-10"},{"lineNumber":93,"author":{"gitId":"yashpola"},"content":"            }","lastModifiedDate":"2024-02-10"},{"lineNumber":94,"author":{"gitId":"yashpola"},"content":"        } else if (!request.equals(\"list\")) {","lastModifiedDate":"2024-02-04"},{"lineNumber":95,"author":{"gitId":"yashpola"},"content":"            return taskList.addTask(newTask);","lastModifiedDate":"2024-02-04"},{"lineNumber":96,"author":{"gitId":"yashpola"},"content":"        } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":97,"author":{"gitId":"yashpola"},"content":"            return taskList.listTasks();","lastModifiedDate":"2024-02-04"},{"lineNumber":98,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":99,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":100,"author":{"gitId":"yashpola"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"yashpola":100}},{"path":"src/main/java/nicole/userrequests/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yashpola"},"content":"package nicole.userrequests;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"yashpola"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"yashpola"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"yashpola"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"yashpola"},"content":"import nicole.nicoleexceptions.NicoleException;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"yashpola"},"content":"public class Ui {","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"yashpola"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"yashpola"},"content":"     * Initialises a new Request.","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"yashpola"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"yashpola"},"content":"     * @param request the user request.","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"yashpola"},"content":"     * @return nicole\u0027s response to the request or stringified NicoleExceptions that are caught.","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"yashpola"},"content":"     * @throws IOException if there are issues saving or loading tasks from Storage.","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"yashpola"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"yashpola"},"content":"    public String interactWithUser(String request) throws IOException {","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"yashpola"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"yashpola"},"content":"            Request requestHandler \u003d new Request(request);","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"yashpola"},"content":"            return requestHandler.handleRequest(request);","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"yashpola"},"content":"        } catch (NicoleException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"yashpola"},"content":"            return e.toString();","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"yashpola"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"yashpola"},"content":"     * Dynamically Greets the user with the current date and appropriate salutation.","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"yashpola"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"yashpola"},"content":"     * @return a greeting.","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"yashpola"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"yashpola"},"content":"    public static String greetUser() {","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"yashpola"},"content":"        DateTimeFormatter digitalTime \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy | HH:mm:ss\");","lastModifiedDate":"2024-02-17"},{"lineNumber":35,"author":{"gitId":"yashpola"},"content":"        DateTimeFormatter parseHour \u003d DateTimeFormatter.ofPattern(\"HH\");","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"yashpola"},"content":"        LocalDateTime now \u003d LocalDateTime.now();","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"yashpola"},"content":"        String salutation \u003d \"Good \";","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"yashpola"},"content":"        int currentHour \u003d Integer.parseInt(parseHour.format(now));","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"yashpola"},"content":"        if (currentHour \u003c 12 \u0026\u0026 currentHour \u003e\u003d 5) {","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"yashpola"},"content":"            salutation +\u003d \"morns :D ! What\u0027s the plan today\";","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"yashpola"},"content":"        } else if (currentHour \u003e\u003d 12 \u0026\u0026 currentHour \u003c 17) {","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"yashpola"},"content":"            salutation +\u003d \"afternoon zzz...how\u0027s it going\";","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"yashpola"},"content":"        } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"yashpola"},"content":"            salutation +\u003d \"evening! Let\u0027s wrap it up soon? :P\";","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"yashpola"},"content":"        return \"Welcome to Nicole Mark II. New conversation at \"","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"yashpola"},"content":"                + digitalTime.format(now)","lastModifiedDate":"2024-02-17"},{"lineNumber":48,"author":{"gitId":"yashpola"},"content":"                + \"\\n\\n\"","lastModifiedDate":"2024-02-17"},{"lineNumber":49,"author":{"gitId":"yashpola"},"content":"                + salutation;","lastModifiedDate":"2024-02-17"},{"lineNumber":50,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"yashpola"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"yashpola":51}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"yashpola"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"yashpola"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"yashpola"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"yashpola"},"content":"\u003c?import javafx.scene.effect.DropShadow?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"yashpola"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"yashpola"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"yashpola"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: #FEBF00;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"yashpola"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"yashpola"},"content":"        \u003cLabel fx:id\u003d\"dialog\" graphicTextGap\u003d\"5.0\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"yashpola"},"content":"         \u003cfont\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"yashpola"},"content":"            \u003cFont name\u003d\"Apple LiGothic Medium\" size\u003d\"18.0\" /\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"yashpola"},"content":"         \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"yashpola"},"content":"\u003c!--        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"80.0\" fitWidth\u003d\"80.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e--\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"yashpola"},"content":"\u003c!--         \u003ceffect\u003e--\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"yashpola"},"content":"\u003c!--            \u003cDropShadow /\u003e--\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"yashpola"},"content":"\u003c!--         \u003c/effect\u003e\u003c/ImageView\u003e--\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"yashpola"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"yashpola"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"yashpola"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"yashpola"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"yashpola"},"content":"   \u003ceffect\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"yashpola"},"content":"      \u003cDropShadow blurType\u003d\"ONE_PASS_BOX\" /\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"yashpola"},"content":"   \u003c/effect\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":26,"author":{"gitId":"yashpola"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"yashpola":26}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"yashpola"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"yashpola"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"yashpola"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"yashpola"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"yashpola"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"yashpola"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"yashpola"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"yashpola"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"nicole.gui.MainWindow\"\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"yashpola"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"yashpola"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" style\u003d\"-fx-background-color: #eee; -fx-border-color: black; -fx-border-radius: 3;\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"yashpola"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" style\u003d\"-fx-background-color: EF9B0D; -fx-border-radius: 3; -fx-border-color: black; -fx-text-fill: white;\" text\u003d\"Send\"\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"yashpola"},"content":"         \u003cfont\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"yashpola"},"content":"            \u003cFont name\u003d\"Apple LiGothic Medium\" size\u003d\"20.0\" /\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"yashpola"},"content":"         \u003c/font\u003e\u003c/Button\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"yashpola"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"yashpola"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"yashpola"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: #FFF77D; -fx-border-color: black; -fx-border-radius: 3;\" /\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"yashpola"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"yashpola"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"yashpola"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"yashpola"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"yashpola":23}},{"path":"src/test/java/nicole/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yashpola"},"content":"package nicole.task;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"yashpola"},"content":"import nicole.nicoleexceptions.NicoleException;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"yashpola"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"yashpola"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"yashpola"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"yashpola"},"content":"public class DeadlineTest {","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"yashpola"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"yashpola"},"content":"    public void deadline_noDescriptionGiven_nicoleExceptionThrown() {","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"yashpola"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"yashpola"},"content":"            new Deadline(\"2024 by null\");","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"yashpola"},"content":"            fail();","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"yashpola"},"content":"        } catch (NicoleException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"yashpola"},"content":"            assertEquals(","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"yashpola"},"content":"                    \"ERROR. Describe your deadline like this: deadline [task] by YYYY-MM-DD\",","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"yashpola"},"content":"                    e.toString());","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"yashpola"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"yashpola"},"content":"    public void deadline_noDeadlineGiven_nicoleExceptionThrown() {","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"yashpola"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"yashpola"},"content":"            new Deadline(\"return book by null\");","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"yashpola"},"content":"            fail();","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"yashpola"},"content":"        } catch (NicoleException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"yashpola"},"content":"            assertEquals(","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"yashpola"},"content":"                    \"ERROR. Describe your deadline like this: deadline [task] by YYYY-MM-DD\",","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"yashpola"},"content":"                    e.toString());","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"yashpola"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"yashpola"},"content":"    public void parseDate_invalidLocalDate_nicoleExceptionThrown() {","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"yashpola"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"yashpola"},"content":"            new Deadline(\"return book by 2024-30-49\");","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"yashpola"},"content":"            fail();","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"yashpola"},"content":"        } catch (NicoleException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"yashpola"},"content":"            assertEquals(","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"yashpola"},"content":"                    \"ERROR. Are you sure your date is in the proper [YYYY-MM-DD] format...?\",","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"yashpola"},"content":"                    e.toString());","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"yashpola"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"yashpola"},"content":"    public void parseDate_impossibleDate_nicoleExceptionThrown() {","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"yashpola"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"yashpola"},"content":"            new Deadline(\"return book by 2010-01-01\");","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"yashpola"},"content":"        } catch (NicoleException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"yashpola"},"content":"            assertEquals(","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"yashpola"},"content":"                    \"ERROR. Erm, the deadline can\u0027t be before now right...\",","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"yashpola"},"content":"                    e.toString());","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"yashpola"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"yashpola"},"content":"    void deadlineCreation_perfectConditions_toStringCorrect() {","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"yashpola"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"yashpola"},"content":"            Deadline testDeadline \u003d new Deadline(\"return book by 2024-12-31\");","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"yashpola"},"content":"            assertEquals(\"[D][I] return book by 2024-12-31\", testDeadline.toString());","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"yashpola"},"content":"        } catch (NicoleException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"yashpola"},"content":"            fail();","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"yashpola"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"yashpola":65}},{"path":"src/test/java/nicole/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yashpola"},"content":"package nicole.task;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"yashpola"},"content":"import nicole.nicoleexceptions.NicoleException;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"yashpola"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"yashpola"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"yashpola"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"yashpola"},"content":"public class EventTest {","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"yashpola"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"yashpola"},"content":"    public void event_noDescriptionGiven_nicoleExceptionThrown() {","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"yashpola"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"yashpola"},"content":"            new Event(\"from 2024-01-29 at 18:00:00 to 2024-01-29 at 21:00:00 from null at null to null at null\");","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"yashpola"},"content":"            fail();","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"yashpola"},"content":"        } catch (NicoleException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"yashpola"},"content":"            assertEquals(","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"yashpola"},"content":"                    \"ERROR. Describe your event like this: event [name] from YYYY-MM-DD at HH-MM-SS \"","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"yashpola"},"content":"                              + \"to YYYY-MM-DD at HH-MM-SS\",","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"yashpola"},"content":"                    e.toString());","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"yashpola"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"yashpola"},"content":"    public void event_noDeadlineGiven_nicoleExceptionThrown() {","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"yashpola"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"yashpola"},"content":"            new Event(\"meeting with kay from null at null to null at null\");","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"yashpola"},"content":"            fail();","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"yashpola"},"content":"        } catch (NicoleException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"yashpola"},"content":"            assertEquals(","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"yashpola"},"content":"                    \"ERROR. Describe your event like this: event [name] from YYYY-MM-DD at HH-MM-SS \"","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"yashpola"},"content":"                              + \"to YYYY-MM-DD at HH-MM-SS\",","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"yashpola"},"content":"                    e.toString());","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"yashpola"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"yashpola"},"content":"    public void parseDate_invalidLocalDate_nicoleExceptionThrown() {","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"yashpola"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"yashpola"},"content":"            new Event(\"meeting with kay from 2024-30-89 at 18:00:00 to 2024-30-89 at 21:00:00\");","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"yashpola"},"content":"            fail();","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"yashpola"},"content":"        } catch (NicoleException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"yashpola"},"content":"            assertEquals(","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"yashpola"},"content":"                    \"ERROR. Are you sure your date and time are in the proper [YYYY-MM-DD] and \"","lastModifiedDate":"2024-02-17"},{"lineNumber":43,"author":{"gitId":"yashpola"},"content":"                              + \"[HH-MM-SS] format...?\",","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"yashpola"},"content":"                    e.toString());","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"yashpola"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"yashpola"},"content":"    public void parseDate_impossibleDate_nicoleExceptionThrown() {","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"yashpola"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"yashpola"},"content":"            new Event(\"meeting with kay from 2024-01-30 at 18:00:00 to 2024-01-29 at 21:00:00\");","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"yashpola"},"content":"        } catch (NicoleException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"yashpola"},"content":"            assertEquals(","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"yashpola"},"content":"                    \"ERROR. Erm, the \u0027to\u0027 datetime can\u0027t be before \u0027from\u0027 right...\",","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"yashpola"},"content":"                    e.toString());","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"yashpola"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"yashpola"},"content":"    void eventCreation_perfectConditions_toStringCorrect() {","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"yashpola"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"yashpola"},"content":"            Event testEvent \u003d new Event(\"meeting with kay from 2024-12-30 at 18:00:00 to 2024-12-30 at 21:00:00\");","lastModifiedDate":"2024-02-17"},{"lineNumber":63,"author":{"gitId":"yashpola"},"content":"            assertEquals(\"[E][I] meeting with kay from 2024-12-30 at 18:00:00 to 2024-12-30 at 21:00:00\",","lastModifiedDate":"2024-02-17"},{"lineNumber":64,"author":{"gitId":"yashpola"},"content":"                         testEvent.toString());","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"yashpola"},"content":"        } catch (NicoleException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":66,"author":{"gitId":"yashpola"},"content":"            fail();","lastModifiedDate":"2024-01-28"},{"lineNumber":67,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":68,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":69,"author":{"gitId":"yashpola"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"yashpola":69}},{"path":"src/test/java/nicole/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yashpola"},"content":"package nicole.task;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"yashpola"},"content":"import nicole.task.Todo;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"yashpola"},"content":"import nicole.nicoleexceptions.NicoleException;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"yashpola"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"yashpola"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"yashpola"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"yashpola"},"content":"public class TodoTest {","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"yashpola"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"yashpola"},"content":"    void todo_noDescriptionGiven_nicoleExceptionThrown() {","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"yashpola"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"yashpola"},"content":"            new Todo(\"null\");","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"yashpola"},"content":"        } catch (NicoleException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"yashpola"},"content":"            assertEquals(\"ERROR. What exactly do you want me to note...tell me in the form of: todo [task]\",","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"yashpola"},"content":"                    e.toString());","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"yashpola"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"yashpola"},"content":"    void todoCreation_perfectConditions_toStringCorrect() {","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"yashpola"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"yashpola"},"content":"            Todo testTodo \u003d new Todo(\"borrow book\");","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"yashpola"},"content":"            assertEquals(\"[T][I] borrow book\", testTodo.toString());","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"yashpola"},"content":"        } catch (NicoleException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"yashpola"},"content":"            fail();","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"yashpola"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"yashpola":29}},{"path":"src/test/java/nicole/taskstorage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yashpola"},"content":"package nicole.taskstorage;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"yashpola"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"yashpola"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"yashpola"},"content":"import nicole.nicoleexceptions.NicoleException;","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":8,"author":{"gitId":"yashpola"},"content":"import java.io.File;","lastModifiedDate":"2024-02-18"},{"lineNumber":9,"author":{"gitId":"yashpola"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-18"},{"lineNumber":10,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":11,"author":{"gitId":"yashpola"},"content":"public class StorageTest {","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"yashpola"},"content":"    @Test","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"yashpola"},"content":"    public void storage_saveTasksToFile_noExceptionThrown() {","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"yashpola"},"content":"        try {","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"yashpola"},"content":"            Storage storage \u003d new Storage();","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"yashpola"},"content":"            storage.saveTasksToFile();","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"yashpola"},"content":"        } catch (NicoleException e) {","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"yashpola"},"content":"            fail();","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":23,"author":{"gitId":"yashpola"},"content":"    @Test","lastModifiedDate":"2024-02-18"},{"lineNumber":24,"author":{"gitId":"yashpola"},"content":"    public void storage_loadTasksFromFile_noNegativeExceptionThrown() {","lastModifiedDate":"2024-02-18"},{"lineNumber":25,"author":{"gitId":"yashpola"},"content":"        try {","lastModifiedDate":"2024-02-18"},{"lineNumber":26,"author":{"gitId":"yashpola"},"content":"            File tasksFile \u003d new File(\"tasks.txt\");","lastModifiedDate":"2024-02-18"},{"lineNumber":27,"author":{"gitId":"yashpola"},"content":"            tasksFile.createNewFile();","lastModifiedDate":"2024-02-18"},{"lineNumber":28,"author":{"gitId":"yashpola"},"content":"            new Storage().loadTasksFromFile(tasksFile);","lastModifiedDate":"2024-02-18"},{"lineNumber":29,"author":{"gitId":"yashpola"},"content":"        } catch (NicoleException | IOException e) {","lastModifiedDate":"2024-02-18"},{"lineNumber":30,"author":{"gitId":"yashpola"},"content":"            if (e.toString().equals(\"ERROR. Sorry sorry I have trouble loading your tasks from storage...\")) {","lastModifiedDate":"2024-02-18"},{"lineNumber":31,"author":{"gitId":"yashpola"},"content":"                fail();","lastModifiedDate":"2024-02-18"},{"lineNumber":32,"author":{"gitId":"yashpola"},"content":"            }","lastModifiedDate":"2024-02-18"},{"lineNumber":33,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":34,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":35,"author":{"gitId":"yashpola"},"content":"}","lastModifiedDate":"2024-02-17"}],"authorContributionMap":{"yashpola":35}},{"path":"src/test/java/nicole/taskstorage/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yashpola"},"content":"package nicole.taskstorage;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"yashpola"},"content":"import nicole.task.Event;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"yashpola"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"yashpola"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"yashpola"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"yashpola"},"content":"import nicole.nicoleexceptions.NicoleException;","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"yashpola"},"content":"public class TaskListTest {","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"yashpola"},"content":"    private final TaskList testList \u003d new TaskList();","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"yashpola"},"content":"    @Test","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"yashpola"},"content":"    public void taskList_invalidTaskNumber_nicoleExceptionThrown() {","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"yashpola"},"content":"        try {","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"yashpola"},"content":"            testList.unmarkTask(TaskList.TASKS.size() + 1);","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"yashpola"},"content":"            fail();","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"yashpola"},"content":"        } catch (NicoleException e) {","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"yashpola"},"content":"            assertEquals(e.toString(),","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"yashpola"},"content":"                    \"ERROR. Huh? That\u0027s not a valid item number :\u0027)\");","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":23,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"yashpola"},"content":"    @Test","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"yashpola"},"content":"    public void taskList_clashingTasksGiven_nicoleExceptionThrown() {","lastModifiedDate":"2024-02-17"},{"lineNumber":26,"author":{"gitId":"yashpola"},"content":"        try {","lastModifiedDate":"2024-02-17"},{"lineNumber":27,"author":{"gitId":"yashpola"},"content":"            testList.addTask(new Event(\"from 2024-02-18 at 18:00:00 to 2024-02-18 at 19:00:00\"));","lastModifiedDate":"2024-02-17"},{"lineNumber":28,"author":{"gitId":"yashpola"},"content":"            testList.addTask(new Event(\"from 2024-02-18 at 18:30:00 to 2024-02-18 at 19:30:00\"));","lastModifiedDate":"2024-02-17"},{"lineNumber":29,"author":{"gitId":"yashpola"},"content":"            fail();","lastModifiedDate":"2024-02-17"},{"lineNumber":30,"author":{"gitId":"yashpola"},"content":"        } catch (NicoleException e) {","lastModifiedDate":"2024-02-17"},{"lineNumber":31,"author":{"gitId":"yashpola"},"content":"            assertEquals(e.toString(),","lastModifiedDate":"2024-02-17"},{"lineNumber":32,"author":{"gitId":"yashpola"},"content":"                         \"ERROR. Careful! You already have an event at the same time\");","lastModifiedDate":"2024-02-17"},{"lineNumber":33,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":34,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":35,"author":{"gitId":"yashpola"},"content":"}","lastModifiedDate":"2024-02-17"}],"authorContributionMap":{"yashpola":35}},{"path":"src/test/java/nicole/userrequests/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yashpola"},"content":"package nicole.userrequests;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"yashpola"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"yashpola"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"yashpola"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"yashpola"},"content":"import nicole.nicoleexceptions.NicoleException;","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"yashpola"},"content":"import nicole.task.Deadline;","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"yashpola"},"content":"import nicole.task.Event;","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"yashpola"},"content":"import nicole.task.Task;","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"yashpola"},"content":"import nicole.task.Todo;","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"yashpola"},"content":"public class ParserTest {","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"yashpola"},"content":"    @Test","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"yashpola"},"content":"    public void parser_todoCommandGiven_todoSuccessfullyCreated() {","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"yashpola"},"content":"        try {","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"yashpola"},"content":"            Task todo \u003d Parser.parseRequest(\"todo borrow book\");","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"yashpola"},"content":"            if (!(todo instanceof Todo)) {","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"yashpola"},"content":"                fail();","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"yashpola"},"content":"            }","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"yashpola"},"content":"        } catch (NicoleException e) {","lastModifiedDate":"2024-02-17"},{"lineNumber":23,"author":{"gitId":"yashpola"},"content":"            fail();","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":26,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":27,"author":{"gitId":"yashpola"},"content":"    @Test","lastModifiedDate":"2024-02-17"},{"lineNumber":28,"author":{"gitId":"yashpola"},"content":"    public void parser_deadlineCommandGiven_deadlineSuccessfullyCreated() {","lastModifiedDate":"2024-02-17"},{"lineNumber":29,"author":{"gitId":"yashpola"},"content":"        try {","lastModifiedDate":"2024-02-17"},{"lineNumber":30,"author":{"gitId":"yashpola"},"content":"            Task todo \u003d Parser.parseRequest(\"deadline return book by 2024-12-31\");","lastModifiedDate":"2024-02-18"},{"lineNumber":31,"author":{"gitId":"yashpola"},"content":"            if (!(todo instanceof Deadline)) {","lastModifiedDate":"2024-02-17"},{"lineNumber":32,"author":{"gitId":"yashpola"},"content":"                fail();","lastModifiedDate":"2024-02-17"},{"lineNumber":33,"author":{"gitId":"yashpola"},"content":"            }","lastModifiedDate":"2024-02-17"},{"lineNumber":34,"author":{"gitId":"yashpola"},"content":"        } catch (NicoleException e) {","lastModifiedDate":"2024-02-17"},{"lineNumber":35,"author":{"gitId":"yashpola"},"content":"            fail();","lastModifiedDate":"2024-02-17"},{"lineNumber":36,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":37,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":38,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":39,"author":{"gitId":"yashpola"},"content":"    @Test","lastModifiedDate":"2024-02-17"},{"lineNumber":40,"author":{"gitId":"yashpola"},"content":"    public void parser_eventCommandGiven_eventSuccessfullyCreated() {","lastModifiedDate":"2024-02-17"},{"lineNumber":41,"author":{"gitId":"yashpola"},"content":"        try {","lastModifiedDate":"2024-02-17"},{"lineNumber":42,"author":{"gitId":"yashpola"},"content":"            Task todo \u003d Parser.parseRequest(\"event meeting from 2024-02-17 at 18:00:00 to 2024-02-17 at 21:00:00\");","lastModifiedDate":"2024-02-17"},{"lineNumber":43,"author":{"gitId":"yashpola"},"content":"            if (!(todo instanceof Event)) {","lastModifiedDate":"2024-02-17"},{"lineNumber":44,"author":{"gitId":"yashpola"},"content":"                fail();","lastModifiedDate":"2024-02-17"},{"lineNumber":45,"author":{"gitId":"yashpola"},"content":"            }","lastModifiedDate":"2024-02-17"},{"lineNumber":46,"author":{"gitId":"yashpola"},"content":"        } catch (NicoleException e) {","lastModifiedDate":"2024-02-17"},{"lineNumber":47,"author":{"gitId":"yashpola"},"content":"            fail();","lastModifiedDate":"2024-02-17"},{"lineNumber":48,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":49,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":50,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":51,"author":{"gitId":"yashpola"},"content":"    @Test","lastModifiedDate":"2024-02-17"},{"lineNumber":52,"author":{"gitId":"yashpola"},"content":"    public void parser_gibberishCommandGiven_nicoleExceptionThrown() {","lastModifiedDate":"2024-02-17"},{"lineNumber":53,"author":{"gitId":"yashpola"},"content":"        try {","lastModifiedDate":"2024-02-17"},{"lineNumber":54,"author":{"gitId":"yashpola"},"content":"            Parser.parseRequest(\"blah\");","lastModifiedDate":"2024-02-17"},{"lineNumber":55,"author":{"gitId":"yashpola"},"content":"            fail();","lastModifiedDate":"2024-02-17"},{"lineNumber":56,"author":{"gitId":"yashpola"},"content":"        } catch (NicoleException e) {","lastModifiedDate":"2024-02-17"},{"lineNumber":57,"author":{"gitId":"yashpola"},"content":"            assertEquals(e.toString(), \"ERROR. What does this mean? \"","lastModifiedDate":"2024-02-17"},{"lineNumber":58,"author":{"gitId":"yashpola"},"content":"                    + \"Send \\\"help\\\" if you want to know what commands I can help you with\");","lastModifiedDate":"2024-02-17"},{"lineNumber":59,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":60,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":61,"author":{"gitId":"yashpola"},"content":"}","lastModifiedDate":"2024-02-17"}],"authorContributionMap":{"yashpola":61}},{"path":"src/test/java/nicole/userrequests/RequestTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yashpola"},"content":"package nicole.userrequests;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"yashpola"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"yashpola"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"yashpola"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"yashpola"},"content":"import nicole.nicoleexceptions.NicoleException;","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"yashpola"},"content":"public class RequestTest {","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"yashpola"},"content":"    @Test","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"yashpola"},"content":"    public void request_helpRequestGiven_noExceptionThrown() {","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"yashpola"},"content":"        try {","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"yashpola"},"content":"            Request testRequest \u003d new Request(\"help\");","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"yashpola"},"content":"            assertEquals(","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"yashpola"},"content":"                    \"I\u0027m your task/deadline/event manager! I\u0027m down with these requests,\\n\"","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"yashpola"},"content":"                            + \"1. todo [task]\\n\"","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"yashpola"},"content":"                            + \"2. deadline [task] by YYYY-MM-DD\\n\"","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"yashpola"},"content":"                            + \"3. event [description] from YYYY-MM-DD at HH-MM-SS to YYY-MM-DD at HH-MM-SS\\n\"","lastModifiedDate":"2024-02-18"},{"lineNumber":19,"author":{"gitId":"yashpola"},"content":"                            + \"4. list\\n\"","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"yashpola"},"content":"                            + \"5. mark [tasknumber]\\n\"","lastModifiedDate":"2024-02-18"},{"lineNumber":21,"author":{"gitId":"yashpola"},"content":"                            + \"6. unmark [tasknumber]\\n\"","lastModifiedDate":"2024-02-18"},{"lineNumber":22,"author":{"gitId":"yashpola"},"content":"                            + \"7. delete [tasknumber]\\n\"","lastModifiedDate":"2024-02-18"},{"lineNumber":23,"author":{"gitId":"yashpola"},"content":"                            + \"8. sort by date\\n\"","lastModifiedDate":"2024-02-18"},{"lineNumber":24,"author":{"gitId":"yashpola"},"content":"                            + \"9. find [keyword]\\n\"","lastModifiedDate":"2024-02-18"},{"lineNumber":25,"author":{"gitId":"yashpola"},"content":"                            + \"10. update [tasknumber] [new task name]\\n\"","lastModifiedDate":"2024-02-18"},{"lineNumber":26,"author":{"gitId":"yashpola"},"content":"                            + \"11. bye\\n\"","lastModifiedDate":"2024-02-18"},{"lineNumber":27,"author":{"gitId":"yashpola"},"content":"                            + \"12. help\",","lastModifiedDate":"2024-02-18"},{"lineNumber":28,"author":{"gitId":"yashpola"},"content":"                    testRequest.handleRequest(\"help\"));","lastModifiedDate":"2024-02-17"},{"lineNumber":29,"author":{"gitId":"yashpola"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-17"},{"lineNumber":30,"author":{"gitId":"yashpola"},"content":"            fail();","lastModifiedDate":"2024-02-17"},{"lineNumber":31,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":32,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":33,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":34,"author":{"gitId":"yashpola"},"content":"    @Test","lastModifiedDate":"2024-02-17"},{"lineNumber":35,"author":{"gitId":"yashpola"},"content":"    public void request_incompleteUnMarkCommandGiven_nicoleExceptionThrown() {","lastModifiedDate":"2024-02-17"},{"lineNumber":36,"author":{"gitId":"yashpola"},"content":"        try {","lastModifiedDate":"2024-02-17"},{"lineNumber":37,"author":{"gitId":"yashpola"},"content":"            Request testRequest \u003d new Request(\"unmark\");","lastModifiedDate":"2024-02-17"},{"lineNumber":38,"author":{"gitId":"yashpola"},"content":"            testRequest.handleRequest(\"unmark\");","lastModifiedDate":"2024-02-17"},{"lineNumber":39,"author":{"gitId":"yashpola"},"content":"            fail();","lastModifiedDate":"2024-02-17"},{"lineNumber":40,"author":{"gitId":"yashpola"},"content":"        } catch (NicoleException e) {","lastModifiedDate":"2024-02-17"},{"lineNumber":41,"author":{"gitId":"yashpola"},"content":"            assertEquals(e.toString(), \"ERROR. unmark [task number] pls...\");","lastModifiedDate":"2024-02-17"},{"lineNumber":42,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":43,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":44,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":45,"author":{"gitId":"yashpola"},"content":"    @Test","lastModifiedDate":"2024-02-17"},{"lineNumber":46,"author":{"gitId":"yashpola"},"content":"    public void request_incompleteMarkCommandGiven_nicoleExceptionThrown() {","lastModifiedDate":"2024-02-17"},{"lineNumber":47,"author":{"gitId":"yashpola"},"content":"        try {","lastModifiedDate":"2024-02-17"},{"lineNumber":48,"author":{"gitId":"yashpola"},"content":"            Request testRequest \u003d new Request(\"mark\");","lastModifiedDate":"2024-02-17"},{"lineNumber":49,"author":{"gitId":"yashpola"},"content":"            testRequest.handleRequest(\"mark\");","lastModifiedDate":"2024-02-17"},{"lineNumber":50,"author":{"gitId":"yashpola"},"content":"            fail();","lastModifiedDate":"2024-02-17"},{"lineNumber":51,"author":{"gitId":"yashpola"},"content":"        } catch (NicoleException e) {","lastModifiedDate":"2024-02-17"},{"lineNumber":52,"author":{"gitId":"yashpola"},"content":"            assertEquals(e.toString(), \"ERROR. mark [task number] pls...\");","lastModifiedDate":"2024-02-17"},{"lineNumber":53,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":54,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":55,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":56,"author":{"gitId":"yashpola"},"content":"    @Test","lastModifiedDate":"2024-02-17"},{"lineNumber":57,"author":{"gitId":"yashpola"},"content":"    public void request_incompleteDeleteCommandGiven_nicoleExceptionThrown() {","lastModifiedDate":"2024-02-17"},{"lineNumber":58,"author":{"gitId":"yashpola"},"content":"        try {","lastModifiedDate":"2024-02-17"},{"lineNumber":59,"author":{"gitId":"yashpola"},"content":"            Request testRequest \u003d new Request(\"delete\");","lastModifiedDate":"2024-02-17"},{"lineNumber":60,"author":{"gitId":"yashpola"},"content":"            testRequest.handleRequest(\"delete\");","lastModifiedDate":"2024-02-17"},{"lineNumber":61,"author":{"gitId":"yashpola"},"content":"            fail();","lastModifiedDate":"2024-02-17"},{"lineNumber":62,"author":{"gitId":"yashpola"},"content":"        } catch (NicoleException e) {","lastModifiedDate":"2024-02-17"},{"lineNumber":63,"author":{"gitId":"yashpola"},"content":"            assertEquals(e.toString(), \"ERROR. delete [task number] pls...\");","lastModifiedDate":"2024-02-17"},{"lineNumber":64,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":65,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":66,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":67,"author":{"gitId":"yashpola"},"content":"    @Test","lastModifiedDate":"2024-02-17"},{"lineNumber":68,"author":{"gitId":"yashpola"},"content":"    public void request_incompleteFindCommandGiven_nicoleExceptionThrown() {","lastModifiedDate":"2024-02-17"},{"lineNumber":69,"author":{"gitId":"yashpola"},"content":"        try {","lastModifiedDate":"2024-02-17"},{"lineNumber":70,"author":{"gitId":"yashpola"},"content":"            Request testRequest \u003d new Request(\"find\");","lastModifiedDate":"2024-02-17"},{"lineNumber":71,"author":{"gitId":"yashpola"},"content":"            testRequest.handleRequest(\"find\");","lastModifiedDate":"2024-02-17"},{"lineNumber":72,"author":{"gitId":"yashpola"},"content":"            fail();","lastModifiedDate":"2024-02-17"},{"lineNumber":73,"author":{"gitId":"yashpola"},"content":"        } catch (NicoleException e) {","lastModifiedDate":"2024-02-17"},{"lineNumber":74,"author":{"gitId":"yashpola"},"content":"            assertEquals(e.toString(), \"ERROR. find [keyword] pls...\");","lastModifiedDate":"2024-02-17"},{"lineNumber":75,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":76,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":77,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":78,"author":{"gitId":"yashpola"},"content":"    @Test","lastModifiedDate":"2024-02-17"},{"lineNumber":79,"author":{"gitId":"yashpola"},"content":"    public void request_incompleteUpdateCommandGiven_nicoleExceptionThrown() {","lastModifiedDate":"2024-02-17"},{"lineNumber":80,"author":{"gitId":"yashpola"},"content":"        try {","lastModifiedDate":"2024-02-17"},{"lineNumber":81,"author":{"gitId":"yashpola"},"content":"            Request testRequest \u003d new Request(\"update\");","lastModifiedDate":"2024-02-17"},{"lineNumber":82,"author":{"gitId":"yashpola"},"content":"            testRequest.handleRequest(\"update\");","lastModifiedDate":"2024-02-17"},{"lineNumber":83,"author":{"gitId":"yashpola"},"content":"            fail();","lastModifiedDate":"2024-02-17"},{"lineNumber":84,"author":{"gitId":"yashpola"},"content":"        } catch (NicoleException e) {","lastModifiedDate":"2024-02-17"},{"lineNumber":85,"author":{"gitId":"yashpola"},"content":"            assertEquals(e.toString(), \"ERROR. update [task number] [name] pls...\");","lastModifiedDate":"2024-02-17"},{"lineNumber":86,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":87,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":88,"author":{"gitId":"yashpola"},"content":"}","lastModifiedDate":"2024-02-17"}],"authorContributionMap":{"yashpola":88}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yashpola"},"content":"list","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"yashpola"},"content":"help","lastModifiedDate":"2024-01-21"},{"lineNumber":3,"author":{"gitId":"yashpola"},"content":"todo","lastModifiedDate":"2024-01-21"},{"lineNumber":4,"author":{"gitId":"yashpola"},"content":"deadline","lastModifiedDate":"2024-01-21"},{"lineNumber":5,"author":{"gitId":"yashpola"},"content":"event","lastModifiedDate":"2024-01-21"},{"lineNumber":6,"author":{"gitId":"yashpola"},"content":"deadline \\by Sunday","lastModifiedDate":"2024-01-21"},{"lineNumber":7,"author":{"gitId":"yashpola"},"content":"deadline xyz","lastModifiedDate":"2024-01-21"},{"lineNumber":8,"author":{"gitId":"yashpola"},"content":"event \\from xyz \\to abc","lastModifiedDate":"2024-01-21"},{"lineNumber":9,"author":{"gitId":"yashpola"},"content":"event xyz","lastModifiedDate":"2024-01-21"},{"lineNumber":10,"author":{"gitId":"yashpola"},"content":"blah","lastModifiedDate":"2024-01-21"},{"lineNumber":11,"author":{"gitId":"yashpola"},"content":"todo borrow book","lastModifiedDate":"2024-01-20"},{"lineNumber":12,"author":{"gitId":"yashpola"},"content":"event read book from 2024-01-30 at 16:00:00 to 2024-01-30 at 18:00:00","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"yashpola"},"content":"deadline return book by 2024-01-29","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"yashpola"},"content":"list","lastModifiedDate":"2024-01-20"},{"lineNumber":15,"author":{"gitId":"yashpola"},"content":"delete 500","lastModifiedDate":"2024-01-21"},{"lineNumber":16,"author":{"gitId":"yashpola"},"content":"delete -2","lastModifiedDate":"2024-01-21"},{"lineNumber":17,"author":{"gitId":"yashpola"},"content":"mark 500","lastModifiedDate":"2024-01-21"},{"lineNumber":18,"author":{"gitId":"yashpola"},"content":"mark -2","lastModifiedDate":"2024-01-21"},{"lineNumber":19,"author":{"gitId":"yashpola"},"content":"mark 1","lastModifiedDate":"2024-01-21"},{"lineNumber":20,"author":{"gitId":"yashpola"},"content":"mark 1","lastModifiedDate":"2024-01-20"},{"lineNumber":21,"author":{"gitId":"yashpola"},"content":"unmark 500","lastModifiedDate":"2024-01-21"},{"lineNumber":22,"author":{"gitId":"yashpola"},"content":"unmark -2","lastModifiedDate":"2024-01-21"},{"lineNumber":23,"author":{"gitId":"yashpola"},"content":"mark 2","lastModifiedDate":"2024-01-20"},{"lineNumber":24,"author":{"gitId":"yashpola"},"content":"list","lastModifiedDate":"2024-01-20"},{"lineNumber":25,"author":{"gitId":"yashpola"},"content":"mark 1","lastModifiedDate":"2024-01-20"},{"lineNumber":26,"author":{"gitId":"yashpola"},"content":"unmark 1","lastModifiedDate":"2024-01-20"},{"lineNumber":27,"author":{"gitId":"yashpola"},"content":"unmark 1","lastModifiedDate":"2024-01-21"},{"lineNumber":28,"author":{"gitId":"yashpola"},"content":"delete 1","lastModifiedDate":"2024-01-21"},{"lineNumber":29,"author":{"gitId":"yashpola"},"content":"list","lastModifiedDate":"2024-01-20"},{"lineNumber":30,"author":{"gitId":"yashpola"},"content":"priority","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"yashpola"},"content":"list","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"yashpola":31}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"yashpola"},"content":"java -classpath ../bin Nicole \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"yashpola":1,"-":37}}]
