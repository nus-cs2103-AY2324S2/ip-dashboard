[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Vision-2000"},"content":"# duke project template","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Vision-2000"},"content":"3. After that, locate the `src/main/java/duke.java` file, right-click it, and choose `Run duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":22,"Vision-2000":2}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"Vision-2000"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"Vision-2000"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"Vision-2000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"Vision-2000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"Vision-2000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"Vision-2000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"Vision-2000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"Vision-2000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"Vision-2000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"Vision-2000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"Vision-2000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":27,"author":{"gitId":"Vision-2000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"Vision-2000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"Vision-2000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"Vision-2000"},"content":"checkstyle {","lastModifiedDate":"2024-02-17"},{"lineNumber":47,"author":{"gitId":"Vision-2000"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-17"},{"lineNumber":48,"author":{"gitId":"Vision-2000"},"content":"}","lastModifiedDate":"2024-02-17"},{"lineNumber":49,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"Vision-2000"},"content":"    mainClass.set(\"duke.Stille\")","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"Vision-2000"},"content":"    archiveBaseName \u003d \"Stille\"","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":40,"Vision-2000":22}},{"path":"src/main/java/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vision-2000"},"content":"package commands;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"Vision-2000"},"content":"import storage.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"Vision-2000"},"content":"import tasks.Task;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"Vision-2000"},"content":"import ui.UserInterface;","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"Vision-2000"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"Vision-2000"},"content":" * Represents a Command for adding a new task to the TaskList.","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"Vision-2000"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"Vision-2000"},"content":"public class AddCommand implements Command {","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"Vision-2000"},"content":"    private Task task;","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"Vision-2000"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"Vision-2000"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"Vision-2000"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"Vision-2000"},"content":"    public boolean execute(TaskList list, UserInterface ui) {","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"Vision-2000"},"content":"        list.addTask(this.task);","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"Vision-2000"},"content":"        ui.showAdd(this.task);","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"Vision-2000"},"content":"        ui.showListSize(list.getSize());","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"Vision-2000"},"content":"        return false;","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"Vision-2000"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"Vision-2000":23}},{"path":"src/main/java/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vision-2000"},"content":"package commands;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"Vision-2000"},"content":"import exceptions.DukeException;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"Vision-2000"},"content":"import storage.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"Vision-2000"},"content":"import ui.UserInterface;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"Vision-2000"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"Vision-2000"},"content":" * Represents a command input by the user that needs to be executed.","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"Vision-2000"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"Vision-2000"},"content":"public interface Command {","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"Vision-2000"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"Vision-2000"},"content":"     * Performs actions based on the type of command.","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"Vision-2000"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"Vision-2000"},"content":"     * @param list TaskList of the application","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"Vision-2000"},"content":"     * @param ui UserInterface for outputting messages","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"Vision-2000"},"content":"     * @return true if application should close after execution of command, false otherwise","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"Vision-2000"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"Vision-2000"},"content":"    boolean execute(TaskList list, UserInterface ui) throws DukeException;","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"Vision-2000"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"Vision-2000":20}},{"path":"src/main/java/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vision-2000"},"content":"package commands;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"Vision-2000"},"content":"import exceptions.ArgumentException;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"Vision-2000"},"content":"import storage.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"Vision-2000"},"content":"import tasks.Task;","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"Vision-2000"},"content":"import ui.UserInterface;","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"Vision-2000"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"Vision-2000"},"content":" * Represents a Command for removing a task at a specified index from the TaskList.","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"Vision-2000"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"Vision-2000"},"content":"public class DeleteCommand implements Command {","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"Vision-2000"},"content":"    private int index;","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"Vision-2000"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"Vision-2000"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"Vision-2000"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"Vision-2000"},"content":"    public boolean execute(TaskList list, UserInterface ui) throws ArgumentException {","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"Vision-2000"},"content":"        Task t \u003d list.getTask(this.index);","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"Vision-2000"},"content":"        list.deleteTask(this.index);","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"Vision-2000"},"content":"        ui.showDelete(t);","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"Vision-2000"},"content":"        ui.showListSize(list.getSize());","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"Vision-2000"},"content":"        return false;","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"Vision-2000"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"Vision-2000":25}},{"path":"src/main/java/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vision-2000"},"content":"package commands;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"Vision-2000"},"content":"import storage.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"Vision-2000"},"content":"import ui.UserInterface;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"Vision-2000"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"Vision-2000"},"content":" * Represents a Command to signal the end of the program.","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"Vision-2000"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"Vision-2000"},"content":"public class ExitCommand implements Command {","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"Vision-2000"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"Vision-2000"},"content":"    public boolean execute(TaskList list, UserInterface ui) {","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"Vision-2000"},"content":"        return true;","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"Vision-2000"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"Vision-2000":15}},{"path":"src/main/java/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vision-2000"},"content":"package commands;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"Vision-2000"},"content":"import storage.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"Vision-2000"},"content":"import ui.UserInterface;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"Vision-2000"},"content":"/**","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"Vision-2000"},"content":" *  Represents a Command to display all Tasks in the TaskList containing a given String.","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"Vision-2000"},"content":" */","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"Vision-2000"},"content":"public class FindCommand implements Command {","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"Vision-2000"},"content":"    private String match;","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"Vision-2000"},"content":"    public FindCommand(String match) {","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"Vision-2000"},"content":"        this.match \u003d match;","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"Vision-2000"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"Vision-2000"},"content":"    public boolean execute(TaskList list, UserInterface ui) {","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"Vision-2000"},"content":"        ui.showFound(list.findTasks(match));","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"Vision-2000"},"content":"        return false;","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"Vision-2000"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"Vision-2000":21}},{"path":"src/main/java/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vision-2000"},"content":"package commands;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"Vision-2000"},"content":"import storage.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"Vision-2000"},"content":"import ui.UserInterface;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"Vision-2000"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"Vision-2000"},"content":" * Represents a Command to display the current state of the TaskList.","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"Vision-2000"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"Vision-2000"},"content":"public class ListCommand implements Command {","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"Vision-2000"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"Vision-2000"},"content":"    public boolean execute(TaskList list, UserInterface ui) {","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"Vision-2000"},"content":"        ui.showList(list.toString());","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"Vision-2000"},"content":"        return false;","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"Vision-2000"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"Vision-2000":15}},{"path":"src/main/java/commands/MarkDoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vision-2000"},"content":"package commands;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"Vision-2000"},"content":"import exceptions.ArgumentException;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"Vision-2000"},"content":"import storage.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"Vision-2000"},"content":"import ui.UserInterface;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"Vision-2000"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"Vision-2000"},"content":" * represents a Command for marking a task as done at a specified index in the TaskList.","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"Vision-2000"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"Vision-2000"},"content":"public class MarkDoneCommand implements Command {","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"Vision-2000"},"content":"    private int index;","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"Vision-2000"},"content":"    public MarkDoneCommand(int index) {","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"Vision-2000"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"Vision-2000"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"Vision-2000"},"content":"    public boolean execute(TaskList list, UserInterface ui) throws ArgumentException {","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"Vision-2000"},"content":"        list.markTaskDone(this.index);","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"Vision-2000"},"content":"        ui.showMarkDone(list.getTask(this.index));","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"Vision-2000"},"content":"        return false;","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"Vision-2000"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"Vision-2000":21}},{"path":"src/main/java/commands/MarkNotDoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vision-2000"},"content":"package commands;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"Vision-2000"},"content":"import exceptions.ArgumentException;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"Vision-2000"},"content":"import storage.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"Vision-2000"},"content":"import ui.UserInterface;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"Vision-2000"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"Vision-2000"},"content":" * Represents a Command for marking a task as not done at a specified index in the TaskList.","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"Vision-2000"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"Vision-2000"},"content":"public class MarkNotDoneCommand implements Command {","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"Vision-2000"},"content":"    private int index;","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"Vision-2000"},"content":"    public MarkNotDoneCommand(int index) {","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"Vision-2000"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"Vision-2000"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"Vision-2000"},"content":"    public boolean execute(TaskList list, UserInterface ui) throws ArgumentException {","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"Vision-2000"},"content":"        list.markTaskNotDone(this.index);","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"Vision-2000"},"content":"        ui.showMarkNotDone(list.getTask(this.index));","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"Vision-2000"},"content":"        return false;","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"Vision-2000"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"Vision-2000":21}},{"path":"src/main/java/commands/UpdateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vision-2000"},"content":"package commands;","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"Vision-2000"},"content":"import exceptions.ArgumentException;","lastModifiedDate":"2024-02-20"},{"lineNumber":4,"author":{"gitId":"Vision-2000"},"content":"import storage.TaskList;","lastModifiedDate":"2024-02-20"},{"lineNumber":5,"author":{"gitId":"Vision-2000"},"content":"import ui.UserInterface;","lastModifiedDate":"2024-02-20"},{"lineNumber":6,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"Vision-2000"},"content":"/**","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"Vision-2000"},"content":" * Represents a Command for updating a task at a specified index in the TaskList.","lastModifiedDate":"2024-02-20"},{"lineNumber":9,"author":{"gitId":"Vision-2000"},"content":" */","lastModifiedDate":"2024-02-20"},{"lineNumber":10,"author":{"gitId":"Vision-2000"},"content":"public class UpdateCommand implements Command {","lastModifiedDate":"2024-02-20"},{"lineNumber":11,"author":{"gitId":"Vision-2000"},"content":"    private int index;","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"Vision-2000"},"content":"    private String details;","lastModifiedDate":"2024-02-20"},{"lineNumber":13,"author":{"gitId":"Vision-2000"},"content":"    public UpdateCommand(int index, String details) {","lastModifiedDate":"2024-02-20"},{"lineNumber":14,"author":{"gitId":"Vision-2000"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-02-20"},{"lineNumber":15,"author":{"gitId":"Vision-2000"},"content":"        this.details \u003d details;","lastModifiedDate":"2024-02-20"},{"lineNumber":16,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":17,"author":{"gitId":"Vision-2000"},"content":"    @Override","lastModifiedDate":"2024-02-20"},{"lineNumber":18,"author":{"gitId":"Vision-2000"},"content":"    public boolean execute(TaskList list, UserInterface ui) throws ArgumentException {","lastModifiedDate":"2024-02-20"},{"lineNumber":19,"author":{"gitId":"Vision-2000"},"content":"        list.updateTask(this.index, this.details);","lastModifiedDate":"2024-02-20"},{"lineNumber":20,"author":{"gitId":"Vision-2000"},"content":"        ui.showUpdate(list.getTask(this.index));","lastModifiedDate":"2024-02-20"},{"lineNumber":21,"author":{"gitId":"Vision-2000"},"content":"        return false;","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":23,"author":{"gitId":"Vision-2000"},"content":"}","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"Vision-2000":23}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vision-2000"},"content":"package duke;","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"Vision-2000"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"Vision-2000"},"content":"/**","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"Vision-2000"},"content":" * Serves as the entry point for the program.","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"Vision-2000"},"content":" */","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"Vision-2000"},"content":"public class Launcher {","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"Vision-2000"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"Vision-2000"},"content":"        Application.launch(Stille.class, args);","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"Vision-2000"},"content":"}","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"Vision-2000":12}},{"path":"src/main/java/duke/Stille.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vision-2000"},"content":"package duke;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"Vision-2000"},"content":"import exceptions.ArgumentException;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"Vision-2000"},"content":"import exceptions.StorageException;","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"Vision-2000"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"Vision-2000"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"Vision-2000"},"content":"import storage.Storage;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"Vision-2000"},"content":"import storage.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"Vision-2000"},"content":"import ui.UserInterface;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"Vision-2000"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"Vision-2000"},"content":" * Represents the whole application, contains methods for initialisation and termination of the program.","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"Vision-2000"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"Vision-2000"},"content":"public class Stille extends Application {","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"Vision-2000"},"content":"    private final UserInterface ui;","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"Vision-2000"},"content":"    private final Storage storage;","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"Vision-2000"},"content":"    private final TaskList list;","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"Vision-2000"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"Vision-2000"},"content":"     * Instantiates application.","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"Vision-2000"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"Vision-2000"},"content":"    public Stille() {","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"Vision-2000"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"Vision-2000"},"content":"        this.list \u003d new TaskList();","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"Vision-2000"},"content":"        this.ui \u003d new UserInterface(this.list, this.storage);","lastModifiedDate":"2024-02-17"},{"lineNumber":26,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":27,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"Vision-2000"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":29,"author":{"gitId":"Vision-2000"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-02-17"},{"lineNumber":30,"author":{"gitId":"Vision-2000"},"content":"     * Additionally handles initialisation of TaskList from local storage.","lastModifiedDate":"2024-02-17"},{"lineNumber":31,"author":{"gitId":"Vision-2000"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":32,"author":{"gitId":"Vision-2000"},"content":"     * @param primaryStage the primary stage for this application, onto which","lastModifiedDate":"2024-02-17"},{"lineNumber":33,"author":{"gitId":"Vision-2000"},"content":"     *                     the application scene can be set. Applications may create other stages, if needed,","lastModifiedDate":"2024-02-17"},{"lineNumber":34,"author":{"gitId":"Vision-2000"},"content":"     *                     but they will not be primary stages.","lastModifiedDate":"2024-02-17"},{"lineNumber":35,"author":{"gitId":"Vision-2000"},"content":"     * @throws Exception","lastModifiedDate":"2024-02-17"},{"lineNumber":36,"author":{"gitId":"Vision-2000"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":37,"author":{"gitId":"Vision-2000"},"content":"    @Override","lastModifiedDate":"2024-02-11"},{"lineNumber":38,"author":{"gitId":"Vision-2000"},"content":"    public void start(Stage primaryStage) throws Exception {","lastModifiedDate":"2024-02-11"},{"lineNumber":39,"author":{"gitId":"Vision-2000"},"content":"        primaryStage.setScene(this.ui.getScene());","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"Vision-2000"},"content":"        primaryStage.setTitle(\"Stille\");","lastModifiedDate":"2024-02-11"},{"lineNumber":41,"author":{"gitId":"Vision-2000"},"content":"        primaryStage.setResizable(false);","lastModifiedDate":"2024-02-11"},{"lineNumber":42,"author":{"gitId":"Vision-2000"},"content":"        primaryStage.setMinHeight(600.0);","lastModifiedDate":"2024-02-11"},{"lineNumber":43,"author":{"gitId":"Vision-2000"},"content":"        primaryStage.setMinWidth(400.0);","lastModifiedDate":"2024-02-11"},{"lineNumber":44,"author":{"gitId":"Vision-2000"},"content":"        primaryStage.show();","lastModifiedDate":"2024-02-11"},{"lineNumber":45,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":46,"author":{"gitId":"Vision-2000"},"content":"        try {","lastModifiedDate":"2024-02-06"},{"lineNumber":47,"author":{"gitId":"Vision-2000"},"content":"            list.loadFromSaveFormat(storage.load());","lastModifiedDate":"2024-02-06"},{"lineNumber":48,"author":{"gitId":"Vision-2000"},"content":"        } catch (StorageException e) {","lastModifiedDate":"2024-02-17"},{"lineNumber":49,"author":{"gitId":"Vision-2000"},"content":"            ui.showError(e);","lastModifiedDate":"2024-02-17"},{"lineNumber":50,"author":{"gitId":"Vision-2000"},"content":"        } catch (ArgumentException e) {","lastModifiedDate":"2024-02-17"},{"lineNumber":51,"author":{"gitId":"Vision-2000"},"content":"            ui.showError(e);","lastModifiedDate":"2024-02-06"},{"lineNumber":52,"author":{"gitId":"Vision-2000"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":54,"author":{"gitId":"Vision-2000"},"content":"        ui.showOpeningMessage();","lastModifiedDate":"2024-02-06"},{"lineNumber":55,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"Vision-2000"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":58,"author":{"gitId":"Vision-2000"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-02-17"},{"lineNumber":59,"author":{"gitId":"Vision-2000"},"content":"     * Additionally handles saving TaskList to local storage.","lastModifiedDate":"2024-02-17"},{"lineNumber":60,"author":{"gitId":"Vision-2000"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":61,"author":{"gitId":"Vision-2000"},"content":"    @Override","lastModifiedDate":"2024-02-11"},{"lineNumber":62,"author":{"gitId":"Vision-2000"},"content":"    public void stop() {","lastModifiedDate":"2024-02-11"},{"lineNumber":63,"author":{"gitId":"Vision-2000"},"content":"        try {","lastModifiedDate":"2024-02-06"},{"lineNumber":64,"author":{"gitId":"Vision-2000"},"content":"            this.storage.save(this.list.toSaveFormat());","lastModifiedDate":"2024-02-06"},{"lineNumber":65,"author":{"gitId":"Vision-2000"},"content":"        } catch (StorageException e) {","lastModifiedDate":"2024-02-17"},{"lineNumber":66,"author":{"gitId":"Vision-2000"},"content":"            ui.showError(e);","lastModifiedDate":"2024-02-06"},{"lineNumber":67,"author":{"gitId":"Vision-2000"},"content":"        } finally {","lastModifiedDate":"2024-02-06"},{"lineNumber":68,"author":{"gitId":"Vision-2000"},"content":"            ui.showClosingMessage();","lastModifiedDate":"2024-02-06"},{"lineNumber":69,"author":{"gitId":"Vision-2000"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":70,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":71,"author":{"gitId":"Vision-2000"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"Vision-2000":71}},{"path":"src/main/java/exceptions/ArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vision-2000"},"content":"package exceptions;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"Vision-2000"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"Vision-2000"},"content":" * Signals an error caused by invalid arguments input by the user.","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"Vision-2000"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"Vision-2000"},"content":"public class ArgumentException extends DukeException {","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"Vision-2000"},"content":"    public ArgumentException() {","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"Vision-2000"},"content":"        super();","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"Vision-2000"},"content":"    public ArgumentException(String message) {","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"Vision-2000"},"content":"        super(message);","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"Vision-2000"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"Vision-2000":13}},{"path":"src/main/java/exceptions/CommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vision-2000"},"content":"package exceptions;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"Vision-2000"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"Vision-2000"},"content":" * Signals an error caused by unrecognised command words input by the user.","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"Vision-2000"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"Vision-2000"},"content":"public class CommandException extends DukeException {","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"Vision-2000"},"content":"    public CommandException() {","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"Vision-2000"},"content":"        super();","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"Vision-2000"},"content":"    public CommandException(String message) {","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"Vision-2000"},"content":"        super(message);","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"Vision-2000"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"Vision-2000":13}},{"path":"src/main/java/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vision-2000"},"content":"package exceptions;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"Vision-2000"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"Vision-2000"},"content":" * Represents Exceptions local to this application.","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"Vision-2000"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"Vision-2000"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"Vision-2000"},"content":"    public DukeException() {","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"Vision-2000"},"content":"        super();","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"Vision-2000"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"Vision-2000"},"content":"        super(message);","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"Vision-2000"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"Vision-2000":14}},{"path":"src/main/java/exceptions/StorageException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vision-2000"},"content":"package exceptions;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"Vision-2000"},"content":"/**","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"Vision-2000"},"content":" * Signals an error caused by IOException thrown during Storage operations.","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"Vision-2000"},"content":" */","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"Vision-2000"},"content":"public class StorageException extends DukeException {","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"Vision-2000"},"content":"    public StorageException() {","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"Vision-2000"},"content":"        super();","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"Vision-2000"},"content":"    public StorageException(String message) {","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"Vision-2000"},"content":"        super(message);","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"Vision-2000"},"content":"}","lastModifiedDate":"2024-02-17"}],"authorContributionMap":{"Vision-2000":14}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vision-2000"},"content":"package parser;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"Vision-2000"},"content":"import commands.AddCommand;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"Vision-2000"},"content":"import commands.Command;","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"Vision-2000"},"content":"import commands.DeleteCommand;","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"Vision-2000"},"content":"import commands.ExitCommand;","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"Vision-2000"},"content":"import commands.FindCommand;","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"Vision-2000"},"content":"import commands.ListCommand;","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"Vision-2000"},"content":"import commands.MarkDoneCommand;","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"Vision-2000"},"content":"import commands.MarkNotDoneCommand;","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"Vision-2000"},"content":"import commands.UpdateCommand;","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"Vision-2000"},"content":"import exceptions.ArgumentException;","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"Vision-2000"},"content":"import exceptions.CommandException;","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"Vision-2000"},"content":"import tasks.Task;","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"Vision-2000"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"Vision-2000"},"content":" * Contains methods to parse Strings.","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"Vision-2000"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"Vision-2000"},"content":"public class Parser {","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"Vision-2000"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"Vision-2000"},"content":"     * Returns a Command based on the user input.","lastModifiedDate":"2024-02-17"},{"lineNumber":23,"author":{"gitId":"Vision-2000"},"content":"     * Throws if the user input is of an invalid format.","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"Vision-2000"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"Vision-2000"},"content":"     * @param input String to be read.","lastModifiedDate":"2024-02-17"},{"lineNumber":26,"author":{"gitId":"Vision-2000"},"content":"     * @return Command corresponding to input.","lastModifiedDate":"2024-02-17"},{"lineNumber":27,"author":{"gitId":"Vision-2000"},"content":"     * @throws CommandException if the first word in input does not match the list of command words.","lastModifiedDate":"2024-02-17"},{"lineNumber":28,"author":{"gitId":"Vision-2000"},"content":"     * @throws ArgumentException if the arguments supplied are invalid.","lastModifiedDate":"2024-02-17"},{"lineNumber":29,"author":{"gitId":"Vision-2000"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"Vision-2000"},"content":"    public static Command parseInput(String input) throws CommandException, ArgumentException {","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"Vision-2000"},"content":"        String[] inputArgs \u003d input.trim().split(\" \", 2);","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"Vision-2000"},"content":"        switch (inputArgs[0]) {","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"Vision-2000"},"content":"        case \"todo\":","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"Vision-2000"},"content":"        case \"deadline\":","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"Vision-2000"},"content":"        case \"event\":","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"Vision-2000"},"content":"            throwIfInsufficientArgs(inputArgs.length, 2, \"Please put a description for the task\");","lastModifiedDate":"2024-02-17"},{"lineNumber":37,"author":{"gitId":"Vision-2000"},"content":"            return new AddCommand(Task.makeTask(inputArgs[0].trim(), inputArgs[1].trim()));","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"Vision-2000"},"content":"        case \"delete\":","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"Vision-2000"},"content":"            throwIfInsufficientArgs(inputArgs.length, 2, \"Please provide an index to delete\");","lastModifiedDate":"2024-02-17"},{"lineNumber":40,"author":{"gitId":"Vision-2000"},"content":"            throwIfNotInteger(inputArgs[1]);","lastModifiedDate":"2024-02-17"},{"lineNumber":41,"author":{"gitId":"Vision-2000"},"content":"            return new DeleteCommand(Integer.parseInt(inputArgs[1].trim()));","lastModifiedDate":"2024-02-06"},{"lineNumber":42,"author":{"gitId":"Vision-2000"},"content":"        case \"bye\":","lastModifiedDate":"2024-02-06"},{"lineNumber":43,"author":{"gitId":"Vision-2000"},"content":"            return new ExitCommand();","lastModifiedDate":"2024-02-06"},{"lineNumber":44,"author":{"gitId":"Vision-2000"},"content":"        case \"list\":","lastModifiedDate":"2024-02-06"},{"lineNumber":45,"author":{"gitId":"Vision-2000"},"content":"            return new ListCommand();","lastModifiedDate":"2024-02-06"},{"lineNumber":46,"author":{"gitId":"Vision-2000"},"content":"        case \"mark\":","lastModifiedDate":"2024-02-06"},{"lineNumber":47,"author":{"gitId":"Vision-2000"},"content":"            throwIfInsufficientArgs(inputArgs.length, 2, \"Please provide an index to mark\");","lastModifiedDate":"2024-02-17"},{"lineNumber":48,"author":{"gitId":"Vision-2000"},"content":"            throwIfNotInteger(inputArgs[1]);","lastModifiedDate":"2024-02-17"},{"lineNumber":49,"author":{"gitId":"Vision-2000"},"content":"            return new MarkDoneCommand(Integer.parseInt(inputArgs[1].trim()));","lastModifiedDate":"2024-02-06"},{"lineNumber":50,"author":{"gitId":"Vision-2000"},"content":"        case \"unmark\":","lastModifiedDate":"2024-02-06"},{"lineNumber":51,"author":{"gitId":"Vision-2000"},"content":"            throwIfInsufficientArgs(inputArgs.length, 2, \"Please provide an index to unmark\");","lastModifiedDate":"2024-02-17"},{"lineNumber":52,"author":{"gitId":"Vision-2000"},"content":"            throwIfNotInteger(inputArgs[1]);","lastModifiedDate":"2024-02-17"},{"lineNumber":53,"author":{"gitId":"Vision-2000"},"content":"            return new MarkNotDoneCommand(Integer.parseInt(inputArgs[1].trim()));","lastModifiedDate":"2024-02-06"},{"lineNumber":54,"author":{"gitId":"Vision-2000"},"content":"        case \"find\":","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"Vision-2000"},"content":"            throwIfInsufficientArgs(inputArgs.length, 2, \"Please provide a word to find\");","lastModifiedDate":"2024-02-17"},{"lineNumber":56,"author":{"gitId":"Vision-2000"},"content":"            return new FindCommand(inputArgs[1].trim());","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"Vision-2000"},"content":"        case \"update\":","lastModifiedDate":"2024-02-20"},{"lineNumber":58,"author":{"gitId":"Vision-2000"},"content":"            throwIfInsufficientArgs(inputArgs.length, 2, \"Please provide an index to update\");","lastModifiedDate":"2024-02-20"},{"lineNumber":59,"author":{"gitId":"Vision-2000"},"content":"            String[] updateArgs \u003d parseUpdateArgument(inputArgs[1].trim());","lastModifiedDate":"2024-02-20"},{"lineNumber":60,"author":{"gitId":"Vision-2000"},"content":"            return new UpdateCommand(Integer.parseInt(updateArgs[0].trim()), updateArgs[1].trim());","lastModifiedDate":"2024-02-20"},{"lineNumber":61,"author":{"gitId":"Vision-2000"},"content":"        default:","lastModifiedDate":"2024-02-06"},{"lineNumber":62,"author":{"gitId":"Vision-2000"},"content":"            throw new CommandException(\"Please input a valid command\");","lastModifiedDate":"2024-02-06"},{"lineNumber":63,"author":{"gitId":"Vision-2000"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":64,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":65,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":66,"author":{"gitId":"Vision-2000"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":67,"author":{"gitId":"Vision-2000"},"content":"     * Returns a Task read from the line.","lastModifiedDate":"2024-02-17"},{"lineNumber":68,"author":{"gitId":"Vision-2000"},"content":"     * To be used by the Storage class to read lines from saved file.","lastModifiedDate":"2024-02-17"},{"lineNumber":69,"author":{"gitId":"Vision-2000"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":70,"author":{"gitId":"Vision-2000"},"content":"     * @param line String from a line in saved data format.","lastModifiedDate":"2024-02-17"},{"lineNumber":71,"author":{"gitId":"Vision-2000"},"content":"     * @return Generated Task.","lastModifiedDate":"2024-02-17"},{"lineNumber":72,"author":{"gitId":"Vision-2000"},"content":"     * @throws ArgumentException if line cannot be converted to a task.","lastModifiedDate":"2024-02-17"},{"lineNumber":73,"author":{"gitId":"Vision-2000"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":74,"author":{"gitId":"Vision-2000"},"content":"    public static Task parseLine(String line) throws ArgumentException {","lastModifiedDate":"2024-02-06"},{"lineNumber":75,"author":{"gitId":"Vision-2000"},"content":"        String[] taskData \u003d line.split(\" \", 3);","lastModifiedDate":"2024-02-06"},{"lineNumber":76,"author":{"gitId":"Vision-2000"},"content":"        return Task.makeTask(taskData);","lastModifiedDate":"2024-02-06"},{"lineNumber":77,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":78,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":79,"author":{"gitId":"Vision-2000"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":80,"author":{"gitId":"Vision-2000"},"content":"     * Parses a String into an array of String of size 2 with arguments for constructor of Deadline","lastModifiedDate":"2024-02-20"},{"lineNumber":81,"author":{"gitId":"Vision-2000"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":82,"author":{"gitId":"Vision-2000"},"content":"     * @param arg String containing the arguments for Deadline.","lastModifiedDate":"2024-02-17"},{"lineNumber":83,"author":{"gitId":"Vision-2000"},"content":"     * @return array of String of size 2.","lastModifiedDate":"2024-02-17"},{"lineNumber":84,"author":{"gitId":"Vision-2000"},"content":"     * @throws ArgumentException if less than 2 arguments are provided.","lastModifiedDate":"2024-02-17"},{"lineNumber":85,"author":{"gitId":"Vision-2000"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":86,"author":{"gitId":"Vision-2000"},"content":"    public static String[] parseDeadlineArgument(String arg) throws ArgumentException {","lastModifiedDate":"2024-02-06"},{"lineNumber":87,"author":{"gitId":"Vision-2000"},"content":"        String[] result \u003d arg.split(\"\\\\/by\", 2);","lastModifiedDate":"2024-02-06"},{"lineNumber":88,"author":{"gitId":"Vision-2000"},"content":"        throwIfInsufficientArgs(result.length, 2, \"Insufficient arguments provided for deadline task\");","lastModifiedDate":"2024-02-20"},{"lineNumber":89,"author":{"gitId":"Vision-2000"},"content":"        return result;","lastModifiedDate":"2024-02-06"},{"lineNumber":90,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":91,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":92,"author":{"gitId":"Vision-2000"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":93,"author":{"gitId":"Vision-2000"},"content":"     * Parses a String into an array of String of size 3 with arguments for constructor of Event.","lastModifiedDate":"2024-02-20"},{"lineNumber":94,"author":{"gitId":"Vision-2000"},"content":"     * @param arg String containing the arguments for Event.","lastModifiedDate":"2024-02-17"},{"lineNumber":95,"author":{"gitId":"Vision-2000"},"content":"     * @return array of String of size 3.","lastModifiedDate":"2024-02-17"},{"lineNumber":96,"author":{"gitId":"Vision-2000"},"content":"     * @throws ArgumentException if less than 3 arguments are provided.","lastModifiedDate":"2024-02-17"},{"lineNumber":97,"author":{"gitId":"Vision-2000"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":98,"author":{"gitId":"Vision-2000"},"content":"    public static String[] parseEventArgument(String arg) throws ArgumentException {","lastModifiedDate":"2024-02-06"},{"lineNumber":99,"author":{"gitId":"Vision-2000"},"content":"        String[] result \u003d arg.split(\"\\\\/from|\\\\/to\", 3);","lastModifiedDate":"2024-02-06"},{"lineNumber":100,"author":{"gitId":"Vision-2000"},"content":"        throwIfInsufficientArgs(result.length, 3, \"Insufficient arguments provided for event task\");","lastModifiedDate":"2024-02-20"},{"lineNumber":101,"author":{"gitId":"Vision-2000"},"content":"        return result;","lastModifiedDate":"2024-02-20"},{"lineNumber":102,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":103,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":104,"author":{"gitId":"Vision-2000"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":105,"author":{"gitId":"Vision-2000"},"content":"     * Parses a string into an array of String of size 2, with the first element being a String representation","lastModifiedDate":"2024-02-20"},{"lineNumber":106,"author":{"gitId":"Vision-2000"},"content":"     * of an integer.","lastModifiedDate":"2024-02-20"},{"lineNumber":107,"author":{"gitId":"Vision-2000"},"content":"     * @param arg String input.","lastModifiedDate":"2024-02-20"},{"lineNumber":108,"author":{"gitId":"Vision-2000"},"content":"     * @return array of String of size 2.","lastModifiedDate":"2024-02-20"},{"lineNumber":109,"author":{"gitId":"Vision-2000"},"content":"     * @throws ArgumentException if less than 2 arguments are provided or the first element of the return array","lastModifiedDate":"2024-02-20"},{"lineNumber":110,"author":{"gitId":"Vision-2000"},"content":"     *                           cannot be converted to an int.","lastModifiedDate":"2024-02-20"},{"lineNumber":111,"author":{"gitId":"Vision-2000"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":112,"author":{"gitId":"Vision-2000"},"content":"    public static String[] parseUpdateArgument(String arg) throws ArgumentException {","lastModifiedDate":"2024-02-20"},{"lineNumber":113,"author":{"gitId":"Vision-2000"},"content":"        String[] result \u003d arg.split(\" \", 2);","lastModifiedDate":"2024-02-20"},{"lineNumber":114,"author":{"gitId":"Vision-2000"},"content":"        throwIfInsufficientArgs(result.length, 2, \"Insufficient arguments provided\");","lastModifiedDate":"2024-02-20"},{"lineNumber":115,"author":{"gitId":"Vision-2000"},"content":"        throwIfNotInteger(result[0]);","lastModifiedDate":"2024-02-20"},{"lineNumber":116,"author":{"gitId":"Vision-2000"},"content":"        return result;","lastModifiedDate":"2024-02-06"},{"lineNumber":117,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":118,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":119,"author":{"gitId":"Vision-2000"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":120,"author":{"gitId":"Vision-2000"},"content":"     * Returns true if the target String contains the matcher String.","lastModifiedDate":"2024-02-17"},{"lineNumber":121,"author":{"gitId":"Vision-2000"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":122,"author":{"gitId":"Vision-2000"},"content":"     * @param target String to be checked.","lastModifiedDate":"2024-02-17"},{"lineNumber":123,"author":{"gitId":"Vision-2000"},"content":"     * @param matcher String to search for.","lastModifiedDate":"2024-02-17"},{"lineNumber":124,"author":{"gitId":"Vision-2000"},"content":"     * @return true if target has substring equal to matcher, false otherwise.","lastModifiedDate":"2024-02-17"},{"lineNumber":125,"author":{"gitId":"Vision-2000"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":126,"author":{"gitId":"Vision-2000"},"content":"    public static boolean matchStrings(String target, String matcher) {","lastModifiedDate":"2024-02-07"},{"lineNumber":127,"author":{"gitId":"Vision-2000"},"content":"        return target.toLowerCase().contains(matcher.trim().toLowerCase());","lastModifiedDate":"2024-02-17"},{"lineNumber":128,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":129,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":130,"author":{"gitId":"Vision-2000"},"content":"    private static void throwIfInsufficientArgs(int actual, int required, String message) throws ArgumentException {","lastModifiedDate":"2024-02-17"},{"lineNumber":131,"author":{"gitId":"Vision-2000"},"content":"        if (actual \u003c required) {","lastModifiedDate":"2024-02-17"},{"lineNumber":132,"author":{"gitId":"Vision-2000"},"content":"            throw new ArgumentException(message);","lastModifiedDate":"2024-02-17"},{"lineNumber":133,"author":{"gitId":"Vision-2000"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":134,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":135,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":136,"author":{"gitId":"Vision-2000"},"content":"    private static void throwIfNotInteger(String input) throws ArgumentException {","lastModifiedDate":"2024-02-17"},{"lineNumber":137,"author":{"gitId":"Vision-2000"},"content":"        try {","lastModifiedDate":"2024-02-17"},{"lineNumber":138,"author":{"gitId":"Vision-2000"},"content":"            Integer.parseInt(input.trim());","lastModifiedDate":"2024-02-17"},{"lineNumber":139,"author":{"gitId":"Vision-2000"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-17"},{"lineNumber":140,"author":{"gitId":"Vision-2000"},"content":"            throw new ArgumentException(\"Please input an integer\");","lastModifiedDate":"2024-02-17"},{"lineNumber":141,"author":{"gitId":"Vision-2000"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":142,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":143,"author":{"gitId":"Vision-2000"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"Vision-2000":143}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vision-2000"},"content":"package storage;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"Vision-2000"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"Vision-2000"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"Vision-2000"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"Vision-2000"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"Vision-2000"},"content":"import java.util.List;","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"Vision-2000"},"content":"import exceptions.StorageException;","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"Vision-2000"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"Vision-2000"},"content":" * Represents the interface for managing data transfer between the program and the local storage.","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"Vision-2000"},"content":" * Assumes that input path has preceding \"./data\" and proceeded by \".txt\".","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"Vision-2000"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"Vision-2000"},"content":"public class Storage {","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"Vision-2000"},"content":"    protected String pathString \u003d \"./data/data.txt\";","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"Vision-2000"},"content":"    protected Path path;","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"Vision-2000"},"content":"    public Storage() {","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"Vision-2000"},"content":"        this.path \u003d Paths.get(pathString);","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":23,"author":{"gitId":"Vision-2000"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"Vision-2000"},"content":"     * Instantiates Storage object with the specified path.","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"Vision-2000"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":26,"author":{"gitId":"Vision-2000"},"content":"    public Storage(String pathString) {","lastModifiedDate":"2024-02-17"},{"lineNumber":27,"author":{"gitId":"Vision-2000"},"content":"        this.pathString \u003d pathString;","lastModifiedDate":"2024-02-17"},{"lineNumber":28,"author":{"gitId":"Vision-2000"},"content":"        this.path \u003d Paths.get(pathString);","lastModifiedDate":"2024-02-17"},{"lineNumber":29,"author":{"gitId":"Vision-2000"},"content":"        assert this.path.startsWith(\"./data\");","lastModifiedDate":"2024-02-17"},{"lineNumber":30,"author":{"gitId":"Vision-2000"},"content":"        assert this.path.endsWith(\".txt\");","lastModifiedDate":"2024-02-17"},{"lineNumber":31,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":32,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":33,"author":{"gitId":"Vision-2000"},"content":"    public String getCurrentPath() {","lastModifiedDate":"2024-02-17"},{"lineNumber":34,"author":{"gitId":"Vision-2000"},"content":"        return this.pathString;","lastModifiedDate":"2024-02-17"},{"lineNumber":35,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":36,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":37,"author":{"gitId":"Vision-2000"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":38,"author":{"gitId":"Vision-2000"},"content":"     * Changes the location to load/save data.","lastModifiedDate":"2024-02-17"},{"lineNumber":39,"author":{"gitId":"Vision-2000"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":40,"author":{"gitId":"Vision-2000"},"content":"     * @param pathString String of new path.","lastModifiedDate":"2024-02-17"},{"lineNumber":41,"author":{"gitId":"Vision-2000"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":42,"author":{"gitId":"Vision-2000"},"content":"    public void switchPath(String pathString) {","lastModifiedDate":"2024-02-17"},{"lineNumber":43,"author":{"gitId":"Vision-2000"},"content":"        this.pathString \u003d pathString;","lastModifiedDate":"2024-02-17"},{"lineNumber":44,"author":{"gitId":"Vision-2000"},"content":"        this.path \u003d Paths.get(pathString);","lastModifiedDate":"2024-02-17"},{"lineNumber":45,"author":{"gitId":"Vision-2000"},"content":"        assert this.path.startsWith(\"./data\");","lastModifiedDate":"2024-02-17"},{"lineNumber":46,"author":{"gitId":"Vision-2000"},"content":"        assert this.path.endsWith(\".txt\");","lastModifiedDate":"2024-02-17"},{"lineNumber":47,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":48,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":49,"author":{"gitId":"Vision-2000"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":50,"author":{"gitId":"Vision-2000"},"content":"     * Returns true if the file located from the path exists locally.","lastModifiedDate":"2024-02-17"},{"lineNumber":51,"author":{"gitId":"Vision-2000"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":52,"author":{"gitId":"Vision-2000"},"content":"    public boolean fileExists() {","lastModifiedDate":"2024-02-17"},{"lineNumber":53,"author":{"gitId":"Vision-2000"},"content":"        return Files.exists(this.path);","lastModifiedDate":"2024-02-17"},{"lineNumber":54,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":55,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":56,"author":{"gitId":"Vision-2000"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":57,"author":{"gitId":"Vision-2000"},"content":"     * Returns true if the file located by the parent path exists and is a directory.","lastModifiedDate":"2024-02-17"},{"lineNumber":58,"author":{"gitId":"Vision-2000"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":59,"author":{"gitId":"Vision-2000"},"content":"    public boolean parentDirectoryExists() {","lastModifiedDate":"2024-02-17"},{"lineNumber":60,"author":{"gitId":"Vision-2000"},"content":"        Path parent \u003d path.getParent();","lastModifiedDate":"2024-02-17"},{"lineNumber":61,"author":{"gitId":"Vision-2000"},"content":"        return Files.isDirectory(parent);","lastModifiedDate":"2024-02-17"},{"lineNumber":62,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":63,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":64,"author":{"gitId":"Vision-2000"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":65,"author":{"gitId":"Vision-2000"},"content":"     * Creates an empty file in the location specified by path.","lastModifiedDate":"2024-02-17"},{"lineNumber":66,"author":{"gitId":"Vision-2000"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":67,"author":{"gitId":"Vision-2000"},"content":"     * @throws IOException if an I/O error occurs or the parent directory does not exist.","lastModifiedDate":"2024-02-17"},{"lineNumber":68,"author":{"gitId":"Vision-2000"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":69,"author":{"gitId":"Vision-2000"},"content":"    public void createFile() throws IOException {","lastModifiedDate":"2024-02-17"},{"lineNumber":70,"author":{"gitId":"Vision-2000"},"content":"        Files.createFile(this.path);","lastModifiedDate":"2024-02-17"},{"lineNumber":71,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":72,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":73,"author":{"gitId":"Vision-2000"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":74,"author":{"gitId":"Vision-2000"},"content":"     * Creates all nonexistent parent directories.","lastModifiedDate":"2024-02-17"},{"lineNumber":75,"author":{"gitId":"Vision-2000"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":76,"author":{"gitId":"Vision-2000"},"content":"     * @throws IOException if an I/O error occurs.","lastModifiedDate":"2024-02-17"},{"lineNumber":77,"author":{"gitId":"Vision-2000"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":78,"author":{"gitId":"Vision-2000"},"content":"    public void createParentDirectories() throws IOException {","lastModifiedDate":"2024-02-17"},{"lineNumber":79,"author":{"gitId":"Vision-2000"},"content":"        Files.createDirectories(this.path.getParent());","lastModifiedDate":"2024-02-17"},{"lineNumber":80,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":81,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":82,"author":{"gitId":"Vision-2000"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":83,"author":{"gitId":"Vision-2000"},"content":"     * Creates all necessary directories and file needed for loading/saving of data.","lastModifiedDate":"2024-02-17"},{"lineNumber":84,"author":{"gitId":"Vision-2000"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":85,"author":{"gitId":"Vision-2000"},"content":"     * @throws IOException if an I/O error occurs.","lastModifiedDate":"2024-02-17"},{"lineNumber":86,"author":{"gitId":"Vision-2000"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":87,"author":{"gitId":"Vision-2000"},"content":"    public void createPathIfMissing() throws IOException {","lastModifiedDate":"2024-02-17"},{"lineNumber":88,"author":{"gitId":"Vision-2000"},"content":"        if (!parentDirectoryExists()) {","lastModifiedDate":"2024-02-17"},{"lineNumber":89,"author":{"gitId":"Vision-2000"},"content":"            createParentDirectories();","lastModifiedDate":"2024-02-17"},{"lineNumber":90,"author":{"gitId":"Vision-2000"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":91,"author":{"gitId":"Vision-2000"},"content":"        if (!fileExists()) {","lastModifiedDate":"2024-02-17"},{"lineNumber":92,"author":{"gitId":"Vision-2000"},"content":"            createFile();","lastModifiedDate":"2024-02-17"},{"lineNumber":93,"author":{"gitId":"Vision-2000"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":94,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":95,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":96,"author":{"gitId":"Vision-2000"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":97,"author":{"gitId":"Vision-2000"},"content":"     * Returns task data loaded from local storage.","lastModifiedDate":"2024-02-17"},{"lineNumber":98,"author":{"gitId":"Vision-2000"},"content":"     * Will attempt to create directories and files if missing.","lastModifiedDate":"2024-02-17"},{"lineNumber":99,"author":{"gitId":"Vision-2000"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":100,"author":{"gitId":"Vision-2000"},"content":"     * @return list of String representing the TaskList.","lastModifiedDate":"2024-02-17"},{"lineNumber":101,"author":{"gitId":"Vision-2000"},"content":"     * @throws StorageException if IOException is thrown.","lastModifiedDate":"2024-02-17"},{"lineNumber":102,"author":{"gitId":"Vision-2000"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":103,"author":{"gitId":"Vision-2000"},"content":"    public List\u003cString\u003e load() throws StorageException {","lastModifiedDate":"2024-02-17"},{"lineNumber":104,"author":{"gitId":"Vision-2000"},"content":"        try {","lastModifiedDate":"2024-02-06"},{"lineNumber":105,"author":{"gitId":"Vision-2000"},"content":"            createPathIfMissing();","lastModifiedDate":"2024-02-17"},{"lineNumber":106,"author":{"gitId":"Vision-2000"},"content":"            List\u003cString\u003e fileOutput \u003d Files.readAllLines(this.path);","lastModifiedDate":"2024-02-17"},{"lineNumber":107,"author":{"gitId":"Vision-2000"},"content":"            return fileOutput;","lastModifiedDate":"2024-02-06"},{"lineNumber":108,"author":{"gitId":"Vision-2000"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-06"},{"lineNumber":109,"author":{"gitId":"Vision-2000"},"content":"            throw new StorageException(\"Failed to load from disk\\n\");","lastModifiedDate":"2024-02-17"},{"lineNumber":110,"author":{"gitId":"Vision-2000"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":111,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":112,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":113,"author":{"gitId":"Vision-2000"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":114,"author":{"gitId":"Vision-2000"},"content":"     * Saves task data to local storage.","lastModifiedDate":"2024-02-17"},{"lineNumber":115,"author":{"gitId":"Vision-2000"},"content":"     * Will attempt to create directories and files if missing.","lastModifiedDate":"2024-02-17"},{"lineNumber":116,"author":{"gitId":"Vision-2000"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":117,"author":{"gitId":"Vision-2000"},"content":"     * @param tasks list of String representing the TaskList.","lastModifiedDate":"2024-02-17"},{"lineNumber":118,"author":{"gitId":"Vision-2000"},"content":"     * @throws StorageException if IOException is thrown.","lastModifiedDate":"2024-02-17"},{"lineNumber":119,"author":{"gitId":"Vision-2000"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":120,"author":{"gitId":"Vision-2000"},"content":"    public void save(List\u003cString\u003e tasks) throws StorageException {","lastModifiedDate":"2024-02-17"},{"lineNumber":121,"author":{"gitId":"Vision-2000"},"content":"        try {","lastModifiedDate":"2024-02-06"},{"lineNumber":122,"author":{"gitId":"Vision-2000"},"content":"            createPathIfMissing();","lastModifiedDate":"2024-02-17"},{"lineNumber":123,"author":{"gitId":"Vision-2000"},"content":"            Files.write(this.path, tasks);","lastModifiedDate":"2024-02-17"},{"lineNumber":124,"author":{"gitId":"Vision-2000"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-06"},{"lineNumber":125,"author":{"gitId":"Vision-2000"},"content":"            throw new StorageException(\"Failed to save to disk\\n\");","lastModifiedDate":"2024-02-17"},{"lineNumber":126,"author":{"gitId":"Vision-2000"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":127,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":128,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":129,"author":{"gitId":"Vision-2000"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":130,"author":{"gitId":"Vision-2000"},"content":"     * Returns comparison of this object with any subclass of Object.","lastModifiedDate":"2024-02-17"},{"lineNumber":131,"author":{"gitId":"Vision-2000"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":132,"author":{"gitId":"Vision-2000"},"content":"     * @param o Object to be compared with.","lastModifiedDate":"2024-02-17"},{"lineNumber":133,"author":{"gitId":"Vision-2000"},"content":"     * @return true if both path and pathString are equal, false otherwise.","lastModifiedDate":"2024-02-17"},{"lineNumber":134,"author":{"gitId":"Vision-2000"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":135,"author":{"gitId":"Vision-2000"},"content":"    @Override","lastModifiedDate":"2024-02-17"},{"lineNumber":136,"author":{"gitId":"Vision-2000"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2024-02-17"},{"lineNumber":137,"author":{"gitId":"Vision-2000"},"content":"        if (o \u003d\u003d null) {","lastModifiedDate":"2024-02-17"},{"lineNumber":138,"author":{"gitId":"Vision-2000"},"content":"            return false;","lastModifiedDate":"2024-02-17"},{"lineNumber":139,"author":{"gitId":"Vision-2000"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":140,"author":{"gitId":"Vision-2000"},"content":"        if (!(o instanceof Storage)) {","lastModifiedDate":"2024-02-17"},{"lineNumber":141,"author":{"gitId":"Vision-2000"},"content":"            return false;","lastModifiedDate":"2024-02-17"},{"lineNumber":142,"author":{"gitId":"Vision-2000"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":143,"author":{"gitId":"Vision-2000"},"content":"        Storage test \u003d (Storage) o;","lastModifiedDate":"2024-02-17"},{"lineNumber":144,"author":{"gitId":"Vision-2000"},"content":"        if (!(this.pathString.equals(test.pathString))) {","lastModifiedDate":"2024-02-17"},{"lineNumber":145,"author":{"gitId":"Vision-2000"},"content":"            return false;","lastModifiedDate":"2024-02-17"},{"lineNumber":146,"author":{"gitId":"Vision-2000"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":147,"author":{"gitId":"Vision-2000"},"content":"        return this.path.toString().equals(test.path.toString());","lastModifiedDate":"2024-02-17"},{"lineNumber":148,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":149,"author":{"gitId":"Vision-2000"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"Vision-2000":149}},{"path":"src/main/java/storage/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vision-2000"},"content":"package storage;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"Vision-2000"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"Vision-2000"},"content":"import java.util.List;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"Vision-2000"},"content":"import exceptions.ArgumentException;","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"Vision-2000"},"content":"import parser.Parser;","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"Vision-2000"},"content":"import tasks.Task;","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"Vision-2000"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"Vision-2000"},"content":" * Represents the todolist of the application.","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"Vision-2000"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"Vision-2000"},"content":"public class TaskList {","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"Vision-2000"},"content":"    private List\u003cTask\u003e list;","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"Vision-2000"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"Vision-2000"},"content":"        list \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"Vision-2000"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"Vision-2000"},"content":"     * Adds the provided task to the list.","lastModifiedDate":"2024-02-17"},{"lineNumber":23,"author":{"gitId":"Vision-2000"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"Vision-2000"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"Vision-2000"},"content":"        list.add(task);","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"Vision-2000"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":29,"author":{"gitId":"Vision-2000"},"content":"     * Removes the task located at the specified 1-based index.","lastModifiedDate":"2024-02-17"},{"lineNumber":30,"author":{"gitId":"Vision-2000"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":31,"author":{"gitId":"Vision-2000"},"content":"     * @throws ArgumentException if the provided index is out of bounds.","lastModifiedDate":"2024-02-17"},{"lineNumber":32,"author":{"gitId":"Vision-2000"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":33,"author":{"gitId":"Vision-2000"},"content":"    public void deleteTask(int index) throws ArgumentException {","lastModifiedDate":"2024-02-17"},{"lineNumber":34,"author":{"gitId":"Vision-2000"},"content":"        throwIfInvalidIndex(index);","lastModifiedDate":"2024-02-17"},{"lineNumber":35,"author":{"gitId":"Vision-2000"},"content":"        list.remove(index - 1);","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"Vision-2000"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":39,"author":{"gitId":"Vision-2000"},"content":"     * Marks the task at the specified 1-based index to be done.","lastModifiedDate":"2024-02-17"},{"lineNumber":40,"author":{"gitId":"Vision-2000"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":41,"author":{"gitId":"Vision-2000"},"content":"     * @throws ArgumentException if the provided index is out of bounds.","lastModifiedDate":"2024-02-17"},{"lineNumber":42,"author":{"gitId":"Vision-2000"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":43,"author":{"gitId":"Vision-2000"},"content":"    public void markTaskDone(int index) throws ArgumentException {","lastModifiedDate":"2024-02-17"},{"lineNumber":44,"author":{"gitId":"Vision-2000"},"content":"        this.getTask(index).markDone();","lastModifiedDate":"2024-02-20"},{"lineNumber":45,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":46,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":47,"author":{"gitId":"Vision-2000"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":48,"author":{"gitId":"Vision-2000"},"content":"     * Marks the task at the specified 1-based index to be not done.","lastModifiedDate":"2024-02-17"},{"lineNumber":49,"author":{"gitId":"Vision-2000"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":50,"author":{"gitId":"Vision-2000"},"content":"     * @throws ArgumentException if the provided index is out of bounds.","lastModifiedDate":"2024-02-17"},{"lineNumber":51,"author":{"gitId":"Vision-2000"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":52,"author":{"gitId":"Vision-2000"},"content":"    public void markTaskNotDone(int index) throws ArgumentException {","lastModifiedDate":"2024-02-17"},{"lineNumber":53,"author":{"gitId":"Vision-2000"},"content":"        this.getTask(index).markNotDone();","lastModifiedDate":"2024-02-20"},{"lineNumber":54,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":55,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":56,"author":{"gitId":"Vision-2000"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":57,"author":{"gitId":"Vision-2000"},"content":"     * Returns the current length of the list.","lastModifiedDate":"2024-02-17"},{"lineNumber":58,"author":{"gitId":"Vision-2000"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":59,"author":{"gitId":"Vision-2000"},"content":"    public int getSize() {","lastModifiedDate":"2024-02-06"},{"lineNumber":60,"author":{"gitId":"Vision-2000"},"content":"        return list.size();","lastModifiedDate":"2024-02-06"},{"lineNumber":61,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":62,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":63,"author":{"gitId":"Vision-2000"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":64,"author":{"gitId":"Vision-2000"},"content":"     * Returns the task at the specified 1-based index.","lastModifiedDate":"2024-02-17"},{"lineNumber":65,"author":{"gitId":"Vision-2000"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":66,"author":{"gitId":"Vision-2000"},"content":"     * @throws ArgumentException if the provided index is out of bounds.","lastModifiedDate":"2024-02-17"},{"lineNumber":67,"author":{"gitId":"Vision-2000"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":68,"author":{"gitId":"Vision-2000"},"content":"    public Task getTask(int index) throws ArgumentException {","lastModifiedDate":"2024-02-17"},{"lineNumber":69,"author":{"gitId":"Vision-2000"},"content":"        throwIfInvalidIndex(index);","lastModifiedDate":"2024-02-17"},{"lineNumber":70,"author":{"gitId":"Vision-2000"},"content":"        return list.get(index - 1);","lastModifiedDate":"2024-02-06"},{"lineNumber":71,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":72,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":73,"author":{"gitId":"Vision-2000"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":74,"author":{"gitId":"Vision-2000"},"content":"     * Returns a String of all tasks in the list where the description contains the provided String.","lastModifiedDate":"2024-02-17"},{"lineNumber":75,"author":{"gitId":"Vision-2000"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":76,"author":{"gitId":"Vision-2000"},"content":"     * @param matcher String to look for.","lastModifiedDate":"2024-02-17"},{"lineNumber":77,"author":{"gitId":"Vision-2000"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":78,"author":{"gitId":"Vision-2000"},"content":"    public String findTasks(String matcher) {","lastModifiedDate":"2024-02-07"},{"lineNumber":79,"author":{"gitId":"Vision-2000"},"content":"        String output \u003d \"\";","lastModifiedDate":"2024-02-07"},{"lineNumber":80,"author":{"gitId":"Vision-2000"},"content":"        int outputIndex \u003d 1;","lastModifiedDate":"2024-02-07"},{"lineNumber":81,"author":{"gitId":"Vision-2000"},"content":"        for (Task t : list) {","lastModifiedDate":"2024-02-07"},{"lineNumber":82,"author":{"gitId":"Vision-2000"},"content":"            if (t.isFound(matcher)) {","lastModifiedDate":"2024-02-07"},{"lineNumber":83,"author":{"gitId":"Vision-2000"},"content":"                output +\u003d outputIndex + \".\" + t + \"\\n\";","lastModifiedDate":"2024-02-20"},{"lineNumber":84,"author":{"gitId":"Vision-2000"},"content":"                outputIndex++;","lastModifiedDate":"2024-02-08"},{"lineNumber":85,"author":{"gitId":"Vision-2000"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":86,"author":{"gitId":"Vision-2000"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":87,"author":{"gitId":"Vision-2000"},"content":"        return output;","lastModifiedDate":"2024-02-07"},{"lineNumber":88,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":89,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":90,"author":{"gitId":"Vision-2000"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":91,"author":{"gitId":"Vision-2000"},"content":"     * Updates the details of the task at the specified 1-based index.","lastModifiedDate":"2024-02-20"},{"lineNumber":92,"author":{"gitId":"Vision-2000"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":93,"author":{"gitId":"Vision-2000"},"content":"     * @throws ArgumentException if the provided index is out of bounds or if insufficient details are provided.","lastModifiedDate":"2024-02-20"},{"lineNumber":94,"author":{"gitId":"Vision-2000"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":95,"author":{"gitId":"Vision-2000"},"content":"    public void updateTask(int index, String details) throws ArgumentException {","lastModifiedDate":"2024-02-20"},{"lineNumber":96,"author":{"gitId":"Vision-2000"},"content":"        this.getTask(index).update(details);","lastModifiedDate":"2024-02-20"},{"lineNumber":97,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":98,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":99,"author":{"gitId":"Vision-2000"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":100,"author":{"gitId":"Vision-2000"},"content":"     * Returns the list of tasks converted to their String save format.","lastModifiedDate":"2024-02-17"},{"lineNumber":101,"author":{"gitId":"Vision-2000"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":102,"author":{"gitId":"Vision-2000"},"content":"    public List\u003cString\u003e toSaveFormat() {","lastModifiedDate":"2024-02-06"},{"lineNumber":103,"author":{"gitId":"Vision-2000"},"content":"        List\u003cString\u003e output \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-06"},{"lineNumber":104,"author":{"gitId":"Vision-2000"},"content":"        for (Task task : list) {","lastModifiedDate":"2024-02-06"},{"lineNumber":105,"author":{"gitId":"Vision-2000"},"content":"            output.add(task.toSaveFormat());","lastModifiedDate":"2024-02-06"},{"lineNumber":106,"author":{"gitId":"Vision-2000"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":107,"author":{"gitId":"Vision-2000"},"content":"        return output;","lastModifiedDate":"2024-02-06"},{"lineNumber":108,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":109,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":110,"author":{"gitId":"Vision-2000"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":111,"author":{"gitId":"Vision-2000"},"content":"     * Converts the input list of Strings to tasks and adds them to the list.","lastModifiedDate":"2024-02-17"},{"lineNumber":112,"author":{"gitId":"Vision-2000"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":113,"author":{"gitId":"Vision-2000"},"content":"     * @throws ArgumentException if input is of wrong format.","lastModifiedDate":"2024-02-17"},{"lineNumber":114,"author":{"gitId":"Vision-2000"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":115,"author":{"gitId":"Vision-2000"},"content":"    public void loadFromSaveFormat(List\u003cString\u003e input) throws ArgumentException {","lastModifiedDate":"2024-02-06"},{"lineNumber":116,"author":{"gitId":"Vision-2000"},"content":"        for (String line : input) {","lastModifiedDate":"2024-02-06"},{"lineNumber":117,"author":{"gitId":"Vision-2000"},"content":"            list.add(Parser.parseLine(line));","lastModifiedDate":"2024-02-06"},{"lineNumber":118,"author":{"gitId":"Vision-2000"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":119,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":120,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":121,"author":{"gitId":"Vision-2000"},"content":"    private void throwIfInvalidIndex(int index) throws ArgumentException {","lastModifiedDate":"2024-02-17"},{"lineNumber":122,"author":{"gitId":"Vision-2000"},"content":"        if (index \u003e list.size() || index \u003c 1) {","lastModifiedDate":"2024-02-20"},{"lineNumber":123,"author":{"gitId":"Vision-2000"},"content":"            throw new ArgumentException(\"Invalid index: \" + index);","lastModifiedDate":"2024-02-17"},{"lineNumber":124,"author":{"gitId":"Vision-2000"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":125,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":126,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":127,"author":{"gitId":"Vision-2000"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":128,"author":{"gitId":"Vision-2000"},"content":"     * Returns String representation of this object.","lastModifiedDate":"2024-02-17"},{"lineNumber":129,"author":{"gitId":"Vision-2000"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":130,"author":{"gitId":"Vision-2000"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":131,"author":{"gitId":"Vision-2000"},"content":"    public String toString() {","lastModifiedDate":"2024-02-06"},{"lineNumber":132,"author":{"gitId":"Vision-2000"},"content":"        String output \u003d \"\";","lastModifiedDate":"2024-02-06"},{"lineNumber":133,"author":{"gitId":"Vision-2000"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2024-02-06"},{"lineNumber":134,"author":{"gitId":"Vision-2000"},"content":"            Task t \u003d list.get(i);","lastModifiedDate":"2024-02-06"},{"lineNumber":135,"author":{"gitId":"Vision-2000"},"content":"            output +\u003d (i + 1) + \".\" + t.toString() + \"\\n\";","lastModifiedDate":"2024-02-06"},{"lineNumber":136,"author":{"gitId":"Vision-2000"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":137,"author":{"gitId":"Vision-2000"},"content":"        return output;","lastModifiedDate":"2024-02-06"},{"lineNumber":138,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":139,"author":{"gitId":"Vision-2000"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"Vision-2000":139}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vision-2000"},"content":"package tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"Vision-2000"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"Vision-2000"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"Vision-2000"},"content":"import exceptions.ArgumentException;","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"Vision-2000"},"content":"import parser.Parser;","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":9,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":10,"author":{"gitId":"Vision-2000"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"Vision-2000"},"content":" * Represents a Task with an ending date.","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"Vision-2000"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"Vision-2000"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"Vision-2000"},"content":"    protected LocalDate dueBy;","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"Vision-2000"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"Vision-2000"},"content":"     * Instantiates Deadline object with description and ending date. Defaults status to not done.","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"Vision-2000"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"Vision-2000"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"Vision-2000"},"content":"        super(description);","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"Vision-2000"},"content":"        this.dueBy \u003d by;","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"Vision-2000"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":26,"author":{"gitId":"Vision-2000"},"content":"     * Instantiates Deadline object with description, ending date and status.","lastModifiedDate":"2024-02-17"},{"lineNumber":27,"author":{"gitId":"Vision-2000"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":28,"author":{"gitId":"Vision-2000"},"content":"    public Deadline(String description, LocalDate by, String status) {","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"Vision-2000"},"content":"        super(description, status);","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"Vision-2000"},"content":"        this.dueBy \u003d by;","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"Vision-2000"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":34,"author":{"gitId":"Vision-2000"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-02-17"},{"lineNumber":35,"author":{"gitId":"Vision-2000"},"content":"     * Prepends the task type and appends the ending date of this object.","lastModifiedDate":"2024-02-17"},{"lineNumber":36,"author":{"gitId":"Vision-2000"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":37,"author":{"gitId":"Vision-2000"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"Vision-2000"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"Vision-2000"},"content":"        return \"D \" + super.toSaveFormat() + \" /by \" + dueBy;","lastModifiedDate":"2024-02-08"},{"lineNumber":40,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":41,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":42,"author":{"gitId":"Vision-2000"},"content":"    @Override","lastModifiedDate":"2024-02-20"},{"lineNumber":43,"author":{"gitId":"Vision-2000"},"content":"    public void update(String details) throws ArgumentException {","lastModifiedDate":"2024-02-20"},{"lineNumber":44,"author":{"gitId":"Vision-2000"},"content":"        String[] args \u003d Parser.parseDeadlineArgument(details);","lastModifiedDate":"2024-02-20"},{"lineNumber":45,"author":{"gitId":"Vision-2000"},"content":"        this.description \u003d args[0].trim();","lastModifiedDate":"2024-02-20"},{"lineNumber":46,"author":{"gitId":"Vision-2000"},"content":"        this.dueBy \u003d LocalDate.parse(args[1].trim());","lastModifiedDate":"2024-02-20"},{"lineNumber":47,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":48,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":49,"author":{"gitId":"Vision-2000"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"Vision-2000"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"Vision-2000"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + dueBy.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2024-02-08"},{"lineNumber":52,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"Vision-2000"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"Vision-2000":53}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vision-2000"},"content":"package tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"Vision-2000"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"Vision-2000"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"Vision-2000"},"content":"import exceptions.ArgumentException;","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"Vision-2000"},"content":"import parser.Parser;","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":9,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":10,"author":{"gitId":"Vision-2000"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"Vision-2000"},"content":" * Represents a Task that has both a starting and ending date.","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"Vision-2000"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"Vision-2000"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"Vision-2000"},"content":"    protected LocalDate from;","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"Vision-2000"},"content":"    protected LocalDate to;","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"Vision-2000"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"Vision-2000"},"content":"     * Instantiates Event object with description, starting and ending date.","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"Vision-2000"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"Vision-2000"},"content":"    public Event(String description, LocalDate from, LocalDate to) {","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"Vision-2000"},"content":"        super(description);","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"Vision-2000"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"Vision-2000"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"Vision-2000"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":27,"author":{"gitId":"Vision-2000"},"content":"     * Instantiates Deadline object with description, starting date, ending date and status.","lastModifiedDate":"2024-02-17"},{"lineNumber":28,"author":{"gitId":"Vision-2000"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":29,"author":{"gitId":"Vision-2000"},"content":"    public Event(String description, LocalDate from, LocalDate to, String status) {","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"Vision-2000"},"content":"        super(description, status);","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"Vision-2000"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"Vision-2000"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"Vision-2000"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":36,"author":{"gitId":"Vision-2000"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-02-17"},{"lineNumber":37,"author":{"gitId":"Vision-2000"},"content":"     * Prepends the task type and appends the starting and ending date of this object.","lastModifiedDate":"2024-02-17"},{"lineNumber":38,"author":{"gitId":"Vision-2000"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":39,"author":{"gitId":"Vision-2000"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":40,"author":{"gitId":"Vision-2000"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2024-02-06"},{"lineNumber":41,"author":{"gitId":"Vision-2000"},"content":"        return \"E \" + super.toSaveFormat() + \" /from \" + from + \" /to \" + to;","lastModifiedDate":"2024-02-06"},{"lineNumber":42,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":43,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":44,"author":{"gitId":"Vision-2000"},"content":"    @Override","lastModifiedDate":"2024-02-20"},{"lineNumber":45,"author":{"gitId":"Vision-2000"},"content":"    public void update(String details) throws ArgumentException {","lastModifiedDate":"2024-02-20"},{"lineNumber":46,"author":{"gitId":"Vision-2000"},"content":"        String[] args \u003d Parser.parseEventArgument(details);","lastModifiedDate":"2024-02-20"},{"lineNumber":47,"author":{"gitId":"Vision-2000"},"content":"        this.description \u003d args[0].trim();","lastModifiedDate":"2024-02-20"},{"lineNumber":48,"author":{"gitId":"Vision-2000"},"content":"        this.from \u003d LocalDate.parse(args[1].trim());","lastModifiedDate":"2024-02-20"},{"lineNumber":49,"author":{"gitId":"Vision-2000"},"content":"        this.to \u003d LocalDate.parse(args[2].trim());","lastModifiedDate":"2024-02-20"},{"lineNumber":50,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":51,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":52,"author":{"gitId":"Vision-2000"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"Vision-2000"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"Vision-2000"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2024-02-06"},{"lineNumber":55,"author":{"gitId":"Vision-2000"},"content":"                + \" to: \" + to.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2024-02-06"},{"lineNumber":56,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"Vision-2000"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"Vision-2000":57}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vision-2000"},"content":"package tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"Vision-2000"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"Vision-2000"},"content":"import exceptions.ArgumentException;","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"Vision-2000"},"content":"import parser.Parser;","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"Vision-2000"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"Vision-2000"},"content":" * Represents a task in the TaskList.","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"Vision-2000"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"Vision-2000"},"content":"public abstract class Task {","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"Vision-2000"},"content":"    protected String description;","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"Vision-2000"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"Vision-2000"},"content":"    public Task(String description) {","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"Vision-2000"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"Vision-2000"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"Vision-2000"},"content":"    public Task(String description, String status) {","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"Vision-2000"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"Vision-2000"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-17"},{"lineNumber":23,"author":{"gitId":"Vision-2000"},"content":"        if (status.equals(\"Y\")) {","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"Vision-2000"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"Vision-2000"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":26,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":27,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":28,"author":{"gitId":"Vision-2000"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":29,"author":{"gitId":"Vision-2000"},"content":"     * Returns a task generated from the given taskData.","lastModifiedDate":"2024-02-17"},{"lineNumber":30,"author":{"gitId":"Vision-2000"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":31,"author":{"gitId":"Vision-2000"},"content":"     * @param taskData Array of Strings to be converted to a task. Should be of the format [Type, status, description].","lastModifiedDate":"2024-02-17"},{"lineNumber":32,"author":{"gitId":"Vision-2000"},"content":"     * @return Corresponding task.","lastModifiedDate":"2024-02-17"},{"lineNumber":33,"author":{"gitId":"Vision-2000"},"content":"     * @throws ArgumentException if the first element of the array is not a recognised Task type.","lastModifiedDate":"2024-02-17"},{"lineNumber":34,"author":{"gitId":"Vision-2000"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":35,"author":{"gitId":"Vision-2000"},"content":"    public static Task makeTask(String[] taskData) throws ArgumentException {","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"Vision-2000"},"content":"        assert taskData.length \u003d\u003d 3;","lastModifiedDate":"2024-02-17"},{"lineNumber":37,"author":{"gitId":"Vision-2000"},"content":"        String taskType \u003d taskData[0];","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"Vision-2000"},"content":"        switch (taskType) {","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"Vision-2000"},"content":"        case \"T\":","lastModifiedDate":"2024-02-06"},{"lineNumber":40,"author":{"gitId":"Vision-2000"},"content":"            return new ToDo(taskData[2], taskData[1]);","lastModifiedDate":"2024-02-06"},{"lineNumber":41,"author":{"gitId":"Vision-2000"},"content":"        case \"D\":","lastModifiedDate":"2024-02-06"},{"lineNumber":42,"author":{"gitId":"Vision-2000"},"content":"            String[] args \u003d Parser.parseDeadlineArgument(taskData[2]);","lastModifiedDate":"2024-02-06"},{"lineNumber":43,"author":{"gitId":"Vision-2000"},"content":"            return new Deadline(args[0].trim(), LocalDate.parse(args[1].trim()), taskData[1]);","lastModifiedDate":"2024-02-06"},{"lineNumber":44,"author":{"gitId":"Vision-2000"},"content":"        case \"E\":","lastModifiedDate":"2024-02-06"},{"lineNumber":45,"author":{"gitId":"Vision-2000"},"content":"            args \u003d Parser.parseEventArgument(taskData[2]);","lastModifiedDate":"2024-02-06"},{"lineNumber":46,"author":{"gitId":"Vision-2000"},"content":"            return new Event(args[0].trim(), LocalDate.parse(args[1].trim()),","lastModifiedDate":"2024-02-06"},{"lineNumber":47,"author":{"gitId":"Vision-2000"},"content":"                    LocalDate.parse(args[2].trim()), taskData[1]);","lastModifiedDate":"2024-02-06"},{"lineNumber":48,"author":{"gitId":"Vision-2000"},"content":"        default:","lastModifiedDate":"2024-02-06"},{"lineNumber":49,"author":{"gitId":"Vision-2000"},"content":"            throw new ArgumentException(\"Did not recognize task type \" + taskType + \"\\n\");","lastModifiedDate":"2024-02-17"},{"lineNumber":50,"author":{"gitId":"Vision-2000"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":51,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":52,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":53,"author":{"gitId":"Vision-2000"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":54,"author":{"gitId":"Vision-2000"},"content":"     * Returns a task generated from the given taskType and taskArgument.","lastModifiedDate":"2024-02-17"},{"lineNumber":55,"author":{"gitId":"Vision-2000"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":56,"author":{"gitId":"Vision-2000"},"content":"     * @param taskType String indicting the type of task.","lastModifiedDate":"2024-02-17"},{"lineNumber":57,"author":{"gitId":"Vision-2000"},"content":"     * @param taskArgument String containing information needed to create the task.","lastModifiedDate":"2024-02-17"},{"lineNumber":58,"author":{"gitId":"Vision-2000"},"content":"     * @return Corresponding Task.","lastModifiedDate":"2024-02-17"},{"lineNumber":59,"author":{"gitId":"Vision-2000"},"content":"     * @throws ArgumentException if too little arguments are provided or taskType is not recognised.","lastModifiedDate":"2024-02-17"},{"lineNumber":60,"author":{"gitId":"Vision-2000"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":61,"author":{"gitId":"Vision-2000"},"content":"    public static Task makeTask(String taskType, String taskArgument) throws ArgumentException {","lastModifiedDate":"2024-02-06"},{"lineNumber":62,"author":{"gitId":"Vision-2000"},"content":"        assert taskType !\u003d null;","lastModifiedDate":"2024-02-17"},{"lineNumber":63,"author":{"gitId":"Vision-2000"},"content":"        switch (taskType) {","lastModifiedDate":"2024-02-06"},{"lineNumber":64,"author":{"gitId":"Vision-2000"},"content":"        case \"todo\":","lastModifiedDate":"2024-02-06"},{"lineNumber":65,"author":{"gitId":"Vision-2000"},"content":"            if (taskArgument.length() \u003d\u003d 0) {","lastModifiedDate":"2024-02-06"},{"lineNumber":66,"author":{"gitId":"Vision-2000"},"content":"                throw new ArgumentException(\"Insufficient argument provided for todo task.\\n\");","lastModifiedDate":"2024-02-17"},{"lineNumber":67,"author":{"gitId":"Vision-2000"},"content":"            }","lastModifiedDate":"2024-02-06"},{"lineNumber":68,"author":{"gitId":"Vision-2000"},"content":"            return new ToDo(taskArgument);","lastModifiedDate":"2024-02-06"},{"lineNumber":69,"author":{"gitId":"Vision-2000"},"content":"        case \"deadline\":","lastModifiedDate":"2024-02-06"},{"lineNumber":70,"author":{"gitId":"Vision-2000"},"content":"            String[] args \u003d Parser.parseDeadlineArgument(taskArgument);","lastModifiedDate":"2024-02-06"},{"lineNumber":71,"author":{"gitId":"Vision-2000"},"content":"            return new Deadline(args[0].trim(), LocalDate.parse(args[1].trim()));","lastModifiedDate":"2024-02-06"},{"lineNumber":72,"author":{"gitId":"Vision-2000"},"content":"        case \"event\":","lastModifiedDate":"2024-02-06"},{"lineNumber":73,"author":{"gitId":"Vision-2000"},"content":"            args \u003d Parser.parseEventArgument(taskArgument);","lastModifiedDate":"2024-02-06"},{"lineNumber":74,"author":{"gitId":"Vision-2000"},"content":"            return new Event(args[0].trim(), LocalDate.parse(args[1].trim()),","lastModifiedDate":"2024-02-06"},{"lineNumber":75,"author":{"gitId":"Vision-2000"},"content":"                    LocalDate.parse(args[2].trim()));","lastModifiedDate":"2024-02-06"},{"lineNumber":76,"author":{"gitId":"Vision-2000"},"content":"        default:","lastModifiedDate":"2024-02-06"},{"lineNumber":77,"author":{"gitId":"Vision-2000"},"content":"            throw new ArgumentException(\"Did not recognize task type \" + taskType + \"\\n\");","lastModifiedDate":"2024-02-17"},{"lineNumber":78,"author":{"gitId":"Vision-2000"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":79,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":80,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":81,"author":{"gitId":"Vision-2000"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":82,"author":{"gitId":"Vision-2000"},"content":"     * Returns \"X\" if task is done, \" \" otherwise.","lastModifiedDate":"2024-02-17"},{"lineNumber":83,"author":{"gitId":"Vision-2000"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":84,"author":{"gitId":"Vision-2000"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"Vision-2000"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"Vision-2000"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":89,"author":{"gitId":"Vision-2000"},"content":"     * Updates the status of this task to be done.","lastModifiedDate":"2024-02-17"},{"lineNumber":90,"author":{"gitId":"Vision-2000"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":91,"author":{"gitId":"Vision-2000"},"content":"    public void markDone() {","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"Vision-2000"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"Vision-2000"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":96,"author":{"gitId":"Vision-2000"},"content":"     * Updates the status of this task to be not done.","lastModifiedDate":"2024-02-17"},{"lineNumber":97,"author":{"gitId":"Vision-2000"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":98,"author":{"gitId":"Vision-2000"},"content":"    public void markNotDone() {","lastModifiedDate":"2024-02-01"},{"lineNumber":99,"author":{"gitId":"Vision-2000"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-01"},{"lineNumber":100,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":101,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":102,"author":{"gitId":"Vision-2000"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":103,"author":{"gitId":"Vision-2000"},"content":"     * Returns true if the description contains the given String, false otherwise.","lastModifiedDate":"2024-02-20"},{"lineNumber":104,"author":{"gitId":"Vision-2000"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":105,"author":{"gitId":"Vision-2000"},"content":"    public boolean isFound(String matcher) {","lastModifiedDate":"2024-02-07"},{"lineNumber":106,"author":{"gitId":"Vision-2000"},"content":"        return Parser.matchStrings(this.description, matcher);","lastModifiedDate":"2024-02-07"},{"lineNumber":107,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":108,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":109,"author":{"gitId":"Vision-2000"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":110,"author":{"gitId":"Vision-2000"},"content":"     * Updates description and any other task details.","lastModifiedDate":"2024-02-20"},{"lineNumber":111,"author":{"gitId":"Vision-2000"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":112,"author":{"gitId":"Vision-2000"},"content":"     * @throws ArgumentException if details provided are insufficient.","lastModifiedDate":"2024-02-20"},{"lineNumber":113,"author":{"gitId":"Vision-2000"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":114,"author":{"gitId":"Vision-2000"},"content":"    public abstract void update(String details) throws ArgumentException;","lastModifiedDate":"2024-02-20"},{"lineNumber":115,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":116,"author":{"gitId":"Vision-2000"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":117,"author":{"gitId":"Vision-2000"},"content":"     * Returns the save format of this Task containing its status and description.","lastModifiedDate":"2024-02-17"},{"lineNumber":118,"author":{"gitId":"Vision-2000"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":119,"author":{"gitId":"Vision-2000"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2024-02-06"},{"lineNumber":120,"author":{"gitId":"Vision-2000"},"content":"        if (this.isDone) {","lastModifiedDate":"2024-02-06"},{"lineNumber":121,"author":{"gitId":"Vision-2000"},"content":"            return \"Y \" + this.description;","lastModifiedDate":"2024-02-06"},{"lineNumber":122,"author":{"gitId":"Vision-2000"},"content":"        } else {","lastModifiedDate":"2024-02-06"},{"lineNumber":123,"author":{"gitId":"Vision-2000"},"content":"            return \"N \" + this.description;","lastModifiedDate":"2024-02-06"},{"lineNumber":124,"author":{"gitId":"Vision-2000"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":125,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":126,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":127,"author":{"gitId":"Vision-2000"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":128,"author":{"gitId":"Vision-2000"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":129,"author":{"gitId":"Vision-2000"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2024-02-01"},{"lineNumber":130,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":131,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":132,"author":{"gitId":"Vision-2000"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"Vision-2000":132}},{"path":"src/main/java/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vision-2000"},"content":"package tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"Vision-2000"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"Vision-2000"},"content":" * Represents a Task that has no starting or ending date","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"Vision-2000"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"Vision-2000"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"Vision-2000"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"Vision-2000"},"content":"     * Instantiates ToDo object with description.","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"Vision-2000"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"Vision-2000"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"Vision-2000"},"content":"        super(description);","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"Vision-2000"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"Vision-2000"},"content":"     * Instantiates ToDo object with description and status.","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"Vision-2000"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"Vision-2000"},"content":"    public ToDo(String description, String status) {","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"Vision-2000"},"content":"        super(description, status);","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"Vision-2000"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":23,"author":{"gitId":"Vision-2000"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"Vision-2000"},"content":"     * Prepends the task type of this object.","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"Vision-2000"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":26,"author":{"gitId":"Vision-2000"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"Vision-2000"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"Vision-2000"},"content":"        return \"T \" + super.toSaveFormat();","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"Vision-2000"},"content":"    @Override","lastModifiedDate":"2024-02-20"},{"lineNumber":32,"author":{"gitId":"Vision-2000"},"content":"    public void update(String details) {","lastModifiedDate":"2024-02-20"},{"lineNumber":33,"author":{"gitId":"Vision-2000"},"content":"        this.description \u003d details;","lastModifiedDate":"2024-02-20"},{"lineNumber":34,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":35,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":36,"author":{"gitId":"Vision-2000"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"Vision-2000"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"Vision-2000"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"Vision-2000"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"Vision-2000":41}},{"path":"src/main/java/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vision-2000"},"content":"package ui;","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"Vision-2000"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"Vision-2000"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"Vision-2000"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"Vision-2000"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"Vision-2000"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"Vision-2000"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"Vision-2000"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"Vision-2000"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"Vision-2000"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"Vision-2000"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"Vision-2000"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"Vision-2000"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"Vision-2000"},"content":"/**","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"Vision-2000"},"content":" * Represents a dialog box UI element showing a message, its sender and display image.","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"Vision-2000"},"content":" */","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"Vision-2000"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"Vision-2000"},"content":"    @FXML","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"Vision-2000"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"Vision-2000"},"content":"    @FXML","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"Vision-2000"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-11"},{"lineNumber":27,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"Vision-2000"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":29,"author":{"gitId":"Vision-2000"},"content":"     * Instantiates DialogBox object displaying the given message and image.","lastModifiedDate":"2024-02-17"},{"lineNumber":30,"author":{"gitId":"Vision-2000"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":31,"author":{"gitId":"Vision-2000"},"content":"    public DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"Vision-2000"},"content":"        try {","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"Vision-2000"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-11"},{"lineNumber":34,"author":{"gitId":"Vision-2000"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-11"},{"lineNumber":35,"author":{"gitId":"Vision-2000"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-11"},{"lineNumber":36,"author":{"gitId":"Vision-2000"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-11"},{"lineNumber":37,"author":{"gitId":"Vision-2000"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-11"},{"lineNumber":38,"author":{"gitId":"Vision-2000"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-11"},{"lineNumber":39,"author":{"gitId":"Vision-2000"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":41,"author":{"gitId":"Vision-2000"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-11"},{"lineNumber":42,"author":{"gitId":"Vision-2000"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-11"},{"lineNumber":43,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":44,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":45,"author":{"gitId":"Vision-2000"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":46,"author":{"gitId":"Vision-2000"},"content":"     * Sets the contents of this DialogBox to be left aligned.","lastModifiedDate":"2024-02-17"},{"lineNumber":47,"author":{"gitId":"Vision-2000"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":48,"author":{"gitId":"Vision-2000"},"content":"    private void flip() {","lastModifiedDate":"2024-02-11"},{"lineNumber":49,"author":{"gitId":"Vision-2000"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-11"},{"lineNumber":50,"author":{"gitId":"Vision-2000"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-11"},{"lineNumber":51,"author":{"gitId":"Vision-2000"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-11"},{"lineNumber":52,"author":{"gitId":"Vision-2000"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-11"},{"lineNumber":53,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":54,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":55,"author":{"gitId":"Vision-2000"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":56,"author":{"gitId":"Vision-2000"},"content":"     * Returns a DialogBox representing the user\u0027s message.","lastModifiedDate":"2024-02-17"},{"lineNumber":57,"author":{"gitId":"Vision-2000"},"content":"     * @param text User message.","lastModifiedDate":"2024-02-17"},{"lineNumber":58,"author":{"gitId":"Vision-2000"},"content":"     * @param img User display image.","lastModifiedDate":"2024-02-17"},{"lineNumber":59,"author":{"gitId":"Vision-2000"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":60,"author":{"gitId":"Vision-2000"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-11"},{"lineNumber":61,"author":{"gitId":"Vision-2000"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-11"},{"lineNumber":62,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":63,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":64,"author":{"gitId":"Vision-2000"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":65,"author":{"gitId":"Vision-2000"},"content":"     * Returns a DialogBox representing the chatbot\u0027s message.","lastModifiedDate":"2024-02-17"},{"lineNumber":66,"author":{"gitId":"Vision-2000"},"content":"     * @param text Chatbot message.","lastModifiedDate":"2024-02-17"},{"lineNumber":67,"author":{"gitId":"Vision-2000"},"content":"     * @param img Chatbot display image.","lastModifiedDate":"2024-02-17"},{"lineNumber":68,"author":{"gitId":"Vision-2000"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":69,"author":{"gitId":"Vision-2000"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-02-11"},{"lineNumber":70,"author":{"gitId":"Vision-2000"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-11"},{"lineNumber":71,"author":{"gitId":"Vision-2000"},"content":"        db.flip();","lastModifiedDate":"2024-02-11"},{"lineNumber":72,"author":{"gitId":"Vision-2000"},"content":"        return db;","lastModifiedDate":"2024-02-11"},{"lineNumber":73,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":74,"author":{"gitId":"Vision-2000"},"content":"}","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"Vision-2000":74}},{"path":"src/main/java/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vision-2000"},"content":"package ui;","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"Vision-2000"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"Vision-2000"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"Vision-2000"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"Vision-2000"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"Vision-2000"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"Vision-2000"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"Vision-2000"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"Vision-2000"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"Vision-2000"},"content":" * Represents the layout for all UI elements to be displayed.","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"Vision-2000"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"Vision-2000"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"Vision-2000"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"Vision-2000"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"Vision-2000"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"Vision-2000"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"Vision-2000"},"content":"    private UserInterface ui;","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"Vision-2000"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"Vision-2000"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"Vision-2000"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"Vision-2000"},"content":"     * Instantiates MainWindow object belonging to ui.","lastModifiedDate":"2024-02-17"},{"lineNumber":26,"author":{"gitId":"Vision-2000"},"content":"     * Initialises its children.","lastModifiedDate":"2024-02-17"},{"lineNumber":27,"author":{"gitId":"Vision-2000"},"content":"     * @param ui UserInterface object where this object was created.","lastModifiedDate":"2024-02-17"},{"lineNumber":28,"author":{"gitId":"Vision-2000"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":29,"author":{"gitId":"Vision-2000"},"content":"    public MainWindow(UserInterface ui) {","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"Vision-2000"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2024-02-11"},{"lineNumber":31,"author":{"gitId":"Vision-2000"},"content":"        this.initialize();","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":34,"author":{"gitId":"Vision-2000"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":35,"author":{"gitId":"Vision-2000"},"content":"     * Reads the user input passes it to the UserInterface object for execution.","lastModifiedDate":"2024-02-17"},{"lineNumber":36,"author":{"gitId":"Vision-2000"},"content":"     * Updates the visual layout accordingly.","lastModifiedDate":"2024-02-17"},{"lineNumber":37,"author":{"gitId":"Vision-2000"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":38,"author":{"gitId":"Vision-2000"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":39,"author":{"gitId":"Vision-2000"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"Vision-2000"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-11"},{"lineNumber":41,"author":{"gitId":"Vision-2000"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2024-02-11"},{"lineNumber":42,"author":{"gitId":"Vision-2000"},"content":"                DialogBox.getUserDialog(input, userImage)","lastModifiedDate":"2024-02-11"},{"lineNumber":43,"author":{"gitId":"Vision-2000"},"content":"        );","lastModifiedDate":"2024-02-11"},{"lineNumber":44,"author":{"gitId":"Vision-2000"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-11"},{"lineNumber":45,"author":{"gitId":"Vision-2000"},"content":"        this.ui.runCommand(input);","lastModifiedDate":"2024-02-11"},{"lineNumber":46,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":47,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":48,"author":{"gitId":"Vision-2000"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":49,"author":{"gitId":"Vision-2000"},"content":"     * Adds a DialogBox containing message from the Chatbot.","lastModifiedDate":"2024-02-17"},{"lineNumber":50,"author":{"gitId":"Vision-2000"},"content":"     * @param text String to display.","lastModifiedDate":"2024-02-17"},{"lineNumber":51,"author":{"gitId":"Vision-2000"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":52,"author":{"gitId":"Vision-2000"},"content":"    public void displayText(String text) {","lastModifiedDate":"2024-02-11"},{"lineNumber":53,"author":{"gitId":"Vision-2000"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2024-02-11"},{"lineNumber":54,"author":{"gitId":"Vision-2000"},"content":"                DialogBox.getDukeDialog(text, dukeImage)","lastModifiedDate":"2024-02-11"},{"lineNumber":55,"author":{"gitId":"Vision-2000"},"content":"        );","lastModifiedDate":"2024-02-11"},{"lineNumber":56,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":57,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":58,"author":{"gitId":"Vision-2000"},"content":"    private void initialize() {","lastModifiedDate":"2024-02-20"},{"lineNumber":59,"author":{"gitId":"Vision-2000"},"content":"        this.setPrefSize(400.0, 600.0);","lastModifiedDate":"2024-02-17"},{"lineNumber":60,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":61,"author":{"gitId":"Vision-2000"},"content":"        setDialogContainer();","lastModifiedDate":"2024-02-20"},{"lineNumber":62,"author":{"gitId":"Vision-2000"},"content":"        setScrollPane();","lastModifiedDate":"2024-02-20"},{"lineNumber":63,"author":{"gitId":"Vision-2000"},"content":"        setSendButton();","lastModifiedDate":"2024-02-20"},{"lineNumber":64,"author":{"gitId":"Vision-2000"},"content":"        setTextField();","lastModifiedDate":"2024-02-20"},{"lineNumber":65,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":66,"author":{"gitId":"Vision-2000"},"content":"        this.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2024-02-20"},{"lineNumber":67,"author":{"gitId":"Vision-2000"},"content":"        setAnchors();","lastModifiedDate":"2024-02-20"},{"lineNumber":68,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":69,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":70,"author":{"gitId":"Vision-2000"},"content":"    private void setDialogContainer() {","lastModifiedDate":"2024-02-20"},{"lineNumber":71,"author":{"gitId":"Vision-2000"},"content":"        this.dialogContainer \u003d new VBox();","lastModifiedDate":"2024-02-20"},{"lineNumber":72,"author":{"gitId":"Vision-2000"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2024-02-20"},{"lineNumber":73,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":74,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":75,"author":{"gitId":"Vision-2000"},"content":"    private void setScrollPane() {","lastModifiedDate":"2024-02-20"},{"lineNumber":76,"author":{"gitId":"Vision-2000"},"content":"        this.scrollPane \u003d new ScrollPane();","lastModifiedDate":"2024-02-20"},{"lineNumber":77,"author":{"gitId":"Vision-2000"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2024-02-20"},{"lineNumber":78,"author":{"gitId":"Vision-2000"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2024-02-11"},{"lineNumber":79,"author":{"gitId":"Vision-2000"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2024-02-11"},{"lineNumber":80,"author":{"gitId":"Vision-2000"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2024-02-11"},{"lineNumber":81,"author":{"gitId":"Vision-2000"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2024-02-11"},{"lineNumber":82,"author":{"gitId":"Vision-2000"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2024-02-11"},{"lineNumber":83,"author":{"gitId":"Vision-2000"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-11"},{"lineNumber":84,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":85,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":86,"author":{"gitId":"Vision-2000"},"content":"    private void setSendButton() {","lastModifiedDate":"2024-02-20"},{"lineNumber":87,"author":{"gitId":"Vision-2000"},"content":"        this.sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2024-02-20"},{"lineNumber":88,"author":{"gitId":"Vision-2000"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2024-02-11"},{"lineNumber":89,"author":{"gitId":"Vision-2000"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2024-02-11"},{"lineNumber":90,"author":{"gitId":"Vision-2000"},"content":"            handleUserInput();","lastModifiedDate":"2024-02-11"},{"lineNumber":91,"author":{"gitId":"Vision-2000"},"content":"        });","lastModifiedDate":"2024-02-11"},{"lineNumber":92,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":93,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":94,"author":{"gitId":"Vision-2000"},"content":"    private void setTextField() {","lastModifiedDate":"2024-02-20"},{"lineNumber":95,"author":{"gitId":"Vision-2000"},"content":"        this.userInput \u003d new TextField();","lastModifiedDate":"2024-02-20"},{"lineNumber":96,"author":{"gitId":"Vision-2000"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2024-02-17"},{"lineNumber":97,"author":{"gitId":"Vision-2000"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2024-02-11"},{"lineNumber":98,"author":{"gitId":"Vision-2000"},"content":"            handleUserInput();","lastModifiedDate":"2024-02-11"},{"lineNumber":99,"author":{"gitId":"Vision-2000"},"content":"        });","lastModifiedDate":"2024-02-11"},{"lineNumber":100,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":101,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":102,"author":{"gitId":"Vision-2000"},"content":"    private void setAnchors() {","lastModifiedDate":"2024-02-20"},{"lineNumber":103,"author":{"gitId":"Vision-2000"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2024-02-11"},{"lineNumber":104,"author":{"gitId":"Vision-2000"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2024-02-11"},{"lineNumber":105,"author":{"gitId":"Vision-2000"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2024-02-11"},{"lineNumber":106,"author":{"gitId":"Vision-2000"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2024-02-11"},{"lineNumber":107,"author":{"gitId":"Vision-2000"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2024-02-11"},{"lineNumber":108,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":109,"author":{"gitId":"Vision-2000"},"content":"}","lastModifiedDate":"2024-02-11"},{"lineNumber":110,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"Vision-2000":110}},{"path":"src/main/java/ui/UserInterface.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vision-2000"},"content":"package ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"Vision-2000"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"Vision-2000"},"content":"import exceptions.DukeException;","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"Vision-2000"},"content":"import javafx.application.Platform;","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"Vision-2000"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"Vision-2000"},"content":"import parser.Parser;","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"Vision-2000"},"content":"import storage.Storage;","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"Vision-2000"},"content":"import storage.TaskList;","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"Vision-2000"},"content":"import tasks.Task;","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"Vision-2000"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"Vision-2000"},"content":" * Manages interaction between MainWindow, TaskList, and Storage.","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"Vision-2000"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"Vision-2000"},"content":"public class UserInterface {","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"Vision-2000"},"content":"    public static final String OPENING_MSG \u003d \"Hello! I\u0027m Stille\\n\" + \"What can I do for you?\\n\";","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"Vision-2000"},"content":"    public static final String CLOSING_MSG \u003d \"Bye. Hope to see you again soon!\\n\";","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"Vision-2000"},"content":"    public static final String ERROR_MSG \u003d \"Error: \";","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"Vision-2000"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"Vision-2000"},"content":"    private Scene scene;","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"Vision-2000"},"content":"    private TaskList list;","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"Vision-2000"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-17"},{"lineNumber":26,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":27,"author":{"gitId":"Vision-2000"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":28,"author":{"gitId":"Vision-2000"},"content":"     * Instantiates UserInterface object.","lastModifiedDate":"2024-02-17"},{"lineNumber":29,"author":{"gitId":"Vision-2000"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":30,"author":{"gitId":"Vision-2000"},"content":"    public UserInterface(TaskList list, Storage storage) {","lastModifiedDate":"2024-02-17"},{"lineNumber":31,"author":{"gitId":"Vision-2000"},"content":"        this.list \u003d list;","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"Vision-2000"},"content":"        this.mainWindow \u003d new MainWindow(this);","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"Vision-2000"},"content":"        this.scene \u003d new Scene(this.mainWindow);","lastModifiedDate":"2024-02-11"},{"lineNumber":34,"author":{"gitId":"Vision-2000"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2024-02-17"},{"lineNumber":35,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":36,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":37,"author":{"gitId":"Vision-2000"},"content":"    public Scene getScene() {","lastModifiedDate":"2024-02-11"},{"lineNumber":38,"author":{"gitId":"Vision-2000"},"content":"        return this.scene;","lastModifiedDate":"2024-02-11"},{"lineNumber":39,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":41,"author":{"gitId":"Vision-2000"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":42,"author":{"gitId":"Vision-2000"},"content":"     * Executes the command corresponding to the given user input.","lastModifiedDate":"2024-02-17"},{"lineNumber":43,"author":{"gitId":"Vision-2000"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":44,"author":{"gitId":"Vision-2000"},"content":"     * @param input String to be parsed to a Command.","lastModifiedDate":"2024-02-17"},{"lineNumber":45,"author":{"gitId":"Vision-2000"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":46,"author":{"gitId":"Vision-2000"},"content":"    public void runCommand(String input) {","lastModifiedDate":"2024-02-11"},{"lineNumber":47,"author":{"gitId":"Vision-2000"},"content":"        boolean isExit;","lastModifiedDate":"2024-02-11"},{"lineNumber":48,"author":{"gitId":"Vision-2000"},"content":"        try {","lastModifiedDate":"2024-02-11"},{"lineNumber":49,"author":{"gitId":"Vision-2000"},"content":"            isExit \u003d Parser.parseInput(input).execute(this.list, this);","lastModifiedDate":"2024-02-11"},{"lineNumber":50,"author":{"gitId":"Vision-2000"},"content":"            if (isExit) {","lastModifiedDate":"2024-02-11"},{"lineNumber":51,"author":{"gitId":"Vision-2000"},"content":"                Platform.exit();","lastModifiedDate":"2024-02-11"},{"lineNumber":52,"author":{"gitId":"Vision-2000"},"content":"            }","lastModifiedDate":"2024-02-11"},{"lineNumber":53,"author":{"gitId":"Vision-2000"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-11"},{"lineNumber":54,"author":{"gitId":"Vision-2000"},"content":"            this.showError(e);","lastModifiedDate":"2024-02-11"},{"lineNumber":55,"author":{"gitId":"Vision-2000"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-17"},{"lineNumber":56,"author":{"gitId":"Vision-2000"},"content":"            this.showMessage(\"Please enter dates in the form yyyy-mm-dd\");","lastModifiedDate":"2024-02-17"},{"lineNumber":57,"author":{"gitId":"Vision-2000"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":58,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":59,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":60,"author":{"gitId":"Vision-2000"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":61,"author":{"gitId":"Vision-2000"},"content":"     * Displays the given message to the user.","lastModifiedDate":"2024-02-17"},{"lineNumber":62,"author":{"gitId":"Vision-2000"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":63,"author":{"gitId":"Vision-2000"},"content":"    public void showMessage(String message) {","lastModifiedDate":"2024-02-06"},{"lineNumber":64,"author":{"gitId":"Vision-2000"},"content":"        this.mainWindow.displayText(message);","lastModifiedDate":"2024-02-11"},{"lineNumber":65,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":66,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":67,"author":{"gitId":"Vision-2000"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":68,"author":{"gitId":"Vision-2000"},"content":"     * Displays the predefined opening message.","lastModifiedDate":"2024-02-17"},{"lineNumber":69,"author":{"gitId":"Vision-2000"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":70,"author":{"gitId":"Vision-2000"},"content":"    public void showOpeningMessage() {","lastModifiedDate":"2024-02-06"},{"lineNumber":71,"author":{"gitId":"Vision-2000"},"content":"        this.showMessage(OPENING_MSG);","lastModifiedDate":"2024-02-08"},{"lineNumber":72,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":73,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":74,"author":{"gitId":"Vision-2000"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":75,"author":{"gitId":"Vision-2000"},"content":"     * Displays the predefined closing message.","lastModifiedDate":"2024-02-17"},{"lineNumber":76,"author":{"gitId":"Vision-2000"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":77,"author":{"gitId":"Vision-2000"},"content":"    public void showClosingMessage() {","lastModifiedDate":"2024-02-06"},{"lineNumber":78,"author":{"gitId":"Vision-2000"},"content":"        this.showMessage(CLOSING_MSG);","lastModifiedDate":"2024-02-08"},{"lineNumber":79,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":80,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":81,"author":{"gitId":"Vision-2000"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":82,"author":{"gitId":"Vision-2000"},"content":"     * Displays an error warning along with the error message.","lastModifiedDate":"2024-02-17"},{"lineNumber":83,"author":{"gitId":"Vision-2000"},"content":"     * @param e Exception containing the message to be displayed.","lastModifiedDate":"2024-02-17"},{"lineNumber":84,"author":{"gitId":"Vision-2000"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":85,"author":{"gitId":"Vision-2000"},"content":"    public void showError(Exception e) {","lastModifiedDate":"2024-02-06"},{"lineNumber":86,"author":{"gitId":"Vision-2000"},"content":"        this.showMessage(ERROR_MSG + e.getMessage());","lastModifiedDate":"2024-02-08"},{"lineNumber":87,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":88,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":89,"author":{"gitId":"Vision-2000"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":90,"author":{"gitId":"Vision-2000"},"content":"     * Displays the given String assumed to be the String representation of TaskList.","lastModifiedDate":"2024-02-17"},{"lineNumber":91,"author":{"gitId":"Vision-2000"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":92,"author":{"gitId":"Vision-2000"},"content":"    public void showList(String list) {","lastModifiedDate":"2024-02-06"},{"lineNumber":93,"author":{"gitId":"Vision-2000"},"content":"        this.showMessage(\"Here are the tasks in your list:\\n\" + list);","lastModifiedDate":"2024-02-06"},{"lineNumber":94,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":95,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":96,"author":{"gitId":"Vision-2000"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":97,"author":{"gitId":"Vision-2000"},"content":"     * Displays a message indicating that a task has been marked done along with the String representation","lastModifiedDate":"2024-02-17"},{"lineNumber":98,"author":{"gitId":"Vision-2000"},"content":"     * of the task itself.","lastModifiedDate":"2024-02-17"},{"lineNumber":99,"author":{"gitId":"Vision-2000"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":100,"author":{"gitId":"Vision-2000"},"content":"    public void showMarkDone(Task task) {","lastModifiedDate":"2024-02-06"},{"lineNumber":101,"author":{"gitId":"Vision-2000"},"content":"        this.showMessage(\"Nice! I\u0027ve marked this task as done:\\n \" + task);","lastModifiedDate":"2024-02-06"},{"lineNumber":102,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":103,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":104,"author":{"gitId":"Vision-2000"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":105,"author":{"gitId":"Vision-2000"},"content":"     * Displays a message indicating that a task has been marked not done along with the String representation","lastModifiedDate":"2024-02-17"},{"lineNumber":106,"author":{"gitId":"Vision-2000"},"content":"     * of the task itself.","lastModifiedDate":"2024-02-17"},{"lineNumber":107,"author":{"gitId":"Vision-2000"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":108,"author":{"gitId":"Vision-2000"},"content":"    public void showMarkNotDone(Task task) {","lastModifiedDate":"2024-02-06"},{"lineNumber":109,"author":{"gitId":"Vision-2000"},"content":"        this.showMessage(\"OK, I\u0027ve marked this task as not done yet:\\n \" + task);","lastModifiedDate":"2024-02-06"},{"lineNumber":110,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":111,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":112,"author":{"gitId":"Vision-2000"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":113,"author":{"gitId":"Vision-2000"},"content":"     * Displays a message indicating that a task has been deleted from the list along with the String representation","lastModifiedDate":"2024-02-17"},{"lineNumber":114,"author":{"gitId":"Vision-2000"},"content":"     * of the task itself.","lastModifiedDate":"2024-02-17"},{"lineNumber":115,"author":{"gitId":"Vision-2000"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":116,"author":{"gitId":"Vision-2000"},"content":"    public void showDelete(Task task) {","lastModifiedDate":"2024-02-06"},{"lineNumber":117,"author":{"gitId":"Vision-2000"},"content":"        this.showMessage(\"Noted. I\u0027ve removed this task:\\n \" + task);","lastModifiedDate":"2024-02-06"},{"lineNumber":118,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":119,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":120,"author":{"gitId":"Vision-2000"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":121,"author":{"gitId":"Vision-2000"},"content":"     * Displays a message indicating that a task has been added to the list along with the String representation","lastModifiedDate":"2024-02-17"},{"lineNumber":122,"author":{"gitId":"Vision-2000"},"content":"     * of the task itself.","lastModifiedDate":"2024-02-17"},{"lineNumber":123,"author":{"gitId":"Vision-2000"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":124,"author":{"gitId":"Vision-2000"},"content":"    public void showAdd(Task task) {","lastModifiedDate":"2024-02-06"},{"lineNumber":125,"author":{"gitId":"Vision-2000"},"content":"        this.showMessage(\"Got it. I\u0027ve added this task:\\n \" + task);","lastModifiedDate":"2024-02-06"},{"lineNumber":126,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":127,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":128,"author":{"gitId":"Vision-2000"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":129,"author":{"gitId":"Vision-2000"},"content":"     * Displays the size of the current list.","lastModifiedDate":"2024-02-17"},{"lineNumber":130,"author":{"gitId":"Vision-2000"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":131,"author":{"gitId":"Vision-2000"},"content":"    public void showListSize(int size) {","lastModifiedDate":"2024-02-06"},{"lineNumber":132,"author":{"gitId":"Vision-2000"},"content":"        this.showMessage(\"Now you have \" + size + \" tasks in the list.\\n\");","lastModifiedDate":"2024-02-17"},{"lineNumber":133,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":134,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":135,"author":{"gitId":"Vision-2000"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":136,"author":{"gitId":"Vision-2000"},"content":"     * Displays the given String assumed to be the String representation of the list of tasks found.","lastModifiedDate":"2024-02-17"},{"lineNumber":137,"author":{"gitId":"Vision-2000"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":138,"author":{"gitId":"Vision-2000"},"content":"    public void showFound(String list) {","lastModifiedDate":"2024-02-07"},{"lineNumber":139,"author":{"gitId":"Vision-2000"},"content":"        this.showMessage(\"Here are the matching tasks in your list:\\n\" + list);","lastModifiedDate":"2024-02-07"},{"lineNumber":140,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":141,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":142,"author":{"gitId":"Vision-2000"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":143,"author":{"gitId":"Vision-2000"},"content":"     * Displays the String representation of the task after update.","lastModifiedDate":"2024-02-20"},{"lineNumber":144,"author":{"gitId":"Vision-2000"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":145,"author":{"gitId":"Vision-2000"},"content":"    public void showUpdate(Task task) {","lastModifiedDate":"2024-02-20"},{"lineNumber":146,"author":{"gitId":"Vision-2000"},"content":"        this.showMessage(\"Sure! Here\u0027s how the task looks like now:\\n \" + task);","lastModifiedDate":"2024-02-20"},{"lineNumber":147,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":148,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":149,"author":{"gitId":"Vision-2000"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"Vision-2000":149}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Vision-2000"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"Vision-2000"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"Vision-2000"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"Vision-2000"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"Vision-2000"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"Vision-2000"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"Vision-2000"},"content":"         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"Vision-2000"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"Vision-2000"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"Vision-2000"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"Vision-2000"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"Vision-2000"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"Vision-2000"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"Vision-2000"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"Vision-2000"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"Vision-2000":17}},{"path":"src/test/java/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vision-2000"},"content":"package parser;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"Vision-2000"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"Vision-2000"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"Vision-2000"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"Vision-2000"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"Vision-2000"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"Vision-2000"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"Vision-2000"},"content":"import commands.AddCommand;","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"Vision-2000"},"content":"import commands.DeleteCommand;","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"Vision-2000"},"content":"import commands.ExitCommand;","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"Vision-2000"},"content":"import commands.FindCommand;","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"Vision-2000"},"content":"import exceptions.ArgumentException;","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"Vision-2000"},"content":"import exceptions.CommandException;","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"Vision-2000"},"content":"public class ParserTest {","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"Vision-2000"},"content":"    @Test","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"Vision-2000"},"content":"    public void parseExitCmdTest() {","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"Vision-2000"},"content":"        assertThrows(CommandException.class, () -\u003e Parser.parseInput(\"\"));","lastModifiedDate":"2024-02-17"},{"lineNumber":26,"author":{"gitId":"Vision-2000"},"content":"        assertDoesNotThrow(() -\u003e assertTrue(Parser.parseInput(\"    bye    \") instanceof ExitCommand));","lastModifiedDate":"2024-02-17"},{"lineNumber":27,"author":{"gitId":"Vision-2000"},"content":"        assertThrows(CommandException.class, () -\u003e Parser.parseInput(\"Bye\"));","lastModifiedDate":"2024-02-17"},{"lineNumber":28,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":29,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":30,"author":{"gitId":"Vision-2000"},"content":"    @Test","lastModifiedDate":"2024-02-17"},{"lineNumber":31,"author":{"gitId":"Vision-2000"},"content":"    public void parseTodoCmdTest() {","lastModifiedDate":"2024-02-17"},{"lineNumber":32,"author":{"gitId":"Vision-2000"},"content":"        assertThrows(ArgumentException.class, () -\u003e Parser.parseInput(\" todo     \"));","lastModifiedDate":"2024-02-17"},{"lineNumber":33,"author":{"gitId":"Vision-2000"},"content":"        assertThrows(CommandException.class, () -\u003e Parser.parseInput(\" 123,   todo     \"));","lastModifiedDate":"2024-02-17"},{"lineNumber":34,"author":{"gitId":"Vision-2000"},"content":"        assertDoesNotThrow(() -\u003e assertTrue(Parser.parseInput(\"    todo     //f/r/123    \") instanceof AddCommand));","lastModifiedDate":"2024-02-17"},{"lineNumber":35,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":36,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":37,"author":{"gitId":"Vision-2000"},"content":"    @Test","lastModifiedDate":"2024-02-17"},{"lineNumber":38,"author":{"gitId":"Vision-2000"},"content":"    public void parseDeadlineCmdTest() {","lastModifiedDate":"2024-02-17"},{"lineNumber":39,"author":{"gitId":"Vision-2000"},"content":"        assertThrows(ArgumentException.class, () -\u003e Parser.parseInput(\" deadline     \"));","lastModifiedDate":"2024-02-17"},{"lineNumber":40,"author":{"gitId":"Vision-2000"},"content":"        assertThrows(ArgumentException.class, () -\u003e Parser.parseInput(\" deadline   123   \"));","lastModifiedDate":"2024-02-17"},{"lineNumber":41,"author":{"gitId":"Vision-2000"},"content":"        assertThrows(CommandException.class, () -\u003e Parser.parseInput(\" deadline123     \"));","lastModifiedDate":"2024-02-17"},{"lineNumber":42,"author":{"gitId":"Vision-2000"},"content":"        assertThrows(ArgumentException.class, () -\u003e Parser.parseInput(\"deadline lglwlw by tmr     \"));","lastModifiedDate":"2024-02-17"},{"lineNumber":43,"author":{"gitId":"Vision-2000"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e Parser.parseInput(\"deadline oqhhhq8h /by 2020 Christmas   \"));","lastModifiedDate":"2024-02-17"},{"lineNumber":44,"author":{"gitId":"Vision-2000"},"content":"        assertDoesNotThrow(() -\u003eassertTrue(Parser.parseInput(\"deadline //f/r/123  /by2020-12-25  \")","lastModifiedDate":"2024-02-17"},{"lineNumber":45,"author":{"gitId":"Vision-2000"},"content":"                instanceof AddCommand));","lastModifiedDate":"2024-02-17"},{"lineNumber":46,"author":{"gitId":"Vision-2000"},"content":"        assertDoesNotThrow(() -\u003eassertTrue(Parser.parseInput(\"deadline //f/r/123  /by            2020-12-25  \")","lastModifiedDate":"2024-02-17"},{"lineNumber":47,"author":{"gitId":"Vision-2000"},"content":"                instanceof AddCommand));","lastModifiedDate":"2024-02-17"},{"lineNumber":48,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":49,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":50,"author":{"gitId":"Vision-2000"},"content":"    @Test","lastModifiedDate":"2024-02-17"},{"lineNumber":51,"author":{"gitId":"Vision-2000"},"content":"    public void parseEventCmdTest() {","lastModifiedDate":"2024-02-17"},{"lineNumber":52,"author":{"gitId":"Vision-2000"},"content":"        assertThrows(ArgumentException.class, () -\u003e Parser.parseInput(\"event lglwlw /from 2020-12-25  /  to    \"));","lastModifiedDate":"2024-02-17"},{"lineNumber":53,"author":{"gitId":"Vision-2000"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e Parser.parseInput(\"event lglwlw /from 2020-12-25  /to    \"));","lastModifiedDate":"2024-02-17"},{"lineNumber":54,"author":{"gitId":"Vision-2000"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e Parser.parseInput(","lastModifiedDate":"2024-02-17"},{"lineNumber":55,"author":{"gitId":"Vision-2000"},"content":"                \"event oqhhhq8h /from 2020 Christmas   /to   2021-12-25\"));","lastModifiedDate":"2024-02-17"},{"lineNumber":56,"author":{"gitId":"Vision-2000"},"content":"        assertDoesNotThrow(() -\u003eassertTrue(Parser.parseInput(\"event //f/r/123  /from2020-12-25  /to  2021-12-25   \")","lastModifiedDate":"2024-02-17"},{"lineNumber":57,"author":{"gitId":"Vision-2000"},"content":"                instanceof AddCommand));","lastModifiedDate":"2024-02-17"},{"lineNumber":58,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":59,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":60,"author":{"gitId":"Vision-2000"},"content":"    @Test","lastModifiedDate":"2024-02-17"},{"lineNumber":61,"author":{"gitId":"Vision-2000"},"content":"    public void parseOtherCmdsTest() {","lastModifiedDate":"2024-02-17"},{"lineNumber":62,"author":{"gitId":"Vision-2000"},"content":"        assertThrows(ArgumentException.class, () -\u003e Parser.parseInput(\"                    mark                  \"));","lastModifiedDate":"2024-02-17"},{"lineNumber":63,"author":{"gitId":"Vision-2000"},"content":"        assertThrows(ArgumentException.class, () -\u003e Parser.parseInput(\" unmark          TWO\"));","lastModifiedDate":"2024-02-17"},{"lineNumber":64,"author":{"gitId":"Vision-2000"},"content":"        assertDoesNotThrow(() -\u003eassertTrue(Parser.parseInput(\"delete 100\")","lastModifiedDate":"2024-02-17"},{"lineNumber":65,"author":{"gitId":"Vision-2000"},"content":"                instanceof DeleteCommand));","lastModifiedDate":"2024-02-17"},{"lineNumber":66,"author":{"gitId":"Vision-2000"},"content":"        assertDoesNotThrow(() -\u003eassertTrue(Parser.parseInput(\"find multiple  words\")","lastModifiedDate":"2024-02-17"},{"lineNumber":67,"author":{"gitId":"Vision-2000"},"content":"                instanceof FindCommand));","lastModifiedDate":"2024-02-17"},{"lineNumber":68,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":69,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":70,"author":{"gitId":"Vision-2000"},"content":"    @Test","lastModifiedDate":"2024-02-07"},{"lineNumber":71,"author":{"gitId":"Vision-2000"},"content":"    public void parseEventArgTest() {","lastModifiedDate":"2024-02-07"},{"lineNumber":72,"author":{"gitId":"Vision-2000"},"content":"        assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2024-02-07"},{"lineNumber":73,"author":{"gitId":"Vision-2000"},"content":"            String[] testArray \u003d Parser.parseEventArgument(\"Description /from 2019-12-02 /to 2019-12-03\");","lastModifiedDate":"2024-02-07"},{"lineNumber":74,"author":{"gitId":"Vision-2000"},"content":"            assertEquals(testArray[0], \"Description \");","lastModifiedDate":"2024-02-07"},{"lineNumber":75,"author":{"gitId":"Vision-2000"},"content":"            assertEquals(testArray[1], \" 2019-12-02 \");","lastModifiedDate":"2024-02-07"},{"lineNumber":76,"author":{"gitId":"Vision-2000"},"content":"            assertEquals(testArray[2], \" 2019-12-03\");","lastModifiedDate":"2024-02-07"},{"lineNumber":77,"author":{"gitId":"Vision-2000"},"content":"        });","lastModifiedDate":"2024-02-07"},{"lineNumber":78,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":79,"author":{"gitId":"Vision-2000"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"Vision-2000":79}},{"path":"src/test/java/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vision-2000"},"content":"package storage;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"Vision-2000"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"Vision-2000"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"Vision-2000"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"Vision-2000"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"Vision-2000"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"Vision-2000"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"Vision-2000"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"Vision-2000"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"Vision-2000"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"Vision-2000"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"Vision-2000"},"content":"import java.util.List;","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"Vision-2000"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"Vision-2000"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"Vision-2000"},"content":"public class StorageTest {","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"Vision-2000"},"content":"    private static final String TEST_PATH \u003d \"./testdata/data.txt\";","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":23,"author":{"gitId":"Vision-2000"},"content":"    @BeforeAll","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"Vision-2000"},"content":"    public static void beforeAll() {","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"Vision-2000"},"content":"        Path path \u003d Paths.get(TEST_PATH);","lastModifiedDate":"2024-02-17"},{"lineNumber":26,"author":{"gitId":"Vision-2000"},"content":"        try {","lastModifiedDate":"2024-02-17"},{"lineNumber":27,"author":{"gitId":"Vision-2000"},"content":"            Files.deleteIfExists(path);","lastModifiedDate":"2024-02-17"},{"lineNumber":28,"author":{"gitId":"Vision-2000"},"content":"            Files.deleteIfExists(path.getParent());","lastModifiedDate":"2024-02-17"},{"lineNumber":29,"author":{"gitId":"Vision-2000"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-17"},{"lineNumber":30,"author":{"gitId":"Vision-2000"},"content":"            fail(\"Failed to delete files at setup\");","lastModifiedDate":"2024-02-17"},{"lineNumber":31,"author":{"gitId":"Vision-2000"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":32,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":33,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":34,"author":{"gitId":"Vision-2000"},"content":"    @Test","lastModifiedDate":"2024-02-17"},{"lineNumber":35,"author":{"gitId":"Vision-2000"},"content":"    public void initializeStorageTest() {","lastModifiedDate":"2024-02-17"},{"lineNumber":36,"author":{"gitId":"Vision-2000"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2024-02-17"},{"lineNumber":37,"author":{"gitId":"Vision-2000"},"content":"        assertEquals(storage.pathString, \"./data/data.txt\");","lastModifiedDate":"2024-02-17"},{"lineNumber":38,"author":{"gitId":"Vision-2000"},"content":"        assertEquals(storage.path, Paths.get(\"./data/data.txt\"));","lastModifiedDate":"2024-02-17"},{"lineNumber":39,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":40,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":41,"author":{"gitId":"Vision-2000"},"content":"    @Test","lastModifiedDate":"2024-02-17"},{"lineNumber":42,"author":{"gitId":"Vision-2000"},"content":"    public void changePathTest() {","lastModifiedDate":"2024-02-17"},{"lineNumber":43,"author":{"gitId":"Vision-2000"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2024-02-17"},{"lineNumber":44,"author":{"gitId":"Vision-2000"},"content":"        storage.switchPath(TEST_PATH);","lastModifiedDate":"2024-02-17"},{"lineNumber":45,"author":{"gitId":"Vision-2000"},"content":"        assertEquals(storage.pathString, TEST_PATH);","lastModifiedDate":"2024-02-17"},{"lineNumber":46,"author":{"gitId":"Vision-2000"},"content":"        assertEquals(storage.path, Paths.get(TEST_PATH));","lastModifiedDate":"2024-02-17"},{"lineNumber":47,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":48,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":49,"author":{"gitId":"Vision-2000"},"content":"    @Test","lastModifiedDate":"2024-02-17"},{"lineNumber":50,"author":{"gitId":"Vision-2000"},"content":"    public void alternateConstructorTest() {","lastModifiedDate":"2024-02-17"},{"lineNumber":51,"author":{"gitId":"Vision-2000"},"content":"        Storage storage \u003d new Storage(TEST_PATH);","lastModifiedDate":"2024-02-17"},{"lineNumber":52,"author":{"gitId":"Vision-2000"},"content":"        assertEquals(storage.pathString, TEST_PATH);","lastModifiedDate":"2024-02-17"},{"lineNumber":53,"author":{"gitId":"Vision-2000"},"content":"        assertEquals(storage.path, Paths.get(TEST_PATH));","lastModifiedDate":"2024-02-17"},{"lineNumber":54,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":55,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":56,"author":{"gitId":"Vision-2000"},"content":"    @Test","lastModifiedDate":"2024-02-17"},{"lineNumber":57,"author":{"gitId":"Vision-2000"},"content":"    public void equalsTest() {","lastModifiedDate":"2024-02-17"},{"lineNumber":58,"author":{"gitId":"Vision-2000"},"content":"        Storage storage \u003d new Storage(TEST_PATH);","lastModifiedDate":"2024-02-17"},{"lineNumber":59,"author":{"gitId":"Vision-2000"},"content":"        Storage storage2 \u003d null;","lastModifiedDate":"2024-02-17"},{"lineNumber":60,"author":{"gitId":"Vision-2000"},"content":"        assertFalse(storage.equals(storage2));","lastModifiedDate":"2024-02-17"},{"lineNumber":61,"author":{"gitId":"Vision-2000"},"content":"        assertFalse(storage.equals(new Object()));","lastModifiedDate":"2024-02-17"},{"lineNumber":62,"author":{"gitId":"Vision-2000"},"content":"        storage2 \u003d new Storage();","lastModifiedDate":"2024-02-17"},{"lineNumber":63,"author":{"gitId":"Vision-2000"},"content":"        assertFalse(storage.equals(storage2));","lastModifiedDate":"2024-02-17"},{"lineNumber":64,"author":{"gitId":"Vision-2000"},"content":"        storage2.switchPath(TEST_PATH);","lastModifiedDate":"2024-02-17"},{"lineNumber":65,"author":{"gitId":"Vision-2000"},"content":"        assertTrue(storage.equals(storage2));","lastModifiedDate":"2024-02-17"},{"lineNumber":66,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":67,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":68,"author":{"gitId":"Vision-2000"},"content":"    @Test","lastModifiedDate":"2024-02-17"},{"lineNumber":69,"author":{"gitId":"Vision-2000"},"content":"    public void createPathIfMissingTest() {","lastModifiedDate":"2024-02-17"},{"lineNumber":70,"author":{"gitId":"Vision-2000"},"content":"        Storage storage \u003d new Storage(TEST_PATH);","lastModifiedDate":"2024-02-17"},{"lineNumber":71,"author":{"gitId":"Vision-2000"},"content":"        assertDoesNotThrow(() -\u003e storage.createPathIfMissing());","lastModifiedDate":"2024-02-17"},{"lineNumber":72,"author":{"gitId":"Vision-2000"},"content":"        assertTrue(Files.exists(storage.path));","lastModifiedDate":"2024-02-17"},{"lineNumber":73,"author":{"gitId":"Vision-2000"},"content":"        assertDoesNotThrow(() -\u003e storage.createPathIfMissing());","lastModifiedDate":"2024-02-17"},{"lineNumber":74,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":75,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":76,"author":{"gitId":"Vision-2000"},"content":"    @Test","lastModifiedDate":"2024-02-17"},{"lineNumber":77,"author":{"gitId":"Vision-2000"},"content":"    public void saveLoadTest() {","lastModifiedDate":"2024-02-17"},{"lineNumber":78,"author":{"gitId":"Vision-2000"},"content":"        List\u003cString\u003e tasks \u003d new ArrayList\u003c\u003e(10);","lastModifiedDate":"2024-02-17"},{"lineNumber":79,"author":{"gitId":"Vision-2000"},"content":"        tasks.add(\"First Task\");","lastModifiedDate":"2024-02-17"},{"lineNumber":80,"author":{"gitId":"Vision-2000"},"content":"        tasks.add(\"Second Task\");","lastModifiedDate":"2024-02-17"},{"lineNumber":81,"author":{"gitId":"Vision-2000"},"content":"        Storage storage \u003d new Storage(TEST_PATH);","lastModifiedDate":"2024-02-17"},{"lineNumber":82,"author":{"gitId":"Vision-2000"},"content":"        List\u003cString\u003e returnedTasks;","lastModifiedDate":"2024-02-17"},{"lineNumber":83,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":84,"author":{"gitId":"Vision-2000"},"content":"        assertDoesNotThrow(() -\u003e storage.save(tasks));","lastModifiedDate":"2024-02-17"},{"lineNumber":85,"author":{"gitId":"Vision-2000"},"content":"        assertDoesNotThrow(() -\u003e assertEquals(storage.load(), tasks));","lastModifiedDate":"2024-02-17"},{"lineNumber":86,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":87,"author":{"gitId":"Vision-2000"},"content":"}","lastModifiedDate":"2024-02-17"}],"authorContributionMap":{"Vision-2000":87}},{"path":"src/test/java/tasks/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vision-2000"},"content":"package tasks;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"Vision-2000"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"Vision-2000"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"Vision-2000"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"Vision-2000"},"content":"public class EventTest {","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"Vision-2000"},"content":"    @Test","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"Vision-2000"},"content":"    public void eventFormatTest() {","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"Vision-2000"},"content":"        Event e \u003d new Event(\"Description\", LocalDate.parse(\"2019-12-02\"),","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"Vision-2000"},"content":"                LocalDate.parse(\"2019-12-02\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"Vision-2000"},"content":"        assertEquals(\"[E][ ] Description (from: Dec 2 2019 to: Dec 2 2019)\", e.toString());","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"Vision-2000"},"content":"        assertEquals(\"E N Description /from 2019-12-02 /to 2019-12-02\", e.toSaveFormat());","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"Vision-2000"},"content":"        e.isDone \u003d true;","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"Vision-2000"},"content":"        assertEquals(\"[E][X] Description (from: Dec 2 2019 to: Dec 2 2019)\", e.toString());","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"Vision-2000"},"content":"        assertEquals(\"E Y Description /from 2019-12-02 /to 2019-12-02\", e.toSaveFormat());","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"Vision-2000"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"Vision-2000":24}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Vision-2000"},"content":"list","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"Vision-2000"},"content":"bye","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"Vision-2000":2}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"Vision-2000"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java ..\\src\\main\\java\\tasks\\*.java","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Vision-2000"},"content":"java -classpath ..\\bin Stille \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":19,"Vision-2000":2}}]
