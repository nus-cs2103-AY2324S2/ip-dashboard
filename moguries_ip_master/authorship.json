[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"moguries"},"content":"T | 1 | buy bday present","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"moguries"},"content":"D | 1 | watch lecture 3 | Jan 31 2024 6:00pm","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"moguries"},"content":"E | 0 | tchouk ivp | Feb 03 2024 2:00pm | Feb 03 2024 7:00pm","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"moguries"},"content":"D | 0 | do tmrs tut | Feb 02 2024 12:00am","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"moguries"},"content":"T | 1 | buy fatnoms food","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"moguries"},"content":"D | 1 | feed fatnom | Mar 07 2024 12:00am","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"moguries"},"content":"D | 0 | return book | Apr 05 2024 6:35pm","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"moguries"},"content":"E | 0 | fatnoms birthday party | Apr 01 2024 5:30pm | Apr 01 2024 11:15pm","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"moguries":8}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"moguries"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"moguries"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"moguries"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"moguries"},"content":" * Encapsulates the data and behaviour of a Deadline task.","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"moguries"},"content":" *","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"moguries"},"content":" * @author Huang Zhuoyan, Celeste","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"moguries"},"content":" * @version CS2103T AY24/25 Semester 1, G07","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"moguries"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"moguries"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"moguries"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"moguries"},"content":"    private static DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy h:mma\");","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"moguries"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"moguries"},"content":"     * Constructs a new Deadline task with the given name and deadline.","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"moguries"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"moguries"},"content":"     * @param name The name of the Deadline task.","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"moguries"},"content":"     * @param time The LocalDateTime object containing the deadline.","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"moguries"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"moguries"},"content":"    public Deadline(String name, LocalDateTime time) {","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"moguries"},"content":"        super(name);","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"moguries"},"content":"        this.deadline \u003d time;","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"moguries"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"moguries"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"moguries"},"content":"     * Formats the deadline of the task according to a standard format.","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"moguries"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"moguries"},"content":"     * @param time The LocalDateTime object to be formatted.","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"moguries"},"content":"     * @return The formatted deadline, as a String.","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"moguries"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"moguries"},"content":"    public String deadlineFormatter(LocalDateTime time) {","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"moguries"},"content":"        return time.format(formatter);","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"moguries"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"moguries"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"moguries"},"content":"    public String printTask() {","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"moguries"},"content":"        return \"[D]\" + super.printTask() + \" (by: \" + deadlineFormatter(this.deadline) + \")\";","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"moguries"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"moguries"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"moguries"},"content":"    public String saveTask() {","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"moguries"},"content":"        return \"D | \" + super.saveTask() + \" | \" + deadlineFormatter(this.deadline);","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"moguries"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"moguries"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"moguries":44}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"moguries"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"moguries"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"moguries"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"moguries"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"moguries"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"moguries"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"moguries"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"moguries"},"content":" * Encapsulates the data and behaviour of the chatbot.","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"moguries"},"content":" *","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"moguries"},"content":" * @author Huang Zhuoyan, Celeste","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"moguries"},"content":" * @version CS2103T AY24/25 Semester 1, G07","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"moguries"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"moguries"},"content":"    private static final String NAME \u003d \"Fatnom\";","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"moguries"},"content":"    private static Storage storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"moguries"},"content":"    private static final int LINE_LENGTH \u003d 60;","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"moguries"},"content":"    private static DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"moguries"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"moguries"},"content":"     * Creates a line, in the form of a String.","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"moguries"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"moguries"},"content":"     * @return The line.","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"moguries"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"moguries"},"content":"    public static String createLine() {","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"moguries"},"content":"        String line \u003d \"\";","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"moguries"},"content":"        for (int i \u003d 0; i \u003c LINE_LENGTH; i++) {","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"moguries"},"content":"            line +\u003d \"_\";","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"moguries"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"moguries"},"content":"        return line;","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"moguries"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"moguries"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"moguries"},"content":"     * Prints a line for UI.","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"moguries"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"moguries"},"content":"    public static void printLine() {","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"moguries"},"content":"        for (int i \u003d 0; i \u003c LINE_LENGTH; i++) {","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"moguries"},"content":"            System.out.print(\"_\");","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"moguries"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"moguries"},"content":"        System.out.print(\"\\n\");","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"moguries"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"moguries"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"moguries"},"content":"     * Prints a message bound by 2 lines for UI.","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"moguries"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"moguries"},"content":"     * @param message The message to be printed.","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"moguries"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"moguries"},"content":"    public static void printMessage(String message) {","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"moguries"},"content":"        Duke.printLine();","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"moguries"},"content":"        System.out.println(message);","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"moguries"},"content":"        Duke.printLine();","lastModifiedDate":"2024-01-25"},{"lineNumber":52,"author":{"gitId":"moguries"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":53,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":54,"author":{"gitId":"moguries"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"moguries"},"content":"     * Prints the message for when a task has successfully been added.","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"moguries"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"moguries"},"content":"     * @param taskMessage The message to be printed.","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"moguries"},"content":"     * @param totalNumOfTasks The total number of tasks in the task list after the new task has been added.","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"moguries"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"moguries"},"content":"    public static void printAddedTask(String taskMessage, int totalNumOfTasks) {","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"moguries"},"content":"        String addedTaskMessage \u003d \"got it!! i\u0027ve added this task:\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"moguries"},"content":"                + \"   \" + taskMessage + \"\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"moguries"},"content":"                + \"you now have \" + totalNumOfTasks + \" tasks in the task list!\";","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"moguries"},"content":"        Duke.printLine();","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"moguries"},"content":"        System.out.println(addedTaskMessage);","lastModifiedDate":"2024-01-28"},{"lineNumber":66,"author":{"gitId":"moguries"},"content":"        Duke.printLine();","lastModifiedDate":"2024-01-28"},{"lineNumber":67,"author":{"gitId":"moguries"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":68,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":69,"author":{"gitId":"moguries"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"moguries"},"content":"     * Prints the message for when a task has successfully been deleted.","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"moguries"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"moguries"},"content":"     * @param taskMessage The message to be printed.","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"moguries"},"content":"     * @param remainingNumOfTasks The remaining number of tasks in the task list after the task has been deleted.","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"moguries"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"moguries"},"content":"    public static void printDeletedTask(String taskMessage, int remainingNumOfTasks) {","lastModifiedDate":"2024-01-28"},{"lineNumber":76,"author":{"gitId":"moguries"},"content":"        String deletedTaskMessage \u003d \"got it!! i\u0027ve deleted this task:\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"moguries"},"content":"                + \"   \" + taskMessage + \"\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"moguries"},"content":"                + \"you now have \" + remainingNumOfTasks + \" tasks left in the task list!\";","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"moguries"},"content":"        Duke.printLine();","lastModifiedDate":"2024-01-28"},{"lineNumber":80,"author":{"gitId":"moguries"},"content":"        System.out.println(deletedTaskMessage);","lastModifiedDate":"2024-01-28"},{"lineNumber":81,"author":{"gitId":"moguries"},"content":"        Duke.printLine();","lastModifiedDate":"2024-01-28"},{"lineNumber":82,"author":{"gitId":"moguries"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":83,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":84,"author":{"gitId":"moguries"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"moguries"},"content":"     * Displays a welcome message and loads the save file (if any).","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"moguries"},"content":"     * Then, executes the commands inputted by the user.","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"moguries"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"moguries"},"content":"     * @param args Command line arguments.","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"moguries"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":91,"author":{"gitId":"moguries"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":92,"author":{"gitId":"moguries"},"content":"            Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-25"},{"lineNumber":93,"author":{"gitId":"moguries"},"content":"            ArrayList\u003cTask\u003e taskList\u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-25"},{"lineNumber":94,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":95,"author":{"gitId":"moguries"},"content":"            String welcomeMessage \u003d \"hello! i\u0027m \" + NAME + \"!!!\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"moguries"},"content":"                    + \"i\u0027m here to manage your tasklist!\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"moguries"},"content":"                    + \"what can i do for you?\";","lastModifiedDate":"2024-01-31"},{"lineNumber":98,"author":{"gitId":"moguries"},"content":"            Duke.printMessage(welcomeMessage);","lastModifiedDate":"2024-01-25"},{"lineNumber":99,"author":{"gitId":"moguries"},"content":"            try {","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"moguries"},"content":"                Duke.storage \u003d new Storage();","lastModifiedDate":"2024-02-01"},{"lineNumber":101,"author":{"gitId":"moguries"},"content":"                taskList \u003d Storage.loadData();","lastModifiedDate":"2024-01-31"},{"lineNumber":102,"author":{"gitId":"moguries"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":103,"author":{"gitId":"moguries"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":104,"author":{"gitId":"moguries"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":105,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":106,"author":{"gitId":"moguries"},"content":"            while (true) {","lastModifiedDate":"2024-01-25"},{"lineNumber":107,"author":{"gitId":"moguries"},"content":"                String input \u003d sc.nextLine();","lastModifiedDate":"2024-01-25"},{"lineNumber":108,"author":{"gitId":"moguries"},"content":"                String[] inputTokens \u003d input.split(\" \");","lastModifiedDate":"2024-01-28"},{"lineNumber":109,"author":{"gitId":"moguries"},"content":"                String[] deadlineFormatChecker \u003d input.split(\"/by\");","lastModifiedDate":"2024-02-01"},{"lineNumber":110,"author":{"gitId":"moguries"},"content":"                String[] eventFormatChecker \u003d input.split(\"/from\");","lastModifiedDate":"2024-02-01"},{"lineNumber":111,"author":{"gitId":"moguries"},"content":"                String command \u003d inputTokens[0];","lastModifiedDate":"2024-01-28"},{"lineNumber":112,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":113,"author":{"gitId":"moguries"},"content":"                //command: bye","lastModifiedDate":"2024-01-28"},{"lineNumber":114,"author":{"gitId":"moguries"},"content":"                if (command.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2024-01-28"},{"lineNumber":115,"author":{"gitId":"moguries"},"content":"                    Duke.printMessage(\"bye!! come visit me again! :D\");","lastModifiedDate":"2024-01-28"},{"lineNumber":116,"author":{"gitId":"moguries"},"content":"                    break;","lastModifiedDate":"2024-01-25"},{"lineNumber":117,"author":{"gitId":"moguries"},"content":"                //command: list","lastModifiedDate":"2024-01-28"},{"lineNumber":118,"author":{"gitId":"moguries"},"content":"                } else if (command.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2024-01-28"},{"lineNumber":119,"author":{"gitId":"moguries"},"content":"                    String listMessage \u003d \"alright! here is your task list:\\n\";","lastModifiedDate":"2024-01-28"},{"lineNumber":120,"author":{"gitId":"moguries"},"content":"                    if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2024-01-28"},{"lineNumber":121,"author":{"gitId":"moguries"},"content":"                        listMessage +\u003d \".\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":122,"author":{"gitId":"moguries"},"content":"                                + \".\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":123,"author":{"gitId":"moguries"},"content":"                                + \".\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":124,"author":{"gitId":"moguries"},"content":"                                + \".\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":125,"author":{"gitId":"moguries"},"content":"                                + \".\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":126,"author":{"gitId":"moguries"},"content":"                                + \".\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":127,"author":{"gitId":"moguries"},"content":"                                + \"SURPRISE!! nothing at all! what a good life!\";","lastModifiedDate":"2024-01-31"},{"lineNumber":128,"author":{"gitId":"moguries"},"content":"                    }","lastModifiedDate":"2024-01-28"},{"lineNumber":129,"author":{"gitId":"moguries"},"content":"                    for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2024-01-25"},{"lineNumber":130,"author":{"gitId":"moguries"},"content":"                        int index \u003d i + 1;","lastModifiedDate":"2024-01-25"},{"lineNumber":131,"author":{"gitId":"moguries"},"content":"                        String taskMessage \u003d taskList.get(i).printTask();","lastModifiedDate":"2024-01-28"},{"lineNumber":132,"author":{"gitId":"moguries"},"content":"                        if (i \u003d\u003d taskList.size() - 1) {","lastModifiedDate":"2024-01-25"},{"lineNumber":133,"author":{"gitId":"moguries"},"content":"                            listMessage +\u003d index + \". \" + taskMessage;","lastModifiedDate":"2024-01-28"},{"lineNumber":134,"author":{"gitId":"moguries"},"content":"                        } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":135,"author":{"gitId":"moguries"},"content":"                            listMessage +\u003d index + \". \" + taskMessage + \"\\n\";","lastModifiedDate":"2024-01-28"},{"lineNumber":136,"author":{"gitId":"moguries"},"content":"                        }","lastModifiedDate":"2024-01-25"},{"lineNumber":137,"author":{"gitId":"moguries"},"content":"                    }","lastModifiedDate":"2024-01-25"},{"lineNumber":138,"author":{"gitId":"moguries"},"content":"                    Duke.printMessage(listMessage);","lastModifiedDate":"2024-01-25"},{"lineNumber":139,"author":{"gitId":"moguries"},"content":"                //command: mark","lastModifiedDate":"2024-01-28"},{"lineNumber":140,"author":{"gitId":"moguries"},"content":"                } else if (command.equalsIgnoreCase(\"mark\")) {","lastModifiedDate":"2024-01-28"},{"lineNumber":141,"author":{"gitId":"moguries"},"content":"                    int taskNum \u003d Integer.parseInt(inputTokens[1]);","lastModifiedDate":"2024-01-28"},{"lineNumber":142,"author":{"gitId":"moguries"},"content":"                    if (taskNum \u003d\u003d 0) {","lastModifiedDate":"2024-01-28"},{"lineNumber":143,"author":{"gitId":"moguries"},"content":"                        String exceptionMessage \u003d Duke.createLine() + \"\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":144,"author":{"gitId":"moguries"},"content":"                                + \"task 0? how can i mark a task that doesn\u0027t exist?!\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":145,"author":{"gitId":"moguries"},"content":"                                + Duke.createLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":146,"author":{"gitId":"moguries"},"content":"                        throw new DukeException(exceptionMessage);","lastModifiedDate":"2024-01-28"},{"lineNumber":147,"author":{"gitId":"moguries"},"content":"                    } else if (taskNum \u003e taskList.size()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":148,"author":{"gitId":"moguries"},"content":"                        String exceptionMessage \u003d Duke.createLine() + \"\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":149,"author":{"gitId":"moguries"},"content":"                                + \"hahaha! you only have \" + taskList.size() + \" tasks in your task list!!\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":150,"author":{"gitId":"moguries"},"content":"                                + \"there\u0027s no task \" + taskNum + \"!\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":151,"author":{"gitId":"moguries"},"content":"                                + Duke.createLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":152,"author":{"gitId":"moguries"},"content":"                        throw new DukeException(exceptionMessage);","lastModifiedDate":"2024-01-28"},{"lineNumber":153,"author":{"gitId":"moguries"},"content":"                    }","lastModifiedDate":"2024-01-28"},{"lineNumber":154,"author":{"gitId":"moguries"},"content":"                    taskList.get(taskNum - 1).complete();","lastModifiedDate":"2024-01-28"},{"lineNumber":155,"author":{"gitId":"moguries"},"content":"                    String markedMessage \u003d \"good job!!! i\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":156,"author":{"gitId":"moguries"},"content":"                            + \"   \" + taskList.get(taskNum - 1).printTask();","lastModifiedDate":"2024-01-31"},{"lineNumber":157,"author":{"gitId":"moguries"},"content":"                    Duke.printMessage(markedMessage);","lastModifiedDate":"2024-01-28"},{"lineNumber":158,"author":{"gitId":"moguries"},"content":"                    Storage.saveData(taskList);","lastModifiedDate":"2024-01-31"},{"lineNumber":159,"author":{"gitId":"moguries"},"content":"                //command: unmark","lastModifiedDate":"2024-01-28"},{"lineNumber":160,"author":{"gitId":"moguries"},"content":"                } else if (command.equalsIgnoreCase(\"unmark\")) {","lastModifiedDate":"2024-01-28"},{"lineNumber":161,"author":{"gitId":"moguries"},"content":"                    int taskNum \u003d Integer.parseInt(inputTokens[1]);","lastModifiedDate":"2024-01-28"},{"lineNumber":162,"author":{"gitId":"moguries"},"content":"                    if (taskNum \u003d\u003d 0) {","lastModifiedDate":"2024-01-28"},{"lineNumber":163,"author":{"gitId":"moguries"},"content":"                        String exceptionMessage \u003d Duke.createLine() + \"\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":164,"author":{"gitId":"moguries"},"content":"                                + \"task 0? how can i unmark a task that doesn\u0027t exist?!\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":165,"author":{"gitId":"moguries"},"content":"                                + Duke.createLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":166,"author":{"gitId":"moguries"},"content":"                        throw new DukeException(exceptionMessage);","lastModifiedDate":"2024-01-28"},{"lineNumber":167,"author":{"gitId":"moguries"},"content":"                    } else if (taskNum \u003e taskList.size()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":168,"author":{"gitId":"moguries"},"content":"                        String exceptionMessage \u003d Duke.createLine() + \"\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":169,"author":{"gitId":"moguries"},"content":"                                + \"hahaha! you only have \" + taskList.size() + \" tasks in your task list!!\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":170,"author":{"gitId":"moguries"},"content":"                                + \"there\u0027s no task \" + taskNum + \"!\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":171,"author":{"gitId":"moguries"},"content":"                                + Duke.createLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":172,"author":{"gitId":"moguries"},"content":"                        throw new DukeException(exceptionMessage);","lastModifiedDate":"2024-01-28"},{"lineNumber":173,"author":{"gitId":"moguries"},"content":"                    }","lastModifiedDate":"2024-01-28"},{"lineNumber":174,"author":{"gitId":"moguries"},"content":"                    taskList.get(taskNum - 1).unmark();","lastModifiedDate":"2024-01-28"},{"lineNumber":175,"author":{"gitId":"moguries"},"content":"                    String unmarkedMessage \u003d \"okay! i\u0027ve unmarked this task:\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":176,"author":{"gitId":"moguries"},"content":"                            + \"   \" + taskList.get(taskNum - 1).printTask();","lastModifiedDate":"2024-01-31"},{"lineNumber":177,"author":{"gitId":"moguries"},"content":"                    Duke.printMessage(unmarkedMessage);","lastModifiedDate":"2024-01-28"},{"lineNumber":178,"author":{"gitId":"moguries"},"content":"                    Storage.saveData(taskList);","lastModifiedDate":"2024-01-31"},{"lineNumber":179,"author":{"gitId":"moguries"},"content":"                //command: delete","lastModifiedDate":"2024-01-28"},{"lineNumber":180,"author":{"gitId":"moguries"},"content":"                } else if (command.equalsIgnoreCase(\"delete\")) {","lastModifiedDate":"2024-01-28"},{"lineNumber":181,"author":{"gitId":"moguries"},"content":"                    int taskNum \u003d Integer.parseInt(inputTokens[1]);","lastModifiedDate":"2024-01-28"},{"lineNumber":182,"author":{"gitId":"moguries"},"content":"                    if (taskNum \u003d\u003d 0) {","lastModifiedDate":"2024-01-28"},{"lineNumber":183,"author":{"gitId":"moguries"},"content":"                        String exceptionMessage \u003d Duke.createLine() + \"\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":184,"author":{"gitId":"moguries"},"content":"                                + \"error: there\u0027s no such thing as task 0!\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":185,"author":{"gitId":"moguries"},"content":"                                + Duke.createLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":186,"author":{"gitId":"moguries"},"content":"                        throw new DukeException(exceptionMessage);","lastModifiedDate":"2024-01-28"},{"lineNumber":187,"author":{"gitId":"moguries"},"content":"                    } else if (taskNum \u003e taskList.size()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":188,"author":{"gitId":"moguries"},"content":"                        String exceptionMessage \u003d Duke.createLine() + \"\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":189,"author":{"gitId":"moguries"},"content":"                                + \"error! you only have \" + taskList.size() + \" tasks in your task list!!\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":190,"author":{"gitId":"moguries"},"content":"                                + \"there\u0027s no task \" + taskNum + \"!\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":191,"author":{"gitId":"moguries"},"content":"                                + Duke.createLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":192,"author":{"gitId":"moguries"},"content":"                        throw new DukeException(exceptionMessage);","lastModifiedDate":"2024-01-28"},{"lineNumber":193,"author":{"gitId":"moguries"},"content":"                    }","lastModifiedDate":"2024-01-28"},{"lineNumber":194,"author":{"gitId":"moguries"},"content":"                    Task deletedTask \u003d taskList.get(taskNum - 1);","lastModifiedDate":"2024-01-28"},{"lineNumber":195,"author":{"gitId":"moguries"},"content":"                    String deletedTaskMessage \u003d deletedTask.printTask();","lastModifiedDate":"2024-01-28"},{"lineNumber":196,"author":{"gitId":"moguries"},"content":"                    taskList.remove(taskNum - 1);","lastModifiedDate":"2024-01-28"},{"lineNumber":197,"author":{"gitId":"moguries"},"content":"                    int remainingNumOfTasks \u003d taskList.size();","lastModifiedDate":"2024-01-28"},{"lineNumber":198,"author":{"gitId":"moguries"},"content":"                    Duke.printDeletedTask(deletedTaskMessage, remainingNumOfTasks);","lastModifiedDate":"2024-01-28"},{"lineNumber":199,"author":{"gitId":"moguries"},"content":"                    Storage.saveData(taskList);","lastModifiedDate":"2024-01-31"},{"lineNumber":200,"author":{"gitId":"moguries"},"content":"                //command: todo","lastModifiedDate":"2024-01-28"},{"lineNumber":201,"author":{"gitId":"moguries"},"content":"                } else if (command.equalsIgnoreCase(\"todo\")) {","lastModifiedDate":"2024-01-28"},{"lineNumber":202,"author":{"gitId":"moguries"},"content":"                    int len \u003d inputTokens.length;","lastModifiedDate":"2024-01-28"},{"lineNumber":203,"author":{"gitId":"moguries"},"content":"                    if (len \u003d\u003d 1) {","lastModifiedDate":"2024-01-28"},{"lineNumber":204,"author":{"gitId":"moguries"},"content":"                        String exceptionMessage \u003d Duke.createLine() + \"\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":205,"author":{"gitId":"moguries"},"content":"                                + \"you didn\u0027t specify what you want to do! use this format instead:\\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":206,"author":{"gitId":"moguries"},"content":"                                + \"todo [task description]\\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":207,"author":{"gitId":"moguries"},"content":"                                + Duke.createLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":208,"author":{"gitId":"moguries"},"content":"                        throw new DukeException(exceptionMessage);","lastModifiedDate":"2024-01-28"},{"lineNumber":209,"author":{"gitId":"moguries"},"content":"                    }","lastModifiedDate":"2024-01-28"},{"lineNumber":210,"author":{"gitId":"moguries"},"content":"                    String todoName \u003d \"\";","lastModifiedDate":"2024-01-28"},{"lineNumber":211,"author":{"gitId":"moguries"},"content":"                    for (int i \u003d 1; i \u003c len; i++) {","lastModifiedDate":"2024-01-28"},{"lineNumber":212,"author":{"gitId":"moguries"},"content":"                        todoName +\u003d \" \" + inputTokens[i];","lastModifiedDate":"2024-01-28"},{"lineNumber":213,"author":{"gitId":"moguries"},"content":"                    }","lastModifiedDate":"2024-01-28"},{"lineNumber":214,"author":{"gitId":"moguries"},"content":"                    ToDo addedTask \u003d new ToDo(todoName);","lastModifiedDate":"2024-01-28"},{"lineNumber":215,"author":{"gitId":"moguries"},"content":"                    taskList.add(addedTask);","lastModifiedDate":"2024-01-28"},{"lineNumber":216,"author":{"gitId":"moguries"},"content":"                    int totalNumOfTasks \u003d taskList.size();","lastModifiedDate":"2024-01-28"},{"lineNumber":217,"author":{"gitId":"moguries"},"content":"                    Duke.printAddedTask(addedTask.printTask(), totalNumOfTasks);","lastModifiedDate":"2024-01-28"},{"lineNumber":218,"author":{"gitId":"moguries"},"content":"                    Storage.saveData(taskList);","lastModifiedDate":"2024-01-31"},{"lineNumber":219,"author":{"gitId":"moguries"},"content":"                //command: deadline","lastModifiedDate":"2024-01-28"},{"lineNumber":220,"author":{"gitId":"moguries"},"content":"                } else if (command.equalsIgnoreCase(\"deadline\")) {","lastModifiedDate":"2024-01-28"},{"lineNumber":221,"author":{"gitId":"moguries"},"content":"                    if (deadlineFormatChecker.length !\u003d 2) {","lastModifiedDate":"2024-02-01"},{"lineNumber":222,"author":{"gitId":"moguries"},"content":"                        String exceptionMessage \u003d Duke.createLine() + \"\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":223,"author":{"gitId":"moguries"},"content":"                                + \"error! please specify the deadline task in this format:\\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":224,"author":{"gitId":"moguries"},"content":"                                + \"deadline [task description] /by [YYYY-MM-DD HH:MM]\\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":225,"author":{"gitId":"moguries"},"content":"                                + Duke.createLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":226,"author":{"gitId":"moguries"},"content":"                        throw new DukeException(exceptionMessage);","lastModifiedDate":"2024-01-28"},{"lineNumber":227,"author":{"gitId":"moguries"},"content":"                    }","lastModifiedDate":"2024-01-28"},{"lineNumber":228,"author":{"gitId":"moguries"},"content":"                    int len \u003d inputTokens.length;","lastModifiedDate":"2024-02-01"},{"lineNumber":229,"author":{"gitId":"moguries"},"content":"                    String deadlineName \u003d \"\";","lastModifiedDate":"2024-01-28"},{"lineNumber":230,"author":{"gitId":"moguries"},"content":"                    LocalDateTime deadline \u003d LocalDateTime.of(2023, 12, 5, 16, 0);","lastModifiedDate":"2024-02-01"},{"lineNumber":231,"author":{"gitId":"moguries"},"content":"                    for (int i \u003d 1; i \u003c len; i++) {","lastModifiedDate":"2024-01-28"},{"lineNumber":232,"author":{"gitId":"moguries"},"content":"                        if (inputTokens[i].equals(\"/by\")) {","lastModifiedDate":"2024-01-28"},{"lineNumber":233,"author":{"gitId":"moguries"},"content":"                            String dateTimeString \u003d inputTokens[i + 1] + \" \" + inputTokens[i + 2];","lastModifiedDate":"2024-02-01"},{"lineNumber":234,"author":{"gitId":"moguries"},"content":"                            deadline \u003d LocalDateTime.parse(dateTimeString, formatter);","lastModifiedDate":"2024-02-01"},{"lineNumber":235,"author":{"gitId":"moguries"},"content":"                            break;","lastModifiedDate":"2024-01-28"},{"lineNumber":236,"author":{"gitId":"moguries"},"content":"                        } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":237,"author":{"gitId":"moguries"},"content":"                            deadlineName +\u003d \" \" + inputTokens[i];","lastModifiedDate":"2024-01-28"},{"lineNumber":238,"author":{"gitId":"moguries"},"content":"                        }","lastModifiedDate":"2024-01-28"},{"lineNumber":239,"author":{"gitId":"moguries"},"content":"                    }","lastModifiedDate":"2024-01-28"},{"lineNumber":240,"author":{"gitId":"moguries"},"content":"                    Deadline addedTask \u003d new Deadline(deadlineName, deadline);","lastModifiedDate":"2024-01-28"},{"lineNumber":241,"author":{"gitId":"moguries"},"content":"                    taskList.add(addedTask);","lastModifiedDate":"2024-01-28"},{"lineNumber":242,"author":{"gitId":"moguries"},"content":"                    int totalNumOfTasks \u003d taskList.size();","lastModifiedDate":"2024-01-28"},{"lineNumber":243,"author":{"gitId":"moguries"},"content":"                    Duke.printAddedTask(addedTask.printTask(), totalNumOfTasks);","lastModifiedDate":"2024-01-28"},{"lineNumber":244,"author":{"gitId":"moguries"},"content":"                    Storage.saveData(taskList);","lastModifiedDate":"2024-01-31"},{"lineNumber":245,"author":{"gitId":"moguries"},"content":"                //command: event","lastModifiedDate":"2024-01-28"},{"lineNumber":246,"author":{"gitId":"moguries"},"content":"                } else if (command.equalsIgnoreCase(\"event\")) {","lastModifiedDate":"2024-01-28"},{"lineNumber":247,"author":{"gitId":"moguries"},"content":"                    String exceptionMessage \u003d Duke.createLine() + \"\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":248,"author":{"gitId":"moguries"},"content":"                            + \"error! please specify the event task in this format:\\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":249,"author":{"gitId":"moguries"},"content":"                            + \"event [task description] /from [YYYY-MM-DD HH:MM] /to [YYYY-MM-DD HH:MM]\\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":250,"author":{"gitId":"moguries"},"content":"                            + Duke.createLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":251,"author":{"gitId":"moguries"},"content":"                    if (eventFormatChecker.length !\u003d 2) {","lastModifiedDate":"2024-02-01"},{"lineNumber":252,"author":{"gitId":"moguries"},"content":"                        throw new DukeException(exceptionMessage);","lastModifiedDate":"2024-02-01"},{"lineNumber":253,"author":{"gitId":"moguries"},"content":"                    } else if (eventFormatChecker[1].split(\"to\").length !\u003d 2) {","lastModifiedDate":"2024-02-01"},{"lineNumber":254,"author":{"gitId":"moguries"},"content":"                        throw new DukeException(exceptionMessage);","lastModifiedDate":"2024-01-28"},{"lineNumber":255,"author":{"gitId":"moguries"},"content":"                    }","lastModifiedDate":"2024-01-28"},{"lineNumber":256,"author":{"gitId":"moguries"},"content":"                    int len \u003d inputTokens.length;","lastModifiedDate":"2024-02-01"},{"lineNumber":257,"author":{"gitId":"moguries"},"content":"                    String eventName \u003d \"\";","lastModifiedDate":"2024-01-28"},{"lineNumber":258,"author":{"gitId":"moguries"},"content":"                    LocalDateTime start \u003d LocalDateTime.of(2023, 12, 5, 16, 0);","lastModifiedDate":"2024-02-01"},{"lineNumber":259,"author":{"gitId":"moguries"},"content":"                    LocalDateTime end \u003d LocalDateTime.of(2023, 12, 5, 16, 0);","lastModifiedDate":"2024-02-01"},{"lineNumber":260,"author":{"gitId":"moguries"},"content":"                    for (int i \u003d 1; i \u003c len; i++) {","lastModifiedDate":"2024-01-28"},{"lineNumber":261,"author":{"gitId":"moguries"},"content":"                        if (inputTokens[i].equals(\"/from\")) {","lastModifiedDate":"2024-01-28"},{"lineNumber":262,"author":{"gitId":"moguries"},"content":"                            String startString \u003d inputTokens[i + 1] + \" \" + inputTokens[i + 2];","lastModifiedDate":"2024-02-01"},{"lineNumber":263,"author":{"gitId":"moguries"},"content":"                            String endString \u003d inputTokens[i + 4] + \" \" + inputTokens[i + 5];","lastModifiedDate":"2024-02-01"},{"lineNumber":264,"author":{"gitId":"moguries"},"content":"                            start \u003d LocalDateTime.parse(startString, formatter);","lastModifiedDate":"2024-02-01"},{"lineNumber":265,"author":{"gitId":"moguries"},"content":"                            end \u003d LocalDateTime.parse(endString, formatter);","lastModifiedDate":"2024-02-01"},{"lineNumber":266,"author":{"gitId":"moguries"},"content":"                            break;","lastModifiedDate":"2024-01-28"},{"lineNumber":267,"author":{"gitId":"moguries"},"content":"                        } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":268,"author":{"gitId":"moguries"},"content":"                            eventName +\u003d \" \" + inputTokens[i];","lastModifiedDate":"2024-01-28"},{"lineNumber":269,"author":{"gitId":"moguries"},"content":"                        }","lastModifiedDate":"2024-01-28"},{"lineNumber":270,"author":{"gitId":"moguries"},"content":"                    }","lastModifiedDate":"2024-01-28"},{"lineNumber":271,"author":{"gitId":"moguries"},"content":"                    Event addedTask \u003d new Event(eventName, start, end);","lastModifiedDate":"2024-01-28"},{"lineNumber":272,"author":{"gitId":"moguries"},"content":"                    taskList.add(addedTask);","lastModifiedDate":"2024-01-28"},{"lineNumber":273,"author":{"gitId":"moguries"},"content":"                    int totalNumOfTasks \u003d taskList.size();","lastModifiedDate":"2024-01-28"},{"lineNumber":274,"author":{"gitId":"moguries"},"content":"                    Duke.printAddedTask(addedTask.printTask(), totalNumOfTasks);","lastModifiedDate":"2024-01-28"},{"lineNumber":275,"author":{"gitId":"moguries"},"content":"                    Storage.saveData(taskList);","lastModifiedDate":"2024-01-31"},{"lineNumber":276,"author":{"gitId":"moguries"},"content":"                } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":277,"author":{"gitId":"moguries"},"content":"                    String exceptionMessage \u003d Duke.createLine() + \"\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":278,"author":{"gitId":"moguries"},"content":"                            + \"hm? i don\u0027t understand what that means :(\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":279,"author":{"gitId":"moguries"},"content":"                            + \"you can try any of these commands instead!!\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":280,"author":{"gitId":"moguries"},"content":"                            + \"list\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":281,"author":{"gitId":"moguries"},"content":"                            + \"mark\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":282,"author":{"gitId":"moguries"},"content":"                            + \"unmark\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":283,"author":{"gitId":"moguries"},"content":"                            + \"delete\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":284,"author":{"gitId":"moguries"},"content":"                            + \"todo\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":285,"author":{"gitId":"moguries"},"content":"                            + \"deadline\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":286,"author":{"gitId":"moguries"},"content":"                            + \"event\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":287,"author":{"gitId":"moguries"},"content":"                            + \"bye\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":288,"author":{"gitId":"moguries"},"content":"                            + Duke.createLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":289,"author":{"gitId":"moguries"},"content":"                    throw new DukeException(exceptionMessage);","lastModifiedDate":"2024-01-28"},{"lineNumber":290,"author":{"gitId":"moguries"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":291,"author":{"gitId":"moguries"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":292,"author":{"gitId":"moguries"},"content":"            sc.close();","lastModifiedDate":"2024-01-25"},{"lineNumber":293,"author":{"gitId":"moguries"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":294,"author":{"gitId":"moguries"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":295,"author":{"gitId":"moguries"},"content":"        } catch (DateTimeParseException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":296,"author":{"gitId":"moguries"},"content":"            System.out.println(\"invalid date time format! please use YYYY-MM-DD HH:MM format!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":297,"author":{"gitId":"moguries"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":300,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"moguries":296,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"moguries"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"moguries"},"content":" * Encapsulates the exceptions specific to the chatbot.","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"moguries"},"content":" *","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"moguries"},"content":" * @author Huang Zhuoyan, Celeste","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"moguries"},"content":" * @version CS2103T AY24/25 Semester 1, G07","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"moguries"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"moguries"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"moguries"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"moguries"},"content":"     * Constructs a new DukeException with the specified error message.","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"moguries"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"moguries"},"content":"     * @param message The specified error message.","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"moguries"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"moguries"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"moguries"},"content":"        super(message);","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"moguries"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"moguries"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"moguries":16}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"moguries"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"moguries"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"moguries"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"moguries"},"content":" * Encapsulates the data and behaviour of an Event task.","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"moguries"},"content":" *","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"moguries"},"content":" * @author Huang Zhuoyan, Celeste","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"moguries"},"content":" * @version CS2103T AY24/25 Semester 1, G07","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"moguries"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"moguries"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"moguries"},"content":"    private LocalDateTime start;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"moguries"},"content":"    private LocalDateTime end;","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"moguries"},"content":"    private static DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy h:mma\");","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"moguries"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"moguries"},"content":"     * Constructs a new Event task with the given name, start date and end date.","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"moguries"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"moguries"},"content":"     * @param name The name of the Deadline task.","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"moguries"},"content":"     * @param start The LocalDateTime object containing the start date.","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"moguries"},"content":"     * @param end The LocalDateTime object containing the end date.","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"moguries"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"moguries"},"content":"    public Event(String name, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"moguries"},"content":"        super(name);","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"moguries"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"moguries"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"moguries"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"moguries"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"moguries"},"content":"     * Formats the deadline of the task according to a standard format.","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"moguries"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"moguries"},"content":"     * @param time The LocalDateTime object to be formatted.","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"moguries"},"content":"     * @return The formatted deadline, as a String.","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"moguries"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"moguries"},"content":"    public String deadlineFormatter(LocalDateTime time) {","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"moguries"},"content":"        return time.format(formatter);","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"moguries"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"moguries"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"moguries"},"content":"    public String printTask() {","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"moguries"},"content":"        return \"[E]\" + super.printTask() + \" (from: \" + deadlineFormatter(this.start)","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"moguries"},"content":"                + \" to: \" + deadlineFormatter(this.end) + \")\";","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"moguries"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"moguries"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"moguries"},"content":"    public String saveTask() {","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"moguries"},"content":"        return \"E | \" + super.saveTask() + \" | \" + deadlineFormatter(this.start) + \" | \" + deadlineFormatter(this.end);","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"moguries"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"moguries"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"moguries":48}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"moguries"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"moguries"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"moguries"},"content":"import java.io.File;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"moguries"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"moguries"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"moguries"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"moguries"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"moguries"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"moguries"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"moguries"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"moguries"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"moguries"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"moguries"},"content":" * Encapsulates the data and behaviour of the user\u0027s save file.","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"moguries"},"content":" *","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"moguries"},"content":" * @author Huang Zhuoyan, Celeste","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"moguries"},"content":" * @version CS2103T AY24/25 Semester 1, G07","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"moguries"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"moguries"},"content":"public class Storage {","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"moguries"},"content":"    private static final String PATH_DIRECTORY \u003d \"./data/\";","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"moguries"},"content":"    private static final String PATH_FILE \u003d \"./data/duke.txt\";","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"moguries"},"content":"    private static final Pattern PATTERN_TODO \u003d Pattern.compile(\"([A-Z]) \\\\| (\\\\d) \\\\| (.*?)\");","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"moguries"},"content":"    private static final Pattern PATTERN_DEADLINE \u003d Pattern.compile(\"([A-Z]) \\\\| (\\\\d) \\\\| (.*?) \\\\| (.*?)\");","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"moguries"},"content":"    private static final Pattern PATTERN_EVENT \u003d Pattern.compile(\"([A-Z]) \\\\| (\\\\d) \\\\| (.*?) \\\\| (.*?) \\\\| (.*?)\");","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"moguries"},"content":"    private static DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy h:mma\");","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"moguries"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"moguries"},"content":"     * Constructs a new Storage object.","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"moguries"},"content":"     * Initialises the new Storage object by creating a directory and file if they do not already exist.","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"moguries"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"moguries"},"content":"     * @throws IOException if an I/O error occurs during creation of the file.","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"moguries"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"moguries"},"content":"    public Storage() throws IOException {","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"moguries"},"content":"        File file \u003d new File(PATH_FILE);","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"moguries"},"content":"        File directory \u003d new File(PATH_DIRECTORY);","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"moguries"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"moguries"},"content":"            boolean isCreated \u003d directory.mkdirs();","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"moguries"},"content":"            if (!isCreated) {","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"moguries"},"content":"                System.out.println(\"Failed to create directory: \" + PATH_DIRECTORY);","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"moguries"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"moguries"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"moguries"},"content":"        if (!file.exists()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"moguries"},"content":"            try {","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"moguries"},"content":"                file.getParentFile().mkdirs();","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"moguries"},"content":"                file.createNewFile();","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"moguries"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"moguries"},"content":"                System.out.println(\"Error creating file: \" + e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"moguries"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"moguries"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"moguries"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"moguries"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"moguries"},"content":"     * Saves any modified data in the task list into the save file.","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"moguries"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"moguries"},"content":"     * @param taskList The ArrayList containing the task list\u0027s data.","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"moguries"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"moguries"},"content":"    public static void saveData(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"moguries"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"moguries"},"content":"            BufferedWriter bw \u003d new BufferedWriter(new FileWriter(PATH_FILE));","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"moguries"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"moguries"},"content":"                String taskMessage \u003d task.saveTask();","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"moguries"},"content":"                bw.write(taskMessage);","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"moguries"},"content":"                bw.newLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"moguries"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"moguries"},"content":"            bw.close();","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"moguries"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"moguries"},"content":"            System.out.println(\"Error saving data to file: \" + e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"moguries"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"moguries"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"moguries"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"moguries"},"content":"     * Loads the data in the save file into an ArrayList.","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"moguries"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"moguries"},"content":"     * @return The ArrayList containing the saved data of the user\u0027s task list.","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"moguries"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"moguries"},"content":"    public static ArrayList\u003cTask\u003e loadData() {","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"moguries"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"moguries"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"moguries"},"content":"            BufferedReader br \u003d new BufferedReader(new FileReader(PATH_FILE));","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"moguries"},"content":"            String line;","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"moguries"},"content":"            while ((line \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"moguries"},"content":"                Task task \u003d parseTask(line);","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"moguries"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"moguries"},"content":"                    taskList.add(task);","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"moguries"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"moguries"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"moguries"},"content":"            br.close();","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"moguries"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"moguries"},"content":"            System.out.println(\"Error loading data from file: \" + e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"moguries"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":91,"author":{"gitId":"moguries"},"content":"        return taskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":92,"author":{"gitId":"moguries"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"moguries"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"moguries"},"content":"     * Parses the inputted line for the task data.","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"moguries"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"moguries"},"content":"     * @param line The line to be parsed.","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"moguries"},"content":"     * @return The Task containing the task data.","lastModifiedDate":"2024-02-01"},{"lineNumber":99,"author":{"gitId":"moguries"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":100,"author":{"gitId":"moguries"},"content":"    private static Task parseTask(String line) {","lastModifiedDate":"2024-01-31"},{"lineNumber":101,"author":{"gitId":"moguries"},"content":"        Matcher todoMatcher \u003d PATTERN_TODO.matcher(line);","lastModifiedDate":"2024-02-01"},{"lineNumber":102,"author":{"gitId":"moguries"},"content":"        Matcher deadlineMatcher \u003d PATTERN_DEADLINE.matcher(line);","lastModifiedDate":"2024-02-01"},{"lineNumber":103,"author":{"gitId":"moguries"},"content":"        Matcher eventMatcher \u003d PATTERN_EVENT.matcher(line);","lastModifiedDate":"2024-02-01"},{"lineNumber":104,"author":{"gitId":"moguries"},"content":"        if (eventMatcher.matches()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":105,"author":{"gitId":"moguries"},"content":"            boolean isCompleted \u003d eventMatcher.group(2).equals(\"1\");","lastModifiedDate":"2024-01-31"},{"lineNumber":106,"author":{"gitId":"moguries"},"content":"            String taskName \u003d \" \" + eventMatcher.group(3);","lastModifiedDate":"2024-01-31"},{"lineNumber":107,"author":{"gitId":"moguries"},"content":"            LocalDateTime start \u003d LocalDateTime.parse(eventMatcher.group(4), formatter);","lastModifiedDate":"2024-02-01"},{"lineNumber":108,"author":{"gitId":"moguries"},"content":"            LocalDateTime end \u003d LocalDateTime.parse(eventMatcher.group(5), formatter);","lastModifiedDate":"2024-02-01"},{"lineNumber":109,"author":{"gitId":"moguries"},"content":"            Event eventTask \u003d new Event(taskName, start, end);","lastModifiedDate":"2024-01-31"},{"lineNumber":110,"author":{"gitId":"moguries"},"content":"            if (isCompleted) {","lastModifiedDate":"2024-01-31"},{"lineNumber":111,"author":{"gitId":"moguries"},"content":"                eventTask.complete();","lastModifiedDate":"2024-01-31"},{"lineNumber":112,"author":{"gitId":"moguries"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":113,"author":{"gitId":"moguries"},"content":"            return eventTask;","lastModifiedDate":"2024-01-31"},{"lineNumber":114,"author":{"gitId":"moguries"},"content":"        } else if (deadlineMatcher.matches()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":115,"author":{"gitId":"moguries"},"content":"            boolean isCompleted \u003d deadlineMatcher.group(2).equals(\"1\");","lastModifiedDate":"2024-01-31"},{"lineNumber":116,"author":{"gitId":"moguries"},"content":"            String taskName \u003d \" \" + deadlineMatcher.group(3);","lastModifiedDate":"2024-01-31"},{"lineNumber":117,"author":{"gitId":"moguries"},"content":"            LocalDateTime deadline \u003d LocalDateTime.parse(deadlineMatcher.group(4), formatter);","lastModifiedDate":"2024-02-01"},{"lineNumber":118,"author":{"gitId":"moguries"},"content":"            Deadline deadlineTask \u003d new Deadline(taskName, deadline);","lastModifiedDate":"2024-01-31"},{"lineNumber":119,"author":{"gitId":"moguries"},"content":"            if (isCompleted) {","lastModifiedDate":"2024-01-31"},{"lineNumber":120,"author":{"gitId":"moguries"},"content":"                deadlineTask.complete();","lastModifiedDate":"2024-01-31"},{"lineNumber":121,"author":{"gitId":"moguries"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":122,"author":{"gitId":"moguries"},"content":"            return deadlineTask;","lastModifiedDate":"2024-01-31"},{"lineNumber":123,"author":{"gitId":"moguries"},"content":"        } else if (todoMatcher.matches()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":124,"author":{"gitId":"moguries"},"content":"            boolean isCompleted \u003d todoMatcher.group(2).equals(\"1\");","lastModifiedDate":"2024-01-31"},{"lineNumber":125,"author":{"gitId":"moguries"},"content":"            String taskName \u003d \" \" + todoMatcher.group(3);","lastModifiedDate":"2024-01-31"},{"lineNumber":126,"author":{"gitId":"moguries"},"content":"            ToDo todoTask \u003d new ToDo(taskName);","lastModifiedDate":"2024-01-31"},{"lineNumber":127,"author":{"gitId":"moguries"},"content":"            if (isCompleted) {","lastModifiedDate":"2024-01-31"},{"lineNumber":128,"author":{"gitId":"moguries"},"content":"                todoTask.complete();","lastModifiedDate":"2024-01-31"},{"lineNumber":129,"author":{"gitId":"moguries"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":130,"author":{"gitId":"moguries"},"content":"            return todoTask;","lastModifiedDate":"2024-01-31"},{"lineNumber":131,"author":{"gitId":"moguries"},"content":"        } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":132,"author":{"gitId":"moguries"},"content":"            System.out.println(\"Line does not match expected pattern: \" + line);","lastModifiedDate":"2024-01-31"},{"lineNumber":133,"author":{"gitId":"moguries"},"content":"            return null;","lastModifiedDate":"2024-01-31"},{"lineNumber":134,"author":{"gitId":"moguries"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":135,"author":{"gitId":"moguries"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":136,"author":{"gitId":"moguries"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"moguries":136}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"moguries"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"moguries"},"content":" * Encapsulates the data and behaviour of a Task.","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"moguries"},"content":" *","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"moguries"},"content":" * @author Huang Zhuoyan, Celeste","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"moguries"},"content":" * @version CS2103T AY24/25 Semester 1, G07","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"moguries"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"moguries"},"content":"public class Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"moguries"},"content":"    private String name;","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"moguries"},"content":"    private boolean completed;","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"moguries"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"moguries"},"content":"     * Constructs a new Task with the given name.","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"moguries"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"moguries"},"content":"     * @param name The name or descriptor of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"moguries"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"moguries"},"content":"    public Task(String name) {","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"moguries"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"moguries"},"content":"        this.completed \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"moguries"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"moguries"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"moguries"},"content":"     * Marks the task as complete.","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"moguries"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"moguries"},"content":"    public void complete() {","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"moguries"},"content":"        this.completed \u003d true;","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"moguries"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"moguries"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"moguries"},"content":"     * Marks the task as incomplete.","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"moguries"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"moguries"},"content":"    public void unmark() {","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"moguries"},"content":"        this.completed \u003d false;","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"moguries"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"moguries"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"moguries"},"content":"     * Returns a string description of the task name and its completion status.","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"moguries"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"moguries"},"content":"     * @return A String describing the task name and completion status.","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"moguries"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"moguries"},"content":"    public String printTask() {","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"moguries"},"content":"        String taskMessage \u003d this.completed ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"moguries"},"content":"        taskMessage +\u003d this.name;","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"moguries"},"content":"        return taskMessage;","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"moguries"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"moguries"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"moguries"},"content":"     * Returns a string description of the task name and its completion status in the correct format of the save file.","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"moguries"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"moguries"},"content":"     * @return A String describing the task name and completion status.","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"moguries"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"moguries"},"content":"    public String saveTask() {","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"moguries"},"content":"        String taskMessage \u003d this.completed ? \"1\" : \"0\";","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"moguries"},"content":"        taskMessage +\u003d \" |\" + this.name;","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"moguries"},"content":"        return taskMessage;","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"moguries"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"moguries"},"content":"}","lastModifiedDate":"2024-01-25"},{"lineNumber":57,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"moguries":57}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"moguries"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"moguries"},"content":" * Encapsulates the data and behaviour of a ToDo task.","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"moguries"},"content":" *","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"moguries"},"content":" * @author Huang Zhuoyan, Celeste","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"moguries"},"content":" * @version CS2103T AY24/25 Semester 1, G07","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"moguries"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"moguries"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"moguries"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"moguries"},"content":"     * Constructs a new ToDo task with the given name.","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"moguries"},"content":"     * @param name The name of the ToDo task.","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"moguries"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"moguries"},"content":"    public ToDo(String name) {","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"moguries"},"content":"        super(name);","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"moguries"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"moguries"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"moguries"},"content":"    public String printTask() {","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"moguries"},"content":"        return \"[T]\" + super.printTask();","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"moguries"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"moguries"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"moguries"},"content":"    public String saveTask() {","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"moguries"},"content":"        return \"T | \" + super.saveTask();","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"moguries"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"moguries"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"moguries":25}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"moguries"},"content":"todo borrow book","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"moguries"},"content":"list","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"moguries"},"content":"deadline return book /by Sunday 5pm","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"moguries"},"content":"event project meeting /from Mon 6th Nov 2pm /to Sun 28th Feb 4pm","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"moguries"},"content":"mark 3","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"moguries"},"content":"list","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"moguries"},"content":"unmark 3","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"moguries"},"content":"deadline borrow materials /by not too sure :-(","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"moguries"},"content":"list","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"moguries"},"content":"bye","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"moguries":10}}]
