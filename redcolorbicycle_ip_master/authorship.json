[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"redcolorbicycle"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"redcolorbicycle"},"content":"    protected String by;","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"redcolorbicycle"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"redcolorbicycle"},"content":"        super(description);","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"redcolorbicycle"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"redcolorbicycle"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"redcolorbicycle"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"redcolorbicycle"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.substring(3) + \")\";","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"redcolorbicycle"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"redcolorbicycle":14}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"redcolorbicycle"},"content":"import java.util.*;","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"redcolorbicycle"},"content":"        //name and introduction","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"redcolorbicycle"},"content":"        String name \u003d \"Bearducky\";","lastModifiedDate":"2024-01-21"},{"lineNumber":7,"author":{"gitId":"redcolorbicycle"},"content":"        System.out.println(\"Quack! My name is \" + name + \". I would like to earn some bread. How may I \" +","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"redcolorbicycle"},"content":"                \"help?\");","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"redcolorbicycle"},"content":"        //Set up scanner, store user\u0027s inputs, structure to store tasks","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"redcolorbicycle"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-21"},{"lineNumber":12,"author":{"gitId":"redcolorbicycle"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"redcolorbicycle"},"content":"        label:","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"redcolorbicycle"},"content":"        while (true) {","lastModifiedDate":"2024-01-21"},{"lineNumber":16,"author":{"gitId":"redcolorbicycle"},"content":"            String userInput \u003d scanner.nextLine();","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"redcolorbicycle"},"content":"            int x \u003d tasks.size();","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"redcolorbicycle"},"content":"            if (userInput.toLowerCase().equals(\"feed bread to bearducky\")) {","lastModifiedDate":"2024-01-22"},{"lineNumber":20,"author":{"gitId":"redcolorbicycle"},"content":"                System.out.println(\"[very happy quacking]\");","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"redcolorbicycle"},"content":"                continue;","lastModifiedDate":"2024-01-22"},{"lineNumber":22,"author":{"gitId":"redcolorbicycle"},"content":"            }","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"redcolorbicycle"},"content":"            //marking or not","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"redcolorbicycle"},"content":"            if (userInput.toLowerCase().startsWith(\"mark \") || userInput.toLowerCase().startsWith(\"unmark \") || userInput.toLowerCase().startsWith(\"delete \")) {","lastModifiedDate":"2024-01-22"},{"lineNumber":26,"author":{"gitId":"redcolorbicycle"},"content":"                String[] inputs \u003d userInput.split(\" \");","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"redcolorbicycle"},"content":"                try {","lastModifiedDate":"2024-01-22"},{"lineNumber":28,"author":{"gitId":"redcolorbicycle"},"content":"                    int num \u003d Integer.parseInt(inputs[1]);","lastModifiedDate":"2024-01-22"},{"lineNumber":29,"author":{"gitId":"redcolorbicycle"},"content":"                    if (inputs[0].equals(\"mark\")) {","lastModifiedDate":"2024-01-22"},{"lineNumber":30,"author":{"gitId":"redcolorbicycle"},"content":"                        tasks.get(num - 1).Mark();","lastModifiedDate":"2024-01-22"},{"lineNumber":31,"author":{"gitId":"redcolorbicycle"},"content":"                    } else if (inputs[0].equals(\"unmark\")) {","lastModifiedDate":"2024-01-22"},{"lineNumber":32,"author":{"gitId":"redcolorbicycle"},"content":"                        tasks.get(num - 1).unMark();","lastModifiedDate":"2024-01-22"},{"lineNumber":33,"author":{"gitId":"redcolorbicycle"},"content":"                    } else if (inputs[0].equals(\"delete\")) {","lastModifiedDate":"2024-01-22"},{"lineNumber":34,"author":{"gitId":"redcolorbicycle"},"content":"                        System.out.println(\"Bearducky is fighting the task \" +  tasks.get(num - 1));","lastModifiedDate":"2024-01-22"},{"lineNumber":35,"author":{"gitId":"redcolorbicycle"},"content":"                        tasks.remove(num - 1);","lastModifiedDate":"2024-01-22"},{"lineNumber":36,"author":{"gitId":"redcolorbicycle"},"content":"                        System.out.println(\"[tired quacking] Task has been... eliminated.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":37,"author":{"gitId":"redcolorbicycle"},"content":"                    }","lastModifiedDate":"2024-01-22"},{"lineNumber":38,"author":{"gitId":"redcolorbicycle"},"content":"                    System.out.println(\"[busy quacking]\");","lastModifiedDate":"2024-01-22"},{"lineNumber":39,"author":{"gitId":"redcolorbicycle"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":40,"author":{"gitId":"redcolorbicycle"},"content":"                    System.out.println(\"[angry quacking] I can only mark numbers!\");","lastModifiedDate":"2024-01-22"},{"lineNumber":41,"author":{"gitId":"redcolorbicycle"},"content":"                } catch (IndexOutOfBoundsException a) {","lastModifiedDate":"2024-01-22"},{"lineNumber":42,"author":{"gitId":"redcolorbicycle"},"content":"                    System.out.println(\"[exasperated quacking] You\u0027re not that busy - numbers from 1 to \" + x + \" only, please.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":43,"author":{"gitId":"redcolorbicycle"},"content":"                }","lastModifiedDate":"2024-01-22"},{"lineNumber":44,"author":{"gitId":"redcolorbicycle"},"content":"                continue;","lastModifiedDate":"2024-01-22"},{"lineNumber":45,"author":{"gitId":"redcolorbicycle"},"content":"            }","lastModifiedDate":"2024-01-22"},{"lineNumber":46,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":47,"author":{"gitId":"redcolorbicycle"},"content":"            //other hard commands","lastModifiedDate":"2024-01-22"},{"lineNumber":48,"author":{"gitId":"redcolorbicycle"},"content":"            switch (userInput.toLowerCase()) {","lastModifiedDate":"2024-01-22"},{"lineNumber":49,"author":{"gitId":"redcolorbicycle"},"content":"                case \"bye\":","lastModifiedDate":"2024-01-22"},{"lineNumber":50,"author":{"gitId":"redcolorbicycle"},"content":"                    System.out.println(\"[sad quacking] Can I have my bread now?\\n\");","lastModifiedDate":"2024-01-22"},{"lineNumber":51,"author":{"gitId":"redcolorbicycle"},"content":"                    break label;","lastModifiedDate":"2024-01-22"},{"lineNumber":52,"author":{"gitId":"redcolorbicycle"},"content":"                case \"list\":","lastModifiedDate":"2024-01-22"},{"lineNumber":53,"author":{"gitId":"redcolorbicycle"},"content":"                    if (tasks.isEmpty()) {","lastModifiedDate":"2024-01-22"},{"lineNumber":54,"author":{"gitId":"redcolorbicycle"},"content":"                        System.out.println(\"You\u0027re a lazy bastard. Go get something to do.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":55,"author":{"gitId":"redcolorbicycle"},"content":"                        break;","lastModifiedDate":"2024-01-22"},{"lineNumber":56,"author":{"gitId":"redcolorbicycle"},"content":"                    }","lastModifiedDate":"2024-01-22"},{"lineNumber":57,"author":{"gitId":"redcolorbicycle"},"content":"                    int i \u003d 1;","lastModifiedDate":"2024-01-22"},{"lineNumber":58,"author":{"gitId":"redcolorbicycle"},"content":"                    for (Task a : tasks) {","lastModifiedDate":"2024-01-22"},{"lineNumber":59,"author":{"gitId":"redcolorbicycle"},"content":"                        System.out.println(i + \". \" + a);","lastModifiedDate":"2024-01-22"},{"lineNumber":60,"author":{"gitId":"redcolorbicycle"},"content":"                        i++;","lastModifiedDate":"2024-01-22"},{"lineNumber":61,"author":{"gitId":"redcolorbicycle"},"content":"                    }","lastModifiedDate":"2024-01-22"},{"lineNumber":62,"author":{"gitId":"redcolorbicycle"},"content":"                    break;","lastModifiedDate":"2024-01-22"},{"lineNumber":63,"author":{"gitId":"redcolorbicycle"},"content":"            }","lastModifiedDate":"2024-01-22"},{"lineNumber":64,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":65,"author":{"gitId":"redcolorbicycle"},"content":"            //marking or not","lastModifiedDate":"2024-01-22"},{"lineNumber":66,"author":{"gitId":"redcolorbicycle"},"content":"            if (userInput.toLowerCase().startsWith(\"todo \") || userInput.toLowerCase().startsWith(\"event \") ||","lastModifiedDate":"2024-01-22"},{"lineNumber":67,"author":{"gitId":"redcolorbicycle"},"content":"                    userInput.toLowerCase().startsWith(\"deadline \")) {","lastModifiedDate":"2024-01-22"},{"lineNumber":68,"author":{"gitId":"redcolorbicycle"},"content":"                String[] inputs \u003d userInput.split(\"/\");","lastModifiedDate":"2024-01-22"},{"lineNumber":69,"author":{"gitId":"redcolorbicycle"},"content":"                String[] temp \u003d inputs[0].split(\" \");","lastModifiedDate":"2024-01-22"},{"lineNumber":70,"author":{"gitId":"redcolorbicycle"},"content":"                switch (temp[0].toLowerCase()) {","lastModifiedDate":"2024-01-22"},{"lineNumber":71,"author":{"gitId":"redcolorbicycle"},"content":"                    case \"todo\":","lastModifiedDate":"2024-01-22"},{"lineNumber":72,"author":{"gitId":"redcolorbicycle"},"content":"                        String todoname \u003d \"\";","lastModifiedDate":"2024-01-22"},{"lineNumber":73,"author":{"gitId":"redcolorbicycle"},"content":"                        for (int a \u003d 1; a \u003c temp.length; a++) {","lastModifiedDate":"2024-01-22"},{"lineNumber":74,"author":{"gitId":"redcolorbicycle"},"content":"                            todoname \u003d todoname.concat(temp[a]);","lastModifiedDate":"2024-01-22"},{"lineNumber":75,"author":{"gitId":"redcolorbicycle"},"content":"                            todoname \u003d todoname.concat(\" \");","lastModifiedDate":"2024-01-22"},{"lineNumber":76,"author":{"gitId":"redcolorbicycle"},"content":"                        }","lastModifiedDate":"2024-01-22"},{"lineNumber":77,"author":{"gitId":"redcolorbicycle"},"content":"                        Task nt \u003d new ToDo(todoname);","lastModifiedDate":"2024-01-22"},{"lineNumber":78,"author":{"gitId":"redcolorbicycle"},"content":"                        tasks.add(nt);","lastModifiedDate":"2024-01-22"},{"lineNumber":79,"author":{"gitId":"redcolorbicycle"},"content":"                        System.out.println(\"Task added! You now have \" + tasks.size() +\" tasks to attend to.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":80,"author":{"gitId":"redcolorbicycle"},"content":"                        break;","lastModifiedDate":"2024-01-22"},{"lineNumber":81,"author":{"gitId":"redcolorbicycle"},"content":"                    case \"event\":","lastModifiedDate":"2024-01-22"},{"lineNumber":82,"author":{"gitId":"redcolorbicycle"},"content":"                        if (temp.length \u003d\u003d 1) {","lastModifiedDate":"2024-01-22"},{"lineNumber":83,"author":{"gitId":"redcolorbicycle"},"content":"                            System.out.println(\"Event cannot be blank\");","lastModifiedDate":"2024-01-22"},{"lineNumber":84,"author":{"gitId":"redcolorbicycle"},"content":"                            break;","lastModifiedDate":"2024-01-22"},{"lineNumber":85,"author":{"gitId":"redcolorbicycle"},"content":"                        }","lastModifiedDate":"2024-01-22"},{"lineNumber":86,"author":{"gitId":"redcolorbicycle"},"content":"                        String eventname \u003d \"\";","lastModifiedDate":"2024-01-22"},{"lineNumber":87,"author":{"gitId":"redcolorbicycle"},"content":"                        for (int a \u003d 1; a \u003c temp.length; a++) {","lastModifiedDate":"2024-01-22"},{"lineNumber":88,"author":{"gitId":"redcolorbicycle"},"content":"                            eventname \u003d eventname.concat(temp[a]);","lastModifiedDate":"2024-01-22"},{"lineNumber":89,"author":{"gitId":"redcolorbicycle"},"content":"                            eventname \u003d eventname.concat(\" \");","lastModifiedDate":"2024-01-22"},{"lineNumber":90,"author":{"gitId":"redcolorbicycle"},"content":"                        }","lastModifiedDate":"2024-01-22"},{"lineNumber":91,"author":{"gitId":"redcolorbicycle"},"content":"                        try {","lastModifiedDate":"2024-01-22"},{"lineNumber":92,"author":{"gitId":"redcolorbicycle"},"content":"                            Task ne \u003d new Event(eventname, inputs[1], inputs[2]);","lastModifiedDate":"2024-01-22"},{"lineNumber":93,"author":{"gitId":"redcolorbicycle"},"content":"                            tasks.add(ne);","lastModifiedDate":"2024-01-22"},{"lineNumber":94,"author":{"gitId":"redcolorbicycle"},"content":"                            System.out.println(\"Task added! You now have \" + tasks.size() + \" tasks to attend to.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":95,"author":{"gitId":"redcolorbicycle"},"content":"                            break;","lastModifiedDate":"2024-01-22"},{"lineNumber":96,"author":{"gitId":"redcolorbicycle"},"content":"                        } catch (ArrayIndexOutOfBoundsException b) {","lastModifiedDate":"2024-01-22"},{"lineNumber":97,"author":{"gitId":"redcolorbicycle"},"content":"                            System.out.println(\"Please enter an event with the format event eventname /start time /finish time!\");","lastModifiedDate":"2024-01-22"},{"lineNumber":98,"author":{"gitId":"redcolorbicycle"},"content":"                            break;","lastModifiedDate":"2024-01-22"},{"lineNumber":99,"author":{"gitId":"redcolorbicycle"},"content":"                        }","lastModifiedDate":"2024-01-22"},{"lineNumber":100,"author":{"gitId":"redcolorbicycle"},"content":"                    case \"deadline\":","lastModifiedDate":"2024-01-22"},{"lineNumber":101,"author":{"gitId":"redcolorbicycle"},"content":"                        String deadlinename \u003d \"\";","lastModifiedDate":"2024-01-22"},{"lineNumber":102,"author":{"gitId":"redcolorbicycle"},"content":"                        if (temp.length \u003d\u003d 1) {","lastModifiedDate":"2024-01-22"},{"lineNumber":103,"author":{"gitId":"redcolorbicycle"},"content":"                            System.out.println(\"Deadline cannot be blank\");","lastModifiedDate":"2024-01-22"},{"lineNumber":104,"author":{"gitId":"redcolorbicycle"},"content":"                            break;","lastModifiedDate":"2024-01-22"},{"lineNumber":105,"author":{"gitId":"redcolorbicycle"},"content":"                        }","lastModifiedDate":"2024-01-22"},{"lineNumber":106,"author":{"gitId":"redcolorbicycle"},"content":"                        for (int a \u003d 1; a \u003c temp.length; a++) {","lastModifiedDate":"2024-01-22"},{"lineNumber":107,"author":{"gitId":"redcolorbicycle"},"content":"                            deadlinename \u003d deadlinename.concat(temp[a]);","lastModifiedDate":"2024-01-22"},{"lineNumber":108,"author":{"gitId":"redcolorbicycle"},"content":"                            deadlinename \u003d deadlinename.concat(\" \");","lastModifiedDate":"2024-01-22"},{"lineNumber":109,"author":{"gitId":"redcolorbicycle"},"content":"                        }","lastModifiedDate":"2024-01-22"},{"lineNumber":110,"author":{"gitId":"redcolorbicycle"},"content":"                        try {","lastModifiedDate":"2024-01-22"},{"lineNumber":111,"author":{"gitId":"redcolorbicycle"},"content":"                            String deadline \u003d inputs[1];","lastModifiedDate":"2024-01-22"},{"lineNumber":112,"author":{"gitId":"redcolorbicycle"},"content":"                            if (!deadline.startsWith(\"by \")) {","lastModifiedDate":"2024-01-22"},{"lineNumber":113,"author":{"gitId":"redcolorbicycle"},"content":"                                System.out.println(\"Please enter a deadline with the format deadline deadlinename /by datetime!\");","lastModifiedDate":"2024-01-22"},{"lineNumber":114,"author":{"gitId":"redcolorbicycle"},"content":"                                continue;","lastModifiedDate":"2024-01-22"},{"lineNumber":115,"author":{"gitId":"redcolorbicycle"},"content":"                            }","lastModifiedDate":"2024-01-22"},{"lineNumber":116,"author":{"gitId":"redcolorbicycle"},"content":"                            Task nd \u003d new Deadline(deadlinename, deadline);","lastModifiedDate":"2024-01-22"},{"lineNumber":117,"author":{"gitId":"redcolorbicycle"},"content":"                            tasks.add(nd);","lastModifiedDate":"2024-01-22"},{"lineNumber":118,"author":{"gitId":"redcolorbicycle"},"content":"                            System.out.println(\"Task added! You now have \" + tasks.size() +\" tasks to attend to.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":119,"author":{"gitId":"redcolorbicycle"},"content":"                            break;","lastModifiedDate":"2024-01-22"},{"lineNumber":120,"author":{"gitId":"redcolorbicycle"},"content":"                        } catch (ArrayIndexOutOfBoundsException b) {","lastModifiedDate":"2024-01-22"},{"lineNumber":121,"author":{"gitId":"redcolorbicycle"},"content":"                            System.out.println(\"Please enter a deadline with the format /by datetime!\");","lastModifiedDate":"2024-01-22"},{"lineNumber":122,"author":{"gitId":"redcolorbicycle"},"content":"                        }","lastModifiedDate":"2024-01-22"},{"lineNumber":123,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":124,"author":{"gitId":"redcolorbicycle"},"content":"                }","lastModifiedDate":"2024-01-22"},{"lineNumber":125,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":126,"author":{"gitId":"redcolorbicycle"},"content":"            } else if (!userInput.toLowerCase().equals(\"bye\") \u0026\u0026 !userInput.toLowerCase().equals(\"list\")) {","lastModifiedDate":"2024-01-22"},{"lineNumber":127,"author":{"gitId":"redcolorbicycle"},"content":"                System.out.println(\"[quack] I don\u0027t understand that command. If you would like to add a task to the Duckalendar,\" +","lastModifiedDate":"2024-01-22"},{"lineNumber":128,"author":{"gitId":"redcolorbicycle"},"content":"                        \" please specify with the task type - \\\"todo\\\", \\\"deadline\\\" or \\\"event\\\" followed by a space in front of the task\" +","lastModifiedDate":"2024-01-22"},{"lineNumber":129,"author":{"gitId":"redcolorbicycle"},"content":"                        \" name.\\n For deadlines, please add a /by followed by the deadline (eg. /by Monday) . For events, please add a / followed by the start time,\\n\" + \" then another / followed by the end time.\\n\" +","lastModifiedDate":"2024-01-22"},{"lineNumber":130,"author":{"gitId":"redcolorbicycle"},"content":"                        \" To mark or unmark the nth task on the list, enter the command \\\"mark n\\\" or \\\"unmark n\\\" where n is the number on the list.\\n\" +","lastModifiedDate":"2024-01-22"},{"lineNumber":131,"author":{"gitId":"redcolorbicycle"},"content":"                        \" To delete the nth task on the list, enter the command \\\"delete n\\\" where n is the number on the list.\\n\" +","lastModifiedDate":"2024-01-22"},{"lineNumber":132,"author":{"gitId":"redcolorbicycle"},"content":"                        \" If you would like me to list the things you are procrastinating, please enter the word \\\"list\\\".\" +","lastModifiedDate":"2024-01-22"},{"lineNumber":133,"author":{"gitId":"redcolorbicycle"},"content":"                        \" \\n If you would like to leave, please enter the word \\\"bye\\\". \\n Do also feel free to also type the words \\\"feed bread to bearducky\\\"?\" +","lastModifiedDate":"2024-01-22"},{"lineNumber":134,"author":{"gitId":"redcolorbicycle"},"content":"                        \" [Hopeful quacking]\");","lastModifiedDate":"2024-01-22"},{"lineNumber":135,"author":{"gitId":"redcolorbicycle"},"content":"            }","lastModifiedDate":"2024-01-21"},{"lineNumber":136,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"redcolorbicycle":134,"-":4}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"redcolorbicycle"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"redcolorbicycle"},"content":"    protected String start;","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"redcolorbicycle"},"content":"    protected String end;","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"redcolorbicycle"},"content":"    public Event(String description, String start, String end) {","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"redcolorbicycle"},"content":"        super(description);","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"redcolorbicycle"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"redcolorbicycle"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"redcolorbicycle"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"redcolorbicycle"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"redcolorbicycle"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + start + \" to: \" + end + \")\";","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"redcolorbicycle"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"redcolorbicycle":16}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"redcolorbicycle"},"content":"public class Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"redcolorbicycle"},"content":"    protected String description;","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"redcolorbicycle"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"redcolorbicycle"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"redcolorbicycle"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"redcolorbicycle"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"redcolorbicycle"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"redcolorbicycle"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"redcolorbicycle"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"redcolorbicycle"},"content":"        return (\"[\"+ this.getStatusIcon()+\"] \" + this.description);","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"redcolorbicycle"},"content":"    public void Mark() {","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"redcolorbicycle"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-22"},{"lineNumber":20,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":22,"author":{"gitId":"redcolorbicycle"},"content":"    public void unMark() {","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"redcolorbicycle"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":26,"author":{"gitId":"redcolorbicycle"},"content":"    //...","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"redcolorbicycle"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"redcolorbicycle":27}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"redcolorbicycle"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"redcolorbicycle"},"content":"    protected String by;","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"redcolorbicycle"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"redcolorbicycle"},"content":"        super(description);","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"redcolorbicycle"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"redcolorbicycle"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"redcolorbicycle"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"redcolorbicycle"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"redcolorbicycle":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"redcolorbicycle"},"content":"test","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"redcolorbicycle"},"content":"todo cs2103","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"redcolorbicycle"},"content":"deadline cs2103 /by tonight","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"redcolorbicycle"},"content":"event cs2103 /tonight 8pm /tonight 11pm","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"redcolorbicycle"},"content":"listi","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"redcolorbicycle"},"content":"mark 1","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"redcolorbicycle"},"content":"mark 2","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"redcolorbicycle"},"content":"unmark 2","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"redcolorbicycle"},"content":"unmark 1","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"redcolorbicycle"},"content":"list","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"redcolorbicycle"},"content":"feed bread to bearducky","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"redcolorbicycle"},"content":"bye","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"redcolorbicycle":12}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"redcolorbicycle"},"content":"del ACTUAL.TXT","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"redcolorbicycle":1,"-":20}}]
