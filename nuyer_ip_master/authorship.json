[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nuyer"},"content":"import java.io.Serializable;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"nuyer"},"content":"public class Deadline extends Task implements Serializable {","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"nuyer"},"content":"    private String deadline;","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"nuyer"},"content":"    private static final long serialVersionUID \u003d 3L;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"nuyer"},"content":"    Deadline(String description, String deadline) {","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"nuyer"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"nuyer"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"nuyer"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"nuyer"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"nuyer"},"content":"        return \"[D]\" + \"[\" + (isDone ? \"X\" : \" \") + \"] \" + description + \"(by: \"","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"nuyer"},"content":"                + deadline + \")\";","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"nuyer"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"nuyer":17}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nuyer"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"nuyer"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"nuyer"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"nuyer"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"nuyer"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"nuyer"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"nuyer"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"nuyer"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"nuyer"},"content":"import java.util.List;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"nuyer"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"nuyer"},"content":"    private static final Path TASKS_CACHE_PATH \u003d Path.of(\".duke-cache\");","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"nuyer"},"content":"    public static List\u003cTask\u003e tasksList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"nuyer"},"content":"    private static final String horiLine \u003d \"---------------------------------\\n\";","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"nuyer"},"content":"    enum Instruction {","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"nuyer"},"content":"        LIST, TODO, DEADLINE, EVENT, MARK, UNMARK, DELETE","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"nuyer"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"nuyer"},"content":"    private static Instruction toInstruction(String input) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"nuyer"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"nuyer"},"content":"            return Instruction.valueOf(input.toUpperCase());","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"nuyer"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"nuyer"},"content":"            throw new DukeException(\"Please enter instruction in the correct format\" +","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"nuyer"},"content":"                    \"\\nHere are valid instructions: list, mark, unmark, deadline, event, todo\");","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"nuyer"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"nuyer"},"content":"    private static void greet() {","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"nuyer"},"content":"        String greet \u003d \"Hello! I\u0027m Dino\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"nuyer"},"content":"                + \"What can I do for you?\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"nuyer"},"content":"                + horiLine;","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"nuyer"},"content":"        System.out.println(greet);","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"nuyer"},"content":"        load();","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"nuyer"},"content":"        greet();","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"nuyer"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"nuyer"},"content":"        String input \u003d scanner.nextLine();","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"nuyer"},"content":"        while(!input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"nuyer"},"content":"            System.out.println(horiLine);","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"nuyer"},"content":"            try {","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"nuyer"},"content":"                processInput(input);","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"nuyer"},"content":"            } catch(DukeException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"nuyer"},"content":"                System.out.println(\"Invalid Instruction: \" + e.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"nuyer"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"nuyer"},"content":"            System.out.println(horiLine);","lastModifiedDate":"2024-01-25"},{"lineNumber":53,"author":{"gitId":"nuyer"},"content":"            input \u003d scanner.nextLine();","lastModifiedDate":"2024-01-25"},{"lineNumber":54,"author":{"gitId":"nuyer"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":55,"author":{"gitId":"nuyer"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-01-25"},{"lineNumber":56,"author":{"gitId":"nuyer"},"content":"        scanner.close();","lastModifiedDate":"2024-01-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":58,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":59,"author":{"gitId":"nuyer"},"content":"    private static void processInput(String input) throws DukeException {","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"nuyer"},"content":"        String[] parsedInput \u003d input.split(\" \", 2);","lastModifiedDate":"2024-01-25"},{"lineNumber":61,"author":{"gitId":"nuyer"},"content":"        Instruction ins \u003d toInstruction(parsedInput[0]);","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"nuyer"},"content":"        String details \u003d parsedInput.length \u003e 1 ? parsedInput[1] : \"\";","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"nuyer"},"content":"        switch (ins) {","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"nuyer"},"content":"            case LIST:","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"nuyer"},"content":"                listTasks();","lastModifiedDate":"2024-01-25"},{"lineNumber":66,"author":{"gitId":"nuyer"},"content":"                save();","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"nuyer"},"content":"                break;","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"nuyer"},"content":"            case MARK:","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"nuyer"},"content":"                completeTask(details);","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"nuyer"},"content":"                save();","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"nuyer"},"content":"                break;","lastModifiedDate":"2024-02-04"},{"lineNumber":72,"author":{"gitId":"nuyer"},"content":"            case UNMARK:","lastModifiedDate":"2024-02-04"},{"lineNumber":73,"author":{"gitId":"nuyer"},"content":"                uncompleteTask(details);","lastModifiedDate":"2024-02-04"},{"lineNumber":74,"author":{"gitId":"nuyer"},"content":"                save();","lastModifiedDate":"2024-02-04"},{"lineNumber":75,"author":{"gitId":"nuyer"},"content":"                break;","lastModifiedDate":"2024-02-04"},{"lineNumber":76,"author":{"gitId":"nuyer"},"content":"            case TODO:","lastModifiedDate":"2024-02-04"},{"lineNumber":77,"author":{"gitId":"nuyer"},"content":"                addTodo(details);","lastModifiedDate":"2024-02-04"},{"lineNumber":78,"author":{"gitId":"nuyer"},"content":"                save();","lastModifiedDate":"2024-02-04"},{"lineNumber":79,"author":{"gitId":"nuyer"},"content":"                break;","lastModifiedDate":"2024-02-04"},{"lineNumber":80,"author":{"gitId":"nuyer"},"content":"            case DEADLINE:","lastModifiedDate":"2024-02-04"},{"lineNumber":81,"author":{"gitId":"nuyer"},"content":"                addDeadline(details);","lastModifiedDate":"2024-02-04"},{"lineNumber":82,"author":{"gitId":"nuyer"},"content":"                save();","lastModifiedDate":"2024-02-04"},{"lineNumber":83,"author":{"gitId":"nuyer"},"content":"                break;","lastModifiedDate":"2024-02-04"},{"lineNumber":84,"author":{"gitId":"nuyer"},"content":"            case EVENT:","lastModifiedDate":"2024-02-04"},{"lineNumber":85,"author":{"gitId":"nuyer"},"content":"                addEvent(details);","lastModifiedDate":"2024-02-04"},{"lineNumber":86,"author":{"gitId":"nuyer"},"content":"                save();","lastModifiedDate":"2024-02-04"},{"lineNumber":87,"author":{"gitId":"nuyer"},"content":"                break;","lastModifiedDate":"2024-02-04"},{"lineNumber":88,"author":{"gitId":"nuyer"},"content":"            case DELETE:","lastModifiedDate":"2024-02-04"},{"lineNumber":89,"author":{"gitId":"nuyer"},"content":"                deleteTask(details);","lastModifiedDate":"2024-02-04"},{"lineNumber":90,"author":{"gitId":"nuyer"},"content":"                save();","lastModifiedDate":"2024-02-04"},{"lineNumber":91,"author":{"gitId":"nuyer"},"content":"                break;","lastModifiedDate":"2024-02-04"},{"lineNumber":92,"author":{"gitId":"nuyer"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":93,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":94,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":95,"author":{"gitId":"nuyer"},"content":"    private static void listTasks() {","lastModifiedDate":"2024-01-25"},{"lineNumber":96,"author":{"gitId":"nuyer"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-01-25"},{"lineNumber":97,"author":{"gitId":"nuyer"},"content":"        for (int i \u003d 0; i \u003c tasksList.size(); i++) {","lastModifiedDate":"2024-01-31"},{"lineNumber":98,"author":{"gitId":"nuyer"},"content":"            System.out.println(\"  \" + (i + 1) + \".\" + tasksList.get(i));","lastModifiedDate":"2024-01-31"},{"lineNumber":99,"author":{"gitId":"nuyer"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":100,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":101,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":102,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":103,"author":{"gitId":"nuyer"},"content":"    private static void completeTask(String index) throws DukeException{","lastModifiedDate":"2024-02-04"},{"lineNumber":104,"author":{"gitId":"nuyer"},"content":"        if (index.length() \u003c 1) { throw new DukeException(\"Please enter the task number that you want to mark as incomplete: ex. unmark 2\"); }","lastModifiedDate":"2024-02-04"},{"lineNumber":105,"author":{"gitId":"nuyer"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":106,"author":{"gitId":"nuyer"},"content":"            int i \u003d Integer.parseInt(index) - 1;","lastModifiedDate":"2024-02-04"},{"lineNumber":107,"author":{"gitId":"nuyer"},"content":"            tasksList.get(i).markAsDone();","lastModifiedDate":"2024-02-04"},{"lineNumber":108,"author":{"gitId":"nuyer"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-02-04"},{"lineNumber":109,"author":{"gitId":"nuyer"},"content":"            System.out.println(tasksList.get(i).toString());","lastModifiedDate":"2024-02-04"},{"lineNumber":110,"author":{"gitId":"nuyer"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":111,"author":{"gitId":"nuyer"},"content":"            throw new DukeException(\"Please enter the valid task number\");","lastModifiedDate":"2024-02-04"},{"lineNumber":112,"author":{"gitId":"nuyer"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":113,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":114,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":115,"author":{"gitId":"nuyer"},"content":"    private static void uncompleteTask(String index) throws DukeException{","lastModifiedDate":"2024-02-04"},{"lineNumber":116,"author":{"gitId":"nuyer"},"content":"        if(index.length() \u003c 1) { throw new DukeException(\"Please enter the task number that you want to mark as incomplete: ex. mark 2\"); }","lastModifiedDate":"2024-02-04"},{"lineNumber":117,"author":{"gitId":"nuyer"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":118,"author":{"gitId":"nuyer"},"content":"            int i \u003d Integer.parseInt(index) - 1;","lastModifiedDate":"2024-02-04"},{"lineNumber":119,"author":{"gitId":"nuyer"},"content":"            tasksList.get(i).markAsUndone();","lastModifiedDate":"2024-02-04"},{"lineNumber":120,"author":{"gitId":"nuyer"},"content":"            System.out.println(\"OK, I\u0027ve marked this task as not done yet\");","lastModifiedDate":"2024-02-04"},{"lineNumber":121,"author":{"gitId":"nuyer"},"content":"            System.out.println(tasksList.get(i).toString());","lastModifiedDate":"2024-02-04"},{"lineNumber":122,"author":{"gitId":"nuyer"},"content":"        } catch(Exception e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":123,"author":{"gitId":"nuyer"},"content":"            throw new DukeException(\"Please enter the valid task number\");","lastModifiedDate":"2024-01-30"},{"lineNumber":124,"author":{"gitId":"nuyer"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":125,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":126,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":127,"author":{"gitId":"nuyer"},"content":"    private static void addTodo(String details) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":128,"author":{"gitId":"nuyer"},"content":"        if (details.isEmpty()) {","lastModifiedDate":"2024-02-04"},{"lineNumber":129,"author":{"gitId":"nuyer"},"content":"            throw new DukeException(\"Please enter task description\");","lastModifiedDate":"2024-02-04"},{"lineNumber":130,"author":{"gitId":"nuyer"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":131,"author":{"gitId":"nuyer"},"content":"        tasksList.add(new Todo(details));","lastModifiedDate":"2024-02-04"},{"lineNumber":132,"author":{"gitId":"nuyer"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-02-04"},{"lineNumber":133,"author":{"gitId":"nuyer"},"content":"        System.out.println(\"added: \" + tasksList.get(tasksList.size()-1).toString());","lastModifiedDate":"2024-02-04"},{"lineNumber":134,"author":{"gitId":"nuyer"},"content":"        System.out.println(\"Now you have \" + tasksList.size() + \" tasks in the list.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":135,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":136,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":137,"author":{"gitId":"nuyer"},"content":"    private static void addDeadline(String details) throws DukeException{","lastModifiedDate":"2024-02-04"},{"lineNumber":138,"author":{"gitId":"nuyer"},"content":"        String[] parsedInput \u003d details.split(\"/\", 2);","lastModifiedDate":"2024-02-04"},{"lineNumber":139,"author":{"gitId":"nuyer"},"content":"        if (parsedInput.length !\u003d 2) {","lastModifiedDate":"2024-02-04"},{"lineNumber":140,"author":{"gitId":"nuyer"},"content":"            throw new DukeException(\"Please enter task description and deadline \\n correct format: deadline *task description* /by *deadline*\");}","lastModifiedDate":"2024-02-04"},{"lineNumber":141,"author":{"gitId":"nuyer"},"content":"        tasksList.add(new Deadline(parsedInput[0], parsedInput[1].substring(3)));","lastModifiedDate":"2024-02-04"},{"lineNumber":142,"author":{"gitId":"nuyer"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-02-04"},{"lineNumber":143,"author":{"gitId":"nuyer"},"content":"        System.out.println(\"added: \" + tasksList.get(tasksList.size()-1).toString());","lastModifiedDate":"2024-02-04"},{"lineNumber":144,"author":{"gitId":"nuyer"},"content":"        System.out.println(\"Now you have \" + tasksList.size() + \" tasks in the list.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":146,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":147,"author":{"gitId":"nuyer"},"content":"    private static void addEvent(String details) throws DukeException{","lastModifiedDate":"2024-02-04"},{"lineNumber":148,"author":{"gitId":"nuyer"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":149,"author":{"gitId":"nuyer"},"content":"            String[] parsedInput \u003d details.split(\"/\", 3);","lastModifiedDate":"2024-02-04"},{"lineNumber":150,"author":{"gitId":"nuyer"},"content":"            tasksList.add(new Event(parsedInput[0], parsedInput[1].substring(5), parsedInput[2].substring(3)));","lastModifiedDate":"2024-02-04"},{"lineNumber":151,"author":{"gitId":"nuyer"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-02-04"},{"lineNumber":152,"author":{"gitId":"nuyer"},"content":"            System.out.println(\"added: \" + tasksList.get(tasksList.size()-1).toString());","lastModifiedDate":"2024-02-04"},{"lineNumber":153,"author":{"gitId":"nuyer"},"content":"            System.out.println(\"Now you have \" + tasksList.size() + \" tasks in the list.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":154,"author":{"gitId":"nuyer"},"content":"        } catch (Exception e){","lastModifiedDate":"2024-01-31"},{"lineNumber":155,"author":{"gitId":"nuyer"},"content":"            throw new DukeException(\"Please enter event description and time in the correct format\\ncorrect format: event *event name* /from *date-time* /to *date-time*\");","lastModifiedDate":"2024-02-04"},{"lineNumber":156,"author":{"gitId":"nuyer"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":157,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":158,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":159,"author":{"gitId":"nuyer"},"content":"    private static void deleteTask(String index) throws DukeException{","lastModifiedDate":"2024-02-04"},{"lineNumber":160,"author":{"gitId":"nuyer"},"content":"        if (index.length() \u003c 1) { throw new DukeException(\"Please enter the task number that you want to delete: ex. delete 2\"); }","lastModifiedDate":"2024-02-04"},{"lineNumber":161,"author":{"gitId":"nuyer"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":162,"author":{"gitId":"nuyer"},"content":"            int i \u003d Integer.parseInt(index) - 1;","lastModifiedDate":"2024-02-04"},{"lineNumber":163,"author":{"gitId":"nuyer"},"content":"            String task \u003d tasksList.get(i).toString();","lastModifiedDate":"2024-02-04"},{"lineNumber":164,"author":{"gitId":"nuyer"},"content":"            System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-01-31"},{"lineNumber":165,"author":{"gitId":"nuyer"},"content":"            System.out.println(task);","lastModifiedDate":"2024-01-31"},{"lineNumber":166,"author":{"gitId":"nuyer"},"content":"            tasksList.remove(i);","lastModifiedDate":"2024-02-04"},{"lineNumber":167,"author":{"gitId":"nuyer"},"content":"            System.out.println(\"Now you have \" + tasksList.size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":168,"author":{"gitId":"nuyer"},"content":"        } catch(Exception e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":169,"author":{"gitId":"nuyer"},"content":"            throw new DukeException(\"Please enter the valid task number\");","lastModifiedDate":"2024-01-30"},{"lineNumber":170,"author":{"gitId":"nuyer"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":171,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":172,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":173,"author":{"gitId":"nuyer"},"content":"    private static void load() {","lastModifiedDate":"2024-02-04"},{"lineNumber":174,"author":{"gitId":"nuyer"},"content":"        if (Files.notExists(TASKS_CACHE_PATH)) {","lastModifiedDate":"2024-02-04"},{"lineNumber":175,"author":{"gitId":"nuyer"},"content":"            System.out.println(\"No cache found\");","lastModifiedDate":"2024-02-04"},{"lineNumber":176,"author":{"gitId":"nuyer"},"content":"            tasksList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-04"},{"lineNumber":177,"author":{"gitId":"nuyer"},"content":"        } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":178,"author":{"gitId":"nuyer"},"content":"            try {","lastModifiedDate":"2024-02-04"},{"lineNumber":179,"author":{"gitId":"nuyer"},"content":"                FileInputStream fileInputStream \u003d new FileInputStream(TASKS_CACHE_PATH.toString());","lastModifiedDate":"2024-02-04"},{"lineNumber":180,"author":{"gitId":"nuyer"},"content":"                ObjectInputStream objInputStream \u003d new ObjectInputStream(fileInputStream);","lastModifiedDate":"2024-02-04"},{"lineNumber":181,"author":{"gitId":"nuyer"},"content":"                tasksList \u003d (List\u003cTask\u003e) objInputStream.readObject();","lastModifiedDate":"2024-02-04"},{"lineNumber":182,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":183,"author":{"gitId":"nuyer"},"content":"                objInputStream.close();","lastModifiedDate":"2024-02-04"},{"lineNumber":184,"author":{"gitId":"nuyer"},"content":"                fileInputStream.close();","lastModifiedDate":"2024-02-04"},{"lineNumber":185,"author":{"gitId":"nuyer"},"content":"                System.out.println(String.format(\"Tasks downloaded from %s\", TASKS_CACHE_PATH));","lastModifiedDate":"2024-02-04"},{"lineNumber":186,"author":{"gitId":"nuyer"},"content":"            } catch (IOException | ClassNotFoundException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":187,"author":{"gitId":"nuyer"},"content":"                System.out.println(\"Unable to download existing tasks\");","lastModifiedDate":"2024-02-04"},{"lineNumber":188,"author":{"gitId":"nuyer"},"content":"                tasksList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-04"},{"lineNumber":189,"author":{"gitId":"nuyer"},"content":"                try {","lastModifiedDate":"2024-02-04"},{"lineNumber":190,"author":{"gitId":"nuyer"},"content":"                    Files.delete(TASKS_CACHE_PATH);","lastModifiedDate":"2024-02-04"},{"lineNumber":191,"author":{"gitId":"nuyer"},"content":"                } catch (IOException ignored) {","lastModifiedDate":"2024-02-04"},{"lineNumber":192,"author":{"gitId":"nuyer"},"content":"                }","lastModifiedDate":"2024-02-04"},{"lineNumber":193,"author":{"gitId":"nuyer"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":194,"author":{"gitId":"nuyer"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":195,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":196,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":197,"author":{"gitId":"nuyer"},"content":"    private static void save() {","lastModifiedDate":"2024-02-04"},{"lineNumber":198,"author":{"gitId":"nuyer"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":199,"author":{"gitId":"nuyer"},"content":"            FileOutputStream fileOutputStream \u003d new FileOutputStream(TASKS_CACHE_PATH.toString());","lastModifiedDate":"2024-02-04"},{"lineNumber":200,"author":{"gitId":"nuyer"},"content":"            ObjectOutputStream objOutputStream \u003d new ObjectOutputStream(fileOutputStream);","lastModifiedDate":"2024-02-04"},{"lineNumber":201,"author":{"gitId":"nuyer"},"content":"            objOutputStream.writeObject(tasksList);","lastModifiedDate":"2024-02-04"},{"lineNumber":202,"author":{"gitId":"nuyer"},"content":"            ","lastModifiedDate":"2024-02-04"},{"lineNumber":203,"author":{"gitId":"nuyer"},"content":"            objOutputStream.close();","lastModifiedDate":"2024-02-04"},{"lineNumber":204,"author":{"gitId":"nuyer"},"content":"            fileOutputStream.close();","lastModifiedDate":"2024-02-04"},{"lineNumber":205,"author":{"gitId":"nuyer"},"content":"        } catch (IOException ignored) {","lastModifiedDate":"2024-02-04"},{"lineNumber":206,"author":{"gitId":"nuyer"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":208,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"nuyer":203,"-":6}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nuyer"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"nuyer"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"nuyer"},"content":"        super(message);","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"nuyer"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"nuyer":6}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nuyer"},"content":"import java.io.Serializable;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"nuyer"},"content":"public class Event extends Task implements Serializable {","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"nuyer"},"content":"    private String start;","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"nuyer"},"content":"    private String end;","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"nuyer"},"content":"    private static final long serialVersionUID \u003d 4L;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"nuyer"},"content":"    public Event(String description, String start, String end) {","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"nuyer"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"nuyer"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"nuyer"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"nuyer"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"nuyer"},"content":"        return \"[E]\" + \"[\" + (isDone ? \"X\" : \" \") + \"] \" + description","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"nuyer"},"content":"                + \"(from: \" + start","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"nuyer"},"content":"                + \"to: \"+ end + \")\";","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"nuyer"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"nuyer":19}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nuyer"},"content":"import java.io.Serializable;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"nuyer"},"content":"public class Task implements Serializable {","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"nuyer"},"content":"    protected String description;","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"nuyer"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"nuyer"},"content":"    private static final long serialVersionUID \u003d 1L;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"nuyer"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"nuyer"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"nuyer"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"nuyer"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"nuyer"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"nuyer"},"content":"    public void markAsUndone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"nuyer"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"nuyer"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"nuyer"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"nuyer"},"content":"        return \"[T]\" + \"[\" + (isDone ? \"X\" : \" \") + \"] \" + description;","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"nuyer"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"nuyer":25}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nuyer"},"content":"import java.io.Serializable;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"nuyer"},"content":"public class Todo extends Task implements Serializable {","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"nuyer"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"nuyer"},"content":"        super(description);","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"nuyer"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"nuyer":8}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nuyer"},"content":"todo borrow book","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"nuyer"},"content":"todo Read a book","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"nuyer"},"content":"event Attend meeting /from 12:00 to/ 14:00","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"nuyer"},"content":"mark 1","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"nuyer"},"content":"unmark 0","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"nuyer"},"content":"deadline","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"nuyer"},"content":"delete 0","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"nuyer"},"content":"list","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"nuyer"},"content":"deadline CS2101 slides /by sunday","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"nuyer"},"content":"event group project meeting /from 11am /to 12pm","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"nuyer"},"content":"delete 1","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"nuyer"},"content":"mark 2","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"nuyer"},"content":"deadline /from 12:00 to/ 14:00","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"nuyer"},"content":"list","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"nuyer"},"content":"unmark 3","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"nuyer"},"content":"delete","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"nuyer"},"content":"deadline","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"nuyer"},"content":"todo study","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"nuyer"},"content":"list","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"nuyer"},"content":"bye","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"nuyer":20}}]
