[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"plugins {","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":"    id \u0027java\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":"    id \u0027application\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"amanzainal"},"content":"repositories {","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"amanzainal"},"content":"    jcenter()","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"amanzainal"},"content":"dependencies {","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"amanzainal"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"amanzainal"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"amanzainal"},"content":"checkstyle {","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"amanzainal"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"amanzainal"},"content":"test {","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"amanzainal"},"content":"    useJUnitPlatform()","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"amanzainal"},"content":"application {","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"amanzainal"},"content":"    mainClassName \u003d \u0027duke.Duke\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"amanzainal":26}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"[T] | [ ] | test123","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":"[D] | [ ] | DO WORK | 2024-02-27 13:05","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":"[E] | [ ] | tutorial | 2022-08-12 00:00 | 2024-08-15 15:15","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":"[D] | [ ] | lecture | 2024-08-15 15:15","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"amanzainal":4}},{"path":"plugin/src/functionalTest/java/org/example/IpPluginFunctionalTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"/*","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":" * This Java source file was generated by the Gradle \u0027init\u0027 task.","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":"package org.example;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"amanzainal"},"content":"import java.io.File;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"amanzainal"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"amanzainal"},"content":"import java.io.Writer;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"amanzainal"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"amanzainal"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"amanzainal"},"content":"import org.gradle.testkit.runner.GradleRunner;","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"amanzainal"},"content":"import org.gradle.testkit.runner.BuildResult;","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"amanzainal"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"amanzainal"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"amanzainal"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"amanzainal"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"amanzainal"},"content":" * A simple functional test for the \u0027org.example.greeting\u0027 plugin.","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"amanzainal"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"amanzainal"},"content":"class IpPluginFunctionalTest {","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"amanzainal"},"content":"    @TempDir","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"amanzainal"},"content":"    File projectDir;","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"amanzainal"},"content":"    private File getBuildFile() {","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"amanzainal"},"content":"        return new File(projectDir, \"build.gradle\");","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"amanzainal"},"content":"    private File getSettingsFile() {","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"amanzainal"},"content":"        return new File(projectDir, \"settings.gradle\");","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"amanzainal"},"content":"    @Test void canRunTask() throws IOException {","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"amanzainal"},"content":"        writeString(getSettingsFile(), \"\");","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"amanzainal"},"content":"        writeString(getBuildFile(),","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"amanzainal"},"content":"            \"plugins {\" +","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"amanzainal"},"content":"            \"  id(\u0027org.example.greeting\u0027)\" +","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"amanzainal"},"content":"            \"}\");","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"amanzainal"},"content":"        // Run the build","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"amanzainal"},"content":"        GradleRunner runner \u003d GradleRunner.create();","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"amanzainal"},"content":"        runner.forwardOutput();","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"amanzainal"},"content":"        runner.withPluginClasspath();","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"amanzainal"},"content":"        runner.withArguments(\"greeting\");","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"amanzainal"},"content":"        runner.withProjectDir(projectDir);","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"amanzainal"},"content":"        BuildResult result \u003d runner.build();","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"amanzainal"},"content":"        // Verify the result","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"amanzainal"},"content":"        assertTrue(result.getOutput().contains(\"Hello from plugin \u0027org.example.greeting\u0027\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"amanzainal"},"content":"    private void writeString(File file, String string) throws IOException {","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"amanzainal"},"content":"        try (Writer writer \u003d new FileWriter(file)) {","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"amanzainal"},"content":"            writer.write(string);","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"amanzainal"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"amanzainal":56}},{"path":"plugin/src/main/java/org/example/IpPlugin.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"/*","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":" * This Java source file was generated by the Gradle \u0027init\u0027 task.","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":"package org.example;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"amanzainal"},"content":"import org.gradle.api.Project;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"amanzainal"},"content":"import org.gradle.api.Plugin;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"amanzainal"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"amanzainal"},"content":" * A simple \u0027hello world\u0027 plugin.","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"amanzainal"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"amanzainal"},"content":"public class IpPlugin implements Plugin\u003cProject\u003e {","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"amanzainal"},"content":"    public void apply(Project project) {","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"amanzainal"},"content":"        // Register a task","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"amanzainal"},"content":"        project.getTasks().register(\"greeting\", task -\u003e {","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"amanzainal"},"content":"            task.doLast(s -\u003e System.out.println(\"Hello from plugin \u0027org.example.greeting\u0027\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"amanzainal"},"content":"        });","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"amanzainal":19}},{"path":"plugin/src/test/java/org/example/IpPluginTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"/*","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":" * This Java source file was generated by the Gradle \u0027init\u0027 task.","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":"package org.example;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"amanzainal"},"content":"import org.gradle.testfixtures.ProjectBuilder;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"amanzainal"},"content":"import org.gradle.api.Project;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"amanzainal"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"amanzainal"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"amanzainal"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"amanzainal"},"content":" * A simple unit test for the \u0027org.example.greeting\u0027 plugin.","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"amanzainal"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"amanzainal"},"content":"class IpPluginTest {","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"amanzainal"},"content":"    @Test void pluginRegistersATask() {","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"amanzainal"},"content":"        // Create a test project and apply the plugin","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"amanzainal"},"content":"        Project project \u003d ProjectBuilder.builder().build();","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"amanzainal"},"content":"        project.getPlugins().apply(\"org.example.greeting\");","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"amanzainal"},"content":"        // Verify the result","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"amanzainal"},"content":"        assertNotNull(project.getTasks().findByName(\"greeting\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"amanzainal":23}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"package duke;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"amanzainal"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"amanzainal"},"content":"import duke.command.Command;","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"amanzainal"},"content":"import duke.parser.Parser;","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"amanzainal"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"amanzainal"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"amanzainal"},"content":"import duke.ui.Messages;","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"amanzainal"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"amanzainal"},"content":" * The main class representing the Duke chatbot application.","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"amanzainal"},"content":" *","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"amanzainal"},"content":" * \u003cp\u003eThe {@code Duke} class serves as the entry point for the Duke chatbot application.","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"amanzainal"},"content":" * It handles user input, parsing, command execution, and storage operations.\u003c/p\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"amanzainal"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"amanzainal"},"content":"public class Duke {","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"amanzainal"},"content":"    private static final Storage storage \u003d new Storage();","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"amanzainal"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"amanzainal"},"content":"        System.out.printf(Messages.WELCOME);","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"amanzainal"},"content":"        TaskList tasks;","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"amanzainal"},"content":"        try {","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"amanzainal"},"content":"            tasks \u003d storage.load();","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"amanzainal"},"content":"            System.out.println(tasks);","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"amanzainal"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"amanzainal"},"content":"            System.out.printf(\"Warning: something went wrong when loading the TaskList\\n\"","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"amanzainal"},"content":"                + e.getMessage());","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"amanzainal"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"amanzainal"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":36,"author":{"gitId":"amanzainal"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-10"},{"lineNumber":37,"author":{"gitId":"amanzainal"},"content":"        Command currentCommand \u003d null;","lastModifiedDate":"2024-02-10"},{"lineNumber":38,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":40,"author":{"gitId":"amanzainal"},"content":"        while (true) {","lastModifiedDate":"2024-02-10"},{"lineNumber":41,"author":{"gitId":"amanzainal"},"content":"            try {","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"amanzainal"},"content":"                System.out.printf(\"\\n-\u003e \");","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":44,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":45,"author":{"gitId":"amanzainal"},"content":"                String userInput \u003d sc.nextLine();","lastModifiedDate":"2024-02-10"},{"lineNumber":46,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"amanzainal"},"content":"                // Parse user input","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"amanzainal"},"content":"                Command command \u003d Parser.parseInput(userInput","lastModifiedDate":"2024-02-10"},{"lineNumber":49,"author":{"gitId":"amanzainal"},"content":"                    );","lastModifiedDate":"2024-02-10"},{"lineNumber":50,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":51,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"amanzainal"},"content":"                // Execute the command","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"amanzainal"},"content":"                command.execute(tasks);","lastModifiedDate":"2024-02-10"},{"lineNumber":54,"author":{"gitId":"amanzainal"},"content":"                storage.save(tasks);","lastModifiedDate":"2024-02-10"},{"lineNumber":55,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"amanzainal"},"content":"                // Exit condition","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"amanzainal"},"content":"                if (command.getCommand().equals(\"bye\")) {","lastModifiedDate":"2024-02-10"},{"lineNumber":58,"author":{"gitId":"amanzainal"},"content":"                    System.out.printf(Messages.EXIT);","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"amanzainal"},"content":"                    break;","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"amanzainal"},"content":"                }","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"amanzainal"},"content":"            } catch (NoSuchElementException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"amanzainal"},"content":"                System.out.println(\"Error reading user input. Exiting.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"amanzainal"},"content":"                break;","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"amanzainal"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":65,"author":{"gitId":"amanzainal"},"content":"                throw new RuntimeException(e);","lastModifiedDate":"2024-02-10"},{"lineNumber":66,"author":{"gitId":"amanzainal"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"amanzainal"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"amanzainal"},"content":"        sc.close();","lastModifiedDate":"2024-02-10"},{"lineNumber":69,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"amanzainal":70}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"package duke.command;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":"import java.util.List;","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"amanzainal"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"amanzainal"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"amanzainal"},"content":" * An instruction class that encapsulates the action of adding a task","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"amanzainal"},"content":" * into a TaskList.","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"amanzainal"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"amanzainal"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"amanzainal"},"content":"    private Task task;","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"amanzainal"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"amanzainal"},"content":"     * Represents a command to add a task to the task list.","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"amanzainal"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"amanzainal"},"content":"     * \u003cp\u003eThe {@code AddCommand} class encapsulates the information and actions","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"amanzainal"},"content":"     * required to add a task to the task list. It inherits from the {@code Command}","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"amanzainal"},"content":"     * class and implements the behavior specific to adding a task.\u003c/p\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"amanzainal"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"amanzainal"},"content":"     * @param task The task to be added to the task list.","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"amanzainal"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"amanzainal"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"amanzainal"},"content":"        super(\"add\", List.of());","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"amanzainal"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"amanzainal"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"amanzainal"},"content":"     * Executes the add task command.","lastModifiedDate":"2024-02-11"},{"lineNumber":31,"author":{"gitId":"amanzainal"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"amanzainal"},"content":"     * \u003cp\u003eThis method adds the specified task to the task list and prints a confirmation message.","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"amanzainal"},"content":"     * It then returns the updated task list.\u003c/p\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":34,"author":{"gitId":"amanzainal"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":35,"author":{"gitId":"amanzainal"},"content":"     * @param tasks The task list to which the task is added.","lastModifiedDate":"2024-02-11"},{"lineNumber":36,"author":{"gitId":"amanzainal"},"content":"     * @return The updated task list after adding the task.","lastModifiedDate":"2024-02-11"},{"lineNumber":37,"author":{"gitId":"amanzainal"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":38,"author":{"gitId":"amanzainal"},"content":"    public TaskList execute(TaskList tasks) {","lastModifiedDate":"2024-02-10"},{"lineNumber":39,"author":{"gitId":"amanzainal"},"content":"        tasks.addTask(task);","lastModifiedDate":"2024-02-10"},{"lineNumber":40,"author":{"gitId":"amanzainal"},"content":"        Integer count \u003d tasks.getNoOfTasks();","lastModifiedDate":"2024-02-10"},{"lineNumber":41,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":42,"author":{"gitId":"amanzainal"},"content":"        System.out.printf(","lastModifiedDate":"2024-02-10"},{"lineNumber":43,"author":{"gitId":"amanzainal"},"content":"            \"\\n        ~~~ \u003e^o_o^\u003c ~~~\\nGot it! I\u0027ve added this task:\\n\"","lastModifiedDate":"2024-02-10"},{"lineNumber":44,"author":{"gitId":"amanzainal"},"content":"            + \"- %s\\n\\nYou have %d task(s) in the list.\\n\",","lastModifiedDate":"2024-02-10"},{"lineNumber":45,"author":{"gitId":"amanzainal"},"content":"            task, count);","lastModifiedDate":"2024-02-10"},{"lineNumber":46,"author":{"gitId":"amanzainal"},"content":"        return tasks;","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"amanzainal":48}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"package duke.command;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":"import java.util.List;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"amanzainal"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"amanzainal"},"content":" * A command class representing the action of ending the chatbot session.","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"amanzainal"},"content":" *","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"amanzainal"},"content":" * \u003cp\u003eThe {@code ByeCommand} class encapsulates the information and actions","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"amanzainal"},"content":" * required to end the chatbot session gracefully. It inherits from the {@code Command}","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"amanzainal"},"content":" * class and implements the behavior specific to ending the session.\u003c/p\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"amanzainal"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"amanzainal"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"amanzainal"},"content":"    protected String command;","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"amanzainal"},"content":"    protected List\u003cString\u003e arguments;","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"amanzainal"},"content":"    public ByeCommand() {","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"amanzainal"},"content":"        super(\"bye\", List.of());","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"amanzainal"},"content":"    public TaskList execute(TaskList tasks) {","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"amanzainal"},"content":"        return tasks;","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"amanzainal":25}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"package duke.command;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":"import java.util.List;","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"amanzainal"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"amanzainal"},"content":" * An abstract class representing a command in the Duke application.","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"amanzainal"},"content":" *","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"amanzainal"},"content":" * \u003cp\u003eThe {@code Command} class serves as the base class for all specific command classes","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"amanzainal"},"content":" * in the Duke application. It provides common functionality and structure for executing","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"amanzainal"},"content":" * different commands.\u003c/p\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"amanzainal"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"amanzainal"},"content":"public abstract class Command {","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"amanzainal"},"content":"    protected String command;","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"amanzainal"},"content":"    protected List\u003cString\u003e arguments;","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"amanzainal"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"amanzainal"},"content":"    * Constructs a command object with the specified command keyword and arguments.","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"amanzainal"},"content":"    *","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"amanzainal"},"content":"    * @param command   The command keyword representing the type of command.","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"amanzainal"},"content":"    * @param arguments The list of arguments associated with the command.","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"amanzainal"},"content":"    */","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"amanzainal"},"content":"    public Command(String command, List\u003cString\u003e arguments) {","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"amanzainal"},"content":"        this.command \u003d command;","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"amanzainal"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"amanzainal"},"content":"    public abstract TaskList execute(TaskList tasks);","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"amanzainal"},"content":"    public String getCommand() {","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"amanzainal"},"content":"        return this.command;","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"amanzainal"},"content":"    @Override","lastModifiedDate":"2024-02-11"},{"lineNumber":36,"author":{"gitId":"amanzainal"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-02-11"},{"lineNumber":37,"author":{"gitId":"amanzainal"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2024-02-11"},{"lineNumber":38,"author":{"gitId":"amanzainal"},"content":"            return true;","lastModifiedDate":"2024-02-11"},{"lineNumber":39,"author":{"gitId":"amanzainal"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"amanzainal"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2024-02-11"},{"lineNumber":41,"author":{"gitId":"amanzainal"},"content":"            return false;","lastModifiedDate":"2024-02-11"},{"lineNumber":42,"author":{"gitId":"amanzainal"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":43,"author":{"gitId":"amanzainal"},"content":"        if (obj instanceof Command) {","lastModifiedDate":"2024-02-11"},{"lineNumber":44,"author":{"gitId":"amanzainal"},"content":"            Command other \u003d (Command) obj;","lastModifiedDate":"2024-02-11"},{"lineNumber":45,"author":{"gitId":"amanzainal"},"content":"            return command.equals(other.command)","lastModifiedDate":"2024-02-11"},{"lineNumber":46,"author":{"gitId":"amanzainal"},"content":"                \u0026\u0026 (arguments \u003d\u003d null ? other.arguments \u003d\u003d null : arguments.equals(other.arguments));","lastModifiedDate":"2024-02-11"},{"lineNumber":47,"author":{"gitId":"amanzainal"},"content":"        } else if (obj instanceof String) {","lastModifiedDate":"2024-02-11"},{"lineNumber":48,"author":{"gitId":"amanzainal"},"content":"            String otherString \u003d (String) obj;","lastModifiedDate":"2024-02-11"},{"lineNumber":49,"author":{"gitId":"amanzainal"},"content":"            return command.equals(otherString);","lastModifiedDate":"2024-02-11"},{"lineNumber":50,"author":{"gitId":"amanzainal"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":51,"author":{"gitId":"amanzainal"},"content":"        return false;","lastModifiedDate":"2024-02-11"},{"lineNumber":52,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":53,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"amanzainal":53}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"package duke.command;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":"import java.util.List;","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"amanzainal"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"amanzainal"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"amanzainal"},"content":" * A command class representing the action of deleting a task from the task list.","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"amanzainal"},"content":" *","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"amanzainal"},"content":" * \u003cp\u003eThe {@code DeleteCommand} class encapsulates the information and actions","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"amanzainal"},"content":" * required to delete a task from the task list. It inherits from the {@code Command}","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"amanzainal"},"content":" * class and implements the behavior specific to deleting a task.\u003c/p\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"amanzainal"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"amanzainal"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"amanzainal"},"content":"    public DeleteCommand(List\u003cString\u003e arguments) {","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"amanzainal"},"content":"        super(\"delete\", arguments);","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"amanzainal"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"amanzainal"},"content":"    public TaskList execute(TaskList tasks) throws DukeException {","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"amanzainal"},"content":"        try {","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"amanzainal"},"content":"            if (arguments.isEmpty()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"amanzainal"},"content":"                throw new DukeException(\"Hey, you need to tell me which one to delete! Try \u0027delete \u003cINDEX\u003e\u0027. ~(\u003e_\u003c)\\n\");","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"amanzainal"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"amanzainal"},"content":"            int index \u003d Integer.parseInt(arguments.get(0)) - 1;","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"amanzainal"},"content":"            if (index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.getNoOfTasks()) {","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"amanzainal"},"content":"                tasks.deleteTask(index);","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"amanzainal"},"content":"                System.out.printf(\"\\nDeleted task %d ~(^-^)\\n \", index + 1);","lastModifiedDate":"2024-01-26"},{"lineNumber":32,"author":{"gitId":"amanzainal"},"content":"            } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"amanzainal"},"content":"                throw new DukeException(String.format(\"I can\u0027t do that.. Task index %s is out of range! ~(T_T)\\n\",","lastModifiedDate":"2024-02-11"},{"lineNumber":34,"author":{"gitId":"amanzainal"},"content":"                    arguments.get(0)));","lastModifiedDate":"2024-02-11"},{"lineNumber":35,"author":{"gitId":"amanzainal"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"amanzainal"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"amanzainal"},"content":"            System.out.printf(\"%s\", e.getMessage());","lastModifiedDate":"2024-01-26"},{"lineNumber":38,"author":{"gitId":"amanzainal"},"content":"            return tasks;","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"amanzainal"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"amanzainal"},"content":"            System.out.printf(\"Sigh.. That\u0027s not a valid number! Try \u0027delete \u003cNUMBER\u003e\u0027.\\n\");","lastModifiedDate":"2024-01-26"},{"lineNumber":41,"author":{"gitId":"amanzainal"},"content":"            return tasks;","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"amanzainal"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"amanzainal"},"content":"        return tasks;","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"amanzainal":46}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"package duke.command;","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":"import java.util.List;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"amanzainal"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"amanzainal"},"content":" * Represents a command to find tasks containing a specific keyword.","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"amanzainal"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"amanzainal"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"amanzainal"},"content":"    private String keyword;","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"amanzainal"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"amanzainal"},"content":"     * Constructs a FindCommand with the specified keyword.","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"amanzainal"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"amanzainal"},"content":"     * @param keyword The keyword to search for.","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"amanzainal"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"amanzainal"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"amanzainal"},"content":"        super(\"find\", List.of(keyword));","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"amanzainal"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"amanzainal"},"content":"    @Override","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"amanzainal"},"content":"    public TaskList execute(TaskList tasks) {","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"amanzainal"},"content":"        TaskList matchingTasks \u003d tasks.findTasksByKeyword(keyword);","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"amanzainal"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2024-02-11"},{"lineNumber":27,"author":{"gitId":"amanzainal"},"content":"        System.out.println(matchingTasks);","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"amanzainal"},"content":"        return tasks;","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"amanzainal":30}},{"path":"src/main/java/duke/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"package duke.command;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":"import java.util.List;","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"amanzainal"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"amanzainal"},"content":" * A command class representing the action of displaying a list of available commands.","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"amanzainal"},"content":" *","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"amanzainal"},"content":" * \u003cp\u003eThe {@code HelpCommand} class encapsulates the information and actions","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"amanzainal"},"content":" * required to display a list of available commands to the user. It inherits from the {@code Command}","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"amanzainal"},"content":" * class and implements the behavior specific to displaying the help message.\u003c/p\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"amanzainal"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"amanzainal"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"amanzainal"},"content":"    public HelpCommand() {","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"amanzainal"},"content":"        super(\"help\", List.of());","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"amanzainal"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"amanzainal"},"content":"    public TaskList execute(TaskList tasks) {","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"amanzainal"},"content":"        System.out.printf(\"\\nHere\u0027s all the things I can do for you! ~(^o.o^)\\n\");","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"amanzainal"},"content":"        System.out.println(\"1. todo \u003cdescription\u003e - Add a reminder to do something!\");","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"amanzainal"},"content":"        System.out.println(\"2. deadline \u003cdescription\u003e /by \u003cdeadline\u003e - Add a reminder.. with a deadline!\");","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"amanzainal"},"content":"        System.out.println(\"3. event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e - Add an event to your calendar\");","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"amanzainal"},"content":"        System.out.println(\"4. list - List all your tasks and events\");","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"amanzainal"},"content":"        System.out.println(\"5. viewbydate \u003cdate\u003e - List all your tasks and events on a specific date\");","lastModifiedDate":"2024-02-11"},{"lineNumber":27,"author":{"gitId":"amanzainal"},"content":"        System.out.println(\"6. find \u003ckeyword\u003e - List all your tasks and events with \u003ckeyword\u003e\");","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"amanzainal"},"content":"        System.out.println(\"7. mark \u003cindex\u003e - Mark a task as done\");","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"amanzainal"},"content":"        System.out.println(\"8. unmark \u003cindex\u003e - Mark a task as undone\");","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"amanzainal"},"content":"        System.out.println(\"9. delete \u003cindex\u003e - Delete a task. Warning! I can\u0027t restore deleted tasks\");","lastModifiedDate":"2024-02-11"},{"lineNumber":31,"author":{"gitId":"amanzainal"},"content":"        System.out.println(\"10. help - Show this list of commands\");","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"amanzainal"},"content":"        System.out.println(\"11. bye - Leave :(\");","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"amanzainal"},"content":"        return tasks;","lastModifiedDate":"2024-01-26"},{"lineNumber":34,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":35,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"amanzainal":35}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"package duke.command;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":"import java.util.List;","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"amanzainal"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"amanzainal"},"content":" * A command class representing the action of listing all tasks.","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"amanzainal"},"content":" *","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"amanzainal"},"content":" * \u003cp\u003eThe {@code ListCommand} class encapsulates the information and actions","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"amanzainal"},"content":" * required to list all tasks stored in the task list. It inherits from the {@code Command}","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"amanzainal"},"content":" * class and implements the behavior specific to listing tasks.\u003c/p\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"amanzainal"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"amanzainal"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"amanzainal"},"content":"    public ListCommand() {","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"amanzainal"},"content":"        super(\"list\", List.of());","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"amanzainal"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"amanzainal"},"content":"    public TaskList execute(TaskList tasks) {","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"amanzainal"},"content":"        System.out.printf(\"\\nHere\u0027s your list! ~~(^-^)\\n\");","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"amanzainal"},"content":"        for (int i \u003d 0; i \u003c tasks.getNoOfTasks(); i++) {","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"amanzainal"},"content":"            System.out.printf(\"%d. %s\\n\", i + 1, tasks.getTask(i));","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"amanzainal"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"amanzainal"},"content":"        return tasks;","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"amanzainal":27}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"package duke.command;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":"import java.util.List;","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"amanzainal"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"amanzainal"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"amanzainal"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"amanzainal"},"content":" * A command class representing the action of marking a task as done.","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"amanzainal"},"content":" *","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"amanzainal"},"content":" * \u003cp\u003eThe {@code MarkCommand} class encapsulates the information and actions","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"amanzainal"},"content":" * required to mark a task in the task list as done. It inherits from the {@code Command}","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"amanzainal"},"content":" * class and implements the behavior specific to marking a task as done.\u003c/p\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"amanzainal"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"amanzainal"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"amanzainal"},"content":"    public MarkCommand(List\u003cString\u003e arguments) {","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"amanzainal"},"content":"        super(\"mark\", arguments);","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"amanzainal"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"amanzainal"},"content":"    public TaskList execute(TaskList tasks) throws DukeException {","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"amanzainal"},"content":"        // Assuming arguments is a list of one string","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"amanzainal"},"content":"        if (!arguments.isEmpty()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"amanzainal"},"content":"            try {","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"amanzainal"},"content":"                int index \u003d Integer.parseInt(arguments.get(0)) - 1;","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"amanzainal"},"content":"                if (index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.getNoOfTasks()) {","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"amanzainal"},"content":"                    Task task \u003d tasks.getTask(index);","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"amanzainal"},"content":"                    if (!task.isDone()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"amanzainal"},"content":"                        task.markAsDone();","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"amanzainal"},"content":"                        System.out.printf(\"Marked task %d as done: %s\\nGood job! ~(^-^)\\n\",","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"amanzainal"},"content":"                            index + 1, task.getDescription());","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"amanzainal"},"content":"                    } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"amanzainal"},"content":"                        throw new DukeException(String.format(\"I can\u0027t do that.. Task %d is already done! ~(T_T)\\n\",","lastModifiedDate":"2024-02-11"},{"lineNumber":35,"author":{"gitId":"amanzainal"},"content":"                            index + 1));","lastModifiedDate":"2024-02-11"},{"lineNumber":36,"author":{"gitId":"amanzainal"},"content":"                    }","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"amanzainal"},"content":"                } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"amanzainal"},"content":"                    throw new DukeException(String.format(\"I can\u0027t do that.. Task index %s is out of range! ~(T_T)\\n\",","lastModifiedDate":"2024-02-11"},{"lineNumber":39,"author":{"gitId":"amanzainal"},"content":"                        arguments.get(0)));","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"amanzainal"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"amanzainal"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"amanzainal"},"content":"                System.out.printf(\"%s\", e.getMessage());","lastModifiedDate":"2024-01-26"},{"lineNumber":43,"author":{"gitId":"amanzainal"},"content":"                return tasks;","lastModifiedDate":"2024-01-26"},{"lineNumber":44,"author":{"gitId":"amanzainal"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"amanzainal"},"content":"                System.out.printf(\"Sigh.. That\u0027s not a valid number! Try \u0027mark \u003cNUMBER\u003e\u0027.\\n\");","lastModifiedDate":"2024-01-26"},{"lineNumber":46,"author":{"gitId":"amanzainal"},"content":"                return tasks;","lastModifiedDate":"2024-01-26"},{"lineNumber":47,"author":{"gitId":"amanzainal"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"amanzainal"},"content":"        } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"amanzainal"},"content":"            System.out.printf(\"I can\u0027t do that.. You need to specify a task index! Try \\\"mark \u003cindex\u003e\\\".. \\n\");","lastModifiedDate":"2024-01-26"},{"lineNumber":50,"author":{"gitId":"amanzainal"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":52,"author":{"gitId":"amanzainal"},"content":"        return tasks;","lastModifiedDate":"2024-01-25"},{"lineNumber":53,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":54,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"amanzainal":54}},{"path":"src/main/java/duke/command/UnknownCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"package duke.command;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":"import java.util.List;","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"amanzainal"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"amanzainal"},"content":" * A command class representing an unknown / undefined command.","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"amanzainal"},"content":" *","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"amanzainal"},"content":" * \u003cp\u003eThe {@code UnknownCommand} class encapsulates the information and actions","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"amanzainal"},"content":" * required to handle an unknown command. It inherits from the {@code Command} class","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"amanzainal"},"content":" * and represents a command that is not recognized by the Duke chatbot.\u003c/p\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"amanzainal"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"amanzainal"},"content":"public class UnknownCommand extends Command {","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"amanzainal"},"content":"    public UnknownCommand() {","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"amanzainal"},"content":"        super(\"\", List.of());","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"amanzainal"},"content":"    public TaskList execute(TaskList tasks) {","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"amanzainal"},"content":"        return null;","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"amanzainal":22}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"package duke.command;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":"import java.util.List;","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"amanzainal"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"amanzainal"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"amanzainal"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"amanzainal"},"content":" * A command class representing the action of marking a task as undone.","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"amanzainal"},"content":" *","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"amanzainal"},"content":" * \u003cp\u003eThe {@code UnmarkCommand} class encapsulates the information and actions","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"amanzainal"},"content":" * required to mark a task in the task list as done. It inherits from the {@code Command}","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"amanzainal"},"content":" * class and implements the behavior specific to marking a task as done.\u003c/p\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"amanzainal"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"amanzainal"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"amanzainal"},"content":"    public UnmarkCommand(List\u003cString\u003e arguments) {","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"amanzainal"},"content":"        super(\"unmark\", arguments);","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"amanzainal"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"amanzainal"},"content":"    public TaskList execute(TaskList tasks) throws DukeException {","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"amanzainal"},"content":"        // Assuming arguments is a list of one string","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"amanzainal"},"content":"        if (!arguments.isEmpty()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"amanzainal"},"content":"            try {","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"amanzainal"},"content":"                int index \u003d Integer.parseInt(arguments.get(0)) - 1;","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"amanzainal"},"content":"                if (index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.getNoOfTasks()) {","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"amanzainal"},"content":"                    Task task \u003d tasks.getTask(index);","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"amanzainal"},"content":"                    if (task.isDone()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"amanzainal"},"content":"                        task.markUndone();","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"amanzainal"},"content":"                        System.out.printf(\"Oh no.. Marked task %d as undone: %s\\n\", index + 1, task.getDescription());","lastModifiedDate":"2024-01-26"},{"lineNumber":32,"author":{"gitId":"amanzainal"},"content":"                    } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"amanzainal"},"content":"                        throw new DukeException(String.format(\"I can\u0027t do that.. Task %d is already undone! ~(T_T)\\n\",","lastModifiedDate":"2024-02-11"},{"lineNumber":34,"author":{"gitId":"amanzainal"},"content":"                            index + 1));","lastModifiedDate":"2024-02-11"},{"lineNumber":35,"author":{"gitId":"amanzainal"},"content":"                    }","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"amanzainal"},"content":"                } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"amanzainal"},"content":"                    throw new DukeException(String.format(\"I can\u0027t do that.. Task index %s is out of range! ~(T_T)\\n\",","lastModifiedDate":"2024-02-11"},{"lineNumber":38,"author":{"gitId":"amanzainal"},"content":"                        arguments.get(0)));","lastModifiedDate":"2024-02-11"},{"lineNumber":39,"author":{"gitId":"amanzainal"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"amanzainal"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"amanzainal"},"content":"                System.out.printf(\"%s\", e.getMessage());","lastModifiedDate":"2024-01-26"},{"lineNumber":42,"author":{"gitId":"amanzainal"},"content":"                return tasks;","lastModifiedDate":"2024-01-26"},{"lineNumber":43,"author":{"gitId":"amanzainal"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"amanzainal"},"content":"                System.out.printf(\"Sigh.. That\u0027s not a valid number! Try \u0027unmark \u003cNUMBER\u003e\u0027.\\n\");","lastModifiedDate":"2024-01-26"},{"lineNumber":45,"author":{"gitId":"amanzainal"},"content":"                return tasks;","lastModifiedDate":"2024-01-26"},{"lineNumber":46,"author":{"gitId":"amanzainal"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"amanzainal"},"content":"        } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"amanzainal"},"content":"            System.out.printf(\"I can\u0027t do that.. You need to specify a task index! Try \\\"mark \u003cindex\u003e\\\".. \\n\");","lastModifiedDate":"2024-01-26"},{"lineNumber":49,"author":{"gitId":"amanzainal"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"amanzainal"},"content":"        return tasks;","lastModifiedDate":"2024-01-25"},{"lineNumber":52,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":53,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"amanzainal":53}},{"path":"src/main/java/duke/command/ViewByDateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"package duke.command;","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":"import java.util.List;","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"amanzainal"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"amanzainal"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"amanzainal"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"amanzainal"},"content":" * A command class representing the action of viewing tasks by date.","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"amanzainal"},"content":" *","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"amanzainal"},"content":" * \u003cp\u003eThe {@code ViewByDateCommand} class encapsulates the information and actions","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"amanzainal"},"content":" * required to view tasks based on a specified date. It inherits from the {@code Command} class","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"amanzainal"},"content":" * and implements the behavior specific to displaying tasks that occur on a particular date.\u003c/p\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"amanzainal"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"amanzainal"},"content":"public class ViewByDateCommand extends Command {","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"amanzainal"},"content":"    private LocalDate date;","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"amanzainal"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"amanzainal"},"content":"     * Constructs a {@code ViewByDateCommand} object with the specified date.","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"amanzainal"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"amanzainal"},"content":"     * @param date The date for which tasks should be viewed.","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"amanzainal"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"amanzainal"},"content":"    public ViewByDateCommand(LocalDate date) {","lastModifiedDate":"2024-02-11"},{"lineNumber":27,"author":{"gitId":"amanzainal"},"content":"        super(\"viewbydate\", null);","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"amanzainal"},"content":"        this.date \u003d date;","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":31,"author":{"gitId":"amanzainal"},"content":"    @Override","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"amanzainal"},"content":"    public TaskList execute(TaskList tasks) {","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"amanzainal"},"content":"        List\u003cTask\u003e tasksByDate \u003d tasks.getTasksByDate(date);","lastModifiedDate":"2024-02-11"},{"lineNumber":34,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":35,"author":{"gitId":"amanzainal"},"content":"        // Displaying the date header","lastModifiedDate":"2024-02-11"},{"lineNumber":36,"author":{"gitId":"amanzainal"},"content":"        System.out.printf(\"Here are your tasks on %s:\\n\", formatDate(date));","lastModifiedDate":"2024-02-11"},{"lineNumber":37,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":38,"author":{"gitId":"amanzainal"},"content":"        // Displaying tasks","lastModifiedDate":"2024-02-11"},{"lineNumber":39,"author":{"gitId":"amanzainal"},"content":"        for (int i \u003d 0; i \u003c tasksByDate.size(); i++) {","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"amanzainal"},"content":"            System.out.println((i + 1) + \". \" + tasksByDate.get(i));","lastModifiedDate":"2024-02-11"},{"lineNumber":41,"author":{"gitId":"amanzainal"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":42,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":43,"author":{"gitId":"amanzainal"},"content":"        return new TaskList(tasksByDate);","lastModifiedDate":"2024-02-11"},{"lineNumber":44,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":45,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":46,"author":{"gitId":"amanzainal"},"content":"    private String formatDate(LocalDate date) {","lastModifiedDate":"2024-02-11"},{"lineNumber":47,"author":{"gitId":"amanzainal"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"MM dd yyyy\"));","lastModifiedDate":"2024-02-11"},{"lineNumber":48,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":49,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"amanzainal":49}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"package duke.exception;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":" * A custom runtime exception class for Duke-specific errors.","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":" *","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"amanzainal"},"content":" * \u003cp\u003eThe {@code DukeException} class extends {@code RuntimeException} and is used to represent","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"amanzainal"},"content":" * runtime errors specific to the Duke chatbot application. It provides a way to handle and propagate","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"amanzainal"},"content":" * exceptions related to Duke\u0027s functionality.\u003c/p\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"amanzainal"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"amanzainal"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"amanzainal"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"amanzainal"},"content":"        super(message);","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"amanzainal":14}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"package duke.parser;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"amanzainal"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"amanzainal"},"content":"import java.util.List;","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"amanzainal"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"amanzainal"},"content":"import duke.command.ByeCommand;","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"amanzainal"},"content":"import duke.command.Command;","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"amanzainal"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"amanzainal"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"amanzainal"},"content":"import duke.command.HelpCommand;","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"amanzainal"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"amanzainal"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"amanzainal"},"content":"import duke.command.UnknownCommand;","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"amanzainal"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"amanzainal"},"content":"import duke.command.ViewByDateCommand;","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"amanzainal"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"amanzainal"},"content":"import duke.task.Deadline;","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"amanzainal"},"content":"import duke.task.Event;","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"amanzainal"},"content":"import duke.task.ToDo;","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"amanzainal"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"amanzainal"},"content":" * A utility class for parsing user input and generating corresponding commands.","lastModifiedDate":"2024-02-11"},{"lineNumber":27,"author":{"gitId":"amanzainal"},"content":" *","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"amanzainal"},"content":" * \u003cp\u003eThe {@code Parser} class provides static methods for parsing user input strings","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"amanzainal"},"content":" * and generating corresponding command objects to perform specific actions in the Duke chatbot.","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"amanzainal"},"content":" * It handles the parsing of various command types, such as adding tasks, marking tasks as done,","lastModifiedDate":"2024-02-11"},{"lineNumber":31,"author":{"gitId":"amanzainal"},"content":" * listing tasks, and more.\u003c/p\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"amanzainal"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"amanzainal"},"content":"public class Parser {","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":35,"author":{"gitId":"amanzainal"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":36,"author":{"gitId":"amanzainal"},"content":"     * Parses the user input string and generates the corresponding command object.","lastModifiedDate":"2024-02-11"},{"lineNumber":37,"author":{"gitId":"amanzainal"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":38,"author":{"gitId":"amanzainal"},"content":"     * @param userInput The user input string to parse.","lastModifiedDate":"2024-02-11"},{"lineNumber":39,"author":{"gitId":"amanzainal"},"content":"     * @return A {@link Command} object representing the parsed command.","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"amanzainal"},"content":"     * @throws DukeException If there is an error parsing the input or generating the command.","lastModifiedDate":"2024-02-11"},{"lineNumber":41,"author":{"gitId":"amanzainal"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":42,"author":{"gitId":"amanzainal"},"content":"    public static Command parseInput(String userInput) throws DukeException {","lastModifiedDate":"2024-02-10"},{"lineNumber":43,"author":{"gitId":"amanzainal"},"content":"        try {","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"amanzainal"},"content":"            String[] parts \u003d userInput.split(\" \", 2);","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"amanzainal"},"content":"            String command \u003d parts[0].toLowerCase();","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"amanzainal"},"content":"            List\u003cString\u003e arguments \u003d parts.length \u003e 1 ? List.of(parts[1].split(\"\\\\s+\")) : List.of();","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"amanzainal"},"content":"            String taskDescription \u003d extractTaskDescription(arguments);","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"amanzainal"},"content":"            LocalDateTime deadlineDateTime \u003d null;","lastModifiedDate":"2024-02-10"},{"lineNumber":50,"author":{"gitId":"amanzainal"},"content":"            LocalDateTime startDateTime \u003d null;","lastModifiedDate":"2024-02-10"},{"lineNumber":51,"author":{"gitId":"amanzainal"},"content":"            LocalDateTime endDateTime \u003d null;","lastModifiedDate":"2024-02-10"},{"lineNumber":52,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":53,"author":{"gitId":"amanzainal"},"content":"            // Get Deadline","lastModifiedDate":"2024-01-25"},{"lineNumber":54,"author":{"gitId":"amanzainal"},"content":"            if (arguments.contains(\"/by\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":55,"author":{"gitId":"amanzainal"},"content":"                int index \u003d arguments.indexOf(\"/by\");","lastModifiedDate":"2024-01-25"},{"lineNumber":56,"author":{"gitId":"amanzainal"},"content":"                if (index \u003c arguments.size() - 1) {","lastModifiedDate":"2024-01-25"},{"lineNumber":57,"author":{"gitId":"amanzainal"},"content":"                    String deadline \u003d String.join(\" \", arguments.subList(index + 1, arguments.size()));","lastModifiedDate":"2024-02-10"},{"lineNumber":58,"author":{"gitId":"amanzainal"},"content":"                    deadlineDateTime \u003d parseDateTime(deadline);","lastModifiedDate":"2024-02-10"},{"lineNumber":59,"author":{"gitId":"amanzainal"},"content":"                } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":60,"author":{"gitId":"amanzainal"},"content":"                    throw new DukeException(\"Error: Missing deadline after /by. Correct format: /by \u003cdeadline\u003e\");","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"amanzainal"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":62,"author":{"gitId":"amanzainal"},"content":"            } else if (command.equals(\"deadline\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":63,"author":{"gitId":"amanzainal"},"content":"                throw new DukeException(\"Error: No description provided for the deadline command.\\n\"","lastModifiedDate":"2024-02-11"},{"lineNumber":64,"author":{"gitId":"amanzainal"},"content":"                    + \"Correct format: deadline \u003cdescription\u003e /by \u003cdeadline\u003e\\n\");","lastModifiedDate":"2024-02-11"},{"lineNumber":65,"author":{"gitId":"amanzainal"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":66,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":67,"author":{"gitId":"amanzainal"},"content":"            // Get From / To values","lastModifiedDate":"2024-01-25"},{"lineNumber":68,"author":{"gitId":"amanzainal"},"content":"            if (arguments.contains(\"/from\") \u0026\u0026 arguments.contains(\"/to\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":69,"author":{"gitId":"amanzainal"},"content":"                int fromIndex \u003d arguments.indexOf(\"/from\");","lastModifiedDate":"2024-01-25"},{"lineNumber":70,"author":{"gitId":"amanzainal"},"content":"                int toIndex \u003d arguments.indexOf(\"/to\");","lastModifiedDate":"2024-01-25"},{"lineNumber":71,"author":{"gitId":"amanzainal"},"content":"                if (fromIndex \u003c toIndex \u0026\u0026 toIndex \u003c arguments.size() - 1) {","lastModifiedDate":"2024-01-25"},{"lineNumber":72,"author":{"gitId":"amanzainal"},"content":"                    String start \u003d String.join(\" \", arguments.subList(fromIndex + 1, toIndex));","lastModifiedDate":"2024-02-10"},{"lineNumber":73,"author":{"gitId":"amanzainal"},"content":"                    String end \u003d String.join(\" \", arguments.subList(toIndex + 1, arguments.size()));","lastModifiedDate":"2024-02-10"},{"lineNumber":74,"author":{"gitId":"amanzainal"},"content":"                    startDateTime \u003d parseDateTime(start);","lastModifiedDate":"2024-02-10"},{"lineNumber":75,"author":{"gitId":"amanzainal"},"content":"                    endDateTime \u003d parseDateTime(end);","lastModifiedDate":"2024-02-10"},{"lineNumber":76,"author":{"gitId":"amanzainal"},"content":"                } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":77,"author":{"gitId":"amanzainal"},"content":"                    throw new DukeException(\"Error: Missing /from or /to after event command. \"","lastModifiedDate":"2024-02-11"},{"lineNumber":78,"author":{"gitId":"amanzainal"},"content":"                        + \"Correct format: event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e\");","lastModifiedDate":"2024-02-11"},{"lineNumber":79,"author":{"gitId":"amanzainal"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":80,"author":{"gitId":"amanzainal"},"content":"            } else if (arguments.contains(\"/from\") || arguments.contains(\"/to\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":81,"author":{"gitId":"amanzainal"},"content":"                throw new DukeException(\"Error: Both /from and /to are required for the event command. \"","lastModifiedDate":"2024-02-11"},{"lineNumber":82,"author":{"gitId":"amanzainal"},"content":"                    + \" Correct format: /from \u003cstart\u003e /to \u003cend\u003e\");","lastModifiedDate":"2024-02-11"},{"lineNumber":83,"author":{"gitId":"amanzainal"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":84,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":85,"author":{"gitId":"amanzainal"},"content":"            switch (command) {","lastModifiedDate":"2024-01-25"},{"lineNumber":86,"author":{"gitId":"amanzainal"},"content":"            case \"find\":","lastModifiedDate":"2024-02-11"},{"lineNumber":87,"author":{"gitId":"amanzainal"},"content":"                return new FindCommand(String.join(\" \", arguments));","lastModifiedDate":"2024-02-11"},{"lineNumber":88,"author":{"gitId":"amanzainal"},"content":"            case \"help\":","lastModifiedDate":"2024-01-26"},{"lineNumber":89,"author":{"gitId":"amanzainal"},"content":"                return new HelpCommand();","lastModifiedDate":"2024-01-26"},{"lineNumber":90,"author":{"gitId":"amanzainal"},"content":"            case \"list\":","lastModifiedDate":"2024-01-25"},{"lineNumber":91,"author":{"gitId":"amanzainal"},"content":"                return new ListCommand();","lastModifiedDate":"2024-01-25"},{"lineNumber":92,"author":{"gitId":"amanzainal"},"content":"            case \"mark\":","lastModifiedDate":"2024-01-25"},{"lineNumber":93,"author":{"gitId":"amanzainal"},"content":"                return new MarkCommand(arguments);","lastModifiedDate":"2024-01-25"},{"lineNumber":94,"author":{"gitId":"amanzainal"},"content":"            case \"bye\":","lastModifiedDate":"2024-01-25"},{"lineNumber":95,"author":{"gitId":"amanzainal"},"content":"                return new ByeCommand();","lastModifiedDate":"2024-01-25"},{"lineNumber":96,"author":{"gitId":"amanzainal"},"content":"            case \"exit\":","lastModifiedDate":"2024-02-06"},{"lineNumber":97,"author":{"gitId":"amanzainal"},"content":"                return new ByeCommand();","lastModifiedDate":"2024-02-06"},{"lineNumber":98,"author":{"gitId":"amanzainal"},"content":"            case \"unmark\":","lastModifiedDate":"2024-01-25"},{"lineNumber":99,"author":{"gitId":"amanzainal"},"content":"                return new UnmarkCommand(arguments);","lastModifiedDate":"2024-01-25"},{"lineNumber":100,"author":{"gitId":"amanzainal"},"content":"            case \"delete\":","lastModifiedDate":"2024-01-25"},{"lineNumber":101,"author":{"gitId":"amanzainal"},"content":"                return new DeleteCommand(arguments);","lastModifiedDate":"2024-01-25"},{"lineNumber":102,"author":{"gitId":"amanzainal"},"content":"            case \"remove\":","lastModifiedDate":"2024-02-11"},{"lineNumber":103,"author":{"gitId":"amanzainal"},"content":"                return new DeleteCommand(arguments);","lastModifiedDate":"2024-02-11"},{"lineNumber":104,"author":{"gitId":"amanzainal"},"content":"            case \"todo\":","lastModifiedDate":"2024-01-25"},{"lineNumber":105,"author":{"gitId":"amanzainal"},"content":"                if (taskDescription.isEmpty()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":106,"author":{"gitId":"amanzainal"},"content":"                    throw new DukeException(\"Error: Todo description cannot be empty.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":107,"author":{"gitId":"amanzainal"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":108,"author":{"gitId":"amanzainal"},"content":"                return new AddCommand(new ToDo(taskDescription));","lastModifiedDate":"2024-01-25"},{"lineNumber":109,"author":{"gitId":"amanzainal"},"content":"            case \"deadline\":","lastModifiedDate":"2024-01-25"},{"lineNumber":110,"author":{"gitId":"amanzainal"},"content":"                if (taskDescription.isEmpty()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":111,"author":{"gitId":"amanzainal"},"content":"                    throw new DukeException(\"Error: Deadline description cannot be empty.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":112,"author":{"gitId":"amanzainal"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":113,"author":{"gitId":"amanzainal"},"content":"                if (deadlineDateTime \u003d\u003d null) {","lastModifiedDate":"2024-02-10"},{"lineNumber":114,"author":{"gitId":"amanzainal"},"content":"                    throw new DukeException(\"Error: Deadline date/time cannot be empty.\");","lastModifiedDate":"2024-02-10"},{"lineNumber":115,"author":{"gitId":"amanzainal"},"content":"                }","lastModifiedDate":"2024-02-10"},{"lineNumber":116,"author":{"gitId":"amanzainal"},"content":"                return new AddCommand(new Deadline(taskDescription, deadlineDateTime));","lastModifiedDate":"2024-02-10"},{"lineNumber":117,"author":{"gitId":"amanzainal"},"content":"            case \"event\":","lastModifiedDate":"2024-01-25"},{"lineNumber":118,"author":{"gitId":"amanzainal"},"content":"                if (taskDescription.isEmpty()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":119,"author":{"gitId":"amanzainal"},"content":"                    throw new DukeException(\"Error: Event description cannot be empty.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":120,"author":{"gitId":"amanzainal"},"content":"                }","lastModifiedDate":"2024-02-10"},{"lineNumber":121,"author":{"gitId":"amanzainal"},"content":"                if (startDateTime \u003d\u003d null || endDateTime \u003d\u003d null) {","lastModifiedDate":"2024-02-10"},{"lineNumber":122,"author":{"gitId":"amanzainal"},"content":"                    throw new DukeException(\"Error: Both start and end times are required for the event command. \"","lastModifiedDate":"2024-02-11"},{"lineNumber":123,"author":{"gitId":"amanzainal"},"content":"                        + \"Correct format: /from \u003cstart\u003e /to \u003cend\u003e\");","lastModifiedDate":"2024-02-11"},{"lineNumber":124,"author":{"gitId":"amanzainal"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":125,"author":{"gitId":"amanzainal"},"content":"                return new AddCommand(new Event(taskDescription, startDateTime, endDateTime));","lastModifiedDate":"2024-02-10"},{"lineNumber":126,"author":{"gitId":"amanzainal"},"content":"            case \"viewbydate\":","lastModifiedDate":"2024-02-11"},{"lineNumber":127,"author":{"gitId":"amanzainal"},"content":"                if (taskDescription.isEmpty()) {","lastModifiedDate":"2024-02-11"},{"lineNumber":128,"author":{"gitId":"amanzainal"},"content":"                    throw new DukeException(\"Please specify a date for viewing tasks!\");","lastModifiedDate":"2024-02-11"},{"lineNumber":129,"author":{"gitId":"amanzainal"},"content":"                }","lastModifiedDate":"2024-02-11"},{"lineNumber":130,"author":{"gitId":"amanzainal"},"content":"                try {","lastModifiedDate":"2024-02-11"},{"lineNumber":131,"author":{"gitId":"amanzainal"},"content":"                    LocalDate viewDate \u003d LocalDate.parse(taskDescription);","lastModifiedDate":"2024-02-11"},{"lineNumber":132,"author":{"gitId":"amanzainal"},"content":"                    return new ViewByDateCommand(viewDate);","lastModifiedDate":"2024-02-11"},{"lineNumber":133,"author":{"gitId":"amanzainal"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-11"},{"lineNumber":134,"author":{"gitId":"amanzainal"},"content":"                    throw new DukeException(\"Invalid date format! Please enter the date in YYYY-MM-DD format.\");","lastModifiedDate":"2024-02-11"},{"lineNumber":135,"author":{"gitId":"amanzainal"},"content":"                }","lastModifiedDate":"2024-02-11"},{"lineNumber":136,"author":{"gitId":"amanzainal"},"content":"            default:","lastModifiedDate":"2024-01-25"},{"lineNumber":137,"author":{"gitId":"amanzainal"},"content":"                throw new DukeException(\"Sorry.. I don\u0027t know what that means!\"","lastModifiedDate":"2024-02-11"},{"lineNumber":138,"author":{"gitId":"amanzainal"},"content":"                    + \" If you want to leave, just say \u0027bye\u0027! :(\\n\");","lastModifiedDate":"2024-02-11"},{"lineNumber":139,"author":{"gitId":"amanzainal"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":140,"author":{"gitId":"amanzainal"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":141,"author":{"gitId":"amanzainal"},"content":"            System.out.printf(\"\\n%s\", e.getMessage());","lastModifiedDate":"2024-02-06"},{"lineNumber":142,"author":{"gitId":"amanzainal"},"content":"            return new UnknownCommand();","lastModifiedDate":"2024-01-25"},{"lineNumber":143,"author":{"gitId":"amanzainal"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":144,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":145,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":146,"author":{"gitId":"amanzainal"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":147,"author":{"gitId":"amanzainal"},"content":"     * Parses the input string into a LocalDate object.","lastModifiedDate":"2024-02-11"},{"lineNumber":148,"author":{"gitId":"amanzainal"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":149,"author":{"gitId":"amanzainal"},"content":"     * @param input The input string representing a date in the format \"YYYY-MM-DD\".","lastModifiedDate":"2024-02-11"},{"lineNumber":150,"author":{"gitId":"amanzainal"},"content":"     * @return A {@link LocalDate} object parsed from the input string.","lastModifiedDate":"2024-02-11"},{"lineNumber":151,"author":{"gitId":"amanzainal"},"content":"     * @throws DukeException If there is an error parsing the input string.","lastModifiedDate":"2024-02-11"},{"lineNumber":152,"author":{"gitId":"amanzainal"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":153,"author":{"gitId":"amanzainal"},"content":"    public static LocalDate parseDate(String input) throws DukeException {","lastModifiedDate":"2024-02-11"},{"lineNumber":154,"author":{"gitId":"amanzainal"},"content":"        try {","lastModifiedDate":"2024-02-11"},{"lineNumber":155,"author":{"gitId":"amanzainal"},"content":"            return LocalDate.parse(input);","lastModifiedDate":"2024-02-11"},{"lineNumber":156,"author":{"gitId":"amanzainal"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-11"},{"lineNumber":157,"author":{"gitId":"amanzainal"},"content":"            throw new DukeException(\"Invalid date format! Please enter the date in YYYY-MM-DD format.\");","lastModifiedDate":"2024-02-11"},{"lineNumber":158,"author":{"gitId":"amanzainal"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":159,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":160,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":161,"author":{"gitId":"amanzainal"},"content":"    private static LocalDateTime parseDateTime(String dateTimeString) throws DukeException {","lastModifiedDate":"2024-02-10"},{"lineNumber":162,"author":{"gitId":"amanzainal"},"content":"        try {","lastModifiedDate":"2024-02-10"},{"lineNumber":163,"author":{"gitId":"amanzainal"},"content":"            return LocalDateTime.parse(dateTimeString, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2024-02-10"},{"lineNumber":164,"author":{"gitId":"amanzainal"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":165,"author":{"gitId":"amanzainal"},"content":"            throw new DukeException(\"Invalid date/time format. Please use yyyy-MM-dd HH:mm format.\");","lastModifiedDate":"2024-02-10"},{"lineNumber":166,"author":{"gitId":"amanzainal"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":167,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":168,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":169,"author":{"gitId":"amanzainal"},"content":"    private static String extractTaskDescription(List\u003cString\u003e arguments) {","lastModifiedDate":"2024-01-25"},{"lineNumber":170,"author":{"gitId":"amanzainal"},"content":"        int keywordIndex \u003d findKeywordIndex(arguments, \"/by\", \"/from\", \"/to\");","lastModifiedDate":"2024-01-25"},{"lineNumber":171,"author":{"gitId":"amanzainal"},"content":"        if (keywordIndex !\u003d -1) {","lastModifiedDate":"2024-01-25"},{"lineNumber":172,"author":{"gitId":"amanzainal"},"content":"            return String.join(\" \", arguments.subList(0, keywordIndex));","lastModifiedDate":"2024-01-25"},{"lineNumber":173,"author":{"gitId":"amanzainal"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":174,"author":{"gitId":"amanzainal"},"content":"        return String.join(\" \", arguments);","lastModifiedDate":"2024-01-25"},{"lineNumber":175,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":176,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":177,"author":{"gitId":"amanzainal"},"content":"    private static int findKeywordIndex(List\u003cString\u003e arguments, String... keywords) {","lastModifiedDate":"2024-01-25"},{"lineNumber":178,"author":{"gitId":"amanzainal"},"content":"        for (String keyword : keywords) {","lastModifiedDate":"2024-01-25"},{"lineNumber":179,"author":{"gitId":"amanzainal"},"content":"            if (arguments.contains(keyword)) {","lastModifiedDate":"2024-01-25"},{"lineNumber":180,"author":{"gitId":"amanzainal"},"content":"                return arguments.indexOf(keyword);","lastModifiedDate":"2024-01-25"},{"lineNumber":181,"author":{"gitId":"amanzainal"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":182,"author":{"gitId":"amanzainal"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":183,"author":{"gitId":"amanzainal"},"content":"        return -1;","lastModifiedDate":"2024-01-25"},{"lineNumber":184,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":185,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"amanzainal":185}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"package duke.storage;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":"import java.io.File;","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"amanzainal"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"amanzainal"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"amanzainal"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"amanzainal"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"amanzainal"},"content":"import duke.task.Deadline;","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"amanzainal"},"content":"import duke.task.Event;","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"amanzainal"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"amanzainal"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"amanzainal"},"content":"import duke.task.ToDo;","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"amanzainal"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"amanzainal"},"content":" * A utility class for handling storage operations, such as loading and saving tasks to a file.","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"amanzainal"},"content":" *","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"amanzainal"},"content":" * \u003cp\u003eThe {@code Storage} class provides methods for reading tasks from a file and writing tasks","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"amanzainal"},"content":" * to a file. It handles the conversion between task objects and their string representations","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"amanzainal"},"content":" * suitable for storage in a file. It also defines the file path where tasks are stored.\u003c/p\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"amanzainal"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"amanzainal"},"content":"public class Storage {","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"amanzainal"},"content":"    private static final String pathName \u003d \"data/tasks.txt\";","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"amanzainal"},"content":"    private static final File storageFile \u003d new File(pathName);","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"amanzainal"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"amanzainal"},"content":"     * Loads tasks from the storage file into a TaskList object.","lastModifiedDate":"2024-02-11"},{"lineNumber":31,"author":{"gitId":"amanzainal"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"amanzainal"},"content":"     * @return A {@link TaskList} containing tasks loaded from the storage file.","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"amanzainal"},"content":"     * @throws FileNotFoundException If the storage file is not found.","lastModifiedDate":"2024-02-11"},{"lineNumber":34,"author":{"gitId":"amanzainal"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":35,"author":{"gitId":"amanzainal"},"content":"    public TaskList load() throws FileNotFoundException {","lastModifiedDate":"2024-02-10"},{"lineNumber":36,"author":{"gitId":"amanzainal"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2024-02-10"},{"lineNumber":37,"author":{"gitId":"amanzainal"},"content":"        if (!storageFile.exists()) {","lastModifiedDate":"2024-02-10"},{"lineNumber":38,"author":{"gitId":"amanzainal"},"content":"            return list;","lastModifiedDate":"2024-02-10"},{"lineNumber":39,"author":{"gitId":"amanzainal"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":40,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":41,"author":{"gitId":"amanzainal"},"content":"        Scanner sc \u003d new Scanner(storageFile);","lastModifiedDate":"2024-02-10"},{"lineNumber":42,"author":{"gitId":"amanzainal"},"content":"        while (sc.hasNextLine()) {","lastModifiedDate":"2024-02-10"},{"lineNumber":43,"author":{"gitId":"amanzainal"},"content":"            String instruction \u003d sc.nextLine().strip();","lastModifiedDate":"2024-02-10"},{"lineNumber":44,"author":{"gitId":"amanzainal"},"content":"            String[] args \u003d instruction.split(\"\\\\s\\\\|\\\\s\");","lastModifiedDate":"2024-02-10"},{"lineNumber":45,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":46,"author":{"gitId":"amanzainal"},"content":"            String taskType \u003d args[0];","lastModifiedDate":"2024-02-10"},{"lineNumber":47,"author":{"gitId":"amanzainal"},"content":"            boolean isDone \u003d args[1].equals(\"[X]\");","lastModifiedDate":"2024-02-10"},{"lineNumber":48,"author":{"gitId":"amanzainal"},"content":"            String description \u003d args[2];","lastModifiedDate":"2024-02-10"},{"lineNumber":49,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":50,"author":{"gitId":"amanzainal"},"content":"            if (taskType.equals(\"[T]\")) {","lastModifiedDate":"2024-02-10"},{"lineNumber":51,"author":{"gitId":"amanzainal"},"content":"                ToDo todo \u003d new ToDo(description);","lastModifiedDate":"2024-02-10"},{"lineNumber":52,"author":{"gitId":"amanzainal"},"content":"                if (isDone) {","lastModifiedDate":"2024-02-10"},{"lineNumber":53,"author":{"gitId":"amanzainal"},"content":"                    todo.markAsDone();","lastModifiedDate":"2024-02-10"},{"lineNumber":54,"author":{"gitId":"amanzainal"},"content":"                }","lastModifiedDate":"2024-02-10"},{"lineNumber":55,"author":{"gitId":"amanzainal"},"content":"                list.addTask(todo);","lastModifiedDate":"2024-02-10"},{"lineNumber":56,"author":{"gitId":"amanzainal"},"content":"            } else if (taskType.equals(\"[D]\")) {","lastModifiedDate":"2024-02-10"},{"lineNumber":57,"author":{"gitId":"amanzainal"},"content":"                String dateString \u003d args[3];","lastModifiedDate":"2024-02-10"},{"lineNumber":58,"author":{"gitId":"amanzainal"},"content":"                LocalDateTime dateTime \u003d LocalDateTime.parse(dateString,","lastModifiedDate":"2024-02-11"},{"lineNumber":59,"author":{"gitId":"amanzainal"},"content":"                    DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2024-02-11"},{"lineNumber":60,"author":{"gitId":"amanzainal"},"content":"                Deadline deadline \u003d new Deadline(description, dateTime);","lastModifiedDate":"2024-02-10"},{"lineNumber":61,"author":{"gitId":"amanzainal"},"content":"                if (isDone) {","lastModifiedDate":"2024-02-10"},{"lineNumber":62,"author":{"gitId":"amanzainal"},"content":"                    deadline.markAsDone();","lastModifiedDate":"2024-02-10"},{"lineNumber":63,"author":{"gitId":"amanzainal"},"content":"                }","lastModifiedDate":"2024-02-10"},{"lineNumber":64,"author":{"gitId":"amanzainal"},"content":"                list.addTask(deadline);","lastModifiedDate":"2024-02-10"},{"lineNumber":65,"author":{"gitId":"amanzainal"},"content":"            } else {","lastModifiedDate":"2024-02-10"},{"lineNumber":66,"author":{"gitId":"amanzainal"},"content":"                String fromString \u003d args[3];","lastModifiedDate":"2024-02-10"},{"lineNumber":67,"author":{"gitId":"amanzainal"},"content":"                String toString \u003d args[4];","lastModifiedDate":"2024-02-10"},{"lineNumber":68,"author":{"gitId":"amanzainal"},"content":"                LocalDateTime fromDateTime \u003d LocalDateTime.parse(fromString,","lastModifiedDate":"2024-02-11"},{"lineNumber":69,"author":{"gitId":"amanzainal"},"content":"                    DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2024-02-11"},{"lineNumber":70,"author":{"gitId":"amanzainal"},"content":"                LocalDateTime toDateTime \u003d LocalDateTime.parse(toString,","lastModifiedDate":"2024-02-11"},{"lineNumber":71,"author":{"gitId":"amanzainal"},"content":"                    DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2024-02-11"},{"lineNumber":72,"author":{"gitId":"amanzainal"},"content":"                Event event \u003d new Event(description, fromDateTime, toDateTime);","lastModifiedDate":"2024-02-10"},{"lineNumber":73,"author":{"gitId":"amanzainal"},"content":"                if (isDone) {","lastModifiedDate":"2024-02-10"},{"lineNumber":74,"author":{"gitId":"amanzainal"},"content":"                    event.markAsDone();","lastModifiedDate":"2024-02-10"},{"lineNumber":75,"author":{"gitId":"amanzainal"},"content":"                }","lastModifiedDate":"2024-02-10"},{"lineNumber":76,"author":{"gitId":"amanzainal"},"content":"                list.addTask(event);","lastModifiedDate":"2024-02-10"},{"lineNumber":77,"author":{"gitId":"amanzainal"},"content":"            }","lastModifiedDate":"2024-02-10"},{"lineNumber":78,"author":{"gitId":"amanzainal"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":79,"author":{"gitId":"amanzainal"},"content":"        return list;","lastModifiedDate":"2024-02-10"},{"lineNumber":80,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":81,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":82,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":83,"author":{"gitId":"amanzainal"},"content":"    private void writeToFile(String filePath, String textToAdd) throws IOException {","lastModifiedDate":"2024-02-10"},{"lineNumber":84,"author":{"gitId":"amanzainal"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2024-02-10"},{"lineNumber":85,"author":{"gitId":"amanzainal"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2024-02-10"},{"lineNumber":86,"author":{"gitId":"amanzainal"},"content":"        fw.close();","lastModifiedDate":"2024-02-10"},{"lineNumber":87,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":88,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":89,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":90,"author":{"gitId":"amanzainal"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":91,"author":{"gitId":"amanzainal"},"content":"     * Saves tasks from a TaskList object to the storage file.","lastModifiedDate":"2024-02-11"},{"lineNumber":92,"author":{"gitId":"amanzainal"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":93,"author":{"gitId":"amanzainal"},"content":"     * @param list The {@link TaskList} containing tasks to be saved.","lastModifiedDate":"2024-02-11"},{"lineNumber":94,"author":{"gitId":"amanzainal"},"content":"     * @throws IOException If an I/O error occurs while writing to the storage file.","lastModifiedDate":"2024-02-11"},{"lineNumber":95,"author":{"gitId":"amanzainal"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":96,"author":{"gitId":"amanzainal"},"content":"    public void save(TaskList list) throws IOException {","lastModifiedDate":"2024-02-10"},{"lineNumber":97,"author":{"gitId":"amanzainal"},"content":"        StringBuilder record \u003d new StringBuilder();","lastModifiedDate":"2024-02-10"},{"lineNumber":98,"author":{"gitId":"amanzainal"},"content":"        for (int i \u003d 0; i \u003c list.getNoOfTasks(); i++) {","lastModifiedDate":"2024-02-10"},{"lineNumber":99,"author":{"gitId":"amanzainal"},"content":"            Task task \u003d list.getTask(i);","lastModifiedDate":"2024-02-10"},{"lineNumber":100,"author":{"gitId":"amanzainal"},"content":"            record.append(task.storageString()).append(System.lineSeparator());","lastModifiedDate":"2024-02-10"},{"lineNumber":101,"author":{"gitId":"amanzainal"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":102,"author":{"gitId":"amanzainal"},"content":"        writeToFile(pathName, record.toString());","lastModifiedDate":"2024-02-10"},{"lineNumber":103,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":104,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"amanzainal":104}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"package duke.task;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"amanzainal"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"amanzainal"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"amanzainal"},"content":" *","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"amanzainal"},"content":" * \u003cp\u003eThe {@code Deadline} class extends the {@link Task} class and represents a task with a","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"amanzainal"},"content":" * specific deadline. It contains methods to retrieve the deadline and convert the task to its","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"amanzainal"},"content":" * string representation for storage.\u003c/p\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"amanzainal"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"amanzainal"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"amanzainal"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"amanzainal"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"amanzainal"},"content":"     * Constructs a deadline task with the given description and deadline.","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"amanzainal"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"amanzainal"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"amanzainal"},"content":"     * @param deadline    The deadline of the task.","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"amanzainal"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"amanzainal"},"content":"    public Deadline(String description, LocalDateTime deadline) {","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"amanzainal"},"content":"        super(description, TaskType.Deadline);","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"amanzainal"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"amanzainal"},"content":"    @Override","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"amanzainal"},"content":"    public String storageString() {","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"amanzainal"},"content":"        // Format the task status, task information, and deadline into a single string","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"amanzainal"},"content":"        String isCompleted \u003d this.isDone() ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"amanzainal"},"content":"        return String.format(\"[D] | %s | %s | %s\", isCompleted, this.getDescription().trim(),","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"amanzainal"},"content":"                this.deadline.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\")));","lastModifiedDate":"2024-02-10"},{"lineNumber":33,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"amanzainal"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2024-02-11"},{"lineNumber":36,"author":{"gitId":"amanzainal"},"content":"        return this.deadline;","lastModifiedDate":"2024-02-11"},{"lineNumber":37,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":38,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":39,"author":{"gitId":"amanzainal"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"amanzainal"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"amanzainal"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(),","lastModifiedDate":"2024-02-11"},{"lineNumber":42,"author":{"gitId":"amanzainal"},"content":"            this.deadline.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")));","lastModifiedDate":"2024-02-11"},{"lineNumber":43,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"amanzainal":44}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"package duke.task;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"amanzainal"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"amanzainal"},"content":" * Represents an event task with start and end timings.","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"amanzainal"},"content":" *","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"amanzainal"},"content":" * \u003cp\u003eThe {@code Event} class extends the {@link Task} class and represents an event task with","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"amanzainal"},"content":" * specific start and end timings. It contains methods to retrieve the start and end timings and","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"amanzainal"},"content":" * convert the task to its string representation for storage.\u003c/p\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"amanzainal"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"amanzainal"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"amanzainal"},"content":"    private LocalDateTime from;","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"amanzainal"},"content":"    private LocalDateTime to;","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"amanzainal"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"amanzainal"},"content":"     * Constructs an event task with the given description, start, and end timings.","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"amanzainal"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"amanzainal"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"amanzainal"},"content":"     * @param from        The start timing of the event.","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"amanzainal"},"content":"     * @param to          The end timing of the event.","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"amanzainal"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"amanzainal"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"amanzainal"},"content":"        super(description, TaskType.Event);","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"amanzainal"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-11"},{"lineNumber":27,"author":{"gitId":"amanzainal"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"amanzainal"},"content":"    @Override","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"amanzainal"},"content":"    public String storageString() {","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"amanzainal"},"content":"        // Format the task status, task information, from, and end into a single string","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"amanzainal"},"content":"        String isCompleted \u003d this.isDone() ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"amanzainal"},"content":"        return String.format(\"[E] | %s | %s | %s | %s\", isCompleted, this.getDescription().trim(),","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"amanzainal"},"content":"                this.from.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\")),","lastModifiedDate":"2024-02-11"},{"lineNumber":36,"author":{"gitId":"amanzainal"},"content":"                this.to.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\")));","lastModifiedDate":"2024-02-11"},{"lineNumber":37,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":38,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":39,"author":{"gitId":"amanzainal"},"content":"    public LocalDateTime getFrom() {","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"amanzainal"},"content":"        return this.from;","lastModifiedDate":"2024-02-11"},{"lineNumber":41,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":42,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":43,"author":{"gitId":"amanzainal"},"content":"    public LocalDateTime getTo() {","lastModifiedDate":"2024-02-11"},{"lineNumber":44,"author":{"gitId":"amanzainal"},"content":"        return this.to;","lastModifiedDate":"2024-02-11"},{"lineNumber":45,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"amanzainal"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"amanzainal"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"amanzainal"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\", super.toString(),","lastModifiedDate":"2024-02-10"},{"lineNumber":50,"author":{"gitId":"amanzainal"},"content":"                this.from.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")),","lastModifiedDate":"2024-02-11"},{"lineNumber":51,"author":{"gitId":"amanzainal"},"content":"                this.to.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")));","lastModifiedDate":"2024-02-11"},{"lineNumber":52,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":53,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"amanzainal":53}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"package duke.task;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":" * Represents a generic task.","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":" *","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"amanzainal"},"content":" * \u003cp\u003eThe {@code Task} class is an abstract class representing a generic task. It contains","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"amanzainal"},"content":" * properties and methods common to all types of tasks, such as descriptions and status (done or","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"amanzainal"},"content":" * undone).\u003c/p\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"amanzainal"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"amanzainal"},"content":"public abstract class Task {","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"amanzainal"},"content":"    private String description;","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"amanzainal"},"content":"    private boolean isDone;","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"amanzainal"},"content":"    private final TaskType type;","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"amanzainal"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"amanzainal"},"content":"     * Constructs a task with the given description and type.","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"amanzainal"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"amanzainal"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"amanzainal"},"content":"     * @param type        The type of the task, represented by {@link TaskType}.","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"amanzainal"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"amanzainal"},"content":"    public Task(String description, TaskType type) {","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"amanzainal"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"amanzainal"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"amanzainal"},"content":"        this.type \u003d type;","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"amanzainal"},"content":"    public String getDescription() {","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"amanzainal"},"content":"        return description;","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"amanzainal"},"content":"    public boolean isDone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"amanzainal"},"content":"        return isDone;","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"amanzainal"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"amanzainal"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"amanzainal"},"content":"    public void markUndone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"amanzainal"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"amanzainal"},"content":"    public abstract String storageString();","lastModifiedDate":"2024-02-10"},{"lineNumber":44,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":45,"author":{"gitId":"amanzainal"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"amanzainal"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"amanzainal"},"content":"        return String.format(\"[%s] %s\", isDone ? \"X\" : \" \", description);","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"amanzainal":49}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"package duke.task;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":"import java.util.List;","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"amanzainal"},"content":"/**","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"amanzainal"},"content":" * A TaskList class that encapsulates the information and actions of a task list.","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"amanzainal"},"content":" */","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"amanzainal"},"content":"public class TaskList {","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"amanzainal"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"amanzainal"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"amanzainal"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"amanzainal"},"content":"    public TaskList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"amanzainal"},"content":"        this.tasks \u003d list;","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"amanzainal"},"content":"    public TaskList(List\u003cTask\u003e list) {","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"amanzainal"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e(list);","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"amanzainal"},"content":"    public TaskList(TaskList other) {","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"amanzainal"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e(other.tasks);","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"amanzainal"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"amanzainal"},"content":"        this.tasks.add(task);","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":33,"author":{"gitId":"amanzainal"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":34,"author":{"gitId":"amanzainal"},"content":"     * Deletes a task from the TaskList.","lastModifiedDate":"2024-02-11"},{"lineNumber":35,"author":{"gitId":"amanzainal"},"content":"     * @param  taskIndex Index of the task to be deleted.","lastModifiedDate":"2024-02-11"},{"lineNumber":36,"author":{"gitId":"amanzainal"},"content":"     * @return           The deleted task.","lastModifiedDate":"2024-02-11"},{"lineNumber":37,"author":{"gitId":"amanzainal"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":38,"author":{"gitId":"amanzainal"},"content":"    public Task deleteTask(int taskIndex) {","lastModifiedDate":"2024-02-10"},{"lineNumber":39,"author":{"gitId":"amanzainal"},"content":"        Task taskToDelete \u003d tasks.get(taskIndex);","lastModifiedDate":"2024-02-10"},{"lineNumber":40,"author":{"gitId":"amanzainal"},"content":"        this.tasks.remove(taskIndex);","lastModifiedDate":"2024-02-10"},{"lineNumber":41,"author":{"gitId":"amanzainal"},"content":"        return taskToDelete;","lastModifiedDate":"2024-02-10"},{"lineNumber":42,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":43,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":44,"author":{"gitId":"amanzainal"},"content":"    public int getNoOfTasks() {","lastModifiedDate":"2024-02-10"},{"lineNumber":45,"author":{"gitId":"amanzainal"},"content":"        return this.tasks.size();","lastModifiedDate":"2024-02-10"},{"lineNumber":46,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":47,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":48,"author":{"gitId":"amanzainal"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2024-02-10"},{"lineNumber":49,"author":{"gitId":"amanzainal"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2024-02-10"},{"lineNumber":50,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":51,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":52,"author":{"gitId":"amanzainal"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-02-10"},{"lineNumber":53,"author":{"gitId":"amanzainal"},"content":"        return this.tasks;","lastModifiedDate":"2024-02-10"},{"lineNumber":54,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":55,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":56,"author":{"gitId":"amanzainal"},"content":"    public void clearTasks() {","lastModifiedDate":"2024-02-10"},{"lineNumber":57,"author":{"gitId":"amanzainal"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-10"},{"lineNumber":58,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":59,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":60,"author":{"gitId":"amanzainal"},"content":"    public void setTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-10"},{"lineNumber":61,"author":{"gitId":"amanzainal"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-02-10"},{"lineNumber":62,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":63,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":64,"author":{"gitId":"amanzainal"},"content":"    public List\u003cTask\u003e getTasksByDate(LocalDate date) {","lastModifiedDate":"2024-02-11"},{"lineNumber":65,"author":{"gitId":"amanzainal"},"content":"        List\u003cTask\u003e tasksByDate \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-11"},{"lineNumber":66,"author":{"gitId":"amanzainal"},"content":"        for (Task task : this.tasks) {","lastModifiedDate":"2024-02-11"},{"lineNumber":67,"author":{"gitId":"amanzainal"},"content":"            if (task instanceof Deadline) {","lastModifiedDate":"2024-02-11"},{"lineNumber":68,"author":{"gitId":"amanzainal"},"content":"                Deadline deadlineTask \u003d (Deadline) task;","lastModifiedDate":"2024-02-11"},{"lineNumber":69,"author":{"gitId":"amanzainal"},"content":"                if (deadlineTask.getBy().toLocalDate().equals(date)) {","lastModifiedDate":"2024-02-11"},{"lineNumber":70,"author":{"gitId":"amanzainal"},"content":"                    tasksByDate.add(task);","lastModifiedDate":"2024-02-11"},{"lineNumber":71,"author":{"gitId":"amanzainal"},"content":"                }","lastModifiedDate":"2024-02-11"},{"lineNumber":72,"author":{"gitId":"amanzainal"},"content":"            } else if (task instanceof Event) {","lastModifiedDate":"2024-02-11"},{"lineNumber":73,"author":{"gitId":"amanzainal"},"content":"                Event eventTask \u003d (Event) task;","lastModifiedDate":"2024-02-11"},{"lineNumber":74,"author":{"gitId":"amanzainal"},"content":"                if (eventTask.getFrom().toLocalDate().equals(date) || eventTask.getTo().toLocalDate().equals(date)) {","lastModifiedDate":"2024-02-11"},{"lineNumber":75,"author":{"gitId":"amanzainal"},"content":"                    tasksByDate.add(task);","lastModifiedDate":"2024-02-11"},{"lineNumber":76,"author":{"gitId":"amanzainal"},"content":"                }","lastModifiedDate":"2024-02-11"},{"lineNumber":77,"author":{"gitId":"amanzainal"},"content":"            }","lastModifiedDate":"2024-02-11"},{"lineNumber":78,"author":{"gitId":"amanzainal"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":79,"author":{"gitId":"amanzainal"},"content":"        return tasksByDate;","lastModifiedDate":"2024-02-11"},{"lineNumber":80,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":81,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":82,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":83,"author":{"gitId":"amanzainal"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":84,"author":{"gitId":"amanzainal"},"content":"     * Finds tasks in the task list whose description contains a specified keyword.","lastModifiedDate":"2024-02-11"},{"lineNumber":85,"author":{"gitId":"amanzainal"},"content":"     * @param keyword The keyword to search for in task descriptions.","lastModifiedDate":"2024-02-11"},{"lineNumber":86,"author":{"gitId":"amanzainal"},"content":"     * @return A TaskList containing tasks whose descriptions contain the specified keyword.","lastModifiedDate":"2024-02-11"},{"lineNumber":87,"author":{"gitId":"amanzainal"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":88,"author":{"gitId":"amanzainal"},"content":"    public TaskList findTasksByKeyword(String keyword) {","lastModifiedDate":"2024-02-11"},{"lineNumber":89,"author":{"gitId":"amanzainal"},"content":"        TaskList matchingTasks \u003d new TaskList();","lastModifiedDate":"2024-02-11"},{"lineNumber":90,"author":{"gitId":"amanzainal"},"content":"        String lowerCaseKeyword \u003d keyword.toLowerCase(); // Convert keyword to lowercase for case insensitivity","lastModifiedDate":"2024-02-11"},{"lineNumber":91,"author":{"gitId":"amanzainal"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-02-11"},{"lineNumber":92,"author":{"gitId":"amanzainal"},"content":"            if (task.getDescription().toLowerCase().contains(lowerCaseKeyword)) {","lastModifiedDate":"2024-02-11"},{"lineNumber":93,"author":{"gitId":"amanzainal"},"content":"                matchingTasks.addTask(task);","lastModifiedDate":"2024-02-11"},{"lineNumber":94,"author":{"gitId":"amanzainal"},"content":"            }","lastModifiedDate":"2024-02-11"},{"lineNumber":95,"author":{"gitId":"amanzainal"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":96,"author":{"gitId":"amanzainal"},"content":"        return matchingTasks;","lastModifiedDate":"2024-02-11"},{"lineNumber":97,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":98,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":99,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":100,"author":{"gitId":"amanzainal"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2024-02-10"},{"lineNumber":101,"author":{"gitId":"amanzainal"},"content":"        return this.tasks.isEmpty();","lastModifiedDate":"2024-02-10"},{"lineNumber":102,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":103,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":104,"author":{"gitId":"amanzainal"},"content":"    @Override","lastModifiedDate":"2024-02-10"},{"lineNumber":105,"author":{"gitId":"amanzainal"},"content":"    public String toString() {","lastModifiedDate":"2024-02-10"},{"lineNumber":106,"author":{"gitId":"amanzainal"},"content":"        // Creating a string builder to append task index and details","lastModifiedDate":"2024-02-10"},{"lineNumber":107,"author":{"gitId":"amanzainal"},"content":"        StringBuilder listContent \u003d new StringBuilder();","lastModifiedDate":"2024-02-10"},{"lineNumber":108,"author":{"gitId":"amanzainal"},"content":"        // Iterating through the task list","lastModifiedDate":"2024-02-10"},{"lineNumber":109,"author":{"gitId":"amanzainal"},"content":"        for (int i \u003d 0; i \u003c this.getNoOfTasks(); i++) {","lastModifiedDate":"2024-02-10"},{"lineNumber":110,"author":{"gitId":"amanzainal"},"content":"            // Appending task index and task details","lastModifiedDate":"2024-02-10"},{"lineNumber":111,"author":{"gitId":"amanzainal"},"content":"            listContent.append(i + 1).append(\".\").append(this.getTask(i)).append(\"\\n\");","lastModifiedDate":"2024-02-10"},{"lineNumber":112,"author":{"gitId":"amanzainal"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":113,"author":{"gitId":"amanzainal"},"content":"        // Return the final string representation of the task list","lastModifiedDate":"2024-02-10"},{"lineNumber":114,"author":{"gitId":"amanzainal"},"content":"        return String.valueOf(listContent);","lastModifiedDate":"2024-02-10"},{"lineNumber":115,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":116,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"amanzainal":116}},{"path":"src/main/java/duke/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"package duke.task;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":" * Represents the type of a task.","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":" *","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"amanzainal"},"content":" * \u003cp\u003eThe {@code TaskType} enum defines the possible types of tasks, such as Todo, Deadline, and","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"amanzainal"},"content":" * Event.\u003c/p\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"amanzainal"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"amanzainal"},"content":"public enum TaskType {","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"amanzainal"},"content":"    ToDo,","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"amanzainal"},"content":"    Deadline,","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"amanzainal"},"content":"    Event","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"amanzainal":13}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"package duke.task;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":" * Represents a to-do task.","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"amanzainal"},"content":" *","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"amanzainal"},"content":" * \u003cp\u003eThe {@code ToDo} class extends the {@link Task} class and represents a todo task. It contains","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"amanzainal"},"content":" * methods to convert the task to its string representation for storage.\u003c/p\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"amanzainal"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"amanzainal"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"amanzainal"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"amanzainal"},"content":"        super(description, TaskType.ToDo);","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"amanzainal"},"content":"    @Override","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"amanzainal"},"content":"    public String storageString() {","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"amanzainal"},"content":"        // Format the task status, task information, and deadline into a single string","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"amanzainal"},"content":"        String isCompleted \u003d this.isDone() ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"amanzainal"},"content":"        return String.format(\"[T] | %s | %s\", isCompleted, this.getDescription().trim());","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"amanzainal"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"amanzainal"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"amanzainal"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"amanzainal":27}},{"path":"src/main/java/duke/ui/Messages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"package duke.ui;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":" * This class contains ASCII art messages generated online.","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":" * Escape characters for backslashes have been added to the ASCII art.","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"amanzainal"},"content":" *","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"amanzainal"},"content":" * @author @AmanZainal","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"amanzainal"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"amanzainal"},"content":"public class Messages {","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"amanzainal"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"amanzainal"},"content":"     * The ASCII art representing a welcome message.","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"amanzainal"},"content":"     * Includes a stylized text and an ASCII art cat saying \"meow.\"","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"amanzainal"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"amanzainal"},"content":"    public static final String WELCOME \u003d","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"amanzainal"},"content":"            \"  _____            _     _   _             _____      _   _           _   \\n\"","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"amanzainal"},"content":"            + \" / ____|          | |   | | | |           / ____|    | | | |         | |  \\n\"","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"amanzainal"},"content":"            + \"| |     ___   __ _| |_  | |_| |__   ___  | |     __ _| |_| |__   ___ | |_ \\n\"","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"amanzainal"},"content":"            + \"| |    / _ \\\\ / _` | __| | __| \u0027_ \\\\ / _ \\\\ | |    / _` | __| \u0027_ \\\\ / _ \\\\| __|\\n\"","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"amanzainal"},"content":"            + \"| |___| (_) | (_| | |_  | |_| | | |  __/ | |___| (_| | |_| |_) | (_) | |_ \\n\"","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"amanzainal"},"content":"            + \"\\\\_____/\\\\___/ \\\\__,_|\\\\__|  \\\\__|_| |_|\\\\___| \\\\_____|\\\\__,_|\\\\__|_.__/ \\\\___/ \\\\__|\\n\"","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"amanzainal"},"content":"            + \"                                                                          \\n\"","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"amanzainal"},"content":"            + \"                        _    _      _ _       _                        \\n\"","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"amanzainal"},"content":"            + \"                       | |  | |    | | |     | |         /\\\\_/\\\\  meow    \\n\"","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"amanzainal"},"content":"            + \"  ___  __ _ _   _ ___  | |__| | ___| | | ___ | |        ( o.o )       \\n\"","lastModifiedDate":"2024-02-11"},{"lineNumber":27,"author":{"gitId":"amanzainal"},"content":"            + \" / __|/ _` | | | / __| |  __  |/ _ \\\\ | |/ _ \\\\| |         \u003e ^ \u003c         \\n\"","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"amanzainal"},"content":"            + \" \\\\__ \\\\ (_| | |_| \\\\__ \\\\ | |  | |  __/ | | (_) |_|                   \\n\"","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"amanzainal"},"content":"            + \" |___/\\\\__,_|\\\\__, |___/ |_|  |_|\\\\___|_|_|\\\\___/(_)                   \\n\"","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"amanzainal"},"content":"            + \"             __/ |                                                     \\n\"","lastModifiedDate":"2024-02-11"},{"lineNumber":31,"author":{"gitId":"amanzainal"},"content":"            + \"            |___/                                                      \\n\"","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"amanzainal"},"content":"            + \"\\nWhat are we doing today? ~(^o.o^)\\nSay \u0027help\u0027 if you want to know the tricks I can do!\\n\";","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"amanzainal"},"content":"    public static final String EXIT \u003d","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"amanzainal"},"content":"        \"Aw, see you soon! :3\\n\";","lastModifiedDate":"2024-01-26"},{"lineNumber":36,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"amanzainal":37}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"Hello","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":"todo borrow book","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"amanzainal"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"amanzainal"},"content":"bye","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"amanzainal":7}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"amanzainal"},"content":"java -classpath ..\\bin Coat \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"amanzainal":1}}]
