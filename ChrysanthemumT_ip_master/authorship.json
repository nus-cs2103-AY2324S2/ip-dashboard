[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ChrysanthemumT"},"content":"# duke.Duke project template","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"ChrysanthemumT"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ChrysanthemumT":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"ChrysanthemumT"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"ChrysanthemumT"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"ChrysanthemumT"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"ChrysanthemumT"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"ChrysanthemumT"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"ChrysanthemumT"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"ChrysanthemumT"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"ChrysanthemumT"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"ChrysanthemumT"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"ChrysanthemumT"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"ChrysanthemumT"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"ChrysanthemumT"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"ChrysanthemumT"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"ChrysanthemumT"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"ChrysanthemumT"},"content":"    mainClass.set(\"duke.Main\")","lastModifiedDate":"2024-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"ChrysanthemumT"},"content":"mainClassName \u003d \u0027duke.Main\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"ChrysanthemumT"},"content":"    archiveFileName \u003d \"duke.jar\"","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"ChrysanthemumT"},"content":"checkstyle {","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"ChrysanthemumT"},"content":"    toolVersion \u003d \"10.4\"","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"ChrysanthemumT"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"ChrysanthemumT":23,"-":41}},{"path":"data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ChrysanthemumT"},"content":"    ____________________________________________________________","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"ChrysanthemumT"},"content":"    1.[T][ ] help","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"ChrysanthemumT"},"content":"    ____________________________________________________________","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"ChrysanthemumT":3}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ChrysanthemumT"},"content":"# Wang User Guide","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"ChrysanthemumT"},"content":"![Ui.png](Ui.png)","lastModifiedDate":"2024-02-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"ChrysanthemumT"},"content":"TaskList for you to track your tasks.","lastModifiedDate":"2024-02-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"ChrysanthemumT"},"content":"## Adding todos","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":9,"author":{"gitId":"ChrysanthemumT"},"content":"Add tasks","lastModifiedDate":"2024-02-20"},{"lineNumber":10,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":11,"author":{"gitId":"ChrysanthemumT"},"content":"Example: `todo life`","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":13,"author":{"gitId":"ChrysanthemumT"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":14,"author":{"gitId":"ChrysanthemumT"},"content":"Got it. I\u0027ve added the task:","lastModifiedDate":"2024-02-20"},{"lineNumber":15,"author":{"gitId":"ChrysanthemumT"},"content":"[T][] life","lastModifiedDate":"2024-02-20"},{"lineNumber":16,"author":{"gitId":"ChrysanthemumT"},"content":"Now you have 1 tasks in the list","lastModifiedDate":"2024-02-20"},{"lineNumber":17,"author":{"gitId":"ChrysanthemumT"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":21,"author":{"gitId":"ChrysanthemumT"},"content":"Add tasks with set deadlines","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":23,"author":{"gitId":"ChrysanthemumT"},"content":"Example: `deadline life /by 02/03/2045 1800`","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"ChrysanthemumT"},"content":"1. time can be omitted from the command","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"ChrysanthemumT"},"content":"2. does not accept any past datetime","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":28,"author":{"gitId":"ChrysanthemumT"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":29,"author":{"gitId":"ChrysanthemumT"},"content":"Got it. I\u0027ve added the task:","lastModifiedDate":"2024-02-20"},{"lineNumber":30,"author":{"gitId":"ChrysanthemumT"},"content":"[D][] life","lastModifiedDate":"2024-02-20"},{"lineNumber":31,"author":{"gitId":"ChrysanthemumT"},"content":"(by: Mar 02 2045 6:00pm)","lastModifiedDate":"2024-02-20"},{"lineNumber":32,"author":{"gitId":"ChrysanthemumT"},"content":"Now you have 2 tasks in the list","lastModifiedDate":"2024-02-20"},{"lineNumber":33,"author":{"gitId":"ChrysanthemumT"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":34,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":35,"author":{"gitId":"ChrysanthemumT"},"content":"## Adding events","lastModifiedDate":"2024-02-20"},{"lineNumber":36,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":37,"author":{"gitId":"ChrysanthemumT"},"content":"Add tasks with set start time and end time","lastModifiedDate":"2024-02-20"},{"lineNumber":38,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":39,"author":{"gitId":"ChrysanthemumT"},"content":"Example: `event life /from 02/03/2045 1800 /to 02/04/2066 1900`","lastModifiedDate":"2024-02-20"},{"lineNumber":40,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":41,"author":{"gitId":"ChrysanthemumT"},"content":"1. time can be omitted from the command","lastModifiedDate":"2024-02-20"},{"lineNumber":42,"author":{"gitId":"ChrysanthemumT"},"content":"2. does not accept any past datetime","lastModifiedDate":"2024-02-20"},{"lineNumber":43,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":44,"author":{"gitId":"ChrysanthemumT"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":45,"author":{"gitId":"ChrysanthemumT"},"content":"Got it. I\u0027ve added the task:","lastModifiedDate":"2024-02-20"},{"lineNumber":46,"author":{"gitId":"ChrysanthemumT"},"content":"[E][] life","lastModifiedDate":"2024-02-20"},{"lineNumber":47,"author":{"gitId":"ChrysanthemumT"},"content":"(from: Mar 02 2045 6:00pm to: April 02 2066 7:00pm)","lastModifiedDate":"2024-02-20"},{"lineNumber":48,"author":{"gitId":"ChrysanthemumT"},"content":"Now you have 3 tasks in the list","lastModifiedDate":"2024-02-20"},{"lineNumber":49,"author":{"gitId":"ChrysanthemumT"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":51,"author":{"gitId":"ChrysanthemumT"},"content":"## listing tasks","lastModifiedDate":"2024-02-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":53,"author":{"gitId":"ChrysanthemumT"},"content":"List all tasks added","lastModifiedDate":"2024-02-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":55,"author":{"gitId":"ChrysanthemumT"},"content":"Example: `list`","lastModifiedDate":"2024-02-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":58,"author":{"gitId":"ChrysanthemumT"},"content":"1.[T][] life","lastModifiedDate":"2024-02-20"},{"lineNumber":59,"author":{"gitId":"ChrysanthemumT"},"content":"2.[D][] life","lastModifiedDate":"2024-02-20"},{"lineNumber":60,"author":{"gitId":"ChrysanthemumT"},"content":"(by: Mar 02 2045 6:00pm)","lastModifiedDate":"2024-02-20"},{"lineNumber":61,"author":{"gitId":"ChrysanthemumT"},"content":"3.[E][] life","lastModifiedDate":"2024-02-20"},{"lineNumber":62,"author":{"gitId":"ChrysanthemumT"},"content":"(from: Mar 02 2045 6:00pm to: April 02 2066 7:00pm)","lastModifiedDate":"2024-02-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":65,"author":{"gitId":"ChrysanthemumT"},"content":"## Removing tasks","lastModifiedDate":"2024-02-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":67,"author":{"gitId":"ChrysanthemumT"},"content":"Remove tasks in task list","lastModifiedDate":"2024-02-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":69,"author":{"gitId":"ChrysanthemumT"},"content":"Example: `delete 1(index in list)`","lastModifiedDate":"2024-02-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":71,"author":{"gitId":"ChrysanthemumT"},"content":"1. list is 1 indexed","lastModifiedDate":"2024-02-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":74,"author":{"gitId":"ChrysanthemumT"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2024-02-20"},{"lineNumber":75,"author":{"gitId":"ChrysanthemumT"},"content":"[T][] life","lastModifiedDate":"2024-02-20"},{"lineNumber":76,"author":{"gitId":"ChrysanthemumT"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2024-02-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":79,"author":{"gitId":"ChrysanthemumT"},"content":"## Marking and Unmarking tasks","lastModifiedDate":"2024-02-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":81,"author":{"gitId":"ChrysanthemumT"},"content":"Mark or unmark task as complete","lastModifiedDate":"2024-02-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":83,"author":{"gitId":"ChrysanthemumT"},"content":"1. list is 1 indexed","lastModifiedDate":"2024-02-20"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":85,"author":{"gitId":"ChrysanthemumT"},"content":"Example: `mark 1(index in list)`","lastModifiedDate":"2024-02-20"},{"lineNumber":86,"author":{"gitId":"ChrysanthemumT"},"content":"Example: `unmark 1(index in list)`","lastModifiedDate":"2024-02-20"},{"lineNumber":87,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":88,"author":{"gitId":"ChrysanthemumT"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":89,"author":{"gitId":"ChrysanthemumT"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2024-02-20"},{"lineNumber":90,"author":{"gitId":"ChrysanthemumT"},"content":"[D][X] life","lastModifiedDate":"2024-02-20"},{"lineNumber":91,"author":{"gitId":"ChrysanthemumT"},"content":"(by: Mar 02 2045 6:00pm)","lastModifiedDate":"2024-02-20"},{"lineNumber":92,"author":{"gitId":"ChrysanthemumT"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":93,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":94,"author":{"gitId":"ChrysanthemumT"},"content":"## Give priority to tasks","lastModifiedDate":"2024-02-20"},{"lineNumber":95,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":96,"author":{"gitId":"ChrysanthemumT"},"content":"Set high or low priority to tasks","lastModifiedDate":"2024-02-20"},{"lineNumber":97,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":98,"author":{"gitId":"ChrysanthemumT"},"content":"Example: `priority 1(index in list)`","lastModifiedDate":"2024-02-20"},{"lineNumber":99,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":100,"author":{"gitId":"ChrysanthemumT"},"content":"1. list is 1 indexed","lastModifiedDate":"2024-02-20"},{"lineNumber":101,"author":{"gitId":"ChrysanthemumT"},"content":"2. high \u0026 low command is **not** case-sensitive","lastModifiedDate":"2024-02-20"},{"lineNumber":102,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":103,"author":{"gitId":"ChrysanthemumT"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":104,"author":{"gitId":"ChrysanthemumT"},"content":"OK! I\u0027ve updated this task\u0027s Priority:","lastModifiedDate":"2024-02-20"},{"lineNumber":105,"author":{"gitId":"ChrysanthemumT"},"content":"[D][X] life HIGH!!","lastModifiedDate":"2024-02-20"},{"lineNumber":106,"author":{"gitId":"ChrysanthemumT"},"content":"(by: Mar 02 2045 6:00pm)","lastModifiedDate":"2024-02-20"},{"lineNumber":107,"author":{"gitId":"ChrysanthemumT"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07"}],"authorContributionMap":{"ChrysanthemumT":84,"-":24}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChrysanthemumT"},"content":"package duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"ChrysanthemumT"},"content":"import duke.exceptions.InvalidCommandException;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"ChrysanthemumT"},"content":"import duke.exceptions.ListOutOfBoundsException;","lastModifiedDate":"2024-02-20"},{"lineNumber":5,"author":{"gitId":"ChrysanthemumT"},"content":"import duke.exceptions.MissingArgumentsException;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"ChrysanthemumT"},"content":"import duke.exceptions.WrongTimeFormatException;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"ChrysanthemumT"},"content":"import duke.parser.Command;","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"ChrysanthemumT"},"content":"import duke.parser.Parser;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"ChrysanthemumT"},"content":"import duke.parser.Token;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"ChrysanthemumT"},"content":"import duke.responses.Responses;","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"ChrysanthemumT"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"ChrysanthemumT"},"content":" * The Duke program is a simple task manager that allows users to manage their tasks through a command-line interface.","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"ChrysanthemumT"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"ChrysanthemumT"},"content":"    public Duke() {","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"ChrysanthemumT"},"content":"    public String getResponse(String userInput) {","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"ChrysanthemumT"},"content":"        Responses dukeResponse \u003d new Responses();","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"ChrysanthemumT"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"ChrysanthemumT"},"content":"        parser.feed(userInput);","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"ChrysanthemumT"},"content":"        Token output;","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"ChrysanthemumT"},"content":"        try {","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"ChrysanthemumT"},"content":"            output \u003d parser.parse();","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"ChrysanthemumT"},"content":"            assert output instanceof Token : \"parser output should be a Token\";","lastModifiedDate":"2024-02-13"},{"lineNumber":31,"author":{"gitId":"ChrysanthemumT"},"content":"        } catch (InvalidCommandException e) {","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"ChrysanthemumT"},"content":"            return Responses.error(e.getMessage());","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"ChrysanthemumT"},"content":"        } catch (MissingArgumentsException e) {","lastModifiedDate":"2024-01-24"},{"lineNumber":34,"author":{"gitId":"ChrysanthemumT"},"content":"            return Responses.error(e.getMessage());","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"ChrysanthemumT"},"content":"        } catch (WrongTimeFormatException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"ChrysanthemumT"},"content":"            return Responses.error(e.getMessage());","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"ChrysanthemumT"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":38,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"ChrysanthemumT"},"content":"        assert output.getCmd() instanceof Command : \"getCmd() should return a Command\";","lastModifiedDate":"2024-02-13"},{"lineNumber":40,"author":{"gitId":"ChrysanthemumT"},"content":"        switch (output.getCmd()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"ChrysanthemumT"},"content":"        case BYE:","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"ChrysanthemumT"},"content":"            return Responses.goodbye();","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"ChrysanthemumT"},"content":"        case LIST:","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"ChrysanthemumT"},"content":"            return dukeResponse.listItems();","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"ChrysanthemumT"},"content":"        case UNMARK:","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"ChrysanthemumT"},"content":"            try {","lastModifiedDate":"2024-01-24"},{"lineNumber":47,"author":{"gitId":"ChrysanthemumT"},"content":"                return dukeResponse.unMarkTask(output.getSelectedItem() - 1);","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"ChrysanthemumT"},"content":"            } catch (ListOutOfBoundsException e) {","lastModifiedDate":"2024-02-20"},{"lineNumber":49,"author":{"gitId":"ChrysanthemumT"},"content":"                return Responses.error(e.getMessage());","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"ChrysanthemumT"},"content":"            }","lastModifiedDate":"2024-01-24"},{"lineNumber":51,"author":{"gitId":"ChrysanthemumT"},"content":"        case MARK:","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"ChrysanthemumT"},"content":"            try {","lastModifiedDate":"2024-01-24"},{"lineNumber":53,"author":{"gitId":"ChrysanthemumT"},"content":"                return dukeResponse.markTaskUI(output.getSelectedItem() - 1);","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"ChrysanthemumT"},"content":"            } catch (ListOutOfBoundsException e) {","lastModifiedDate":"2024-02-20"},{"lineNumber":55,"author":{"gitId":"ChrysanthemumT"},"content":"                return Responses.error(e.getMessage());","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"ChrysanthemumT"},"content":"            }","lastModifiedDate":"2024-01-24"},{"lineNumber":57,"author":{"gitId":"ChrysanthemumT"},"content":"        case FIND:","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"ChrysanthemumT"},"content":"            return dukeResponse.findTaskUI(output.getSearchKey());","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"ChrysanthemumT"},"content":"        case TODO:","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"ChrysanthemumT"},"content":"            // Fallthrough","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"ChrysanthemumT"},"content":"        case DEADLINE:","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"ChrysanthemumT"},"content":"            // Fallthrough","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"ChrysanthemumT"},"content":"        case EVENT:","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"ChrysanthemumT"},"content":"            return dukeResponse.addItem(output.getTask());","lastModifiedDate":"2024-02-07"},{"lineNumber":65,"author":{"gitId":"ChrysanthemumT"},"content":"        case DELETE:","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"ChrysanthemumT"},"content":"            try {","lastModifiedDate":"2024-01-25"},{"lineNumber":67,"author":{"gitId":"ChrysanthemumT"},"content":"                return dukeResponse.removeTask(output.getSelectedItem() - 1);","lastModifiedDate":"2024-02-07"},{"lineNumber":68,"author":{"gitId":"ChrysanthemumT"},"content":"            } catch (ListOutOfBoundsException e) {","lastModifiedDate":"2024-02-20"},{"lineNumber":69,"author":{"gitId":"ChrysanthemumT"},"content":"                return Responses.error(e.getMessage());","lastModifiedDate":"2024-02-07"},{"lineNumber":70,"author":{"gitId":"ChrysanthemumT"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":71,"author":{"gitId":"ChrysanthemumT"},"content":"        case PRIORITY:","lastModifiedDate":"2024-02-14"},{"lineNumber":72,"author":{"gitId":"ChrysanthemumT"},"content":"            try {","lastModifiedDate":"2024-02-14"},{"lineNumber":73,"author":{"gitId":"ChrysanthemumT"},"content":"                return dukeResponse.updatePriority(output.getSelectedItem() - 1, output.getPriority());","lastModifiedDate":"2024-02-14"},{"lineNumber":74,"author":{"gitId":"ChrysanthemumT"},"content":"            } catch (ListOutOfBoundsException e) {","lastModifiedDate":"2024-02-20"},{"lineNumber":75,"author":{"gitId":"ChrysanthemumT"},"content":"                return Responses.error(e.getMessage());","lastModifiedDate":"2024-02-14"},{"lineNumber":76,"author":{"gitId":"ChrysanthemumT"},"content":"            }","lastModifiedDate":"2024-02-14"},{"lineNumber":77,"author":{"gitId":"ChrysanthemumT"},"content":"        default:","lastModifiedDate":"2024-01-25"},{"lineNumber":78,"author":{"gitId":"ChrysanthemumT"},"content":"            return \"\";","lastModifiedDate":"2024-02-07"},{"lineNumber":79,"author":{"gitId":"ChrysanthemumT"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":81,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":82,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"ChrysanthemumT":80,"-":3}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChrysanthemumT"},"content":"package duke;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"ChrysanthemumT"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"ChrysanthemumT"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"ChrysanthemumT"},"content":" * The Launcher class is responsible for launching the Duke application.","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"ChrysanthemumT"},"content":" * It initializes and starts the JavaFX Application with the specified main class (Main).","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"ChrysanthemumT"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"ChrysanthemumT"},"content":"public class Launcher {","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":11,"author":{"gitId":"ChrysanthemumT"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"ChrysanthemumT"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"ChrysanthemumT"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"ChrysanthemumT":14}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChrysanthemumT"},"content":"package duke;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"ChrysanthemumT"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"ChrysanthemumT"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"ChrysanthemumT"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"ChrysanthemumT"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"ChrysanthemumT"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"ChrysanthemumT"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"ChrysanthemumT"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"ChrysanthemumT"},"content":" * The Main class is the entry point for launching the Duke application GUI using JavaFX and FXML.","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"ChrysanthemumT"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"ChrysanthemumT"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"ChrysanthemumT"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"ChrysanthemumT"},"content":"     * The main entry point for the Duke application.","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"ChrysanthemumT"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"ChrysanthemumT"},"content":"     * @param stage The primary stage for the JavaFX application.","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"ChrysanthemumT"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"ChrysanthemumT"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"ChrysanthemumT"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"ChrysanthemumT"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"ChrysanthemumT"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"ChrysanthemumT"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"ChrysanthemumT"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"ChrysanthemumT"},"content":"            stage.setTitle(\"Wang\");","lastModifiedDate":"2024-02-20"},{"lineNumber":31,"author":{"gitId":"ChrysanthemumT"},"content":"            fxmlLoader.\u003cduke.gui.MainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"ChrysanthemumT"},"content":"            stage.show();","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"ChrysanthemumT"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"ChrysanthemumT"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"ChrysanthemumT"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"ChrysanthemumT"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"ChrysanthemumT":37}},{"path":"src/main/java/duke/exceptions/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChrysanthemumT"},"content":"package duke.exceptions;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"ChrysanthemumT"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"ChrysanthemumT"},"content":" * Exception class representing an error when an invalid command is entered.","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"ChrysanthemumT"},"content":" * This exception is thrown when the user inputs a command that is not recognized.","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"ChrysanthemumT"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"ChrysanthemumT"},"content":"public class InvalidCommandException extends Exception {","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"ChrysanthemumT"},"content":"     * Constructs an InvalidCommandException with the specified detail message.","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"ChrysanthemumT"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"ChrysanthemumT"},"content":"     * @param message The detail message indicating that an invalid command was entered.","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"ChrysanthemumT"},"content":"    public InvalidCommandException(String message) {","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"ChrysanthemumT"},"content":"        super(message);","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"ChrysanthemumT"},"content":"     * Overrides the getMessage() method to provide a formatted error message.","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"ChrysanthemumT"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"ChrysanthemumT"},"content":"     * @return A formatted error message indicating that an invalid command was entered.","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"ChrysanthemumT"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"ChrysanthemumT"},"content":"    public String getMessage() {","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"ChrysanthemumT"},"content":"        return \"    \" + super.getMessage()","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"ChrysanthemumT"},"content":"                + \"\\n    You have entered an invalid \"","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"ChrysanthemumT"},"content":"                + \"command:\\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"ChrysanthemumT"},"content":"                + \"    Try todo, event, deadline, list, delete, \"","lastModifiedDate":"2024-02-20"},{"lineNumber":29,"author":{"gitId":"ChrysanthemumT"},"content":"                + \"\\n    mark {index},\"","lastModifiedDate":"2024-02-20"},{"lineNumber":30,"author":{"gitId":"ChrysanthemumT"},"content":"                + \"\\n    unmark {index},\"","lastModifiedDate":"2024-02-20"},{"lineNumber":31,"author":{"gitId":"ChrysanthemumT"},"content":"                + \"\\n    or priority {index} {high/low}.\";","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":33,"author":{"gitId":"ChrysanthemumT"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"ChrysanthemumT":33}},{"path":"src/main/java/duke/exceptions/ListOutOfBoundsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChrysanthemumT"},"content":"package duke.exceptions;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"ChrysanthemumT"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"ChrysanthemumT"},"content":" * Exception class representing an error when trying to access an element at an invalid index in a list.","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"ChrysanthemumT"},"content":" * This exception is thrown when attempting to access an element at an index that is out of bounds.","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"ChrysanthemumT"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"ChrysanthemumT"},"content":"public class ListOutOfBoundsException extends Exception {","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"ChrysanthemumT"},"content":"     * Constructs a ListOutofBoundsException with the specified detail message.","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"ChrysanthemumT"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"ChrysanthemumT"},"content":"     * @param message The detail message indicating the invalid list index.","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"ChrysanthemumT"},"content":"    public ListOutOfBoundsException(String message) {","lastModifiedDate":"2024-02-20"},{"lineNumber":15,"author":{"gitId":"ChrysanthemumT"},"content":"        super(message);","lastModifiedDate":"2024-02-20"},{"lineNumber":16,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"ChrysanthemumT"},"content":"     * Overrides the getMessage() method to provide a formatted error message.","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"ChrysanthemumT"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"ChrysanthemumT"},"content":"     * @return A formatted error message indicating that the list index is out of bounds.","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"ChrysanthemumT"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"ChrysanthemumT"},"content":"    public String getMessage() {","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"ChrysanthemumT"},"content":"        return \"    You have entered an invalid list index:\\n\"","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"ChrysanthemumT"},"content":"                + \"    List size:\" + super.getMessage();","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"ChrysanthemumT"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"ChrysanthemumT":28}},{"path":"src/main/java/duke/exceptions/MissingArgumentsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChrysanthemumT"},"content":"package duke.exceptions;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"ChrysanthemumT"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"ChrysanthemumT"},"content":" * Exception class representing a generic error related to missing arguments in a command.","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"ChrysanthemumT"},"content":" * This exception is thrown when a command is missing the required parameters or arguments.","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"ChrysanthemumT"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"ChrysanthemumT"},"content":"public class MissingArgumentsException extends Exception {","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"ChrysanthemumT"},"content":"     * Constructs a MissingArgumentsException with the specified detail message.","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"ChrysanthemumT"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"ChrysanthemumT"},"content":"     * @param message The detail message indicating the missing arguments.","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"ChrysanthemumT"},"content":"    public MissingArgumentsException(String message) {","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"ChrysanthemumT"},"content":"        super(message);","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"ChrysanthemumT"},"content":"     * Overrides the getMessage() method to provide a formatted error message.","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"ChrysanthemumT"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"ChrysanthemumT"},"content":"     * @return A formatted error message indicating that there are missing arguments in the command.","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"ChrysanthemumT"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"ChrysanthemumT"},"content":"    public String getMessage() {","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"ChrysanthemumT"},"content":"        return \"    You have missing arguments:\\n\"","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"ChrysanthemumT"},"content":"                + \"    Try \" + super.getMessage();","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"ChrysanthemumT"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"ChrysanthemumT":28}},{"path":"src/main/java/duke/exceptions/MissingArgumentsExceptionDeadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChrysanthemumT"},"content":"package duke.exceptions;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"ChrysanthemumT"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"ChrysanthemumT"},"content":" * Exception class representing an error related to missing arguments in a deadlines command.","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"ChrysanthemumT"},"content":" * This exception is thrown when a deadlines command is missing the required parameter, which is the deadline time.","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"ChrysanthemumT"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"ChrysanthemumT"},"content":"public class MissingArgumentsExceptionDeadlines extends MissingArgumentsExceptionTodo {","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"ChrysanthemumT"},"content":"     * Constructs a MissingArgumentsExceptionDeadlines with the specified detail message.","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"ChrysanthemumT"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"ChrysanthemumT"},"content":"     * @param message The detail message.","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"ChrysanthemumT"},"content":"    public MissingArgumentsExceptionDeadlines(String string) {","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"ChrysanthemumT"},"content":"        super(string);","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"ChrysanthemumT"},"content":"     * Overrides the getMessage() method to provide a formatted error message.","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"ChrysanthemumT"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"ChrysanthemumT"},"content":"     * @return A formatted error message guiding the user to include the deadline time in the deadlines command.","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"ChrysanthemumT"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"ChrysanthemumT"},"content":"    public String getMessage() {","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"ChrysanthemumT"},"content":"        return super.getMessage()","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"ChrysanthemumT"},"content":"                + \" /by {your deadline}\";","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"ChrysanthemumT"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"ChrysanthemumT":29}},{"path":"src/main/java/duke/exceptions/MissingArgumentsExceptionEvents.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChrysanthemumT"},"content":"package duke.exceptions;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"ChrysanthemumT"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"ChrysanthemumT"},"content":" * Exception class representing an error related to missing arguments in an events command.","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"ChrysanthemumT"},"content":" * This exception is thrown when a deadlines command is missing the required parameter, which is the starting and","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"ChrysanthemumT"},"content":" * ending time.","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"ChrysanthemumT"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"ChrysanthemumT"},"content":"public class MissingArgumentsExceptionEvents extends MissingArgumentsExceptionTodo {","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"ChrysanthemumT"},"content":"     * Constructs a MissingArgumentsExceptionMarking with the specified detail message.","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"ChrysanthemumT"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"ChrysanthemumT"},"content":"     * @param message The detail message.","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"ChrysanthemumT"},"content":"    public MissingArgumentsExceptionEvents(String string) {","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"ChrysanthemumT"},"content":"        super(string);","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"ChrysanthemumT"},"content":"     * Overrides the getMessage() method to provide a formatted error message.","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"ChrysanthemumT"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"ChrysanthemumT"},"content":"     * @return A formatted error message guiding the user to include the index of the item in the marking command.","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"ChrysanthemumT"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"ChrysanthemumT"},"content":"    public String getMessage() {","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"ChrysanthemumT"},"content":"        return super.getMessage()","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"ChrysanthemumT"},"content":"                + \" /from {your starting time}\"","lastModifiedDate":"2024-02-20"},{"lineNumber":28,"author":{"gitId":"ChrysanthemumT"},"content":"                + \"\\n    {space}/to {your ending time}\";","lastModifiedDate":"2024-02-20"},{"lineNumber":29,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"ChrysanthemumT"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"ChrysanthemumT":30}},{"path":"src/main/java/duke/exceptions/MissingArgumentsExceptionFind.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChrysanthemumT"},"content":"package duke.exceptions;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"ChrysanthemumT"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"ChrysanthemumT"},"content":" * Represents an exception thrown when there are missing arguments in a \"find\" command.","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"ChrysanthemumT"},"content":" * Extends the MissingArgumentsException class.","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"ChrysanthemumT"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"ChrysanthemumT"},"content":"public class MissingArgumentsExceptionFind extends MissingArgumentsException {","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"ChrysanthemumT"},"content":"     * Constructs a MissingArgumentsExceptionFind with the specified error message.","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"ChrysanthemumT"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"ChrysanthemumT"},"content":"     * @param string The error message indicating missing arguments.","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"ChrysanthemumT"},"content":"    public MissingArgumentsExceptionFind(String string) {","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"ChrysanthemumT"},"content":"        super(string);","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"ChrysanthemumT"},"content":"     * Overrides the getMessage method to provide a more specific error message","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"ChrysanthemumT"},"content":"     * for the \"find\" command, suggesting the required format.","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"ChrysanthemumT"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"ChrysanthemumT"},"content":"     * @return The formatted error message.","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"ChrysanthemumT"},"content":"    public String getMessage() {","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"ChrysanthemumT"},"content":"        return super.getMessage() + \" {your item}\";","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"ChrysanthemumT"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"ChrysanthemumT":28}},{"path":"src/main/java/duke/exceptions/MissingArgumentsExceptionMarking.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChrysanthemumT"},"content":"package duke.exceptions;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"ChrysanthemumT"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"ChrysanthemumT"},"content":" * Exception class representing an error related to missing arguments in marking commands (mark, unmark, delete).","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"ChrysanthemumT"},"content":" * This exception is thrown when a marking command is missing the required index of the item in the list.","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"ChrysanthemumT"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"ChrysanthemumT"},"content":"public class MissingArgumentsExceptionMarking extends MissingArgumentsException {","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"ChrysanthemumT"},"content":"     * Constructs a MissingArgumentsExceptionMarking with the specified detail message.","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"ChrysanthemumT"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"ChrysanthemumT"},"content":"     * @param message The detail message.","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"ChrysanthemumT"},"content":"    public MissingArgumentsExceptionMarking(String string) {","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"ChrysanthemumT"},"content":"        super(string);","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"ChrysanthemumT"},"content":"     * Overrides the getMessage() method to provide a formatted error message.","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"ChrysanthemumT"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"ChrysanthemumT"},"content":"     * @return A formatted error message guiding the user to include the index of the item in the marking command.","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"ChrysanthemumT"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"ChrysanthemumT"},"content":"    public String getMessage() {","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"ChrysanthemumT"},"content":"        return super.getMessage() + \" {index of item in list}\";","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"ChrysanthemumT"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"ChrysanthemumT":28}},{"path":"src/main/java/duke/exceptions/MissingArgumentsExceptionTodo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChrysanthemumT"},"content":"package duke.exceptions;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"ChrysanthemumT"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"ChrysanthemumT"},"content":" * Exception class representing an error related to missing arguments in a todo command.","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"ChrysanthemumT"},"content":" * This exception is thrown when a todo command is missing the required task description.","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"ChrysanthemumT"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"ChrysanthemumT"},"content":"public class MissingArgumentsExceptionTodo extends MissingArgumentsException {","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"ChrysanthemumT"},"content":"     * Constructs a MissingArgumentsExceptionTodo with the specified detail message.","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"ChrysanthemumT"},"content":"    public MissingArgumentsExceptionTodo(String string) {","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"ChrysanthemumT"},"content":"        super(string);","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"ChrysanthemumT"},"content":"     * Overrides the getMessage() method to provide a formatted error message.","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"ChrysanthemumT"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"ChrysanthemumT"},"content":"     * @return A formatted error message guiding the user to include the task description in the todo command.","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"ChrysanthemumT"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"ChrysanthemumT"},"content":"    public String getMessage() {","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"ChrysanthemumT"},"content":"        return super.getMessage() + \" {your item}\";","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"ChrysanthemumT"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"ChrysanthemumT":26}},{"path":"src/main/java/duke/exceptions/WrongTimeFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChrysanthemumT"},"content":"package duke.exceptions;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"ChrysanthemumT"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"ChrysanthemumT"},"content":" * Exception class representing an error related to incorrect time format in Duke application.","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"ChrysanthemumT"},"content":" * This exception is thrown when there is an issue with the provided date and time format.","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"ChrysanthemumT"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"ChrysanthemumT"},"content":"public class WrongTimeFormatException extends Exception {","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"ChrysanthemumT"},"content":"     * Constructs a WrongTimeFormatException with the specified detail message.","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"ChrysanthemumT"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"ChrysanthemumT"},"content":"     * @param message The detail message.","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"ChrysanthemumT"},"content":"    public WrongTimeFormatException(String string) {","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"ChrysanthemumT"},"content":"        super(string);","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"ChrysanthemumT"},"content":"     * Overrides the getMessage() method to provide a formatted error message.","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"ChrysanthemumT"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"ChrysanthemumT"},"content":"     * @return A formatted error message guiding the user to use the correct date and time format.","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"ChrysanthemumT"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"ChrysanthemumT"},"content":"    public String getMessage() {","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"ChrysanthemumT"},"content":"        return \"    \" + super.getMessage()","lastModifiedDate":"2024-02-13"},{"lineNumber":27,"author":{"gitId":"ChrysanthemumT"},"content":"                + \"\\n    Try again using the format\"","lastModifiedDate":"2024-02-13"},{"lineNumber":28,"author":{"gitId":"ChrysanthemumT"},"content":"                + \"\\n     {day/month/year HHmm}\"","lastModifiedDate":"2024-02-13"},{"lineNumber":29,"author":{"gitId":"ChrysanthemumT"},"content":"                + \"\\n    or {date + H:mm pm/am}\";","lastModifiedDate":"2024-02-13"},{"lineNumber":30,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"ChrysanthemumT"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"ChrysanthemumT":31}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChrysanthemumT"},"content":"package duke.gui;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"ChrysanthemumT"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"ChrysanthemumT"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"ChrysanthemumT"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"ChrysanthemumT"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"ChrysanthemumT"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"ChrysanthemumT"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"ChrysanthemumT"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"ChrysanthemumT"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"ChrysanthemumT"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"ChrysanthemumT"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"ChrysanthemumT"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"ChrysanthemumT"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"ChrysanthemumT"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"ChrysanthemumT"},"content":" * Represents a custom dialog box component for displaying messages in a JavaFX application.","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"ChrysanthemumT"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"ChrysanthemumT"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"ChrysanthemumT"},"content":"    private Label text;","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"ChrysanthemumT"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"ChrysanthemumT"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"ChrysanthemumT"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"ChrysanthemumT"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"ChrysanthemumT"},"content":"     * Constructs a new DialogBox with the given text and image.","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"ChrysanthemumT"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"ChrysanthemumT"},"content":"     * @param text The text to be displayed in the dialog box.","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"ChrysanthemumT"},"content":"     * @param img  The image to be displayed in the dialog box.","lastModifiedDate":"2024-02-08"},{"lineNumber":35,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":36,"author":{"gitId":"ChrysanthemumT"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"ChrysanthemumT"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"ChrysanthemumT"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"ChrysanthemumT"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"ChrysanthemumT"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"ChrysanthemumT"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"ChrysanthemumT"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"ChrysanthemumT"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"ChrysanthemumT"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"ChrysanthemumT"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"ChrysanthemumT"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"ChrysanthemumT"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"ChrysanthemumT"},"content":"    private void flip() {","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"ChrysanthemumT"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"ChrysanthemumT"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"ChrysanthemumT"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"ChrysanthemumT"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":61,"author":{"gitId":"ChrysanthemumT"},"content":"     * Creates and returns a dialog box for user input with the specified text and image.","lastModifiedDate":"2024-02-08"},{"lineNumber":62,"author":{"gitId":"ChrysanthemumT"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":63,"author":{"gitId":"ChrysanthemumT"},"content":"     * @param text The text to be displayed in the dialog box.","lastModifiedDate":"2024-02-08"},{"lineNumber":64,"author":{"gitId":"ChrysanthemumT"},"content":"     * @param img  The image to be displayed in the dialog box.","lastModifiedDate":"2024-02-08"},{"lineNumber":65,"author":{"gitId":"ChrysanthemumT"},"content":"     * @return A DialogBox instance representing the user\u0027s input.","lastModifiedDate":"2024-02-08"},{"lineNumber":66,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":67,"author":{"gitId":"ChrysanthemumT"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-07"},{"lineNumber":68,"author":{"gitId":"ChrysanthemumT"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-07"},{"lineNumber":69,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":70,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":71,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":72,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":73,"author":{"gitId":"ChrysanthemumT"},"content":"     * Creates and returns a dialog box for Duke\u0027s response with the specified text and image.","lastModifiedDate":"2024-02-08"},{"lineNumber":74,"author":{"gitId":"ChrysanthemumT"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":75,"author":{"gitId":"ChrysanthemumT"},"content":"     * @param text The text to be displayed in the dialog box.","lastModifiedDate":"2024-02-08"},{"lineNumber":76,"author":{"gitId":"ChrysanthemumT"},"content":"     * @param img  The image to be displayed in the dialog box.","lastModifiedDate":"2024-02-08"},{"lineNumber":77,"author":{"gitId":"ChrysanthemumT"},"content":"     * @return A DialogBox instance representing Duke\u0027s response.","lastModifiedDate":"2024-02-08"},{"lineNumber":78,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":79,"author":{"gitId":"ChrysanthemumT"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-02-07"},{"lineNumber":80,"author":{"gitId":"ChrysanthemumT"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-07"},{"lineNumber":81,"author":{"gitId":"ChrysanthemumT"},"content":"        db.flip();","lastModifiedDate":"2024-02-07"},{"lineNumber":82,"author":{"gitId":"ChrysanthemumT"},"content":"        return db;","lastModifiedDate":"2024-02-07"},{"lineNumber":83,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":84,"author":{"gitId":"ChrysanthemumT"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"ChrysanthemumT":84}},{"path":"src/main/java/duke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChrysanthemumT"},"content":"package duke.gui;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"ChrysanthemumT"},"content":"import duke.Duke;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"ChrysanthemumT"},"content":"import javafx.animation.KeyFrame;","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"ChrysanthemumT"},"content":"import javafx.animation.Timeline;","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"ChrysanthemumT"},"content":"import javafx.application.Platform;","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"ChrysanthemumT"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"ChrysanthemumT"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"ChrysanthemumT"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-20"},{"lineNumber":10,"author":{"gitId":"ChrysanthemumT"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"ChrysanthemumT"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"ChrysanthemumT"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"ChrysanthemumT"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"ChrysanthemumT"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"ChrysanthemumT"},"content":"import javafx.util.Duration;","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"ChrysanthemumT"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"ChrysanthemumT"},"content":" * Represents the main window of the Duke chat application.","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"ChrysanthemumT"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"ChrysanthemumT"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"ChrysanthemumT"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"ChrysanthemumT"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"ChrysanthemumT"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"ChrysanthemumT"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"ChrysanthemumT"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"ChrysanthemumT"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"ChrysanthemumT"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"ChrysanthemumT"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"ChrysanthemumT"},"content":"    private Duke duke;","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"ChrysanthemumT"},"content":"    private Label titleLabel \u003d new Label(","lastModifiedDate":"2024-02-20"},{"lineNumber":33,"author":{"gitId":"ChrysanthemumT"},"content":"            \"\\n\"","lastModifiedDate":"2024-02-20"},{"lineNumber":34,"author":{"gitId":"ChrysanthemumT"},"content":"                    + \"        Hello from \\n\"","lastModifiedDate":"2024-02-20"},{"lineNumber":35,"author":{"gitId":"ChrysanthemumT"},"content":"                    + \"                 ░██╗░░░░░░░██╗░█████╗░███╗░░██╗░██████╗░\\n\"","lastModifiedDate":"2024-02-20"},{"lineNumber":36,"author":{"gitId":"ChrysanthemumT"},"content":"                    + \"                ░██║░░██╗░░██║██╔══██╗████╗░██║██╔════╝░\\n\"","lastModifiedDate":"2024-02-20"},{"lineNumber":37,"author":{"gitId":"ChrysanthemumT"},"content":"                    + \"                ░╚██╗████╗██╔╝███████║██╔██╗██║██║░░██╗░\\n\"","lastModifiedDate":"2024-02-20"},{"lineNumber":38,"author":{"gitId":"ChrysanthemumT"},"content":"                    + \"                ░░████╔═████║░██╔══██║██║╚████║██║░░╚██╗\\n\"","lastModifiedDate":"2024-02-20"},{"lineNumber":39,"author":{"gitId":"ChrysanthemumT"},"content":"                    + \"                ░░╚██╔╝░╚██╔╝░██║░░██║██║░╚███║╚██████╔╝\\n\"","lastModifiedDate":"2024-02-20"},{"lineNumber":40,"author":{"gitId":"ChrysanthemumT"},"content":"                    + \"                ░░░╚═╝░░░╚═╝░░╚═╝░░╚═╝╚═╝░░╚══╝░╚═════╝░\");","lastModifiedDate":"2024-02-20"},{"lineNumber":41,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"ChrysanthemumT"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"ChrysanthemumT"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":46,"author":{"gitId":"ChrysanthemumT"},"content":"     * Initializes the main window.","lastModifiedDate":"2024-02-08"},{"lineNumber":47,"author":{"gitId":"ChrysanthemumT"},"content":"     * Binds the scrollPane\u0027s vertical value to the height of the dialog container.","lastModifiedDate":"2024-02-08"},{"lineNumber":48,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":49,"author":{"gitId":"ChrysanthemumT"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"ChrysanthemumT"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"ChrysanthemumT"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"ChrysanthemumT"},"content":"        dialogContainer.getChildren().add(titleLabel);","lastModifiedDate":"2024-02-20"},{"lineNumber":53,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":56,"author":{"gitId":"ChrysanthemumT"},"content":"     * Sets the Duke object associated with this main window.","lastModifiedDate":"2024-02-08"},{"lineNumber":57,"author":{"gitId":"ChrysanthemumT"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":58,"author":{"gitId":"ChrysanthemumT"},"content":"     * @param d The Duke object to be set.","lastModifiedDate":"2024-02-08"},{"lineNumber":59,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":60,"author":{"gitId":"ChrysanthemumT"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"ChrysanthemumT"},"content":"        duke \u003d d;","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":65,"author":{"gitId":"ChrysanthemumT"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-07"},{"lineNumber":66,"author":{"gitId":"ChrysanthemumT"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-07"},{"lineNumber":67,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":68,"author":{"gitId":"ChrysanthemumT"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":69,"author":{"gitId":"ChrysanthemumT"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-07"},{"lineNumber":70,"author":{"gitId":"ChrysanthemumT"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-07"},{"lineNumber":71,"author":{"gitId":"ChrysanthemumT"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2024-02-07"},{"lineNumber":72,"author":{"gitId":"ChrysanthemumT"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-07"},{"lineNumber":73,"author":{"gitId":"ChrysanthemumT"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-07"},{"lineNumber":74,"author":{"gitId":"ChrysanthemumT"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2024-02-07"},{"lineNumber":75,"author":{"gitId":"ChrysanthemumT"},"content":"        );","lastModifiedDate":"2024-02-07"},{"lineNumber":76,"author":{"gitId":"ChrysanthemumT"},"content":"        Timeline timeline \u003d new Timeline(new KeyFrame(Duration.seconds(1), event -\u003e {","lastModifiedDate":"2024-02-08"},{"lineNumber":77,"author":{"gitId":"ChrysanthemumT"},"content":"            if (response.equals(\"    Bye. Hope to see you again soon!\")) {","lastModifiedDate":"2024-02-08"},{"lineNumber":78,"author":{"gitId":"ChrysanthemumT"},"content":"                Platform.exit();","lastModifiedDate":"2024-02-08"},{"lineNumber":79,"author":{"gitId":"ChrysanthemumT"},"content":"            }","lastModifiedDate":"2024-02-08"},{"lineNumber":80,"author":{"gitId":"ChrysanthemumT"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":81,"author":{"gitId":"ChrysanthemumT"},"content":"        ));","lastModifiedDate":"2024-02-08"},{"lineNumber":82,"author":{"gitId":"ChrysanthemumT"},"content":"        timeline.play();","lastModifiedDate":"2024-02-08"},{"lineNumber":83,"author":{"gitId":"ChrysanthemumT"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-07"},{"lineNumber":84,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":85,"author":{"gitId":"ChrysanthemumT"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"ChrysanthemumT":85}},{"path":"src/main/java/duke/parser/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChrysanthemumT"},"content":"package duke.parser;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"ChrysanthemumT"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"ChrysanthemumT"},"content":" * Enumeration representing different commands that can be parsed by the Duke application.","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"ChrysanthemumT"},"content":" * Each command corresponds to a specific user action or operation.","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"ChrysanthemumT"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"ChrysanthemumT"},"content":"public enum Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"ChrysanthemumT"},"content":"    LIST, BYE, DELETE, UNMARK, MARK, TODO, EVENT, DEADLINE, SAVED, FIND, PRIORITY","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"ChrysanthemumT"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"ChrysanthemumT":10}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChrysanthemumT"},"content":"package duke.parser;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"ChrysanthemumT"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"ChrysanthemumT"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"ChrysanthemumT"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"ChrysanthemumT"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"ChrysanthemumT"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"ChrysanthemumT"},"content":"import duke.exceptions.InvalidCommandException;","lastModifiedDate":"2024-02-20"},{"lineNumber":10,"author":{"gitId":"ChrysanthemumT"},"content":"import duke.exceptions.MissingArgumentsException;","lastModifiedDate":"2024-02-20"},{"lineNumber":11,"author":{"gitId":"ChrysanthemumT"},"content":"import duke.exceptions.MissingArgumentsExceptionDeadlines;","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"ChrysanthemumT"},"content":"import duke.exceptions.MissingArgumentsExceptionEvents;","lastModifiedDate":"2024-02-20"},{"lineNumber":13,"author":{"gitId":"ChrysanthemumT"},"content":"import duke.exceptions.MissingArgumentsExceptionMarking;","lastModifiedDate":"2024-02-20"},{"lineNumber":14,"author":{"gitId":"ChrysanthemumT"},"content":"import duke.exceptions.MissingArgumentsExceptionTodo;","lastModifiedDate":"2024-02-20"},{"lineNumber":15,"author":{"gitId":"ChrysanthemumT"},"content":"import duke.exceptions.WrongTimeFormatException;","lastModifiedDate":"2024-02-20"},{"lineNumber":16,"author":{"gitId":"ChrysanthemumT"},"content":"import duke.storage.Deadlines;","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"ChrysanthemumT"},"content":"import duke.storage.Events;","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"ChrysanthemumT"},"content":"import duke.storage.Task;","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"ChrysanthemumT"},"content":"import duke.storage.Todos;","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"ChrysanthemumT"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"ChrysanthemumT"},"content":" * The Parser class is responsible for parsing user input and converting it into meaningful commands and tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"ChrysanthemumT"},"content":" * It handles various command types such as listing tasks, adding, deleting, marking, and parsing time information.","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"ChrysanthemumT"},"content":" * The class also checks the validity of user input and throws exceptions for invalid or missing information.","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"ChrysanthemumT"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"ChrysanthemumT"},"content":"public class Parser {","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"ChrysanthemumT"},"content":"    private String input;","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"ChrysanthemumT"},"content":"     * Constructs a Parser object with an empty input.","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"ChrysanthemumT"},"content":"    public Parser() {","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"ChrysanthemumT"},"content":"        this.input \u003d \"\";","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"ChrysanthemumT"},"content":"     * Constructs a Parser object with the specified input.","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"ChrysanthemumT"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"ChrysanthemumT"},"content":"     * @param input The input string to be parsed.","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"ChrysanthemumT"},"content":"    public Parser(String input) {","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"ChrysanthemumT"},"content":"        this.input \u003d input;","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"ChrysanthemumT"},"content":"     * Sets the input string for the parser.","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"ChrysanthemumT"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"ChrysanthemumT"},"content":"     * @param input The input string to be parsed.","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"ChrysanthemumT"},"content":"    public void feed(String input) {","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"ChrysanthemumT"},"content":"        this.input \u003d input;","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"ChrysanthemumT"},"content":"     * Parses the input string and returns a Token object representing the command and associated data.","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"ChrysanthemumT"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"ChrysanthemumT"},"content":"     * @return The Token object representing the parsed command and associated data.","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"ChrysanthemumT"},"content":"     * @throws InvalidCommandException   If the command is invalid.","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"ChrysanthemumT"},"content":"     * @throws MissingArgumentsException If required arguments are missing.","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"ChrysanthemumT"},"content":"     * @throws WrongTimeFormatException  If there is an issue with the time format in the input.","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"ChrysanthemumT"},"content":"    public Token parse() throws InvalidCommandException, MissingArgumentsException, WrongTimeFormatException {","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"ChrysanthemumT"},"content":"        String[] split \u003d this.input.split(\" \");","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"ChrysanthemumT"},"content":"        Token token;","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"ChrysanthemumT"},"content":"        Task task;","lastModifiedDate":"2024-02-13"},{"lineNumber":67,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":68,"author":{"gitId":"ChrysanthemumT"},"content":"        switch (split[0]) {","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"ChrysanthemumT"},"content":"        case \"list\":","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"ChrysanthemumT"},"content":"            if (split.length !\u003d 1) {","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"ChrysanthemumT"},"content":"                throw new InvalidCommandException(\"InvalidCommandException\");","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"ChrysanthemumT"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"ChrysanthemumT"},"content":"            token \u003d new Token(Command.LIST);","lastModifiedDate":"2024-02-13"},{"lineNumber":74,"author":{"gitId":"ChrysanthemumT"},"content":"            break;","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":76,"author":{"gitId":"ChrysanthemumT"},"content":"        case \"bye\":","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"ChrysanthemumT"},"content":"            if (split.length !\u003d 1) {","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"ChrysanthemumT"},"content":"                throw new InvalidCommandException(\"InvalidCommandException\");","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"ChrysanthemumT"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"ChrysanthemumT"},"content":"            token \u003d new Token(Command.BYE);","lastModifiedDate":"2024-02-13"},{"lineNumber":81,"author":{"gitId":"ChrysanthemumT"},"content":"            break;","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":83,"author":{"gitId":"ChrysanthemumT"},"content":"        case \"delete\":","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"ChrysanthemumT"},"content":"            checkDeleteMarkUnMark(split);","lastModifiedDate":"2024-02-13"},{"lineNumber":85,"author":{"gitId":"ChrysanthemumT"},"content":"            token \u003d new Token(Command.DELETE, Integer.parseInt(split[1]));","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"ChrysanthemumT"},"content":"            break;","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":88,"author":{"gitId":"ChrysanthemumT"},"content":"        case \"unmark\":","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"ChrysanthemumT"},"content":"            checkDeleteMarkUnMark(split);","lastModifiedDate":"2024-02-13"},{"lineNumber":90,"author":{"gitId":"ChrysanthemumT"},"content":"            token \u003d new Token(Command.UNMARK, Integer.parseInt(split[1]));","lastModifiedDate":"2024-01-31"},{"lineNumber":91,"author":{"gitId":"ChrysanthemumT"},"content":"            break;","lastModifiedDate":"2024-01-31"},{"lineNumber":92,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":93,"author":{"gitId":"ChrysanthemumT"},"content":"        case \"mark\":","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"ChrysanthemumT"},"content":"            checkDeleteMarkUnMark(split);","lastModifiedDate":"2024-02-13"},{"lineNumber":95,"author":{"gitId":"ChrysanthemumT"},"content":"            token \u003d new Token(Command.MARK, Integer.parseInt(split[1]));","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"ChrysanthemumT"},"content":"            break;","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":98,"author":{"gitId":"ChrysanthemumT"},"content":"        case \"find\":","lastModifiedDate":"2024-02-01"},{"lineNumber":99,"author":{"gitId":"ChrysanthemumT"},"content":"            if (split.length \u003d\u003d 1) {","lastModifiedDate":"2024-02-01"},{"lineNumber":100,"author":{"gitId":"ChrysanthemumT"},"content":"                throw new MissingArgumentsExceptionTodo(\"find\");","lastModifiedDate":"2024-02-01"},{"lineNumber":101,"author":{"gitId":"ChrysanthemumT"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":102,"author":{"gitId":"ChrysanthemumT"},"content":"            int spaceInFindCmd \u003d this.input.indexOf(\" \");","lastModifiedDate":"2024-02-13"},{"lineNumber":103,"author":{"gitId":"ChrysanthemumT"},"content":"            token \u003d new Token(Command.FIND);","lastModifiedDate":"2024-02-13"},{"lineNumber":104,"author":{"gitId":"ChrysanthemumT"},"content":"            token.setSearchKey(this.input.substring(spaceInFindCmd + 1));","lastModifiedDate":"2024-02-13"},{"lineNumber":105,"author":{"gitId":"ChrysanthemumT"},"content":"            break;","lastModifiedDate":"2024-02-01"},{"lineNumber":106,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":107,"author":{"gitId":"ChrysanthemumT"},"content":"        case \"todo\":","lastModifiedDate":"2024-01-31"},{"lineNumber":108,"author":{"gitId":"ChrysanthemumT"},"content":"            if (split.length \u003d\u003d 1) {","lastModifiedDate":"2024-01-31"},{"lineNumber":109,"author":{"gitId":"ChrysanthemumT"},"content":"                throw new MissingArgumentsExceptionTodo(\"todo\");","lastModifiedDate":"2024-01-31"},{"lineNumber":110,"author":{"gitId":"ChrysanthemumT"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":111,"author":{"gitId":"ChrysanthemumT"},"content":"            int spaceInTodoCmd \u003d this.input.indexOf(\" \");","lastModifiedDate":"2024-02-13"},{"lineNumber":112,"author":{"gitId":"ChrysanthemumT"},"content":"            task \u003d new Todos(this.input, this.input.substring(spaceInTodoCmd + 1));","lastModifiedDate":"2024-02-13"},{"lineNumber":113,"author":{"gitId":"ChrysanthemumT"},"content":"            token \u003d new Token(Command.TODO, task);","lastModifiedDate":"2024-02-13"},{"lineNumber":114,"author":{"gitId":"ChrysanthemumT"},"content":"            break;","lastModifiedDate":"2024-01-31"},{"lineNumber":115,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":116,"author":{"gitId":"ChrysanthemumT"},"content":"        case \"event\":","lastModifiedDate":"2024-01-31"},{"lineNumber":117,"author":{"gitId":"ChrysanthemumT"},"content":"            token \u003d handleEvent(split);","lastModifiedDate":"2024-02-20"},{"lineNumber":118,"author":{"gitId":"ChrysanthemumT"},"content":"            break;","lastModifiedDate":"2024-02-20"},{"lineNumber":119,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":120,"author":{"gitId":"ChrysanthemumT"},"content":"        case \"deadline\":","lastModifiedDate":"2024-02-20"},{"lineNumber":121,"author":{"gitId":"ChrysanthemumT"},"content":"            token \u003d handleDeadline(split);","lastModifiedDate":"2024-02-20"},{"lineNumber":122,"author":{"gitId":"ChrysanthemumT"},"content":"            break;","lastModifiedDate":"2024-02-20"},{"lineNumber":123,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":124,"author":{"gitId":"ChrysanthemumT"},"content":"        case \"save\":","lastModifiedDate":"2024-02-20"},{"lineNumber":125,"author":{"gitId":"ChrysanthemumT"},"content":"            token \u003d handleSave(split);","lastModifiedDate":"2024-02-20"},{"lineNumber":126,"author":{"gitId":"ChrysanthemumT"},"content":"            break;","lastModifiedDate":"2024-02-20"},{"lineNumber":127,"author":{"gitId":"ChrysanthemumT"},"content":"        case \"priority\":","lastModifiedDate":"2024-02-20"},{"lineNumber":128,"author":{"gitId":"ChrysanthemumT"},"content":"            Priority p \u003d checkPriority(split);","lastModifiedDate":"2024-02-20"},{"lineNumber":129,"author":{"gitId":"ChrysanthemumT"},"content":"            token \u003d new Token(Command.PRIORITY, Integer.parseInt(split[1]), p);","lastModifiedDate":"2024-02-20"},{"lineNumber":130,"author":{"gitId":"ChrysanthemumT"},"content":"            break;","lastModifiedDate":"2024-02-20"},{"lineNumber":131,"author":{"gitId":"ChrysanthemumT"},"content":"        default:","lastModifiedDate":"2024-02-20"},{"lineNumber":132,"author":{"gitId":"ChrysanthemumT"},"content":"            throw new InvalidCommandException(\"InvalidCommandException\");","lastModifiedDate":"2024-02-20"},{"lineNumber":133,"author":{"gitId":"ChrysanthemumT"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":134,"author":{"gitId":"ChrysanthemumT"},"content":"        return token;","lastModifiedDate":"2024-02-20"},{"lineNumber":135,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":136,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":137,"author":{"gitId":"ChrysanthemumT"},"content":"    private Token handleEvent(String[] split) throws MissingArgumentsException, WrongTimeFormatException {","lastModifiedDate":"2024-02-20"},{"lineNumber":138,"author":{"gitId":"ChrysanthemumT"},"content":"        int positionOfFromInCmd \u003d Arrays.asList(split).indexOf(\"/from\");","lastModifiedDate":"2024-02-13"},{"lineNumber":139,"author":{"gitId":"ChrysanthemumT"},"content":"        int positionOfToInCmd \u003d Arrays.asList(split).indexOf(\"/to\");","lastModifiedDate":"2024-02-13"},{"lineNumber":140,"author":{"gitId":"ChrysanthemumT"},"content":"        boolean isPositionOfFromLessThanTwo \u003d positionOfFromInCmd \u003c 2;","lastModifiedDate":"2024-02-13"},{"lineNumber":141,"author":{"gitId":"ChrysanthemumT"},"content":"        boolean isPositionOfToLast \u003d positionOfToInCmd \u003d\u003d split.length - 1;","lastModifiedDate":"2024-02-13"},{"lineNumber":142,"author":{"gitId":"ChrysanthemumT"},"content":"        boolean isPositionOfFromAndToLessThanOne \u003d positionOfToInCmd - positionOfFromInCmd \u003c\u003d 1;","lastModifiedDate":"2024-02-13"},{"lineNumber":143,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":144,"author":{"gitId":"ChrysanthemumT"},"content":"        if (split.length \u003c 5) {","lastModifiedDate":"2024-01-31"},{"lineNumber":145,"author":{"gitId":"ChrysanthemumT"},"content":"            throw new MissingArgumentsExceptionEvents(\"event\");","lastModifiedDate":"2024-01-31"},{"lineNumber":146,"author":{"gitId":"ChrysanthemumT"},"content":"        } else if (isPositionOfFromLessThanTwo || isPositionOfToLast","lastModifiedDate":"2024-02-13"},{"lineNumber":147,"author":{"gitId":"ChrysanthemumT"},"content":"                || isPositionOfFromAndToLessThanOne) {","lastModifiedDate":"2024-02-13"},{"lineNumber":148,"author":{"gitId":"ChrysanthemumT"},"content":"            throw new MissingArgumentsExceptionEvents(\"event\");","lastModifiedDate":"2024-01-31"},{"lineNumber":149,"author":{"gitId":"ChrysanthemumT"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":150,"author":{"gitId":"ChrysanthemumT"},"content":"        int spaceInEventCmd \u003d this.input.indexOf(\" \");","lastModifiedDate":"2024-02-13"},{"lineNumber":151,"author":{"gitId":"ChrysanthemumT"},"content":"        int fromInEventCmd \u003d this.input.indexOf(\"/from\");","lastModifiedDate":"2024-02-13"},{"lineNumber":152,"author":{"gitId":"ChrysanthemumT"},"content":"        int toInEvenCmd \u003d this.input.indexOf(\"/to\");","lastModifiedDate":"2024-02-13"},{"lineNumber":153,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":154,"author":{"gitId":"ChrysanthemumT"},"content":"        String fromDateTime \u003d checkEventFrom(fromInEventCmd, toInEvenCmd);","lastModifiedDate":"2024-02-13"},{"lineNumber":155,"author":{"gitId":"ChrysanthemumT"},"content":"        String toDateTime \u003d checkEventTo(toInEvenCmd);","lastModifiedDate":"2024-02-14"},{"lineNumber":156,"author":{"gitId":"ChrysanthemumT"},"content":"        Task task \u003d new Events(this.input, this.input.substring(spaceInEventCmd + 1, fromInEventCmd)","lastModifiedDate":"2024-02-20"},{"lineNumber":157,"author":{"gitId":"ChrysanthemumT"},"content":"                .trim(), fromDateTime, toDateTime);","lastModifiedDate":"2024-02-13"},{"lineNumber":158,"author":{"gitId":"ChrysanthemumT"},"content":"        return new Token(Command.EVENT, task);","lastModifiedDate":"2024-02-20"},{"lineNumber":159,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":160,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":161,"author":{"gitId":"ChrysanthemumT"},"content":"    private Token handleDeadline(String[] split) throws MissingArgumentsException, WrongTimeFormatException {","lastModifiedDate":"2024-02-20"},{"lineNumber":162,"author":{"gitId":"ChrysanthemumT"},"content":"        int positionOfByInCmd \u003d Arrays.asList(split).indexOf(\"/by\");","lastModifiedDate":"2024-02-13"},{"lineNumber":163,"author":{"gitId":"ChrysanthemumT"},"content":"        boolean isPositionOfByLessThanTwo \u003d positionOfByInCmd \u003c 2;","lastModifiedDate":"2024-02-13"},{"lineNumber":164,"author":{"gitId":"ChrysanthemumT"},"content":"        boolean isPositionOfByLast \u003d positionOfByInCmd \u003d\u003d split.length - 1;","lastModifiedDate":"2024-02-13"},{"lineNumber":165,"author":{"gitId":"ChrysanthemumT"},"content":"        if (split.length \u003c 4) {","lastModifiedDate":"2024-02-13"},{"lineNumber":166,"author":{"gitId":"ChrysanthemumT"},"content":"            throw new MissingArgumentsExceptionDeadlines(\"deadline\");","lastModifiedDate":"2024-02-13"},{"lineNumber":167,"author":{"gitId":"ChrysanthemumT"},"content":"        } else if (isPositionOfByLessThanTwo || isPositionOfByLast) {","lastModifiedDate":"2024-02-13"},{"lineNumber":168,"author":{"gitId":"ChrysanthemumT"},"content":"            throw new MissingArgumentsExceptionDeadlines(\"deadline\");","lastModifiedDate":"2024-02-13"},{"lineNumber":169,"author":{"gitId":"ChrysanthemumT"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":170,"author":{"gitId":"ChrysanthemumT"},"content":"        int spaceInDeadlineCmd \u003d this.input.indexOf(\" \");","lastModifiedDate":"2024-02-13"},{"lineNumber":171,"author":{"gitId":"ChrysanthemumT"},"content":"        int byInDeadlineCmd \u003d this.input.indexOf(\"/by\");","lastModifiedDate":"2024-02-13"},{"lineNumber":172,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":173,"author":{"gitId":"ChrysanthemumT"},"content":"        String byDateTime \u003d checkDeadline();","lastModifiedDate":"2024-02-13"},{"lineNumber":174,"author":{"gitId":"ChrysanthemumT"},"content":"        Task task \u003d new Deadlines(this.input, this.input.substring(spaceInDeadlineCmd + 1, byInDeadlineCmd)","lastModifiedDate":"2024-02-20"},{"lineNumber":175,"author":{"gitId":"ChrysanthemumT"},"content":"                .trim(), byDateTime);","lastModifiedDate":"2024-02-13"},{"lineNumber":176,"author":{"gitId":"ChrysanthemumT"},"content":"        return new Token(Command.DEADLINE, task);","lastModifiedDate":"2024-02-20"},{"lineNumber":177,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":178,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":179,"author":{"gitId":"ChrysanthemumT"},"content":"    private Token handleSave(String[] split) throws InvalidCommandException, MissingArgumentsException,","lastModifiedDate":"2024-02-20"},{"lineNumber":180,"author":{"gitId":"ChrysanthemumT"},"content":"            WrongTimeFormatException {","lastModifiedDate":"2024-02-20"},{"lineNumber":181,"author":{"gitId":"ChrysanthemumT"},"content":"        boolean marked \u003d split[1].equals(\"1\") ? true : false;","lastModifiedDate":"2024-02-13"},{"lineNumber":182,"author":{"gitId":"ChrysanthemumT"},"content":"        this.input \u003d String.join(\" \", Arrays.copyOfRange(split, 3, split.length));","lastModifiedDate":"2024-02-14"},{"lineNumber":183,"author":{"gitId":"ChrysanthemumT"},"content":"        Token token \u003d this.parse();","lastModifiedDate":"2024-02-20"},{"lineNumber":184,"author":{"gitId":"ChrysanthemumT"},"content":"        if (marked) {","lastModifiedDate":"2024-02-13"},{"lineNumber":185,"author":{"gitId":"ChrysanthemumT"},"content":"            token.getTask().mark();","lastModifiedDate":"2024-02-13"},{"lineNumber":186,"author":{"gitId":"ChrysanthemumT"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":187,"author":{"gitId":"ChrysanthemumT"},"content":"        switch (split[2]) {","lastModifiedDate":"2024-02-14"},{"lineNumber":188,"author":{"gitId":"ChrysanthemumT"},"content":"        case \"0\":","lastModifiedDate":"2024-02-14"},{"lineNumber":189,"author":{"gitId":"ChrysanthemumT"},"content":"            token.getTask().setPriority(Priority.NONE);","lastModifiedDate":"2024-02-14"},{"lineNumber":190,"author":{"gitId":"ChrysanthemumT"},"content":"            break;","lastModifiedDate":"2024-02-14"},{"lineNumber":191,"author":{"gitId":"ChrysanthemumT"},"content":"        case \"1\":","lastModifiedDate":"2024-02-14"},{"lineNumber":192,"author":{"gitId":"ChrysanthemumT"},"content":"            token.getTask().setPriority(Priority.HIGH);","lastModifiedDate":"2024-02-14"},{"lineNumber":193,"author":{"gitId":"ChrysanthemumT"},"content":"            break;","lastModifiedDate":"2024-02-14"},{"lineNumber":194,"author":{"gitId":"ChrysanthemumT"},"content":"        case \"-1\":","lastModifiedDate":"2024-02-14"},{"lineNumber":195,"author":{"gitId":"ChrysanthemumT"},"content":"            token.getTask().setPriority(Priority.LOW);","lastModifiedDate":"2024-02-14"},{"lineNumber":196,"author":{"gitId":"ChrysanthemumT"},"content":"            break;","lastModifiedDate":"2024-02-14"},{"lineNumber":197,"author":{"gitId":"ChrysanthemumT"},"content":"        default:","lastModifiedDate":"2024-02-14"},{"lineNumber":198,"author":{"gitId":"ChrysanthemumT"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":199,"author":{"gitId":"ChrysanthemumT"},"content":"        token.setAsSaved();","lastModifiedDate":"2024-02-13"},{"lineNumber":200,"author":{"gitId":"ChrysanthemumT"},"content":"        return token;","lastModifiedDate":"2024-02-13"},{"lineNumber":201,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":202,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":203,"author":{"gitId":"ChrysanthemumT"},"content":"    private Priority checkPriority(String[] split) throws MissingArgumentsException,","lastModifiedDate":"2024-02-14"},{"lineNumber":204,"author":{"gitId":"ChrysanthemumT"},"content":"            InvalidCommandException {","lastModifiedDate":"2024-02-14"},{"lineNumber":205,"author":{"gitId":"ChrysanthemumT"},"content":"        if (split.length !\u003d 3) {","lastModifiedDate":"2024-02-14"},{"lineNumber":206,"author":{"gitId":"ChrysanthemumT"},"content":"            throw new MissingArgumentsException(\"priority {index} {high/low}\");","lastModifiedDate":"2024-02-14"},{"lineNumber":207,"author":{"gitId":"ChrysanthemumT"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":208,"author":{"gitId":"ChrysanthemumT"},"content":"        try {","lastModifiedDate":"2024-02-14"},{"lineNumber":209,"author":{"gitId":"ChrysanthemumT"},"content":"            Integer.parseInt(split[1]);","lastModifiedDate":"2024-02-14"},{"lineNumber":210,"author":{"gitId":"ChrysanthemumT"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-14"},{"lineNumber":211,"author":{"gitId":"ChrysanthemumT"},"content":"            throw new InvalidCommandException(\"InvalidCommandException\");","lastModifiedDate":"2024-02-14"},{"lineNumber":212,"author":{"gitId":"ChrysanthemumT"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":213,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":214,"author":{"gitId":"ChrysanthemumT"},"content":"        if (split[2].toLowerCase().equals(\"high\")) {","lastModifiedDate":"2024-02-14"},{"lineNumber":215,"author":{"gitId":"ChrysanthemumT"},"content":"            return Priority.HIGH;","lastModifiedDate":"2024-02-14"},{"lineNumber":216,"author":{"gitId":"ChrysanthemumT"},"content":"        } else if (split[2].toLowerCase().equals(\"low\")) {","lastModifiedDate":"2024-02-14"},{"lineNumber":217,"author":{"gitId":"ChrysanthemumT"},"content":"            return Priority.LOW;","lastModifiedDate":"2024-02-14"},{"lineNumber":218,"author":{"gitId":"ChrysanthemumT"},"content":"        } else {","lastModifiedDate":"2024-02-14"},{"lineNumber":219,"author":{"gitId":"ChrysanthemumT"},"content":"            throw new InvalidCommandException(\"InvalidCommandException\");","lastModifiedDate":"2024-02-14"},{"lineNumber":220,"author":{"gitId":"ChrysanthemumT"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":221,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":222,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":223,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":224,"author":{"gitId":"ChrysanthemumT"},"content":"     * Checks if the delete, unmark, or mark command has the correct number of arguments and if the task ID is valid.","lastModifiedDate":"2024-02-13"},{"lineNumber":225,"author":{"gitId":"ChrysanthemumT"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":226,"author":{"gitId":"ChrysanthemumT"},"content":"     * @param split The array of split input tokens.","lastModifiedDate":"2024-02-13"},{"lineNumber":227,"author":{"gitId":"ChrysanthemumT"},"content":"     * @throws MissingArgumentsExceptionMarking If the number of arguments for marking a task is incorrect.","lastModifiedDate":"2024-02-13"},{"lineNumber":228,"author":{"gitId":"ChrysanthemumT"},"content":"     * @throws InvalidCommandException          If the command is invalid or the task ID is not a number.","lastModifiedDate":"2024-02-13"},{"lineNumber":229,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":230,"author":{"gitId":"ChrysanthemumT"},"content":"    private void checkDeleteMarkUnMark(String[] split) throws MissingArgumentsExceptionMarking,","lastModifiedDate":"2024-02-13"},{"lineNumber":231,"author":{"gitId":"ChrysanthemumT"},"content":"            InvalidCommandException {","lastModifiedDate":"2024-02-13"},{"lineNumber":232,"author":{"gitId":"ChrysanthemumT"},"content":"        if (split.length !\u003d 2) {","lastModifiedDate":"2024-02-13"},{"lineNumber":233,"author":{"gitId":"ChrysanthemumT"},"content":"            throw new MissingArgumentsExceptionMarking(split[0]);","lastModifiedDate":"2024-02-13"},{"lineNumber":234,"author":{"gitId":"ChrysanthemumT"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":235,"author":{"gitId":"ChrysanthemumT"},"content":"        try {","lastModifiedDate":"2024-02-13"},{"lineNumber":236,"author":{"gitId":"ChrysanthemumT"},"content":"            Integer.parseInt(split[1]);","lastModifiedDate":"2024-02-13"},{"lineNumber":237,"author":{"gitId":"ChrysanthemumT"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-13"},{"lineNumber":238,"author":{"gitId":"ChrysanthemumT"},"content":"            throw new InvalidCommandException(\"InvalidCommandException\");","lastModifiedDate":"2024-02-13"},{"lineNumber":239,"author":{"gitId":"ChrysanthemumT"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":240,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":241,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":242,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":243,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":244,"author":{"gitId":"ChrysanthemumT"},"content":"     * Checks the deadline command for the correct format and returns the formatted deadline date-time string.","lastModifiedDate":"2024-02-13"},{"lineNumber":245,"author":{"gitId":"ChrysanthemumT"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":246,"author":{"gitId":"ChrysanthemumT"},"content":"     * @return The formatted deadline date-time string.","lastModifiedDate":"2024-02-13"},{"lineNumber":247,"author":{"gitId":"ChrysanthemumT"},"content":"     * @throws WrongTimeFormatException If the deadline format is incorrect or missing.","lastModifiedDate":"2024-02-13"},{"lineNumber":248,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":249,"author":{"gitId":"ChrysanthemumT"},"content":"    private String checkDeadline() throws WrongTimeFormatException {","lastModifiedDate":"2024-02-13"},{"lineNumber":250,"author":{"gitId":"ChrysanthemumT"},"content":"        int by \u003d this.input.indexOf(\"/by\");","lastModifiedDate":"2024-01-31"},{"lineNumber":251,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":252,"author":{"gitId":"ChrysanthemumT"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":253,"author":{"gitId":"ChrysanthemumT"},"content":"            String[] dateTime \u003d checkDateTimeFormat(this.input.substring(by + 3).trim());","lastModifiedDate":"2024-02-13"},{"lineNumber":254,"author":{"gitId":"ChrysanthemumT"},"content":"            return String.join(\"-\", dateTime);","lastModifiedDate":"2024-02-13"},{"lineNumber":255,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":256,"author":{"gitId":"ChrysanthemumT"},"content":"        } catch (WrongTimeFormatException exception) {","lastModifiedDate":"2024-02-13"},{"lineNumber":257,"author":{"gitId":"ChrysanthemumT"},"content":"            throw exception;","lastModifiedDate":"2024-02-13"},{"lineNumber":258,"author":{"gitId":"ChrysanthemumT"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":259,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":260,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":261,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":262,"author":{"gitId":"ChrysanthemumT"},"content":"     * Checks the event command\u0027s \u0027from\u0027 keyword for the correct format and returns the formatted \u0027from\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":263,"author":{"gitId":"ChrysanthemumT"},"content":"     * date-time string.","lastModifiedDate":"2024-02-13"},{"lineNumber":264,"author":{"gitId":"ChrysanthemumT"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":265,"author":{"gitId":"ChrysanthemumT"},"content":"     * @param fromInEventCmd The index of the \u0027from\u0027 keyword in the input command.","lastModifiedDate":"2024-02-13"},{"lineNumber":266,"author":{"gitId":"ChrysanthemumT"},"content":"     * @param toInEventCmd   The index of the \u0027to\u0027 keyword in the input command.","lastModifiedDate":"2024-02-13"},{"lineNumber":267,"author":{"gitId":"ChrysanthemumT"},"content":"     * @return The formatted \u0027from\u0027 date-time string.","lastModifiedDate":"2024-02-13"},{"lineNumber":268,"author":{"gitId":"ChrysanthemumT"},"content":"     * @throws WrongTimeFormatException If the \u0027from\u0027 keyword format is incorrect or missing.","lastModifiedDate":"2024-02-13"},{"lineNumber":269,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":270,"author":{"gitId":"ChrysanthemumT"},"content":"    private String checkEventFrom(int fromInEventCmd, int toInEventCmd) throws WrongTimeFormatException {","lastModifiedDate":"2024-02-13"},{"lineNumber":271,"author":{"gitId":"ChrysanthemumT"},"content":"        try {","lastModifiedDate":"2024-02-13"},{"lineNumber":272,"author":{"gitId":"ChrysanthemumT"},"content":"            String[] dateTime \u003d checkDateTimeFormat(this.input.substring(fromInEventCmd + 5, toInEventCmd).trim());","lastModifiedDate":"2024-02-13"},{"lineNumber":273,"author":{"gitId":"ChrysanthemumT"},"content":"            return String.join(\"-\", dateTime);","lastModifiedDate":"2024-02-13"},{"lineNumber":274,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":275,"author":{"gitId":"ChrysanthemumT"},"content":"        } catch (WrongTimeFormatException exception) {","lastModifiedDate":"2024-01-31"},{"lineNumber":276,"author":{"gitId":"ChrysanthemumT"},"content":"            throw exception;","lastModifiedDate":"2024-01-31"},{"lineNumber":277,"author":{"gitId":"ChrysanthemumT"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":278,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":279,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":280,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":281,"author":{"gitId":"ChrysanthemumT"},"content":"     * Checks the event command\u0027s \u0027to\u0027 keyword for the correct format and returns the formatted \u0027to\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":282,"author":{"gitId":"ChrysanthemumT"},"content":"     * date-time string.","lastModifiedDate":"2024-02-13"},{"lineNumber":283,"author":{"gitId":"ChrysanthemumT"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":284,"author":{"gitId":"ChrysanthemumT"},"content":"     * @param toInEventCmd The index of the \u0027to\u0027 keyword in the input command.","lastModifiedDate":"2024-02-13"},{"lineNumber":285,"author":{"gitId":"ChrysanthemumT"},"content":"     * @return The formatted \u0027to\u0027 date-time string.","lastModifiedDate":"2024-02-13"},{"lineNumber":286,"author":{"gitId":"ChrysanthemumT"},"content":"     * @throws WrongTimeFormatException If the \u0027to\u0027 keyword format is incorrect or missing.","lastModifiedDate":"2024-02-13"},{"lineNumber":287,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":288,"author":{"gitId":"ChrysanthemumT"},"content":"    private String checkEventTo(int toInEventCmd) throws WrongTimeFormatException {","lastModifiedDate":"2024-02-14"},{"lineNumber":289,"author":{"gitId":"ChrysanthemumT"},"content":"        try {","lastModifiedDate":"2024-02-13"},{"lineNumber":290,"author":{"gitId":"ChrysanthemumT"},"content":"            String[] dateTime \u003d checkDateTimeFormat(this.input.substring(toInEventCmd + 3).trim());","lastModifiedDate":"2024-02-13"},{"lineNumber":291,"author":{"gitId":"ChrysanthemumT"},"content":"            return String.join(\"-\", dateTime);","lastModifiedDate":"2024-02-13"},{"lineNumber":292,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":293,"author":{"gitId":"ChrysanthemumT"},"content":"        } catch (WrongTimeFormatException exception) {","lastModifiedDate":"2024-02-13"},{"lineNumber":294,"author":{"gitId":"ChrysanthemumT"},"content":"            throw exception;","lastModifiedDate":"2024-02-13"},{"lineNumber":295,"author":{"gitId":"ChrysanthemumT"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":296,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":297,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":298,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":299,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":300,"author":{"gitId":"ChrysanthemumT"},"content":"     * Checks the format of the provided date and time string and returns a formatted date-time string.","lastModifiedDate":"2024-02-13"},{"lineNumber":301,"author":{"gitId":"ChrysanthemumT"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":302,"author":{"gitId":"ChrysanthemumT"},"content":"     * @param string The date and time string to be checked.","lastModifiedDate":"2024-02-13"},{"lineNumber":303,"author":{"gitId":"ChrysanthemumT"},"content":"     * @return The formatted date-time string.","lastModifiedDate":"2024-02-13"},{"lineNumber":304,"author":{"gitId":"ChrysanthemumT"},"content":"     * @throws WrongTimeFormatException If the date and time format is incorrect or missing.","lastModifiedDate":"2024-02-13"},{"lineNumber":305,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":306,"author":{"gitId":"ChrysanthemumT"},"content":"    private String[] checkDateTimeFormat(String string) throws WrongTimeFormatException {","lastModifiedDate":"2024-02-13"},{"lineNumber":307,"author":{"gitId":"ChrysanthemumT"},"content":"        String[] splitString \u003d string.split(\"[\\\\s/\\\\-]+\");","lastModifiedDate":"2024-01-31"},{"lineNumber":308,"author":{"gitId":"ChrysanthemumT"},"content":"        String[] dateTime \u003d new String[2];","lastModifiedDate":"2024-02-13"},{"lineNumber":309,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":310,"author":{"gitId":"ChrysanthemumT"},"content":"        if (splitString.length \u003c 3) {","lastModifiedDate":"2024-01-31"},{"lineNumber":311,"author":{"gitId":"ChrysanthemumT"},"content":"            throw new WrongTimeFormatException(\"wrong time buddy\");","lastModifiedDate":"2024-01-31"},{"lineNumber":312,"author":{"gitId":"ChrysanthemumT"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":313,"author":{"gitId":"ChrysanthemumT"},"content":"        if (splitString.length \u003e 5) {","lastModifiedDate":"2024-02-07"},{"lineNumber":314,"author":{"gitId":"ChrysanthemumT"},"content":"            throw new WrongTimeFormatException(\"Too many inputs\");","lastModifiedDate":"2024-01-31"},{"lineNumber":315,"author":{"gitId":"ChrysanthemumT"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":316,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":317,"author":{"gitId":"ChrysanthemumT"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":318,"author":{"gitId":"ChrysanthemumT"},"content":"            int year \u003d Integer.parseInt(splitString[2]);","lastModifiedDate":"2024-01-31"},{"lineNumber":319,"author":{"gitId":"ChrysanthemumT"},"content":"            int month \u003d Integer.parseInt(splitString[1]);","lastModifiedDate":"2024-01-31"},{"lineNumber":320,"author":{"gitId":"ChrysanthemumT"},"content":"            int day \u003d Integer.parseInt(splitString[0]);","lastModifiedDate":"2024-01-31"},{"lineNumber":321,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":322,"author":{"gitId":"ChrysanthemumT"},"content":"            dateTime[0] \u003d checkRealDate(year, month, day);","lastModifiedDate":"2024-02-13"},{"lineNumber":323,"author":{"gitId":"ChrysanthemumT"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":324,"author":{"gitId":"ChrysanthemumT"},"content":"            throw new WrongTimeFormatException(\"Use numerals for date\");","lastModifiedDate":"2024-01-31"},{"lineNumber":325,"author":{"gitId":"ChrysanthemumT"},"content":"        } catch (WrongTimeFormatException exception) {","lastModifiedDate":"2024-01-31"},{"lineNumber":326,"author":{"gitId":"ChrysanthemumT"},"content":"            throw exception;","lastModifiedDate":"2024-01-31"},{"lineNumber":327,"author":{"gitId":"ChrysanthemumT"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":328,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":329,"author":{"gitId":"ChrysanthemumT"},"content":"        if (splitString.length \u003e 4) {","lastModifiedDate":"2024-01-31"},{"lineNumber":330,"author":{"gitId":"ChrysanthemumT"},"content":"            dateTime[1] \u003d checkRealTime(splitString[3] + \" \" + splitString[4]);","lastModifiedDate":"2024-02-13"},{"lineNumber":331,"author":{"gitId":"ChrysanthemumT"},"content":"        } else if (splitString.length \u003e 3) {","lastModifiedDate":"2024-02-13"},{"lineNumber":332,"author":{"gitId":"ChrysanthemumT"},"content":"            dateTime[1] \u003d checkRealTime(splitString[3]);","lastModifiedDate":"2024-02-13"},{"lineNumber":333,"author":{"gitId":"ChrysanthemumT"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":334,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":335,"author":{"gitId":"ChrysanthemumT"},"content":"        return dateTime;","lastModifiedDate":"2024-02-13"},{"lineNumber":336,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":337,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":338,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":339,"author":{"gitId":"ChrysanthemumT"},"content":"     * Checks if the provided year, month, and day form a valid date and returns a formatted date string.","lastModifiedDate":"2024-02-13"},{"lineNumber":340,"author":{"gitId":"ChrysanthemumT"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":341,"author":{"gitId":"ChrysanthemumT"},"content":"     * @param year  The year.","lastModifiedDate":"2024-02-01"},{"lineNumber":342,"author":{"gitId":"ChrysanthemumT"},"content":"     * @param month The month.","lastModifiedDate":"2024-02-01"},{"lineNumber":343,"author":{"gitId":"ChrysanthemumT"},"content":"     * @param day   The day.","lastModifiedDate":"2024-02-01"},{"lineNumber":344,"author":{"gitId":"ChrysanthemumT"},"content":"     * @return The formatted date string.","lastModifiedDate":"2024-02-13"},{"lineNumber":345,"author":{"gitId":"ChrysanthemumT"},"content":"     * @throws WrongTimeFormatException If the date is invalid.","lastModifiedDate":"2024-02-01"},{"lineNumber":346,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":347,"author":{"gitId":"ChrysanthemumT"},"content":"    private String checkRealDate(int year, int month, int day) throws WrongTimeFormatException {","lastModifiedDate":"2024-02-13"},{"lineNumber":348,"author":{"gitId":"ChrysanthemumT"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":349,"author":{"gitId":"ChrysanthemumT"},"content":"            LocalDate dateToBeChecked \u003d LocalDate.of(year, month, day);","lastModifiedDate":"2024-01-31"},{"lineNumber":350,"author":{"gitId":"ChrysanthemumT"},"content":"            DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2024-02-13"},{"lineNumber":351,"author":{"gitId":"ChrysanthemumT"},"content":"            if (dateToBeChecked.isBefore(LocalDate.now())) {","lastModifiedDate":"2024-01-31"},{"lineNumber":352,"author":{"gitId":"ChrysanthemumT"},"content":"                throw new WrongTimeFormatException(\"Can\u0027t go back in time buddy\");","lastModifiedDate":"2024-01-31"},{"lineNumber":353,"author":{"gitId":"ChrysanthemumT"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":354,"author":{"gitId":"ChrysanthemumT"},"content":"            return dateToBeChecked.format(dateFormatter);","lastModifiedDate":"2024-02-13"},{"lineNumber":355,"author":{"gitId":"ChrysanthemumT"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":356,"author":{"gitId":"ChrysanthemumT"},"content":"            throw new WrongTimeFormatException(\"Date and time are impossible buddy\");","lastModifiedDate":"2024-01-31"},{"lineNumber":357,"author":{"gitId":"ChrysanthemumT"},"content":"        } catch (WrongTimeFormatException exception) {","lastModifiedDate":"2024-01-31"},{"lineNumber":358,"author":{"gitId":"ChrysanthemumT"},"content":"            throw exception;","lastModifiedDate":"2024-01-31"},{"lineNumber":359,"author":{"gitId":"ChrysanthemumT"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":360,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":361,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":362,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":363,"author":{"gitId":"ChrysanthemumT"},"content":"     * Checks if the provided time and twelve-hour format (AM/PM) form a valid time and returns a formatted time string.","lastModifiedDate":"2024-02-13"},{"lineNumber":364,"author":{"gitId":"ChrysanthemumT"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":365,"author":{"gitId":"ChrysanthemumT"},"content":"     * @param time The time string.","lastModifiedDate":"2024-02-01"},{"lineNumber":366,"author":{"gitId":"ChrysanthemumT"},"content":"     * @return The formatted time string.","lastModifiedDate":"2024-02-13"},{"lineNumber":367,"author":{"gitId":"ChrysanthemumT"},"content":"     * @throws WrongTimeFormatException If the time is invalid.","lastModifiedDate":"2024-02-01"},{"lineNumber":368,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":369,"author":{"gitId":"ChrysanthemumT"},"content":"    private String checkRealTime(String time) throws WrongTimeFormatException {","lastModifiedDate":"2024-02-13"},{"lineNumber":370,"author":{"gitId":"ChrysanthemumT"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":371,"author":{"gitId":"ChrysanthemumT"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"[HH:mm]\"","lastModifiedDate":"2024-02-13"},{"lineNumber":372,"author":{"gitId":"ChrysanthemumT"},"content":"                    + \"[HHmm]\"","lastModifiedDate":"2024-02-13"},{"lineNumber":373,"author":{"gitId":"ChrysanthemumT"},"content":"                    + \"[Hmm]\"","lastModifiedDate":"2024-02-13"},{"lineNumber":374,"author":{"gitId":"ChrysanthemumT"},"content":"                    + \"[h:mm a]\"","lastModifiedDate":"2024-02-13"},{"lineNumber":375,"author":{"gitId":"ChrysanthemumT"},"content":"                    + \"[Hmm a]\"","lastModifiedDate":"2024-02-20"},{"lineNumber":376,"author":{"gitId":"ChrysanthemumT"},"content":"                    + \"[H:mm]\");","lastModifiedDate":"2024-02-13"},{"lineNumber":377,"author":{"gitId":"ChrysanthemumT"},"content":"            DateTimeFormatter outPutFormatter \u003d DateTimeFormatter.ofPattern(\"h:mm a\");","lastModifiedDate":"2024-02-13"},{"lineNumber":378,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":379,"author":{"gitId":"ChrysanthemumT"},"content":"            return LocalTime.parse(time, formatter).format(outPutFormatter);","lastModifiedDate":"2024-02-13"},{"lineNumber":380,"author":{"gitId":"ChrysanthemumT"},"content":"        } catch (DateTimeException exception) {","lastModifiedDate":"2024-01-31"},{"lineNumber":381,"author":{"gitId":"ChrysanthemumT"},"content":"            throw new WrongTimeFormatException(\"Date and time are impossible buddy\");","lastModifiedDate":"2024-01-31"},{"lineNumber":382,"author":{"gitId":"ChrysanthemumT"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":383,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":384,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":385,"author":{"gitId":"ChrysanthemumT"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"ChrysanthemumT":385}},{"path":"src/main/java/duke/parser/Priority.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChrysanthemumT"},"content":"package duke.parser;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"ChrysanthemumT"},"content":"/**","lastModifiedDate":"2024-02-20"},{"lineNumber":4,"author":{"gitId":"ChrysanthemumT"},"content":" * Enum representing the priority of a task.","lastModifiedDate":"2024-02-20"},{"lineNumber":5,"author":{"gitId":"ChrysanthemumT"},"content":" */","lastModifiedDate":"2024-02-20"},{"lineNumber":6,"author":{"gitId":"ChrysanthemumT"},"content":"public enum Priority {","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"ChrysanthemumT"},"content":"    HIGH, LOW, NONE,","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"ChrysanthemumT"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"ChrysanthemumT":8}},{"path":"src/main/java/duke/parser/Token.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChrysanthemumT"},"content":"package duke.parser;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"ChrysanthemumT"},"content":"import duke.storage.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"ChrysanthemumT"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"ChrysanthemumT"},"content":" * The Token class represents a parsed command along with associated data.","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"ChrysanthemumT"},"content":" * It is used to convey information between the Parser and other components of the Duke application.","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"ChrysanthemumT"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"ChrysanthemumT"},"content":"public class Token {","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"ChrysanthemumT"},"content":"    private Command cmd;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"ChrysanthemumT"},"content":"    private Task task;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"ChrysanthemumT"},"content":"    private int selectedItem;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"ChrysanthemumT"},"content":"    private String searchKey;","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"ChrysanthemumT"},"content":"    private Priority priority;","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"ChrysanthemumT"},"content":"     * Constructs a Token object with the specified command.","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"ChrysanthemumT"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"ChrysanthemumT"},"content":"     * @param cmd The command associated with the token.","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"ChrysanthemumT"},"content":"    public Token(Command cmd) {","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"ChrysanthemumT"},"content":"        this.cmd \u003d cmd;","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"ChrysanthemumT"},"content":"     * Constructs a Token object with the specified command and task.","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"ChrysanthemumT"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"ChrysanthemumT"},"content":"     * @param cmd  The command associated with the token.","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"ChrysanthemumT"},"content":"     * @param task The task associated with the token.","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"ChrysanthemumT"},"content":"    public Token(Command cmd, Task task) {","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"ChrysanthemumT"},"content":"        this.cmd \u003d cmd;","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"ChrysanthemumT"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"ChrysanthemumT"},"content":"     * Constructs a Token object with the specified command and selected item index.","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"ChrysanthemumT"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"ChrysanthemumT"},"content":"     * @param cmd          The command associated with the token.","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"ChrysanthemumT"},"content":"     * @param selectedItem The index of the selected item.","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"ChrysanthemumT"},"content":"    public Token(Command cmd, int selectedItem) {","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"ChrysanthemumT"},"content":"        this.cmd \u003d cmd;","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"ChrysanthemumT"},"content":"        this.selectedItem \u003d selectedItem;","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":49,"author":{"gitId":"ChrysanthemumT"},"content":"     * Constructs a new Token object with the given command, selected item index, and priority.","lastModifiedDate":"2024-02-20"},{"lineNumber":50,"author":{"gitId":"ChrysanthemumT"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":51,"author":{"gitId":"ChrysanthemumT"},"content":"     * @param cmd          the command associated with the token","lastModifiedDate":"2024-02-20"},{"lineNumber":52,"author":{"gitId":"ChrysanthemumT"},"content":"     * @param selectedItem the index of the selected item","lastModifiedDate":"2024-02-20"},{"lineNumber":53,"author":{"gitId":"ChrysanthemumT"},"content":"     * @param p            the priority associated with the token","lastModifiedDate":"2024-02-20"},{"lineNumber":54,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":55,"author":{"gitId":"ChrysanthemumT"},"content":"    public Token(Command cmd, int selectedItem, Priority p) {","lastModifiedDate":"2024-02-14"},{"lineNumber":56,"author":{"gitId":"ChrysanthemumT"},"content":"        this.cmd \u003d cmd;","lastModifiedDate":"2024-02-14"},{"lineNumber":57,"author":{"gitId":"ChrysanthemumT"},"content":"        this.selectedItem \u003d selectedItem;","lastModifiedDate":"2024-02-14"},{"lineNumber":58,"author":{"gitId":"ChrysanthemumT"},"content":"        this.priority \u003d p;","lastModifiedDate":"2024-02-14"},{"lineNumber":59,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":60,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":61,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"ChrysanthemumT"},"content":"     * Gets the command associated with the token.","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"ChrysanthemumT"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"ChrysanthemumT"},"content":"     * @return The command associated with the token.","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"ChrysanthemumT"},"content":"    public Command getCmd() {","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"ChrysanthemumT"},"content":"        return this.cmd;","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"ChrysanthemumT"},"content":"     * Gets the index of the selected item associated with the token.","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"ChrysanthemumT"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"ChrysanthemumT"},"content":"     * @return The index of the selected item.","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"ChrysanthemumT"},"content":"    public int getSelectedItem() {","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"ChrysanthemumT"},"content":"        return this.selectedItem;","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"ChrysanthemumT"},"content":"     * Gets the task associated with the token.","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"ChrysanthemumT"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"ChrysanthemumT"},"content":"     * @return The task associated with the token.","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"ChrysanthemumT"},"content":"    public Task getTask() {","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"ChrysanthemumT"},"content":"        return this.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"ChrysanthemumT"},"content":"     * Sets the command of the token as \"SAVED.\"","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"ChrysanthemumT"},"content":"     * This is used to indicate that the associated task has been successfully saved.","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"ChrysanthemumT"},"content":"    public void setAsSaved() {","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"ChrysanthemumT"},"content":"        this.cmd \u003d Command.SAVED;","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"ChrysanthemumT"},"content":"     * Sets the search key associated with the token.","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"ChrysanthemumT"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":99,"author":{"gitId":"ChrysanthemumT"},"content":"     * @param string The search key to be set.","lastModifiedDate":"2024-02-01"},{"lineNumber":100,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":101,"author":{"gitId":"ChrysanthemumT"},"content":"    public void setSearchKey(String string) {","lastModifiedDate":"2024-02-01"},{"lineNumber":102,"author":{"gitId":"ChrysanthemumT"},"content":"        this.searchKey \u003d string;","lastModifiedDate":"2024-02-01"},{"lineNumber":103,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":104,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":105,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":106,"author":{"gitId":"ChrysanthemumT"},"content":"     * Gets the search key associated with the token.","lastModifiedDate":"2024-02-01"},{"lineNumber":107,"author":{"gitId":"ChrysanthemumT"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":108,"author":{"gitId":"ChrysanthemumT"},"content":"     * @return The search key associated with the token.","lastModifiedDate":"2024-02-01"},{"lineNumber":109,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":110,"author":{"gitId":"ChrysanthemumT"},"content":"    public String getSearchKey() {","lastModifiedDate":"2024-02-01"},{"lineNumber":111,"author":{"gitId":"ChrysanthemumT"},"content":"        return this.searchKey;","lastModifiedDate":"2024-02-01"},{"lineNumber":112,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":113,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":114,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":115,"author":{"gitId":"ChrysanthemumT"},"content":"     * Returns the priority associated with this object.","lastModifiedDate":"2024-02-20"},{"lineNumber":116,"author":{"gitId":"ChrysanthemumT"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":117,"author":{"gitId":"ChrysanthemumT"},"content":"     * @return the priority associated with this object","lastModifiedDate":"2024-02-20"},{"lineNumber":118,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":119,"author":{"gitId":"ChrysanthemumT"},"content":"    public Priority getPriority() {","lastModifiedDate":"2024-02-14"},{"lineNumber":120,"author":{"gitId":"ChrysanthemumT"},"content":"        return this.priority;","lastModifiedDate":"2024-02-14"},{"lineNumber":121,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":122,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":123,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":124,"author":{"gitId":"ChrysanthemumT"},"content":"     * Sets the priority associated with this object.","lastModifiedDate":"2024-02-20"},{"lineNumber":125,"author":{"gitId":"ChrysanthemumT"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":126,"author":{"gitId":"ChrysanthemumT"},"content":"     * @param priority the priority to set","lastModifiedDate":"2024-02-20"},{"lineNumber":127,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":128,"author":{"gitId":"ChrysanthemumT"},"content":"    public void setPriority(Priority priority) {","lastModifiedDate":"2024-02-14"},{"lineNumber":129,"author":{"gitId":"ChrysanthemumT"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2024-02-14"},{"lineNumber":130,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":131,"author":{"gitId":"ChrysanthemumT"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"ChrysanthemumT":131}},{"path":"src/main/java/duke/responses/Responses.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChrysanthemumT"},"content":"package duke.responses;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"ChrysanthemumT"},"content":"import duke.exceptions.ListOutOfBoundsException;","lastModifiedDate":"2024-02-20"},{"lineNumber":4,"author":{"gitId":"ChrysanthemumT"},"content":"import duke.parser.Priority;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"ChrysanthemumT"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"ChrysanthemumT"},"content":"import duke.storage.Task;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"ChrysanthemumT"},"content":"import duke.storage.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"ChrysanthemumT"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"ChrysanthemumT"},"content":" * The Responses class handles interactions with the user through the command-line interface.","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"ChrysanthemumT"},"content":" * It provides methods to display greetings, goodbyes, process user input, and perform various tasks.","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"ChrysanthemumT"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"ChrysanthemumT"},"content":"public class Responses {","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"ChrysanthemumT"},"content":"    private static final String lines \u003d \"    ____________________________________________________________\";","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"ChrysanthemumT"},"content":"    private static final String name \u003d \"Wang\";","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"ChrysanthemumT"},"content":"    private final TaskList taskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"ChrysanthemumT"},"content":"     * Constructs a Responses object and initializes the associated TaskList.","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"ChrysanthemumT"},"content":"    public Responses() {","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"ChrysanthemumT"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"ChrysanthemumT"},"content":"        Storage.start(taskList);","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"ChrysanthemumT"},"content":"     * Returns a greeting message when the Duke program starts.","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"ChrysanthemumT"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"ChrysanthemumT"},"content":"     * @return A string containing the greeting message.","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"ChrysanthemumT"},"content":"    public static String greeting() {","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"ChrysanthemumT"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"ChrysanthemumT"},"content":"        stringBuilder.append(String.format(\"    Hello! I\u0027m %s\\n\", name));","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"ChrysanthemumT"},"content":"        stringBuilder.append(\"    What can I do for you?\");","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"ChrysanthemumT"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":42,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":43,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"ChrysanthemumT"},"content":"     * Returns a goodbye message when the Duke program ends.","lastModifiedDate":"2024-02-08"},{"lineNumber":45,"author":{"gitId":"ChrysanthemumT"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":46,"author":{"gitId":"ChrysanthemumT"},"content":"     * @return A string containing the goodbye message.","lastModifiedDate":"2024-02-08"},{"lineNumber":47,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"ChrysanthemumT"},"content":"    public static String goodbye() {","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"ChrysanthemumT"},"content":"        return \"    Bye. Hope to see you again soon!\";","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":51,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":52,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"ChrysanthemumT"},"content":"     * Adds a task to the TaskList and displays a confirmation message.","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"ChrysanthemumT"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"ChrysanthemumT"},"content":"     * @param task The task to be added.","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"ChrysanthemumT"},"content":"     * @return A string containing the confirmation message.","lastModifiedDate":"2024-02-08"},{"lineNumber":58,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"ChrysanthemumT"},"content":"    public String addItem(Task task) {","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"ChrysanthemumT"},"content":"        this.taskList.add(task);","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"ChrysanthemumT"},"content":"        return \"    \" + \"Got it. I\u0027ve added this task:\\n\" + \"      \" + task + \"\\n\" + \"\"","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"ChrysanthemumT"},"content":"                + String.format(\"    Now you have %d tasks in the list.\", this.taskList.taskLength());","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":64,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":65,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"ChrysanthemumT"},"content":"     * Marks a task as done and displays a confirmation message.","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"ChrysanthemumT"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"ChrysanthemumT"},"content":"     * @param input The index of the task to be marked as done.","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"ChrysanthemumT"},"content":"     * @return A string containing the confirmation message.","lastModifiedDate":"2024-02-08"},{"lineNumber":70,"author":{"gitId":"ChrysanthemumT"},"content":"     * @throws ListOutOfBoundsException If the provided index is out of bounds.","lastModifiedDate":"2024-02-20"},{"lineNumber":71,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"ChrysanthemumT"},"content":"    public String markTaskUI(int input) throws ListOutOfBoundsException {","lastModifiedDate":"2024-02-20"},{"lineNumber":73,"author":{"gitId":"ChrysanthemumT"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2024-02-07"},{"lineNumber":74,"author":{"gitId":"ChrysanthemumT"},"content":"        if (input \u003c 0 || input \u003e this.taskList.taskLength() - 1) {","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"ChrysanthemumT"},"content":"            throw new ListOutOfBoundsException(String.format(\"%d\", this.taskList.taskLength()));","lastModifiedDate":"2024-02-20"},{"lineNumber":76,"author":{"gitId":"ChrysanthemumT"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":77,"author":{"gitId":"ChrysanthemumT"},"content":"        stringBuilder.append(\"    Nice! I\u0027ve marked this task as done:\\n\");","lastModifiedDate":"2024-02-20"},{"lineNumber":78,"author":{"gitId":"ChrysanthemumT"},"content":"        stringBuilder.append(this.taskList.markTask(input));","lastModifiedDate":"2024-02-07"},{"lineNumber":79,"author":{"gitId":"ChrysanthemumT"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2024-02-07"},{"lineNumber":80,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":81,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"ChrysanthemumT"},"content":"     * Marks a task as not done and displays a confirmation message.","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"ChrysanthemumT"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"ChrysanthemumT"},"content":"     * @param input The index of the task to be marked as not done.","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"ChrysanthemumT"},"content":"     * @return A string containing the confirmation message.","lastModifiedDate":"2024-02-08"},{"lineNumber":87,"author":{"gitId":"ChrysanthemumT"},"content":"     * @throws ListOutOfBoundsException If the provided index is out of bounds.","lastModifiedDate":"2024-02-20"},{"lineNumber":88,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"ChrysanthemumT"},"content":"    public String unMarkTask(int input) throws ListOutOfBoundsException {","lastModifiedDate":"2024-02-20"},{"lineNumber":90,"author":{"gitId":"ChrysanthemumT"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2024-02-07"},{"lineNumber":91,"author":{"gitId":"ChrysanthemumT"},"content":"        if (input \u003c 0 || input \u003e this.taskList.taskLength() - 1) {","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"ChrysanthemumT"},"content":"            throw new ListOutOfBoundsException(String.format(\"%d\", this.taskList.taskLength()));","lastModifiedDate":"2024-02-20"},{"lineNumber":93,"author":{"gitId":"ChrysanthemumT"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":94,"author":{"gitId":"ChrysanthemumT"},"content":"        stringBuilder.append(\"    OK, I\u0027ve marked this task as not done yet:\\n\");","lastModifiedDate":"2024-02-08"},{"lineNumber":95,"author":{"gitId":"ChrysanthemumT"},"content":"        stringBuilder.append(this.taskList.unMarkTask(input));","lastModifiedDate":"2024-02-07"},{"lineNumber":96,"author":{"gitId":"ChrysanthemumT"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2024-02-07"},{"lineNumber":97,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":98,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":99,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":100,"author":{"gitId":"ChrysanthemumT"},"content":"     * Updates the priority of a task at the specified index with the given priority.","lastModifiedDate":"2024-02-20"},{"lineNumber":101,"author":{"gitId":"ChrysanthemumT"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":102,"author":{"gitId":"ChrysanthemumT"},"content":"     * @param input    the index of the task to update","lastModifiedDate":"2024-02-20"},{"lineNumber":103,"author":{"gitId":"ChrysanthemumT"},"content":"     * @param priority the new priority to set","lastModifiedDate":"2024-02-20"},{"lineNumber":104,"author":{"gitId":"ChrysanthemumT"},"content":"     * @return a string indicating the successful update","lastModifiedDate":"2024-02-20"},{"lineNumber":105,"author":{"gitId":"ChrysanthemumT"},"content":"     * @throws ListOutOfBoundsException if the input index is out of bounds","lastModifiedDate":"2024-02-20"},{"lineNumber":106,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":107,"author":{"gitId":"ChrysanthemumT"},"content":"    public String updatePriority(int input, Priority priority) throws ListOutOfBoundsException {","lastModifiedDate":"2024-02-20"},{"lineNumber":108,"author":{"gitId":"ChrysanthemumT"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2024-02-14"},{"lineNumber":109,"author":{"gitId":"ChrysanthemumT"},"content":"        if (input \u003c 0 || input \u003e this.taskList.taskLength() - 1) {","lastModifiedDate":"2024-02-14"},{"lineNumber":110,"author":{"gitId":"ChrysanthemumT"},"content":"            throw new ListOutOfBoundsException(String.format(\"%d\", this.taskList.taskLength()));","lastModifiedDate":"2024-02-20"},{"lineNumber":111,"author":{"gitId":"ChrysanthemumT"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":112,"author":{"gitId":"ChrysanthemumT"},"content":"        stringBuilder.append(\"    OK, I\u0027ve updated this task\u0027s Priority:\\n\");","lastModifiedDate":"2024-02-14"},{"lineNumber":113,"author":{"gitId":"ChrysanthemumT"},"content":"        stringBuilder.append(this.taskList.updatePriority(input, priority));","lastModifiedDate":"2024-02-14"},{"lineNumber":114,"author":{"gitId":"ChrysanthemumT"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2024-02-14"},{"lineNumber":115,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":116,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":117,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":118,"author":{"gitId":"ChrysanthemumT"},"content":"     * Removes a task from the TaskList and returns a confirmation message.","lastModifiedDate":"2024-02-08"},{"lineNumber":119,"author":{"gitId":"ChrysanthemumT"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":120,"author":{"gitId":"ChrysanthemumT"},"content":"     * @param input The index of the task to be removed.","lastModifiedDate":"2024-02-01"},{"lineNumber":121,"author":{"gitId":"ChrysanthemumT"},"content":"     * @return A string containing the confirmation message.","lastModifiedDate":"2024-02-08"},{"lineNumber":122,"author":{"gitId":"ChrysanthemumT"},"content":"     * @throws ListOutOfBoundsException If the provided index is out of bounds.","lastModifiedDate":"2024-02-20"},{"lineNumber":123,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":124,"author":{"gitId":"ChrysanthemumT"},"content":"    public String removeTask(int input) throws ListOutOfBoundsException {","lastModifiedDate":"2024-02-20"},{"lineNumber":125,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":126,"author":{"gitId":"ChrysanthemumT"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2024-02-07"},{"lineNumber":127,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":128,"author":{"gitId":"ChrysanthemumT"},"content":"        if (input \u003c 0 || input \u003e this.taskList.taskLength() - 1) {","lastModifiedDate":"2024-02-01"},{"lineNumber":129,"author":{"gitId":"ChrysanthemumT"},"content":"            throw new ListOutOfBoundsException(String.format(\"%d\", this.taskList.taskLength()));","lastModifiedDate":"2024-02-20"},{"lineNumber":130,"author":{"gitId":"ChrysanthemumT"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":131,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":132,"author":{"gitId":"ChrysanthemumT"},"content":"        stringBuilder.append(\"    Noted. I\u0027ve removed this task:\\n\");","lastModifiedDate":"2024-02-08"},{"lineNumber":133,"author":{"gitId":"ChrysanthemumT"},"content":"        stringBuilder.append(this.taskList.remove(input));","lastModifiedDate":"2024-02-07"},{"lineNumber":134,"author":{"gitId":"ChrysanthemumT"},"content":"        stringBuilder.append(String.format(\"\\n    Now you have %d tasks in the list.\", this.taskList.taskLength()));","lastModifiedDate":"2024-02-08"},{"lineNumber":135,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":136,"author":{"gitId":"ChrysanthemumT"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2024-02-07"},{"lineNumber":137,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":138,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":139,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":140,"author":{"gitId":"ChrysanthemumT"},"content":"     * Returns the tasks matching the specified key using the taskList\u0027s find method","lastModifiedDate":"2024-02-08"},{"lineNumber":141,"author":{"gitId":"ChrysanthemumT"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":142,"author":{"gitId":"ChrysanthemumT"},"content":"     * @param key The keyword or item to search for in the tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":143,"author":{"gitId":"ChrysanthemumT"},"content":"     * @return A string containing the tasks matching the specified key.","lastModifiedDate":"2024-02-08"},{"lineNumber":144,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":145,"author":{"gitId":"ChrysanthemumT"},"content":"    public String findTaskUI(String key) {","lastModifiedDate":"2024-02-07"},{"lineNumber":146,"author":{"gitId":"ChrysanthemumT"},"content":"        return this.taskList.find(key);","lastModifiedDate":"2024-02-07"},{"lineNumber":147,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":148,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":149,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":150,"author":{"gitId":"ChrysanthemumT"},"content":"     * Returns the list of tasks in the TaskList.","lastModifiedDate":"2024-02-08"},{"lineNumber":151,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":152,"author":{"gitId":"ChrysanthemumT"},"content":"    public String listItems() {","lastModifiedDate":"2024-02-07"},{"lineNumber":153,"author":{"gitId":"ChrysanthemumT"},"content":"        return taskList.toString();","lastModifiedDate":"2024-02-07"},{"lineNumber":154,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":155,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":156,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":157,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":158,"author":{"gitId":"ChrysanthemumT"},"content":"     * Returns an error message.","lastModifiedDate":"2024-02-08"},{"lineNumber":159,"author":{"gitId":"ChrysanthemumT"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":160,"author":{"gitId":"ChrysanthemumT"},"content":"     * @param error The error message to be displayed.","lastModifiedDate":"2024-02-01"},{"lineNumber":161,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":162,"author":{"gitId":"ChrysanthemumT"},"content":"    public static String error(String error) {","lastModifiedDate":"2024-02-07"},{"lineNumber":163,"author":{"gitId":"ChrysanthemumT"},"content":"        return error;","lastModifiedDate":"2024-02-07"},{"lineNumber":164,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":165,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":166,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":167,"author":{"gitId":"ChrysanthemumT"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"ChrysanthemumT":167}},{"path":"src/main/java/duke/storage/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChrysanthemumT"},"content":"package duke.storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"ChrysanthemumT"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"ChrysanthemumT"},"content":" * The Deadlines class represents a deadline task in the Duke task manager, which is a subtype of the Task class.","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"ChrysanthemumT"},"content":" * It inherits properties and methods from the Task class and provides a specific implementation for deadline tasks","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"ChrysanthemumT"},"content":" * with date and time details.","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"ChrysanthemumT"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"ChrysanthemumT"},"content":"public class Deadlines extends Task {","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"ChrysanthemumT"},"content":"    protected String byDate \u003d \"\";","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"ChrysanthemumT"},"content":"    protected String byTime \u003d \"\";","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"ChrysanthemumT"},"content":"     * Constructs a Deadlines object with the specified original command, description, and date-time details.","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"ChrysanthemumT"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"ChrysanthemumT"},"content":"     * @param originalCommand The original command used to create the deadline task.","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"ChrysanthemumT"},"content":"     * @param description     The description of the deadline task.","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"ChrysanthemumT"},"content":"     * @param dateTimeBy      The deadline date and time in string format.","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"ChrysanthemumT"},"content":"    public Deadlines(String originalCommand, String description, String dateTimeBy) {","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"ChrysanthemumT"},"content":"        super(originalCommand, description);","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"ChrysanthemumT"},"content":"        String[] splitBy \u003d dateTimeBy.split(\"-\");","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"ChrysanthemumT"},"content":"        int lenBy \u003d splitBy.length;","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"ChrysanthemumT"},"content":"        this.byDate \u003d splitBy[0];","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"ChrysanthemumT"},"content":"        if (lenBy \u003e 1) {","lastModifiedDate":"2024-02-13"},{"lineNumber":28,"author":{"gitId":"ChrysanthemumT"},"content":"            if (splitBy[1] !\u003d null) {","lastModifiedDate":"2024-02-13"},{"lineNumber":29,"author":{"gitId":"ChrysanthemumT"},"content":"                this.byTime \u003d splitBy[1];","lastModifiedDate":"2024-02-13"},{"lineNumber":30,"author":{"gitId":"ChrysanthemumT"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"ChrysanthemumT"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":33,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"ChrysanthemumT"},"content":"     * Returns a string representation of the deadline task, including its specific type identifier, the result of the","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"ChrysanthemumT"},"content":"     * superclass\u0027s toString method, and date-time details.","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"ChrysanthemumT"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"ChrysanthemumT"},"content":"     * @return A string representation of the deadline task.","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"ChrysanthemumT"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"ChrysanthemumT"},"content":"    public String toString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"ChrysanthemumT"},"content":"        return \"[D]\" + super.toString() + \"\\n ( by: \"","lastModifiedDate":"2024-02-13"},{"lineNumber":44,"author":{"gitId":"ChrysanthemumT"},"content":"                + this.byDate","lastModifiedDate":"2024-02-13"},{"lineNumber":45,"author":{"gitId":"ChrysanthemumT"},"content":"                + \" \"","lastModifiedDate":"2024-02-13"},{"lineNumber":46,"author":{"gitId":"ChrysanthemumT"},"content":"                + (this.byTime.equals(\"null\") ? \"\" : this.byTime)","lastModifiedDate":"2024-02-14"},{"lineNumber":47,"author":{"gitId":"ChrysanthemumT"},"content":"                + \")\";","lastModifiedDate":"2024-02-13"},{"lineNumber":48,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"ChrysanthemumT"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"ChrysanthemumT":49}},{"path":"src/main/java/duke/storage/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChrysanthemumT"},"content":"package duke.storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"ChrysanthemumT"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"ChrysanthemumT"},"content":" * The Events class represents an event task in the Duke task manager, which is a subtype of the Task class.","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"ChrysanthemumT"},"content":" * It inherits properties and methods from the Task class and provides a specific implementation for event tasks","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"ChrysanthemumT"},"content":" * with date and time details.","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"ChrysanthemumT"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"ChrysanthemumT"},"content":"public class Events extends Task {","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"ChrysanthemumT"},"content":"    protected String fromDate \u003d \"\";","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"ChrysanthemumT"},"content":"    protected String fromTime \u003d \"\";","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"ChrysanthemumT"},"content":"    protected String toDate \u003d \"\";","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"ChrysanthemumT"},"content":"    protected String toTime \u003d \"\";","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"ChrysanthemumT"},"content":"     * Constructs an Events object with the specified original command, description, and date-time details.","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"ChrysanthemumT"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"ChrysanthemumT"},"content":"     * @param originalCommand The original command used to create the event task.","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"ChrysanthemumT"},"content":"     * @param description     The description of the event task.","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"ChrysanthemumT"},"content":"     * @param dateTimeFrom    The starting date and time of the event in string format.","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"ChrysanthemumT"},"content":"     * @param dateTimeTo      The ending date and time of the event in string format.","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"ChrysanthemumT"},"content":"    public Events(String originalCommand, String description, String dateTimeFrom, String dateTimeTo) {","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"ChrysanthemumT"},"content":"        super(originalCommand, description);","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"ChrysanthemumT"},"content":"        String[] splitFrom \u003d dateTimeFrom.split(\"-\");","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"ChrysanthemumT"},"content":"        String[] splitTo \u003d dateTimeTo.split(\"-\");","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"ChrysanthemumT"},"content":"        this.fromDate \u003d splitFrom[0];","lastModifiedDate":"2024-02-13"},{"lineNumber":29,"author":{"gitId":"ChrysanthemumT"},"content":"        this.toDate \u003d splitTo[0];","lastModifiedDate":"2024-02-13"},{"lineNumber":30,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"ChrysanthemumT"},"content":"        int lenFrom \u003d splitFrom.length;","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"ChrysanthemumT"},"content":"        int lenTo \u003d splitTo.length;","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"ChrysanthemumT"},"content":"        if (lenFrom \u003e 1) {","lastModifiedDate":"2024-02-13"},{"lineNumber":35,"author":{"gitId":"ChrysanthemumT"},"content":"            this.fromTime \u003d splitFrom[1];","lastModifiedDate":"2024-02-13"},{"lineNumber":36,"author":{"gitId":"ChrysanthemumT"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"ChrysanthemumT"},"content":"        if (lenTo \u003e 1) {","lastModifiedDate":"2024-02-13"},{"lineNumber":38,"author":{"gitId":"ChrysanthemumT"},"content":"            this.toTime \u003d splitTo[1];","lastModifiedDate":"2024-02-13"},{"lineNumber":39,"author":{"gitId":"ChrysanthemumT"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"ChrysanthemumT"},"content":"     * Returns a string representation of the event task, including its specific type identifier, the result of the","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"ChrysanthemumT"},"content":"     * superclass\u0027s toString method, and date-time details.","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"ChrysanthemumT"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"ChrysanthemumT"},"content":"     * @return A string representation of the event task.","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"ChrysanthemumT"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"ChrysanthemumT"},"content":"    public String toString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"ChrysanthemumT"},"content":"        return \"[E]\" + super.toString() + \"\\n (from: \"","lastModifiedDate":"2024-02-13"},{"lineNumber":53,"author":{"gitId":"ChrysanthemumT"},"content":"                + this.fromDate","lastModifiedDate":"2024-02-13"},{"lineNumber":54,"author":{"gitId":"ChrysanthemumT"},"content":"                + \" \"","lastModifiedDate":"2024-02-13"},{"lineNumber":55,"author":{"gitId":"ChrysanthemumT"},"content":"                + (this.fromTime.equals(\"null\") ? \"\" : this.fromTime)","lastModifiedDate":"2024-02-14"},{"lineNumber":56,"author":{"gitId":"ChrysanthemumT"},"content":"                + \" to: \"","lastModifiedDate":"2024-02-13"},{"lineNumber":57,"author":{"gitId":"ChrysanthemumT"},"content":"                + this.toDate","lastModifiedDate":"2024-02-13"},{"lineNumber":58,"author":{"gitId":"ChrysanthemumT"},"content":"                + \" \"","lastModifiedDate":"2024-02-13"},{"lineNumber":59,"author":{"gitId":"ChrysanthemumT"},"content":"                + (this.toTime.equals(\"null\") ? \"\" : this.toTime)","lastModifiedDate":"2024-02-14"},{"lineNumber":60,"author":{"gitId":"ChrysanthemumT"},"content":"                + \")\";","lastModifiedDate":"2024-02-13"},{"lineNumber":61,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"ChrysanthemumT"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"ChrysanthemumT":62}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChrysanthemumT"},"content":"package duke.storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"ChrysanthemumT"},"content":"import java.io.File;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"ChrysanthemumT"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"ChrysanthemumT"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"ChrysanthemumT"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"ChrysanthemumT"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"ChrysanthemumT"},"content":"import duke.parser.Parser;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"ChrysanthemumT"},"content":"import duke.parser.Token;","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"ChrysanthemumT"},"content":"import duke.responses.Responses;","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"ChrysanthemumT"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"ChrysanthemumT"},"content":" * The Storage class is responsible for loading tasks from and saving tasks to a file.","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"ChrysanthemumT"},"content":" * It interacts with the TaskList, Parser, and UI classes to manage the data persistence of tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"ChrysanthemumT"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"ChrysanthemumT"},"content":"public class Storage {","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"ChrysanthemumT"},"content":"     * Initializes the storage by loading tasks from a save file into the provided TaskList.","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"ChrysanthemumT"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"ChrysanthemumT"},"content":"     * @param taskList The TaskList object to be initialized with tasks from the save file.","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"ChrysanthemumT"},"content":"    public static void start(TaskList taskList) {","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"ChrysanthemumT"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"ChrysanthemumT"},"content":"            File file \u003d new File(\"./src/main/java/duke/storage/savefile.txt\");","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"ChrysanthemumT"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"ChrysanthemumT"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"ChrysanthemumT"},"content":"                Parser parser \u003d new Parser();","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"ChrysanthemumT"},"content":"                parser.feed(scanner.nextLine());","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"ChrysanthemumT"},"content":"                Token output \u003d null;","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"ChrysanthemumT"},"content":"                try {","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"ChrysanthemumT"},"content":"                    output \u003d parser.parse();","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"ChrysanthemumT"},"content":"                    taskList.loadFromSave(output.getTask());","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"ChrysanthemumT"},"content":"                } catch (Exception e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"ChrysanthemumT"},"content":"                    Responses.error(e.getMessage());","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"ChrysanthemumT"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"ChrysanthemumT"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":44,"author":{"gitId":"ChrysanthemumT"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"ChrysanthemumT"},"content":"            Responses.error(\"No save file\");","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"ChrysanthemumT"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":47,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":48,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":49,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"ChrysanthemumT"},"content":"     * Saves the provided input string to a save file.","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"ChrysanthemumT"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"ChrysanthemumT"},"content":"     * @param input The input string representing the tasks to be saved.","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"ChrysanthemumT"},"content":"    public static void save(String input) {","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"ChrysanthemumT"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"ChrysanthemumT"},"content":"            FileWriter fw \u003d new FileWriter(\"./src/main/java/duke/storage/savefile.txt\");","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"ChrysanthemumT"},"content":"            fw.write(input);","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"ChrysanthemumT"},"content":"            fw.close();","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"ChrysanthemumT"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"ChrysanthemumT"},"content":"            Responses.error(\"Missing save file\");","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"ChrysanthemumT"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"ChrysanthemumT"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"ChrysanthemumT":63}},{"path":"src/main/java/duke/storage/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChrysanthemumT"},"content":"package duke.storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"ChrysanthemumT"},"content":"import duke.parser.Priority;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"ChrysanthemumT"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"ChrysanthemumT"},"content":" * The Task class represents a task in the Duke task manager.","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"ChrysanthemumT"},"content":" * It stores information such as the task\u0027s description, completion status, and the original command","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"ChrysanthemumT"},"content":" * used to create the task.","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"ChrysanthemumT"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"ChrysanthemumT"},"content":"public class Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"ChrysanthemumT"},"content":"    protected String description;","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"ChrysanthemumT"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"ChrysanthemumT"},"content":"    protected String originalCommand;","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"ChrysanthemumT"},"content":"    protected Priority priority;","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"ChrysanthemumT"},"content":"     * Constructs a Task object with the specified original command and description.","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"ChrysanthemumT"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"ChrysanthemumT"},"content":"     * @param originalCommand The original command used to create the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"ChrysanthemumT"},"content":"     * @param description     The description of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"ChrysanthemumT"},"content":"    public Task(String originalCommand, String description) {","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"ChrysanthemumT"},"content":"        this.originalCommand \u003d originalCommand;","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"ChrysanthemumT"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"ChrysanthemumT"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"ChrysanthemumT"},"content":"        this.priority \u003d Priority.NONE;","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":29,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":30,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"ChrysanthemumT"},"content":"     * Returns the status icon of the task (\u0027X\u0027 if done, \u0027 \u0027 if not done).","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"ChrysanthemumT"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"ChrysanthemumT"},"content":"     * @return The status icon of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"ChrysanthemumT"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-23"},{"lineNumber":36,"author":{"gitId":"ChrysanthemumT"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-01-23"},{"lineNumber":37,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":38,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":39,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"ChrysanthemumT"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"ChrysanthemumT"},"content":"    public void mark() {","lastModifiedDate":"2024-01-23"},{"lineNumber":43,"author":{"gitId":"ChrysanthemumT"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-23"},{"lineNumber":44,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":45,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":46,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"ChrysanthemumT"},"content":"     * Marks the task as not done.","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"ChrysanthemumT"},"content":"    public void unMark() {","lastModifiedDate":"2024-01-23"},{"lineNumber":50,"author":{"gitId":"ChrysanthemumT"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-23"},{"lineNumber":51,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":52,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":53,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"ChrysanthemumT"},"content":"     * Gets the original command used to create the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"ChrysanthemumT"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"ChrysanthemumT"},"content":"     * @return The original command.","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"ChrysanthemumT"},"content":"    public String getOriginalCommand() {","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"ChrysanthemumT"},"content":"        return this.originalCommand;","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"ChrysanthemumT"},"content":"     * Gets the description of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"ChrysanthemumT"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"ChrysanthemumT"},"content":"     * @return The description of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"ChrysanthemumT"},"content":"    public String getDescription() {","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"ChrysanthemumT"},"content":"        return this.description;","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":72,"author":{"gitId":"ChrysanthemumT"},"content":"     * Retrieves the priority of the task as a string representation.","lastModifiedDate":"2024-02-20"},{"lineNumber":73,"author":{"gitId":"ChrysanthemumT"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":74,"author":{"gitId":"ChrysanthemumT"},"content":"     * @return the priority of the task as a string (\"HIGH!!\" for HIGH, \"LOW\" for LOW, \"\" for NONE)","lastModifiedDate":"2024-02-20"},{"lineNumber":75,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":76,"author":{"gitId":"ChrysanthemumT"},"content":"    public String getPriority() {","lastModifiedDate":"2024-02-14"},{"lineNumber":77,"author":{"gitId":"ChrysanthemumT"},"content":"        if (this.priority.equals(Priority.NONE)) {","lastModifiedDate":"2024-02-14"},{"lineNumber":78,"author":{"gitId":"ChrysanthemumT"},"content":"            return \"\";","lastModifiedDate":"2024-02-14"},{"lineNumber":79,"author":{"gitId":"ChrysanthemumT"},"content":"        } else if (this.priority.equals(Priority.HIGH)) {","lastModifiedDate":"2024-02-14"},{"lineNumber":80,"author":{"gitId":"ChrysanthemumT"},"content":"            return \"HIGH!!\";","lastModifiedDate":"2024-02-14"},{"lineNumber":81,"author":{"gitId":"ChrysanthemumT"},"content":"        } else {","lastModifiedDate":"2024-02-14"},{"lineNumber":82,"author":{"gitId":"ChrysanthemumT"},"content":"            return \"LOW\";","lastModifiedDate":"2024-02-14"},{"lineNumber":83,"author":{"gitId":"ChrysanthemumT"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":84,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":85,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":86,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":87,"author":{"gitId":"ChrysanthemumT"},"content":"     * Sets the priority of the task.","lastModifiedDate":"2024-02-20"},{"lineNumber":88,"author":{"gitId":"ChrysanthemumT"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":89,"author":{"gitId":"ChrysanthemumT"},"content":"     * @param p the priority to set","lastModifiedDate":"2024-02-20"},{"lineNumber":90,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":91,"author":{"gitId":"ChrysanthemumT"},"content":"    public void setPriority(Priority p) {","lastModifiedDate":"2024-02-14"},{"lineNumber":92,"author":{"gitId":"ChrysanthemumT"},"content":"        this.priority \u003d p;","lastModifiedDate":"2024-02-14"},{"lineNumber":93,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":94,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":95,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"ChrysanthemumT"},"content":"     * Returns a string representation of the task, including its status icon and description.","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"ChrysanthemumT"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"ChrysanthemumT"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":99,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":100,"author":{"gitId":"ChrysanthemumT"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":101,"author":{"gitId":"ChrysanthemumT"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":102,"author":{"gitId":"ChrysanthemumT"},"content":"        return String.format(\"[%s] \", getStatusIcon())","lastModifiedDate":"2024-02-14"},{"lineNumber":103,"author":{"gitId":"ChrysanthemumT"},"content":"                + description","lastModifiedDate":"2024-02-14"},{"lineNumber":104,"author":{"gitId":"ChrysanthemumT"},"content":"                + \" \"","lastModifiedDate":"2024-02-14"},{"lineNumber":105,"author":{"gitId":"ChrysanthemumT"},"content":"                + getPriority();","lastModifiedDate":"2024-02-14"},{"lineNumber":106,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":107,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":108,"author":{"gitId":"ChrysanthemumT"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"ChrysanthemumT":108}},{"path":"src/main/java/duke/storage/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChrysanthemumT"},"content":"package duke.storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"ChrysanthemumT"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-20"},{"lineNumber":4,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":5,"author":{"gitId":"ChrysanthemumT"},"content":"import duke.parser.Priority;","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"ChrysanthemumT"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"ChrysanthemumT"},"content":" * The TaskList class represents a list of tasks in the Duke task manager.","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"ChrysanthemumT"},"content":" * It manages operations such as adding, marking, unmarking, and removing tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"ChrysanthemumT"},"content":" * The class also provides methods for obtaining the length of the task list and generating a formatted","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"ChrysanthemumT"},"content":" * string representation of the tasks.","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"ChrysanthemumT"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"ChrysanthemumT"},"content":"public class TaskList {","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"ChrysanthemumT"},"content":"    private static final String lines \u003d \"    ____________________________________________________________\";","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"ChrysanthemumT"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"ChrysanthemumT"},"content":"     * Constructs a TaskList object with an empty list of tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"ChrysanthemumT"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"ChrysanthemumT"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"ChrysanthemumT"},"content":"     * Adds a task to the task list and saves the updated list to a file.","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"ChrysanthemumT"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"ChrysanthemumT"},"content":"     * @param task The task to be added.","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"ChrysanthemumT"},"content":"    public void add(Task task) {","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"ChrysanthemumT"},"content":"        this.tasks.add(task);","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"ChrysanthemumT"},"content":"        saveToFile();","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"ChrysanthemumT"},"content":"     * Loads a task from a save file and adds it to the task list.","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"ChrysanthemumT"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"ChrysanthemumT"},"content":"     * @param task The task to be loaded and added.","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"ChrysanthemumT"},"content":"    public void loadFromSave(Task task) {","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"ChrysanthemumT"},"content":"        this.tasks.add(task);","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"ChrysanthemumT"},"content":"     * Marks a task at the specified index as done and saves the updated list to a file.","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"ChrysanthemumT"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"ChrysanthemumT"},"content":"     * @param number The index of the task to be marked.","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"ChrysanthemumT"},"content":"    public String markTask(int number) {","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"ChrysanthemumT"},"content":"        this.tasks.get(number).mark();","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"ChrysanthemumT"},"content":"        saveToFile();","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"ChrysanthemumT"},"content":"        return \"      \" + this.tasks.get(number).toString();","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"ChrysanthemumT"},"content":"     * Marks a task at the specified index as not done and saves the updated list to a file.","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"ChrysanthemumT"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"ChrysanthemumT"},"content":"     * @param number The index of the task to be unmarked.","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"ChrysanthemumT"},"content":"    public String unMarkTask(int number) {","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"ChrysanthemumT"},"content":"        this.tasks.get(number).unMark();","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"ChrysanthemumT"},"content":"        saveToFile();","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"ChrysanthemumT"},"content":"        return \"      \" + this.tasks.get(number).toString();","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"ChrysanthemumT"},"content":"     * Removes a task at the specified index and saves the updated list to a file.","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"ChrysanthemumT"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"ChrysanthemumT"},"content":"     * @param number The index of the task to be removed.","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"ChrysanthemumT"},"content":"    public String remove(int number) {","lastModifiedDate":"2024-02-07"},{"lineNumber":72,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":73,"author":{"gitId":"ChrysanthemumT"},"content":"        String toPrint \u003d \"      \" + this.tasks.get(number).toString();","lastModifiedDate":"2024-02-07"},{"lineNumber":74,"author":{"gitId":"ChrysanthemumT"},"content":"        this.tasks.remove(number);","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"ChrysanthemumT"},"content":"        saveToFile();","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":77,"author":{"gitId":"ChrysanthemumT"},"content":"        return toPrint;","lastModifiedDate":"2024-02-07"},{"lineNumber":78,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":81,"author":{"gitId":"ChrysanthemumT"},"content":"     * Updates the priority of the task at the specified index with the given priority,","lastModifiedDate":"2024-02-20"},{"lineNumber":82,"author":{"gitId":"ChrysanthemumT"},"content":"     * then saves the changes to the file.","lastModifiedDate":"2024-02-20"},{"lineNumber":83,"author":{"gitId":"ChrysanthemumT"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":84,"author":{"gitId":"ChrysanthemumT"},"content":"     * @param number   the index of the task to update","lastModifiedDate":"2024-02-20"},{"lineNumber":85,"author":{"gitId":"ChrysanthemumT"},"content":"     * @param priority the new priority to set","lastModifiedDate":"2024-02-20"},{"lineNumber":86,"author":{"gitId":"ChrysanthemumT"},"content":"     * @return a string representation of the updated task","lastModifiedDate":"2024-02-20"},{"lineNumber":87,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":88,"author":{"gitId":"ChrysanthemumT"},"content":"    public String updatePriority(int number, Priority priority) {","lastModifiedDate":"2024-02-14"},{"lineNumber":89,"author":{"gitId":"ChrysanthemumT"},"content":"        this.tasks.get(number).setPriority(priority);","lastModifiedDate":"2024-02-14"},{"lineNumber":90,"author":{"gitId":"ChrysanthemumT"},"content":"        System.out.println(this.tasks.get(number).getPriority());","lastModifiedDate":"2024-02-14"},{"lineNumber":91,"author":{"gitId":"ChrysanthemumT"},"content":"        saveToFile();","lastModifiedDate":"2024-02-14"},{"lineNumber":92,"author":{"gitId":"ChrysanthemumT"},"content":"        return \"      \" + this.tasks.get(number).toString();","lastModifiedDate":"2024-02-14"},{"lineNumber":93,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":94,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":95,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"ChrysanthemumT"},"content":"     * Searches for tasks containing a specified keyword in their descriptions.","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"ChrysanthemumT"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"ChrysanthemumT"},"content":"     * @param key The keyword to search for in task descriptions.","lastModifiedDate":"2024-02-01"},{"lineNumber":99,"author":{"gitId":"ChrysanthemumT"},"content":"     * @return A formatted string representation of tasks that match the search criteria.","lastModifiedDate":"2024-02-01"},{"lineNumber":100,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":101,"author":{"gitId":"ChrysanthemumT"},"content":"    public String find(String key) {","lastModifiedDate":"2024-02-01"},{"lineNumber":102,"author":{"gitId":"ChrysanthemumT"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2024-02-01"},{"lineNumber":103,"author":{"gitId":"ChrysanthemumT"},"content":"        result.append(lines).append(\"\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":104,"author":{"gitId":"ChrysanthemumT"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {","lastModifiedDate":"2024-02-01"},{"lineNumber":105,"author":{"gitId":"ChrysanthemumT"},"content":"            if (this.tasks.get(i - 1).getDescription().toLowerCase()","lastModifiedDate":"2024-02-01"},{"lineNumber":106,"author":{"gitId":"ChrysanthemumT"},"content":"                    .contains(key.toLowerCase())) {","lastModifiedDate":"2024-02-01"},{"lineNumber":107,"author":{"gitId":"ChrysanthemumT"},"content":"                result.append(String.format(\"    %d.\", i)).append(this.tasks.get(i - 1).toString()).append(\"\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":108,"author":{"gitId":"ChrysanthemumT"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":109,"author":{"gitId":"ChrysanthemumT"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":110,"author":{"gitId":"ChrysanthemumT"},"content":"        result.append(lines);","lastModifiedDate":"2024-02-01"},{"lineNumber":111,"author":{"gitId":"ChrysanthemumT"},"content":"        return result.toString();","lastModifiedDate":"2024-02-01"},{"lineNumber":112,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":113,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":114,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":115,"author":{"gitId":"ChrysanthemumT"},"content":"     * Returns the number of tasks in the task list.","lastModifiedDate":"2024-02-01"},{"lineNumber":116,"author":{"gitId":"ChrysanthemumT"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":117,"author":{"gitId":"ChrysanthemumT"},"content":"     * @return The number of tasks in the task list.","lastModifiedDate":"2024-02-01"},{"lineNumber":118,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":119,"author":{"gitId":"ChrysanthemumT"},"content":"    public int taskLength() {","lastModifiedDate":"2024-02-01"},{"lineNumber":120,"author":{"gitId":"ChrysanthemumT"},"content":"        return this.tasks.size();","lastModifiedDate":"2024-02-01"},{"lineNumber":121,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":122,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":123,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":124,"author":{"gitId":"ChrysanthemumT"},"content":"     * Generates a formatted string representation of the tasks in the task list.","lastModifiedDate":"2024-02-01"},{"lineNumber":125,"author":{"gitId":"ChrysanthemumT"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":126,"author":{"gitId":"ChrysanthemumT"},"content":"     * @return A formatted string representation of the tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":127,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":128,"author":{"gitId":"ChrysanthemumT"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":129,"author":{"gitId":"ChrysanthemumT"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":130,"author":{"gitId":"ChrysanthemumT"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2024-02-01"},{"lineNumber":131,"author":{"gitId":"ChrysanthemumT"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {","lastModifiedDate":"2024-02-01"},{"lineNumber":132,"author":{"gitId":"ChrysanthemumT"},"content":"            result.append(String.format(\"  %d.\", i)).append(this.tasks.get(i - 1).toString()).append(\"\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":133,"author":{"gitId":"ChrysanthemumT"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":134,"author":{"gitId":"ChrysanthemumT"},"content":"        return result.toString();","lastModifiedDate":"2024-02-01"},{"lineNumber":135,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":136,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":137,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":138,"author":{"gitId":"ChrysanthemumT"},"content":"     * Returns the priority of the given task as a string representation.","lastModifiedDate":"2024-02-20"},{"lineNumber":139,"author":{"gitId":"ChrysanthemumT"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":140,"author":{"gitId":"ChrysanthemumT"},"content":"     * @param task the task to get the priority for","lastModifiedDate":"2024-02-20"},{"lineNumber":141,"author":{"gitId":"ChrysanthemumT"},"content":"     * @return the priority of the task as a string (\"-1\" for LOW, \"0\" for empty, \"1\" otherwise)","lastModifiedDate":"2024-02-20"},{"lineNumber":142,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":143,"author":{"gitId":"ChrysanthemumT"},"content":"    private String getPriority(Task task) {","lastModifiedDate":"2024-02-14"},{"lineNumber":144,"author":{"gitId":"ChrysanthemumT"},"content":"        if (task.getPriority().equals(\"\")) {","lastModifiedDate":"2024-02-14"},{"lineNumber":145,"author":{"gitId":"ChrysanthemumT"},"content":"            return \"0\";","lastModifiedDate":"2024-02-14"},{"lineNumber":146,"author":{"gitId":"ChrysanthemumT"},"content":"        } else if (task.getPriority().equals(\"LOW\")) {","lastModifiedDate":"2024-02-14"},{"lineNumber":147,"author":{"gitId":"ChrysanthemumT"},"content":"            return \"-1\";","lastModifiedDate":"2024-02-14"},{"lineNumber":148,"author":{"gitId":"ChrysanthemumT"},"content":"        } else {","lastModifiedDate":"2024-02-14"},{"lineNumber":149,"author":{"gitId":"ChrysanthemumT"},"content":"            return \"1\";","lastModifiedDate":"2024-02-14"},{"lineNumber":150,"author":{"gitId":"ChrysanthemumT"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":151,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":152,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":153,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":154,"author":{"gitId":"ChrysanthemumT"},"content":"     * Saves the current list of tasks to a file.","lastModifiedDate":"2024-02-01"},{"lineNumber":155,"author":{"gitId":"ChrysanthemumT"},"content":"     * The format of the save file is \"save [doneStatus] [originalCommand]\" for each task.","lastModifiedDate":"2024-02-01"},{"lineNumber":156,"author":{"gitId":"ChrysanthemumT"},"content":"     * Each task is represented as a line in the file.","lastModifiedDate":"2024-02-01"},{"lineNumber":157,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":158,"author":{"gitId":"ChrysanthemumT"},"content":"    private void saveToFile() {","lastModifiedDate":"2024-02-01"},{"lineNumber":159,"author":{"gitId":"ChrysanthemumT"},"content":"        StringBuilder temporary \u003d new StringBuilder();","lastModifiedDate":"2024-02-01"},{"lineNumber":160,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":161,"author":{"gitId":"ChrysanthemumT"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-02-01"},{"lineNumber":162,"author":{"gitId":"ChrysanthemumT"},"content":"            temporary.append(\"save \")","lastModifiedDate":"2024-02-14"},{"lineNumber":163,"author":{"gitId":"ChrysanthemumT"},"content":"                    .append(task.isDone ? \"1 \" : \"0 \")","lastModifiedDate":"2024-02-14"},{"lineNumber":164,"author":{"gitId":"ChrysanthemumT"},"content":"                    .append(getPriority(task))","lastModifiedDate":"2024-02-14"},{"lineNumber":165,"author":{"gitId":"ChrysanthemumT"},"content":"                    .append(\" \")","lastModifiedDate":"2024-02-14"},{"lineNumber":166,"author":{"gitId":"ChrysanthemumT"},"content":"                    .append(task.getOriginalCommand() + \"\\n\");","lastModifiedDate":"2024-02-14"},{"lineNumber":167,"author":{"gitId":"ChrysanthemumT"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":168,"author":{"gitId":"ChrysanthemumT"},"content":"        Storage.save(temporary.toString());","lastModifiedDate":"2024-02-01"},{"lineNumber":169,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":170,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":171,"author":{"gitId":"ChrysanthemumT"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"ChrysanthemumT":171}},{"path":"src/main/java/duke/storage/Todos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChrysanthemumT"},"content":"package duke.storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"ChrysanthemumT"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"ChrysanthemumT"},"content":" * The Todos class represents a todo task in the Duke task manager, which is a subtype of the Task class.","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"ChrysanthemumT"},"content":" * It inherits properties and methods from the Task class and provides a specific implementation for todo tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"ChrysanthemumT"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"ChrysanthemumT"},"content":"public class Todos extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"ChrysanthemumT"},"content":"     * Constructs a Todos object with the specified original command and description.","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"ChrysanthemumT"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"ChrysanthemumT"},"content":"     * @param originalCommand The original command used to create the todo task.","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"ChrysanthemumT"},"content":"     * @param description     The description of the todo task.","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"ChrysanthemumT"},"content":"    public Todos(String originalCommand, String description) {","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"ChrysanthemumT"},"content":"        super(originalCommand, description);","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"ChrysanthemumT"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"ChrysanthemumT"},"content":"     * Returns a string representation of the todo task, including its specific type identifier and the result","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"ChrysanthemumT"},"content":"     * of the superclass\u0027s toString method.","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"ChrysanthemumT"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"ChrysanthemumT"},"content":"     * @return A string representation of the todo task.","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"ChrysanthemumT"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"ChrysanthemumT"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"ChrysanthemumT"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"ChrysanthemumT"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"ChrysanthemumT"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"ChrysanthemumT":28}},{"path":"src/main/java/duke/storage/savefile.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ChrysanthemumT"},"content":"save 1 1 todo cs2103 hw","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"ChrysanthemumT"},"content":"save 0 0 deadline sale /by 02/06/2024 1800","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"ChrysanthemumT"},"content":"save 0 0 deadline life /by 02/03/2045 1800","lastModifiedDate":"2024-02-20"},{"lineNumber":4,"author":{"gitId":"ChrysanthemumT"},"content":"save 0 0 todo life","lastModifiedDate":"2024-02-20"},{"lineNumber":5,"author":{"gitId":"ChrysanthemumT"},"content":"save 0 0 event test /from 02/02/2044 /to 02/02/2045","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"ChrysanthemumT":5}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ChrysanthemumT"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"ChrysanthemumT"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"ChrysanthemumT"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"ChrysanthemumT"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"ChrysanthemumT"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"ChrysanthemumT"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"ChrysanthemumT"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"ChrysanthemumT"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"ChrysanthemumT"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"ChrysanthemumT"},"content":"      \u003cScrollPane prefHeight\u003d\"100.0\" prefViewportHeight\u003d\"1800.0\" prefWidth\u003d\"300.0\"\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"ChrysanthemumT"},"content":"         \u003ccontent\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"ChrysanthemumT"},"content":"            \u003cVBox minWidth\u003d\"-Infinity\" prefWidth\u003d\"100.0\"\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"ChrysanthemumT"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"ChrysanthemumT"},"content":"                    \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefWidth\u003d\"400.0\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":17,"author":{"gitId":"ChrysanthemumT"},"content":"                     \u003cpadding\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"ChrysanthemumT"},"content":"                        \u003cInsets bottom\u003d\"2.0\" left\u003d\"2.0\" right\u003d\"2.0\" top\u003d\"2.0\" /\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"ChrysanthemumT"},"content":"                     \u003c/padding\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"ChrysanthemumT"},"content":"                  \u003c/Label\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"ChrysanthemumT"},"content":"               \u003c/children\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"ChrysanthemumT"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"ChrysanthemumT"},"content":"         \u003c/content\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"ChrysanthemumT"},"content":"      \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"ChrysanthemumT"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"ChrysanthemumT"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"ChrysanthemumT"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"ChrysanthemumT"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"ChrysanthemumT"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"ChrysanthemumT"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"ChrysanthemumT":30}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ChrysanthemumT"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"ChrysanthemumT"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"ChrysanthemumT"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"ChrysanthemumT"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"ChrysanthemumT"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"ChrysanthemumT"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"ChrysanthemumT"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\"","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"ChrysanthemumT"},"content":"            prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"ChrysanthemumT"},"content":"            fx:controller\u003d\"duke.gui.MainWindow\"\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"ChrysanthemumT"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"ChrysanthemumT"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\"","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"ChrysanthemumT"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\"/\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"ChrysanthemumT"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"ChrysanthemumT"},"content":"                prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"/\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"ChrysanthemumT"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"ChrysanthemumT"},"content":"                    vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"ChrysanthemumT"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"ChrysanthemumT"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"/\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"ChrysanthemumT"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"ChrysanthemumT"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"ChrysanthemumT"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"ChrysanthemumT"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"ChrysanthemumT":24}},{"path":"src/test/java/duke/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChrysanthemumT"},"content":"package duke.parser;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"ChrysanthemumT"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"ChrysanthemumT"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"ChrysanthemumT"},"content":"public class ParserTest {","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"ChrysanthemumT"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"ChrysanthemumT"},"content":"    public void parse_success() {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"ChrysanthemumT"},"content":"        String sampleInput \u003d \"todo hw\";","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"ChrysanthemumT"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"ChrysanthemumT"},"content":"        parser.feed(sampleInput);","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"ChrysanthemumT"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"ChrysanthemumT"},"content":"            Token output \u003d parser.parse();","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"ChrysanthemumT"},"content":"            assertEquals(output.getCmd(), Command.TODO);","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"ChrysanthemumT"},"content":"            assertEquals(output.getSelectedItem(), 0);","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"ChrysanthemumT"},"content":"            assertEquals(output.getTask().getOriginalCommand(), sampleInput);","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"ChrysanthemumT"},"content":"            assertEquals(output.getTask().toString(), \"[T][ ] hw \");","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"ChrysanthemumT"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"ChrysanthemumT"},"content":"            System.out.println(\"fix your tests!!!!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"ChrysanthemumT"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"ChrysanthemumT"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"ChrysanthemumT":26}},{"path":"src/test/java/duke/storage/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChrysanthemumT"},"content":"package duke.storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"ChrysanthemumT"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"ChrysanthemumT"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"ChrysanthemumT"},"content":"public class TaskTest {","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"ChrysanthemumT"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"ChrysanthemumT"},"content":"    public void getStatusIcon_test() {","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"ChrysanthemumT"},"content":"        String sampleInput \u003d \"todo gym\";","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"ChrysanthemumT"},"content":"        Task sample \u003d new Task(sampleInput, \"gym\");","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"ChrysanthemumT"},"content":"        assertEquals(\"todo gym\", sample.getOriginalCommand());","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"ChrysanthemumT"},"content":"        assertEquals(\" \", sample.getStatusIcon());","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"ChrysanthemumT"},"content":"        sample.mark();","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"ChrysanthemumT"},"content":"        assertEquals(\"X\", sample.getStatusIcon());","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"ChrysanthemumT"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"ChrysanthemumT"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"ChrysanthemumT"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"ChrysanthemumT":18}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ChrysanthemumT"},"content":"hi","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"ChrysanthemumT"},"content":"deadline cs2101 by/ friday","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"ChrysanthemumT"},"content":"event midterms /from idk /to idk","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"ChrysanthemumT"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"ChrysanthemumT"},"content":"todo cs2103t","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"ChrysanthemumT"},"content":"mark 1","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"ChrysanthemumT"},"content":"unmark 1","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"ChrysanthemumT"},"content":"list","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"ChrysanthemumT":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"ChrysanthemumT"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ChrysanthemumT":1,"-":20}}]
