[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"nuyer"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"nuyer"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"nuyer"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"nuyer"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"nuyer"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"nuyer"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":22,"author":{"gitId":"nuyer"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"nuyer"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"nuyer"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":25,"author":{"gitId":"nuyer"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"nuyer"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":27,"author":{"gitId":"nuyer"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":28,"author":{"gitId":"nuyer"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"nuyer"},"content":"    mainClass.set(\"duke.Launcher\")","lastModifiedDate":"2024-02-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"nuyer":16,"-":41}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nuyer"},"content":"package duke;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"nuyer"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"nuyer"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"nuyer"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"nuyer"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"nuyer"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"nuyer"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"nuyer"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"nuyer"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"nuyer"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"nuyer"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"nuyer"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"nuyer"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"nuyer"},"content":"/**","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"nuyer"},"content":" * Displays a dialog entry from a user.","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"nuyer"},"content":" */","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"nuyer"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"nuyer"},"content":"    @FXML","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"nuyer"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"nuyer"},"content":"    @FXML","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"nuyer"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"nuyer"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"nuyer"},"content":"        try {","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"nuyer"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-15"},{"lineNumber":29,"author":{"gitId":"nuyer"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-15"},{"lineNumber":30,"author":{"gitId":"nuyer"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"nuyer"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"nuyer"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"nuyer"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"nuyer"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":35,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"nuyer"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-15"},{"lineNumber":37,"author":{"gitId":"nuyer"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-15"},{"lineNumber":38,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":39,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":40,"author":{"gitId":"nuyer"},"content":"    private void flip() {","lastModifiedDate":"2024-02-14"},{"lineNumber":41,"author":{"gitId":"nuyer"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-14"},{"lineNumber":42,"author":{"gitId":"nuyer"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-15"},{"lineNumber":43,"author":{"gitId":"nuyer"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-15"},{"lineNumber":44,"author":{"gitId":"nuyer"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-15"},{"lineNumber":45,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":46,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":47,"author":{"gitId":"nuyer"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-15"},{"lineNumber":48,"author":{"gitId":"nuyer"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-15"},{"lineNumber":49,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":50,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":51,"author":{"gitId":"nuyer"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-02-15"},{"lineNumber":52,"author":{"gitId":"nuyer"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-15"},{"lineNumber":53,"author":{"gitId":"nuyer"},"content":"        db.flip();","lastModifiedDate":"2024-02-14"},{"lineNumber":54,"author":{"gitId":"nuyer"},"content":"        return db;","lastModifiedDate":"2024-02-14"},{"lineNumber":55,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":56,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":57,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":58,"author":{"gitId":"nuyer"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"nuyer":58}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nuyer"},"content":"package duke;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"nuyer"},"content":"import java.util.List;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"nuyer"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"nuyer"},"content":"import duke.commands.Command;","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"nuyer"},"content":"import duke.commands.Parser;","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"nuyer"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"nuyer"},"content":"/**","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"nuyer"},"content":" * The Dino class is a Java program that acts as a task manager, allowing users to input commands to manage and","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"nuyer"},"content":" * manipulate a list of tasks.","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"nuyer"},"content":" */","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"nuyer"},"content":"public class Duke {","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"nuyer"},"content":"    private static final String TASKS_CACHE_PATH \u003d \".duke-cache\";","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"nuyer"},"content":"    private static final String HORIZONTAL_LINE \u003d \"---------------------------------\\n\";","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"nuyer"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"nuyer"},"content":"        Storage storage \u003d new Storage(TASKS_CACHE_PATH);","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"nuyer"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"nuyer"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"nuyer"},"content":"            tasks \u003d storage.load();","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"nuyer"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"nuyer"},"content":"            System.out.println(\"Issues occurred while loading tasks: \" + e.getMessage());","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"nuyer"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"nuyer"},"content":"        greet();","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"nuyer"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"nuyer"},"content":"        String input \u003d scanner.nextLine();","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"nuyer"},"content":"        while (!input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"nuyer"},"content":"            System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"nuyer"},"content":"            String messages \u003d Duke.getResponse(input, storage, tasks);","lastModifiedDate":"2024-02-15"},{"lineNumber":40,"author":{"gitId":"nuyer"},"content":"            System.out.println(messages);","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"nuyer"},"content":"            storage.save(tasks);","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"nuyer"},"content":"            System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"nuyer"},"content":"            input \u003d scanner.nextLine();","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"nuyer"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"nuyer"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"nuyer"},"content":"        scanner.close();","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"nuyer"},"content":"    private static void greet() {","lastModifiedDate":"2024-02-14"},{"lineNumber":50,"author":{"gitId":"nuyer"},"content":"        String greet \u003d \"Hello! I\u0027m Dino\\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":51,"author":{"gitId":"nuyer"},"content":"                + \"What can I do for you?\\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":52,"author":{"gitId":"nuyer"},"content":"                + HORIZONTAL_LINE;","lastModifiedDate":"2024-02-14"},{"lineNumber":53,"author":{"gitId":"nuyer"},"content":"        System.out.println(greet);","lastModifiedDate":"2024-02-14"},{"lineNumber":54,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":55,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":56,"author":{"gitId":"nuyer"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"nuyer"},"content":"     * The function takes an input, processes it using a parser, executes a command on a list of tasks, saves the","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"nuyer"},"content":"     * tasks to storage, and returns a string representation of any messages generated during the process.","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"nuyer"},"content":"     * @param input A string representing the user\u0027s input command.","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"nuyer"},"content":"     * @return string message to be print out later.","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"nuyer"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"nuyer"},"content":"    public static String getResponse(String input, Storage storage, TaskList tasks) {","lastModifiedDate":"2024-02-15"},{"lineNumber":63,"author":{"gitId":"nuyer"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"nuyer"},"content":"            Command command \u003d Parser.processInput(input);","lastModifiedDate":"2024-02-07"},{"lineNumber":65,"author":{"gitId":"nuyer"},"content":"            List\u003cString\u003e messages \u003d command.execute(tasks);","lastModifiedDate":"2024-02-07"},{"lineNumber":66,"author":{"gitId":"nuyer"},"content":"            storage.save(tasks);","lastModifiedDate":"2024-02-07"},{"lineNumber":67,"author":{"gitId":"nuyer"},"content":"            return String.join(\"\\n\", messages);","lastModifiedDate":"2024-02-07"},{"lineNumber":68,"author":{"gitId":"nuyer"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":69,"author":{"gitId":"nuyer"},"content":"            return e.getMessage();","lastModifiedDate":"2024-02-07"},{"lineNumber":70,"author":{"gitId":"nuyer"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":71,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":72,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":73,"author":{"gitId":"nuyer"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-02-15"},{"lineNumber":74,"author":{"gitId":"nuyer"},"content":"        return \"Duke heard: \" + input;","lastModifiedDate":"2024-02-15"},{"lineNumber":75,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":76,"author":{"gitId":"nuyer"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"nuyer":76}},{"path":"src/main/java/duke/DukeException/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nuyer"},"content":"package duke.DukeException;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"nuyer"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"nuyer"},"content":" * The DukeException class is a custom exception class in Java that extends the Exception class and allows for","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"nuyer"},"content":" * the creation of exceptions with custom error messages.","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"nuyer"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"nuyer"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"nuyer"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"nuyer"},"content":"        super(message);","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"nuyer"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"nuyer":13}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nuyer"},"content":"package duke;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"nuyer"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"nuyer"},"content":"public class Launcher {","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"nuyer"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"nuyer"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"nuyer"},"content":"}","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"nuyer":9}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nuyer"},"content":"package duke;","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"nuyer"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"nuyer"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"nuyer"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"nuyer"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"nuyer"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"nuyer"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"nuyer"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"nuyer"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"nuyer"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"nuyer"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"nuyer"},"content":"    private final Duke duke \u003d new Duke();","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"nuyer"},"content":"    @Override","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"nuyer"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"nuyer"},"content":"        try {","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"nuyer"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"nuyer"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"nuyer"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"nuyer"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"nuyer"},"content":"            fxmlLoader.\u003cduke.MainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"nuyer"},"content":"            stage.show();","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"nuyer"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"nuyer"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-15"},{"lineNumber":29,"author":{"gitId":"nuyer"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":30,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"nuyer"},"content":"}","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"nuyer":31}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nuyer"},"content":"package duke;","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"nuyer"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"nuyer"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"nuyer"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"nuyer"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"nuyer"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"nuyer"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"nuyer"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"nuyer"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"nuyer"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"nuyer"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"nuyer"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"nuyer"},"content":"    @FXML","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"nuyer"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"nuyer"},"content":"    @FXML","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"nuyer"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"nuyer"},"content":"    @FXML","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"nuyer"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"nuyer"},"content":"    @FXML","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"nuyer"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"nuyer"},"content":"    private Duke duke;","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"nuyer"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"nuyer"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":29,"author":{"gitId":"nuyer"},"content":"    @FXML","lastModifiedDate":"2024-02-15"},{"lineNumber":30,"author":{"gitId":"nuyer"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"nuyer"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"nuyer"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2024-02-15"},{"lineNumber":35,"author":{"gitId":"nuyer"},"content":"        duke \u003d d;","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":37,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":38,"author":{"gitId":"nuyer"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":39,"author":{"gitId":"nuyer"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-15"},{"lineNumber":40,"author":{"gitId":"nuyer"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-15"},{"lineNumber":41,"author":{"gitId":"nuyer"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":42,"author":{"gitId":"nuyer"},"content":"    @FXML","lastModifiedDate":"2024-02-15"},{"lineNumber":43,"author":{"gitId":"nuyer"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-15"},{"lineNumber":44,"author":{"gitId":"nuyer"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-15"},{"lineNumber":45,"author":{"gitId":"nuyer"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2024-02-15"},{"lineNumber":46,"author":{"gitId":"nuyer"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-15"},{"lineNumber":47,"author":{"gitId":"nuyer"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-15"},{"lineNumber":48,"author":{"gitId":"nuyer"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2024-02-15"},{"lineNumber":49,"author":{"gitId":"nuyer"},"content":"        );","lastModifiedDate":"2024-02-15"},{"lineNumber":50,"author":{"gitId":"nuyer"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-15"},{"lineNumber":51,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":52,"author":{"gitId":"nuyer"},"content":"}","lastModifiedDate":"2024-02-15"},{"lineNumber":53,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"nuyer":53}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nuyer"},"content":"package duke;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"nuyer"},"content":"import duke.DukeException.DukeException;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"nuyer"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"nuyer"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"nuyer"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"nuyer"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"nuyer"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"nuyer"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"nuyer"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"nuyer"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"nuyer"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"nuyer"},"content":" * The `Storage` class is responsible for loading and saving a `TaskList` object to a specified file path.","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"nuyer"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"nuyer"},"content":"public class Storage {","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"nuyer"},"content":"    private final Path path;","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"nuyer"},"content":"    public Storage(String path) {","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"nuyer"},"content":"        this.path \u003d Path.of(path);","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"nuyer"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"nuyer"},"content":"     * The function loads a TaskList object from a file, and if the file does not exist, it returns a new TaskList","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"nuyer"},"content":"     * object.","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"nuyer"},"content":"     * ","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"nuyer"},"content":"     * @return a TaskList with all the tasks form cache.","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"nuyer"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"nuyer"},"content":"    public TaskList load() throws DukeException {","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"nuyer"},"content":"        if (Files.notExists(path)) {","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"nuyer"},"content":"            System.out.println(\"No cache found\");","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"nuyer"},"content":"            return new TaskList();","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"nuyer"},"content":"        } else {","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"nuyer"},"content":"            try {","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"nuyer"},"content":"                FileInputStream fileInputStream \u003d new FileInputStream(path.toString());","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"nuyer"},"content":"                ObjectInputStream objInputStream \u003d new ObjectInputStream(fileInputStream);","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"nuyer"},"content":"                TaskList tasks \u003d (TaskList) objInputStream.readObject();","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"nuyer"},"content":"                objInputStream.close();","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"nuyer"},"content":"                fileInputStream.close();","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"nuyer"},"content":"                System.out.println(String.format(\"Tasks downloaded from %s\", path));","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"nuyer"},"content":"                return tasks;","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"nuyer"},"content":"            } catch (IOException | ClassNotFoundException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"nuyer"},"content":"                try {","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"nuyer"},"content":"                    Files.delete(path);","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"nuyer"},"content":"                } catch (IOException ignored) {","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"nuyer"},"content":"                }","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"nuyer"},"content":"                throw new DukeException(String.format(\"Unable to download existing tasks\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"nuyer"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"nuyer"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"nuyer"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"nuyer"},"content":"     * The function saves a TaskList object to a file using Java\u0027s ObjectOutputStream.","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"nuyer"},"content":"     * ","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"nuyer"},"content":"     * @param tasks The `tasks` parameter is an instance of the `TaskList` class. It represents a collection of tasks","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"nuyer"},"content":"     * that need to be saved.","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"nuyer"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"nuyer"},"content":"    public void save(TaskList tasks) {","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"nuyer"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"nuyer"},"content":"            FileOutputStream fileOutputStream \u003d new FileOutputStream(path.toString());","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"nuyer"},"content":"            ObjectOutputStream objOutputStream \u003d new ObjectOutputStream(fileOutputStream);","lastModifiedDate":"2024-02-07"},{"lineNumber":65,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":66,"author":{"gitId":"nuyer"},"content":"            objOutputStream.writeObject(tasks);","lastModifiedDate":"2024-02-07"},{"lineNumber":67,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":68,"author":{"gitId":"nuyer"},"content":"            objOutputStream.close();","lastModifiedDate":"2024-02-07"},{"lineNumber":69,"author":{"gitId":"nuyer"},"content":"            fileOutputStream.close();","lastModifiedDate":"2024-02-07"},{"lineNumber":70,"author":{"gitId":"nuyer"},"content":"        } catch (IOException ignored) {","lastModifiedDate":"2024-02-07"},{"lineNumber":71,"author":{"gitId":"nuyer"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":72,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":73,"author":{"gitId":"nuyer"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"nuyer":73}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nuyer"},"content":"package duke.commands;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"nuyer"},"content":"import duke.DukeException.DukeException;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"nuyer"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"nuyer"},"content":"import java.util.List;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"nuyer"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"nuyer"},"content":" * The Command class is an abstract class that represents a command to be executed on a TaskList.","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"nuyer"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"nuyer"},"content":"public abstract class Command {","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"nuyer"},"content":"    public abstract List\u003cString\u003e execute(TaskList tasks) throws DukeException;","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"nuyer"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"nuyer":12}},{"path":"src/main/java/duke/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nuyer"},"content":"package duke.commands;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"nuyer"},"content":"import duke.DukeException.DukeException;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"nuyer"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"nuyer"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"nuyer"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"nuyer"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"nuyer"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"nuyer"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"nuyer"},"content":"import java.util.List;","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"nuyer"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"nuyer"},"content":" * The `DeadlineCommand` class is a subclass of the `Command` class in Java that represents a command to add a","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"nuyer"},"content":" * deadline task to a task list.","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"nuyer"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"nuyer"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"nuyer"},"content":"    private static final DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"nuyer"},"content":"    private final String details;","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"nuyer"},"content":"    private final List\u003cString\u003e messages \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"nuyer"},"content":"    public DeadlineCommand(String details) {","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"nuyer"},"content":"        this.details \u003d details;","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"nuyer"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"nuyer"},"content":"     * The function takes in a task list and a string input, parses the input to extract the task description and","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"nuyer"},"content":"     * deadline, adds a new Deadline task to the task list with the parsed details, and returns a list of messages","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"nuyer"},"content":"     * indicating the success of the operation.","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"nuyer"},"content":"     * ","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"nuyer"},"content":"     * @param tasks A TaskList object that represents a list of tasks.","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"nuyer"},"content":"     * @return List of Strings messages whihc will be printed to user later.","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"nuyer"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"nuyer"},"content":"    public List\u003cString\u003e execute(TaskList tasks) throws DukeException {","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"nuyer"},"content":"        String[] parsedInput \u003d details.split(\"/by \", 2);","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"nuyer"},"content":"        if (parsedInput.length !\u003d 2) {","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"nuyer"},"content":"            throw new DukeException(\"Please enter tasks description and deadline\"","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"nuyer"},"content":"                    + \"\\ncorrect format: deadline *tasks description* /by *deadline*\");","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"nuyer"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"nuyer"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"nuyer"},"content":"            tasks.add(new Deadline(parsedInput[0], LocalDateTime.parse(parsedInput[1]","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"nuyer"},"content":"                    , dateTimeFormatter)));","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"nuyer"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"nuyer"},"content":"            throw new DukeException(\"Invalid Date/Time or Date/Time is in wrong format\"","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"nuyer"},"content":"                    + \"\\ncorrect format: dd/MM/yyyy HHmm\");","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"nuyer"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"nuyer"},"content":"        messages.add(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-02-13"},{"lineNumber":50,"author":{"gitId":"nuyer"},"content":"        messages.add(\"added: \" + tasks.get(tasks.size() - 1).toString());","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"nuyer"},"content":"        messages.add(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"nuyer"},"content":"        return messages;","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"nuyer"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"nuyer":54}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nuyer"},"content":"package duke.commands;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"nuyer"},"content":"import duke.DukeException.DukeException;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"nuyer"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"nuyer"},"content":"import duke.tasks.Task;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"nuyer"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"nuyer"},"content":"import java.util.List;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"nuyer"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"nuyer"},"content":" * The `DeleteCommand` class is used to delete a task from a task list and returns a list of messages indicating","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"nuyer"},"content":" * the success of the operation.","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"nuyer"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"nuyer"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"nuyer"},"content":"    private final String details;","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"nuyer"},"content":"    private final List\u003cString\u003e messages \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"nuyer"},"content":"    public DeleteCommand(String details) {","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"nuyer"},"content":"        this.details \u003d details;","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"nuyer"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"nuyer"},"content":"     * This Java function deletes a task from a task list and returns a list of messages indicating the success of","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"nuyer"},"content":"     * the operation.","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"nuyer"},"content":"     * ","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"nuyer"},"content":"     * @param tasks A TaskList object that contains a list of tasks.","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"nuyer"},"content":"     * @return List of Strings messages which will be printed to user later.","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"nuyer"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"nuyer"},"content":"    public List\u003cString\u003e execute(TaskList tasks) throws DukeException {","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"nuyer"},"content":"        if (details.length() \u003c 1) {","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"nuyer"},"content":"            throw new DukeException(\"Please enter the tasks number that you want to delete: ex. delete 2\");","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"nuyer"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"nuyer"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"nuyer"},"content":"            int index \u003d Integer.parseInt(details) - 1;","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"nuyer"},"content":"            Task task \u003d tasks.get(index);","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"nuyer"},"content":"            messages.add(\"Noted. I\u0027ve removed this tasks:\");","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"nuyer"},"content":"            messages.add(task.toString());","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"nuyer"},"content":"            tasks.remove(index);","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"nuyer"},"content":"            messages.add(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"nuyer"},"content":"        } catch(Exception e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"nuyer"},"content":"            throw new DukeException(\"Please enter the valid tasks number\");","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"nuyer"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"nuyer"},"content":"        return messages;","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"nuyer"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"nuyer":45}},{"path":"src/main/java/duke/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nuyer"},"content":"package duke.commands;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"nuyer"},"content":"import duke.DukeException.DukeException;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"nuyer"},"content":"import duke.tasks.Event;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"nuyer"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"nuyer"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"nuyer"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"nuyer"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"nuyer"},"content":"import java.util.List;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"nuyer"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"nuyer"},"content":" * The `EventCommand` class is used to create and execute commands for adding event tasks to a task list.","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"nuyer"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"nuyer"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"nuyer"},"content":"    private static final DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"nuyer"},"content":"    private final String details;","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"nuyer"},"content":"    private final List\u003cString\u003e messages \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"nuyer"},"content":"    public EventCommand(String details) {","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"nuyer"},"content":"        this.details \u003d details;","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"nuyer"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"nuyer"},"content":"     * The function takes in a task list and a string input, parses the input to extract event details and dates,","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"nuyer"},"content":"     * adds the event to the task list, and returns a list of messages.","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"nuyer"},"content":"     * ","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"nuyer"},"content":"     * @param tasks A TaskList object that represents a list of tasks.","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"nuyer"},"content":"     * @return List of Strings messages which will be printed to user later.","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"nuyer"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"nuyer"},"content":"    public List\u003cString\u003e execute(TaskList tasks) throws DukeException {","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"nuyer"},"content":"        String[] parsedInput \u003d details.split(\"/from \", 2);","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"nuyer"},"content":"        if (parsedInput.length !\u003d 2) {","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"nuyer"},"content":"            throw new DukeException(\"Please enter event description and time in the correct format\"","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"nuyer"},"content":"                    + \"\\ncorrect format: event *event name* /from dd/MM/yyyy HHmm /to dd/MM/yyyy HHmm\");","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"nuyer"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"nuyer"},"content":"        String[] parsedDates\u003d parsedInput[1].split(\" /to \", 2);","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"nuyer"},"content":"        if (parsedDates.length !\u003d 2) {","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"nuyer"},"content":"            throw new DukeException(\"Please enter event description and time in the correct format\"","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"nuyer"},"content":"                    + \"\\ncorrect format: event *event name* /from dd/MM/yyyy HHmm /to dd/MM/yyyy HHmm\");","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"nuyer"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"nuyer"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"nuyer"},"content":"            tasks.add(","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"nuyer"},"content":"                    new Event(parsedInput[0], LocalDateTime.parse(parsedDates[0], dateTimeFormatter)","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"nuyer"},"content":"                            , LocalDateTime.parse(parsedDates[1], dateTimeFormatter)));","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"nuyer"},"content":"            messages.add(\"Got it. I\u0027ve added this tasks:\");","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"nuyer"},"content":"            messages.add(\"added: \" + tasks.get(tasks.size() - 1).toString());","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"nuyer"},"content":"            messages.add(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"nuyer"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"nuyer"},"content":"            throw new DukeException(\"Invalid Date/Time or Date/Time is in wrong format\"","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"nuyer"},"content":"                    + \"\\ncorrect format: dd/MM/yyyy HHmm\");","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"nuyer"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"nuyer"},"content":"        return messages;","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"nuyer"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"nuyer":60}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nuyer"},"content":"package duke.commands;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"nuyer"},"content":"import duke.DukeException.DukeException;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"nuyer"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"nuyer"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"nuyer"},"content":"import java.util.List;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"nuyer"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"nuyer"},"content":"    private final String keyword;","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"nuyer"},"content":"    private List\u003cString\u003e messages \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"nuyer"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"nuyer"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"nuyer"},"content":"    public List\u003cString\u003e execute(TaskList tasks) throws DukeException {","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"nuyer"},"content":"        int order \u003d 1;","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"nuyer"},"content":"        messages.add(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"nuyer"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"nuyer"},"content":"            if (tasks.get(i).getDescription().contains(keyword)) {","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"nuyer"},"content":"                messages.add(order + \".\" + tasks.get(i).toString());","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"nuyer"},"content":"                order++;","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"nuyer"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"nuyer"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"nuyer"},"content":"        return messages;","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"nuyer"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"nuyer":27}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nuyer"},"content":"package duke.commands;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"nuyer"},"content":"import duke.DukeException.DukeException;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"nuyer"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"nuyer"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"nuyer"},"content":"import java.util.List;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"nuyer"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"nuyer"},"content":" * The `ListCommand` class is a subclass of the `Command` class that executes a task list and returns a list of","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"nuyer"},"content":" * messages containing the tasks in the list.","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"nuyer"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"nuyer"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"nuyer"},"content":"    private List\u003cString\u003e messages \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"nuyer"},"content":"    ","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"nuyer"},"content":"    public ListCommand() {};","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"nuyer"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"nuyer"},"content":"     * The function executes a task list and returns a list of messages containing the tasks in the list.","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"nuyer"},"content":"     * ","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"nuyer"},"content":"     * @param tasks A TaskList object that contains a list of tasks.","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"nuyer"},"content":"     * @return List of Strings: list of all the tasks in the task list which will be printed to user later.","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"nuyer"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"nuyer"},"content":"    public List\u003cString\u003e execute(TaskList tasks) throws DukeException {","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"nuyer"},"content":"        messages.add(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"nuyer"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"nuyer"},"content":"            messages.add(\"  \" + (i + 1) + \".\" + tasks.get(i).toString());","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"nuyer"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"nuyer"},"content":"        return messages;","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"nuyer"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"nuyer":33}},{"path":"src/main/java/duke/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nuyer"},"content":"package duke.commands;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"nuyer"},"content":"import duke.DukeException.DukeException;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"nuyer"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"nuyer"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"nuyer"},"content":"import java.util.List;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"nuyer"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"nuyer"},"content":" * The `MarkCommand` class is a subclass of the `Command` class that represents a command to mark a task as","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"nuyer"},"content":" * complete.","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"nuyer"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"nuyer"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"nuyer"},"content":"    private final String details;","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"nuyer"},"content":"    private final List\u003cString\u003e messages \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"nuyer"},"content":"    public MarkCommand(String details) {","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"nuyer"},"content":"        this.details \u003d details;","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"nuyer"},"content":"    ","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"nuyer"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"nuyer"},"content":"     * The function takes a task list and a task number as input, marks the corresponding task as complete, and","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"nuyer"},"content":"     * returns a list of messages to be printed out for user later.","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"nuyer"},"content":"     * ","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"nuyer"},"content":"     * @param tasks A TaskList object that contains a list of tasks.","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"nuyer"},"content":"     * @return List of Strings or messages.","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"nuyer"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"nuyer"},"content":"    public List\u003cString\u003e execute(TaskList tasks) throws DukeException {","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"nuyer"},"content":"        if (details.length() \u003c 1) { throw new DukeException(","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"nuyer"},"content":"                \"Please enter the tasks number that you want to mark as incomplete: ex. mark 2\");","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"nuyer"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"nuyer"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"nuyer"},"content":"            int i \u003d Integer.parseInt(details) - 1;","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"nuyer"},"content":"            tasks.get(i).markAsDone();","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"nuyer"},"content":"            messages.add(\"OK, I\u0027ve marked this tasks as not done yet\");","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"nuyer"},"content":"            messages.add(tasks.get(i).toString());","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"nuyer"},"content":"        } catch(Exception e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"nuyer"},"content":"            throw new DukeException(\"Please enter the valid tasks number\");","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"nuyer"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"nuyer"},"content":"        return messages;","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"nuyer"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"nuyer":45}},{"path":"src/main/java/duke/commands/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nuyer"},"content":"package duke.commands;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"nuyer"},"content":"import duke.DukeException.DukeException;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"nuyer"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"nuyer"},"content":" * The Parser class processes user input and returns the corresponding command object based on the input.","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"nuyer"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"nuyer"},"content":"public class Parser {","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"nuyer"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"nuyer"},"content":"     * The function processes user input and returns the corresponding command object based on the input.","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"nuyer"},"content":"     * ","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"nuyer"},"content":"     * @param input A string representing the user input.","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"nuyer"},"content":"     * @return The method is returning a Command object based on the input provided. The specific type of Command","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"nuyer"},"content":"     * object returned depends on the instruction parsed from the input.","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"nuyer"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"nuyer"},"content":"    public static Command processInput(String input) throws DukeException {","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"nuyer"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"nuyer"},"content":"            String[] parsedInput \u003d input.split(\" \", 2);","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"nuyer"},"content":"            Parser.Instruction ins \u003d toInstruction(parsedInput[0]);","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"nuyer"},"content":"            String details \u003d parsedInput.length \u003e 1 ? parsedInput[1] : \"\";","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"nuyer"},"content":"            switch (ins) {","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"nuyer"},"content":"                case LIST:","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"nuyer"},"content":"                    return new ListCommand();","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"nuyer"},"content":"                case MARK:","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"nuyer"},"content":"                    return new MarkCommand(details);","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"nuyer"},"content":"                case UNMARK:","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"nuyer"},"content":"                    return new UnmarkCommand(details);","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"nuyer"},"content":"                case TODO:","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"nuyer"},"content":"                    return new TodoCommand(details);","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"nuyer"},"content":"                case DEADLINE:","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"nuyer"},"content":"                    return new DeadlineCommand(details);","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"nuyer"},"content":"                case EVENT:","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"nuyer"},"content":"                    return new EventCommand(details);","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"nuyer"},"content":"                case DELETE:","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"nuyer"},"content":"                    return new DeleteCommand(details);","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"nuyer"},"content":"                case FIND:","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"nuyer"},"content":"                    return new FindCommand(details);","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"nuyer"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"nuyer"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"nuyer"},"content":"            throw new DukeException(\"Please enter instruction in the correct format\"","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"nuyer"},"content":"                    + \"\\nHere are valid instructions: list, mark, unmark, deadline, event, todo\");","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"nuyer"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"nuyer"},"content":"        return null;","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"nuyer"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"nuyer"},"content":"     * The function converts a string input into an Instruction enum value, throwing a DukeException if the input is","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"nuyer"},"content":"     * not a valid instruction.","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"nuyer"},"content":"     * ","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"nuyer"},"content":"     * @param input A string representing the user input for an instruction.","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"nuyer"},"content":"     * @return The method is returning an Instruction","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"nuyer"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"nuyer"},"content":"    private static Instruction toInstruction(String input) throws DukeException {","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"nuyer"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"nuyer"},"content":"            return Instruction.valueOf(input.toUpperCase());","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"nuyer"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"nuyer"},"content":"            throw new DukeException(\"Please enter instruction in the correct format\"","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"nuyer"},"content":"                    + \"\\nHere are valid instructions: list, mark, unmark, deadline, event, todo\");","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"nuyer"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"nuyer"},"content":"    enum Instruction {","lastModifiedDate":"2024-02-07"},{"lineNumber":65,"author":{"gitId":"nuyer"},"content":"        LIST, TODO, DEADLINE, EVENT, MARK, UNMARK, DELETE, FIND","lastModifiedDate":"2024-02-07"},{"lineNumber":66,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":67,"author":{"gitId":"nuyer"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"nuyer":67}},{"path":"src/main/java/duke/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nuyer"},"content":"package duke.commands;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"nuyer"},"content":"import duke.DukeException.DukeException;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"nuyer"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"nuyer"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"nuyer"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"nuyer"},"content":"import java.util.List;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"nuyer"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"nuyer"},"content":" * The `TodoCommand` class is a subclass of the `Command` class that represents a command to add a new todo task","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"nuyer"},"content":" * to a task list.","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"nuyer"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"nuyer"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"nuyer"},"content":"    private final String details;","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"nuyer"},"content":"    private final List\u003cString\u003e messages \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"nuyer"},"content":"    public TodoCommand(String details) {","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"nuyer"},"content":"        this.details \u003d details;","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"nuyer"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"nuyer"},"content":"     * The function adds a new task to a task list and returns a list of messages indicating the success of the","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"nuyer"},"content":"     * operation.","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"nuyer"},"content":"     * ","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"nuyer"},"content":"     * @param tasks A TaskList object that represents a list of tasks.","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"nuyer"},"content":"     * @return List of Strings messages which will be printed to user later.","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"nuyer"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"nuyer"},"content":"    public List\u003cString\u003e execute(TaskList tasks) throws DukeException {","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"nuyer"},"content":"        if (details.isEmpty()) {","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"nuyer"},"content":"            throw new DukeException(\"Please enter tasks description\");","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"nuyer"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"nuyer"},"content":"        tasks.add(new Todo(details));","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"nuyer"},"content":"        messages.add(\"Got it. I\u0027ve added this tasks:\");","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"nuyer"},"content":"        messages.add(\"added: \" + tasks.get(tasks.size() - 1).toString());","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"nuyer"},"content":"        messages.add(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"nuyer"},"content":"        return messages;","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"nuyer"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"nuyer":39}},{"path":"src/main/java/duke/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nuyer"},"content":"package duke.commands;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"nuyer"},"content":"import duke.DukeException.DukeException;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"nuyer"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"nuyer"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"nuyer"},"content":"import java.util.List;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"nuyer"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"nuyer"},"content":" * The `UnmarkCommand` class is a subclass of the `Command` class that represents a command to mark a task as","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"nuyer"},"content":" * incomplete.","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"nuyer"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"nuyer"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"nuyer"},"content":"    private final String details;","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"nuyer"},"content":"    private final List\u003cString\u003e messages \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"nuyer"},"content":"    public UnmarkCommand(String details) {","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"nuyer"},"content":"        this.details \u003d details;","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"nuyer"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"nuyer"},"content":"     * The function takes a task list and a task number as input, unmarks the corresponding task as incomplete, and","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"nuyer"},"content":"     * returns a list of messages to be printed out for user later.","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"nuyer"},"content":"     * ","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"nuyer"},"content":"     * @param tasks A TaskList object that contains a list of tasks.","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"nuyer"},"content":"     * @return List of Strings or messages.","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"nuyer"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"nuyer"},"content":"    public List\u003cString\u003e execute(TaskList tasks) throws DukeException {","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"nuyer"},"content":"        if (details.length() \u003c 1) {","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"nuyer"},"content":"            throw new DukeException(","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"nuyer"},"content":"                    \"Please enter the tasks number that you want to mark as incomplete: ex. mark 2\");","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"nuyer"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"nuyer"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"nuyer"},"content":"            int i \u003d Integer.parseInt(details) - 1;","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"nuyer"},"content":"            tasks.get(i).markAsUndone();","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"nuyer"},"content":"            messages.add(\"OK, I\u0027ve marked this tasks as not done yet\");","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"nuyer"},"content":"            messages.add(tasks.get(i).toString());","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"nuyer"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"nuyer"},"content":"            throw new DukeException(\"Please enter the valid tasks number\");","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"nuyer"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"nuyer"},"content":"        return messages;","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"nuyer"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"nuyer":43}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nuyer"},"content":"package duke.tasks;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"nuyer"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"nuyer"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"nuyer"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"nuyer"},"content":" * The `Deadline` class is a subclass of `Task` that represents a task with a specific deadline.","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"nuyer"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"nuyer"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"nuyer"},"content":"    private final LocalDateTime deadline;","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"nuyer"},"content":"    public Deadline(String description, LocalDateTime deadline) {","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"nuyer"},"content":"        super(description);","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"nuyer"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"nuyer"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"nuyer"},"content":"    public String toString() {","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"nuyer"},"content":"        return \"[D]\" + \"[\" + (isDone() ? \"X\" : \" \") + \"] \" + getDescription() + \"(by: \"","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"nuyer"},"content":"                + deadline.format(DateTimeFormatter.ofPattern(\"HH:mm MMM dd yyyy\")) + \")\";","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"nuyer"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"nuyer":23}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nuyer"},"content":"package duke.tasks;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"nuyer"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"nuyer"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"nuyer"},"content":"import java.io.Serializable;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"nuyer"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"nuyer"},"content":" * The Event class extends the Task class and represents an event with a start and end time.","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"nuyer"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"nuyer"},"content":"public class Event extends Task implements Serializable {","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"nuyer"},"content":"    private final LocalDateTime start;","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"nuyer"},"content":"    private final LocalDateTime end;","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"nuyer"},"content":"    private static final long serialVersionUID \u003d 4L;","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"nuyer"},"content":"    public Event(String description, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"nuyer"},"content":"        super(description);","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"nuyer"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"nuyer"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"nuyer"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"nuyer"},"content":"    public String toString() {","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"nuyer"},"content":"        return \"[E]\" + \"[\" + (isDone() ? \"X\" : \" \") + \"] \" + getDescription()","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"nuyer"},"content":"                + \"(from: \" + start.format(DateTimeFormatter.ofPattern(\"HH:mm MMM dd yyyy\"))","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"nuyer"},"content":"                + \" to: \"+ end.format(DateTimeFormatter.ofPattern(\"HH:mm MMM dd yyyy\")) + \")\";","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"nuyer"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"nuyer":28}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nuyer"},"content":"package duke.tasks;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"nuyer"},"content":"import java.io.Serializable;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"nuyer"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"nuyer"},"content":" * The Task class represents a task with a description and a status of whether it is done or not.","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"nuyer"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"nuyer"},"content":"public class Task implements Serializable {","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"nuyer"},"content":"    private final String description;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"nuyer"},"content":"    private boolean isDone;","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"nuyer"},"content":"    private static final long serialVersionUID \u003d 1L;","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"nuyer"},"content":"    public Task(String description) {","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"nuyer"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"nuyer"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"nuyer"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"nuyer"},"content":"     * The markAsDone() function sets the task to be completed.","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"nuyer"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"nuyer"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"nuyer"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"nuyer"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"nuyer"},"content":"     * The markAsUndone function sets task to be incompleted.","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"nuyer"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"nuyer"},"content":"    public void markAsUndone() {","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"nuyer"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"nuyer"},"content":"    public boolean isDone() {","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"nuyer"},"content":"        return this.isDone;","lastModifiedDate":"2024-02-15"},{"lineNumber":35,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"nuyer"},"content":"    public String getDescription() {","lastModifiedDate":"2024-02-15"},{"lineNumber":38,"author":{"gitId":"nuyer"},"content":"        return description;","lastModifiedDate":"2024-02-15"},{"lineNumber":39,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"nuyer"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"nuyer"},"content":"    public String toString() {","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"nuyer"},"content":"        return \"[T]\" + \"[\" + (isDone ? \"X\" : \" \") + \"] \" + description;","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"nuyer"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"nuyer":45}},{"path":"src/main/java/duke/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nuyer"},"content":"package duke.tasks;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"nuyer"},"content":"import java.io.Serializable;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"nuyer"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"nuyer"},"content":"import java.util.List;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"nuyer"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"nuyer"},"content":" * The TaskList class represents a list of tasks and provides methods for managing the tasks.","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"nuyer"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"nuyer"},"content":"public class TaskList implements Serializable {","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"nuyer"},"content":"    private static final long serialVersionUID \u003d 5L;","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"nuyer"},"content":"    private final List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"nuyer"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"nuyer"},"content":"     * The function checks if a list of tasks is empty.","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"nuyer"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"nuyer"},"content":"     * @return The method is returning a boolean value.","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"nuyer"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"nuyer"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"nuyer"},"content":"        return tasks.isEmpty();","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"nuyer"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"nuyer"},"content":"     * The size() function returns the number of tasks in a collection.","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"nuyer"},"content":"     * ","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"nuyer"},"content":"     * @return The size of the tasks list.","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"nuyer"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"nuyer"},"content":"    public int size() {","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"nuyer"},"content":"        return tasks.size();","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"nuyer"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"nuyer"},"content":"     * The function returns the task at the specified index from a list of tasks.","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"nuyer"},"content":"     * ","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"nuyer"},"content":"     * @param i The parameter \"i\" is an integer representing the index of the task to retrieve from the \"tasks\" list.","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"nuyer"},"content":"     * @return The method is returning a Task object.","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"nuyer"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"nuyer"},"content":"    public Task get(int i) {","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"nuyer"},"content":"        return tasks.get(i);","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"nuyer"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"nuyer"},"content":"     * The add() function adds a Task object to a list of tasks.","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"nuyer"},"content":"     * ","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"nuyer"},"content":"     * @param t The parameter \"t\" is of type \"Task\".","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"nuyer"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"nuyer"},"content":"    public void add(Task t) {","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"nuyer"},"content":"        tasks.add(t);","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"nuyer"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"nuyer"},"content":"     * The remove function removes an element at the specified index from a list.","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"nuyer"},"content":"     * ","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"nuyer"},"content":"     * @param i The parameter \"i\" is an integer representing the index of the element to be removed from the \"tasks\"","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"nuyer"},"content":"     * list.","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"nuyer"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"nuyer"},"content":"    public void remove(int i) {","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"nuyer"},"content":"        tasks.remove(i);","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"nuyer"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"nuyer":62}},{"path":"src/main/java/duke/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nuyer"},"content":"package duke.tasks;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"nuyer"},"content":"import java.io.Serializable;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"nuyer"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"nuyer"},"content":" * The Todo class represents a task with only description","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"nuyer"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"nuyer"},"content":"public class Todo extends Task implements Serializable {","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"nuyer"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"nuyer"},"content":"        super(description);","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"nuyer"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"nuyer":12}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"nuyer"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"nuyer"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"nuyer"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"nuyer"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"nuyer"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"nuyer"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"nuyer"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"nuyer"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"nuyer"},"content":"        \u003cLabel fx:id\u003d\"dialog\" graphicTextGap\u003d\"5.0\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"nuyer"},"content":"         \u003cfont\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"nuyer"},"content":"            \u003cFont name\u003d\"Baloo Da 2 SemiBold\" size\u003d\"14.0\" /\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"nuyer"},"content":"         \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"nuyer"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"nuyer"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"nuyer"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"nuyer"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"nuyer"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"nuyer"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"nuyer":20}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"nuyer"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"nuyer"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"nuyer"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"nuyer"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"nuyer"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"nuyer"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"nuyer"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"nuyer"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"nuyer"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"nuyer"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"nuyer"},"content":"         \u003cfont\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"nuyer"},"content":"            \u003cFont name\u003d\"Arial\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"nuyer"},"content":"         \u003c/font\u003e\u003c/TextField\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"nuyer"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" style\u003d\"-fx-background-color: #1953A6;\" text\u003d\"Send\" textFill\u003d\"WHITE\"\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"nuyer"},"content":"         \u003cfont\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"nuyer"},"content":"            \u003cFont name\u003d\"AppleGothic Regular\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"nuyer"},"content":"         \u003c/font\u003e\u003c/Button\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"nuyer"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"nuyer"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"nuyer"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"nuyer"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"nuyer"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"nuyer"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"nuyer"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"nuyer":26}},{"path":"src/test/java/DeadlineCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nuyer"},"content":"import duke.DukeException.DukeException;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"nuyer"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"nuyer"},"content":"import duke.commands.DeadlineCommand;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"nuyer"},"content":"import java.util.List;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"nuyer"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"nuyer"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"nuyer"},"content":"public class DeadlineCommandTest {","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"nuyer"},"content":"    @Test","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"nuyer"},"content":"    public void execute_validInput_success() {","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"nuyer"},"content":"        DeadlineCommand deadlineCommand \u003d new DeadlineCommand(\"Finish homework /by 07/02/2024 1800\");","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"nuyer"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"nuyer"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"nuyer"},"content":"            List\u003cString\u003e messages \u003d deadlineCommand.execute(tasks);","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"nuyer"},"content":"            assertEquals(3, messages.size());","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"nuyer"},"content":"            assertEquals(\"Got it. I\u0027ve added this task:\", messages.get(0));","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"nuyer"},"content":"            assertEquals(\"added: [D][ ] Finish homework (by: 18:00 Feb 07 2024)\", messages.get(1));","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"nuyer"},"content":"            assertEquals(\"Now you have 1 tasks in the list.\", messages.get(2));","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"nuyer"},"content":"            assertEquals(1, tasks.size());","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"nuyer"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"nuyer"},"content":"            fail();","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"nuyer"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"nuyer"},"content":"    @Test","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"nuyer"},"content":"    public void execute_invalidFormat_exceptionThrown() {","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"nuyer"},"content":"        DeadlineCommand deadlineCommand \u003d new DeadlineCommand(\"Finish homework by 07/02/2024 1800\");","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"nuyer"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"nuyer"},"content":"        assertThrows(DukeException.class, () -\u003e deadlineCommand.execute(tasks));","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"nuyer"},"content":"    @Test","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"nuyer"},"content":"    public void execute_invalidDateTimeFormat_exceptionThrown() {","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"nuyer"},"content":"        DeadlineCommand deadlineCommand \u003d new DeadlineCommand(\"Finish homework /by 07-02-2024 1800\");","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"nuyer"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"nuyer"},"content":"        assertThrows(DukeException.class, () -\u003e deadlineCommand.execute(tasks));","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"nuyer"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"nuyer":41}},{"path":"src/test/java/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nuyer"},"content":"import duke.tasks.Event;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"nuyer"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"nuyer"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"nuyer"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"nuyer"},"content":"public class EventTest {","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"nuyer"},"content":"    @Test","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"nuyer"},"content":"    public void testToString_singleDayEvent() {","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"nuyer"},"content":"        LocalDateTime startDateTime \u003d LocalDateTime.of(2024, 2, 7, 10, 0); // Example start date and time","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"nuyer"},"content":"        LocalDateTime endDateTime \u003d LocalDateTime.of(2024, 2, 7, 12, 0); // Example end date and time","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"nuyer"},"content":"        Event event \u003d new Event(\"Meeting\", startDateTime, endDateTime);","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"nuyer"},"content":"        String expected \u003d \"[E][ ] Meeting(from: 10:00 Feb 07 2024 to: 12:00 Feb 07 2024)\";","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"nuyer"},"content":"        String actual \u003d event.toString();","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"nuyer"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"nuyer"},"content":"    @Test","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"nuyer"},"content":"    public void testToString_multiDayEvent() {","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"nuyer"},"content":"        LocalDateTime startDateTime \u003d LocalDateTime.of(2024, 2, 7, 10, 0); // Example start date and time","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"nuyer"},"content":"        LocalDateTime endDateTime \u003d LocalDateTime.of(2024, 2, 9, 12, 0); // Example end date and time","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"nuyer"},"content":"        Event event \u003d new Event(\"Conference\", startDateTime, endDateTime);","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"nuyer"},"content":"        String expected \u003d \"[E][ ] Conference(from: 10:00 Feb 07 2024 to: 12:00 Feb 09 2024)\";","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"nuyer"},"content":"        String actual \u003d event.toString();","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"nuyer"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"nuyer"},"content":"    @Test","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"nuyer"},"content":"    public void testToString_sameStartAndEndDateTime() {","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"nuyer"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.of(2024, 2, 7, 10, 0); // Example date and time","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"nuyer"},"content":"        Event event \u003d new Event(\"Workshop\", dateTime, dateTime);","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"nuyer"},"content":"        String expected \u003d \"[E][ ] Workshop(from: 10:00 Feb 07 2024 to: 10:00 Feb 07 2024)\";","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"nuyer"},"content":"        String actual \u003d event.toString();","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"nuyer"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"nuyer"},"content":"    @Test","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"nuyer"},"content":"    public void testToString_descriptionWithSpecialCharacters() {","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"nuyer"},"content":"        LocalDateTime startDateTime \u003d LocalDateTime.of(2024, 2, 7, 10, 0); // Example start date and time","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"nuyer"},"content":"        LocalDateTime endDateTime \u003d LocalDateTime.of(2024, 2, 7, 12, 0); // Example end date and time","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"nuyer"},"content":"        Event event \u003d new Event(\"Team\u0027s Meeting @Office\", startDateTime, endDateTime);","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"nuyer"},"content":"        String expected \u003d \"[E][ ] Team\u0027s Meeting @Office(from: 10:00 Feb 07 2024 to: 12:00 Feb 07 2024)\";","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"nuyer"},"content":"        String actual \u003d event.toString();","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"nuyer"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"nuyer"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"nuyer"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"nuyer"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"nuyer":54}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nuyer"},"content":"todo borrow book","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"nuyer"},"content":"todo Read a book","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"nuyer"},"content":"event Attend meeting /from 12:00 to/ 14:00","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"nuyer"},"content":"mark 1","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"nuyer"},"content":"unmark 0","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"nuyer"},"content":"deadline","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"nuyer"},"content":"delete 0","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"nuyer"},"content":"list","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"nuyer"},"content":"deadline CS2101 slides /by sunday","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"nuyer"},"content":"event group project meeting /from 11am /to 12pm","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"nuyer"},"content":"delete 1","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"nuyer"},"content":"mark 2","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"nuyer"},"content":"deadline /from 12:00 to/ 14:00","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"nuyer"},"content":"list","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"nuyer"},"content":"unmark 3","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"nuyer"},"content":"delete","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"nuyer"},"content":"deadline","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"nuyer"},"content":"todo study","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"nuyer"},"content":"list","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"nuyer"},"content":"bye","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"nuyer":20}}]
