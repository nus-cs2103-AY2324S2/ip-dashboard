[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"# Lamball Chatbot üêê ","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"\u003e Not to be confused with _Wooloo_, nope, not similar at all!","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":"Lamball is a helpful pal that you never knew you needed. ","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":"- [x] Helps you manage your tasks and deadlines","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":"- [ ] Reminds you about them (coming soon!)","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"- [x] Guides you through the commands!","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"All you need to do is:","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":"1. Find the latest release [here](https://github.com/ongzhili/ip/releases)","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":"2. Double click on the file.","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":"3. Add your tasks.","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":"And it is ","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"ongzhili"},"content":"- **FREE!**","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"ongzhili"},"content":"- runs in 1 `main` command!","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"ongzhili"},"content":"```java","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"ongzhili"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"ongzhili"},"content":"        new Lamball().run();","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ongzhili":19,"-":5}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"ongzhili"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"ongzhili"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"ongzhili"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"ongzhili"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"ongzhili"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"ongzhili"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"ongzhili"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"ongzhili"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"ongzhili"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"ongzhili"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"ongzhili"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"ongzhili"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"ongzhili"},"content":"    mainClass \u003d \"lamball.Launcher\"","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"ongzhili"},"content":"    archiveFileName \u003d \u0027lamball.jar\u0027","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"ongzhili"},"content":"//    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"ongzhili"},"content":"//    archiveClassifier \u003d null","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"ongzhili"},"content":"//    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"ongzhili"},"content":"checkstyle {","lastModifiedDate":"2024-02-05"},{"lineNumber":58,"author":{"gitId":"ongzhili"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-02-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ongzhili":23,"-":40}},{"path":"src/main/java/lamball/Lamball.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"package lamball;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":"import lamball.command.Command;","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"ongzhili"},"content":"import lamball.ui.DialogBox;","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"ongzhili"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"ongzhili"},"content":" * Main chat bot class that is tasked with initializing and relaying user inputs to the various classes.","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"ongzhili"},"content":" *","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"ongzhili"},"content":" * @author ongzhili","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"ongzhili"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"ongzhili"},"content":"public class Lamball extends Application {","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"ongzhili"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"ongzhili"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"ongzhili"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"ongzhili"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"ongzhili"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"ongzhili"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"ongzhili"},"content":"    private Scene scene;","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"ongzhili"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"ongzhili"},"content":"    private Ui ui;","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"ongzhili"},"content":"     * Constructor for Lamball chatbot.","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"ongzhili"},"content":"    public Lamball() {","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"ongzhili"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"ongzhili"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"ongzhili"},"content":"    private String initialize() {","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"ongzhili"},"content":"        ui.greetingMessage();","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"ongzhili"},"content":"        String guiText \u003d Storage.obtainSavedFile(this);","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"ongzhili"},"content":"        return guiText;","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"ongzhili"},"content":"     * Parse for initial list of commands","lastModifiedDate":"2024-02-12"},{"lineNumber":54,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"ongzhili"},"content":"     * @param msg Command to parse.","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"ongzhili"},"content":"     * @throws LamballParseException if invalid command is provided.","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"ongzhili"},"content":"    public void initParse(String msg) throws LamballParseException {","lastModifiedDate":"2024-02-12"},{"lineNumber":59,"author":{"gitId":"ongzhili"},"content":"        Command parsed \u003d Parser.parse(msg, tasks, true);","lastModifiedDate":"2024-02-12"},{"lineNumber":60,"author":{"gitId":"ongzhili"},"content":"        parsed.run();","lastModifiedDate":"2024-02-12"},{"lineNumber":61,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"ongzhili"},"content":"     * Runs Lamball chatbot.","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"ongzhili"},"content":"    public void run() {","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"ongzhili"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-29"},{"lineNumber":69,"author":{"gitId":"ongzhili"},"content":"        boolean isActive \u003d true;","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":71,"author":{"gitId":"ongzhili"},"content":"        this.initialize();","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"ongzhili"},"content":"        while (isActive) {","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"ongzhili"},"content":"            System.out.print(\"    You:\");","lastModifiedDate":"2024-01-29"},{"lineNumber":75,"author":{"gitId":"ongzhili"},"content":"            String userInput \u003d scanner.nextLine();","lastModifiedDate":"2024-01-29"},{"lineNumber":76,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":77,"author":{"gitId":"ongzhili"},"content":"            // Echo the user\u0027s command","lastModifiedDate":"2024-01-29"},{"lineNumber":78,"author":{"gitId":"ongzhili"},"content":"            try {","lastModifiedDate":"2024-01-29"},{"lineNumber":79,"author":{"gitId":"ongzhili"},"content":"                Command comd \u003d Parser.parse(userInput, tasks, false);","lastModifiedDate":"2024-02-12"},{"lineNumber":80,"author":{"gitId":"ongzhili"},"content":"                isActive \u003d comd.run();","lastModifiedDate":"2024-02-12"},{"lineNumber":81,"author":{"gitId":"ongzhili"},"content":"                if (!isActive) {","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"ongzhili"},"content":"                    ui.goodbyeMessage();","lastModifiedDate":"2024-01-29"},{"lineNumber":83,"author":{"gitId":"ongzhili"},"content":"                } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":84,"author":{"gitId":"ongzhili"},"content":"                    ui.displayAction(tasks.getLastDoneTask());","lastModifiedDate":"2024-02-05"},{"lineNumber":85,"author":{"gitId":"ongzhili"},"content":"                }","lastModifiedDate":"2024-01-29"},{"lineNumber":86,"author":{"gitId":"ongzhili"},"content":"            } catch (LamballParseException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":87,"author":{"gitId":"ongzhili"},"content":"                ui.displayError(e);","lastModifiedDate":"2024-01-29"},{"lineNumber":88,"author":{"gitId":"ongzhili"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":89,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":90,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":91,"author":{"gitId":"ongzhili"},"content":"        scanner.close();","lastModifiedDate":"2024-01-29"},{"lineNumber":92,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":93,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"ongzhili"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-29"},{"lineNumber":95,"author":{"gitId":"ongzhili"},"content":"        new Lamball().run();","lastModifiedDate":"2024-01-29"},{"lineNumber":96,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":97,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":98,"author":{"gitId":"ongzhili"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":99,"author":{"gitId":"ongzhili"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-05"},{"lineNumber":100,"author":{"gitId":"ongzhili"},"content":"        //Step 1. Setting up required components","lastModifiedDate":"2024-02-05"},{"lineNumber":101,"author":{"gitId":"ongzhili"},"content":"        String initialDisplayText \u003d this.initialize();","lastModifiedDate":"2024-02-05"},{"lineNumber":102,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":103,"author":{"gitId":"ongzhili"},"content":"        //The container for the content of the chat to scroll.","lastModifiedDate":"2024-02-05"},{"lineNumber":104,"author":{"gitId":"ongzhili"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2024-02-05"},{"lineNumber":105,"author":{"gitId":"ongzhili"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2024-02-05"},{"lineNumber":106,"author":{"gitId":"ongzhili"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2024-02-05"},{"lineNumber":107,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":108,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":109,"author":{"gitId":"ongzhili"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2024-02-05"},{"lineNumber":110,"author":{"gitId":"ongzhili"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2024-02-05"},{"lineNumber":111,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":112,"author":{"gitId":"ongzhili"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2024-02-05"},{"lineNumber":113,"author":{"gitId":"ongzhili"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2024-02-05"},{"lineNumber":114,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":115,"author":{"gitId":"ongzhili"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2024-02-05"},{"lineNumber":116,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":117,"author":{"gitId":"ongzhili"},"content":"        stage.setScene(scene);","lastModifiedDate":"2024-02-05"},{"lineNumber":118,"author":{"gitId":"ongzhili"},"content":"        stage.show();","lastModifiedDate":"2024-02-05"},{"lineNumber":119,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":120,"author":{"gitId":"ongzhili"},"content":"        //Step 2. Formatting the window to look as expected","lastModifiedDate":"2024-02-05"},{"lineNumber":121,"author":{"gitId":"ongzhili"},"content":"        stage.setTitle(\"Lamball\");","lastModifiedDate":"2024-02-05"},{"lineNumber":122,"author":{"gitId":"ongzhili"},"content":"        stage.setResizable(false);","lastModifiedDate":"2024-02-05"},{"lineNumber":123,"author":{"gitId":"ongzhili"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2024-02-05"},{"lineNumber":124,"author":{"gitId":"ongzhili"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2024-02-05"},{"lineNumber":125,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":126,"author":{"gitId":"ongzhili"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2024-02-05"},{"lineNumber":127,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":128,"author":{"gitId":"ongzhili"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2024-02-05"},{"lineNumber":129,"author":{"gitId":"ongzhili"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2024-02-05"},{"lineNumber":130,"author":{"gitId":"ongzhili"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2024-02-05"},{"lineNumber":131,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":132,"author":{"gitId":"ongzhili"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2024-02-05"},{"lineNumber":133,"author":{"gitId":"ongzhili"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2024-02-05"},{"lineNumber":134,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":135,"author":{"gitId":"ongzhili"},"content":"        //You will need to import `javafx.scene.layout.Region` for this.","lastModifiedDate":"2024-02-05"},{"lineNumber":136,"author":{"gitId":"ongzhili"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2024-02-05"},{"lineNumber":137,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":138,"author":{"gitId":"ongzhili"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2024-02-05"},{"lineNumber":139,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":140,"author":{"gitId":"ongzhili"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2024-02-05"},{"lineNumber":141,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":142,"author":{"gitId":"ongzhili"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2024-02-05"},{"lineNumber":143,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":144,"author":{"gitId":"ongzhili"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2024-02-05"},{"lineNumber":145,"author":{"gitId":"ongzhili"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2024-02-05"},{"lineNumber":146,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":147,"author":{"gitId":"ongzhili"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2024-02-05"},{"lineNumber":148,"author":{"gitId":"ongzhili"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2024-02-05"},{"lineNumber":149,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":150,"author":{"gitId":"ongzhili"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2024-02-05"},{"lineNumber":151,"author":{"gitId":"ongzhili"},"content":"                DialogBox.getLamballDialog(","lastModifiedDate":"2024-02-05"},{"lineNumber":152,"author":{"gitId":"ongzhili"},"content":"                        new Label(initialDisplayText),","lastModifiedDate":"2024-02-05"},{"lineNumber":153,"author":{"gitId":"ongzhili"},"content":"                        new ImageView(duke))","lastModifiedDate":"2024-02-05"},{"lineNumber":154,"author":{"gitId":"ongzhili"},"content":"        );","lastModifiedDate":"2024-02-05"},{"lineNumber":155,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":156,"author":{"gitId":"ongzhili"},"content":"        //Part 3. Add functionality to handle user input.","lastModifiedDate":"2024-02-05"},{"lineNumber":157,"author":{"gitId":"ongzhili"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2024-02-05"},{"lineNumber":158,"author":{"gitId":"ongzhili"},"content":"            handleUserInput();","lastModifiedDate":"2024-02-05"},{"lineNumber":159,"author":{"gitId":"ongzhili"},"content":"        });","lastModifiedDate":"2024-02-05"},{"lineNumber":160,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":161,"author":{"gitId":"ongzhili"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2024-02-05"},{"lineNumber":162,"author":{"gitId":"ongzhili"},"content":"            handleUserInput();","lastModifiedDate":"2024-02-05"},{"lineNumber":163,"author":{"gitId":"ongzhili"},"content":"        });","lastModifiedDate":"2024-02-05"},{"lineNumber":164,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":165,"author":{"gitId":"ongzhili"},"content":"        //Scroll down to the end every time dialogContainer\u0027s height changes.","lastModifiedDate":"2024-02-05"},{"lineNumber":166,"author":{"gitId":"ongzhili"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2024-02-05"},{"lineNumber":167,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":168,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":169,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":170,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":171,"author":{"gitId":"ongzhili"},"content":"     * Iteration 1:","lastModifiedDate":"2024-02-05"},{"lineNumber":172,"author":{"gitId":"ongzhili"},"content":"     * Creates a label with the specified text and adds it to the dialog container.","lastModifiedDate":"2024-02-05"},{"lineNumber":173,"author":{"gitId":"ongzhili"},"content":"     * @param text String containing text to add","lastModifiedDate":"2024-02-05"},{"lineNumber":174,"author":{"gitId":"ongzhili"},"content":"     * @return a label with the specified text that has word wrap enabled.","lastModifiedDate":"2024-02-05"},{"lineNumber":175,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":176,"author":{"gitId":"ongzhili"},"content":"    private Label getDialogLabel(String text) {","lastModifiedDate":"2024-02-05"},{"lineNumber":177,"author":{"gitId":"ongzhili"},"content":"        // You will need to import `javafx.scene.control.Label`.","lastModifiedDate":"2024-02-05"},{"lineNumber":178,"author":{"gitId":"ongzhili"},"content":"        Label textToAdd \u003d new Label(text);","lastModifiedDate":"2024-02-05"},{"lineNumber":179,"author":{"gitId":"ongzhili"},"content":"        textToAdd.setWrapText(true);","lastModifiedDate":"2024-02-05"},{"lineNumber":180,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":181,"author":{"gitId":"ongzhili"},"content":"        return textToAdd;","lastModifiedDate":"2024-02-05"},{"lineNumber":182,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":183,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":184,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":185,"author":{"gitId":"ongzhili"},"content":"     * Iteration 2:","lastModifiedDate":"2024-02-05"},{"lineNumber":186,"author":{"gitId":"ongzhili"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-05"},{"lineNumber":187,"author":{"gitId":"ongzhili"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-05"},{"lineNumber":188,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":189,"author":{"gitId":"ongzhili"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-05"},{"lineNumber":190,"author":{"gitId":"ongzhili"},"content":"        Label userText \u003d new Label(userInput.getText());","lastModifiedDate":"2024-02-05"},{"lineNumber":191,"author":{"gitId":"ongzhili"},"content":"        Label lamballText \u003d new Label(getResponse(userInput.getText()));","lastModifiedDate":"2024-02-05"},{"lineNumber":192,"author":{"gitId":"ongzhili"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-05"},{"lineNumber":193,"author":{"gitId":"ongzhili"},"content":"                DialogBox.getUserDialog(userText, new ImageView(user)),","lastModifiedDate":"2024-02-05"},{"lineNumber":194,"author":{"gitId":"ongzhili"},"content":"                DialogBox.getLamballDialog(lamballText, new ImageView(duke))","lastModifiedDate":"2024-02-05"},{"lineNumber":195,"author":{"gitId":"ongzhili"},"content":"        );","lastModifiedDate":"2024-02-05"},{"lineNumber":196,"author":{"gitId":"ongzhili"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-05"},{"lineNumber":197,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":198,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":199,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":200,"author":{"gitId":"ongzhili"},"content":"     * Generates response to user input.","lastModifiedDate":"2024-02-05"},{"lineNumber":201,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":202,"author":{"gitId":"ongzhili"},"content":"     * @return Responds appropriately to given input.","lastModifiedDate":"2024-02-05"},{"lineNumber":203,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":204,"author":{"gitId":"ongzhili"},"content":"    private String getResponse(String input) {","lastModifiedDate":"2024-02-05"},{"lineNumber":205,"author":{"gitId":"ongzhili"},"content":"        String response \u003d \"\";","lastModifiedDate":"2024-02-05"},{"lineNumber":206,"author":{"gitId":"ongzhili"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":207,"author":{"gitId":"ongzhili"},"content":"            Command comd \u003d Parser.parse(input, tasks, false);","lastModifiedDate":"2024-02-12"},{"lineNumber":208,"author":{"gitId":"ongzhili"},"content":"            boolean isActive \u003d comd.run();","lastModifiedDate":"2024-02-12"},{"lineNumber":209,"author":{"gitId":"ongzhili"},"content":"            if (!isActive) {","lastModifiedDate":"2024-02-05"},{"lineNumber":210,"author":{"gitId":"ongzhili"},"content":"                response \u003d ui.goodbyeMessage();","lastModifiedDate":"2024-02-05"},{"lineNumber":211,"author":{"gitId":"ongzhili"},"content":"            } else {","lastModifiedDate":"2024-02-05"},{"lineNumber":212,"author":{"gitId":"ongzhili"},"content":"                response \u003d ui.displayAction(tasks.getLastDoneTask());","lastModifiedDate":"2024-02-05"},{"lineNumber":213,"author":{"gitId":"ongzhili"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":214,"author":{"gitId":"ongzhili"},"content":"        } catch (LamballParseException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":215,"author":{"gitId":"ongzhili"},"content":"            response \u003d ui.displayError(e);","lastModifiedDate":"2024-02-05"},{"lineNumber":216,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":217,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":218,"author":{"gitId":"ongzhili"},"content":"        return response;","lastModifiedDate":"2024-02-05"},{"lineNumber":219,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":220,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-01-29"},{"lineNumber":221,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":222,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"ongzhili":222}},{"path":"src/main/java/lamball/LamballParseException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"package lamball;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":" * An exception that is thrown when the user inputs invalid commands.","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":" *","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":" * @author ongzhili","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"public class LamballParseException extends Exception {","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"     * Constructor for Lamball parse exception.","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":"     * @param message Error message.","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":"    public LamballParseException(String message) {","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":"        super(message);","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"ongzhili":17}},{"path":"src/main/java/lamball/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"package lamball;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"public class Launcher {","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"        Application.launch(Lamball.class, args);","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"ongzhili":12}},{"path":"src/main/java/lamball/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"package lamball;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"import lamball.command.ByeCommand;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":"import lamball.command.Command;","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":"import lamball.command.DeadlineCommand;","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":"import lamball.command.DeleteCommand;","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":"import lamball.command.EventCommand;","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"import lamball.command.FindCommand;","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"import lamball.command.MarkCommand;","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"import lamball.command.PrintListCommand;","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":"import lamball.command.ToDoCommand;","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":"import lamball.command.UnMarkCommand;","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":" *  Contains methods related to parsing user\u0027s inputs.","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":" *","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":" * @author ongzhili","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"ongzhili"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"ongzhili"},"content":"public class Parser {","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"ongzhili"},"content":"     * Parses command into String array in the form command type, arguments.","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"ongzhili"},"content":"     * @param msg Original input command.","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"ongzhili"},"content":"     * @return String array of length 2, containing command type and arguments respectively.","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"ongzhili"},"content":"     * @throws LamballParseException if invalid arguments are parsed.","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"ongzhili"},"content":"    public static Command parse(String msg, TaskList tasks, boolean isInit) throws LamballParseException {","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"ongzhili"},"content":"        String[] parts \u003d msg.split(\" \", 2);","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"ongzhili"},"content":"        switch (parts[0]) {","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"ongzhili"},"content":"        case \"delete\": {","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"ongzhili"},"content":"            if (parts.length \u003c 2 || !parts[1].matches(\"-?\\\\d+\")) {","lastModifiedDate":"2024-02-12"},{"lineNumber":33,"author":{"gitId":"ongzhili"},"content":"                throw new LamballParseException(\"Invalid number, baa.\");","lastModifiedDate":"2024-02-12"},{"lineNumber":34,"author":{"gitId":"ongzhili"},"content":"            } else {","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"ongzhili"},"content":"                int idx \u003d Integer.valueOf(parts[1]) - 1;","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"ongzhili"},"content":"                if (idx \u003e\u003d tasks.size() || idx \u003c 0) {","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"ongzhili"},"content":"                    throw new LamballParseException(\"Taaask index out of range, baa.\");","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"ongzhili"},"content":"                }","lastModifiedDate":"2024-02-12"},{"lineNumber":39,"author":{"gitId":"ongzhili"},"content":"            }","lastModifiedDate":"2024-02-12"},{"lineNumber":40,"author":{"gitId":"ongzhili"},"content":"            int idx \u003d Integer.valueOf(parts[1]) - 1;","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"ongzhili"},"content":"            if (idx \u003e\u003d tasks.size() || idx \u003c 0) {","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"ongzhili"},"content":"                throw new LamballParseException(\"Taaask index out of range, baa.\");","lastModifiedDate":"2024-02-12"},{"lineNumber":43,"author":{"gitId":"ongzhili"},"content":"            }","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"ongzhili"},"content":"            return new DeleteCommand(idx, tasks);","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":46,"author":{"gitId":"ongzhili"},"content":"        case \"mark\": {","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"ongzhili"},"content":"            if (parts.length \u003c 2 || !parts[1].matches(\"-?\\\\d+\")) {","lastModifiedDate":"2024-02-12"},{"lineNumber":48,"author":{"gitId":"ongzhili"},"content":"                throw new LamballParseException(\"Invalid number, baa.\");","lastModifiedDate":"2024-02-12"},{"lineNumber":49,"author":{"gitId":"ongzhili"},"content":"            }","lastModifiedDate":"2024-02-12"},{"lineNumber":50,"author":{"gitId":"ongzhili"},"content":"            int idx \u003d Integer.valueOf(parts[1]) - 1;","lastModifiedDate":"2024-02-12"},{"lineNumber":51,"author":{"gitId":"ongzhili"},"content":"            if (idx \u003e\u003d tasks.size() || idx \u003c 0) {","lastModifiedDate":"2024-02-12"},{"lineNumber":52,"author":{"gitId":"ongzhili"},"content":"                throw new LamballParseException(\"Taaask index out of range, baa.\");","lastModifiedDate":"2024-02-12"},{"lineNumber":53,"author":{"gitId":"ongzhili"},"content":"            }","lastModifiedDate":"2024-02-12"},{"lineNumber":54,"author":{"gitId":"ongzhili"},"content":"            return new MarkCommand(idx, tasks, isInit);","lastModifiedDate":"2024-02-12"},{"lineNumber":55,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":56,"author":{"gitId":"ongzhili"},"content":"        case \"unmark\": {","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"ongzhili"},"content":"            if (parts.length \u003c 2 || !parts[1].matches(\"-?\\\\d+\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"ongzhili"},"content":"                throw new LamballParseException(\"Invalid number, baa.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"ongzhili"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"ongzhili"},"content":"            int idx \u003d Integer.valueOf(parts[1]) - 1;","lastModifiedDate":"2024-02-12"},{"lineNumber":61,"author":{"gitId":"ongzhili"},"content":"            if (idx \u003e\u003d tasks.size() || idx \u003c 0) {","lastModifiedDate":"2024-02-12"},{"lineNumber":62,"author":{"gitId":"ongzhili"},"content":"                throw new LamballParseException(\"Taaask index out of range, baa.\");","lastModifiedDate":"2024-02-12"},{"lineNumber":63,"author":{"gitId":"ongzhili"},"content":"            }","lastModifiedDate":"2024-02-12"},{"lineNumber":64,"author":{"gitId":"ongzhili"},"content":"            return new UnMarkCommand(idx, tasks);","lastModifiedDate":"2024-02-12"},{"lineNumber":65,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":66,"author":{"gitId":"ongzhili"},"content":"        case \"bye\": {","lastModifiedDate":"2024-02-12"},{"lineNumber":67,"author":{"gitId":"ongzhili"},"content":"            if (parts.length \u003e 1) {","lastModifiedDate":"2024-02-12"},{"lineNumber":68,"author":{"gitId":"ongzhili"},"content":"                throw new LamballParseException(\"Do not type anything after \\\"\" + parts[0] + \"\\\"\");","lastModifiedDate":"2024-02-12"},{"lineNumber":69,"author":{"gitId":"ongzhili"},"content":"            }","lastModifiedDate":"2024-02-12"},{"lineNumber":70,"author":{"gitId":"ongzhili"},"content":"            return new ByeCommand();","lastModifiedDate":"2024-02-12"},{"lineNumber":71,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"ongzhili"},"content":"        case \"list\":","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"ongzhili"},"content":"            if (parts.length \u003e 1) {","lastModifiedDate":"2024-01-30"},{"lineNumber":74,"author":{"gitId":"ongzhili"},"content":"                throw new LamballParseException(\"Do not type anything after \\\"\" + parts[0] + \"\\\"\");","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"ongzhili"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":76,"author":{"gitId":"ongzhili"},"content":"            return new PrintListCommand(tasks);","lastModifiedDate":"2024-02-12"},{"lineNumber":77,"author":{"gitId":"ongzhili"},"content":"        case \"todo\":","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"ongzhili"},"content":"            if (parts.length \u003c 2 || parts[1] \u003d\u003d null || parts[1].trim().isEmpty()) {","lastModifiedDate":"2024-02-12"},{"lineNumber":79,"author":{"gitId":"ongzhili"},"content":"                // Checks if empty string (nothing after command) or only whitespaces","lastModifiedDate":"2024-02-12"},{"lineNumber":80,"author":{"gitId":"ongzhili"},"content":"                throw new LamballParseException(\"Your \" + parts[0] + \" field is empty, baaaaka.\");","lastModifiedDate":"2024-02-12"},{"lineNumber":81,"author":{"gitId":"ongzhili"},"content":"            }","lastModifiedDate":"2024-02-12"},{"lineNumber":82,"author":{"gitId":"ongzhili"},"content":"            return new ToDoCommand(parts[1], tasks, isInit);","lastModifiedDate":"2024-02-12"},{"lineNumber":83,"author":{"gitId":"ongzhili"},"content":"        case \"deadline\": {","lastModifiedDate":"2024-02-12"},{"lineNumber":84,"author":{"gitId":"ongzhili"},"content":"            if (parts.length \u003c 2 || parts[1] \u003d\u003d null || parts[1].trim().isEmpty()) {","lastModifiedDate":"2024-02-12"},{"lineNumber":85,"author":{"gitId":"ongzhili"},"content":"                // Checks if empty string (nothing after command) or only whitespaces","lastModifiedDate":"2024-02-12"},{"lineNumber":86,"author":{"gitId":"ongzhili"},"content":"                throw new LamballParseException(\"Your \" + parts[0] + \" field is empty, baaaaka.\");","lastModifiedDate":"2024-02-12"},{"lineNumber":87,"author":{"gitId":"ongzhili"},"content":"            }","lastModifiedDate":"2024-02-12"},{"lineNumber":88,"author":{"gitId":"ongzhili"},"content":"            String[] furtherSplit \u003d parts[1].split(\" /\", 2);","lastModifiedDate":"2024-02-12"},{"lineNumber":89,"author":{"gitId":"ongzhili"},"content":"            if (furtherSplit.length \u003c 2 || !furtherSplit[1].substring(0, 3).equals(\"by \")) {","lastModifiedDate":"2024-02-12"},{"lineNumber":90,"author":{"gitId":"ongzhili"},"content":"                throw new LamballParseException(\"Deadline is in the wrong formaaaaaaat, baa. :(\\n    Correct fo\"","lastModifiedDate":"2024-02-12"},{"lineNumber":91,"author":{"gitId":"ongzhili"},"content":"                        + \"rmaaat is: deadline \u003cname\u003e /by \u003ctime\u003e, baa.\");","lastModifiedDate":"2024-02-12"},{"lineNumber":92,"author":{"gitId":"ongzhili"},"content":"            }","lastModifiedDate":"2024-02-12"},{"lineNumber":93,"author":{"gitId":"ongzhili"},"content":"            return new DeadlineCommand(furtherSplit, tasks, isInit);","lastModifiedDate":"2024-02-12"},{"lineNumber":94,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":95,"author":{"gitId":"ongzhili"},"content":"        case \"event\": {","lastModifiedDate":"2024-01-29"},{"lineNumber":96,"author":{"gitId":"ongzhili"},"content":"            if (parts.length \u003c 2 || parts[1] \u003d\u003d null || parts[1].trim().isEmpty()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":97,"author":{"gitId":"ongzhili"},"content":"                // Checks if empty string (nothing after command) or only whitespaces","lastModifiedDate":"2024-01-30"},{"lineNumber":98,"author":{"gitId":"ongzhili"},"content":"                throw new LamballParseException(\"Your \" + parts[0] + \" field is empty, baaaaka.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":99,"author":{"gitId":"ongzhili"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":100,"author":{"gitId":"ongzhili"},"content":"            String[] furtherSplit \u003d parts[1].split(\" /\", 3);","lastModifiedDate":"2024-02-12"},{"lineNumber":101,"author":{"gitId":"ongzhili"},"content":"            if (furtherSplit.length \u003c 3 || !furtherSplit[1].substring(0, 5).equals(\"from \")","lastModifiedDate":"2024-02-12"},{"lineNumber":102,"author":{"gitId":"ongzhili"},"content":"                    || !furtherSplit[2].substring(0, 3).equals(\"to \")) {","lastModifiedDate":"2024-02-12"},{"lineNumber":103,"author":{"gitId":"ongzhili"},"content":"                throw new LamballParseException(\"Event is in the wrong formaaaaaaat, baa. :(\\n    Correct \"","lastModifiedDate":"2024-02-12"},{"lineNumber":104,"author":{"gitId":"ongzhili"},"content":"                        + \"formaaat is: event \u003cname\u003e /from \u003ctime\u003e /to \u003ctime\u003e, baa.\");","lastModifiedDate":"2024-02-12"},{"lineNumber":105,"author":{"gitId":"ongzhili"},"content":"            }","lastModifiedDate":"2024-02-12"},{"lineNumber":106,"author":{"gitId":"ongzhili"},"content":"            return new EventCommand(furtherSplit, tasks, isInit);","lastModifiedDate":"2024-02-12"},{"lineNumber":107,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":108,"author":{"gitId":"ongzhili"},"content":"        case \"find\": {","lastModifiedDate":"2024-01-31"},{"lineNumber":109,"author":{"gitId":"ongzhili"},"content":"            if (parts.length \u003c 2 || parts[1] \u003d\u003d null) {","lastModifiedDate":"2024-01-31"},{"lineNumber":110,"author":{"gitId":"ongzhili"},"content":"                throw new LamballParseException(\"Invalid query\");","lastModifiedDate":"2024-01-31"},{"lineNumber":111,"author":{"gitId":"ongzhili"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":112,"author":{"gitId":"ongzhili"},"content":"            return new FindCommand(parts[1], tasks);","lastModifiedDate":"2024-02-12"},{"lineNumber":113,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":114,"author":{"gitId":"ongzhili"},"content":"        default:","lastModifiedDate":"2024-01-29"},{"lineNumber":115,"author":{"gitId":"ongzhili"},"content":"            throw new LamballParseException(\"Sorry, I don\u0027t understaaaaaand your commaaaaand, baa. :(\");","lastModifiedDate":"2024-01-29"},{"lineNumber":116,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":117,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":118,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"ongzhili":118}},{"path":"src/main/java/lamball/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"package lamball;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"import java.io.File;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"import java.util.List;","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":" * Contains methods that pertain to file access and modification.","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":" *","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":" * @author ongzhili","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"ongzhili"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"ongzhili"},"content":"public class Storage {","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"ongzhili"},"content":"    protected static String filePath \u003d \"src/main/java/data/\";","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"ongzhili"},"content":"    protected static String tempFilePath \u003d \"src/main/java/data/tempfile.txt\";","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"ongzhili"},"content":"     * Obtains and initializes list from saved text file locally.","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"ongzhili"},"content":"     * @param lamb Initialized Lamball chatbot instance.","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"ongzhili"},"content":"     * @return Text for the GUI to display.","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"ongzhili"},"content":"    public static String obtainSavedFile(Lamball lamb) {","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"ongzhili"},"content":"        String returnVal \u003d \"\";","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"ongzhili"},"content":"        File folder \u003d new File(filePath);","lastModifiedDate":"2024-02-12"},{"lineNumber":34,"author":{"gitId":"ongzhili"},"content":"        if (!folder.exists()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"ongzhili"},"content":"            System.out.println(\"Folder does not exist. Creating folder...\");","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"ongzhili"},"content":"            returnVal +\u003d \"Folder does not exist. Creating folder...\\n\";","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"ongzhili"},"content":"            folder.mkdirs();","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"ongzhili"},"content":"        File savedList \u003d new File(filePath + \"/list.txt\");","lastModifiedDate":"2024-02-12"},{"lineNumber":40,"author":{"gitId":"ongzhili"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"ongzhili"},"content":"            // Try to create file","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"ongzhili"},"content":"            if (savedList.createNewFile()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"ongzhili"},"content":"                System.out.println(\"List created successfully at: \" + savedList.getAbsolutePath());","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"ongzhili"},"content":"                returnVal +\u003d \"List created successfully at: \" + savedList.getAbsolutePath() + \"\\n\";","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"ongzhili"},"content":"            } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"ongzhili"},"content":"                System.out.println(\"Seems like I haave helped you before, so no new list is needed!\");","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"ongzhili"},"content":"                returnVal +\u003d \"Seems like I haave helped you before, so no new list is needed!\\n\";","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"ongzhili"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"ongzhili"},"content":"            initializeListFromText(savedList, lamb);","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"ongzhili"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"ongzhili"},"content":"            System.err.println(\"An error occurred while creating the file: \" + e.getMessage());","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"ongzhili"},"content":"            returnVal +\u003d \"An error occurred while creating the file: \" + e.getMessage();","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"ongzhili"},"content":"            return returnVal;","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"ongzhili"},"content":"        return returnVal;","lastModifiedDate":"2024-02-12"},{"lineNumber":56,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"ongzhili"},"content":"    private static void initializeListFromText(File savedList, Lamball lamb) throws FileNotFoundException {","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"ongzhili"},"content":"        File tempFile \u003d new File(tempFilePath);","lastModifiedDate":"2024-02-12"},{"lineNumber":60,"author":{"gitId":"ongzhili"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"ongzhili"},"content":"            // Delete and creates a new tempfile","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"ongzhili"},"content":"            tempFile.delete();","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"ongzhili"},"content":"            tempFile.createNewFile();","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"ongzhili"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"ongzhili"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-01-29"},{"lineNumber":66,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":67,"author":{"gitId":"ongzhili"},"content":"        Scanner scanner \u003d new Scanner(savedList);","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"ongzhili"},"content":"        System.out.println(\"Initializing saved file...\");","lastModifiedDate":"2024-01-29"},{"lineNumber":69,"author":{"gitId":"ongzhili"},"content":"        int count \u003d 0;","lastModifiedDate":"2024-01-29"},{"lineNumber":70,"author":{"gitId":"ongzhili"},"content":"        while (scanner.hasNext()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":71,"author":{"gitId":"ongzhili"},"content":"            try {","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"ongzhili"},"content":"                // Parses every line of the saved file - if error, deletes line in the file and ignores command","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"ongzhili"},"content":"                String currLine \u003d scanner.nextLine();","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"ongzhili"},"content":"                String[] parts \u003d currLine.split(\" \\\\| \", 2);","lastModifiedDate":"2024-01-29"},{"lineNumber":75,"author":{"gitId":"ongzhili"},"content":"                // Means that it is not formatted correctly in the \u003c0 or 1\u003e | \u003ccommand\u003e format","lastModifiedDate":"2024-01-29"},{"lineNumber":76,"author":{"gitId":"ongzhili"},"content":"                if (parts.length !\u003d 2 || !(Integer.valueOf(parts[0]) \u003d\u003d 1 || Integer.valueOf(parts[0]) \u003d\u003d 0)) {","lastModifiedDate":"2024-01-29"},{"lineNumber":77,"author":{"gitId":"ongzhili"},"content":"                    throw new LamballParseException(\"Corrupt format, ignoring...\");","lastModifiedDate":"2024-01-29"},{"lineNumber":78,"author":{"gitId":"ongzhili"},"content":"                }","lastModifiedDate":"2024-01-29"},{"lineNumber":79,"author":{"gitId":"ongzhili"},"content":"                lamb.initParse(parts[1]);","lastModifiedDate":"2024-02-12"},{"lineNumber":80,"author":{"gitId":"ongzhili"},"content":"                count++;","lastModifiedDate":"2024-01-29"},{"lineNumber":81,"author":{"gitId":"ongzhili"},"content":"                // Marks task if first character is 1. Else does not.","lastModifiedDate":"2024-01-29"},{"lineNumber":82,"author":{"gitId":"ongzhili"},"content":"                if (Integer.valueOf(parts[0]) \u003d\u003d 1) {","lastModifiedDate":"2024-01-29"},{"lineNumber":83,"author":{"gitId":"ongzhili"},"content":"                    lamb.initParse(\"mark \" + count);","lastModifiedDate":"2024-02-12"},{"lineNumber":84,"author":{"gitId":"ongzhili"},"content":"                }","lastModifiedDate":"2024-01-29"},{"lineNumber":85,"author":{"gitId":"ongzhili"},"content":"                // If code reaches here, means that the line is valid - write to temp file","lastModifiedDate":"2024-01-29"},{"lineNumber":86,"author":{"gitId":"ongzhili"},"content":"                Storage.writeToFile(tempFilePath, currLine);","lastModifiedDate":"2024-02-12"},{"lineNumber":87,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":88,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":89,"author":{"gitId":"ongzhili"},"content":"            } catch (LamballParseException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":90,"author":{"gitId":"ongzhili"},"content":"                // Ignores line","lastModifiedDate":"2024-01-29"},{"lineNumber":91,"author":{"gitId":"ongzhili"},"content":"                System.out.println(\"Corrupt format, ignoring...\");","lastModifiedDate":"2024-01-29"},{"lineNumber":92,"author":{"gitId":"ongzhili"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":93,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":94,"author":{"gitId":"ongzhili"},"content":"        scanner.close();","lastModifiedDate":"2024-01-29"},{"lineNumber":95,"author":{"gitId":"ongzhili"},"content":"        System.out.println(\"Done!\");","lastModifiedDate":"2024-01-29"},{"lineNumber":96,"author":{"gitId":"ongzhili"},"content":"        savedList.delete();","lastModifiedDate":"2024-01-29"},{"lineNumber":97,"author":{"gitId":"ongzhili"},"content":"        tempFile.renameTo(savedList);","lastModifiedDate":"2024-01-29"},{"lineNumber":98,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":99,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":100,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":101,"author":{"gitId":"ongzhili"},"content":"     * Replaces specified line in text file.","lastModifiedDate":"2024-01-31"},{"lineNumber":102,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":103,"author":{"gitId":"ongzhili"},"content":"     * @param toWrite Replacement line.","lastModifiedDate":"2024-01-31"},{"lineNumber":104,"author":{"gitId":"ongzhili"},"content":"     * @param index Index of line to replace.","lastModifiedDate":"2024-01-31"},{"lineNumber":105,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":106,"author":{"gitId":"ongzhili"},"content":"    public static void replaceLine(String toWrite, int index) {","lastModifiedDate":"2024-01-29"},{"lineNumber":107,"author":{"gitId":"ongzhili"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":108,"author":{"gitId":"ongzhili"},"content":"            // Read all lines from the file","lastModifiedDate":"2024-01-29"},{"lineNumber":109,"author":{"gitId":"ongzhili"},"content":"            Path path \u003d Paths.get(filePath + \"/list.txt\");","lastModifiedDate":"2024-02-12"},{"lineNumber":110,"author":{"gitId":"ongzhili"},"content":"            List\u003cString\u003e lines \u003d Files.readAllLines(path);","lastModifiedDate":"2024-01-29"},{"lineNumber":111,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":112,"author":{"gitId":"ongzhili"},"content":"            // Check if the index is valid","lastModifiedDate":"2024-01-29"},{"lineNumber":113,"author":{"gitId":"ongzhili"},"content":"            if (index \u003e\u003d 0 \u0026\u0026 index \u003c lines.size()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":114,"author":{"gitId":"ongzhili"},"content":"                // Replace the line at the specified index","lastModifiedDate":"2024-01-29"},{"lineNumber":115,"author":{"gitId":"ongzhili"},"content":"                lines.set(index, toWrite);","lastModifiedDate":"2024-01-29"},{"lineNumber":116,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":117,"author":{"gitId":"ongzhili"},"content":"                // Write the modified content back to the file","lastModifiedDate":"2024-01-29"},{"lineNumber":118,"author":{"gitId":"ongzhili"},"content":"                Files.write(path, lines);","lastModifiedDate":"2024-01-29"},{"lineNumber":119,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":120,"author":{"gitId":"ongzhili"},"content":"                // System.out.println(\"Line \" + index + \" replaced successfully.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":121,"author":{"gitId":"ongzhili"},"content":"            } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":122,"author":{"gitId":"ongzhili"},"content":"                // System.err.println(\"aaaaaaa\");","lastModifiedDate":"2024-01-29"},{"lineNumber":123,"author":{"gitId":"ongzhili"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":124,"author":{"gitId":"ongzhili"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":125,"author":{"gitId":"ongzhili"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-01-29"},{"lineNumber":126,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":127,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":128,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":129,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":130,"author":{"gitId":"ongzhili"},"content":"     * Deletes specified line in text file.","lastModifiedDate":"2024-01-31"},{"lineNumber":131,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":132,"author":{"gitId":"ongzhili"},"content":"     * @param index Index of line to delete.","lastModifiedDate":"2024-01-31"},{"lineNumber":133,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":134,"author":{"gitId":"ongzhili"},"content":"    public static void deleteLine(int index) {","lastModifiedDate":"2024-01-29"},{"lineNumber":135,"author":{"gitId":"ongzhili"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":136,"author":{"gitId":"ongzhili"},"content":"            // Read all lines from the file","lastModifiedDate":"2024-01-29"},{"lineNumber":137,"author":{"gitId":"ongzhili"},"content":"            Path path \u003d Paths.get(filePath + \"/list.txt\");","lastModifiedDate":"2024-02-12"},{"lineNumber":138,"author":{"gitId":"ongzhili"},"content":"            List\u003cString\u003e lines \u003d Files.readAllLines(path);","lastModifiedDate":"2024-01-29"},{"lineNumber":139,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":140,"author":{"gitId":"ongzhili"},"content":"            // Check if the index is valid","lastModifiedDate":"2024-01-29"},{"lineNumber":141,"author":{"gitId":"ongzhili"},"content":"            if (index \u003e\u003d 0 \u0026\u0026 index \u003c lines.size()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":142,"author":{"gitId":"ongzhili"},"content":"                // Remove the line at the specified index","lastModifiedDate":"2024-01-29"},{"lineNumber":143,"author":{"gitId":"ongzhili"},"content":"                lines.remove(index);","lastModifiedDate":"2024-01-29"},{"lineNumber":144,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":145,"author":{"gitId":"ongzhili"},"content":"                // Write the modified content back to the file","lastModifiedDate":"2024-01-29"},{"lineNumber":146,"author":{"gitId":"ongzhili"},"content":"                Files.write(path, lines);","lastModifiedDate":"2024-01-29"},{"lineNumber":147,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":148,"author":{"gitId":"ongzhili"},"content":"                // System.out.println(\"Line \" + index + \" deleted successfully.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":149,"author":{"gitId":"ongzhili"},"content":"            } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":150,"author":{"gitId":"ongzhili"},"content":"                System.err.println(\"Invalid line number.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":151,"author":{"gitId":"ongzhili"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":152,"author":{"gitId":"ongzhili"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":153,"author":{"gitId":"ongzhili"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-01-29"},{"lineNumber":154,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":155,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":156,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":157,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":158,"author":{"gitId":"ongzhili"},"content":"     * Replaces specified line in text file.","lastModifiedDate":"2024-01-31"},{"lineNumber":159,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":160,"author":{"gitId":"ongzhili"},"content":"     * @param filePath File path of the text file.","lastModifiedDate":"2024-01-31"},{"lineNumber":161,"author":{"gitId":"ongzhili"},"content":"     * @param toAdd Line to be appended to the text file.","lastModifiedDate":"2024-01-31"},{"lineNumber":162,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":163,"author":{"gitId":"ongzhili"},"content":"    public static void writeToFile(String filePath, String toAdd) {","lastModifiedDate":"2024-01-29"},{"lineNumber":164,"author":{"gitId":"ongzhili"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":165,"author":{"gitId":"ongzhili"},"content":"            FileWriter fw \u003d new FileWriter(filePath, true);","lastModifiedDate":"2024-01-29"},{"lineNumber":166,"author":{"gitId":"ongzhili"},"content":"            fw.write(toAdd + System.lineSeparator());","lastModifiedDate":"2024-01-29"},{"lineNumber":167,"author":{"gitId":"ongzhili"},"content":"            fw.close();","lastModifiedDate":"2024-01-29"},{"lineNumber":168,"author":{"gitId":"ongzhili"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":169,"author":{"gitId":"ongzhili"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-01-29"},{"lineNumber":170,"author":{"gitId":"ongzhili"},"content":"            System.out.println(\"Save Failed: \" + e.getMessage());","lastModifiedDate":"2024-01-29"},{"lineNumber":171,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":172,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":173,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":174,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":175,"author":{"gitId":"ongzhili"},"content":"     * Replaces specified line in text file. Default hardcoded path provided.","lastModifiedDate":"2024-01-31"},{"lineNumber":176,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":177,"author":{"gitId":"ongzhili"},"content":"     * @param toAdd Line to be appended to the text file.","lastModifiedDate":"2024-01-31"},{"lineNumber":178,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":179,"author":{"gitId":"ongzhili"},"content":"    public static void writeToFile(String toAdd) {","lastModifiedDate":"2024-01-29"},{"lineNumber":180,"author":{"gitId":"ongzhili"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":181,"author":{"gitId":"ongzhili"},"content":"            FileWriter fw \u003d new FileWriter(filePath + \"/list.txt\", true);","lastModifiedDate":"2024-02-12"},{"lineNumber":182,"author":{"gitId":"ongzhili"},"content":"            fw.write(toAdd + System.lineSeparator());","lastModifiedDate":"2024-01-29"},{"lineNumber":183,"author":{"gitId":"ongzhili"},"content":"            fw.close();","lastModifiedDate":"2024-01-29"},{"lineNumber":184,"author":{"gitId":"ongzhili"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":185,"author":{"gitId":"ongzhili"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-01-29"},{"lineNumber":186,"author":{"gitId":"ongzhili"},"content":"            System.out.println(\"Save Failed: \" + e.getMessage());","lastModifiedDate":"2024-01-29"},{"lineNumber":187,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":188,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":189,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":190,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"ongzhili":190}},{"path":"src/main/java/lamball/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"package lamball;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":"import lamball.task.Deadline;","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"import lamball.task.Event;","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"import lamball.task.Task;","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"import lamball.task.ToDo;","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":" * A class that handles the to-do list operations.","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":" *","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":" * @author ongzhili","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"ongzhili"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"ongzhili"},"content":"public class TaskList {","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"ongzhili"},"content":"    protected ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"ongzhili"},"content":"    private String lastDoneTask;","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"ongzhili"},"content":"     * Constructor for TaskList","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"ongzhili"},"content":"    public TaskList() {","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"ongzhili"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"ongzhili"},"content":"        this.lastDoneTask \u003d \"\";","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"ongzhili"},"content":"     * Returns size of task list.","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"ongzhili"},"content":"     * @return Intger value of size of task list.","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":39,"author":{"gitId":"ongzhili"},"content":"    public int size() {","lastModifiedDate":"2024-02-12"},{"lineNumber":40,"author":{"gitId":"ongzhili"},"content":"        return this.tasks.size();","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":43,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"ongzhili"},"content":"     * Returns last done task.","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"ongzhili"},"content":"     * @return last done task in String format.","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"ongzhili"},"content":"    public String getLastDoneTask() {","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"ongzhili"},"content":"        return this.lastDoneTask;","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"ongzhili"},"content":"    private void printList(ArrayList\u003cTask\u003e lst) {","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"ongzhili"},"content":"        String listStr \u003d \"Here aaaaare the taaaasks in your list:\";","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"ongzhili"},"content":"        for (int i \u003d 0; i \u003c lst.size(); i++) {","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"ongzhili"},"content":"            listStr +\u003d \"\\n    \" + (i + 1) + \". \" + lst.get(i).toString() + \"\";","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"ongzhili"},"content":"        lastDoneTask \u003d listStr;","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":61,"author":{"gitId":"ongzhili"},"content":"     * Default list printing operation.","lastModifiedDate":"2024-02-12"},{"lineNumber":62,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":63,"author":{"gitId":"ongzhili"},"content":"     * @return Boolean to continue keeping the bot running.","lastModifiedDate":"2024-02-12"},{"lineNumber":64,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":65,"author":{"gitId":"ongzhili"},"content":"    public boolean printList() {","lastModifiedDate":"2024-02-12"},{"lineNumber":66,"author":{"gitId":"ongzhili"},"content":"        printList(this.tasks);","lastModifiedDate":"2024-02-12"},{"lineNumber":67,"author":{"gitId":"ongzhili"},"content":"        return true;","lastModifiedDate":"2024-02-12"},{"lineNumber":68,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":69,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":70,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":71,"author":{"gitId":"ongzhili"},"content":"     * Marks a given task from the list.","lastModifiedDate":"2024-02-12"},{"lineNumber":72,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":73,"author":{"gitId":"ongzhili"},"content":"     * @param idx Index number of task in list.","lastModifiedDate":"2024-02-12"},{"lineNumber":74,"author":{"gitId":"ongzhili"},"content":"     * @return Boolean to continue keeping the bot running.","lastModifiedDate":"2024-02-12"},{"lineNumber":75,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":76,"author":{"gitId":"ongzhili"},"content":"    public boolean mark(int idx, boolean isInit) {","lastModifiedDate":"2024-02-12"},{"lineNumber":77,"author":{"gitId":"ongzhili"},"content":"        Task temp \u003d tasks.get(idx);","lastModifiedDate":"2024-01-29"},{"lineNumber":78,"author":{"gitId":"ongzhili"},"content":"        temp.mark();","lastModifiedDate":"2024-01-29"},{"lineNumber":79,"author":{"gitId":"ongzhili"},"content":"        lastDoneTask \u003d \"I have maaarked the task as done:\\n\" + \"    \" + temp.toString();","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"ongzhili"},"content":"        if (!isInit) {","lastModifiedDate":"2024-01-30"},{"lineNumber":81,"author":{"gitId":"ongzhili"},"content":"            Storage.replaceLine(\"1 | \" + temp.command(), idx);","lastModifiedDate":"2024-01-30"},{"lineNumber":82,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":83,"author":{"gitId":"ongzhili"},"content":"        return true;","lastModifiedDate":"2024-01-30"},{"lineNumber":84,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":85,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":86,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":87,"author":{"gitId":"ongzhili"},"content":"     * Unmarks a given task from the list.","lastModifiedDate":"2024-02-12"},{"lineNumber":88,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":89,"author":{"gitId":"ongzhili"},"content":"     * @param idx Index number of task in list.","lastModifiedDate":"2024-02-12"},{"lineNumber":90,"author":{"gitId":"ongzhili"},"content":"     * @return Boolean to continue keeping the bot running.","lastModifiedDate":"2024-02-12"},{"lineNumber":91,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":92,"author":{"gitId":"ongzhili"},"content":"    public boolean unMark(int idx) {","lastModifiedDate":"2024-02-12"},{"lineNumber":93,"author":{"gitId":"ongzhili"},"content":"        Task temp \u003d tasks.get(idx);","lastModifiedDate":"2024-01-29"},{"lineNumber":94,"author":{"gitId":"ongzhili"},"content":"        temp.unMark();","lastModifiedDate":"2024-01-29"},{"lineNumber":95,"author":{"gitId":"ongzhili"},"content":"        lastDoneTask \u003d \"I have maaarked the task as undone:\\n\" + \"    \" + temp.toString();","lastModifiedDate":"2024-02-02"},{"lineNumber":96,"author":{"gitId":"ongzhili"},"content":"        Storage.replaceLine(\"0 | \" + temp.command(), idx);","lastModifiedDate":"2024-01-30"},{"lineNumber":97,"author":{"gitId":"ongzhili"},"content":"        return true;","lastModifiedDate":"2024-01-30"},{"lineNumber":98,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":99,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":100,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":101,"author":{"gitId":"ongzhili"},"content":"     * Creates a deadline and adds it to the list of tasks.","lastModifiedDate":"2024-02-12"},{"lineNumber":102,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":103,"author":{"gitId":"ongzhili"},"content":"     * @param arg Arguments to create with.","lastModifiedDate":"2024-02-12"},{"lineNumber":104,"author":{"gitId":"ongzhili"},"content":"     * @param isInit Whether this is run during initialization","lastModifiedDate":"2024-02-12"},{"lineNumber":105,"author":{"gitId":"ongzhili"},"content":"     * @return Boolean to continue keeping the bot running.","lastModifiedDate":"2024-02-12"},{"lineNumber":106,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":107,"author":{"gitId":"ongzhili"},"content":"    public boolean toDo(String arg, boolean isInit) {","lastModifiedDate":"2024-02-12"},{"lineNumber":108,"author":{"gitId":"ongzhili"},"content":"        Task temp \u003d new ToDo(arg);","lastModifiedDate":"2024-02-12"},{"lineNumber":109,"author":{"gitId":"ongzhili"},"content":"        tasks.add(temp);","lastModifiedDate":"2024-01-29"},{"lineNumber":110,"author":{"gitId":"ongzhili"},"content":"        lastDoneTask \u003d \"Added ToDo:\\n        \" + temp.toString() + \"\\n    Now you have \" + tasks.size()","lastModifiedDate":"2024-02-02"},{"lineNumber":111,"author":{"gitId":"ongzhili"},"content":"                + \" tasks in the list.\";","lastModifiedDate":"2024-02-02"},{"lineNumber":112,"author":{"gitId":"ongzhili"},"content":"        if (!isInit) {","lastModifiedDate":"2024-01-29"},{"lineNumber":113,"author":{"gitId":"ongzhili"},"content":"            Storage.writeToFile(\"0 | \" + temp.command());","lastModifiedDate":"2024-01-30"},{"lineNumber":114,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":115,"author":{"gitId":"ongzhili"},"content":"        return true;","lastModifiedDate":"2024-01-30"},{"lineNumber":116,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":117,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":118,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":119,"author":{"gitId":"ongzhili"},"content":"     * Creates a deadline and adds it to the list of tasks.","lastModifiedDate":"2024-02-12"},{"lineNumber":120,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":121,"author":{"gitId":"ongzhili"},"content":"     * @param furtherSplit Arguments to create with.","lastModifiedDate":"2024-02-12"},{"lineNumber":122,"author":{"gitId":"ongzhili"},"content":"     * @param isInit Whether this is run during initialization","lastModifiedDate":"2024-02-12"},{"lineNumber":123,"author":{"gitId":"ongzhili"},"content":"     * @return Boolean to continue keeping the bot running.","lastModifiedDate":"2024-02-12"},{"lineNumber":124,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":125,"author":{"gitId":"ongzhili"},"content":"    public boolean deadline(String[] furtherSplit, boolean isInit) {","lastModifiedDate":"2024-02-12"},{"lineNumber":126,"author":{"gitId":"ongzhili"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":127,"author":{"gitId":"ongzhili"},"content":"            Task temp \u003d new Deadline(furtherSplit[0], furtherSplit[1].replaceFirst(\"by \", \"\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":128,"author":{"gitId":"ongzhili"},"content":"            tasks.add(temp);","lastModifiedDate":"2024-01-29"},{"lineNumber":129,"author":{"gitId":"ongzhili"},"content":"            lastDoneTask \u003d \"Added Deadline:\\n        \" + temp.toString() + \"\\n    Now you have \"","lastModifiedDate":"2024-02-05"},{"lineNumber":130,"author":{"gitId":"ongzhili"},"content":"                    + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2024-02-05"},{"lineNumber":131,"author":{"gitId":"ongzhili"},"content":"            if (!isInit) {","lastModifiedDate":"2024-01-29"},{"lineNumber":132,"author":{"gitId":"ongzhili"},"content":"                Storage.writeToFile(\"0 | \" + temp.command());","lastModifiedDate":"2024-01-30"},{"lineNumber":133,"author":{"gitId":"ongzhili"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":134,"author":{"gitId":"ongzhili"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":135,"author":{"gitId":"ongzhili"},"content":"            this.lastDoneTask \u003d \"Date is in the wrong formaaaaaaat, baa. :(\\n    Correct fo\" + \"rmaaat is: \"","lastModifiedDate":"2024-02-12"},{"lineNumber":136,"author":{"gitId":"ongzhili"},"content":"                    + \"yyyy-mm-dd (e.g 2001-01-20)\";","lastModifiedDate":"2024-02-12"},{"lineNumber":137,"author":{"gitId":"ongzhili"},"content":"            return true;","lastModifiedDate":"2024-02-12"},{"lineNumber":138,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":139,"author":{"gitId":"ongzhili"},"content":"        return true;","lastModifiedDate":"2024-02-12"},{"lineNumber":140,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":141,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":142,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":143,"author":{"gitId":"ongzhili"},"content":"     * Creates an event and adds it to the list of tasks.","lastModifiedDate":"2024-02-12"},{"lineNumber":144,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":145,"author":{"gitId":"ongzhili"},"content":"     * @param furtherSplit Arguments to create with.","lastModifiedDate":"2024-02-12"},{"lineNumber":146,"author":{"gitId":"ongzhili"},"content":"     * @param isInit Whether this is run during initialization","lastModifiedDate":"2024-02-12"},{"lineNumber":147,"author":{"gitId":"ongzhili"},"content":"     * @return Boolean to continue keeping the bot running.","lastModifiedDate":"2024-02-12"},{"lineNumber":148,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":149,"author":{"gitId":"ongzhili"},"content":"    public boolean event(String[] furtherSplit, boolean isInit) {","lastModifiedDate":"2024-02-12"},{"lineNumber":150,"author":{"gitId":"ongzhili"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":151,"author":{"gitId":"ongzhili"},"content":"            Task temp \u003d new Event(furtherSplit[0], furtherSplit[1].replaceFirst(\"from \", \"\"),","lastModifiedDate":"2024-01-29"},{"lineNumber":152,"author":{"gitId":"ongzhili"},"content":"                    furtherSplit[2].replaceFirst(\"to \", \"\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":153,"author":{"gitId":"ongzhili"},"content":"            tasks.add(temp);","lastModifiedDate":"2024-01-29"},{"lineNumber":154,"author":{"gitId":"ongzhili"},"content":"            lastDoneTask \u003d \"Added Event:\\n        \" + temp.toString() + \"\\n    Now you have \"","lastModifiedDate":"2024-02-02"},{"lineNumber":155,"author":{"gitId":"ongzhili"},"content":"                    + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2024-02-02"},{"lineNumber":156,"author":{"gitId":"ongzhili"},"content":"            if (!isInit) {","lastModifiedDate":"2024-01-29"},{"lineNumber":157,"author":{"gitId":"ongzhili"},"content":"                Storage.writeToFile(\"0 | \" + temp.command());","lastModifiedDate":"2024-01-30"},{"lineNumber":158,"author":{"gitId":"ongzhili"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":159,"author":{"gitId":"ongzhili"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":160,"author":{"gitId":"ongzhili"},"content":"            this.lastDoneTask \u003d \"Dates are in the wrong formaaaaaaat, baa. :(\\n    Correct fo\"","lastModifiedDate":"2024-02-12"},{"lineNumber":161,"author":{"gitId":"ongzhili"},"content":"                    + \"rmaaat is: yyyy-mm-dd (e.g 2001-01-20)\";","lastModifiedDate":"2024-02-12"},{"lineNumber":162,"author":{"gitId":"ongzhili"},"content":"            return true;","lastModifiedDate":"2024-02-12"},{"lineNumber":163,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":164,"author":{"gitId":"ongzhili"},"content":"        return true;","lastModifiedDate":"2024-02-12"},{"lineNumber":165,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":166,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":167,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":168,"author":{"gitId":"ongzhili"},"content":"     * Deletes a given task from the list.","lastModifiedDate":"2024-02-12"},{"lineNumber":169,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":170,"author":{"gitId":"ongzhili"},"content":"     * @param idx index to delete from.","lastModifiedDate":"2024-02-12"},{"lineNumber":171,"author":{"gitId":"ongzhili"},"content":"     * @return Boolean that keeps the bot running.","lastModifiedDate":"2024-02-12"},{"lineNumber":172,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":173,"author":{"gitId":"ongzhili"},"content":"    public boolean deleteFromList(int idx) {","lastModifiedDate":"2024-02-12"},{"lineNumber":174,"author":{"gitId":"ongzhili"},"content":"        Task temp \u003d tasks.remove(idx);","lastModifiedDate":"2024-01-29"},{"lineNumber":175,"author":{"gitId":"ongzhili"},"content":"        Storage.deleteLine(idx);","lastModifiedDate":"2024-01-30"},{"lineNumber":176,"author":{"gitId":"ongzhili"},"content":"        lastDoneTask \u003d \"I have removed this taaask:\\n\" + \"        \" + temp.toString() + \"\\n    Now you have \"","lastModifiedDate":"2024-02-02"},{"lineNumber":177,"author":{"gitId":"ongzhili"},"content":"                + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2024-02-02"},{"lineNumber":178,"author":{"gitId":"ongzhili"},"content":"        return true;","lastModifiedDate":"2024-01-30"},{"lineNumber":179,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":180,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":181,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":182,"author":{"gitId":"ongzhili"},"content":"     * Finds related tasks based on the prompt provided.","lastModifiedDate":"2024-02-12"},{"lineNumber":183,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":184,"author":{"gitId":"ongzhili"},"content":"     * @param toFind String prompt to search with","lastModifiedDate":"2024-02-12"},{"lineNumber":185,"author":{"gitId":"ongzhili"},"content":"     * @return Boolean that keeps the bot running.","lastModifiedDate":"2024-02-12"},{"lineNumber":186,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":187,"author":{"gitId":"ongzhili"},"content":"    public boolean find(String toFind) {","lastModifiedDate":"2024-02-12"},{"lineNumber":188,"author":{"gitId":"ongzhili"},"content":"        ArrayList\u003cTask\u003e positives \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-02"},{"lineNumber":189,"author":{"gitId":"ongzhili"},"content":"        for (Task temp : tasks) {","lastModifiedDate":"2024-02-02"},{"lineNumber":190,"author":{"gitId":"ongzhili"},"content":"            if (temp.containing(toFind)) {","lastModifiedDate":"2024-02-12"},{"lineNumber":191,"author":{"gitId":"ongzhili"},"content":"                positives.add(temp);","lastModifiedDate":"2024-02-02"},{"lineNumber":192,"author":{"gitId":"ongzhili"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":193,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":194,"author":{"gitId":"ongzhili"},"content":"        printList(positives);","lastModifiedDate":"2024-02-02"},{"lineNumber":195,"author":{"gitId":"ongzhili"},"content":"        return true;","lastModifiedDate":"2024-01-31"},{"lineNumber":196,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":197,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":198,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"ongzhili":198}},{"path":"src/main/java/lamball/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"package lamball;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":" * A class that primarily responsible for chatbot responses.","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":" *","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":" * @author ongzhili","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"public class Ui {","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"    private static final String WELCOME_MESSAGE \u003d","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":"            \"     Hello! I\u0027m Lamball, your helpful sheep!\\n\"","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":"                    + \"     Whaaat can I do for you?\\n\";","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":"    private static final String GOODBYE_MESSAGE \u003d","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":"        \"     See you again!\\n\";","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"ongzhili"},"content":"     * Constructor for Ui class.","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"ongzhili"},"content":"    public Ui() {","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"ongzhili"},"content":"     * Prints a greeting message.","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"ongzhili"},"content":"     * @return Welcome message, for GUI processing.","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"ongzhili"},"content":"    public String greetingMessage() {","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"ongzhili"},"content":"        System.out.println(WELCOME_MESSAGE);","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"ongzhili"},"content":"        return WELCOME_MESSAGE;","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"ongzhili"},"content":"     * Prints a goodbye message.","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"ongzhili"},"content":"     * @return Goodbye message, for GUI processing.","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"ongzhili"},"content":"    public String goodbyeMessage() {","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"ongzhili"},"content":"        System.out.println(GOODBYE_MESSAGE);","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"ongzhili"},"content":"        return GOODBYE_MESSAGE;","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"ongzhili"},"content":"     * Formats the error message, then prints it.","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"ongzhili"},"content":"     * @param e Exception that was given.","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"ongzhili"},"content":"     * @return Formatted error message for GUI processing.","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"ongzhili"},"content":"    public String displayError(Exception e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"ongzhili"},"content":"        String returnVal \u003d \"    \" + e.getMessage() + \"\\n\";","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"ongzhili"},"content":"        System.out.println(returnVal);","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"ongzhili"},"content":"        return returnVal;","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"ongzhili"},"content":"     * Formats the action done, then prints it.","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"ongzhili"},"content":"     * @param msg Action that was performed.","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"ongzhili"},"content":"     * @return Formatted action for GUI processing.","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"ongzhili"},"content":"    public String displayAction(String msg) {","lastModifiedDate":"2024-02-05"},{"lineNumber":64,"author":{"gitId":"ongzhili"},"content":"        String returnVal \u003d \"    \" + msg + \"\\n\";","lastModifiedDate":"2024-02-05"},{"lineNumber":65,"author":{"gitId":"ongzhili"},"content":"        System.out.println(returnVal);","lastModifiedDate":"2024-02-05"},{"lineNumber":66,"author":{"gitId":"ongzhili"},"content":"        return returnVal;","lastModifiedDate":"2024-02-05"},{"lineNumber":67,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"ongzhili":68}},{"path":"src/main/java/lamball/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"package lamball.command;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":" * Command that closes the window.","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"     * Constructor for command.","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"    public ByeCommand() {","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":"    @Override public boolean run() {","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":"        return false;","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"ongzhili":17}},{"path":"src/main/java/lamball/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"package lamball.command;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":" * Command task that will be told to run.","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":"public abstract class Command {","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"     * Runs the command.","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":"     * @return Boolean determining if the chatbot should be terminated.","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":"    public abstract boolean run();","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"ongzhili":14}},{"path":"src/main/java/lamball/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"package lamball.command;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"import lamball.TaskList;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":" * Command that creates a deadline.","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"    private String[] args;","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":"    private boolean isInit;","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":"     * Constructor for deadline command.","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":"     * @param args Arguments for creation of deadline.","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":"     * @param tasks TaskList to create deadline in.","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"ongzhili"},"content":"     * @param isInit Whether this command is executed during initialization.","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"ongzhili"},"content":"    public DeadlineCommand(String[] args, TaskList tasks, boolean isInit) {","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"ongzhili"},"content":"        this.taskList \u003d tasks;","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"ongzhili"},"content":"        this.args \u003d args;","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"ongzhili"},"content":"        this.isInit \u003d isInit;","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"ongzhili"},"content":"    @Override","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"ongzhili"},"content":"    public boolean run() {","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"ongzhili"},"content":"        taskList.deadline(args, isInit);","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"ongzhili"},"content":"        return true;","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":31,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"ongzhili":31}},{"path":"src/main/java/lamball/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"package lamball.command;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"import lamball.TaskList;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":" * Command that creates a given task","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"    private int idx;","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":"     * Constructor for delete command.","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":"     * @param idx Index of list to delete.","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":"     * @param tasks TaskList to delete from.","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"ongzhili"},"content":"    public DeleteCommand(int idx, TaskList tasks) {","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"ongzhili"},"content":"        this.taskList \u003d tasks;","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"ongzhili"},"content":"        this.idx \u003d idx;","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"ongzhili"},"content":"    @Override","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"ongzhili"},"content":"    public boolean run() {","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"ongzhili"},"content":"        taskList.deleteFromList(idx);","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"ongzhili"},"content":"        return true;","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"ongzhili":28}},{"path":"src/main/java/lamball/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"package lamball.command;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"import lamball.TaskList;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":" * Command that creates an event.","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"    private String[] args;","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":"    private boolean isInit;","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":"     * Constructor for Event command.","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":"     * @param args Arguments to create event task.","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":"     * @param tasks TaskList to add task to.","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"ongzhili"},"content":"     * @param isInit Whether this is run during initialization.","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"ongzhili"},"content":"    public EventCommand(String[] args, TaskList tasks, boolean isInit) {","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"ongzhili"},"content":"        this.taskList \u003d tasks;","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"ongzhili"},"content":"        this.args \u003d args;","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"ongzhili"},"content":"        this.isInit \u003d isInit;","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"ongzhili"},"content":"    @Override","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"ongzhili"},"content":"    public boolean run() {","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"ongzhili"},"content":"        taskList.event(args, isInit);","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"ongzhili"},"content":"        return true;","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":31,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"ongzhili":31}},{"path":"src/main/java/lamball/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"package lamball.command;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"import lamball.TaskList;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":" * Command that finds a task.","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"    private String args;","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":"     * Constructor for command.","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":"     * @param args Argument to search for.","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":"     * @param tasks TaskList to search in.","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"ongzhili"},"content":"    public FindCommand(String args, TaskList tasks) {","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"ongzhili"},"content":"        this.taskList \u003d tasks;","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"ongzhili"},"content":"        this.args \u003d args;","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"ongzhili"},"content":"    @Override","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"ongzhili"},"content":"    public boolean run() {","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"ongzhili"},"content":"        taskList.find(args);","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"ongzhili"},"content":"        return true;","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"ongzhili":29}},{"path":"src/main/java/lamball/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"package lamball.command;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"import lamball.TaskList;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":" * Command that unmarks a given task.","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"    private boolean isInit;","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":"    private int idx;","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":"     * Constructor for mark command.","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":"     * @param idx Index of list to mark.","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":"     * @param tasks TaskList to mark from.","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"ongzhili"},"content":"     * @param isInit Whether this command is run during initialization.","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"ongzhili"},"content":"    public MarkCommand(int idx, TaskList tasks, boolean isInit) {","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"ongzhili"},"content":"        this.taskList \u003d tasks;","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"ongzhili"},"content":"        this.idx \u003d idx;","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"ongzhili"},"content":"        this.isInit \u003d isInit;","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"ongzhili"},"content":"    @Override","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"ongzhili"},"content":"    public boolean run() {","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"ongzhili"},"content":"        taskList.mark(idx, this.isInit);","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"ongzhili"},"content":"        return true;","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":31,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"ongzhili":31}},{"path":"src/main/java/lamball/command/PrintListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"package lamball.command;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"import lamball.TaskList;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":" * Command that prints the list of tasks","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"public class PrintListCommand extends Command {","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":"     * Constructor for command.","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":"     * @param tasks TaskList to print from.","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":"    public PrintListCommand(TaskList tasks) {","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":"        this.taskList \u003d tasks;","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"ongzhili"},"content":"    @Override public boolean run() {","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"ongzhili"},"content":"        taskList.printList();","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"ongzhili"},"content":"        return true;","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"ongzhili":24}},{"path":"src/main/java/lamball/command/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"package lamball.command;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"import lamball.TaskList;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":" * Command that creates a todo task.","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"public class ToDoCommand extends Command {","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"    private String toDo;","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":"    private boolean isInit;","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":"     * Constructor for the command.","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":"     * @param toDo Name of task.","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":"     * @param tasks TaskList to add task to.","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"ongzhili"},"content":"     * @param isInit Whether this is run during initialization.","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"ongzhili"},"content":"    public ToDoCommand(String toDo, TaskList tasks, boolean isInit) {","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"ongzhili"},"content":"        this.taskList \u003d tasks;","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"ongzhili"},"content":"        this.toDo \u003d toDo;","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"ongzhili"},"content":"        this.isInit \u003d isInit;","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"ongzhili"},"content":"    @Override","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"ongzhili"},"content":"    public boolean run() {","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"ongzhili"},"content":"        taskList.toDo(toDo, isInit);","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"ongzhili"},"content":"        return true;","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":31,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"ongzhili":31}},{"path":"src/main/java/lamball/command/UnMarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"package lamball.command;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"import lamball.TaskList;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":" * Command that unmarks a given task.","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"public class UnMarkCommand extends Command {","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"    private int idx;","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":"     * Constructor for unmark command.","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":"     * @param idx Index of list to unmark.","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":"     * @param tasks TaskList to unmark from.","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"ongzhili"},"content":"    public UnMarkCommand(int idx, TaskList tasks) {","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"ongzhili"},"content":"        this.taskList \u003d tasks;","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"ongzhili"},"content":"        this.idx \u003d idx;","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"ongzhili"},"content":"    @Override","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"ongzhili"},"content":"    public boolean run() {","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"ongzhili"},"content":"        taskList.unMark(idx);","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"ongzhili"},"content":"        return true;","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"ongzhili":28}},{"path":"src/main/java/lamball/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"package lamball.task;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":" * Deadline class, an extension of the Task class that contains a due date.","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":" *","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":" * @author ongzhili","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":"    protected LocalDate by;","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":"     * Constructor for Deadline task.","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"ongzhili"},"content":"     * @param description Name of task.","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"ongzhili"},"content":"     * @param by due date of deadline","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"ongzhili"},"content":"     * @throws DateTimeParseException if invalid date is provided.","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"ongzhili"},"content":"    public Deadline(String description, String by) throws DateTimeParseException {","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"ongzhili"},"content":"        super(description);","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"ongzhili"},"content":"        this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"ongzhili"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"ongzhili"},"content":"    public String command() {","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"ongzhili"},"content":"        return \"deadline \" + description + \" /by \" + by;","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"ongzhili"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"ongzhili"},"content":"    public String toString() {","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"ongzhili"},"content":"        String formattedDate \u003d by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"ongzhili"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + formattedDate + \")\";","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"ongzhili":38}},{"path":"src/main/java/lamball/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"package lamball.task;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":" * Event class, an extension of the Task class that has a duration, represented by","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":" * from and to.","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":" *","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":" * @author ongzhili","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":"    protected LocalDate from;","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":"    protected LocalDate to;","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"ongzhili"},"content":"     * Constructor for Event task.","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"ongzhili"},"content":"     * @param description Name of task.","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"ongzhili"},"content":"     * @param from Start date of event.","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"ongzhili"},"content":"     * @param to End date of event.","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"ongzhili"},"content":"     * @throws DateTimeParseException if invalid date is provided.","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"ongzhili"},"content":"    public Event(String description, String from, String to) throws DateTimeParseException {","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"ongzhili"},"content":"        super(description);","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"ongzhili"},"content":"        this.from \u003d LocalDate.parse(from);","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"ongzhili"},"content":"        this.to \u003d LocalDate.parse(to);","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"ongzhili"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"ongzhili"},"content":"    public String command() {","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"ongzhili"},"content":"        return \"event \" + description + \" /from \" + from + \" /to \" + to;","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"ongzhili"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"ongzhili"},"content":"    public String toString() {","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"ongzhili"},"content":"        String formattedFrom \u003d from.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"ongzhili"},"content":"        String formattedTo \u003d to.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"ongzhili"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + formattedFrom + \" to: \" + formattedTo + \")\";","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"ongzhili":42}},{"path":"src/main/java/lamball/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"package lamball.task;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":" * Task class, the base unit of the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":" *","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":" * @author ongzhili","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"public class Task {","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"    protected String description;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":"     * Constructor for Task.","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":"     * @param description Name of task.","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"ongzhili"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"ongzhili"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"ongzhili"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"ongzhili"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"ongzhili"},"content":"        return isDone ? \"X\" : \" \";","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"ongzhili"},"content":"    public void mark() {","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"ongzhili"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"ongzhili"},"content":"    public void unMark() {","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"ongzhili"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"ongzhili"},"content":"     * Returns task in command format for chatbot use.","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"ongzhili"},"content":"     * @return Task represented in command form.","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"ongzhili"},"content":"    public String command() {","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"ongzhili"},"content":"        return \"How did you get here?\";","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"ongzhili"},"content":"     * Returns string representation of task for list printing","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"ongzhili"},"content":"     * @return String task represented in printing format","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"ongzhili"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"ongzhili"},"content":"    public String toString() {","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"ongzhili"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"ongzhili"},"content":"     * Checks if the task description contains the given string.","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"ongzhili"},"content":"     * @param compare String used for comparison.","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"ongzhili"},"content":"     * @return Whether the given string is a sub-sequence of the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"ongzhili"},"content":"    public boolean containing(String compare) {","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"ongzhili"},"content":"        return description.contains(compare);","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"ongzhili":62}},{"path":"src/main/java/lamball/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"package lamball.task;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":" * ToDo class, an extension of the Task class.","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":" *","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":" * @author ongzhili","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":"     * Constructor for ToDo task.","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":"     * @param description Name of todo task.","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":"        super(description);","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"ongzhili"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"ongzhili"},"content":"    public String command() {","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"ongzhili"},"content":"        return \"todo \" + description;","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"ongzhili"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"ongzhili"},"content":"    public String toString() {","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"ongzhili"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"ongzhili":27}},{"path":"src/main/java/lamball/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"package lamball.ui;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":" * Class for Dialog box - usable for both user input and chatbot response.","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"ongzhili"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"ongzhili"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"ongzhili"},"content":"    private Label text;","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"ongzhili"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"ongzhili"},"content":"     * Private constructor for dialogbox.","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"ongzhili"},"content":"     * @param l","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"ongzhili"},"content":"     * @param iv","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"ongzhili"},"content":"    private DialogBox(Label l, ImageView iv) {","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"ongzhili"},"content":"        text \u003d l;","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"ongzhili"},"content":"        displayPicture \u003d iv;","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"ongzhili"},"content":"        text.setTextFill(Color.rgb(255, 255, 255));","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"ongzhili"},"content":"        text.setWrapText(true);","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"ongzhili"},"content":"        // Create a Circle as a clip","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"ongzhili"},"content":"        Circle clip \u003d new Circle(50);","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"ongzhili"},"content":"        clip.setCenterX(50);","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"ongzhili"},"content":"        clip.setCenterY(50);","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"ongzhili"},"content":"        // Set the circle clip to the ImageView","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"ongzhili"},"content":"        displayPicture.setClip(clip);","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"ongzhili"},"content":"        displayPicture.setFitWidth(100.0);","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"ongzhili"},"content":"        displayPicture.setFitHeight(100.0);","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"ongzhili"},"content":"        BackgroundFill backgroundFill \u003d new BackgroundFill(Color.rgb(50, 50, 50), null, null);","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"ongzhili"},"content":"        Background background \u003d new Background(backgroundFill);","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"ongzhili"},"content":"        this.setBackground(background);","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"ongzhili"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"ongzhili"},"content":"        this.getChildren().addAll(text, displayPicture);","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"ongzhili"},"content":"        this.setPadding(new Insets(10));","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":58,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":60,"author":{"gitId":"ongzhili"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"ongzhili"},"content":"    private void flip() {","lastModifiedDate":"2024-02-05"},{"lineNumber":63,"author":{"gitId":"ongzhili"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-05"},{"lineNumber":64,"author":{"gitId":"ongzhili"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-05"},{"lineNumber":65,"author":{"gitId":"ongzhili"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2024-02-05"},{"lineNumber":66,"author":{"gitId":"ongzhili"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2024-02-05"},{"lineNumber":67,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":68,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":69,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":70,"author":{"gitId":"ongzhili"},"content":"     * Returns a dialog box simulating a user talking.","lastModifiedDate":"2024-02-05"},{"lineNumber":71,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":72,"author":{"gitId":"ongzhili"},"content":"     * @param l Text label","lastModifiedDate":"2024-02-05"},{"lineNumber":73,"author":{"gitId":"ongzhili"},"content":"     * @param iv Imageview of desired image.","lastModifiedDate":"2024-02-05"},{"lineNumber":74,"author":{"gitId":"ongzhili"},"content":"     * @return Instance of user dialog.","lastModifiedDate":"2024-02-05"},{"lineNumber":75,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":76,"author":{"gitId":"ongzhili"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {","lastModifiedDate":"2024-02-05"},{"lineNumber":77,"author":{"gitId":"ongzhili"},"content":"        return new DialogBox(l, iv);","lastModifiedDate":"2024-02-05"},{"lineNumber":78,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":79,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":80,"author":{"gitId":"ongzhili"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":81,"author":{"gitId":"ongzhili"},"content":"     * Returns a dialog box simulating the chatbot\u0027s response.","lastModifiedDate":"2024-02-05"},{"lineNumber":82,"author":{"gitId":"ongzhili"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":83,"author":{"gitId":"ongzhili"},"content":"     * @param l Text label","lastModifiedDate":"2024-02-05"},{"lineNumber":84,"author":{"gitId":"ongzhili"},"content":"     * @param iv Imageview of desired image.","lastModifiedDate":"2024-02-05"},{"lineNumber":85,"author":{"gitId":"ongzhili"},"content":"     * @return Instance of chatbot dialog.","lastModifiedDate":"2024-02-05"},{"lineNumber":86,"author":{"gitId":"ongzhili"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":87,"author":{"gitId":"ongzhili"},"content":"    public static DialogBox getLamballDialog(Label l, ImageView iv) {","lastModifiedDate":"2024-02-05"},{"lineNumber":88,"author":{"gitId":"ongzhili"},"content":"        var db \u003d new DialogBox(l, iv);","lastModifiedDate":"2024-02-05"},{"lineNumber":89,"author":{"gitId":"ongzhili"},"content":"        db.flip();","lastModifiedDate":"2024-02-05"},{"lineNumber":90,"author":{"gitId":"ongzhili"},"content":"        return db;","lastModifiedDate":"2024-02-05"},{"lineNumber":91,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":92,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"ongzhili":92}},{"path":"src/test/java/lamball/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"package lamball;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"import lamball.command.ByeCommand;","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":"import lamball.command.Command;","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":"import lamball.command.PrintListCommand;","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":"public class ParserTest {","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":"    public void byeParseTest() {","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":"        TaskList tst \u003d new TaskList();","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"ongzhili"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"ongzhili"},"content":"            Command comd \u003d Parser.parse(\"bye\", tst, false);","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"ongzhili"},"content":"            assertTrue(comd instanceof ByeCommand);","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"ongzhili"},"content":"        } catch (LamballParseException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"ongzhili"},"content":"            fail();","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"ongzhili"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"ongzhili"},"content":"    public void listParseTest() {","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"ongzhili"},"content":"        TaskList tst \u003d new TaskList();","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"ongzhili"},"content":"        try {","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"ongzhili"},"content":"            Command comd \u003d Parser.parse(\"list\", tst, false);","lastModifiedDate":"2024-02-12"},{"lineNumber":31,"author":{"gitId":"ongzhili"},"content":"            assertTrue(comd instanceof PrintListCommand);","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"ongzhili"},"content":"        } catch (LamballParseException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":33,"author":{"gitId":"ongzhili"},"content":"            fail();","lastModifiedDate":"2024-02-12"},{"lineNumber":34,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"ongzhili"},"content":"    @Test","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"ongzhili"},"content":"    public void byeParseFailTest() {","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"ongzhili"},"content":"        TaskList tst \u003d new TaskList();","lastModifiedDate":"2024-02-12"},{"lineNumber":39,"author":{"gitId":"ongzhili"},"content":"        LamballParseException thrown \u003d Assertions.assertThrows(LamballParseException.class, () -\u003e {","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"ongzhili"},"content":"            Parser.parse(\"bye 123456\", tst, false);","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"ongzhili"},"content":"        });","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"ongzhili"},"content":"        assertEquals(\"Do not type anything after \\\"bye\\\"\", thrown.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"ongzhili"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"ongzhili"},"content":"    public void listParseFailTest() {","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"ongzhili"},"content":"        TaskList tst \u003d new TaskList();","lastModifiedDate":"2024-02-12"},{"lineNumber":48,"author":{"gitId":"ongzhili"},"content":"        LamballParseException thrown \u003d Assertions.assertThrows(LamballParseException.class, () -\u003e {","lastModifiedDate":"2024-02-12"},{"lineNumber":49,"author":{"gitId":"ongzhili"},"content":"            Parser.parse(\"list 123456\", tst, false);","lastModifiedDate":"2024-02-12"},{"lineNumber":50,"author":{"gitId":"ongzhili"},"content":"        });","lastModifiedDate":"2024-02-12"},{"lineNumber":51,"author":{"gitId":"ongzhili"},"content":"        assertEquals(\"Do not type anything after \\\"list\\\"\", thrown.getMessage());","lastModifiedDate":"2024-02-12"},{"lineNumber":52,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":53,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":54,"author":{"gitId":"ongzhili"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"ongzhili"},"content":"    public void markParseFailTest() {","lastModifiedDate":"2024-02-12"},{"lineNumber":56,"author":{"gitId":"ongzhili"},"content":"        TaskList tst \u003d new TaskList();","lastModifiedDate":"2024-02-12"},{"lineNumber":57,"author":{"gitId":"ongzhili"},"content":"        LamballParseException thrown \u003d Assertions.assertThrows(LamballParseException.class, () -\u003e {","lastModifiedDate":"2024-02-12"},{"lineNumber":58,"author":{"gitId":"ongzhili"},"content":"            Parser.parse(\"mark 1 1 1 1 1 1\", tst, false);","lastModifiedDate":"2024-02-12"},{"lineNumber":59,"author":{"gitId":"ongzhili"},"content":"        });","lastModifiedDate":"2024-02-12"},{"lineNumber":60,"author":{"gitId":"ongzhili"},"content":"        assertEquals(\"Invalid number, baa.\", thrown.getMessage());","lastModifiedDate":"2024-02-12"},{"lineNumber":61,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":62,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":63,"author":{"gitId":"ongzhili"},"content":"    @Test","lastModifiedDate":"2024-02-12"},{"lineNumber":64,"author":{"gitId":"ongzhili"},"content":"    public void unmarkParseFailTest() {","lastModifiedDate":"2024-02-12"},{"lineNumber":65,"author":{"gitId":"ongzhili"},"content":"        TaskList tst \u003d new TaskList();","lastModifiedDate":"2024-02-12"},{"lineNumber":66,"author":{"gitId":"ongzhili"},"content":"        LamballParseException thrown \u003d Assertions.assertThrows(LamballParseException.class, () -\u003e {","lastModifiedDate":"2024-02-12"},{"lineNumber":67,"author":{"gitId":"ongzhili"},"content":"            Parser.parse(\"unmark 1 1 1 1 1 1\", tst, false);","lastModifiedDate":"2024-02-12"},{"lineNumber":68,"author":{"gitId":"ongzhili"},"content":"        });","lastModifiedDate":"2024-02-12"},{"lineNumber":69,"author":{"gitId":"ongzhili"},"content":"        assertEquals(\"Invalid number, baa.\", thrown.getMessage());","lastModifiedDate":"2024-02-12"},{"lineNumber":70,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":71,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":72,"author":{"gitId":"ongzhili"},"content":"    @Test","lastModifiedDate":"2024-02-12"},{"lineNumber":73,"author":{"gitId":"ongzhili"},"content":"    public void deleteParseFailTest() {","lastModifiedDate":"2024-02-12"},{"lineNumber":74,"author":{"gitId":"ongzhili"},"content":"        TaskList tst \u003d new TaskList();","lastModifiedDate":"2024-02-12"},{"lineNumber":75,"author":{"gitId":"ongzhili"},"content":"        LamballParseException thrown \u003d Assertions.assertThrows(LamballParseException.class, () -\u003e {","lastModifiedDate":"2024-02-12"},{"lineNumber":76,"author":{"gitId":"ongzhili"},"content":"            Parser.parse(\"delete 1 1 1 1 1 1\", tst, false);","lastModifiedDate":"2024-02-12"},{"lineNumber":77,"author":{"gitId":"ongzhili"},"content":"        });","lastModifiedDate":"2024-02-12"},{"lineNumber":78,"author":{"gitId":"ongzhili"},"content":"        assertEquals(\"Invalid number, baa.\", thrown.getMessage());","lastModifiedDate":"2024-02-12"},{"lineNumber":79,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":80,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":81,"author":{"gitId":"ongzhili"},"content":"    @Test","lastModifiedDate":"2024-02-12"},{"lineNumber":82,"author":{"gitId":"ongzhili"},"content":"    public void taskParseFailTest() {","lastModifiedDate":"2024-02-12"},{"lineNumber":83,"author":{"gitId":"ongzhili"},"content":"        TaskList tst \u003d new TaskList();","lastModifiedDate":"2024-02-12"},{"lineNumber":84,"author":{"gitId":"ongzhili"},"content":"        LamballParseException thrown \u003d Assertions.assertThrows(LamballParseException.class, () -\u003e {","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"ongzhili"},"content":"            Parser.parse(\"todo                            \", tst, false);","lastModifiedDate":"2024-02-12"},{"lineNumber":86,"author":{"gitId":"ongzhili"},"content":"        });","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"ongzhili"},"content":"        assertEquals(\"Your todo field is empty, baaaaka.\", thrown.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"ongzhili"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":91,"author":{"gitId":"ongzhili"},"content":"    public void invalidCommandParseTest() {","lastModifiedDate":"2024-01-31"},{"lineNumber":92,"author":{"gitId":"ongzhili"},"content":"        TaskList test \u003d new TaskList();","lastModifiedDate":"2024-02-12"},{"lineNumber":93,"author":{"gitId":"ongzhili"},"content":"        LamballParseException thrown \u003d Assertions.assertThrows(LamballParseException.class, () -\u003e {","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"ongzhili"},"content":"            Parser.parse(\"the quick brown fox jumps over the lazy dog\", test, false);","lastModifiedDate":"2024-02-12"},{"lineNumber":95,"author":{"gitId":"ongzhili"},"content":"        });","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"ongzhili"},"content":"        assertEquals(\"Sorry, I don\u0027t understaaaaaand your commaaaaand, baa. :(\", thrown.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":98,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"ongzhili":98}},{"path":"src/test/java/lamball/SanityTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"package lamball;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":"public class SanityTest {","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"    public void sanityTest() {","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"ongzhili":11}},{"path":"src/test/java/lamball/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"package lamball.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"public class DeadlineTest {","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":"    public void deadlineCommandTest() {","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":"        // Command Test","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":"        assertEquals(new Deadline(\"TEST\", \"2000-01-01\").command(), \"deadline TEST /by 2000-01-01\");","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":"    @Test","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"ongzhili"},"content":"    public void deadlineStringTest() {","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"ongzhili"},"content":"        // String Test","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"ongzhili"},"content":"        assertEquals(new Deadline(\"TEST\", \"2000-01-01\").toString(), \"[D][ ] TEST (by: Jan 1 2000)\");","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"ongzhili"},"content":"    @Test","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"ongzhili"},"content":"    public void deadlineMarkTest() {","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"ongzhili"},"content":"        // Mark test","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"ongzhili"},"content":"        Deadline test \u003d new Deadline(\"TEST\", \"2000-01-01\");","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"ongzhili"},"content":"        test.mark();","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"ongzhili"},"content":"        assertEquals(test.toString(), \"[D][X] TEST (by: Jan 1 2000)\");","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"ongzhili"},"content":"        // Unmark test","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"ongzhili"},"content":"        test.unMark();","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"ongzhili"},"content":"        assertEquals(test.toString(), \"[D][ ] TEST (by: Jan 1 2000)\");","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"ongzhili"},"content":"    @Test","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"ongzhili"},"content":"    public void deadlineExceptionTest() {","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"ongzhili"},"content":"        // DateTimeParseException test","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"ongzhili"},"content":"        DateTimeParseException thrown \u003d Assertions.assertThrows(DateTimeParseException.class, () -\u003e {","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"ongzhili"},"content":"            Deadline test2 \u003d new Deadline(\"TEST\", \"abcdefg\");","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"ongzhili"},"content":"        });","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"ongzhili"},"content":"        // Error Message test","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"ongzhili"},"content":"        assertEquals(\"Text \u0027abcdefg\u0027 could not be parsed at index 0\", thrown.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"ongzhili":46}},{"path":"src/test/java/lamball/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"package lamball.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"public class EventTest {","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":"    public void eventCommandTest() {","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":"        // Command Test","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":"        assertEquals(new Event(\"TEST\", \"2000-01-01\", \"2000-01-01\").command(), \"event TEST \"","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":"                + \"/from 2000-01-01 /to 2000-01-01\");","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"ongzhili"},"content":"    @Test","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"ongzhili"},"content":"    public void eventStringTest() {","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"ongzhili"},"content":"        // String Test","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"ongzhili"},"content":"        assertEquals(new Event(\"TEST\", \"2000-01-01\", \"2000-01-01\").toString(),","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"ongzhili"},"content":"                \"[E][ ] TEST (from: Jan 1 2000 to: Jan 1 2000)\");","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"ongzhili"},"content":"    @Test","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"ongzhili"},"content":"    public void eventMarkTest() {","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"ongzhili"},"content":"        // Mark test","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"ongzhili"},"content":"        Event test \u003d new Event(\"TEST\", \"2000-01-01\", \"2000-01-01\");","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"ongzhili"},"content":"        test.mark();","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"ongzhili"},"content":"        assertEquals(test.toString(), \"[E][X] TEST (from: Jan 1 2000 to: Jan 1 2000)\");","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"ongzhili"},"content":"        // Unmark test","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"ongzhili"},"content":"        test.unMark();","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"ongzhili"},"content":"        assertEquals(test.toString(), \"[E][ ] TEST (from: Jan 1 2000 to: Jan 1 2000)\");","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"ongzhili"},"content":"    @Test","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"ongzhili"},"content":"    public void eventExceptionTest() {","lastModifiedDate":"2024-02-12"},{"lineNumber":39,"author":{"gitId":"ongzhili"},"content":"        // DateTimeParseException test","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"ongzhili"},"content":"        DateTimeParseException thrown \u003d Assertions.assertThrows(DateTimeParseException.class, () -\u003e {","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"ongzhili"},"content":"            Event test2 \u003d new Event(\"TEST\", \"abcdefg\", \"2000-01-01\");","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"ongzhili"},"content":"        });","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"ongzhili"},"content":"        // Error Message test","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"ongzhili"},"content":"        assertEquals(\"Text \u0027abcdefg\u0027 could not be parsed at index 0\", thrown.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"ongzhili":48}},{"path":"src/test/java/lamball/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"package lamball.task;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":"public class TaskTest {","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"    public void taskTest() {","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"        // Command test","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":"        assertEquals(new Task(\"TEST\").command(), \"How did you get here?\");","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":"        // toString test","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":"        assertEquals(new Task(\"TEST\").toString(), \"[ ] TEST\");","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"ongzhili":18}},{"path":"src/test/java/lamball/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"package lamball.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":"public class ToDoTest {","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"    public void todoTest() {","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":"        // Command test","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":"        assertEquals(new ToDo(\"TEST\").command(), \"todo TEST\");","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":"        // toString test","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":"        assertEquals(new ToDo(\"TEST\").toString(), \"[T][ ] TEST\");","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"ongzhili":18}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"todo borrow book","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"todo","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"todo","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":"deadline a /by 3","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":"deadline a/by 3","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":"deadline","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":"event","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"event a /from b","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"event a/from b /to c","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"event a /from b /to c","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":"mark -1","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":"mark 0","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":"mark 4","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":"mark 3","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":"unmark -1","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":"unmark 0","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"ongzhili"},"content":"unmark 4","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"ongzhili"},"content":"unmark 3","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"ongzhili"},"content":"delete -1","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"ongzhili"},"content":"delete 4","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"ongzhili"},"content":"delete 4","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"ongzhili"},"content":"bye","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"ongzhili":23}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"ongzhili"},"content":"java -classpath ..\\bin Main \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ongzhili":1,"-":20}}]
