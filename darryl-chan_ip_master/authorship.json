[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"darryl-chan"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"darryl-chan":1,"-":41}},{"path":"data/linus - Copy.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"darryl-chan"},"content":"T;;0;;abs","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"darryl-chan"},"content":"D;;0;;absdasd;;19/2/2020 1900","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"darryl-chan"},"content":"E;;0;;fgssdf;;20/3/2000 2000;;27/3/2022 2200","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"darryl-chan":3}},{"path":"data/linus.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"darryl-chan"},"content":"T;;0;;asg","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"darryl-chan"},"content":"T;;1;;asfd sgd","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"darryl-chan"},"content":"T;;1;;asfa","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"darryl-chan"},"content":"T;;0;;asdaf","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"darryl-chan"},"content":"D;;0;;Do homework;;19/03/2020 1900","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"darryl-chan"},"content":"E;;0;;CS2103 Exam;;25/05/2024 1400;;25/05/2024 1400","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"darryl-chan"},"content":"T;;0;;homeworkhomework","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"darryl-chan":7}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darryl-chan"},"content":"package duke;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"darryl-chan"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"darryl-chan"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"darryl-chan"},"content":" * Main class that runs the program","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"darryl-chan"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"darryl-chan"},"content":"    private final String LOGO \u003d \"\" ","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"darryl-chan"},"content":"            + \"\\t    __    _                 \\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"darryl-chan"},"content":"            + \"\\t   / /   (_)___  __  _______\\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"darryl-chan"},"content":"            + \"\\t  / /   / / __ \\\\/ / / / ___/\\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"darryl-chan"},"content":"            + \"\\t / /___/ / / / / /_/ (__  ) \\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"darryl-chan"},"content":"            + \"\\t/_____/_/_/ /_/\\\\__,_/____/  \\n\";","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"darryl-chan"},"content":"    private final String NAME \u003d \"Linus\";","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"darryl-chan"},"content":"    private final String FILE_PATH \u003d \"./data/linus.txt\";","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"darryl-chan"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"darryl-chan"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"darryl-chan"},"content":"    private Parser parser;","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"darryl-chan"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"darryl-chan"},"content":"     * Constructor for Chatbot","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"darryl-chan"},"content":"    public Duke() {","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"darryl-chan"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"darryl-chan"},"content":"        this.storage \u003d new Storage(FILE_PATH);","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"darryl-chan"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"darryl-chan"},"content":"        this.parser \u003d new Parser(taskList, ui);","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"darryl-chan"},"content":"     * Starts the program","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"darryl-chan"},"content":"    public void start() {","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"darryl-chan"},"content":"        ui.print(\"Hello from\\n\" + LOGO);","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"darryl-chan"},"content":"        ui.greeting(NAME);","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"darryl-chan"},"content":"        this.loadData();","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"darryl-chan"},"content":"        parser.run();","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"darryl-chan"},"content":"        this.saveData();","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"darryl-chan"},"content":"     * Loads the TaskList tasks data from file","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"darryl-chan"},"content":"    public void loadData() {","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"darryl-chan"},"content":"        storage.loadData(taskList, ui);","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"darryl-chan"},"content":"     * Saves TaskList tasks into file","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"darryl-chan"},"content":"    public void saveData() {","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"darryl-chan"},"content":"        storage.saveData(taskList, ui);","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"darryl-chan"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":66,"author":{"gitId":"darryl-chan"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"darryl-chan"},"content":"        duke.start();","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":71,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"darryl-chan":68,"-":3}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darryl-chan"},"content":"package duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"darryl-chan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"darryl-chan"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"darryl-chan"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"darryl-chan"},"content":"import duke.commands.Command;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"darryl-chan"},"content":"import duke.commands.CommandBye;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"darryl-chan"},"content":"import duke.commands.CommandDeadline;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"darryl-chan"},"content":"import duke.commands.CommandDelete;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"darryl-chan"},"content":"import duke.commands.CommandEvent;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"darryl-chan"},"content":"import duke.commands.CommandList;","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"darryl-chan"},"content":"import duke.commands.CommandMark;","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"darryl-chan"},"content":"import duke.commands.CommandToDo;","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"darryl-chan"},"content":"import duke.commands.CommandUnmark;","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"darryl-chan"},"content":"import duke.commands.CommandFind;","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"darryl-chan"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"darryl-chan"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"darryl-chan"},"content":" * Class that reads user input","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"darryl-chan"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"darryl-chan"},"content":"public class Parser {","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"darryl-chan"},"content":"    enum CommandType {LIST, BYE, MARK, UNMARK, DELETE, TODO, DEADLINE, EVENT, FIND};","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"darryl-chan"},"content":"    private Scanner scanner;","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"darryl-chan"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"darryl-chan"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"darryl-chan"},"content":"    private Boolean isRunning;","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"darryl-chan"},"content":"    ","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"darryl-chan"},"content":"     * Constructor for Parser","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"darryl-chan"},"content":"     * @param taskList TaskList List for storing Tasks","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"darryl-chan"},"content":"     * @param ui UI for printing to system","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"darryl-chan"},"content":"    public Parser(TaskList taskList, Ui ui) {","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"darryl-chan"},"content":"        this.isRunning \u003d true;","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"darryl-chan"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"darryl-chan"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"darryl-chan"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"darryl-chan"},"content":"     * starts the chatbot","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"darryl-chan"},"content":"    public void run() {","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"darryl-chan"},"content":"        while (isRunning) {","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"darryl-chan"},"content":"            this.readUserInput();","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"darryl-chan"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"darryl-chan"},"content":"     * splits the user command and description","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"darryl-chan"},"content":"    private void readUserInput() {","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"darryl-chan"},"content":"        String userInput \u003d scanner.nextLine();","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"darryl-chan"},"content":"        String[] userInputSplit \u003d userInput.split(\" \", 2);","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"darryl-chan"},"content":"        ArrayList\u003cString\u003e userInputList \u003d new ArrayList\u003c\u003e(Arrays.asList(userInputSplit));","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"darryl-chan"},"content":"        userInputList.add(\"\");","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"darryl-chan"},"content":"        String userCommand \u003d userInputList.get(0).toLowerCase();","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"darryl-chan"},"content":"        String description \u003d userInputList.get(1);","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"darryl-chan"},"content":"        this.parseUserInput(userCommand, description);","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"darryl-chan"},"content":"     * Reads and understand user input then create a command and executes it","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"darryl-chan"},"content":"     * @param userCommand String user command","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"darryl-chan"},"content":"     * @param description String user description","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"darryl-chan"},"content":"    private void parseUserInput(String userCommand, String description) {","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"darryl-chan"},"content":"        Command command;","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"darryl-chan"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"darryl-chan"},"content":"            CommandType commandType \u003d CommandType.valueOf(userCommand.toUpperCase());","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"darryl-chan"},"content":"            switch (commandType) {","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"darryl-chan"},"content":"                case BYE:","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"darryl-chan"},"content":"                    command \u003d new CommandBye(taskList, ui);","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"darryl-chan"},"content":"                    isRunning \u003d false;","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"darryl-chan"},"content":"                    break;","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"darryl-chan"},"content":"                case LIST:","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"darryl-chan"},"content":"                    command \u003d new CommandList(taskList, ui);","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"darryl-chan"},"content":"                    break;","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"darryl-chan"},"content":"                case MARK: ","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"darryl-chan"},"content":"                    command \u003d new CommandMark(taskList, ui);","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"darryl-chan"},"content":"                    break;","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"darryl-chan"},"content":"                case UNMARK: ","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"darryl-chan"},"content":"                    command \u003d new CommandUnmark(taskList, ui);","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"darryl-chan"},"content":"                    break;","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"darryl-chan"},"content":"                case DELETE:","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"darryl-chan"},"content":"                    command \u003d new CommandDelete(taskList, ui);","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"darryl-chan"},"content":"                    break;","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"darryl-chan"},"content":"                case TODO: ","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"darryl-chan"},"content":"                    command \u003d new CommandToDo(taskList, ui);","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"darryl-chan"},"content":"                    break;","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"darryl-chan"},"content":"                case DEADLINE:","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"darryl-chan"},"content":"                    command \u003d new CommandDeadline(taskList, ui);","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"darryl-chan"},"content":"                    break;","lastModifiedDate":"2024-02-01"},{"lineNumber":99,"author":{"gitId":"darryl-chan"},"content":"                case EVENT:","lastModifiedDate":"2024-02-02"},{"lineNumber":100,"author":{"gitId":"darryl-chan"},"content":"                    command \u003d new CommandEvent(taskList, ui);","lastModifiedDate":"2024-02-01"},{"lineNumber":101,"author":{"gitId":"darryl-chan"},"content":"                    break;","lastModifiedDate":"2024-02-01"},{"lineNumber":102,"author":{"gitId":"darryl-chan"},"content":"                default: // find","lastModifiedDate":"2024-02-02"},{"lineNumber":103,"author":{"gitId":"darryl-chan"},"content":"                    command \u003d new CommandFind(taskList, ui);","lastModifiedDate":"2024-02-02"},{"lineNumber":104,"author":{"gitId":"darryl-chan"},"content":"                    break;","lastModifiedDate":"2024-02-02"},{"lineNumber":105,"author":{"gitId":"darryl-chan"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":106,"author":{"gitId":"darryl-chan"},"content":"            command.execute(description);","lastModifiedDate":"2024-02-01"},{"lineNumber":107,"author":{"gitId":"darryl-chan"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":108,"author":{"gitId":"darryl-chan"},"content":"            ui.print(\"Sorry I don\u0027t recognize that command :/\");","lastModifiedDate":"2024-02-01"},{"lineNumber":109,"author":{"gitId":"darryl-chan"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":110,"author":{"gitId":"darryl-chan"},"content":"            ui.print(e.getMessage());","lastModifiedDate":"2024-02-01"},{"lineNumber":111,"author":{"gitId":"darryl-chan"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":112,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":113,"author":{"gitId":"darryl-chan"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"darryl-chan":113}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darryl-chan"},"content":"package duke;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"darryl-chan"},"content":"import java.io.File;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"darryl-chan"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"darryl-chan"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"darryl-chan"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"darryl-chan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"darryl-chan"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"darryl-chan"},"content":"import duke.exceptions.DukeCeption;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"darryl-chan"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"darryl-chan"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"darryl-chan"},"content":" * Class that is used to save and load data from file","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"darryl-chan"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"darryl-chan"},"content":"public class Storage {","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"darryl-chan"},"content":"    private String filePath;","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"darryl-chan"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"darryl-chan"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"darryl-chan"},"content":"     * loads data from file and push it into the Task List","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"darryl-chan"},"content":"     * @param taskList TaskList contains all the tasks","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"darryl-chan"},"content":"     * @param ui Ui to print to system","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"darryl-chan"},"content":"    public void loadData(TaskList taskList, Ui ui) {","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"darryl-chan"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"darryl-chan"},"content":"            File file \u003d this.retrieveFile(ui);","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"darryl-chan"},"content":"            ArrayList\u003cString\u003e dataStrings \u003d this.dataToText(file);","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"darryl-chan"},"content":"            taskList.loadList(dataStrings);","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"darryl-chan"},"content":"        } catch (DukeCeption e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"darryl-chan"},"content":"            ui.print(e.getMessage());","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"darryl-chan"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"darryl-chan"},"content":"     * Read file and transform it into text for the TaskList","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"darryl-chan"},"content":"     * @param file File to be read","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"darryl-chan"},"content":"     * @return ArrayList of Task data","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"darryl-chan"},"content":"     * @throws DukeCeption when file is not found","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"darryl-chan"},"content":"    public ArrayList\u003cString\u003e dataToText(File file) throws DukeCeption {","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"darryl-chan"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"darryl-chan"},"content":"            ArrayList\u003cString\u003e dataStrings \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"darryl-chan"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"darryl-chan"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"darryl-chan"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"darryl-chan"},"content":"                dataStrings.add(line);","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"darryl-chan"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"darryl-chan"},"content":"            scanner.close();","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"darryl-chan"},"content":"            return dataStrings;","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"darryl-chan"},"content":"            } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"darryl-chan"},"content":"                throw new DukeCeption(\"File is not found!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"darryl-chan"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"darryl-chan"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"darryl-chan"},"content":"     * Saves Task data into the file","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"darryl-chan"},"content":"     * @param taskList Task List of tasks","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"darryl-chan"},"content":"     * @param ui Ui to print to system","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"darryl-chan"},"content":"    public void saveData(TaskList taskList, Ui ui) {","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"darryl-chan"},"content":"        File file \u003d this.retrieveFile(ui);","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"darryl-chan"},"content":"        ArrayList\u003cString\u003e dataToTexts \u003d taskList.saveFormat();","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"darryl-chan"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"darryl-chan"},"content":"            FileWriter writer \u003d new FileWriter(file, false);","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"darryl-chan"},"content":"            for (String text : dataToTexts) {","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"darryl-chan"},"content":"                writer.write(text + \"\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"darryl-chan"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"darryl-chan"},"content":"            writer.close();","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"darryl-chan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"darryl-chan"},"content":"            ui.print(e.getMessage());","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"darryl-chan"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"darryl-chan"},"content":"     * Retrive the file to be either read or save","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"darryl-chan"},"content":"     * @param ui Ui to print to system","lastModifiedDate":"2024-02-02"},{"lineNumber":84,"author":{"gitId":"darryl-chan"},"content":"     * @return File that was retrieved","lastModifiedDate":"2024-02-02"},{"lineNumber":85,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":86,"author":{"gitId":"darryl-chan"},"content":"    public File retrieveFile(Ui ui) {","lastModifiedDate":"2024-02-02"},{"lineNumber":87,"author":{"gitId":"darryl-chan"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"darryl-chan"},"content":"        File parentDir \u003d file.getParentFile();","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"darryl-chan"},"content":"        if (!parentDir.exists()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":91,"author":{"gitId":"darryl-chan"},"content":"            parentDir.mkdirs();","lastModifiedDate":"2024-01-31"},{"lineNumber":92,"author":{"gitId":"darryl-chan"},"content":"            ui.print(\"Created data folder as none was found\");","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"darryl-chan"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"darryl-chan"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":95,"author":{"gitId":"darryl-chan"},"content":"            if (file.createNewFile()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"darryl-chan"},"content":"                ui.print(\"Created linus.txt to read files from\");","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"darryl-chan"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":98,"author":{"gitId":"darryl-chan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":99,"author":{"gitId":"darryl-chan"},"content":"            ui.print(\"Could not create file :/\");","lastModifiedDate":"2024-02-01"},{"lineNumber":100,"author":{"gitId":"darryl-chan"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":101,"author":{"gitId":"darryl-chan"},"content":"        return file;","lastModifiedDate":"2024-01-31"},{"lineNumber":102,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":103,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":104,"author":{"gitId":"darryl-chan"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"darryl-chan":104}},{"path":"src/main/java/duke/Test.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darryl-chan"},"content":"package duke;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"darryl-chan"},"content":"// import java.time.LocalDateTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"darryl-chan"},"content":"// import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"darryl-chan"},"content":"public class Test {","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"darryl-chan"},"content":"    enum Size {","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"darryl-chan"},"content":"        SMALL, MEDIUM, LARGE, EXTRALARGE","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"darryl-chan"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"darryl-chan"},"content":"        String abc \u003d\"medium\";","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"darryl-chan"},"content":"        //Size abc \u003d Size.valueOf(\"smalll\".toUpperCase());","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"darryl-chan"},"content":"        System.out.println(Size.valueOf(abc.toUpperCase()));","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"darryl-chan"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"darryl-chan":14}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darryl-chan"},"content":"package duke;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"darryl-chan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-21"},{"lineNumber":3,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":4,"author":{"gitId":"darryl-chan"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"darryl-chan"},"content":" * Class that prints to the system","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"darryl-chan"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"darryl-chan"},"content":"public class Ui {","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"darryl-chan"},"content":"    private final String BORDER \u003d \"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\";","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"darryl-chan"},"content":"    private ArrayList\u003cString\u003e printList;","lastModifiedDate":"2024-01-21"},{"lineNumber":10,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":11,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"darryl-chan"},"content":"     * Constructor for Ui","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"darryl-chan"},"content":"    public Ui() {","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"darryl-chan"},"content":"        this.printList \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2024-01-21"},{"lineNumber":16,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":17,"author":{"gitId":"darryl-chan"},"content":"    ","lastModifiedDate":"2024-01-21"},{"lineNumber":18,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"darryl-chan"},"content":"     * Adds the String to be printed","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"darryl-chan"},"content":"     * @param print String to be printed to the system","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"darryl-chan"},"content":"    public void add(String print) {","lastModifiedDate":"2024-01-21"},{"lineNumber":23,"author":{"gitId":"darryl-chan"},"content":"        this.printList.add(print);","lastModifiedDate":"2024-01-21"},{"lineNumber":24,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":25,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":26,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"darryl-chan"},"content":"     * Prints everything in the list","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"darryl-chan"},"content":"    public void print() {","lastModifiedDate":"2024-01-21"},{"lineNumber":30,"author":{"gitId":"darryl-chan"},"content":"        System.out.println(this.toString());","lastModifiedDate":"2024-01-21"},{"lineNumber":31,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":32,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":33,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"darryl-chan"},"content":"     * Adds the String to tbe printed","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"darryl-chan"},"content":"     * @param print String to be added then printed immediately to the system","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"darryl-chan"},"content":"    public void print(String print) {","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"darryl-chan"},"content":"        this.add(print);","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"darryl-chan"},"content":"        this.print();","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"darryl-chan"},"content":"     * Greets the user","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"darryl-chan"},"content":"     * @param name String name of chatbot","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"darryl-chan"},"content":"    public void greeting(String name) {","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"darryl-chan"},"content":"        this.add(String.format(\"Hello I\u0027m %s\", name));","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"darryl-chan"},"content":"        this.add(\"What Can I do for you?\");","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"darryl-chan"},"content":"        this.print();","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"darryl-chan"},"content":"     * Prints everything in the list with borders and clear it","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"darryl-chan"},"content":"    @Override","lastModifiedDate":"2024-01-21"},{"lineNumber":56,"author":{"gitId":"darryl-chan"},"content":"    public String toString() {","lastModifiedDate":"2024-01-21"},{"lineNumber":57,"author":{"gitId":"darryl-chan"},"content":"        String finalString \u003d \"\";","lastModifiedDate":"2024-01-21"},{"lineNumber":58,"author":{"gitId":"darryl-chan"},"content":"        for (int i \u003d 0; i \u003c printList.size(); i++) {","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"darryl-chan"},"content":"            if (i \u003d\u003d printList.size() - 1) {","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"darryl-chan"},"content":"                finalString +\u003d String.format(\"\\t%s\", printList.get(i));","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"darryl-chan"},"content":"            } else {","lastModifiedDate":"2024-01-21"},{"lineNumber":62,"author":{"gitId":"darryl-chan"},"content":"                finalString +\u003d String.format(\"\\t%s\\n\", printList.get(i));","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"darryl-chan"},"content":"            }","lastModifiedDate":"2024-01-21"},{"lineNumber":64,"author":{"gitId":"darryl-chan"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":65,"author":{"gitId":"darryl-chan"},"content":"        printList.clear();","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"darryl-chan"},"content":"        return String.format(\"\\t%s\\n%s\\n\\t%s\",","lastModifiedDate":"2024-01-21"},{"lineNumber":67,"author":{"gitId":"darryl-chan"},"content":"                this.BORDER,","lastModifiedDate":"2024-01-21"},{"lineNumber":68,"author":{"gitId":"darryl-chan"},"content":"                finalString,","lastModifiedDate":"2024-01-21"},{"lineNumber":69,"author":{"gitId":"darryl-chan"},"content":"                this.BORDER);","lastModifiedDate":"2024-01-21"},{"lineNumber":70,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":71,"author":{"gitId":"darryl-chan"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"darryl-chan":71}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darryl-chan"},"content":"package duke.commands;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"darryl-chan"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"darryl-chan"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"darryl-chan"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"darryl-chan"},"content":" * The parent class of command classes","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"darryl-chan"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"darryl-chan"},"content":"public abstract class Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"darryl-chan"},"content":"    protected TaskList taskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"darryl-chan"},"content":"    protected Ui ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"darryl-chan"},"content":"     * constructor for command","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"darryl-chan"},"content":"     * @param taskList Task List contains all the tasks","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"darryl-chan"},"content":"     * @param ui Ui processes the outputs of the program","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"darryl-chan"},"content":"    public Command(TaskList taskList, Ui ui) {","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"darryl-chan"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"darryl-chan"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"darryl-chan"},"content":"     * manipulate the task list and ui according to the command","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"darryl-chan"},"content":"     * @param description string that is specific to the command","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"darryl-chan"},"content":"    public void execute(String description) {}","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"darryl-chan"},"content":"    ","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"darryl-chan"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"darryl-chan":30}},{"path":"src/main/java/duke/commands/CommandBye.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darryl-chan"},"content":"package duke.commands;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"darryl-chan"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"darryl-chan"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"darryl-chan"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"darryl-chan"},"content":" * It is the command when the user inputs a bye","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"darryl-chan"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"darryl-chan"},"content":"public class CommandBye extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"darryl-chan"},"content":"    public CommandBye(TaskList taskList, Ui ui) {","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"darryl-chan"},"content":"        super(taskList, ui);","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"darryl-chan"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"darryl-chan"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"darryl-chan"},"content":"    public void execute(String description) {","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"darryl-chan"},"content":"        ui.print(\"Goodbye. See you later!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"darryl-chan"},"content":"    ","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"darryl-chan"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"darryl-chan":23}},{"path":"src/main/java/duke/commands/CommandDeadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darryl-chan"},"content":"package duke.commands;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"darryl-chan"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"darryl-chan"},"content":"import duke.exceptions.DukeCeption;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"darryl-chan"},"content":"import duke.exceptions.EmptyDescriptionException;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"darryl-chan"},"content":"import duke.exceptions.IncorrectFormatException;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"darryl-chan"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"darryl-chan"},"content":"import duke.tasks.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"darryl-chan"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"darryl-chan"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"darryl-chan"},"content":" * The command class to create a deadline task","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"darryl-chan"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"darryl-chan"},"content":"public class CommandDeadline extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"darryl-chan"},"content":"    ","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"darryl-chan"},"content":"    public CommandDeadline(TaskList taskList, Ui ui) {","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"darryl-chan"},"content":"        super(taskList, ui);","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"darryl-chan"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"darryl-chan"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"darryl-chan"},"content":"    public void execute(String description) {","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"darryl-chan"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"darryl-chan"},"content":"            Task task \u003d cleanUserInput(description);","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"darryl-chan"},"content":"            taskList.addNewTask(task);","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"darryl-chan"},"content":"            ui.add(\"Okay! added this Deadline:\");","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"darryl-chan"},"content":"            ui.add(task.toString());","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"darryl-chan"},"content":"            ui.add(String.format(\"Now you have %d tasks in the list.\", taskList.getSize()));","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"darryl-chan"},"content":"        } catch (DukeCeption e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"darryl-chan"},"content":"            ui.add(e.getMessage());","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"darryl-chan"},"content":"        } finally {","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"darryl-chan"},"content":"            ui.print();","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"darryl-chan"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"darryl-chan"},"content":"     * Cleans the raw user input and creates a Deadline Task after cleaning user input","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"darryl-chan"},"content":"     * Returns a task after cleaning the user input","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"darryl-chan"},"content":"     * @param description String of raw user input","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"darryl-chan"},"content":"     * @return Task after cleaning user input","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"darryl-chan"},"content":"     * @throws DukeCeption when description is empty or /by is written incorrectly","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"darryl-chan"},"content":"    public Task cleanUserInput(String description) throws DukeCeption {","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"darryl-chan"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"darryl-chan"},"content":"            if (description.isEmpty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"darryl-chan"},"content":"                throw new EmptyDescriptionException(\"Deadline cannot be empty!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"darryl-chan"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"darryl-chan"},"content":"            String[] descriptionList \u003d description.split(\"/by\", 2);","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"darryl-chan"},"content":"            String taskDescription \u003d descriptionList[0].trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"darryl-chan"},"content":"            String by \u003d descriptionList[1].trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"darryl-chan"},"content":"            Task task \u003d new Deadline(taskDescription, by);","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"darryl-chan"},"content":"            return task;","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"darryl-chan"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"darryl-chan"},"content":"                throw new IncorrectFormatException(\"Make sure /by is written properly\");","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"darryl-chan"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"darryl-chan"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"darryl-chan":62}},{"path":"src/main/java/duke/commands/CommandDelete.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darryl-chan"},"content":"package duke.commands;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"darryl-chan"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"darryl-chan"},"content":"import duke.exceptions.DukeCeption;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"darryl-chan"},"content":"import duke.tasks.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"darryl-chan"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"darryl-chan"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"darryl-chan"},"content":" * The command class when user inputs delete","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"darryl-chan"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"darryl-chan"},"content":"public class CommandDelete extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"darryl-chan"},"content":"    public CommandDelete(TaskList taskList, Ui ui) {","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"darryl-chan"},"content":"        super(taskList, ui);","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"darryl-chan"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"darryl-chan"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"darryl-chan"},"content":"    public void execute(String taskNumber) {","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"darryl-chan"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"darryl-chan"},"content":"            Task task \u003d taskList.delete(taskNumber);","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"darryl-chan"},"content":"            ui.add(\"Okay! this task is now removed:\");","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"darryl-chan"},"content":"            ui.add(task.toString());","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"darryl-chan"},"content":"        } catch (DukeCeption e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"darryl-chan"},"content":"            ui.add(e.getMessage());","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"darryl-chan"},"content":"        } finally {","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"darryl-chan"},"content":"            ui.print();","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"darryl-chan"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"darryl-chan"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"darryl-chan":34}},{"path":"src/main/java/duke/commands/CommandEvent.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darryl-chan"},"content":"package duke.commands;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"darryl-chan"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"darryl-chan"},"content":"import duke.exceptions.DukeCeption;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"darryl-chan"},"content":"import duke.exceptions.EmptyDescriptionException;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"darryl-chan"},"content":"import duke.exceptions.IncorrectFormatException;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"darryl-chan"},"content":"import duke.tasks.Event;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"darryl-chan"},"content":"import duke.tasks.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"darryl-chan"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"darryl-chan"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"darryl-chan"},"content":" * The command class when user wants to create an event task","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"darryl-chan"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"darryl-chan"},"content":"public class CommandEvent extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"darryl-chan"},"content":"    public CommandEvent(TaskList taskList, Ui ui) {","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"darryl-chan"},"content":"        super(taskList, ui);","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"darryl-chan"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"darryl-chan"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"darryl-chan"},"content":"    public void execute(String description) {","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"darryl-chan"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"darryl-chan"},"content":"            Task task \u003d this.cleanUserInput(description);","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"darryl-chan"},"content":"            taskList.addNewTask(task);","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"darryl-chan"},"content":"            ui.add(\"Okay! added this Event:\");","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"darryl-chan"},"content":"            ui.add(task.toString());","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"darryl-chan"},"content":"            ui.add(String.format(\"Now you have %d tasks in the list.\", taskList.getSize()));","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"darryl-chan"},"content":"        } catch (DukeCeption e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"darryl-chan"},"content":"            ui.add(e.getMessage());","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"darryl-chan"},"content":"        } finally {","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"darryl-chan"},"content":"            ui.print();","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"darryl-chan"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"darryl-chan"},"content":"    ","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"darryl-chan"},"content":"     * Cleans the raw user input and creates an Event Task after cleaning user input","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"darryl-chan"},"content":"     * Returns a task after cleaning the user input","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"darryl-chan"},"content":"     * @param description String of raw user input","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"darryl-chan"},"content":"     * @return Task after cleaning user input","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"darryl-chan"},"content":"     * @throws DukeCeption when description is empty or /from and /to is written incorrectly","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"darryl-chan"},"content":"    private Task cleanUserInput(String description) throws DukeCeption {","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"darryl-chan"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"darryl-chan"},"content":"            if (description.isEmpty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"darryl-chan"},"content":"                throw new EmptyDescriptionException(\"Event cannot be empty!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"darryl-chan"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"darryl-chan"},"content":"            String[] descriptionList \u003d description.split(\"/from\", 2);","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"darryl-chan"},"content":"            String[] fromAndToList \u003d descriptionList[1].split(\"/to\", 2);","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"darryl-chan"},"content":"            String taskDescription \u003d descriptionList[0].trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"darryl-chan"},"content":"            String from \u003d fromAndToList[0].trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"darryl-chan"},"content":"            String to \u003d fromAndToList[1].trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"darryl-chan"},"content":"            Task task \u003d new Event(taskDescription, from, to);","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"darryl-chan"},"content":"            return task;","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"darryl-chan"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"darryl-chan"},"content":"            throw new IncorrectFormatException(\"Make sure /from and /to is written properly\");","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"darryl-chan"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"darryl-chan"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"darryl-chan":63}},{"path":"src/main/java/duke/commands/CommandFind.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darryl-chan"},"content":"package duke.commands;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"darryl-chan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"darryl-chan"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"darryl-chan"},"content":"import duke.tasks.Task;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"darryl-chan"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"darryl-chan"},"content":"public class CommandFind extends Command {","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"darryl-chan"},"content":"    public CommandFind(TaskList taskList, Ui ui) {","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"darryl-chan"},"content":"        super(taskList, ui);","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"darryl-chan"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"darryl-chan"},"content":"    public void execute(String find) {","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"darryl-chan"},"content":"        ArrayList\u003cTask\u003e listOfTask \u003d taskList.getList();","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"darryl-chan"},"content":"        int counter \u003d 1;","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"darryl-chan"},"content":"        ui.add(\"These tasks matches your search:\");","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"darryl-chan"},"content":"        for (Task currTask : listOfTask) {","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"darryl-chan"},"content":"            if (currTask.isMatchingDescription(find)) {","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"darryl-chan"},"content":"                ui.add(String.format(\"%d. %s\",","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"darryl-chan"},"content":"                        counter,","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"darryl-chan"},"content":"                        currTask));","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"darryl-chan"},"content":"                counter +\u003d 1;","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"darryl-chan"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"darryl-chan"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"darryl-chan"},"content":"        ui.print();","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"darryl-chan"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"darryl-chan"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"darryl-chan":31}},{"path":"src/main/java/duke/commands/CommandList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darryl-chan"},"content":"package duke.commands;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"darryl-chan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"darryl-chan"},"content":"import duke.tasks.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"darryl-chan"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"darryl-chan"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"darryl-chan"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"darryl-chan"},"content":" * The command class when user wants to see tasks in the list","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"darryl-chan"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"darryl-chan"},"content":"public class CommandList extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"darryl-chan"},"content":"    public CommandList(TaskList taskList, Ui ui) {","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"darryl-chan"},"content":"        super(taskList, ui);","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"darryl-chan"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"darryl-chan"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"darryl-chan"},"content":"    public void execute(String description) {","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"darryl-chan"},"content":"        ArrayList\u003cTask\u003e list \u003d taskList.getList();","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"darryl-chan"},"content":"        ui.add(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"darryl-chan"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"darryl-chan"},"content":"            ui.add(String.format(\"%d. %s\",","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"darryl-chan"},"content":"                    i + 1,","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"darryl-chan"},"content":"                    list.get(i)));","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"darryl-chan"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"darryl-chan"},"content":"        ui.print();","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"darryl-chan"},"content":"    ","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"darryl-chan"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"darryl-chan":34}},{"path":"src/main/java/duke/commands/CommandMark.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darryl-chan"},"content":"package duke.commands;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"darryl-chan"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"darryl-chan"},"content":"import duke.exceptions.DukeCeption;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"darryl-chan"},"content":"import duke.tasks.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"darryl-chan"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"darryl-chan"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"darryl-chan"},"content":" * The command class when user wants to mark a task as done","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"darryl-chan"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"darryl-chan"},"content":"public class CommandMark extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"darryl-chan"},"content":"    public CommandMark(TaskList taskList, Ui ui) {","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"darryl-chan"},"content":"        super(taskList, ui);","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"darryl-chan"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"darryl-chan"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"darryl-chan"},"content":"    public void execute(String taskNumber) {","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"darryl-chan"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"darryl-chan"},"content":"            Task task \u003d taskList.getTask(taskNumber);","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"darryl-chan"},"content":"            task.markAsDone();","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"darryl-chan"},"content":"            ui.add(\"Great! I will mark this as done:\");","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"darryl-chan"},"content":"            ui.add(task.toString());","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"darryl-chan"},"content":"            ui.print();","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"darryl-chan"},"content":"        } catch (DukeCeption e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"darryl-chan"},"content":"            ui.print(e.getMessage());","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"darryl-chan"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"darryl-chan"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"darryl-chan":35}},{"path":"src/main/java/duke/commands/CommandToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darryl-chan"},"content":"package duke.commands;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"darryl-chan"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"darryl-chan"},"content":"import duke.exceptions.DukeCeption;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"darryl-chan"},"content":"import duke.exceptions.EmptyDescriptionException;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"darryl-chan"},"content":"import duke.tasks.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"darryl-chan"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"darryl-chan"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"darryl-chan"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"darryl-chan"},"content":" * The command class to create a ToDo task","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"darryl-chan"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"darryl-chan"},"content":"public class CommandToDo extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"darryl-chan"},"content":"    public CommandToDo(TaskList taskList, Ui ui) {","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"darryl-chan"},"content":"        super(taskList, ui);","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"darryl-chan"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"darryl-chan"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"darryl-chan"},"content":"    public void execute(String description) {","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"darryl-chan"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"darryl-chan"},"content":"            Task task \u003d this.cleanUserInput(description);","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"darryl-chan"},"content":"            taskList.addNewTask(task);","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"darryl-chan"},"content":"            ui.add(\"Okay! added this ToDo:\");","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"darryl-chan"},"content":"            ui.add(task.toString());","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"darryl-chan"},"content":"            ui.add(String.format(\"Now you have %d tasks in the list.\", taskList.getSize()));","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"darryl-chan"},"content":"        } catch (DukeCeption e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"darryl-chan"},"content":"            ui.add(e.getMessage());","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"darryl-chan"},"content":"        } finally {","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"darryl-chan"},"content":"            ui.print();","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"darryl-chan"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"darryl-chan"},"content":"     * Cleans the raw user input and creates a ToDo Task after cleaning user input","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"darryl-chan"},"content":"     * Returns a task after cleaning the user input","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"darryl-chan"},"content":"     * @param description String of raw user input","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"darryl-chan"},"content":"     * @return Task after cleaning user input","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"darryl-chan"},"content":"     * @throws DukeCeption when description is empty or /by is written incorrectly","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"darryl-chan"},"content":"    public Task cleanUserInput(String description) throws DukeCeption {","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"darryl-chan"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"darryl-chan"},"content":"            throw new EmptyDescriptionException(\"ToDo cannot be empty!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"darryl-chan"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"darryl-chan"},"content":"        Task task \u003d new ToDo(description);","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"darryl-chan"},"content":"        return task;","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"darryl-chan"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"darryl-chan":55}},{"path":"src/main/java/duke/commands/CommandUnmark.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darryl-chan"},"content":"package duke.commands;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"darryl-chan"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"darryl-chan"},"content":"import duke.exceptions.DukeCeption;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"darryl-chan"},"content":"import duke.tasks.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"darryl-chan"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"darryl-chan"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"darryl-chan"},"content":" * Command class when user wants to mark a task as not done","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"darryl-chan"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"darryl-chan"},"content":"public class CommandUnmark extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"darryl-chan"},"content":"    public CommandUnmark(TaskList taskList, Ui ui) {","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"darryl-chan"},"content":"        super(taskList, ui);","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"darryl-chan"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"darryl-chan"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"darryl-chan"},"content":"    public void execute(String taskNumber) {","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"darryl-chan"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"darryl-chan"},"content":"            Task task \u003d taskList.getTask(taskNumber);","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"darryl-chan"},"content":"            task.markAsNotDone();","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"darryl-chan"},"content":"            ui.add(\"Alright! this task is now unmarked:\");","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"darryl-chan"},"content":"            ui.add(task.toString());","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"darryl-chan"},"content":"        } catch (DukeCeption e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"darryl-chan"},"content":"            ui.add(e.getMessage());","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"darryl-chan"},"content":"        } finally {","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"darryl-chan"},"content":"            ui.print();","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"darryl-chan"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"darryl-chan"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"darryl-chan":35}},{"path":"src/main/java/duke/exceptions/DukeCeption.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darryl-chan"},"content":"package duke.exceptions;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"darryl-chan"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"darryl-chan"},"content":" * Parent class of DukeCeptions","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"darryl-chan"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"darryl-chan"},"content":"public class DukeCeption extends Exception {","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"darryl-chan"},"content":"    public DukeCeption(String error) {","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"darryl-chan"},"content":"        super(error);","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"darryl-chan"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"darryl-chan":10}},{"path":"src/main/java/duke/exceptions/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darryl-chan"},"content":"package duke.exceptions;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"darryl-chan"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"darryl-chan"},"content":" * Thrown when description is empty","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"darryl-chan"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"darryl-chan"},"content":"public class EmptyDescriptionException extends DukeCeption {","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"darryl-chan"},"content":"    public EmptyDescriptionException(String error) {","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"darryl-chan"},"content":"        super(error);","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"darryl-chan"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"darryl-chan":10}},{"path":"src/main/java/duke/exceptions/IncorrectFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darryl-chan"},"content":"package duke.exceptions;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"darryl-chan"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"darryl-chan"},"content":" * Thrown when input is unrecognizeable or different types","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"darryl-chan"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"darryl-chan"},"content":"public class IncorrectFormatException extends DukeCeption {","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"darryl-chan"},"content":"    public IncorrectFormatException(String error) {","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"darryl-chan"},"content":"        super(error);","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"darryl-chan"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"darryl-chan":10}},{"path":"src/main/java/duke/exceptions/NumberOutOfBoundsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darryl-chan"},"content":"package duke.exceptions;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"darryl-chan"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"darryl-chan"},"content":" * Thrown when trying to access an index that is not in the list","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"darryl-chan"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"darryl-chan"},"content":"public class NumberOutOfBoundsException extends DukeCeption {","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"darryl-chan"},"content":"    public NumberOutOfBoundsException(String error) {","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"darryl-chan"},"content":"        super(error);","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"darryl-chan"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"darryl-chan":10}},{"path":"src/main/java/duke/tasks/DateTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darryl-chan"},"content":"package duke.tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"darryl-chan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"darryl-chan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"darryl-chan"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"darryl-chan"},"content":" * Class to read and print dates","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"darryl-chan"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"darryl-chan"},"content":"public class DateTask {","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"darryl-chan"},"content":"    private LocalDateTime localDateTime;","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"darryl-chan"},"content":"    private DateTimeFormatter DATE_TIME_FORMATTER_PRINT \u003d DateTimeFormatter.ofPattern(","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"darryl-chan"},"content":"                \"\u0027Date:\u0027 d MMM yyyy \u0027Time:\u0027 h:mm a\");","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"darryl-chan"},"content":"    private DateTimeFormatter DATE_TIME_FORMATTER_SAVE_AND_READ \u003d DateTimeFormatter.ofPattern(","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"darryl-chan"},"content":"                \"dd/MM/yyyy HHmm\");","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"darryl-chan"},"content":"     * Constructor for DateTask","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"darryl-chan"},"content":"     * @param localDateTime Local Date Time for the task","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"darryl-chan"},"content":"    public DateTask(LocalDateTime localDateTime) {","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"darryl-chan"},"content":"        this.localDateTime \u003d localDateTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"darryl-chan"},"content":"     * Constructor for DateTask","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"darryl-chan"},"content":"     * @param dateString String for date and time","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"darryl-chan"},"content":"    public DateTask(String dateString) {","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"darryl-chan"},"content":"        LocalDateTime parsedDateTime \u003d LocalDateTime.parse(dateString, DATE_TIME_FORMATTER_SAVE_AND_READ);","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"darryl-chan"},"content":"        this.localDateTime \u003d parsedDateTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"darryl-chan"},"content":"     * Change the date into a save format","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"darryl-chan"},"content":"     * @return String for the date to be saved into a file","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"darryl-chan"},"content":"    public String saveFormat() {","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"darryl-chan"},"content":"        return localDateTime.format(DATE_TIME_FORMATTER_SAVE_AND_READ);","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"darryl-chan"},"content":"     * @return String for date to be printed","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"darryl-chan"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"darryl-chan"},"content":"    public String toString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"darryl-chan"},"content":"        return localDateTime.format(DATE_TIME_FORMATTER_PRINT);","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"darryl-chan"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"darryl-chan":50}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darryl-chan"},"content":"package duke.tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"darryl-chan"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"darryl-chan"},"content":" * Class for Deadline Task","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"darryl-chan"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"darryl-chan"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"darryl-chan"},"content":"    protected DateTask by;","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"darryl-chan"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"darryl-chan"},"content":"        this(description, by, false);","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"darryl-chan"},"content":"    public Deadline(String description, String by, boolean isDone) {","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"darryl-chan"},"content":"        super(description, isDone);","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"darryl-chan"},"content":"        this.by \u003d new DateTask(by);","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"darryl-chan"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"darryl-chan"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"darryl-chan"},"content":"    public String saveFormat() {","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"darryl-chan"},"content":"        return String.format(\"%s;;%s;;%s\",","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"darryl-chan"},"content":"                \"D\",super.saveFormat(), by.saveFormat());","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"darryl-chan"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"darryl-chan"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":31,"author":{"gitId":"darryl-chan"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":32,"author":{"gitId":"darryl-chan"},"content":"        return String.format(\"%s%s%s\",","lastModifiedDate":"2024-01-22"},{"lineNumber":33,"author":{"gitId":"darryl-chan"},"content":"                \"[D]\",","lastModifiedDate":"2024-01-22"},{"lineNumber":34,"author":{"gitId":"darryl-chan"},"content":"                super.toString(),","lastModifiedDate":"2024-01-22"},{"lineNumber":35,"author":{"gitId":"darryl-chan"},"content":"                \" (by: \" + by + \")\");","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":37,"author":{"gitId":"darryl-chan"},"content":"    ","lastModifiedDate":"2024-01-22"},{"lineNumber":38,"author":{"gitId":"darryl-chan"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"darryl-chan":38}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darryl-chan"},"content":"package duke.tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"darryl-chan"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"darryl-chan"},"content":" * Class for Event Task","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"darryl-chan"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"darryl-chan"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"darryl-chan"},"content":"    protected DateTask from;","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"darryl-chan"},"content":"    protected DateTask to;","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"darryl-chan"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"darryl-chan"},"content":"        this(description, from, to , false);","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"darryl-chan"},"content":"    public Event(String description, String from, String to, boolean isDone) {","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"darryl-chan"},"content":"        super(description, isDone);","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"darryl-chan"},"content":"        this.from \u003d new DateTask(from);","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"darryl-chan"},"content":"        this.to \u003d new DateTask(to);","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"darryl-chan"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"darryl-chan"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"darryl-chan"},"content":"    public String saveFormat() {","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"darryl-chan"},"content":"        return String.format(\"%s;;%s;;%s;;%s\",","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"darryl-chan"},"content":"                \"E\", super.saveFormat(), from.saveFormat(), to.saveFormat());","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"darryl-chan"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"darryl-chan"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":33,"author":{"gitId":"darryl-chan"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":34,"author":{"gitId":"darryl-chan"},"content":"        return \"[E]\" + super.toString() + ","lastModifiedDate":"2024-01-22"},{"lineNumber":35,"author":{"gitId":"darryl-chan"},"content":"        String.format(\" (from: %s to: %s)\", from, to);","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":37,"author":{"gitId":"darryl-chan"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"darryl-chan":37}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darryl-chan"},"content":"package duke.tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"darryl-chan"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"darryl-chan"},"content":" * Parent class for task","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"darryl-chan"},"content":" * @param description","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"darryl-chan"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"darryl-chan"},"content":"public class Task {","lastModifiedDate":"2024-01-21"},{"lineNumber":8,"author":{"gitId":"darryl-chan"},"content":"    protected String description;","lastModifiedDate":"2024-01-21"},{"lineNumber":9,"author":{"gitId":"darryl-chan"},"content":"    protected Boolean isDone;","lastModifiedDate":"2024-01-21"},{"lineNumber":10,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":11,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"darryl-chan"},"content":"     * Constructor for Task","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"darryl-chan"},"content":"     * @param description String task description","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"darryl-chan"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-21"},{"lineNumber":16,"author":{"gitId":"darryl-chan"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-21"},{"lineNumber":17,"author":{"gitId":"darryl-chan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-21"},{"lineNumber":18,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":19,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":20,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"darryl-chan"},"content":"     * Constructor for Task when loaded from a save","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"darryl-chan"},"content":"     * @param description","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"darryl-chan"},"content":"     * @param isDone","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"darryl-chan"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"darryl-chan"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"darryl-chan"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"darryl-chan"},"content":"     * Finds if the string find matches with a part of the description","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"darryl-chan"},"content":"     * @param find String to find match","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"darryl-chan"},"content":"     * @return Boolean true if match else false","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"darryl-chan"},"content":"    public Boolean isMatchingDescription(String find) {","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"darryl-chan"},"content":"        return description.contains(find);","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"darryl-chan"},"content":"     * gets status of class whether it is marked or not","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"darryl-chan"},"content":"     * @return String X or \u0027 \u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"darryl-chan"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-21"},{"lineNumber":44,"author":{"gitId":"darryl-chan"},"content":"        return (this.isDone ? \"X\" : \" \");","lastModifiedDate":"2024-01-21"},{"lineNumber":45,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":46,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":47,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"darryl-chan"},"content":"     * Mark task as done","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"darryl-chan"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-21"},{"lineNumber":51,"author":{"gitId":"darryl-chan"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":53,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":54,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"darryl-chan"},"content":"     * Unmark a task","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"darryl-chan"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2024-01-21"},{"lineNumber":58,"author":{"gitId":"darryl-chan"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":60,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":61,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"darryl-chan"},"content":"     * Creates the save format for task","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"darryl-chan"},"content":"     * @return String Task save format","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"darryl-chan"},"content":"    public String saveFormat() {","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"darryl-chan"},"content":"        String isDoneSave \u003d (isDone ? \"1\" : \"0\");","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"darryl-chan"},"content":"        return String.format(\"%s;;%s\",","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"darryl-chan"},"content":"                isDoneSave, description);","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"darryl-chan"},"content":"     * @return String for task to be printed","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"darryl-chan"},"content":"    @Override","lastModifiedDate":"2024-01-21"},{"lineNumber":75,"author":{"gitId":"darryl-chan"},"content":"    public String toString() {","lastModifiedDate":"2024-01-21"},{"lineNumber":76,"author":{"gitId":"darryl-chan"},"content":"        return String.format(\"[%s] %s\",","lastModifiedDate":"2024-01-21"},{"lineNumber":77,"author":{"gitId":"darryl-chan"},"content":"            this.getStatusIcon(),","lastModifiedDate":"2024-01-21"},{"lineNumber":78,"author":{"gitId":"darryl-chan"},"content":"            description);","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":80,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":81,"author":{"gitId":"darryl-chan"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"darryl-chan":81}},{"path":"src/main/java/duke/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darryl-chan"},"content":"package duke.tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"darryl-chan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-21"},{"lineNumber":4,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"darryl-chan"},"content":"import duke.exceptions.DukeCeption;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"darryl-chan"},"content":"import duke.exceptions.IncorrectFormatException;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"darryl-chan"},"content":"import duke.exceptions.NumberOutOfBoundsException;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"darryl-chan"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"darryl-chan"},"content":" * Class for storing all the tasks in the list","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"darryl-chan"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"darryl-chan"},"content":"public class TaskList {","lastModifiedDate":"2024-01-21"},{"lineNumber":13,"author":{"gitId":"darryl-chan"},"content":"    ","lastModifiedDate":"2024-01-21"},{"lineNumber":14,"author":{"gitId":"darryl-chan"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":16,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"darryl-chan"},"content":"     * Constructor for TaskList","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"darryl-chan"},"content":"    public TaskList() {","lastModifiedDate":"2024-01-21"},{"lineNumber":20,"author":{"gitId":"darryl-chan"},"content":"        this.list \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-01-21"},{"lineNumber":21,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":22,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":23,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"darryl-chan"},"content":"     * ","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"darryl-chan"},"content":"     * @return ArrayList of Tasks","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"darryl-chan"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"darryl-chan"},"content":"        return list;","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"darryl-chan"},"content":"     * ","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"darryl-chan"},"content":"     * @return int size of the list","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"darryl-chan"},"content":"    public int getSize() {","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"darryl-chan"},"content":"        return list.size();","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"darryl-chan"},"content":"     * Adds task into the list","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"darryl-chan"},"content":"     * @param task Task to be added","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"darryl-chan"},"content":"    public void addNewTask(Task task) {","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"darryl-chan"},"content":"        list.add(task);","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"darryl-chan"},"content":"     * ","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"darryl-chan"},"content":"     * @param number String of number","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"darryl-chan"},"content":"     * @return Task that is inputted by the user","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"darryl-chan"},"content":"     * @throws DukeCeption when number is not recognizeable or outside the range of the list","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"darryl-chan"},"content":"    public Task getTask(String number) throws DukeCeption {","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"darryl-chan"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"darryl-chan"},"content":"            int taskNumber \u003d Integer.parseInt(number) - 1;","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"darryl-chan"},"content":"            Task task \u003d list.get(taskNumber);","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"darryl-chan"},"content":"            return task;","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"darryl-chan"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"darryl-chan"},"content":"            throw new IncorrectFormatException(\"The number given is unrecognizable\");","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"darryl-chan"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"darryl-chan"},"content":"            throw new NumberOutOfBoundsException(\"The number is not in this list!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"darryl-chan"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"darryl-chan"},"content":"     * ","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"darryl-chan"},"content":"     * @param number String of number","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"darryl-chan"},"content":"     * @return Task that is inputted by the user","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"darryl-chan"},"content":"     * @throws DukeCeption when number is not recognizeable or outside the range of the list","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"darryl-chan"},"content":"    public Task delete(String number) throws DukeCeption {","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"darryl-chan"},"content":"            Task task \u003d this.getTask(number);","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"darryl-chan"},"content":"            int taskNumber \u003d Integer.parseInt(number) - 1;","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"darryl-chan"},"content":"            list.remove(taskNumber);","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"darryl-chan"},"content":"            return task;","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"darryl-chan"},"content":"     * Loads the list from text that was initially from the file","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"darryl-chan"},"content":"     * @param dataStrings ArrayList of data in String form","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"darryl-chan"},"content":"    public void loadList(ArrayList\u003cString\u003e dataStrings) {","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"darryl-chan"},"content":"        for (String line : dataStrings) {","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"darryl-chan"},"content":"            this.textToTask(line);","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"darryl-chan"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":86,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":87,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":88,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":89,"author":{"gitId":"darryl-chan"},"content":"     * Parse data texts from file and add task into Task List","lastModifiedDate":"2024-02-02"},{"lineNumber":90,"author":{"gitId":"darryl-chan"},"content":"     * @param line String of Task data","lastModifiedDate":"2024-02-02"},{"lineNumber":91,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":92,"author":{"gitId":"darryl-chan"},"content":"    public void textToTask(String line) {","lastModifiedDate":"2024-01-30"},{"lineNumber":93,"author":{"gitId":"darryl-chan"},"content":"        String[] separate \u003d line.split(\";;\");","lastModifiedDate":"2024-01-30"},{"lineNumber":94,"author":{"gitId":"darryl-chan"},"content":"        String taskType \u003d separate[0];","lastModifiedDate":"2024-01-30"},{"lineNumber":95,"author":{"gitId":"darryl-chan"},"content":"        boolean isDone \u003d separate[1].equals(\"1\") ? true : false;","lastModifiedDate":"2024-01-30"},{"lineNumber":96,"author":{"gitId":"darryl-chan"},"content":"        String description \u003d separate[2];","lastModifiedDate":"2024-01-30"},{"lineNumber":97,"author":{"gitId":"darryl-chan"},"content":"        Task task;","lastModifiedDate":"2024-01-30"},{"lineNumber":98,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":99,"author":{"gitId":"darryl-chan"},"content":"        switch (taskType) {","lastModifiedDate":"2024-01-30"},{"lineNumber":100,"author":{"gitId":"darryl-chan"},"content":"            case \"T\":","lastModifiedDate":"2024-01-30"},{"lineNumber":101,"author":{"gitId":"darryl-chan"},"content":"                task \u003d new ToDo(description, isDone);","lastModifiedDate":"2024-01-30"},{"lineNumber":102,"author":{"gitId":"darryl-chan"},"content":"                break;","lastModifiedDate":"2024-01-30"},{"lineNumber":103,"author":{"gitId":"darryl-chan"},"content":"            case \"D\":","lastModifiedDate":"2024-01-30"},{"lineNumber":104,"author":{"gitId":"darryl-chan"},"content":"                String by \u003d separate[3];","lastModifiedDate":"2024-01-30"},{"lineNumber":105,"author":{"gitId":"darryl-chan"},"content":"                task \u003d new Deadline(description, by, isDone);","lastModifiedDate":"2024-01-30"},{"lineNumber":106,"author":{"gitId":"darryl-chan"},"content":"                break;","lastModifiedDate":"2024-01-30"},{"lineNumber":107,"author":{"gitId":"darryl-chan"},"content":"            default:","lastModifiedDate":"2024-01-30"},{"lineNumber":108,"author":{"gitId":"darryl-chan"},"content":"                String from \u003d separate[3];","lastModifiedDate":"2024-01-30"},{"lineNumber":109,"author":{"gitId":"darryl-chan"},"content":"                String to \u003d separate[4];","lastModifiedDate":"2024-01-30"},{"lineNumber":110,"author":{"gitId":"darryl-chan"},"content":"                task \u003d new Event(description, from, to, isDone);","lastModifiedDate":"2024-01-30"},{"lineNumber":111,"author":{"gitId":"darryl-chan"},"content":"                break;","lastModifiedDate":"2024-01-30"},{"lineNumber":112,"author":{"gitId":"darryl-chan"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":113,"author":{"gitId":"darryl-chan"},"content":"        list.add(task);","lastModifiedDate":"2024-01-30"},{"lineNumber":114,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":115,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":116,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":117,"author":{"gitId":"darryl-chan"},"content":"     * Create a save format for the data to be saved into a file","lastModifiedDate":"2024-02-02"},{"lineNumber":118,"author":{"gitId":"darryl-chan"},"content":"     * @return ArrayList of Task data strings","lastModifiedDate":"2024-02-02"},{"lineNumber":119,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":120,"author":{"gitId":"darryl-chan"},"content":"    public ArrayList\u003cString\u003e saveFormat() {","lastModifiedDate":"2024-02-01"},{"lineNumber":121,"author":{"gitId":"darryl-chan"},"content":"        ArrayList\u003cString\u003e dataToText \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":122,"author":{"gitId":"darryl-chan"},"content":"        for (Task task : list) {","lastModifiedDate":"2024-02-01"},{"lineNumber":123,"author":{"gitId":"darryl-chan"},"content":"            dataToText.add(task.saveFormat());","lastModifiedDate":"2024-02-01"},{"lineNumber":124,"author":{"gitId":"darryl-chan"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":125,"author":{"gitId":"darryl-chan"},"content":"        return dataToText;","lastModifiedDate":"2024-02-01"},{"lineNumber":126,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":127,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":128,"author":{"gitId":"darryl-chan"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":129,"author":{"gitId":"darryl-chan"},"content":"    public String toString() {","lastModifiedDate":"2024-02-02"},{"lineNumber":130,"author":{"gitId":"darryl-chan"},"content":"        String finalString \u003d \"\";","lastModifiedDate":"2024-02-02"},{"lineNumber":131,"author":{"gitId":"darryl-chan"},"content":"        for (Task task : list) {","lastModifiedDate":"2024-02-02"},{"lineNumber":132,"author":{"gitId":"darryl-chan"},"content":"            finalString +\u003d task.toString() + \"\\n\";","lastModifiedDate":"2024-02-02"},{"lineNumber":133,"author":{"gitId":"darryl-chan"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":134,"author":{"gitId":"darryl-chan"},"content":"        return finalString;","lastModifiedDate":"2024-02-02"},{"lineNumber":135,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":136,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":137,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":138,"author":{"gitId":"darryl-chan"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"darryl-chan":138}},{"path":"src/main/java/duke/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darryl-chan"},"content":"package duke.tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"darryl-chan"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"darryl-chan"},"content":" * Class for ToDo Task","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"darryl-chan"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"darryl-chan"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"darryl-chan"},"content":"    ","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"darryl-chan"},"content":"    public ToDo(String description){","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"darryl-chan"},"content":"        super(description);","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"darryl-chan"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"darryl-chan"},"content":"        super(description, isDone);","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"darryl-chan"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"darryl-chan"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"darryl-chan"},"content":"    public String saveFormat() {","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"darryl-chan"},"content":"        return String.format(\"%s;;%s\",","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"darryl-chan"},"content":"                \"T\", super.saveFormat());","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"darryl-chan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"darryl-chan"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"darryl-chan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"darryl-chan"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":29,"author":{"gitId":"darryl-chan"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":30,"author":{"gitId":"darryl-chan"},"content":"        return String.format(\"%s%s\", \"[T]\", super.toString());","lastModifiedDate":"2024-01-22"},{"lineNumber":31,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":32,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":33,"author":{"gitId":"darryl-chan"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"darryl-chan":33}},{"path":"src/test/java/duke/tasks/DateTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darryl-chan"},"content":"package duke.tasks;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"darryl-chan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"darryl-chan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"darryl-chan"},"content":"public class DateTaskTest {","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"darryl-chan"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"darryl-chan"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"darryl-chan"},"content":"    public void testDateTaskToString() {","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"darryl-chan"},"content":"        DateTask dateTask \u003d new DateTask(\"21/01/2112 2112\");","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"darryl-chan"},"content":"        assertEquals(\"Date: 21 Jan 2112 Time: 9:12 PM\", dateTask.toString());","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"darryl-chan"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"darryl-chan":13}},{"path":"src/test/java/duke/tasks/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darryl-chan"},"content":"package duke.tasks;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"darryl-chan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"darryl-chan"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"darryl-chan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"darryl-chan"},"content":"import duke.exceptions.DukeCeption;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"darryl-chan"},"content":"import duke.exceptions.IncorrectFormatException;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"darryl-chan"},"content":"import duke.exceptions.NumberOutOfBoundsException;","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"darryl-chan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"darryl-chan"},"content":"public class TaskListTest {","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"darryl-chan"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"darryl-chan"},"content":"    public void testDeleteFunction() throws DukeCeption {","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"darryl-chan"},"content":"        Task task1 \u003d new ToDo(\"Eat food\");","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"darryl-chan"},"content":"        Task task2 \u003d new Deadline(\"Do homework\", \"19/03/2020 1900\");","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"darryl-chan"},"content":"        Task task3 \u003d new Event(\"CS2103 Exam\", \"25/05/2024 1400\", \"25/05/2024 1400\");","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"darryl-chan"},"content":"        ","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"darryl-chan"},"content":"        TaskList taskList1 \u003d new TaskList();","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"darryl-chan"},"content":"        TaskList taskList2 \u003d new TaskList();","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"darryl-chan"},"content":"        taskList1.addNewTask(task1);","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"darryl-chan"},"content":"        taskList1.addNewTask(task2);","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"darryl-chan"},"content":"        taskList1.addNewTask(task3);","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"darryl-chan"},"content":"        taskList2.addNewTask(task1);","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"darryl-chan"},"content":"        taskList2.addNewTask(task3);","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"darryl-chan"},"content":"        taskList1.delete(\"2\");","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"darryl-chan"},"content":"        assertEquals(taskList1.toString(), taskList2.toString());","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"darryl-chan"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"darryl-chan"},"content":"    public void testSaveFormat() {","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"darryl-chan"},"content":"        Task task1 \u003d new ToDo(\"Eat food\");","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"darryl-chan"},"content":"        Task task2 \u003d new Deadline(\"Do homework\", \"19/03/2020 1900\");","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"darryl-chan"},"content":"        Task task3 \u003d new Event(\"CS2103 Exam\", \"25/05/2024 1400\", \"25/05/2024 1400\");","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"darryl-chan"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"darryl-chan"},"content":"        taskList.addNewTask(task1);","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"darryl-chan"},"content":"        taskList.addNewTask(task2);","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"darryl-chan"},"content":"        taskList.addNewTask(task3);","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"darryl-chan"},"content":"        task2.markAsDone();","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"darryl-chan"},"content":"        ArrayList\u003cString\u003e dataToTextList \u003d taskList.saveFormat();","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"darryl-chan"},"content":"        String expectedDataToText \u003d \"T;;0;;Eat food\"","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"darryl-chan"},"content":"                + \"D;;1;;Do homework;;19/03/2020 1900\"","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"darryl-chan"},"content":"                + \"E;;0;;CS2103 Exam;;25/05/2024 1400;;25/05/2024 1400\";","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"darryl-chan"},"content":"        String actualDataToText \u003d \"\";","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"darryl-chan"},"content":"        for (String line : dataToTextList) {","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"darryl-chan"},"content":"            actualDataToText +\u003d line;","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"darryl-chan"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"darryl-chan"},"content":"        assertEquals(expectedDataToText, actualDataToText);","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"darryl-chan"},"content":"    @Test ","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"darryl-chan"},"content":"    public void deletetTask_IncorrectFormatException() {","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"darryl-chan"},"content":"        Task task1 \u003d new ToDo(\"Eat food\");","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"darryl-chan"},"content":"        Task task2 \u003d new Deadline(\"Do homework\", \"19/03/2020 1900\");","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"darryl-chan"},"content":"        Task task3 \u003d new Event(\"CS2103 Exam\", \"25/05/2024 1400\", \"25/05/2024 1400\");","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"darryl-chan"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"darryl-chan"},"content":"        taskList.addNewTask(task1);","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"darryl-chan"},"content":"        taskList.addNewTask(task2);","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"darryl-chan"},"content":"        taskList.addNewTask(task3);","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"darryl-chan"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"darryl-chan"},"content":"            taskList.delete(\"Two\");","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"darryl-chan"},"content":"        } catch (IncorrectFormatException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"darryl-chan"},"content":"            assertEquals(\"The number given is unrecognizable\", e.getMessage());","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"darryl-chan"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"darryl-chan"},"content":"            fail();","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"darryl-chan"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":84,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":85,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":86,"author":{"gitId":"darryl-chan"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":87,"author":{"gitId":"darryl-chan"},"content":"    public void getTask_NumberOutOfBoundsException() {","lastModifiedDate":"2024-02-02"},{"lineNumber":88,"author":{"gitId":"darryl-chan"},"content":"        Task task1 \u003d new ToDo(\"Eat food\");","lastModifiedDate":"2024-02-02"},{"lineNumber":89,"author":{"gitId":"darryl-chan"},"content":"        Task task2 \u003d new Deadline(\"Do homework\", \"19/03/2020 1900\");","lastModifiedDate":"2024-02-02"},{"lineNumber":90,"author":{"gitId":"darryl-chan"},"content":"        Task task3 \u003d new Event(\"CS2103 Exam\", \"25/05/2024 1400\", \"25/05/2024 1400\");","lastModifiedDate":"2024-02-02"},{"lineNumber":91,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":92,"author":{"gitId":"darryl-chan"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-02-02"},{"lineNumber":93,"author":{"gitId":"darryl-chan"},"content":"        taskList.addNewTask(task1);","lastModifiedDate":"2024-02-02"},{"lineNumber":94,"author":{"gitId":"darryl-chan"},"content":"        taskList.addNewTask(task2);","lastModifiedDate":"2024-02-02"},{"lineNumber":95,"author":{"gitId":"darryl-chan"},"content":"        taskList.addNewTask(task3);","lastModifiedDate":"2024-02-02"},{"lineNumber":96,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":97,"author":{"gitId":"darryl-chan"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":98,"author":{"gitId":"darryl-chan"},"content":"            taskList.getTask(\"4\");","lastModifiedDate":"2024-02-02"},{"lineNumber":99,"author":{"gitId":"darryl-chan"},"content":"        } catch (NumberOutOfBoundsException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":100,"author":{"gitId":"darryl-chan"},"content":"            assertEquals(\"The number is not in this list!\", e.getMessage());","lastModifiedDate":"2024-02-02"},{"lineNumber":101,"author":{"gitId":"darryl-chan"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":102,"author":{"gitId":"darryl-chan"},"content":"            fail();","lastModifiedDate":"2024-02-02"},{"lineNumber":103,"author":{"gitId":"darryl-chan"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":104,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":105,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":106,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":107,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":108,"author":{"gitId":"darryl-chan"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"darryl-chan":108}},{"path":"src/test/java/duke/tasks/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darryl-chan"},"content":"package duke.tasks;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"darryl-chan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"darryl-chan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"darryl-chan"},"content":"public class TaskTest {","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"darryl-chan"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"darryl-chan"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"darryl-chan"},"content":"    public void testMarkToString() {","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"darryl-chan"},"content":"        Task task \u003d new Deadline(\"Do homework\", \"19/03/2020 1900\");","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"darryl-chan"},"content":"        task.markAsDone();","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"darryl-chan"},"content":"        assertEquals(\"[D][X] Do homework (by: Date: 19 Mar 2020 Time: 7:00 PM)\", task.toString());","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"darryl-chan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"darryl-chan"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"darryl-chan":15}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"darryl-chan"},"content":"todo return book","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"darryl-chan"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"darryl-chan"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"darryl-chan"},"content":"mark 2","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"darryl-chan"},"content":"list","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"darryl-chan"},"content":"todo","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"darryl-chan"},"content":"deadline return book ","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"darryl-chan"},"content":"event project meeting /from Mon 2pm","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"darryl-chan"},"content":"delete 5","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"darryl-chan":9}},{"path":"text-ui-test/runtest1.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"darryl-chan"},"content":"@ECHO OFF","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"darryl-chan"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"darryl-chan"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"darryl-chan"},"content":"REM delete output from previous run","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"darryl-chan"},"content":"del ACTUAL.TXT","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"darryl-chan"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"darryl-chan"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"darryl-chan"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"darryl-chan"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"darryl-chan"},"content":"    exit /b 1","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"darryl-chan"},"content":")","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"darryl-chan"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"darryl-chan"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"darryl-chan"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"darryl-chan"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":20,"author":{"gitId":"darryl-chan"},"content":"REM compare the output to the expected output","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"darryl-chan"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"darryl-chan":21}}]
