[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"Austintjh19"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"Austintjh19"},"content":"checkstyle {","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"Austintjh19"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"Austintjh19"},"content":"}","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"Austintjh19"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"Austintjh19"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"Austintjh19"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"Austintjh19"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"Austintjh19"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"Austintjh19"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"Austintjh19"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"Austintjh19"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"Austintjh19"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"Austintjh19"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"Austintjh19"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"Austintjh19"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"Austintjh19"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"Austintjh19"},"content":"    mainClass.set(\"osiris.Main\")","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"Austintjh19"},"content":"    archiveBaseName \u003d \"Osiris\"","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"Austintjh19"},"content":"    archiveClassifier \u003d \"1\"","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Austintjh19":23,"-":39}},{"path":"src/main/java/osiris/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Austintjh19"},"content":"package osiris;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Austintjh19"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Austintjh19"},"content":" * The Main class serves as the entry point for the Osiris chat application.","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Austintjh19"},"content":" * It initializes an instance of the Osiris chatBot and starts the chat session.","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Austintjh19"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Austintjh19"},"content":"public class Main {","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"Austintjh19"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Austintjh19"},"content":"        final Osiris chatBot \u003d new Osiris();","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"Austintjh19"},"content":"        chatBot.startChat();","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"Austintjh19"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"Austintjh19":15}},{"path":"src/main/java/osiris/Osiris.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Austintjh19"},"content":"package osiris;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Austintjh19"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Austintjh19"},"content":"import osiris.commands.Command;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"Austintjh19"},"content":"import osiris.interpreters.UserInputInterpreter;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"Austintjh19"},"content":"import osiris.task.TaskManager;","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"Austintjh19"},"content":"import osiris.ui.Ui;","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"Austintjh19"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Austintjh19"},"content":" * The Osiris class represents the main chatBot application.","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Austintjh19"},"content":" * It manages user interactions, interprets commands, and handles task management.","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Austintjh19"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"Austintjh19"},"content":"public class Osiris {","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"Austintjh19"},"content":"    /** Represents the task manager responsible for managing tasks within the system. */","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Austintjh19"},"content":"    private final TaskManager taskManager \u003d new TaskManager();","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"Austintjh19"},"content":"    /** Represents the user interface component of the application. */","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"Austintjh19"},"content":"    private final Ui userInterface \u003d new Ui();","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"Austintjh19"},"content":"     * Initiates the chat session with the user.","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"Austintjh19"},"content":"     * Manages user input, interprets commands, and handles task management.","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"Austintjh19"},"content":"    public void startChat() {","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"Austintjh19"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"Austintjh19"},"content":"        taskManager.initialise();","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":30,"author":{"gitId":"Austintjh19"},"content":"        userInterface.displayIntroductions();","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"Austintjh19"},"content":"        boolean isTerminate \u003d false;","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":34,"author":{"gitId":"Austintjh19"},"content":"        while (!isTerminate) {","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"Austintjh19"},"content":"            userInterface.displayOsirisPromptMessage();","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"Austintjh19"},"content":"            String userInput \u003d scanner.nextLine();","lastModifiedDate":"2024-01-23"},{"lineNumber":37,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":38,"author":{"gitId":"Austintjh19"},"content":"            Command userCommand \u003d UserInputInterpreter.getInstance().interpretUserInput(userInput);","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"Austintjh19"},"content":"            userCommand.execute(taskManager, userInterface);","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"Austintjh19"},"content":"            isTerminate \u003d userCommand.isTerminateChat();","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"Austintjh19"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":42,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":43,"author":{"gitId":"Austintjh19"},"content":"        userInterface.displayGoodbyes();","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":45,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":46,"author":{"gitId":"Austintjh19"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"Austintjh19":46}},{"path":"src/main/java/osiris/commands/AddDeadlineTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Austintjh19"},"content":"package osiris.commands;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Austintjh19"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Austintjh19"},"content":"import osiris.task.TaskManager;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"Austintjh19"},"content":"import osiris.ui.Ui;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"Austintjh19"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Austintjh19"},"content":" * Command class representing the addition of a deadline task.","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Austintjh19"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Austintjh19"},"content":"public class AddDeadlineTaskCommand extends Command {","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"Austintjh19"},"content":"    /** Keyword used to identify the command. */","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Austintjh19"},"content":"    public static final String COMMAND \u003d \"deadline\";","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"Austintjh19"},"content":"    /** Name of the Task. */","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Austintjh19"},"content":"    private final String taskName;","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"Austintjh19"},"content":"    /** Deadline date associated with the task. */","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"Austintjh19"},"content":"    private final LocalDate deadline;","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"Austintjh19"},"content":"     * Constructs an AddDeadlineTaskCommand object with the specified task name and deadline.","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"Austintjh19"},"content":"     * @param taskName The name of the deadline task.","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"Austintjh19"},"content":"     * @param deadline The deadline of the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"Austintjh19"},"content":"    public AddDeadlineTaskCommand(String taskName, LocalDate deadline) {","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"Austintjh19"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"Austintjh19"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"Austintjh19"},"content":"     * Executes the command to add a deadline task.","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"Austintjh19"},"content":"     * @param taskManager   The TaskManager instance.","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"Austintjh19"},"content":"     * @param userInterface The Ui instance.","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"Austintjh19"},"content":"     * @return true if the command is executed successfully, false otherwise.","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"Austintjh19"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"Austintjh19"},"content":"    public boolean execute(TaskManager taskManager, Ui userInterface) {","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"Austintjh19"},"content":"        boolean isSuccess \u003d taskManager.addDeadlineTask(taskName, false, deadline);","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"Austintjh19"},"content":"        if (isSuccess) {","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"Austintjh19"},"content":"            userInterface.displayDeadlineTaskAdditionNotification(taskManager.getTask(","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"Austintjh19"},"content":"                    taskManager.getTotalTaskCount() - 1).toString(), taskManager.getTotalTaskCount());","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"Austintjh19"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"Austintjh19"},"content":"        return true;","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"Austintjh19"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"Austintjh19":49}},{"path":"src/main/java/osiris/commands/AddEventTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Austintjh19"},"content":"package osiris.commands;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Austintjh19"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Austintjh19"},"content":"import osiris.task.TaskManager;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"Austintjh19"},"content":"import osiris.ui.Ui;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"Austintjh19"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Austintjh19"},"content":" * Command class representing the addition of an event task.","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Austintjh19"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Austintjh19"},"content":"public class AddEventTaskCommand extends Command {","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"Austintjh19"},"content":"    /** Keyword used to identify the command. */","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Austintjh19"},"content":"    public static final String COMMAND \u003d \"event\";","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"Austintjh19"},"content":"    /** Name of the Task. */","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Austintjh19"},"content":"    private final String taskName;","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"Austintjh19"},"content":"    /** Start Date Time associated with the Task. */","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"Austintjh19"},"content":"    private final LocalDateTime startDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"Austintjh19"},"content":"    /** End Date Time associated with the Task. */","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"Austintjh19"},"content":"    private final LocalDateTime endDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"Austintjh19"},"content":"     * Constructs an AddEventTaskCommand object with the specified task name, start date and end date.","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"Austintjh19"},"content":"     * @param taskName      The name of the event task.","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"Austintjh19"},"content":"     * @param startDateTime The start date and time of the event.","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"Austintjh19"},"content":"     * @param endDateTime   The end date and time of the event.","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"Austintjh19"},"content":"    public AddEventTaskCommand(String taskName, LocalDateTime startDateTime, LocalDateTime endDateTime) {","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"Austintjh19"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"Austintjh19"},"content":"        this.startDateTime \u003d startDateTime;","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"Austintjh19"},"content":"        this.endDateTime \u003d endDateTime;","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"Austintjh19"},"content":"     * Executes the command to add an event task.","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"Austintjh19"},"content":"     * @param taskManager   The TaskManager instance.","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"Austintjh19"},"content":"     * @param userInterface The Ui instance.","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"Austintjh19"},"content":"     * @return true if the command is executed successfully, false otherwise.","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"Austintjh19"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"Austintjh19"},"content":"    public boolean execute(TaskManager taskManager, Ui userInterface) {","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"Austintjh19"},"content":"        boolean isSuccess \u003d taskManager.addEventTask(taskName, false, startDateTime, endDateTime);","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"Austintjh19"},"content":"        if (isSuccess) {","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"Austintjh19"},"content":"            userInterface.displayEventTaskAdditionNotification(taskManager.getTask(","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"Austintjh19"},"content":"                    taskManager.getTotalTaskCount() - 1).toString(), taskManager.getTotalTaskCount());","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"Austintjh19"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"Austintjh19"},"content":"        return true;","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"Austintjh19"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"Austintjh19":55}},{"path":"src/main/java/osiris/commands/AddToDoTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Austintjh19"},"content":"package osiris.commands;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Austintjh19"},"content":"import osiris.task.TaskManager;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"Austintjh19"},"content":"import osiris.ui.Ui;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"Austintjh19"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Austintjh19"},"content":" * Command class representing the addition of a to-do task.","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Austintjh19"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Austintjh19"},"content":"public class AddToDoTaskCommand extends Command {","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"Austintjh19"},"content":"    /** Keyword used to identify the command. */","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Austintjh19"},"content":"    public static final String COMMAND \u003d \"todo\";","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"Austintjh19"},"content":"    /** Name of the Task. */","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"Austintjh19"},"content":"    private final String taskName;","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Austintjh19"},"content":"     * Constructs an AddToDoTaskCommand object with the specified task name.","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Austintjh19"},"content":"     * @param taskName The name of the to-do task.","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"Austintjh19"},"content":"    public AddToDoTaskCommand(String taskName) {","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"Austintjh19"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"Austintjh19"},"content":"     * Executes the command to add a to-do task.","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"Austintjh19"},"content":"     * @param taskManager   The TaskManager instance.","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"Austintjh19"},"content":"     * @param userInterface The Ui instance.","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"Austintjh19"},"content":"     * @return true if the command is executed successfully, false otherwise.","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"Austintjh19"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"Austintjh19"},"content":"    public boolean execute(TaskManager taskManager, Ui userInterface) {","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"Austintjh19"},"content":"        boolean isSuccess \u003d taskManager.addToDoTask(taskName, false);","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"Austintjh19"},"content":"        if (isSuccess) {","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"Austintjh19"},"content":"            userInterface.displayToDoTaskAdditionNotification(taskManager.getTask(","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"Austintjh19"},"content":"                    taskManager.getTotalTaskCount() - 1).toString(), taskManager.getTotalTaskCount());","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"Austintjh19"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"Austintjh19"},"content":"        return true;","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"Austintjh19"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"Austintjh19":42}},{"path":"src/main/java/osiris/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Austintjh19"},"content":"package osiris.commands;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Austintjh19"},"content":"import osiris.task.TaskManager;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"Austintjh19"},"content":"import osiris.ui.Ui;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"Austintjh19"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Austintjh19"},"content":" * Abstract class representing a command to be executed.","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Austintjh19"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Austintjh19"},"content":"public abstract class Command {","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"Austintjh19"},"content":"    /** Whether the command for the chat to be terminated has been called. */","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Austintjh19"},"content":"    private boolean isTerminateChat \u003d false;","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"Austintjh19"},"content":"     * Sets the termination status of the chat.","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Austintjh19"},"content":"     * @param isTerminateChat A boolean value indicating whether the chat should be terminated.","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"Austintjh19"},"content":"    public void setIsTerminateChat(boolean isTerminateChat) {","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"Austintjh19"},"content":"        this.isTerminateChat \u003d isTerminateChat;","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"Austintjh19"},"content":"     * Checks if the command is to terminate the chat.","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"Austintjh19"},"content":"     * @return true if the command is to terminate the chat, false otherwise.","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"Austintjh19"},"content":"    public boolean isTerminateChat() {","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"Austintjh19"},"content":"        return isTerminateChat;","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"Austintjh19"},"content":"     * Executes the command.","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"Austintjh19"},"content":"     * @param taskManager   The TaskManager instance.","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"Austintjh19"},"content":"     * @param userInterface The Ui instance.","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"Austintjh19"},"content":"     * @return true if the command is executed successfully, false otherwise.","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"Austintjh19"},"content":"    public abstract boolean execute(TaskManager taskManager, Ui userInterface);","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"Austintjh19"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"Austintjh19":40}},{"path":"src/main/java/osiris/commands/FindTasksCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Austintjh19"},"content":"package osiris.commands;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Austintjh19"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Austintjh19"},"content":"import osiris.task.TaskManager;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Austintjh19"},"content":"import osiris.ui.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Austintjh19"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Austintjh19"},"content":" * Represents a command to find tasks based on a search string.","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Austintjh19"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Austintjh19"},"content":"public class FindTasksCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Austintjh19"},"content":"    /** Keyword used to identify the command. */","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Austintjh19"},"content":"    public static final String COMMAND \u003d \"find\";","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Austintjh19"},"content":"    /** The String to be searched. */","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Austintjh19"},"content":"    private final String searchSting;","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Austintjh19"},"content":"     * Constructs a FindTasksCommand object with the specified search string.","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"Austintjh19"},"content":"     * @param searchString The search string to find relevant tasks.","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"Austintjh19"},"content":"    public FindTasksCommand(String searchString) {","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"Austintjh19"},"content":"        this.searchSting \u003d searchString;","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"Austintjh19"},"content":"     * Executes the find tasks command, searching for relevant tasks based on the search string.","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"Austintjh19"},"content":"     * @param taskManager   The TaskManager instance managing the tasks.","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"Austintjh19"},"content":"     * @param userInterface The Ui instance for interacting with the user.","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"Austintjh19"},"content":"     * @return True if the command execution is successful, false otherwise.","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"Austintjh19"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"Austintjh19"},"content":"    public boolean execute(TaskManager taskManager, Ui userInterface) {","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"Austintjh19"},"content":"        ArrayList\u003cString\u003e relevantTasks \u003d taskManager.findTask(searchSting);","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"Austintjh19"},"content":"        userInterface.printFoundUserTasks(relevantTasks);","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"Austintjh19"},"content":"        return true;","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"Austintjh19"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Austintjh19":41}},{"path":"src/main/java/osiris/commands/MarkTaskCompleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Austintjh19"},"content":"package osiris.commands;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Austintjh19"},"content":"import osiris.task.TaskManager;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"Austintjh19"},"content":"import osiris.ui.Ui;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"Austintjh19"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Austintjh19"},"content":" * Command class to mark a task as completed.","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Austintjh19"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Austintjh19"},"content":"public class MarkTaskCompleteCommand extends Command {","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"Austintjh19"},"content":"    /** Keyword used to identify the command. */","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Austintjh19"},"content":"    public static final String COMMAND \u003d \"mark\";","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"Austintjh19"},"content":"    /** Index to mark as completed. */","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"Austintjh19"},"content":"    private final int taskIndex;","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Austintjh19"},"content":"     * Constructs a MarkTaskCompletedCommand object with the specified task index.","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Austintjh19"},"content":"     * @param taskIndex The index of the task to be marked as completed.","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"Austintjh19"},"content":"    public MarkTaskCompleteCommand(int taskIndex) {","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"Austintjh19"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"Austintjh19"},"content":"     * Executes the mark task completed command.","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"Austintjh19"},"content":"     * @param taskManager   The TaskManager instance.","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"Austintjh19"},"content":"     * @param userInterface The Ui instance.","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"Austintjh19"},"content":"     * @return true if the command is executed successfully, false otherwise.","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"Austintjh19"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"Austintjh19"},"content":"    public boolean execute(TaskManager taskManager, Ui userInterface) {","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"Austintjh19"},"content":"        boolean isSuccess \u003d taskManager.markTaskComplete(taskIndex - 1);","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"Austintjh19"},"content":"        if (isSuccess) {","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"Austintjh19"},"content":"            userInterface.displayMarkTaskCompleteNotification(taskManager.getTask(taskIndex - 1).toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"Austintjh19"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"Austintjh19"},"content":"        return true;","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"Austintjh19"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"Austintjh19":42}},{"path":"src/main/java/osiris/commands/MarkTaskIncompleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Austintjh19"},"content":"package osiris.commands;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Austintjh19"},"content":"import osiris.task.TaskManager;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"Austintjh19"},"content":"import osiris.ui.Ui;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Austintjh19"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Austintjh19"},"content":" * Command class to mark a task as incomplete.","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Austintjh19"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Austintjh19"},"content":"public class MarkTaskIncompleteCommand extends Command {","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"Austintjh19"},"content":"    /** Keyword used to identify the command. */","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Austintjh19"},"content":"    public static final String COMMAND \u003d \"unmark\";","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"Austintjh19"},"content":"    /** Index to mark as incomplete. */","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Austintjh19"},"content":"    private final int taskIndex;","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Austintjh19"},"content":"     * Constructs a MarkTaskIncompleteCommand object with the specified task index.","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"Austintjh19"},"content":"     * @param taskIndex The index of the task to be marked as incomplete.","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"Austintjh19"},"content":"    public MarkTaskIncompleteCommand(int taskIndex) {","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"Austintjh19"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"Austintjh19"},"content":"     * Executes the mark task incomplete command.","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"Austintjh19"},"content":"     * @param taskManager   The TaskManager instance.","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"Austintjh19"},"content":"     * @param userInterface The Ui instance.","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"Austintjh19"},"content":"     * @return true if the command is executed successfully, false otherwise.","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"Austintjh19"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"Austintjh19"},"content":"    public boolean execute(TaskManager taskManager, Ui userInterface) {","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"Austintjh19"},"content":"        boolean isSuccess \u003d taskManager.markTaskIncomplete(taskIndex - 1);","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"Austintjh19"},"content":"        if (isSuccess) {","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"Austintjh19"},"content":"            userInterface.displayMarkTaskIncompleteNotification(taskManager.getTask(taskIndex - 1).toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"Austintjh19"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"Austintjh19"},"content":"        return true;","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"Austintjh19"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"Austintjh19":43}},{"path":"src/main/java/osiris/commands/NoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Austintjh19"},"content":"package osiris.commands;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Austintjh19"},"content":"import osiris.task.TaskManager;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"Austintjh19"},"content":"import osiris.ui.Ui;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"Austintjh19"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Austintjh19"},"content":" * Command class representing a no-operation command.","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Austintjh19"},"content":" * This command does nothing when executed.","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Austintjh19"},"content":" * Called when an exception is thrown.","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Austintjh19"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Austintjh19"},"content":"public class NoCommand extends Command {","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"Austintjh19"},"content":"     * Executes the no-operation command.","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Austintjh19"},"content":"     * @param taskManager   The TaskManager instance.","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"Austintjh19"},"content":"     * @param userInterface The Ui instance.","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Austintjh19"},"content":"     * @return Always returns true.","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Austintjh19"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"Austintjh19"},"content":"    public boolean execute(TaskManager taskManager, Ui userInterface) {","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"Austintjh19"},"content":"        return true;","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"Austintjh19"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"Austintjh19":24}},{"path":"src/main/java/osiris/commands/PrintUserTasksCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Austintjh19"},"content":"package osiris.commands;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Austintjh19"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"Austintjh19"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"Austintjh19"},"content":"import osiris.task.Task;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"Austintjh19"},"content":"import osiris.task.TaskManager;","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"Austintjh19"},"content":"import osiris.ui.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"Austintjh19"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Austintjh19"},"content":" * Command class representing the \"list\" command to print user tasks.","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Austintjh19"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Austintjh19"},"content":"public class PrintUserTasksCommand extends Command {","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"Austintjh19"},"content":"    /** Keyword used to identify the command. */","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Austintjh19"},"content":"    public static final String COMMAND \u003d \"list\";","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Austintjh19"},"content":"     * Executes the \"list\" command to print user tasks.","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"Austintjh19"},"content":"     * @param taskManager   The TaskManager instance.","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"Austintjh19"},"content":"     * @param userInterface The Ui instance.","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"Austintjh19"},"content":"     * @return Always returns true.","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"Austintjh19"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"Austintjh19"},"content":"    public boolean execute(TaskManager taskManager, Ui userInterface) {","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"Austintjh19"},"content":"        ArrayList\u003cTask\u003e taskList \u003d taskManager.getUserTasks();","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"Austintjh19"},"content":"        ArrayList\u003cString\u003e taskDetailsArrayList \u003d taskList.stream().map(Task::toString)","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"Austintjh19"},"content":"                .collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"Austintjh19"},"content":"        userInterface.printUserTasks(taskDetailsArrayList);","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"Austintjh19"},"content":"        return true;","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"Austintjh19"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"Austintjh19":33}},{"path":"src/main/java/osiris/commands/RemoveTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Austintjh19"},"content":"package osiris.commands;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Austintjh19"},"content":"import osiris.task.Task;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"Austintjh19"},"content":"import osiris.task.TaskManager;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"Austintjh19"},"content":"import osiris.ui.Ui;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"Austintjh19"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Austintjh19"},"content":" * Command class representing the \"delete\" command to remove a task.","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Austintjh19"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Austintjh19"},"content":"public class RemoveTaskCommand extends Command {","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Austintjh19"},"content":"    /** Keyword used to identify the command. */","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Austintjh19"},"content":"    public static final String COMMAND \u003d \"delete\";","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"Austintjh19"},"content":"    private int taskIndex;","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Austintjh19"},"content":"     * Constructs a RemoveTaskCommand with the specified task index.","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Austintjh19"},"content":"     * @param taskIndex The index of the task to be removed.","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"Austintjh19"},"content":"    public RemoveTaskCommand(int taskIndex) {","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"Austintjh19"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"Austintjh19"},"content":"     * Executes the \"delete\" command to remove a task.","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"Austintjh19"},"content":"     * @param taskManager   The TaskManager instance.","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"Austintjh19"},"content":"     * @param userInterface The Ui instance.","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"Austintjh19"},"content":"     * @return Always returns true.","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"Austintjh19"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"Austintjh19"},"content":"    public boolean execute(TaskManager taskManager, Ui userInterface) {","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"Austintjh19"},"content":"        Task removedTask \u003d taskManager.deleteTask(taskIndex - 1);","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"Austintjh19"},"content":"        if (removedTask !\u003d null) {","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"Austintjh19"},"content":"            userInterface.displayDeleteTaskNotification(removedTask.toString(), taskManager.getTotalTaskCount());","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"Austintjh19"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"Austintjh19"},"content":"        return true;","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"Austintjh19"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"Austintjh19":41}},{"path":"src/main/java/osiris/commands/TerminateChatCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Austintjh19"},"content":"package osiris.commands;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Austintjh19"},"content":"import osiris.task.TaskManager;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"Austintjh19"},"content":"import osiris.ui.Ui;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"Austintjh19"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Austintjh19"},"content":" * Command class representing the \"bye\" command to terminate the chat.","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Austintjh19"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Austintjh19"},"content":"public class TerminateChatCommand extends Command {","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"Austintjh19"},"content":"    /** Keyword used to identify the command. */","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Austintjh19"},"content":"    public static final String COMMAND \u003d \"bye\";","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Austintjh19"},"content":"     * Checks if the chat should be terminated.","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"Austintjh19"},"content":"     * @return Always returns true to indicate termination.","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Austintjh19"},"content":"    public boolean isTerminateChat() {","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"Austintjh19"},"content":"        return true;","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"Austintjh19"},"content":"     * Executes the \"bye\" command to terminate the chat.","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"Austintjh19"},"content":"     * @param taskManager   The TaskManager instance.","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"Austintjh19"},"content":"     * @param userInterface The Ui instance.","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"Austintjh19"},"content":"     * @return Always returns true.","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"Austintjh19"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"Austintjh19"},"content":"    public boolean execute(TaskManager taskManager, Ui userInterface) {","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"Austintjh19"},"content":"        taskManager.terminate();","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"Austintjh19"},"content":"        return true;","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"Austintjh19"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"Austintjh19":35}},{"path":"src/main/java/osiris/commands/UnsupportedCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Austintjh19"},"content":"package osiris.commands;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Austintjh19"},"content":"import osiris.task.TaskManager;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"Austintjh19"},"content":"import osiris.ui.Ui;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"Austintjh19"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Austintjh19"},"content":" * Command class representing an unsupported command.","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Austintjh19"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Austintjh19"},"content":"public class UnsupportedCommand extends Command {","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Austintjh19"},"content":"     * Executes the unsupported command by displaying a message through the user interface.","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"Austintjh19"},"content":"     * @param taskManager   The TaskManager instance.","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Austintjh19"},"content":"     * @param userInterface The Ui instance.","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Austintjh19"},"content":"     * @return Always returns true.","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Austintjh19"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"Austintjh19"},"content":"    public boolean execute(TaskManager taskManager, Ui userInterface) {","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"Austintjh19"},"content":"        userInterface.displayUnsupportedCommandMessage();","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"Austintjh19"},"content":"        return true;","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"Austintjh19"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"Austintjh19":23}},{"path":"src/main/java/osiris/formatters/DateTimeFormatters.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Austintjh19"},"content":"package osiris.formatters;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Austintjh19"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"Austintjh19"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"Austintjh19"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"Austintjh19"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"Austintjh19"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Austintjh19"},"content":" * A singleton class for date and time formatters used in the application.","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Austintjh19"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Austintjh19"},"content":"public class DateTimeFormatters {","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"Austintjh19"},"content":"    /** A singleton DateTimeFormatters instance. */","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Austintjh19"},"content":"    private static DateTimeFormatters instance;","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"Austintjh19"},"content":"    /** Private constructor to initialise a DateTimeFormatters instance. */","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Austintjh19"},"content":"    private DateTimeFormatters() {}","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Austintjh19"},"content":"     * Returns the singleton instance of the DateTimeFormatters class.","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"Austintjh19"},"content":"     * @return The DateTimeFormatters instance.","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"Austintjh19"},"content":"    public static DateTimeFormatters getInstance() {","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"Austintjh19"},"content":"        if (instance \u003d\u003d null) {","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"Austintjh19"},"content":"            instance \u003d new DateTimeFormatters();","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"Austintjh19"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"Austintjh19"},"content":"        return instance;","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"Austintjh19"},"content":"     * Formats the user input string to a LocalDate object.","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"Austintjh19"},"content":"     * @param dateStr The date string provided by the user.","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"Austintjh19"},"content":"     * @return The LocalDate object parsed from the string.","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"Austintjh19"},"content":"    public LocalDate formatUserInputDate(String dateStr) {","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"Austintjh19"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"Austintjh19"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"Austintjh19"},"content":"            return LocalDate.parse(dateStr, dateTimeFormatter);","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"Austintjh19"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"Austintjh19"},"content":"            System.out.println(\"Failed to parse the date-time string: \" + dateStr);","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"Austintjh19"},"content":"            System.out.println(\"Please try /by dd-mm-yyyy for a deadline tasks.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"Austintjh19"},"content":"            return null;","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"Austintjh19"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"Austintjh19"},"content":"     * Formats the user input string to a LocalDateTime object.","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"Austintjh19"},"content":"     * @param dateTimeStr The date and time string provided by the user.","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"Austintjh19"},"content":"     * @return The LocalDateTime object parsed from the string.","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"Austintjh19"},"content":"    public LocalDateTime formatUserInputDateTime(String dateTimeStr) {","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"Austintjh19"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\");","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"Austintjh19"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"Austintjh19"},"content":"            return LocalDateTime.parse(dateTimeStr, dateTimeFormatter);","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"Austintjh19"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"Austintjh19"},"content":"            System.out.println(\"Failed to parse the date-time string: \" + dateTimeStr);","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"Austintjh19"},"content":"            System.out.println(\"Please provide date time range \u0027dd-MM-yyyy HHmm\u0027 format.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"Austintjh19"},"content":"            return null;","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"Austintjh19"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"Austintjh19"},"content":"     * Formats the user input strings to an array of LocalDateTime objects representing a range.","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"Austintjh19"},"content":"     * @param fromDateTimeStr The starting date and time string.","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"Austintjh19"},"content":"     * @param toDateTimeStr       The ending date and time string.","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"Austintjh19"},"content":"     * @return An array of LocalDateTime objects representing the date time range.","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"Austintjh19"},"content":"    public LocalDateTime[] formateUserInputDateTimeRange(String fromDateTimeStr, String toDateTimeStr) {","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"Austintjh19"},"content":"        DateTimeFormatter startDateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\");","lastModifiedDate":"2024-01-30"},{"lineNumber":76,"author":{"gitId":"Austintjh19"},"content":"        DateTimeFormatter endDateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\");","lastModifiedDate":"2024-01-30"},{"lineNumber":77,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":78,"author":{"gitId":"Austintjh19"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":79,"author":{"gitId":"Austintjh19"},"content":"            LocalDateTime startDateTime \u003d LocalDateTime.parse(fromDateTimeStr, startDateTimeFormatter);","lastModifiedDate":"2024-01-30"},{"lineNumber":80,"author":{"gitId":"Austintjh19"},"content":"            LocalDateTime endDateTime \u003d LocalDateTime.parse(toDateTimeStr, endDateTimeFormatter);","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"Austintjh19"},"content":"            return new LocalDateTime[]{startDateTime, endDateTime};","lastModifiedDate":"2024-01-30"},{"lineNumber":82,"author":{"gitId":"Austintjh19"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":83,"author":{"gitId":"Austintjh19"},"content":"            System.out.println(\"Failed to parse the date time range.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":84,"author":{"gitId":"Austintjh19"},"content":"            System.out.println(\"Please provide date time range in \u0027dd-MM-yyyy HHmm\u0027 format.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":85,"author":{"gitId":"Austintjh19"},"content":"            return null;","lastModifiedDate":"2024-01-30"},{"lineNumber":86,"author":{"gitId":"Austintjh19"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":87,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":88,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":89,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"Austintjh19"},"content":"     * Formats the stored date string to a LocalDate object.","lastModifiedDate":"2024-01-31"},{"lineNumber":91,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":92,"author":{"gitId":"Austintjh19"},"content":"     * @param dateStr The stored date string.","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"Austintjh19"},"content":"     * @return The LocalDate object parsed from the string.","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":95,"author":{"gitId":"Austintjh19"},"content":"    public LocalDate formatStoredDate(String dateStr) {","lastModifiedDate":"2024-02-03"},{"lineNumber":96,"author":{"gitId":"Austintjh19"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");","lastModifiedDate":"2024-01-30"},{"lineNumber":97,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":98,"author":{"gitId":"Austintjh19"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":99,"author":{"gitId":"Austintjh19"},"content":"            return LocalDate.parse(dateStr, dateTimeFormatter);","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"Austintjh19"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":101,"author":{"gitId":"Austintjh19"},"content":"            System.out.println(\"Failed to parse the date-time string: \u0027\" + dateStr);","lastModifiedDate":"2024-01-30"},{"lineNumber":102,"author":{"gitId":"Austintjh19"},"content":"            return null;","lastModifiedDate":"2024-01-30"},{"lineNumber":103,"author":{"gitId":"Austintjh19"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":104,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":105,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":106,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":107,"author":{"gitId":"Austintjh19"},"content":"     * Formats the stored date and time string to a LocalDateTime object.","lastModifiedDate":"2024-01-31"},{"lineNumber":108,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":109,"author":{"gitId":"Austintjh19"},"content":"     * @param dateTimeStr The stored date and time string.","lastModifiedDate":"2024-01-31"},{"lineNumber":110,"author":{"gitId":"Austintjh19"},"content":"     * @return The LocalDateTime object parsed from the string.","lastModifiedDate":"2024-01-31"},{"lineNumber":111,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":112,"author":{"gitId":"Austintjh19"},"content":"    public LocalDateTime formatStoredDateTime(String dateTimeStr) {","lastModifiedDate":"2024-02-03"},{"lineNumber":113,"author":{"gitId":"Austintjh19"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy h:mm a\");","lastModifiedDate":"2024-01-31"},{"lineNumber":114,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":115,"author":{"gitId":"Austintjh19"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":116,"author":{"gitId":"Austintjh19"},"content":"            return LocalDateTime.parse(dateTimeStr, dateTimeFormatter);","lastModifiedDate":"2024-01-31"},{"lineNumber":117,"author":{"gitId":"Austintjh19"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":118,"author":{"gitId":"Austintjh19"},"content":"            System.out.println(\"Failed to parse the date-time string: \u0027\" + dateTimeStr);","lastModifiedDate":"2024-01-30"},{"lineNumber":119,"author":{"gitId":"Austintjh19"},"content":"            return null;","lastModifiedDate":"2024-01-30"},{"lineNumber":120,"author":{"gitId":"Austintjh19"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":121,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":122,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":123,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":124,"author":{"gitId":"Austintjh19"},"content":"     * Formats the stored date time range strings to an array of LocalDateTime objects.","lastModifiedDate":"2024-01-31"},{"lineNumber":125,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":126,"author":{"gitId":"Austintjh19"},"content":"     * @param fromDateTimeStr The starting date and time string.","lastModifiedDate":"2024-01-31"},{"lineNumber":127,"author":{"gitId":"Austintjh19"},"content":"     * @param toDateTimeStr       The ending date and time string.","lastModifiedDate":"2024-02-03"},{"lineNumber":128,"author":{"gitId":"Austintjh19"},"content":"     * @return An array of LocalDateTime objects representing the date time range.","lastModifiedDate":"2024-01-31"},{"lineNumber":129,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":130,"author":{"gitId":"Austintjh19"},"content":"    public LocalDateTime[] formatStoredDateTimeRange(String fromDateTimeStr, String toDateTimeStr) {","lastModifiedDate":"2024-02-03"},{"lineNumber":131,"author":{"gitId":"Austintjh19"},"content":"        DateTimeFormatter startDateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy h:mm a\");","lastModifiedDate":"2024-01-30"},{"lineNumber":132,"author":{"gitId":"Austintjh19"},"content":"        DateTimeFormatter endDateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy h:mm a\");","lastModifiedDate":"2024-01-30"},{"lineNumber":133,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":134,"author":{"gitId":"Austintjh19"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":135,"author":{"gitId":"Austintjh19"},"content":"            LocalDateTime startDateTime \u003d LocalDateTime.parse(fromDateTimeStr, startDateTimeFormatter);","lastModifiedDate":"2024-01-30"},{"lineNumber":136,"author":{"gitId":"Austintjh19"},"content":"            LocalDateTime endDateTime \u003d LocalDateTime.parse(toDateTimeStr, endDateTimeFormatter);","lastModifiedDate":"2024-02-03"},{"lineNumber":137,"author":{"gitId":"Austintjh19"},"content":"            return new LocalDateTime[]{startDateTime, endDateTime};","lastModifiedDate":"2024-01-30"},{"lineNumber":138,"author":{"gitId":"Austintjh19"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":139,"author":{"gitId":"Austintjh19"},"content":"            System.out.println(\"Failed to parse the date time range: \" + fromDateTimeStr + \" OR \" + toDateTimeStr);","lastModifiedDate":"2024-02-03"},{"lineNumber":140,"author":{"gitId":"Austintjh19"},"content":"            return null;","lastModifiedDate":"2024-01-30"},{"lineNumber":141,"author":{"gitId":"Austintjh19"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":142,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":143,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":144,"author":{"gitId":"Austintjh19"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"Austintjh19":144}},{"path":"src/main/java/osiris/interpreters/UserInputInterpreter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Austintjh19"},"content":"package osiris.interpreters;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Austintjh19"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"Austintjh19"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"Austintjh19"},"content":"import osiris.commands.AddDeadlineTaskCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Austintjh19"},"content":"import osiris.commands.AddEventTaskCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Austintjh19"},"content":"import osiris.commands.AddToDoTaskCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Austintjh19"},"content":"import osiris.commands.Command;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Austintjh19"},"content":"import osiris.commands.FindTasksCommand;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Austintjh19"},"content":"import osiris.commands.MarkTaskCompleteCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Austintjh19"},"content":"import osiris.commands.MarkTaskIncompleteCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Austintjh19"},"content":"import osiris.commands.NoCommand;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"Austintjh19"},"content":"import osiris.commands.PrintUserTasksCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"Austintjh19"},"content":"import osiris.commands.RemoveTaskCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Austintjh19"},"content":"import osiris.commands.TerminateChatCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Austintjh19"},"content":"import osiris.commands.UnsupportedCommand;","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Austintjh19"},"content":"import osiris.formatters.DateTimeFormatters;","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Austintjh19"},"content":"import osiris.validation.InputsValidator;","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"Austintjh19"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"Austintjh19"},"content":" * Interprets user input and returns the appropriate command.","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"Austintjh19"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"Austintjh19"},"content":"public class UserInputInterpreter {","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"Austintjh19"},"content":"    /** A singleton UserInputInterpreter instance. */","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"Austintjh19"},"content":"    private static UserInputInterpreter instance;","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"Austintjh19"},"content":"    /** Private constructor to initialise an UserInputInterpreter instance. */","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"Austintjh19"},"content":"    private UserInputInterpreter() {}","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"Austintjh19"},"content":"     * Returns the singleton instance of the UserInputInterpreter.","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"Austintjh19"},"content":"     * @return The UserInputInterpreter instance.","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"Austintjh19"},"content":"    public static UserInputInterpreter getInstance() {","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"Austintjh19"},"content":"        if (instance \u003d\u003d null) {","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"Austintjh19"},"content":"            instance \u003d new UserInputInterpreter();","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"Austintjh19"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"Austintjh19"},"content":"        return instance;","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"Austintjh19"},"content":"     * Interprets the user input and returns the corresponding command.","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"Austintjh19"},"content":"     * @param userInput The user input string.","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"Austintjh19"},"content":"     * @return The appropriate Command object based on the user input.","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"Austintjh19"},"content":"    public Command interpretUserInput(String userInput) {","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"Austintjh19"},"content":"        String[] inputtedWords \u003d userInput.split(\" \");","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"Austintjh19"},"content":"        String taskName \u003d \"\";","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"Austintjh19"},"content":"        boolean isValid \u003d false;","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"Austintjh19"},"content":"        switch (inputtedWords[0]) {","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"Austintjh19"},"content":"        case TerminateChatCommand.COMMAND:","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"Austintjh19"},"content":"            return new TerminateChatCommand();","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"Austintjh19"},"content":"        case PrintUserTasksCommand.COMMAND:","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"Austintjh19"},"content":"            return new PrintUserTasksCommand();","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"Austintjh19"},"content":"        case MarkTaskCompleteCommand.COMMAND:","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"Austintjh19"},"content":"            isValid \u003d InputsValidator.getInstance().isMarkTaskCompleteInputValid(userInput);","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"Austintjh19"},"content":"            if (isValid) {","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"Austintjh19"},"content":"                String taskIndexString \u003d inputtedWords[1];","lastModifiedDate":"2024-01-29"},{"lineNumber":67,"author":{"gitId":"Austintjh19"},"content":"                int taskIndex \u003d Integer.parseInt(taskIndexString);","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"Austintjh19"},"content":"                return new MarkTaskCompleteCommand(taskIndex);","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"Austintjh19"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":70,"author":{"gitId":"Austintjh19"},"content":"            break;","lastModifiedDate":"2024-01-29"},{"lineNumber":71,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"Austintjh19"},"content":"        case MarkTaskIncompleteCommand.COMMAND:","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"Austintjh19"},"content":"            isValid \u003d InputsValidator.getInstance().isMarkTaskIncompleteInputValid(userInput);","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"Austintjh19"},"content":"            if (isValid) {","lastModifiedDate":"2024-01-30"},{"lineNumber":75,"author":{"gitId":"Austintjh19"},"content":"                String taskIndexString \u003d inputtedWords[1];","lastModifiedDate":"2024-01-29"},{"lineNumber":76,"author":{"gitId":"Austintjh19"},"content":"                int taskIndex \u003d Integer.parseInt(taskIndexString);","lastModifiedDate":"2024-01-29"},{"lineNumber":77,"author":{"gitId":"Austintjh19"},"content":"                return new MarkTaskIncompleteCommand(taskIndex);","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"Austintjh19"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":79,"author":{"gitId":"Austintjh19"},"content":"            break;","lastModifiedDate":"2024-01-29"},{"lineNumber":80,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":81,"author":{"gitId":"Austintjh19"},"content":"        case RemoveTaskCommand.COMMAND:","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"Austintjh19"},"content":"            isValid \u003d InputsValidator.getInstance().isDeleteTaskInputValid(userInput);","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"Austintjh19"},"content":"            if (isValid) {","lastModifiedDate":"2024-01-30"},{"lineNumber":84,"author":{"gitId":"Austintjh19"},"content":"                String taskIndexString \u003d inputtedWords[1];","lastModifiedDate":"2024-01-29"},{"lineNumber":85,"author":{"gitId":"Austintjh19"},"content":"                int taskIndex \u003d Integer.parseInt(taskIndexString);","lastModifiedDate":"2024-01-29"},{"lineNumber":86,"author":{"gitId":"Austintjh19"},"content":"                return new RemoveTaskCommand(taskIndex);","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"Austintjh19"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":88,"author":{"gitId":"Austintjh19"},"content":"            break;","lastModifiedDate":"2024-01-29"},{"lineNumber":89,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":90,"author":{"gitId":"Austintjh19"},"content":"        case AddToDoTaskCommand.COMMAND:","lastModifiedDate":"2024-02-03"},{"lineNumber":91,"author":{"gitId":"Austintjh19"},"content":"            isValid \u003d InputsValidator.getInstance().isAddToDoTaskInputValid(userInput);","lastModifiedDate":"2024-02-03"},{"lineNumber":92,"author":{"gitId":"Austintjh19"},"content":"            if (isValid) {","lastModifiedDate":"2024-01-30"},{"lineNumber":93,"author":{"gitId":"Austintjh19"},"content":"                taskName \u003d userInput.substring(AddToDoTaskCommand.COMMAND.length()).trim();","lastModifiedDate":"2024-02-03"},{"lineNumber":94,"author":{"gitId":"Austintjh19"},"content":"                return new AddToDoTaskCommand(taskName);","lastModifiedDate":"2024-02-03"},{"lineNumber":95,"author":{"gitId":"Austintjh19"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":96,"author":{"gitId":"Austintjh19"},"content":"            break;","lastModifiedDate":"2024-01-29"},{"lineNumber":97,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":98,"author":{"gitId":"Austintjh19"},"content":"        case AddDeadlineTaskCommand.COMMAND:","lastModifiedDate":"2024-02-03"},{"lineNumber":99,"author":{"gitId":"Austintjh19"},"content":"            isValid \u003d InputsValidator.getInstance().isAddDeadlineTaskInputValid(userInput);","lastModifiedDate":"2024-02-03"},{"lineNumber":100,"author":{"gitId":"Austintjh19"},"content":"            if (isValid) {","lastModifiedDate":"2024-01-30"},{"lineNumber":101,"author":{"gitId":"Austintjh19"},"content":"                int byIndex \u003d userInput.indexOf(\"/by\");","lastModifiedDate":"2024-01-29"},{"lineNumber":102,"author":{"gitId":"Austintjh19"},"content":"                taskName \u003d userInput.substring(AddDeadlineTaskCommand.COMMAND.length(), byIndex - 1).trim();","lastModifiedDate":"2024-02-03"},{"lineNumber":103,"author":{"gitId":"Austintjh19"},"content":"                String deadlineStr \u003d userInput.substring(byIndex + \"/by\".length()).trim();","lastModifiedDate":"2024-01-30"},{"lineNumber":104,"author":{"gitId":"Austintjh19"},"content":"                LocalDate deadline \u003d DateTimeFormatters.getInstance().formatUserInputDate(deadlineStr);","lastModifiedDate":"2024-02-03"},{"lineNumber":105,"author":{"gitId":"Austintjh19"},"content":"                if (deadline !\u003d null) {","lastModifiedDate":"2024-01-30"},{"lineNumber":106,"author":{"gitId":"Austintjh19"},"content":"                    return new AddDeadlineTaskCommand(taskName, deadline);","lastModifiedDate":"2024-02-03"},{"lineNumber":107,"author":{"gitId":"Austintjh19"},"content":"                }","lastModifiedDate":"2024-01-29"},{"lineNumber":108,"author":{"gitId":"Austintjh19"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":109,"author":{"gitId":"Austintjh19"},"content":"            break;","lastModifiedDate":"2024-01-29"},{"lineNumber":110,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":111,"author":{"gitId":"Austintjh19"},"content":"        case AddEventTaskCommand.COMMAND:","lastModifiedDate":"2024-02-03"},{"lineNumber":112,"author":{"gitId":"Austintjh19"},"content":"            isValid \u003d InputsValidator.getInstance().isAddEventTaskInputValid(userInput);","lastModifiedDate":"2024-02-03"},{"lineNumber":113,"author":{"gitId":"Austintjh19"},"content":"            if (isValid) {","lastModifiedDate":"2024-01-30"},{"lineNumber":114,"author":{"gitId":"Austintjh19"},"content":"                int fromIndex \u003d userInput.indexOf(\"/from\");","lastModifiedDate":"2024-01-29"},{"lineNumber":115,"author":{"gitId":"Austintjh19"},"content":"                int toIndex \u003d userInput.indexOf(\"/to\");","lastModifiedDate":"2024-01-29"},{"lineNumber":116,"author":{"gitId":"Austintjh19"},"content":"                taskName \u003d userInput.substring(AddEventTaskCommand.COMMAND.length(), fromIndex - 1).trim();","lastModifiedDate":"2024-02-03"},{"lineNumber":117,"author":{"gitId":"Austintjh19"},"content":"                String startDateTimeStr \u003d userInput.substring(fromIndex + \"/from\".length(), toIndex - 1).trim();","lastModifiedDate":"2024-01-30"},{"lineNumber":118,"author":{"gitId":"Austintjh19"},"content":"                String endDateTimeStr \u003d userInput.substring(toIndex + \"/to\".length()).trim();","lastModifiedDate":"2024-01-30"},{"lineNumber":119,"author":{"gitId":"Austintjh19"},"content":"                LocalDateTime[] dateTimeRange \u003d DateTimeFormatters.getInstance()","lastModifiedDate":"2024-01-31"},{"lineNumber":120,"author":{"gitId":"Austintjh19"},"content":"                        .formateUserInputDateTimeRange(startDateTimeStr, endDateTimeStr);","lastModifiedDate":"2024-02-03"},{"lineNumber":121,"author":{"gitId":"Austintjh19"},"content":"                if (dateTimeRange !\u003d null) {","lastModifiedDate":"2024-01-30"},{"lineNumber":122,"author":{"gitId":"Austintjh19"},"content":"                    return new AddEventTaskCommand(taskName, dateTimeRange[0], dateTimeRange[1]);","lastModifiedDate":"2024-02-03"},{"lineNumber":123,"author":{"gitId":"Austintjh19"},"content":"                }","lastModifiedDate":"2024-01-30"},{"lineNumber":124,"author":{"gitId":"Austintjh19"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":125,"author":{"gitId":"Austintjh19"},"content":"            break;","lastModifiedDate":"2024-01-29"},{"lineNumber":126,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":127,"author":{"gitId":"Austintjh19"},"content":"        case FindTasksCommand.COMMAND:","lastModifiedDate":"2024-01-31"},{"lineNumber":128,"author":{"gitId":"Austintjh19"},"content":"            String searhString \u003d userInput.substring(FindTasksCommand.COMMAND.length()).trim();","lastModifiedDate":"2024-01-31"},{"lineNumber":129,"author":{"gitId":"Austintjh19"},"content":"            return new FindTasksCommand(searhString);","lastModifiedDate":"2024-01-31"},{"lineNumber":130,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":131,"author":{"gitId":"Austintjh19"},"content":"        default:","lastModifiedDate":"2024-01-29"},{"lineNumber":132,"author":{"gitId":"Austintjh19"},"content":"            return new UnsupportedCommand();","lastModifiedDate":"2024-01-29"},{"lineNumber":133,"author":{"gitId":"Austintjh19"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":134,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":135,"author":{"gitId":"Austintjh19"},"content":"        return new NoCommand();","lastModifiedDate":"2024-01-30"},{"lineNumber":136,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":137,"author":{"gitId":"Austintjh19"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"Austintjh19":137}},{"path":"src/main/java/osiris/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Austintjh19"},"content":"package osiris.storage;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Austintjh19"},"content":"import java.io.File;","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"Austintjh19"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Austintjh19"},"content":" * Manages file storage for the Osiris.","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Austintjh19"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Austintjh19"},"content":"public class Storage {","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"Austintjh19"},"content":"    private final String filepath;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Austintjh19"},"content":"     * Constructs a Storage object with the specified file path.","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"Austintjh19"},"content":"     * @param filepath The file path for storage.","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Austintjh19"},"content":"    public Storage(String filepath) {","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"Austintjh19"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"Austintjh19"},"content":"     * Retrieves the file path.","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"Austintjh19"},"content":"     * @return The file path.","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"Austintjh19"},"content":"    public String getFilepath() {","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"Austintjh19"},"content":"        return filepath;","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"Austintjh19"},"content":"     * Checks if the storage file exists.","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"Austintjh19"},"content":"     * @return True if the storage file exists, false otherwise.","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"Austintjh19"},"content":"    public boolean doesStorageFileExist() {","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"Austintjh19"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"Austintjh19"},"content":"            File file \u003d new File(filepath);","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"Austintjh19"},"content":"            return file.exists();","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"Austintjh19"},"content":"        } catch (SecurityException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"Austintjh19"},"content":"            System.err.println(\"SecurityException occurred.\" );","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"Austintjh19"},"content":"            return false;","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"Austintjh19"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"Austintjh19"},"content":"            System.err.println(\"NullPointerException occurred.\");","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"Austintjh19"},"content":"            return false;","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"Austintjh19"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"Austintjh19"},"content":"            System.err.println(\"An error occurred with Function storageFileExist().\");","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"Austintjh19"},"content":"            return false;","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"Austintjh19"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"Austintjh19"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"Austintjh19":49}},{"path":"src/main/java/osiris/storage/StorageTxtFile.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Austintjh19"},"content":"package osiris.storage;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Austintjh19"},"content":"import java.io.File;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"Austintjh19"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"Austintjh19"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Austintjh19"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"Austintjh19"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"Austintjh19"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"Austintjh19"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Austintjh19"},"content":" * Manages storage in a text file format.","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Austintjh19"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Austintjh19"},"content":"public class StorageTxtFile extends Storage {","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Austintjh19"},"content":"     * Constructs a TxtFileStorage object with the specified file path.","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Austintjh19"},"content":"     * @param filepath The file path for the text file storage.","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Austintjh19"},"content":"    public StorageTxtFile(String filepath) {","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"Austintjh19"},"content":"        super(filepath);","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"Austintjh19"},"content":"     * Initializes the text file storage.","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"Austintjh19"},"content":"    public void initialiseStorageTxtFile() {","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"Austintjh19"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"Austintjh19"},"content":"            File file \u003d new File(this.getFilepath());","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"Austintjh19"},"content":"            if (super.doesStorageFileExist()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"Austintjh19"},"content":"                System.out.println(\"Task Storage File: \" + this.getFilepath());","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"Austintjh19"},"content":"            } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"Austintjh19"},"content":"                if (file.createNewFile()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"Austintjh19"},"content":"                    System.out.println(\"Created Task Storage File: \" + this.getFilepath());","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"Austintjh19"},"content":"                } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"Austintjh19"},"content":"                    System.out.println(\"Failed to create Task Storage file: \" + this.getFilepath());","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"Austintjh19"},"content":"                }","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"Austintjh19"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"Austintjh19"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"Austintjh19"},"content":"            System.out.println(\"Error: Unable to create new Txt file for Task storage.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"Austintjh19"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"Austintjh19"},"content":"     * Reads the contents of the text file storage.","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"Austintjh19"},"content":"     * @return The contents of the text file storage as an ArrayList of strings.","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"Austintjh19"},"content":"    public ArrayList\u003cString\u003e readStorageTxtFile() {","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"Austintjh19"},"content":"        ArrayList\u003cString\u003e readContents \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"Austintjh19"},"content":"        Scanner scanner \u003d null;","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"Austintjh19"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"Austintjh19"},"content":"            File file \u003d new File(this.getFilepath());","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"Austintjh19"},"content":"            scanner \u003d new Scanner(file);","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"Austintjh19"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"Austintjh19"},"content":"                readContents.add(scanner.nextLine());","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"Austintjh19"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"Austintjh19"},"content":"            return readContents;","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"Austintjh19"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"Austintjh19"},"content":"            System.out.println(\"Error: Unable to locate filepath \" + this.getFilepath());","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"Austintjh19"},"content":"        } finally {","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"Austintjh19"},"content":"            if (scanner !\u003d null) {","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"Austintjh19"},"content":"                scanner.close();","lastModifiedDate":"2024-01-28"},{"lineNumber":66,"author":{"gitId":"Austintjh19"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":67,"author":{"gitId":"Austintjh19"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":68,"author":{"gitId":"Austintjh19"},"content":"        return readContents;","lastModifiedDate":"2024-01-28"},{"lineNumber":69,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":70,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":71,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"Austintjh19"},"content":"     * Appends content to the text file storage.","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"Austintjh19"},"content":"     * @param content The content to append to the text file storage.","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"Austintjh19"},"content":"    public void appendToStorageTxtFile(String content) {","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"Austintjh19"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":78,"author":{"gitId":"Austintjh19"},"content":"            FileWriter fw \u003d new FileWriter(this.getFilepath(), true);","lastModifiedDate":"2024-01-29"},{"lineNumber":79,"author":{"gitId":"Austintjh19"},"content":"            fw.write(content + \"\\n\");","lastModifiedDate":"2024-01-29"},{"lineNumber":80,"author":{"gitId":"Austintjh19"},"content":"            fw.close();","lastModifiedDate":"2024-01-29"},{"lineNumber":81,"author":{"gitId":"Austintjh19"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":82,"author":{"gitId":"Austintjh19"},"content":"            System.out.println(\"Error: Unable to update Task Storage File. Trouble appending.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":83,"author":{"gitId":"Austintjh19"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":84,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":85,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":86,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"Austintjh19"},"content":"     * Clears the contents of the text file storage.","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"Austintjh19"},"content":"    public void clearStorageTxtFile() {","lastModifiedDate":"2024-02-03"},{"lineNumber":90,"author":{"gitId":"Austintjh19"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":91,"author":{"gitId":"Austintjh19"},"content":"            FileWriter fw \u003d new FileWriter(getFilepath());","lastModifiedDate":"2024-01-29"},{"lineNumber":92,"author":{"gitId":"Austintjh19"},"content":"            fw.close();","lastModifiedDate":"2024-01-28"},{"lineNumber":93,"author":{"gitId":"Austintjh19"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":94,"author":{"gitId":"Austintjh19"},"content":"            System.out.println(\"Error: Unable to update Task Storage File. Trouble clearing contents.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":95,"author":{"gitId":"Austintjh19"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":96,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":97,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":98,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":99,"author":{"gitId":"Austintjh19"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"Austintjh19":99}},{"path":"src/main/java/osiris/storage/data/task.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Austintjh19"},"content":"T | Y | Borrow Book","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Austintjh19"},"content":"T | N | Read Book","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Austintjh19"},"content":"D | Y | 1231 Tut Sheet | Dec 1 2023","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"Austintjh19"},"content":"E | N | MSL Meeting | Dec 22 2023 6:00 PM | Dec 22 2023 8:00 PM","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"Austintjh19"},"content":"E | N | Orientation Camp | Jan 15 2024 8:00 AM | Jan 18 2024 10:00 PM","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"Austintjh19"},"content":"D | Y | Return Book | Dec 22 2023","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"Austintjh19"},"content":"T | N | 100 sit-ups","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"Austintjh19"},"content":"T | N | 100 push-ups","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"Austintjh19"},"content":"E | Y | Year | Jan 1 2023 12:00 AM | Dec 31 2023 11:59 PM","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"Austintjh19":9}},{"path":"src/main/java/osiris/task/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Austintjh19"},"content":"package osiris.task;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"Austintjh19"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"Austintjh19"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"Austintjh19"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Austintjh19"},"content":" * The DeadlineTask class represents a task with a deadline.","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Austintjh19"},"content":" * It extends the Task class.","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Austintjh19"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Austintjh19"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"Austintjh19"},"content":"    /** Deadline Date Time of Task. */","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Austintjh19"},"content":"    private final LocalDate deadline;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Austintjh19"},"content":"     * Constructs a DeadlineTask object with the given task name and deadline.","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Austintjh19"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Austintjh19"},"content":"     * @param deadline The deadline of the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"Austintjh19"},"content":"    public DeadlineTask(String taskName, LocalDate deadline) {","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"Austintjh19"},"content":"        super(taskName);","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"Austintjh19"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"Austintjh19"},"content":"     * Constructs a DeadlineTask object with the given task name, completion status, and deadline.","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"Austintjh19"},"content":"     * @param taskName    The name of the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"Austintjh19"},"content":"     * @param isCompleted The completion status of the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"Austintjh19"},"content":"     * @param deadline    The deadline of the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"Austintjh19"},"content":"    public DeadlineTask(String taskName, boolean isCompleted, LocalDate deadline) {","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"Austintjh19"},"content":"        super(taskName, isCompleted);","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"Austintjh19"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"Austintjh19"},"content":"     * Retrieves the deadline of the task as a string.","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"Austintjh19"},"content":"     * @return The deadline of the task formatted as \"MMM d yyyy\".","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"Austintjh19"},"content":"    public String getDeadlineStr() {","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"Austintjh19"},"content":"        return deadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"Austintjh19"},"content":"     * Retrieves the string representation of the DeadlineTask for storage purposes.","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"Austintjh19"},"content":"     * @return The string representation of the DeadlineTask.","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"Austintjh19"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"Austintjh19"},"content":"    public String getStringStorageRepresentation() {","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"Austintjh19"},"content":"        return String.format(\"D | %s | %s\", super.getStringStorageRepresentation(), this.getDeadlineStr());","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"Austintjh19"},"content":"     * Retrieves the string representation of the DeadlineTask for display purposes.","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"Austintjh19"},"content":"     * @return The string representation of the DeadlineTask.","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"Austintjh19"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":63,"author":{"gitId":"Austintjh19"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":64,"author":{"gitId":"Austintjh19"},"content":"        return String.format(\"[D] %s (by: %s)\", super.toString(), this.getDeadlineStr());","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":66,"author":{"gitId":"Austintjh19"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"Austintjh19":66}},{"path":"src/main/java/osiris/task/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Austintjh19"},"content":"package osiris.task;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"Austintjh19"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"Austintjh19"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"Austintjh19"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Austintjh19"},"content":" * The EventTask class represents a task that occurs within a specific time frame.","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Austintjh19"},"content":" * It extends the Task class.","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Austintjh19"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Austintjh19"},"content":"public class EventTask extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"Austintjh19"},"content":"    /** Starting Date Time of Task. **/","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Austintjh19"},"content":"    private final LocalDateTime startDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"Austintjh19"},"content":"    /** Ending Date Time of Task. **/","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Austintjh19"},"content":"    private final LocalDateTime endDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Austintjh19"},"content":"     * Constructs an EventTask object with the given task name, start date/time, and end date/time.","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"Austintjh19"},"content":"     * @param taskName      The name of the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"Austintjh19"},"content":"     * @param startDateTime The start date and time of the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"Austintjh19"},"content":"     * @param endDateTime   The end date and time of the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"Austintjh19"},"content":"    public EventTask(String taskName, LocalDateTime startDateTime, LocalDateTime endDateTime) {","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"Austintjh19"},"content":"        super(taskName);","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"Austintjh19"},"content":"        this.startDateTime \u003d startDateTime;","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"Austintjh19"},"content":"        this.endDateTime \u003d endDateTime;","lastModifiedDate":"2024-01-23"},{"lineNumber":29,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":30,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":31,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"Austintjh19"},"content":"     * Constructs an EventTask object with the given task name, completion status, start date/time, and end date/time.","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"Austintjh19"},"content":"     * @param taskName      The name of the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"Austintjh19"},"content":"     * @param isCompleted   The completion status of the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"Austintjh19"},"content":"     * @param startDateTime The start date and time of the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"Austintjh19"},"content":"     * @param endDateTime   The end date and time of the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"Austintjh19"},"content":"    public EventTask(String taskName, boolean isCompleted, LocalDateTime startDateTime, LocalDateTime endDateTime) {","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"Austintjh19"},"content":"        super(taskName, isCompleted);","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"Austintjh19"},"content":"        this.startDateTime \u003d startDateTime;","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"Austintjh19"},"content":"        this.endDateTime \u003d endDateTime;","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"Austintjh19"},"content":"     * Retrieves the string representation of the start date and time of the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"Austintjh19"},"content":"     * @return The start date and time of the task formatted as \"MMM d yyyy h:mm a\".","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"Austintjh19"},"content":"    public String getStartDateTimeStr() {","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"Austintjh19"},"content":"        return startDateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy h:mm a\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"Austintjh19"},"content":"     * Retrieves the string representation of the end date and time of the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"Austintjh19"},"content":"     * @return The end date and time of the task formatted as \"MMM d yyyy h:mm a\".","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"Austintjh19"},"content":"    public String getEndDateTimeStr() {","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"Austintjh19"},"content":"        return endDateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy h:mm a\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"Austintjh19"},"content":"     * Retrieves the string representation of the EventTask for storage purposes.","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"Austintjh19"},"content":"     * @return The string representation of the EventTask.","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"Austintjh19"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":69,"author":{"gitId":"Austintjh19"},"content":"    public String getStringStorageRepresentation() {","lastModifiedDate":"2024-01-29"},{"lineNumber":70,"author":{"gitId":"Austintjh19"},"content":"        return String.format(\"E | %s | %s | %s\", super.getStringStorageRepresentation(),","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"Austintjh19"},"content":"                this.getStartDateTimeStr(), this.getEndDateTimeStr());","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"Austintjh19"},"content":"     * Retrieves the string representation of the EventTask for display purposes.","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"Austintjh19"},"content":"     * @return The string representation of the EventTask.","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"Austintjh19"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":80,"author":{"gitId":"Austintjh19"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":81,"author":{"gitId":"Austintjh19"},"content":"        return String.format(\"[E] %s (from: %s to: %s)\", super.toString(),","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"Austintjh19"},"content":"                this.getStartDateTimeStr(), this.getEndDateTimeStr());","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":84,"author":{"gitId":"Austintjh19"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"Austintjh19":84}},{"path":"src/main/java/osiris/task/InvalidTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Austintjh19"},"content":"package osiris.task;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"Austintjh19"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Austintjh19"},"content":" * The InvalidTaskException class represents an exception that is thrown when an invalid task name is assigned.","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Austintjh19"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Austintjh19"},"content":"public class InvalidTaskException extends Exception {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Austintjh19"},"content":"     * Retrieves the string representation of the exception.","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Austintjh19"},"content":"     * @return The string representation of the exception.","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Austintjh19"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"Austintjh19"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"Austintjh19"},"content":"        return \"Invalid Task Name assigned.\";","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Austintjh19"},"content":"     * Retrieves the message associated with the exception.","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"Austintjh19"},"content":"     * @return The message associated with the exception.","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"Austintjh19"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"Austintjh19"},"content":"    public String getMessage() {","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"Austintjh19"},"content":"        return \"Invalid Task Name assigned.\";","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"Austintjh19"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"Austintjh19":27}},{"path":"src/main/java/osiris/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Austintjh19"},"content":"package osiris.task;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"Austintjh19"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Austintjh19"},"content":" * The Task class represents a generic task in the Osiris application.","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Austintjh19"},"content":" * It serves as the base class for different types of tasks.","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Austintjh19"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Austintjh19"},"content":"public abstract class Task {","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"Austintjh19"},"content":"    /** Name of Task */","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Austintjh19"},"content":"    private final String taskName;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"Austintjh19"},"content":"    /** Whether Task has been completed. */","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Austintjh19"},"content":"    private boolean isCompleted \u003d false;","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Austintjh19"},"content":"     * Constructs a Task object with the given task name.","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Austintjh19"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Austintjh19"},"content":"    public Task(String taskName) {","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"Austintjh19"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"Austintjh19"},"content":"     * Constructs a Task object with the given task name and completion status.","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"Austintjh19"},"content":"     * @param taskName    The name of the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"Austintjh19"},"content":"     * @param isCompleted The completion status of the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"Austintjh19"},"content":"    public Task(String taskName, boolean isCompleted) {","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"Austintjh19"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"Austintjh19"},"content":"        this.isCompleted \u003d isCompleted;","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"Austintjh19"},"content":"     * Marks the task as completed.","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"Austintjh19"},"content":"    public void markComplete() {","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"Austintjh19"},"content":"        isCompleted \u003d true;","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":41,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":42,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"Austintjh19"},"content":"     * Marks the task as incomplete.","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"Austintjh19"},"content":"    public void markIncomplete() {","lastModifiedDate":"2024-01-23"},{"lineNumber":46,"author":{"gitId":"Austintjh19"},"content":"        isCompleted \u003d false;","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":48,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":49,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"Austintjh19"},"content":"     * Retrieves the string representation of the task for storage purposes.","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"Austintjh19"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"Austintjh19"},"content":"    public String getStringStorageRepresentation() {","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"Austintjh19"},"content":"        String completionStatus \u003d isCompleted ? \"Y\" : \"N\";","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"Austintjh19"},"content":"        return String.format(\"%s | %s\", completionStatus, taskName);","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"Austintjh19"},"content":"     * Retrieves the string representation of the task for display purposes.","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"Austintjh19"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"Austintjh19"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":65,"author":{"gitId":"Austintjh19"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":66,"author":{"gitId":"Austintjh19"},"content":"        String completionStatus \u003d isCompleted ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2024-01-23"},{"lineNumber":67,"author":{"gitId":"Austintjh19"},"content":"        return String.format(\"%s %s\", completionStatus, taskName);","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":69,"author":{"gitId":"Austintjh19"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"Austintjh19":69}},{"path":"src/main/java/osiris/task/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Austintjh19"},"content":"package osiris.task;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Austintjh19"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"Austintjh19"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"Austintjh19"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"Austintjh19"},"content":"import osiris.formatters.DateTimeFormatters;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Austintjh19"},"content":"import osiris.storage.StorageTxtFile;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Austintjh19"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Austintjh19"},"content":" * The TaskManager class manages user tasks.","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Austintjh19"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Austintjh19"},"content":"public class TaskManager {","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"Austintjh19"},"content":"    /** File path of where user tasks will be stored */","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Austintjh19"},"content":"    private static final String TASK_STORAGE_FILE_PATH \u003d \"src/main/java/Osiris/Storage/data/task.txt\";","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"Austintjh19"},"content":"    /** List of user task. */","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"Austintjh19"},"content":"    private final ArrayList\u003cTask\u003e userTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"Austintjh19"},"content":"    /** Initialise new Txt File for storage. */","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"Austintjh19"},"content":"    private final StorageTxtFile taskStorage \u003d new StorageTxtFile(TASK_STORAGE_FILE_PATH);","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"Austintjh19"},"content":"     * Initializes the task manager by loading tasks from file storage.","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"Austintjh19"},"content":"    public void initialise() {","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"Austintjh19"},"content":"        taskStorage.initialiseStorageTxtFile();","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"Austintjh19"},"content":"        this.loadUserTaskFromFileStorage();","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"Austintjh19"},"content":"     * Terminates the task manager by clearing file storage and storing tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"Austintjh19"},"content":"    public void terminate() {","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"Austintjh19"},"content":"        taskStorage.clearStorageTxtFile();","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"Austintjh19"},"content":"        this.storeUserTaskToFileStorage();","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"Austintjh19"},"content":"     * Adds a to-do task to the task manager.","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"Austintjh19"},"content":"     * @param taskName    The name of the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"Austintjh19"},"content":"     * @param isCompleted The completion status of the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"Austintjh19"},"content":"     * @return True if the task is added successfully, false otherwise.","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"Austintjh19"},"content":"    public boolean addToDoTask(String taskName, boolean isCompleted) {","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"Austintjh19"},"content":"        ToDoTask newTask \u003d new ToDoTask(taskName, isCompleted);","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"Austintjh19"},"content":"        userTasks.add(newTask);","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"Austintjh19"},"content":"        return true;","lastModifiedDate":"2024-01-24"},{"lineNumber":51,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":52,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":53,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"Austintjh19"},"content":"     * Adds a deadline task to the task manager.","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"Austintjh19"},"content":"     * @param taskName    The name of the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"Austintjh19"},"content":"     * @param isCompleted The completion status of the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"Austintjh19"},"content":"     * @param deadline    The deadline of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"Austintjh19"},"content":"     * @return True if the task is added successfully, false otherwise.","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"Austintjh19"},"content":"    public boolean addDeadlineTask(String taskName, boolean isCompleted, LocalDate deadline) {","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"Austintjh19"},"content":"        DeadlineTask newTask \u003d new DeadlineTask(taskName, isCompleted, deadline);","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"Austintjh19"},"content":"        userTasks.add(newTask);","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"Austintjh19"},"content":"        return true;","lastModifiedDate":"2024-01-24"},{"lineNumber":65,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":66,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":67,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"Austintjh19"},"content":"     * Adds an event task to the task manager.","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"Austintjh19"},"content":"     * @param taskName      The name of the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"Austintjh19"},"content":"     * @param isCompleted   The completion status of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"Austintjh19"},"content":"     * @param startDateTime The start date and time of the event.","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"Austintjh19"},"content":"     * @param endDateTime   The end date and time of the event.","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"Austintjh19"},"content":"     * @return True if the task is added successfully, false otherwise.","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"Austintjh19"},"content":"    public boolean addEventTask(String taskName, boolean isCompleted, LocalDateTime startDateTime,","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"Austintjh19"},"content":"                                LocalDateTime endDateTime) {","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"Austintjh19"},"content":"        EventTask newTask \u003d new EventTask(taskName, isCompleted, startDateTime, endDateTime);","lastModifiedDate":"2024-01-30"},{"lineNumber":79,"author":{"gitId":"Austintjh19"},"content":"        userTasks.add(newTask);","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"Austintjh19"},"content":"        return true;","lastModifiedDate":"2024-01-24"},{"lineNumber":81,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":82,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":83,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"Austintjh19"},"content":"     * Retrieves a task from the task manager based on its index.","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"Austintjh19"},"content":"     * @param index The index of the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"Austintjh19"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"Austintjh19"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2024-01-23"},{"lineNumber":90,"author":{"gitId":"Austintjh19"},"content":"        return userTasks.get(index);","lastModifiedDate":"2024-02-03"},{"lineNumber":91,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":92,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":93,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"Austintjh19"},"content":"     * Retrieves all user tasks managed by the task manager.","lastModifiedDate":"2024-01-31"},{"lineNumber":95,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"Austintjh19"},"content":"     * @return The list of user tasks.","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":98,"author":{"gitId":"Austintjh19"},"content":"    public ArrayList\u003cTask\u003e getUserTasks() {","lastModifiedDate":"2024-01-29"},{"lineNumber":99,"author":{"gitId":"Austintjh19"},"content":"        return userTasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":100,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":101,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":102,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":103,"author":{"gitId":"Austintjh19"},"content":"     * Removes a task from the task manager based on its index.","lastModifiedDate":"2024-01-31"},{"lineNumber":104,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":105,"author":{"gitId":"Austintjh19"},"content":"     * @param index The index of the task to be removed.","lastModifiedDate":"2024-01-31"},{"lineNumber":106,"author":{"gitId":"Austintjh19"},"content":"     * @return The removed task, or null if the index is out of bounds.","lastModifiedDate":"2024-01-31"},{"lineNumber":107,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":108,"author":{"gitId":"Austintjh19"},"content":"    public Task deleteTask(int index) {","lastModifiedDate":"2024-02-03"},{"lineNumber":109,"author":{"gitId":"Austintjh19"},"content":"        try {","lastModifiedDate":"2024-01-24"},{"lineNumber":110,"author":{"gitId":"Austintjh19"},"content":"            Task removedTask \u003d userTasks.get(index);","lastModifiedDate":"2024-02-03"},{"lineNumber":111,"author":{"gitId":"Austintjh19"},"content":"            userTasks.remove(index);","lastModifiedDate":"2024-02-03"},{"lineNumber":112,"author":{"gitId":"Austintjh19"},"content":"            return removedTask;","lastModifiedDate":"2024-01-24"},{"lineNumber":113,"author":{"gitId":"Austintjh19"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-24"},{"lineNumber":114,"author":{"gitId":"Austintjh19"},"content":"            System.out.println(\"No task with index \" + (index + 1) + \". Enter \u0027list\u0027 to view tasks.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":115,"author":{"gitId":"Austintjh19"},"content":"            return null;","lastModifiedDate":"2024-01-24"},{"lineNumber":116,"author":{"gitId":"Austintjh19"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":117,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":118,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":119,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":120,"author":{"gitId":"Austintjh19"},"content":"     * Retrieves the total number of tasks managed by the task manager.","lastModifiedDate":"2024-01-31"},{"lineNumber":121,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":122,"author":{"gitId":"Austintjh19"},"content":"     * @return The total number of tasks.","lastModifiedDate":"2024-01-31"},{"lineNumber":123,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":124,"author":{"gitId":"Austintjh19"},"content":"    public int getTotalTaskCount() {","lastModifiedDate":"2024-01-24"},{"lineNumber":125,"author":{"gitId":"Austintjh19"},"content":"        return userTasks.size();","lastModifiedDate":"2024-02-03"},{"lineNumber":126,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":127,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":128,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":129,"author":{"gitId":"Austintjh19"},"content":"     * Marks a task as completed based on its index.","lastModifiedDate":"2024-01-31"},{"lineNumber":130,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":131,"author":{"gitId":"Austintjh19"},"content":"     * @param index The index of the task to be marked as completed.","lastModifiedDate":"2024-01-31"},{"lineNumber":132,"author":{"gitId":"Austintjh19"},"content":"     * @return True if the task is marked as completed successfully, false otherwise.","lastModifiedDate":"2024-01-31"},{"lineNumber":133,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":134,"author":{"gitId":"Austintjh19"},"content":"    public boolean markTaskComplete(int index) {","lastModifiedDate":"2024-02-03"},{"lineNumber":135,"author":{"gitId":"Austintjh19"},"content":"        try {","lastModifiedDate":"2024-01-24"},{"lineNumber":136,"author":{"gitId":"Austintjh19"},"content":"            userTasks.get(index).markComplete();","lastModifiedDate":"2024-02-03"},{"lineNumber":137,"author":{"gitId":"Austintjh19"},"content":"            return true;","lastModifiedDate":"2024-01-24"},{"lineNumber":138,"author":{"gitId":"Austintjh19"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-24"},{"lineNumber":139,"author":{"gitId":"Austintjh19"},"content":"            System.out.println(\"No task with index \" + (index + 1) + \". Enter \u0027list\u0027 to view tasks.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":140,"author":{"gitId":"Austintjh19"},"content":"            return false;","lastModifiedDate":"2024-01-24"},{"lineNumber":141,"author":{"gitId":"Austintjh19"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":142,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":143,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":144,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":145,"author":{"gitId":"Austintjh19"},"content":"     * Marks a task as incomplete based on its index.","lastModifiedDate":"2024-01-31"},{"lineNumber":146,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":147,"author":{"gitId":"Austintjh19"},"content":"     * @param index The index of the task to be marked as incomplete.","lastModifiedDate":"2024-01-31"},{"lineNumber":148,"author":{"gitId":"Austintjh19"},"content":"     * @return True if the task is marked as incomplete successfully, false otherwise.","lastModifiedDate":"2024-01-31"},{"lineNumber":149,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":150,"author":{"gitId":"Austintjh19"},"content":"    public boolean markTaskIncomplete(int index) {","lastModifiedDate":"2024-01-24"},{"lineNumber":151,"author":{"gitId":"Austintjh19"},"content":"        try {","lastModifiedDate":"2024-01-24"},{"lineNumber":152,"author":{"gitId":"Austintjh19"},"content":"            userTasks.get(index).markIncomplete();","lastModifiedDate":"2024-02-03"},{"lineNumber":153,"author":{"gitId":"Austintjh19"},"content":"            return true;","lastModifiedDate":"2024-01-24"},{"lineNumber":154,"author":{"gitId":"Austintjh19"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-24"},{"lineNumber":155,"author":{"gitId":"Austintjh19"},"content":"            System.out.println(\"No task with index \" + (index + 1) + \". Enter \u0027list\u0027 to view tasks.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":156,"author":{"gitId":"Austintjh19"},"content":"            return false;","lastModifiedDate":"2024-01-24"},{"lineNumber":157,"author":{"gitId":"Austintjh19"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":158,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":159,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":160,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":161,"author":{"gitId":"Austintjh19"},"content":"     * Finds tasks containing the specified search string.","lastModifiedDate":"2024-02-03"},{"lineNumber":162,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":163,"author":{"gitId":"Austintjh19"},"content":"     * @param searchString The string to search for within task descriptions.","lastModifiedDate":"2024-02-03"},{"lineNumber":164,"author":{"gitId":"Austintjh19"},"content":"     * @return An ArrayList of task details containing the search string.","lastModifiedDate":"2024-02-03"},{"lineNumber":165,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":166,"author":{"gitId":"Austintjh19"},"content":"    public ArrayList\u003cString\u003e findTask(String searchString) {","lastModifiedDate":"2024-02-03"},{"lineNumber":167,"author":{"gitId":"Austintjh19"},"content":"        ArrayList\u003cString\u003e relevantTask \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-03"},{"lineNumber":168,"author":{"gitId":"Austintjh19"},"content":"        for (Task task: userTasks) {","lastModifiedDate":"2024-02-03"},{"lineNumber":169,"author":{"gitId":"Austintjh19"},"content":"            if (task.toString().contains(searchString)) {","lastModifiedDate":"2024-02-03"},{"lineNumber":170,"author":{"gitId":"Austintjh19"},"content":"                relevantTask.add(task.toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":171,"author":{"gitId":"Austintjh19"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":172,"author":{"gitId":"Austintjh19"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":173,"author":{"gitId":"Austintjh19"},"content":"        return relevantTask;","lastModifiedDate":"2024-02-03"},{"lineNumber":174,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":175,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":176,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":177,"author":{"gitId":"Austintjh19"},"content":"     * Stores user tasks to file storage.","lastModifiedDate":"2024-01-31"},{"lineNumber":178,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":179,"author":{"gitId":"Austintjh19"},"content":"    private void storeUserTaskToFileStorage() {","lastModifiedDate":"2024-01-29"},{"lineNumber":180,"author":{"gitId":"Austintjh19"},"content":"        for (Task task : userTasks) {","lastModifiedDate":"2024-02-03"},{"lineNumber":181,"author":{"gitId":"Austintjh19"},"content":"            taskStorage.appendToStorageTxtFile(task.getStringStorageRepresentation());","lastModifiedDate":"2024-02-03"},{"lineNumber":182,"author":{"gitId":"Austintjh19"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":183,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":184,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":185,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":186,"author":{"gitId":"Austintjh19"},"content":"     * Loads user tasks from file storage.","lastModifiedDate":"2024-01-31"},{"lineNumber":187,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":188,"author":{"gitId":"Austintjh19"},"content":"    private void loadUserTaskFromFileStorage() {","lastModifiedDate":"2024-01-29"},{"lineNumber":189,"author":{"gitId":"Austintjh19"},"content":"        ArrayList\u003cString\u003e readContents \u003d taskStorage.readStorageTxtFile();","lastModifiedDate":"2024-02-03"},{"lineNumber":190,"author":{"gitId":"Austintjh19"},"content":"        for (String readContentString : readContents) {","lastModifiedDate":"2024-01-29"},{"lineNumber":191,"author":{"gitId":"Austintjh19"},"content":"            String[] readContentWord \u003d readContentString.split(\"\\\\|\");","lastModifiedDate":"2024-01-29"},{"lineNumber":192,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":193,"author":{"gitId":"Austintjh19"},"content":"            if (readContentWord[0].trim().equals(\"T\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":194,"author":{"gitId":"Austintjh19"},"content":"                this.addToDoTask(readContentWord[2].trim(), readContentWord[1].trim().equals(\"Y\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":195,"author":{"gitId":"Austintjh19"},"content":"            } else if (readContentWord[0].trim().equals(\"D\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":196,"author":{"gitId":"Austintjh19"},"content":"                LocalDate deadline \u003d DateTimeFormatters.getInstance()","lastModifiedDate":"2024-01-31"},{"lineNumber":197,"author":{"gitId":"Austintjh19"},"content":"                        .formatStoredDate(readContentWord[3].trim());","lastModifiedDate":"2024-02-03"},{"lineNumber":198,"author":{"gitId":"Austintjh19"},"content":"                this.addDeadlineTask(readContentWord[2].trim(), readContentWord[1].trim().equals(\"Y\"), deadline);","lastModifiedDate":"2024-02-03"},{"lineNumber":199,"author":{"gitId":"Austintjh19"},"content":"            } else if (readContentWord[0].trim().equals(\"E\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":200,"author":{"gitId":"Austintjh19"},"content":"                LocalDateTime[] dateTimeRange \u003d DateTimeFormatters.getInstance()","lastModifiedDate":"2024-01-31"},{"lineNumber":201,"author":{"gitId":"Austintjh19"},"content":"                        .formatStoredDateTimeRange(readContentWord[3].trim(), readContentWord[4].trim());","lastModifiedDate":"2024-02-03"},{"lineNumber":202,"author":{"gitId":"Austintjh19"},"content":"                this.addEventTask(readContentWord[2].trim(), readContentWord[1].trim().equals(\"Y\"), dateTimeRange[0],","lastModifiedDate":"2024-02-03"},{"lineNumber":203,"author":{"gitId":"Austintjh19"},"content":"                        dateTimeRange[1]);","lastModifiedDate":"2024-02-03"},{"lineNumber":204,"author":{"gitId":"Austintjh19"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":205,"author":{"gitId":"Austintjh19"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":206,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":207,"author":{"gitId":"Austintjh19"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"Austintjh19":207}},{"path":"src/main/java/osiris/task/ToDoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Austintjh19"},"content":"package osiris.task;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"Austintjh19"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Austintjh19"},"content":" * Represents a to-do task in the Osiris application.","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Austintjh19"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Austintjh19"},"content":"public class ToDoTask extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Austintjh19"},"content":"     * Constructs a ToDoTask object with the specified task name.","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Austintjh19"},"content":"     * @param taskName The name of the to-do task.","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Austintjh19"},"content":"    public ToDoTask(String taskName) {","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"Austintjh19"},"content":"        super(taskName);","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Austintjh19"},"content":"     * Constructs a ToDoTask object with the specified task name and completion status.","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Austintjh19"},"content":"     * @param taskName    The name of the to-do task.","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"Austintjh19"},"content":"     * @param isCompleted The completion status of the to-do task.","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"Austintjh19"},"content":"    public ToDoTask(String taskName, boolean isCompleted) {","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"Austintjh19"},"content":"        super(taskName, isCompleted);","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"Austintjh19"},"content":"     * Retrieves the string representation of the to-do task for storage.","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"Austintjh19"},"content":"     * @return The string representation of the to-do task.","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"Austintjh19"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"Austintjh19"},"content":"    public String getStringStorageRepresentation() {","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"Austintjh19"},"content":"        return String.format(\"T | %s\", super.getStringStorageRepresentation());","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"Austintjh19"},"content":"     * Retrieves the string representation of the to-do task.","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"Austintjh19"},"content":"     * @return The string representation of the to-do task.","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"Austintjh19"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":43,"author":{"gitId":"Austintjh19"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":44,"author":{"gitId":"Austintjh19"},"content":"        return String.format(\"[T] %s\", super.toString());","lastModifiedDate":"2024-01-23"},{"lineNumber":45,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":46,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":47,"author":{"gitId":"Austintjh19"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"Austintjh19":47}},{"path":"src/main/java/osiris/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Austintjh19"},"content":"package osiris.ui;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Austintjh19"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"Austintjh19"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Austintjh19"},"content":" * The Ui class provides methods for managing user interface interactions and displaying messages.","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Austintjh19"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Austintjh19"},"content":"public class Ui {","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Austintjh19"},"content":"     * Outputs introduction messages to the user.","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Austintjh19"},"content":"    public void displayIntroductions() {","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Austintjh19"},"content":"        this.printSeparator();","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"Austintjh19"},"content":"        for (String line : UiOutputs.NAME_ASCII_ART) {","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Austintjh19"},"content":"            System.out.println(line);","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"Austintjh19"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"Austintjh19"},"content":"        this.printSeparator();","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"Austintjh19"},"content":"        System.out.println(UiOutputs.INTRODUCTIONS);","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"Austintjh19"},"content":"        this.printSeparator();","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"Austintjh19"},"content":"     * Prompts the user with the Osiris message prompt.","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"Austintjh19"},"content":"    public void displayOsirisPromptMessage() {","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"Austintjh19"},"content":"        System.out.print(UiOutputs.MESSAGE_OSIRIS_PROMPT);","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"Austintjh19"},"content":"     * Outputs a message for unsupported commands.","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"Austintjh19"},"content":"    public void displayUnsupportedCommandMessage() {","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"Austintjh19"},"content":"        System.out.println(UiOutputs.UNSUPPORTED_COMMAND_OUTPUT);","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"Austintjh19"},"content":"     * Outputs goodbye messages to the user.","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"Austintjh19"},"content":"    public void displayGoodbyes() {","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"Austintjh19"},"content":"        this.printSeparator();","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"Austintjh19"},"content":"        System.out.println(UiOutputs.GOODBYES);","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"Austintjh19"},"content":"        this.printSeparator();","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"Austintjh19"},"content":"     * Displays a success notification for adding a to-do task.","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"Austintjh19"},"content":"     * @param taskDetails The details of the added task.","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"Austintjh19"},"content":"     * @param taskCount   The total count of tasks.","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"Austintjh19"},"content":"    public void displayToDoTaskAdditionNotification(String taskDetails, int taskCount) {","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"Austintjh19"},"content":"        this.printSeparator();","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"Austintjh19"},"content":"        System.out.println(\"     Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"Austintjh19"},"content":"        System.out.println(\"        \" + taskDetails);","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"Austintjh19"},"content":"        System.out.printf(\"     Now you have %d tasks in the list.%n\", taskCount);","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"Austintjh19"},"content":"        this.printSeparator();","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"Austintjh19"},"content":"     * Displays a success notification for adding a deadline task.","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"Austintjh19"},"content":"     * @param taskDetails The details of the added task.","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"Austintjh19"},"content":"     * @param taskCount   The total count of tasks.","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"Austintjh19"},"content":"    public void displayDeadlineTaskAdditionNotification(String taskDetails, int taskCount) {","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"Austintjh19"},"content":"        this.printSeparator();","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"Austintjh19"},"content":"        System.out.println(\"     Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-29"},{"lineNumber":69,"author":{"gitId":"Austintjh19"},"content":"        System.out.println(\"        \" + taskDetails);","lastModifiedDate":"2024-01-29"},{"lineNumber":70,"author":{"gitId":"Austintjh19"},"content":"        System.out.printf(\"     Now you have %d tasks in the list.%n\", taskCount);","lastModifiedDate":"2024-01-29"},{"lineNumber":71,"author":{"gitId":"Austintjh19"},"content":"        this.printSeparator();","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"Austintjh19"},"content":"     * Displays a success notification for adding an event task.","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"Austintjh19"},"content":"     * @param taskDetails The details of the added task.","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"Austintjh19"},"content":"     * @param taskCount   The total count of tasks.","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"Austintjh19"},"content":"    public void displayEventTaskAdditionNotification(String taskDetails, int taskCount) {","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"Austintjh19"},"content":"        this.printSeparator();","lastModifiedDate":"2024-01-29"},{"lineNumber":82,"author":{"gitId":"Austintjh19"},"content":"        System.out.println(\"     Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-29"},{"lineNumber":83,"author":{"gitId":"Austintjh19"},"content":"        System.out.println(\"        \" + taskDetails);","lastModifiedDate":"2024-01-29"},{"lineNumber":84,"author":{"gitId":"Austintjh19"},"content":"        System.out.printf(\"     Now you have %d tasks in the list.%n\", taskCount);","lastModifiedDate":"2024-01-29"},{"lineNumber":85,"author":{"gitId":"Austintjh19"},"content":"        this.printSeparator();","lastModifiedDate":"2024-01-29"},{"lineNumber":86,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":87,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":88,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"Austintjh19"},"content":"     * Displays a success notification for marking a task as completed.","lastModifiedDate":"2024-01-31"},{"lineNumber":91,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":92,"author":{"gitId":"Austintjh19"},"content":"     * @param taskDetails The details of the completed task.","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"Austintjh19"},"content":"    public void displayMarkTaskCompleteNotification(String taskDetails) {","lastModifiedDate":"2024-02-03"},{"lineNumber":95,"author":{"gitId":"Austintjh19"},"content":"        this.printSeparator();","lastModifiedDate":"2024-01-29"},{"lineNumber":96,"author":{"gitId":"Austintjh19"},"content":"        System.out.println(\"     Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-01-29"},{"lineNumber":97,"author":{"gitId":"Austintjh19"},"content":"        System.out.println(\"        \" + taskDetails);","lastModifiedDate":"2024-01-29"},{"lineNumber":98,"author":{"gitId":"Austintjh19"},"content":"        this.printSeparator();","lastModifiedDate":"2024-01-29"},{"lineNumber":99,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":100,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":101,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":102,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":103,"author":{"gitId":"Austintjh19"},"content":"     * Displays a success notification for marking a task as incomplete.","lastModifiedDate":"2024-01-31"},{"lineNumber":104,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":105,"author":{"gitId":"Austintjh19"},"content":"     * @param taskDetails The details of the incomplete task.","lastModifiedDate":"2024-01-31"},{"lineNumber":106,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":107,"author":{"gitId":"Austintjh19"},"content":"    public void displayMarkTaskIncompleteNotification(String taskDetails) {","lastModifiedDate":"2024-02-03"},{"lineNumber":108,"author":{"gitId":"Austintjh19"},"content":"        this.printSeparator();","lastModifiedDate":"2024-01-29"},{"lineNumber":109,"author":{"gitId":"Austintjh19"},"content":"        System.out.println(\"     OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-01-29"},{"lineNumber":110,"author":{"gitId":"Austintjh19"},"content":"        System.out.println(\"        \" + taskDetails);","lastModifiedDate":"2024-01-29"},{"lineNumber":111,"author":{"gitId":"Austintjh19"},"content":"        this.printSeparator();","lastModifiedDate":"2024-01-29"},{"lineNumber":112,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":113,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":114,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":115,"author":{"gitId":"Austintjh19"},"content":"     * Displays a success notification for removing a task.","lastModifiedDate":"2024-01-31"},{"lineNumber":116,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":117,"author":{"gitId":"Austintjh19"},"content":"     * @param taskDetails The details of the removed task.","lastModifiedDate":"2024-01-31"},{"lineNumber":118,"author":{"gitId":"Austintjh19"},"content":"     * @param taskCount   The total count of tasks.","lastModifiedDate":"2024-01-31"},{"lineNumber":119,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":120,"author":{"gitId":"Austintjh19"},"content":"    public void displayDeleteTaskNotification(String taskDetails, int taskCount) {","lastModifiedDate":"2024-02-03"},{"lineNumber":121,"author":{"gitId":"Austintjh19"},"content":"        this.printSeparator();","lastModifiedDate":"2024-01-29"},{"lineNumber":122,"author":{"gitId":"Austintjh19"},"content":"        System.out.println(\"     Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-01-29"},{"lineNumber":123,"author":{"gitId":"Austintjh19"},"content":"        System.out.println(\"        \" + taskDetails);","lastModifiedDate":"2024-01-29"},{"lineNumber":124,"author":{"gitId":"Austintjh19"},"content":"        System.out.printf(\"     Now you have %d tasks in the list.%n\", taskCount);","lastModifiedDate":"2024-01-29"},{"lineNumber":125,"author":{"gitId":"Austintjh19"},"content":"        this.printSeparator();","lastModifiedDate":"2024-01-29"},{"lineNumber":126,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":127,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":128,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":129,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":130,"author":{"gitId":"Austintjh19"},"content":"     * Prints the list of user tasks.","lastModifiedDate":"2024-01-31"},{"lineNumber":131,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":132,"author":{"gitId":"Austintjh19"},"content":"     * @param taskDetailsList The list containing details of user tasks.","lastModifiedDate":"2024-01-31"},{"lineNumber":133,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":134,"author":{"gitId":"Austintjh19"},"content":"    public void printUserTasks(ArrayList\u003cString\u003e taskDetailsList) {","lastModifiedDate":"2024-01-29"},{"lineNumber":135,"author":{"gitId":"Austintjh19"},"content":"        this.printSeparator();","lastModifiedDate":"2024-01-29"},{"lineNumber":136,"author":{"gitId":"Austintjh19"},"content":"        System.out.println(\"     Here are the tasks in your list:\");","lastModifiedDate":"2024-01-29"},{"lineNumber":137,"author":{"gitId":"Austintjh19"},"content":"        for (int i \u003d 0; i \u003c taskDetailsList.size(); i++) {","lastModifiedDate":"2024-01-29"},{"lineNumber":138,"author":{"gitId":"Austintjh19"},"content":"            System.out.println(\"     \" + (i + 1) + \". \" + taskDetailsList.get(i));","lastModifiedDate":"2024-01-29"},{"lineNumber":139,"author":{"gitId":"Austintjh19"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":140,"author":{"gitId":"Austintjh19"},"content":"        this.printSeparator();","lastModifiedDate":"2024-01-29"},{"lineNumber":141,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":142,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":143,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":144,"author":{"gitId":"Austintjh19"},"content":"     * Prints the details of the found tasks to the user interface.","lastModifiedDate":"2024-02-03"},{"lineNumber":145,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":146,"author":{"gitId":"Austintjh19"},"content":"     * @param taskDetailsList The list of task details to be printed.","lastModifiedDate":"2024-01-31"},{"lineNumber":147,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":148,"author":{"gitId":"Austintjh19"},"content":"    public void printFoundUserTasks(ArrayList\u003cString\u003e taskDetailsList) {","lastModifiedDate":"2024-01-31"},{"lineNumber":149,"author":{"gitId":"Austintjh19"},"content":"        this.printSeparator();","lastModifiedDate":"2024-01-31"},{"lineNumber":150,"author":{"gitId":"Austintjh19"},"content":"        System.out.println(\"     Here are the matching tasks in your list:\");","lastModifiedDate":"2024-01-31"},{"lineNumber":151,"author":{"gitId":"Austintjh19"},"content":"        for (int i \u003d 0; i \u003c taskDetailsList.size(); i++) {","lastModifiedDate":"2024-01-31"},{"lineNumber":152,"author":{"gitId":"Austintjh19"},"content":"            System.out.println(\"     \" + (i + 1) + \". \" + taskDetailsList.get(i));","lastModifiedDate":"2024-01-31"},{"lineNumber":153,"author":{"gitId":"Austintjh19"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":154,"author":{"gitId":"Austintjh19"},"content":"        this.printSeparator();","lastModifiedDate":"2024-01-31"},{"lineNumber":155,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":156,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":157,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":158,"author":{"gitId":"Austintjh19"},"content":"     * Prints a separator line to the console.","lastModifiedDate":"2024-01-31"},{"lineNumber":159,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":160,"author":{"gitId":"Austintjh19"},"content":"    private void printSeparator() {","lastModifiedDate":"2024-01-29"},{"lineNumber":161,"author":{"gitId":"Austintjh19"},"content":"        System.out.println(UiOutputs.SEPARATOR);","lastModifiedDate":"2024-02-03"},{"lineNumber":162,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":163,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":164,"author":{"gitId":"Austintjh19"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"Austintjh19":164}},{"path":"src/main/java/osiris/ui/UiOutputs.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Austintjh19"},"content":"package osiris.ui;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Austintjh19"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Austintjh19"},"content":" * The UiOutputs class provides static constants for various output messages used in the UI.","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Austintjh19"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Austintjh19"},"content":"public class UiOutputs {","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"Austintjh19"},"content":"    /** The name of the Osiris chatBot. */","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Austintjh19"},"content":"    public static final String OSIRIS_NAME \u003d \"osiris\";","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"Austintjh19"},"content":"    /** The separator used in UI outputs. */","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Austintjh19"},"content":"    public static final String SEPARATOR \u003d \"----------------------------------------\";","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"Austintjh19"},"content":"    /** ASCII art representation of the Osiris name. */","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Austintjh19"},"content":"    public static final String[] NAME_ASCII_ART \u003d {","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Austintjh19"},"content":"        \"    ,o888888o.       d888888o.    8 8888 8 888888888o.    8 8888    d888888o.   \",","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"Austintjh19"},"content":"        \" . 8888     `88.   .`8888:\u0027 `88.  8 8888 8 8888    `88.   8 8888  .`8888:\u0027 `88. \",","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"Austintjh19"},"content":"        \",8 8888       `8b  8.`8888.   Y8  8 8888 8 8888     `88   8 8888  8.`8888.   Y8 \",","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"Austintjh19"},"content":"        \"88 8888        `8b `8.`8888.      8 8888 8 8888     ,88   8 8888  `8.`8888.     \",","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"Austintjh19"},"content":"        \"88 8888         88  `8.`8888.     8 8888 8 8888.   ,88\u0027   8 8888   `8.`8888.    \",","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"Austintjh19"},"content":"        \"88 8888         88   `8.`8888.    8 8888 8 888888888P\u0027    8 8888    `8.`8888.   \",","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"Austintjh19"},"content":"        \"88 8888        ,8P    `8.`8888.   8 8888 8 8888`8b        8 8888     `8.`8888.  \",","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"Austintjh19"},"content":"        \"`8 8888       ,8P 8b   `8.`8888.  8 8888 8 8888 `8b.      8 8888 8b   `8.`8888. \",","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"Austintjh19"},"content":"        \" ` 8888     ,88\u0027  `8b.  ;8.`8888  8 8888 8 8888   `8b.    8 8888 `8b.  ;8.`8888 \",","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"Austintjh19"},"content":"        \"    `8888888P\u0027     `Y8888P ,88P\u0027  8 8888 8 8888     `88.  8 8888  `Y8888P ,88P\u0027 \"","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"Austintjh19"},"content":"    };","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"Austintjh19"},"content":"    /** Introduction message displayed to the user. */","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"Austintjh19"},"content":"    public static final String INTRODUCTIONS \u003d String.format(\"Hello! I\u0027m %s.\\nWhat can I do for you?\",","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"Austintjh19"},"content":"            UiOutputs.OSIRIS_NAME);","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"Austintjh19"},"content":"    /** Prompt message for the user to interact with Osiris. */","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"Austintjh19"},"content":"    public static final String MESSAGE_OSIRIS_PROMPT \u003d \"Message Osiris ... \";","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"Austintjh19"},"content":"    /** Goodbye message displayed to the user. */","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"Austintjh19"},"content":"    public static final String GOODBYES \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"Austintjh19"},"content":"    /** Message displayed for unsupported commands. */","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"Austintjh19"},"content":"    public static final String UNSUPPORTED_COMMAND_OUTPUT \u003d \"Sorry, but I am unable to comprehend the instruction \"","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"Austintjh19"},"content":"            + \"at my current development stage. Please enter something else.\";","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"Austintjh19"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"Austintjh19":41}},{"path":"src/main/java/osiris/validation/InputsValidator.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Austintjh19"},"content":"package osiris.validation;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Austintjh19"},"content":"import osiris.commands.AddDeadlineTaskCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Austintjh19"},"content":"import osiris.commands.AddEventTaskCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Austintjh19"},"content":"import osiris.commands.AddToDoTaskCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Austintjh19"},"content":"import osiris.formatters.DateTimeFormatters;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"Austintjh19"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Austintjh19"},"content":" * The InputsValidator class provides methods to validate user inputs for various commands.","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Austintjh19"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Austintjh19"},"content":"public class InputsValidator {","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"Austintjh19"},"content":"    /** Singleton instance variable */","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Austintjh19"},"content":"    private static InputsValidator instance;","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"Austintjh19"},"content":"    /** Return a new Input Validator instance **/","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Austintjh19"},"content":"    private InputsValidator() {}","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Austintjh19"},"content":"     * Retrieves the singleton instance of InputsValidator.","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"Austintjh19"},"content":"     * @return The singleton instance of InputsValidator.","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"Austintjh19"},"content":"    public static InputsValidator getInstance() {","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"Austintjh19"},"content":"        if (instance \u003d\u003d null) {","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"Austintjh19"},"content":"            instance \u003d new InputsValidator();","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"Austintjh19"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"Austintjh19"},"content":"        return instance;","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"Austintjh19"},"content":"     * Validates user input for marking a task as completed.","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"Austintjh19"},"content":"     * @param userInput The user input string.","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"Austintjh19"},"content":"     * @return True if the input is valid; otherwise, false.","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"Austintjh19"},"content":"    public boolean isMarkTaskCompleteInputValid(String userInput) {","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"Austintjh19"},"content":"        String[] inputtedWords \u003d userInput.split(\" \");","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"Austintjh19"},"content":"        if (inputtedWords.length \u003d\u003d 2) {","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"Austintjh19"},"content":"            String taskIndexString \u003d inputtedWords[1];","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"Austintjh19"},"content":"            if (taskIndexString.matches(\"\\\\d+\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"Austintjh19"},"content":"                return true;","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"Austintjh19"},"content":"            } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"Austintjh19"},"content":"                System.out.println(\"Invalid task index: \" + taskIndexString + \". Please enter a valid integer.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"Austintjh19"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"Austintjh19"},"content":"        } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"Austintjh19"},"content":"            System.out.println(\"Invalid task index. Please Reenter\");","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"Austintjh19"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"Austintjh19"},"content":"        return false;","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"Austintjh19"},"content":"     * Validates user input for marking a task as incomplete.","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"Austintjh19"},"content":"     * @param userInput The user input string.","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"Austintjh19"},"content":"     * @return True if the input is valid; otherwise, false.","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"Austintjh19"},"content":"    public boolean isMarkTaskIncompleteInputValid(String userInput) {","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"Austintjh19"},"content":"        String[] inputtedWords \u003d userInput.split(\" \");","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"Austintjh19"},"content":"        if (inputtedWords.length \u003d\u003d 2) {","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"Austintjh19"},"content":"            String taskIndexString \u003d inputtedWords[1];","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"Austintjh19"},"content":"            if (taskIndexString.matches(\"\\\\d+\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"Austintjh19"},"content":"                return true;","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"Austintjh19"},"content":"            } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"Austintjh19"},"content":"                System.out.println(\"Invalid task index: \" + taskIndexString + \". Please enter a valid integer.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"Austintjh19"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"Austintjh19"},"content":"        } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"Austintjh19"},"content":"            System.out.println(\"Invalid task index. Please Reenter\");","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"Austintjh19"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"Austintjh19"},"content":"        return false;","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":73,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"Austintjh19"},"content":"     * Validates user input for removing a task.","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"Austintjh19"},"content":"     * @param userInput The user input string.","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"Austintjh19"},"content":"     * @return True if the input is valid; otherwise, false.","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"Austintjh19"},"content":"    public boolean isDeleteTaskInputValid(String userInput) {","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"Austintjh19"},"content":"        String[] inputtedWords \u003d userInput.split(\" \");","lastModifiedDate":"2024-01-30"},{"lineNumber":81,"author":{"gitId":"Austintjh19"},"content":"        if (inputtedWords.length \u003d\u003d 2) {","lastModifiedDate":"2024-01-30"},{"lineNumber":82,"author":{"gitId":"Austintjh19"},"content":"            String taskIndexString \u003d inputtedWords[1];","lastModifiedDate":"2024-01-30"},{"lineNumber":83,"author":{"gitId":"Austintjh19"},"content":"            if (taskIndexString.matches(\"\\\\d+\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":84,"author":{"gitId":"Austintjh19"},"content":"                return true;","lastModifiedDate":"2024-01-30"},{"lineNumber":85,"author":{"gitId":"Austintjh19"},"content":"            } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":86,"author":{"gitId":"Austintjh19"},"content":"                System.out.println(\"Invalid task index: \" + taskIndexString + \". Please enter a valid integer.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":87,"author":{"gitId":"Austintjh19"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":88,"author":{"gitId":"Austintjh19"},"content":"        } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":89,"author":{"gitId":"Austintjh19"},"content":"            System.out.println(\"Invalid task index. Please Reenter\");","lastModifiedDate":"2024-01-30"},{"lineNumber":90,"author":{"gitId":"Austintjh19"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":91,"author":{"gitId":"Austintjh19"},"content":"        return false;","lastModifiedDate":"2024-01-30"},{"lineNumber":92,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":93,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":94,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":95,"author":{"gitId":"Austintjh19"},"content":"     * Validates user input for adding a to-do task.","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"Austintjh19"},"content":"     * @param userInput The user input string.","lastModifiedDate":"2024-01-31"},{"lineNumber":98,"author":{"gitId":"Austintjh19"},"content":"     * @return True if the input is valid; otherwise, false.","lastModifiedDate":"2024-01-31"},{"lineNumber":99,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"Austintjh19"},"content":"    public boolean isAddToDoTaskInputValid(String userInput) {","lastModifiedDate":"2024-02-03"},{"lineNumber":101,"author":{"gitId":"Austintjh19"},"content":"        String taskName \u003d userInput.substring(AddToDoTaskCommand.COMMAND.length()).trim();","lastModifiedDate":"2024-02-03"},{"lineNumber":102,"author":{"gitId":"Austintjh19"},"content":"        if (!taskName.isEmpty()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":103,"author":{"gitId":"Austintjh19"},"content":"            return true;","lastModifiedDate":"2024-01-30"},{"lineNumber":104,"author":{"gitId":"Austintjh19"},"content":"        } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":105,"author":{"gitId":"Austintjh19"},"content":"            System.out.println(\"Task name not provided. Please Reenter.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":106,"author":{"gitId":"Austintjh19"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":107,"author":{"gitId":"Austintjh19"},"content":"        return false;","lastModifiedDate":"2024-01-30"},{"lineNumber":108,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":109,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":110,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":111,"author":{"gitId":"Austintjh19"},"content":"     * Validates user input for adding a deadline task.","lastModifiedDate":"2024-01-31"},{"lineNumber":112,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":113,"author":{"gitId":"Austintjh19"},"content":"     * @param userInput The user input string.","lastModifiedDate":"2024-01-31"},{"lineNumber":114,"author":{"gitId":"Austintjh19"},"content":"     * @return True if the input is valid; otherwise, false.","lastModifiedDate":"2024-01-31"},{"lineNumber":115,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":116,"author":{"gitId":"Austintjh19"},"content":"    public boolean isAddDeadlineTaskInputValid(String userInput) {","lastModifiedDate":"2024-02-03"},{"lineNumber":117,"author":{"gitId":"Austintjh19"},"content":"        int byIndex \u003d userInput.indexOf(\"/by\");","lastModifiedDate":"2024-01-30"},{"lineNumber":118,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":119,"author":{"gitId":"Austintjh19"},"content":"        if (byIndex !\u003d -1) {","lastModifiedDate":"2024-01-30"},{"lineNumber":120,"author":{"gitId":"Austintjh19"},"content":"            String taskName \u003d userInput.substring(AddDeadlineTaskCommand.COMMAND.length(), byIndex - 1).trim();","lastModifiedDate":"2024-02-03"},{"lineNumber":121,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":122,"author":{"gitId":"Austintjh19"},"content":"            if (!taskName.isEmpty()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":123,"author":{"gitId":"Austintjh19"},"content":"                String deadline \u003d userInput.substring(byIndex + \"/by\".length()).trim();","lastModifiedDate":"2024-01-30"},{"lineNumber":124,"author":{"gitId":"Austintjh19"},"content":"                String[] deadlineParts \u003d deadline.split(\"-\");","lastModifiedDate":"2024-01-30"},{"lineNumber":125,"author":{"gitId":"Austintjh19"},"content":"                if (deadlineParts.length \u003d\u003d 3) {","lastModifiedDate":"2024-01-30"},{"lineNumber":126,"author":{"gitId":"Austintjh19"},"content":"                    String dayStr \u003d deadlineParts[0];","lastModifiedDate":"2024-01-30"},{"lineNumber":127,"author":{"gitId":"Austintjh19"},"content":"                    String monthStr \u003d deadlineParts[1];","lastModifiedDate":"2024-01-30"},{"lineNumber":128,"author":{"gitId":"Austintjh19"},"content":"                    String yearStr \u003d deadlineParts[2];","lastModifiedDate":"2024-01-30"},{"lineNumber":129,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":130,"author":{"gitId":"Austintjh19"},"content":"                    if (isValidDay(dayStr) \u0026\u0026 isValidMonth(monthStr) \u0026\u0026 isValidYear(yearStr)) {","lastModifiedDate":"2024-01-30"},{"lineNumber":131,"author":{"gitId":"Austintjh19"},"content":"                        return true;","lastModifiedDate":"2024-01-30"},{"lineNumber":132,"author":{"gitId":"Austintjh19"},"content":"                    } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":133,"author":{"gitId":"Austintjh19"},"content":"                        System.out.println(\"Invalid day, month, or year in deadline. Please use dd-MM-yyyy. \");","lastModifiedDate":"2024-01-30"},{"lineNumber":134,"author":{"gitId":"Austintjh19"},"content":"                    }","lastModifiedDate":"2024-01-30"},{"lineNumber":135,"author":{"gitId":"Austintjh19"},"content":"                } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":136,"author":{"gitId":"Austintjh19"},"content":"                    System.out.println(\"Invalid deadline format. Please use dd-MM-yyyy.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":137,"author":{"gitId":"Austintjh19"},"content":"                }","lastModifiedDate":"2024-01-30"},{"lineNumber":138,"author":{"gitId":"Austintjh19"},"content":"            } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":139,"author":{"gitId":"Austintjh19"},"content":"                System.out.println(\"Task name not provided. Please Reenter.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":140,"author":{"gitId":"Austintjh19"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":141,"author":{"gitId":"Austintjh19"},"content":"        } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":142,"author":{"gitId":"Austintjh19"},"content":"            System.out.println(\"Invalid input format. Please Reenter. Ensure \u0027/by\u0027 is specified for a Deadline Task. \"","lastModifiedDate":"2024-02-03"},{"lineNumber":143,"author":{"gitId":"Austintjh19"},"content":"                    + \"E.g. deadline Do Homework /by dd-MM-yyyy .\");","lastModifiedDate":"2024-02-03"},{"lineNumber":144,"author":{"gitId":"Austintjh19"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":145,"author":{"gitId":"Austintjh19"},"content":"        return false;","lastModifiedDate":"2024-01-30"},{"lineNumber":146,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":147,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":148,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":149,"author":{"gitId":"Austintjh19"},"content":"     * Validates user input for adding an event task.","lastModifiedDate":"2024-01-31"},{"lineNumber":150,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":151,"author":{"gitId":"Austintjh19"},"content":"     * @param userInput The user input string.","lastModifiedDate":"2024-01-31"},{"lineNumber":152,"author":{"gitId":"Austintjh19"},"content":"     * @return True if the input is valid; otherwise, false.","lastModifiedDate":"2024-01-31"},{"lineNumber":153,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":154,"author":{"gitId":"Austintjh19"},"content":"    public boolean isAddEventTaskInputValid(String userInput) {","lastModifiedDate":"2024-02-03"},{"lineNumber":155,"author":{"gitId":"Austintjh19"},"content":"        int fromIndex \u003d userInput.indexOf(\"/from\");","lastModifiedDate":"2024-01-30"},{"lineNumber":156,"author":{"gitId":"Austintjh19"},"content":"        int toIndex \u003d userInput.indexOf(\"/to\");","lastModifiedDate":"2024-01-30"},{"lineNumber":157,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":158,"author":{"gitId":"Austintjh19"},"content":"        if (fromIndex !\u003d -1 \u0026\u0026 toIndex !\u003d -1 \u0026\u0026 fromIndex \u003c toIndex) {","lastModifiedDate":"2024-01-30"},{"lineNumber":159,"author":{"gitId":"Austintjh19"},"content":"            String taskName \u003d userInput.substring(AddEventTaskCommand.COMMAND.length(), fromIndex - 1).trim();","lastModifiedDate":"2024-02-03"},{"lineNumber":160,"author":{"gitId":"Austintjh19"},"content":"            if (!taskName.isEmpty()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":161,"author":{"gitId":"Austintjh19"},"content":"                String startDateTime \u003d userInput.substring(fromIndex + \"/from\".length(), toIndex - 1).trim();","lastModifiedDate":"2024-01-30"},{"lineNumber":162,"author":{"gitId":"Austintjh19"},"content":"                String endDateTime \u003d userInput.substring(toIndex + \"/to\".length()).trim();","lastModifiedDate":"2024-01-30"},{"lineNumber":163,"author":{"gitId":"Austintjh19"},"content":"                if (isValidDateTime(startDateTime) \u0026\u0026 isValidDateTime(endDateTime)) {","lastModifiedDate":"2024-01-30"},{"lineNumber":164,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":165,"author":{"gitId":"Austintjh19"},"content":"                    if (DateTimeFormatters.getInstance().formatUserInputDateTime(startDateTime)","lastModifiedDate":"2024-02-03"},{"lineNumber":166,"author":{"gitId":"Austintjh19"},"content":"                            .isBefore((DateTimeFormatters.getInstance().formatUserInputDateTime(endDateTime)))) {","lastModifiedDate":"2024-02-03"},{"lineNumber":167,"author":{"gitId":"Austintjh19"},"content":"                        return true;","lastModifiedDate":"2024-01-30"},{"lineNumber":168,"author":{"gitId":"Austintjh19"},"content":"                    } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":169,"author":{"gitId":"Austintjh19"},"content":"                        System.out.println(\"Invalid date-time order. Start date/time should be before end date/time.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":170,"author":{"gitId":"Austintjh19"},"content":"                    }","lastModifiedDate":"2024-01-30"},{"lineNumber":171,"author":{"gitId":"Austintjh19"},"content":"                } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":172,"author":{"gitId":"Austintjh19"},"content":"                    System.out.println(\"Invalid date-time format. Please use dd-MM-yyyy HHmm.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":173,"author":{"gitId":"Austintjh19"},"content":"                }","lastModifiedDate":"2024-01-30"},{"lineNumber":174,"author":{"gitId":"Austintjh19"},"content":"            } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":175,"author":{"gitId":"Austintjh19"},"content":"                System.out.println(\"Task name not provided. Please Reenter.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":176,"author":{"gitId":"Austintjh19"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":177,"author":{"gitId":"Austintjh19"},"content":"        } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":178,"author":{"gitId":"Austintjh19"},"content":"            System.out.println(\"Invalid input format. Please Reenter. \"","lastModifiedDate":"2024-02-03"},{"lineNumber":179,"author":{"gitId":"Austintjh19"},"content":"                    + \"Ensure \u0027/from\u0027 \u0026 \u0027/to\u0027 is specified for a Event Task. \"","lastModifiedDate":"2024-02-03"},{"lineNumber":180,"author":{"gitId":"Austintjh19"},"content":"                    + \"E.g. event School Meeting /from dd-MM-yyyy HHmm /to dd-MM-yyyy HHmm. Please Reenter.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":181,"author":{"gitId":"Austintjh19"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":182,"author":{"gitId":"Austintjh19"},"content":"        return false;","lastModifiedDate":"2024-01-30"},{"lineNumber":183,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":184,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":185,"author":{"gitId":"Austintjh19"},"content":"    // Private helper methods for validation \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-01-31"},{"lineNumber":186,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":187,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":188,"author":{"gitId":"Austintjh19"},"content":"     * Validates if the given day string is a valid day of the month.","lastModifiedDate":"2024-02-03"},{"lineNumber":189,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":190,"author":{"gitId":"Austintjh19"},"content":"     * @param dayStr The string representation of the day.","lastModifiedDate":"2024-02-03"},{"lineNumber":191,"author":{"gitId":"Austintjh19"},"content":"     * @return true if the day is valid, otherwise false.","lastModifiedDate":"2024-02-03"},{"lineNumber":192,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":193,"author":{"gitId":"Austintjh19"},"content":"    private boolean isValidDay(String dayStr) {","lastModifiedDate":"2024-01-30"},{"lineNumber":194,"author":{"gitId":"Austintjh19"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":195,"author":{"gitId":"Austintjh19"},"content":"            int day \u003d Integer.parseInt(dayStr);","lastModifiedDate":"2024-01-30"},{"lineNumber":196,"author":{"gitId":"Austintjh19"},"content":"            return day \u003e\u003d 1 \u0026\u0026 day \u003c\u003d 31 \u0026\u0026 dayStr.length() \u003d\u003d 2;","lastModifiedDate":"2024-01-30"},{"lineNumber":197,"author":{"gitId":"Austintjh19"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":198,"author":{"gitId":"Austintjh19"},"content":"            return false;","lastModifiedDate":"2024-01-30"},{"lineNumber":199,"author":{"gitId":"Austintjh19"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":200,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":201,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":202,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":203,"author":{"gitId":"Austintjh19"},"content":"     * Validates if the given month string is a valid month of the year.","lastModifiedDate":"2024-02-03"},{"lineNumber":204,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":205,"author":{"gitId":"Austintjh19"},"content":"     * @param monthStr The string representation of the month.","lastModifiedDate":"2024-02-03"},{"lineNumber":206,"author":{"gitId":"Austintjh19"},"content":"     * @return true if the month is valid, otherwise false.","lastModifiedDate":"2024-02-03"},{"lineNumber":207,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":208,"author":{"gitId":"Austintjh19"},"content":"    private boolean isValidMonth(String monthStr) {","lastModifiedDate":"2024-01-30"},{"lineNumber":209,"author":{"gitId":"Austintjh19"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":210,"author":{"gitId":"Austintjh19"},"content":"            int month \u003d Integer.parseInt(monthStr);","lastModifiedDate":"2024-01-30"},{"lineNumber":211,"author":{"gitId":"Austintjh19"},"content":"            return month \u003e\u003d 1 \u0026\u0026 month \u003c\u003d 12 \u0026\u0026 monthStr.length() \u003d\u003d 2;","lastModifiedDate":"2024-01-30"},{"lineNumber":212,"author":{"gitId":"Austintjh19"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":213,"author":{"gitId":"Austintjh19"},"content":"            return false;","lastModifiedDate":"2024-01-30"},{"lineNumber":214,"author":{"gitId":"Austintjh19"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":215,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":216,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":217,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":218,"author":{"gitId":"Austintjh19"},"content":"     * Validates if the given year string is a valid year.","lastModifiedDate":"2024-02-03"},{"lineNumber":219,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":220,"author":{"gitId":"Austintjh19"},"content":"     * @param yearStr The string representation of the year.","lastModifiedDate":"2024-02-03"},{"lineNumber":221,"author":{"gitId":"Austintjh19"},"content":"     * @return true if the year is valid, otherwise false.","lastModifiedDate":"2024-02-03"},{"lineNumber":222,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":223,"author":{"gitId":"Austintjh19"},"content":"    private boolean isValidYear(String yearStr) {","lastModifiedDate":"2024-01-30"},{"lineNumber":224,"author":{"gitId":"Austintjh19"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":225,"author":{"gitId":"Austintjh19"},"content":"            int year \u003d Integer.parseInt(yearStr);","lastModifiedDate":"2024-01-30"},{"lineNumber":226,"author":{"gitId":"Austintjh19"},"content":"            return year \u003e 0 \u0026\u0026 yearStr.length() \u003d\u003d 4;","lastModifiedDate":"2024-01-30"},{"lineNumber":227,"author":{"gitId":"Austintjh19"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":228,"author":{"gitId":"Austintjh19"},"content":"            return false;","lastModifiedDate":"2024-01-30"},{"lineNumber":229,"author":{"gitId":"Austintjh19"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":230,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":231,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":232,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":233,"author":{"gitId":"Austintjh19"},"content":"     * Validates if the given date-time string is in a valid format and represents a valid date and time.","lastModifiedDate":"2024-02-03"},{"lineNumber":234,"author":{"gitId":"Austintjh19"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":235,"author":{"gitId":"Austintjh19"},"content":"     * @param dateTime The string representation of the date and time.","lastModifiedDate":"2024-02-03"},{"lineNumber":236,"author":{"gitId":"Austintjh19"},"content":"     * @return true if the date-time is valid, otherwise false.","lastModifiedDate":"2024-02-03"},{"lineNumber":237,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":238,"author":{"gitId":"Austintjh19"},"content":"    private boolean isValidDateTime(String dateTime) {","lastModifiedDate":"2024-01-30"},{"lineNumber":239,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":240,"author":{"gitId":"Austintjh19"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":241,"author":{"gitId":"Austintjh19"},"content":"            String[] dateTimeParts \u003d dateTime.split(\" \");","lastModifiedDate":"2024-01-30"},{"lineNumber":242,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":243,"author":{"gitId":"Austintjh19"},"content":"            if (dateTimeParts.length !\u003d 2) {","lastModifiedDate":"2024-01-30"},{"lineNumber":244,"author":{"gitId":"Austintjh19"},"content":"                return false;","lastModifiedDate":"2024-01-30"},{"lineNumber":245,"author":{"gitId":"Austintjh19"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":246,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":247,"author":{"gitId":"Austintjh19"},"content":"            String[] dateParts \u003d dateTimeParts[0].split(\"-\");","lastModifiedDate":"2024-01-30"},{"lineNumber":248,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":249,"author":{"gitId":"Austintjh19"},"content":"            if (dateParts.length !\u003d 3) {","lastModifiedDate":"2024-01-30"},{"lineNumber":250,"author":{"gitId":"Austintjh19"},"content":"                return false;","lastModifiedDate":"2024-01-30"},{"lineNumber":251,"author":{"gitId":"Austintjh19"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":252,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":253,"author":{"gitId":"Austintjh19"},"content":"            int hour \u003d Integer.parseInt(dateTimeParts[1].substring(0, 2));","lastModifiedDate":"2024-01-30"},{"lineNumber":254,"author":{"gitId":"Austintjh19"},"content":"            int minute \u003d Integer.parseInt(dateTimeParts[1].substring(2));","lastModifiedDate":"2024-01-30"},{"lineNumber":255,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":256,"author":{"gitId":"Austintjh19"},"content":"            return isValidDay(dateParts[0]) \u0026\u0026 isValidMonth(dateParts[1]) \u0026\u0026 isValidYear(dateParts[2])","lastModifiedDate":"2024-01-31"},{"lineNumber":257,"author":{"gitId":"Austintjh19"},"content":"                    \u0026\u0026 hour \u003e\u003d 0 \u0026\u0026 hour \u003c\u003d 23 \u0026\u0026 minute \u003e\u003d 0 \u0026\u0026 minute \u003c\u003d 59 \u0026\u0026 dateTimeParts[1].length() \u003d\u003d 4;","lastModifiedDate":"2024-01-31"},{"lineNumber":258,"author":{"gitId":"Austintjh19"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":259,"author":{"gitId":"Austintjh19"},"content":"            return false;","lastModifiedDate":"2024-01-30"},{"lineNumber":260,"author":{"gitId":"Austintjh19"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":261,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":262,"author":{"gitId":"Austintjh19"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"Austintjh19":262}},{"path":"src/test/java/osiris/formatters/DateTimeFormattersTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Austintjh19"},"content":"package osiris.formatters;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Austintjh19"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Austintjh19"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Austintjh19"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Austintjh19"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Austintjh19"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Austintjh19"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Austintjh19"},"content":" * Unit tests for the DateTimeFormatters class.","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Austintjh19"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"Austintjh19"},"content":"public class DateTimeFormattersTest {","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"Austintjh19"},"content":"     * Test for the userInputDateFormatter method.","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Austintjh19"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Austintjh19"},"content":"    public void userInputDateFormatterTest() {","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"Austintjh19"},"content":"        // Testing valid input","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"Austintjh19"},"content":"        LocalDate date \u003d DateTimeFormatters.getInstance().formatUserInputDate(\"01-01-2024\");","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"Austintjh19"},"content":"        assertNotNull(date);","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"Austintjh19"},"content":"        // Testing invalid input","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"Austintjh19"},"content":"        date \u003d DateTimeFormatters.getInstance().formatUserInputDate(\"invalid\");","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"Austintjh19"},"content":"        assertNull(date);","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"Austintjh19"},"content":"     * Test for the userInputDateTimeFormatter method.","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"Austintjh19"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"Austintjh19"},"content":"    public void userInputDateTimeFormatterTest() {","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"Austintjh19"},"content":"        // Testing valid input","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"Austintjh19"},"content":"        LocalDateTime dateTime \u003d DateTimeFormatters.getInstance().formatUserInputDateTime(\"01-01-2024 2359\");","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"Austintjh19"},"content":"        assertNotNull(dateTime);","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"Austintjh19"},"content":"        // Testing invalid input","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"Austintjh19"},"content":"        dateTime \u003d DateTimeFormatters.getInstance().formatUserInputDateTime(\"invalid\");","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"Austintjh19"},"content":"        assertNull(dateTime);","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"Austintjh19"},"content":"     * Test for the userInputDateTimeRangeFormatter method.","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"Austintjh19"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"Austintjh19"},"content":"    public void userInputDateTimeRangeFormatterTest() {","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"Austintjh19"},"content":"        // Testing valid input","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"Austintjh19"},"content":"        LocalDateTime[] dateTime \u003d DateTimeFormatters.getInstance()","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"Austintjh19"},"content":"                .formateUserInputDateTimeRange(\"01-01-2024 0000\", \"01-01-2024 2359\");","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"Austintjh19"},"content":"        assertNotNull(dateTime);","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"Austintjh19"},"content":"        // Testing invalid input","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"Austintjh19"},"content":"        dateTime \u003d DateTimeFormatters.getInstance().formateUserInputDateTimeRange(\"invalid\", \"invalid\");","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"Austintjh19"},"content":"        assertNull(dateTime);","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"Austintjh19"},"content":"     * Test for the storedDataDateFormatter method.","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"Austintjh19"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"Austintjh19"},"content":"    public void storedDataDateFormatterTest() {","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"Austintjh19"},"content":"        // Testing valid input","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"Austintjh19"},"content":"        LocalDate date \u003d DateTimeFormatters.getInstance().formatStoredDate(\"Jan 01 2024\");","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"Austintjh19"},"content":"        assertNotNull(date);","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"Austintjh19"},"content":"        // Testing invalid input","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"Austintjh19"},"content":"        date \u003d DateTimeFormatters.getInstance().formatStoredDate(\"invalid\");","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"Austintjh19"},"content":"        assertNull(date);","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"Austintjh19"},"content":"     * Test for the storedDataDateTimeFormatter method.","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"Austintjh19"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"Austintjh19"},"content":"    public void storedDataDateTimeFormatterTest() {","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"Austintjh19"},"content":"        // Testing valid input","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"Austintjh19"},"content":"        LocalDateTime dateTime \u003d DateTimeFormatters.getInstance().formatStoredDateTime(\"Jan 01 2024 8:00 AM\");","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"Austintjh19"},"content":"        assertNotNull(dateTime);","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"Austintjh19"},"content":"        // Testing invalid input","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"Austintjh19"},"content":"        dateTime \u003d DateTimeFormatters.getInstance().formatStoredDateTime(\"invalid\");","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"Austintjh19"},"content":"        assertNull(dateTime);","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"Austintjh19"},"content":"     * Test for the storedDateDateTimeRangeFormatter method.","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"Austintjh19"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":91,"author":{"gitId":"Austintjh19"},"content":"    public void storedDateDateTimeRangeFormatterTest() {","lastModifiedDate":"2024-01-31"},{"lineNumber":92,"author":{"gitId":"Austintjh19"},"content":"        // Testing valid input","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"Austintjh19"},"content":"        LocalDateTime[] dateTime \u003d DateTimeFormatters.getInstance()","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"Austintjh19"},"content":"                .formatStoredDateTimeRange(\"Jan 01 2024 8:00 AM\", \"Jan 01 2024 10:00 AM\");","lastModifiedDate":"2024-02-03"},{"lineNumber":95,"author":{"gitId":"Austintjh19"},"content":"        assertNotNull(dateTime);","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"Austintjh19"},"content":"        // Testing invalid input","lastModifiedDate":"2024-01-31"},{"lineNumber":98,"author":{"gitId":"Austintjh19"},"content":"        dateTime \u003d DateTimeFormatters.getInstance().formatStoredDateTimeRange(\"invalid\", \"invalid\");","lastModifiedDate":"2024-02-03"},{"lineNumber":99,"author":{"gitId":"Austintjh19"},"content":"        assertNull(dateTime);","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":101,"author":{"gitId":"Austintjh19"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Austintjh19":101}},{"path":"src/test/java/osiris/interpreters/UserInputInterpreterTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Austintjh19"},"content":"package osiris.interpreters;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Austintjh19"},"content":"import static org.junit.jupiter.api.Assertions.assertInstanceOf;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Austintjh19"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"Austintjh19"},"content":"import osiris.commands.Command;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Austintjh19"},"content":"import osiris.commands.NoCommand;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Austintjh19"},"content":"import osiris.commands.UnsupportedCommand;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Austintjh19"},"content":"import osiris.commands.AddDeadlineTaskCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Austintjh19"},"content":"import osiris.commands.AddEventTaskCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Austintjh19"},"content":"import osiris.commands.AddToDoTaskCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Austintjh19"},"content":"import osiris.commands.MarkTaskCompleteCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Austintjh19"},"content":"import osiris.commands.MarkTaskIncompleteCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"Austintjh19"},"content":"import osiris.commands.PrintUserTasksCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Austintjh19"},"content":"import osiris.commands.RemoveTaskCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Austintjh19"},"content":"import osiris.commands.TerminateChatCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Austintjh19"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Austintjh19"},"content":" * Unit tests for the UserInputInterpreter class.","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"Austintjh19"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"Austintjh19"},"content":"public class UserInputInterpreterTest {","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"Austintjh19"},"content":"     * Test for interpreting the \"bye\" command.","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"Austintjh19"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"Austintjh19"},"content":"    public void terminateChatCommandTest() {","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"Austintjh19"},"content":"        Command command \u003d UserInputInterpreter.getInstance().interpretUserInput(\"bye\");","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"Austintjh19"},"content":"        assertInstanceOf(TerminateChatCommand.class, command);","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"Austintjh19"},"content":"     * Test for interpreting the \"list\" command.","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"Austintjh19"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"Austintjh19"},"content":"    public void printUserTasksCommandTest() {","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"Austintjh19"},"content":"        Command command \u003d UserInputInterpreter.getInstance().interpretUserInput(\"list\");","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"Austintjh19"},"content":"        assertInstanceOf(PrintUserTasksCommand.class, command);","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"Austintjh19"},"content":"     * Test for interpreting the \"mark\" command.","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"Austintjh19"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"Austintjh19"},"content":"    public void markTaskCompletedCommandTest() {","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"Austintjh19"},"content":"        Command command \u003d UserInputInterpreter.getInstance().interpretUserInput(\"mark 1\");","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"Austintjh19"},"content":"        assertInstanceOf(MarkTaskCompleteCommand.class, command);","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"Austintjh19"},"content":"     * Test for interpreting the \"unmark\" command.","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"Austintjh19"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"Austintjh19"},"content":"    public void markTaskIncompleteCommandTest() {","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"Austintjh19"},"content":"        Command command \u003d UserInputInterpreter.getInstance().interpretUserInput(\"unmark 1\");","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"Austintjh19"},"content":"        assertInstanceOf(MarkTaskIncompleteCommand.class, command);","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"Austintjh19"},"content":"     * Test for interpreting the \"delete\" command.","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"Austintjh19"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"Austintjh19"},"content":"    public void removeTaskCommandTest() {","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"Austintjh19"},"content":"        Command command \u003d UserInputInterpreter.getInstance().interpretUserInput(\"delete 1\");","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"Austintjh19"},"content":"        assertInstanceOf(RemoveTaskCommand.class, command);","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"Austintjh19"},"content":"     * Test for interpreting the \"todo\" command.","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"Austintjh19"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"Austintjh19"},"content":"    public void addToDoTaskCommandTest() {","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"Austintjh19"},"content":"        Command command \u003d UserInputInterpreter.getInstance().interpretUserInput(\"todo Test\");","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"Austintjh19"},"content":"        assertInstanceOf(AddToDoTaskCommand.class, command);","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"Austintjh19"},"content":"     * Test for interpreting the \"deadline\" command.","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"Austintjh19"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"Austintjh19"},"content":"    public void addDeadlineTaskCommandTest() {","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"Austintjh19"},"content":"        Command command \u003d UserInputInterpreter.getInstance().interpretUserInput(\"deadline Test /by 01-01-2024\");","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"Austintjh19"},"content":"        assertInstanceOf(AddDeadlineTaskCommand.class, command);","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"Austintjh19"},"content":"     * Test for interpreting the \"event\" command.","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"Austintjh19"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":91,"author":{"gitId":"Austintjh19"},"content":"    public void addEventTaskCommandTest() {","lastModifiedDate":"2024-01-31"},{"lineNumber":92,"author":{"gitId":"Austintjh19"},"content":"        Command command \u003d UserInputInterpreter.getInstance()","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"Austintjh19"},"content":"                .interpretUserInput(\"event Test /from 01-01-2024 0000 /to 01-01-2024 2359\");","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"Austintjh19"},"content":"        assertInstanceOf(AddEventTaskCommand.class, command);","lastModifiedDate":"2024-02-03"},{"lineNumber":95,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":98,"author":{"gitId":"Austintjh19"},"content":"     * Test for interpreting unsupported commands.","lastModifiedDate":"2024-01-31"},{"lineNumber":99,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"Austintjh19"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":101,"author":{"gitId":"Austintjh19"},"content":"    public void unsupportedCommandTest() {","lastModifiedDate":"2024-01-31"},{"lineNumber":102,"author":{"gitId":"Austintjh19"},"content":"        Command command \u003d UserInputInterpreter.getInstance().interpretUserInput(\"Invalid.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":103,"author":{"gitId":"Austintjh19"},"content":"        assertInstanceOf(UnsupportedCommand.class, command);","lastModifiedDate":"2024-01-31"},{"lineNumber":104,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":105,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":106,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":107,"author":{"gitId":"Austintjh19"},"content":"     * Test for interpreting commands with no specific action.","lastModifiedDate":"2024-01-31"},{"lineNumber":108,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":109,"author":{"gitId":"Austintjh19"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":110,"author":{"gitId":"Austintjh19"},"content":"    public void noCommandTest() {","lastModifiedDate":"2024-01-31"},{"lineNumber":111,"author":{"gitId":"Austintjh19"},"content":"        Command command \u003d UserInputInterpreter.getInstance().interpretUserInput(\"todo\");","lastModifiedDate":"2024-01-31"},{"lineNumber":112,"author":{"gitId":"Austintjh19"},"content":"        assertInstanceOf(NoCommand.class, command);","lastModifiedDate":"2024-01-31"},{"lineNumber":113,"author":{"gitId":"Austintjh19"},"content":"        command \u003d UserInputInterpreter.getInstance().interpretUserInput(\"deadline\");","lastModifiedDate":"2024-01-31"},{"lineNumber":114,"author":{"gitId":"Austintjh19"},"content":"        assertInstanceOf(NoCommand.class, command);","lastModifiedDate":"2024-01-31"},{"lineNumber":115,"author":{"gitId":"Austintjh19"},"content":"        command \u003d UserInputInterpreter.getInstance().interpretUserInput(\"event\");","lastModifiedDate":"2024-01-31"},{"lineNumber":116,"author":{"gitId":"Austintjh19"},"content":"        assertInstanceOf(NoCommand.class, command);","lastModifiedDate":"2024-01-31"},{"lineNumber":117,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":118,"author":{"gitId":"Austintjh19"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"Austintjh19":118}},{"path":"src/test/java/osiris/storage/StorageTxtFileTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Austintjh19"},"content":"package osiris.storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Austintjh19"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Austintjh19"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Austintjh19"},"content":"import java.io.File;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Austintjh19"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Austintjh19"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Austintjh19"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Austintjh19"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Austintjh19"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Austintjh19"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"Austintjh19"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Austintjh19"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"Austintjh19"},"content":" * Unit tests for TxtFileStorage class.","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Austintjh19"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Austintjh19"},"content":"public class StorageTxtFileTest {","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"Austintjh19"},"content":"     * Test for checking if the storage file exists.","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"Austintjh19"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"Austintjh19"},"content":"    public void storageFileExistTest() {","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"Austintjh19"},"content":"        StorageTxtFile storage \u003d new StorageTxtFile(\"Test.txt\");","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"Austintjh19"},"content":"        storage.initialiseStorageTxtFile();","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"Austintjh19"},"content":"        assertTrue(storage.doesStorageFileExist());","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"Austintjh19"},"content":"        File testFile \u003d new File(\"Test.txt\");","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"Austintjh19"},"content":"        testFile.delete();","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"Austintjh19"},"content":"        assertFalse(storage.doesStorageFileExist());","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"Austintjh19"},"content":"     * Test for initializing the text file storage.","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"Austintjh19"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"Austintjh19"},"content":"    public void initialiseTxtFileStorageTest() {","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"Austintjh19"},"content":"        StorageTxtFile storage \u003d new StorageTxtFile(\"Test.txt\");","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"Austintjh19"},"content":"        storage.initialiseStorageTxtFile();","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"Austintjh19"},"content":"        File testFile \u003d new File(\"Test.txt\");","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"Austintjh19"},"content":"        assertTrue(testFile.exists());","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"Austintjh19"},"content":"        testFile.delete();","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"Austintjh19"},"content":"     * Test for reading content from the text file storage.","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"Austintjh19"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"Austintjh19"},"content":"    public void readTxtFileStorageTest() {","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"Austintjh19"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"Austintjh19"},"content":"            File testFile \u003d new File(\"Test.txt\");","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"Austintjh19"},"content":"            FileWriter fw \u003d new FileWriter(\"Test.txt\", true);","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"Austintjh19"},"content":"            ArrayList\u003cString\u003e testInputs \u003d new ArrayList\u003c\u003e(Arrays.asList(\"ABC\", \"123\"));","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"Austintjh19"},"content":"            for (String testStr: testInputs) {","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"Austintjh19"},"content":"                fw.write(testStr + \"\\n\");","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"Austintjh19"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"Austintjh19"},"content":"            fw.close();","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"Austintjh19"},"content":"            StorageTxtFile storage \u003d new StorageTxtFile(\"Test.txt\");","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"Austintjh19"},"content":"            ArrayList\u003cString\u003e readContents \u003d storage.readStorageTxtFile();","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"Austintjh19"},"content":"            boolean valid \u003d true;","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"Austintjh19"},"content":"            int i \u003d 0;","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"Austintjh19"},"content":"            if (testInputs.size() !\u003d readContents.size()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"Austintjh19"},"content":"                valid \u003d false;","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"Austintjh19"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"Austintjh19"},"content":"            while (valid \u0026\u0026 i \u003c testInputs.size()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"Austintjh19"},"content":"                if (!testInputs.get(i).equals(readContents.get(i))) {","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"Austintjh19"},"content":"                    valid \u003d false;","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"Austintjh19"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"Austintjh19"},"content":"                i \u003d i + 1;","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"Austintjh19"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"Austintjh19"},"content":"            assertTrue(valid);","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"Austintjh19"},"content":"            testFile.delete();","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"Austintjh19"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"Austintjh19"},"content":"            System.err.println(e);","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"Austintjh19"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"Austintjh19"},"content":"     * Test for appending content to the text file storage.","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"Austintjh19"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"Austintjh19"},"content":"    public void appendToTxtFileStorageTest() {","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"Austintjh19"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"Austintjh19"},"content":"            File testFile \u003d new File(\"Test.txt\");","lastModifiedDate":"2024-01-31"},{"lineNumber":91,"author":{"gitId":"Austintjh19"},"content":"            ArrayList\u003cString\u003e testInputs \u003d new ArrayList\u003c\u003e(Arrays.asList(\"ABC\", \"123\"));","lastModifiedDate":"2024-01-31"},{"lineNumber":92,"author":{"gitId":"Austintjh19"},"content":"            StorageTxtFile storage \u003d new StorageTxtFile(\"Test.txt\");","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"Austintjh19"},"content":"            for (String testInput: testInputs) {","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"Austintjh19"},"content":"                storage.appendToStorageTxtFile(testInput);","lastModifiedDate":"2024-02-03"},{"lineNumber":95,"author":{"gitId":"Austintjh19"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"Austintjh19"},"content":"            ArrayList\u003cString\u003e readContents \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":98,"author":{"gitId":"Austintjh19"},"content":"            Scanner scanner \u003d new Scanner(testFile);","lastModifiedDate":"2024-01-31"},{"lineNumber":99,"author":{"gitId":"Austintjh19"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"Austintjh19"},"content":"                readContents.add(scanner.nextLine());","lastModifiedDate":"2024-01-31"},{"lineNumber":101,"author":{"gitId":"Austintjh19"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":102,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":103,"author":{"gitId":"Austintjh19"},"content":"            boolean valid \u003d true;","lastModifiedDate":"2024-01-31"},{"lineNumber":104,"author":{"gitId":"Austintjh19"},"content":"            int i \u003d 0;","lastModifiedDate":"2024-01-31"},{"lineNumber":105,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":106,"author":{"gitId":"Austintjh19"},"content":"            if (testInputs.size() !\u003d readContents.size()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":107,"author":{"gitId":"Austintjh19"},"content":"                valid \u003d false;","lastModifiedDate":"2024-01-31"},{"lineNumber":108,"author":{"gitId":"Austintjh19"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":109,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":110,"author":{"gitId":"Austintjh19"},"content":"            while (valid \u0026\u0026 i \u003c testInputs.size()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":111,"author":{"gitId":"Austintjh19"},"content":"                if (!testInputs.get(i).equals(readContents.get(i))) {","lastModifiedDate":"2024-01-31"},{"lineNumber":112,"author":{"gitId":"Austintjh19"},"content":"                    valid \u003d false;","lastModifiedDate":"2024-01-31"},{"lineNumber":113,"author":{"gitId":"Austintjh19"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":114,"author":{"gitId":"Austintjh19"},"content":"                i \u003d i + 1;","lastModifiedDate":"2024-01-31"},{"lineNumber":115,"author":{"gitId":"Austintjh19"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":116,"author":{"gitId":"Austintjh19"},"content":"            assertTrue(valid);","lastModifiedDate":"2024-01-31"},{"lineNumber":117,"author":{"gitId":"Austintjh19"},"content":"            testFile.delete();","lastModifiedDate":"2024-01-31"},{"lineNumber":118,"author":{"gitId":"Austintjh19"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":119,"author":{"gitId":"Austintjh19"},"content":"            System.err.println(e);","lastModifiedDate":"2024-01-31"},{"lineNumber":120,"author":{"gitId":"Austintjh19"},"content":"            File testFile \u003d new File(\"Test.txt\");","lastModifiedDate":"2024-01-31"},{"lineNumber":121,"author":{"gitId":"Austintjh19"},"content":"            testFile.delete();","lastModifiedDate":"2024-01-31"},{"lineNumber":122,"author":{"gitId":"Austintjh19"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":123,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":124,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":125,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":126,"author":{"gitId":"Austintjh19"},"content":"     * Test for clearing content from the text file storage.","lastModifiedDate":"2024-01-31"},{"lineNumber":127,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":128,"author":{"gitId":"Austintjh19"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":129,"author":{"gitId":"Austintjh19"},"content":"    public void clearTxtFileStorage() {","lastModifiedDate":"2024-01-31"},{"lineNumber":130,"author":{"gitId":"Austintjh19"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":131,"author":{"gitId":"Austintjh19"},"content":"            File testFile \u003d new File(\"Test.txt\");","lastModifiedDate":"2024-01-31"},{"lineNumber":132,"author":{"gitId":"Austintjh19"},"content":"            StorageTxtFile storage \u003d new StorageTxtFile(\"Test.txt\");","lastModifiedDate":"2024-02-03"},{"lineNumber":133,"author":{"gitId":"Austintjh19"},"content":"            FileWriter fw \u003d new FileWriter(\"Test.txt\", true);","lastModifiedDate":"2024-01-31"},{"lineNumber":134,"author":{"gitId":"Austintjh19"},"content":"            ArrayList\u003cString\u003e testInputs \u003d new ArrayList\u003c\u003e(Arrays.asList(\"ABC\", \"123\"));","lastModifiedDate":"2024-01-31"},{"lineNumber":135,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":136,"author":{"gitId":"Austintjh19"},"content":"            for (String testStr: testInputs) {","lastModifiedDate":"2024-01-31"},{"lineNumber":137,"author":{"gitId":"Austintjh19"},"content":"                fw.write(testStr + \"\\n\");","lastModifiedDate":"2024-01-31"},{"lineNumber":138,"author":{"gitId":"Austintjh19"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":139,"author":{"gitId":"Austintjh19"},"content":"            fw.close();","lastModifiedDate":"2024-01-31"},{"lineNumber":140,"author":{"gitId":"Austintjh19"},"content":"            storage.clearStorageTxtFile();","lastModifiedDate":"2024-02-03"},{"lineNumber":141,"author":{"gitId":"Austintjh19"},"content":"            int i \u003d 0;","lastModifiedDate":"2024-01-31"},{"lineNumber":142,"author":{"gitId":"Austintjh19"},"content":"            Scanner scanner \u003d new Scanner(testFile);","lastModifiedDate":"2024-01-31"},{"lineNumber":143,"author":{"gitId":"Austintjh19"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":144,"author":{"gitId":"Austintjh19"},"content":"                i \u003d i + 1;","lastModifiedDate":"2024-01-31"},{"lineNumber":145,"author":{"gitId":"Austintjh19"},"content":"                scanner.nextLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":146,"author":{"gitId":"Austintjh19"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":147,"author":{"gitId":"Austintjh19"},"content":"            assert (i \u003d\u003d 0);","lastModifiedDate":"2024-01-31"},{"lineNumber":148,"author":{"gitId":"Austintjh19"},"content":"            testFile.delete();","lastModifiedDate":"2024-01-31"},{"lineNumber":149,"author":{"gitId":"Austintjh19"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":150,"author":{"gitId":"Austintjh19"},"content":"            System.err.println(e);","lastModifiedDate":"2024-01-31"},{"lineNumber":151,"author":{"gitId":"Austintjh19"},"content":"            File testFile \u003d new File(\"Test.txt\");","lastModifiedDate":"2024-01-31"},{"lineNumber":152,"author":{"gitId":"Austintjh19"},"content":"            testFile.delete();","lastModifiedDate":"2024-01-31"},{"lineNumber":153,"author":{"gitId":"Austintjh19"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":154,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":155,"author":{"gitId":"Austintjh19"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Austintjh19":155}},{"path":"src/test/java/osiris/validation/InputsValidatorTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Austintjh19"},"content":"package osiris.validation;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Austintjh19"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Austintjh19"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Austintjh19"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Austintjh19"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Austintjh19"},"content":" * Unit tests for InputsValidator class.","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Austintjh19"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Austintjh19"},"content":"public class InputsValidatorTest {","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"Austintjh19"},"content":"     * Test for validating mark task completed input.","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Austintjh19"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"Austintjh19"},"content":"    public void validateMarkTaskCompletedInputTest() {","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Austintjh19"},"content":"        // Tests for valid input","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Austintjh19"},"content":"        assertTrue(InputsValidator.getInstance().isMarkTaskCompleteInputValid(\"mark 1\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"Austintjh19"},"content":"        // Tests for invalid inputs","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"Austintjh19"},"content":"        assertFalse(InputsValidator.getInstance().isMarkTaskCompleteInputValid(\"mark \"));","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"Austintjh19"},"content":"        assertFalse(InputsValidator.getInstance().isMarkTaskCompleteInputValid(\"mark 1.5\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"Austintjh19"},"content":"        assertFalse(InputsValidator.getInstance().isMarkTaskCompleteInputValid(\"mark a\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"Austintjh19"},"content":"     * Test for validating mark task incomplete input.","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"Austintjh19"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"Austintjh19"},"content":"    public void validateMarkTaskIncompleteInputTest() {","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"Austintjh19"},"content":"        // Tests for valid input","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"Austintjh19"},"content":"        assertTrue(InputsValidator.getInstance().isMarkTaskIncompleteInputValid(\"unmark 1\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"Austintjh19"},"content":"        // Tests for invalid inputs","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"Austintjh19"},"content":"        assertFalse(InputsValidator.getInstance().isMarkTaskIncompleteInputValid(\"unmark \"));","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"Austintjh19"},"content":"        assertFalse(InputsValidator.getInstance().isMarkTaskIncompleteInputValid(\"unmark 1.5\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"Austintjh19"},"content":"        assertFalse(InputsValidator.getInstance().isMarkTaskIncompleteInputValid(\"unmark a\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"Austintjh19"},"content":"     * Test for validating remove task input.","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"Austintjh19"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"Austintjh19"},"content":"    public void validateRemoveTaskInputTest() {","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"Austintjh19"},"content":"        // Tests for valid input","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"Austintjh19"},"content":"        assertTrue(InputsValidator.getInstance().isDeleteTaskInputValid(\"delete 1\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"Austintjh19"},"content":"        // Tests for invalid inputs","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"Austintjh19"},"content":"        assertFalse(InputsValidator.getInstance().isDeleteTaskInputValid(\"delete \"));","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"Austintjh19"},"content":"        assertFalse(InputsValidator.getInstance().isDeleteTaskInputValid(\"delete 1.5\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"Austintjh19"},"content":"        assertFalse(InputsValidator.getInstance().isDeleteTaskInputValid(\"delete a\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"Austintjh19"},"content":"     * Test for validating add to-do task input.","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"Austintjh19"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"Austintjh19"},"content":"    public void validateAddToDoTaskInputTest() {","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"Austintjh19"},"content":"        // Tests for valid input","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"Austintjh19"},"content":"        assertTrue(InputsValidator.getInstance().isAddToDoTaskInputValid(\"todo 1\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"Austintjh19"},"content":"        assertTrue(InputsValidator.getInstance().isAddToDoTaskInputValid(\"todo Task 1\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"Austintjh19"},"content":"        assertTrue(InputsValidator.getInstance().isAddToDoTaskInputValid(\"todo Valid Task 1\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"Austintjh19"},"content":"        // Tests for invalid inputs","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"Austintjh19"},"content":"        assertFalse(InputsValidator.getInstance().isAddToDoTaskInputValid(\"todo\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"Austintjh19"},"content":"        assertFalse(InputsValidator.getInstance().isDeleteTaskInputValid(\"todo \"));","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"Austintjh19"},"content":"     * Test for validating add deadline task input.","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"Austintjh19"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"Austintjh19"},"content":"    public void validateAddDeadlineTaskInputTest() {","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"Austintjh19"},"content":"        // Tests for valid input","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"Austintjh19"},"content":"        assertTrue(InputsValidator.getInstance().isAddDeadlineTaskInputValid(\"deadline 1 /by 01-01-2024\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"Austintjh19"},"content":"        assertTrue(InputsValidator.getInstance().isAddDeadlineTaskInputValid(\"deadline Task /by 01-01-2024\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"Austintjh19"},"content":"        assertTrue(InputsValidator.getInstance().isAddDeadlineTaskInputValid(\"deadline Task 1 /by 01-01-2024\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"Austintjh19"},"content":"        // Tests for invalid inputs","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"Austintjh19"},"content":"        assertFalse(InputsValidator.getInstance().isAddDeadlineTaskInputValid(\"deadline Task\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"Austintjh19"},"content":"        assertFalse(InputsValidator.getInstance().isAddDeadlineTaskInputValid(\"deadline Task /by 01/01/2024\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"Austintjh19"},"content":"        assertFalse(InputsValidator.getInstance().isAddDeadlineTaskInputValid(\"deadline /by 01-01-2024\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"Austintjh19"},"content":"        assertFalse(InputsValidator.getInstance().isAddDeadlineTaskInputValid(\"deadline Task /by 2024-01-01\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"Austintjh19"},"content":"        assertFalse(InputsValidator.getInstance().isAddDeadlineTaskInputValid(\"deadline Task /by 32-01-2024\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"Austintjh19"},"content":"        assertFalse(InputsValidator.getInstance().isAddDeadlineTaskInputValid(\"deadline Task /by 01-13-2024\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"Austintjh19"},"content":"        assertFalse(InputsValidator.getInstance().isAddDeadlineTaskInputValid(\"deadline Task /by 1-01-2024\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"Austintjh19"},"content":"        assertFalse(InputsValidator.getInstance().isAddDeadlineTaskInputValid(\"deadline Task /by 01-1-2024\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":89,"author":{"gitId":"Austintjh19"},"content":"        assertFalse(InputsValidator.getInstance().isAddDeadlineTaskInputValid(\"deadline Task /by 1-1-2024\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":90,"author":{"gitId":"Austintjh19"},"content":"        assertFalse(InputsValidator.getInstance().isAddDeadlineTaskInputValid(\"deadline Task 01-01-2024\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":91,"author":{"gitId":"Austintjh19"},"content":"        assertFalse(InputsValidator.getInstance().isAddDeadlineTaskInputValid(\"deadline Task by 01-01-2024\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":92,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"Austintjh19"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":95,"author":{"gitId":"Austintjh19"},"content":"     * Test for validating add event task input.","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"Austintjh19"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"Austintjh19"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":98,"author":{"gitId":"Austintjh19"},"content":"    public void validateAddEventTaskInputTest() {","lastModifiedDate":"2024-01-31"},{"lineNumber":99,"author":{"gitId":"Austintjh19"},"content":"        // Tests for valid input","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"Austintjh19"},"content":"        assertTrue(InputsValidator.getInstance()","lastModifiedDate":"2024-01-31"},{"lineNumber":101,"author":{"gitId":"Austintjh19"},"content":"                .isAddEventTaskInputValid(\"event 2 /from 01-01-2024 1200 /to 01-01-2024 1300\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":102,"author":{"gitId":"Austintjh19"},"content":"        assertTrue(InputsValidator.getInstance()","lastModifiedDate":"2024-01-31"},{"lineNumber":103,"author":{"gitId":"Austintjh19"},"content":"                .isAddEventTaskInputValid(\"event School Meeting /from 01-01-2024 1200 /to 01-01-2024 1300\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":104,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":105,"author":{"gitId":"Austintjh19"},"content":"        // Tests for invalid inputs","lastModifiedDate":"2024-01-31"},{"lineNumber":106,"author":{"gitId":"Austintjh19"},"content":"        assertFalse(InputsValidator.getInstance()","lastModifiedDate":"2024-01-31"},{"lineNumber":107,"author":{"gitId":"Austintjh19"},"content":"                .isAddEventTaskInputValid(\"event /from 01-01-2024 1200 /to 01-01-2024 1300\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":108,"author":{"gitId":"Austintjh19"},"content":"        assertFalse(InputsValidator.getInstance()","lastModifiedDate":"2024-01-31"},{"lineNumber":109,"author":{"gitId":"Austintjh19"},"content":"                .isAddEventTaskInputValid(\"event School Meeting from 01-01-2024 1200 to 01-01-2024 1300\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":110,"author":{"gitId":"Austintjh19"},"content":"        assertFalse(InputsValidator.getInstance()","lastModifiedDate":"2024-01-31"},{"lineNumber":111,"author":{"gitId":"Austintjh19"},"content":"                .isAddEventTaskInputValid(\"event School Meeting /from 01-01-2024 /to 01-01-2024\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":112,"author":{"gitId":"Austintjh19"},"content":"        assertFalse(InputsValidator.getInstance()","lastModifiedDate":"2024-01-31"},{"lineNumber":113,"author":{"gitId":"Austintjh19"},"content":"                .isAddEventTaskInputValid(\"event School Meeting /from 01-01-2024 1300 /to 01-01-2024 1200\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":114,"author":{"gitId":"Austintjh19"},"content":"        assertFalse(InputsValidator.getInstance()","lastModifiedDate":"2024-01-31"},{"lineNumber":115,"author":{"gitId":"Austintjh19"},"content":"                .isAddEventTaskInputValid(\"event School Meeting 01-01-2024 1200 01-01-2024 1300\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":116,"author":{"gitId":"Austintjh19"},"content":"        assertFalse(InputsValidator.getInstance()","lastModifiedDate":"2024-01-31"},{"lineNumber":117,"author":{"gitId":"Austintjh19"},"content":"                .isAddEventTaskInputValid(\"event School Meeting /from 32-01-2024 1200 /to 33-01-2024 1300\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":118,"author":{"gitId":"Austintjh19"},"content":"        assertFalse(InputsValidator.getInstance()","lastModifiedDate":"2024-01-31"},{"lineNumber":119,"author":{"gitId":"Austintjh19"},"content":"                .isAddEventTaskInputValid(\"event School Meeting /from 01-13-2024 1200 /to 01-13-2024 1300\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":120,"author":{"gitId":"Austintjh19"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":121,"author":{"gitId":"Austintjh19"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":122,"author":{"gitId":"Austintjh19"},"content":"    //","lastModifiedDate":"2024-01-31"},{"lineNumber":123,"author":{"gitId":"Austintjh19"},"content":"    // And more...","lastModifiedDate":"2024-01-31"},{"lineNumber":124,"author":{"gitId":"Austintjh19"},"content":"    //","lastModifiedDate":"2024-01-31"},{"lineNumber":125,"author":{"gitId":"Austintjh19"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Austintjh19":125}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Austintjh19"},"content":"todo read book","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"Austintjh19"},"content":"todo borrow book","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"Austintjh19"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"Austintjh19"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"Austintjh19"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"Austintjh19"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"Austintjh19"},"content":"mark 1","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"Austintjh19"},"content":"mark 3","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"Austintjh19"},"content":"mark 5","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"Austintjh19"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"Austintjh19"},"content":"unmark 1","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"Austintjh19"},"content":"unmark 3","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"Austintjh19"},"content":"unmark 5","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"Austintjh19"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"Austintjh19"},"content":"bye","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"Austintjh19":15}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"Austintjh19"},"content":"java -classpath ../bin Main \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Austintjh19":1,"-":37}}]
