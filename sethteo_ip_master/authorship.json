[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"sethteo"},"content":"# slaybot.slaybot project template","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"sethteo"},"content":"3. After that, locate the `src/main/java/slaybot.slaybot.java` file, right-click it, and choose `Run slaybot.slaybot.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"sethteo":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"sethteo"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"sethteo"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"sethteo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"sethteo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"sethteo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"sethteo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"sethteo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"sethteo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"sethteo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"sethteo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"sethteo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"sethteo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"sethteo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"sethteo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"sethteo"},"content":"checkstyle {","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"sethteo"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"sethteo"},"content":"}","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"sethteo"},"content":"    mainClass.set(\"slaybot.Launcher\")","lastModifiedDate":"2024-02-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"sethteo"},"content":"    archiveFileName \u003d \"slaybot.jar\"","lastModifiedDate":"2024-02-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"sethteo":22,"-":38}},{"path":"slaybot.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"sethteo"},"content":"T | Not Done | hello","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"sethteo"},"content":"T | Not Done | bye","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"sethteo":2}},{"path":"src/main/java/entity/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sethteo"},"content":"package entity;","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"sethteo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"sethteo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"sethteo"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"sethteo"},"content":" * The Deadline class which extends the Task class and includes a deadline represented by a LocalDateTime object.","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"sethteo"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"sethteo"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"sethteo"},"content":"    protected LocalDateTime dateTime;","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"sethteo"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"sethteo"},"content":"     * Constructor for Deadline class","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"sethteo"},"content":"     * @param title","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"sethteo"},"content":"     * @param dateTime","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"sethteo"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"sethteo"},"content":"    public Deadline(String title, LocalDateTime dateTime) {","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"sethteo"},"content":"        super(title);","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"sethteo"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"sethteo"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"sethteo"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"sethteo"},"content":"     * Helper function to generate a string representation of the Deadline object for saving purposes.","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"sethteo"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"sethteo"},"content":"     * @return A string representation of the Deadline object for saving to a file.","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"sethteo"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"sethteo"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"sethteo"},"content":"    public String save() {","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"sethteo"},"content":"        if (this.getMarked()) {","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"sethteo"},"content":"            return \"D | Done | \" + this.title;","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"sethteo"},"content":"        } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"sethteo"},"content":"            return \"D | Not Done | \" + this.title;","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"sethteo"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"sethteo"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"sethteo"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":36,"author":{"gitId":"sethteo"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":37,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"sethteo"},"content":"        if (this.getMarked()) {","lastModifiedDate":"2024-02-10"},{"lineNumber":39,"author":{"gitId":"sethteo"},"content":"            return \"[D][X] \" + this.title + \"by \" + this.dateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"sethteo"},"content":"        } else {","lastModifiedDate":"2024-01-24"},{"lineNumber":41,"author":{"gitId":"sethteo"},"content":"            return \"[D][ ] \" + this.title + \"by \" + this.dateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"sethteo"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":43,"author":{"gitId":"sethteo"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":44,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":45,"author":{"gitId":"sethteo"},"content":"    @Override","lastModifiedDate":"2024-02-11"},{"lineNumber":46,"author":{"gitId":"sethteo"},"content":"    public LocalDateTime getDate() {","lastModifiedDate":"2024-02-11"},{"lineNumber":47,"author":{"gitId":"sethteo"},"content":"        return this.dateTime;","lastModifiedDate":"2024-02-11"},{"lineNumber":48,"author":{"gitId":"sethteo"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":49,"author":{"gitId":"sethteo"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"sethteo":49}},{"path":"src/main/java/entity/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sethteo"},"content":"package entity;","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"sethteo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"sethteo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"sethteo"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"sethteo"},"content":" * The Event class which extends the Task class and includes a start day and end day","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"sethteo"},"content":" * represented by LocalDateTime objects.","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"sethteo"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"sethteo"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"sethteo"},"content":"    protected LocalDateTime startTime;","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"sethteo"},"content":"    protected LocalDateTime endTime;","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"sethteo"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"sethteo"},"content":"     * Constructor for Event class","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"sethteo"},"content":"     * @param title","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"sethteo"},"content":"     * @param startTime","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"sethteo"},"content":"     * @param endTime","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"sethteo"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"sethteo"},"content":"    public Event(String title, LocalDateTime startTime, LocalDateTime endTime) {","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"sethteo"},"content":"        super(title);","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"sethteo"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"sethteo"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"sethteo"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"sethteo"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"sethteo"},"content":"     * Helper function to generate a string representation of the Event object for saving purposes.","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"sethteo"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"sethteo"},"content":"     * @return A string representation of the Event object for saving to a file.","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"sethteo"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"sethteo"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"sethteo"},"content":"    public String save() {","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"sethteo"},"content":"        if (this.getMarked()) {","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"sethteo"},"content":"            return \"E | Done | \" + this.title;","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"sethteo"},"content":"        } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"sethteo"},"content":"            return \"E | Not Done | \" + this.title;","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"sethteo"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"sethteo"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"sethteo"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":41,"author":{"gitId":"sethteo"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":42,"author":{"gitId":"sethteo"},"content":"        if (this.getMarked()) {","lastModifiedDate":"2024-02-10"},{"lineNumber":43,"author":{"gitId":"sethteo"},"content":"            return \"[E][X] \" + this.title + \" (from: \"","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"sethteo"},"content":"                    + this.startTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"sethteo"},"content":"                    + \" to: \" + this.endTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"sethteo"},"content":"        } else {","lastModifiedDate":"2024-01-24"},{"lineNumber":47,"author":{"gitId":"sethteo"},"content":"            return \"[E][ ] \" + this.title + \" (from: \"","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"sethteo"},"content":"                    + this.startTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"sethteo"},"content":"                    + \" to: \" + this.endTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"sethteo"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":51,"author":{"gitId":"sethteo"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":52,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":53,"author":{"gitId":"sethteo"},"content":"    @Override","lastModifiedDate":"2024-02-11"},{"lineNumber":54,"author":{"gitId":"sethteo"},"content":"    public LocalDateTime getDate() {","lastModifiedDate":"2024-02-11"},{"lineNumber":55,"author":{"gitId":"sethteo"},"content":"        return this.startTime;","lastModifiedDate":"2024-02-11"},{"lineNumber":56,"author":{"gitId":"sethteo"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":57,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":58,"author":{"gitId":"sethteo"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"sethteo":58}},{"path":"src/main/java/entity/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sethteo"},"content":"package entity;","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"sethteo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"sethteo"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"sethteo"},"content":" * Abstract class which would be inherited by the various subclasses Deadline, ToDo and Event","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"sethteo"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"sethteo"},"content":"public abstract class Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"sethteo"},"content":"    protected String title;","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"sethteo"},"content":"    protected boolean isMarked;","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"sethteo"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"sethteo"},"content":"     * Constructor for Task class that takes in a String as an argument","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"sethteo"},"content":"     * @param title","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"sethteo"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"sethteo"},"content":"    Task(String title) {","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"sethteo"},"content":"        this.title \u003d title;","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"sethteo"},"content":"        this.isMarked \u003d false;","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"sethteo"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"sethteo"},"content":"    public String getTitle() {","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"sethteo"},"content":"        return this.title;","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"sethteo"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"sethteo"},"content":"    public boolean getMarked() {","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"sethteo"},"content":"        return this.isMarked;","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"sethteo"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":29,"author":{"gitId":"sethteo"},"content":"    public void setMarked(boolean markedStatus) {","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"sethteo"},"content":"        this.isMarked \u003d markedStatus;","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"sethteo"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":32,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":33,"author":{"gitId":"sethteo"},"content":"    public abstract String save();","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"sethteo"},"content":"    public abstract LocalDateTime getDate();","lastModifiedDate":"2024-02-11"},{"lineNumber":36,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":37,"author":{"gitId":"sethteo"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"sethteo":37}},{"path":"src/main/java/entity/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sethteo"},"content":"package entity;","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"sethteo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"sethteo"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"sethteo"},"content":" * The ToDo class which extends the Task class","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"sethteo"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"sethteo"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"sethteo"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"sethteo"},"content":"     * Constructor for ToDo class","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"sethteo"},"content":"     * @param title","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"sethteo"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"sethteo"},"content":"    public ToDo(String title) {","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"sethteo"},"content":"        super(title);","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"sethteo"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"sethteo"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"sethteo"},"content":"     * Helper function to generate a string representation of the ToDo object for saving purposes.","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"sethteo"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"sethteo"},"content":"     * @return A string representation of the Event object for saving to a file.","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"sethteo"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"sethteo"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"sethteo"},"content":"    public String save() {","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"sethteo"},"content":"        if (this.getMarked()) {","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"sethteo"},"content":"            return \"T | Done | \" + this.title;","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"sethteo"},"content":"        } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"sethteo"},"content":"            return \"T | Not Done | \" + this.title;","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"sethteo"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"sethteo"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"sethteo"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"sethteo"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":33,"author":{"gitId":"sethteo"},"content":"        if (this.getMarked()) {","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"sethteo"},"content":"            return \"[T][X] \" + this.title;","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"sethteo"},"content":"        } else {","lastModifiedDate":"2024-01-24"},{"lineNumber":36,"author":{"gitId":"sethteo"},"content":"            return \"[T][ ] \" + this.title;","lastModifiedDate":"2024-01-24"},{"lineNumber":37,"author":{"gitId":"sethteo"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":38,"author":{"gitId":"sethteo"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":39,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"sethteo"},"content":"    @Override","lastModifiedDate":"2024-02-11"},{"lineNumber":41,"author":{"gitId":"sethteo"},"content":"    public LocalDateTime getDate() {","lastModifiedDate":"2024-02-11"},{"lineNumber":42,"author":{"gitId":"sethteo"},"content":"        return null;","lastModifiedDate":"2024-02-11"},{"lineNumber":43,"author":{"gitId":"sethteo"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":44,"author":{"gitId":"sethteo"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"sethteo":44}},{"path":"src/main/java/exception/InvalidDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sethteo"},"content":"package exception;","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"sethteo"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"sethteo"},"content":" * The InvalidDeadlineException class represents an exception that is thrown","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"sethteo"},"content":" * when attempting to create a task with an invalid or improperly formatted deadline.","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"sethteo"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"sethteo"},"content":"public class InvalidDeadlineException extends Exception {","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"sethteo"},"content":"    public InvalidDeadlineException(String message) {","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"sethteo"},"content":"        super(message);","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"sethteo"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"sethteo"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"sethteo":11}},{"path":"src/main/java/exception/InvalidEventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sethteo"},"content":"package exception;","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"sethteo"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"sethteo"},"content":" * The InvalidEventException class represents an exception that is thrown","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"sethteo"},"content":" * when attempting to create a task with an invalid or improperly formatted deadline.","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"sethteo"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"sethteo"},"content":"public class InvalidEventException extends Exception {","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"sethteo"},"content":"    public InvalidEventException(String message) {","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"sethteo"},"content":"        super(message);","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"sethteo"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"sethteo"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"sethteo":11}},{"path":"src/main/java/exception/InvalidTodoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sethteo"},"content":"package exception;","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"sethteo"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"sethteo"},"content":" * The InvalidTodoException class represents an exception that is thrown","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"sethteo"},"content":" * when attempting to create a task with an invalid or improperly formatted deadline.","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"sethteo"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"sethteo"},"content":"public class InvalidTodoException extends Exception {","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"sethteo"},"content":"    public InvalidTodoException(String message) {","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"sethteo"},"content":"        super(message);","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"sethteo"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"sethteo"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"sethteo":11}},{"path":"src/main/java/exception/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sethteo"},"content":"package exception;","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"sethteo"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"sethteo"},"content":" * The UnknownCommandException class represents an exception that is thrown","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"sethteo"},"content":" * when attempting to create a task with an invalid or improperly formatted deadline.","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"sethteo"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"sethteo"},"content":"public class UnknownCommandException extends Exception {","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"sethteo"},"content":"    public UnknownCommandException(String message) {","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"sethteo"},"content":"        super(message);","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"sethteo"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"sethteo"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"sethteo":11}},{"path":"src/main/java/slaybot/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sethteo"},"content":"package slaybot;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"sethteo"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"sethteo"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"sethteo"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"sethteo"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"sethteo"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"sethteo"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"sethteo"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"sethteo"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"sethteo"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"sethteo"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"sethteo"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"sethteo"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"sethteo"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"sethteo"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"sethteo"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"sethteo"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"sethteo"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"sethteo"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"sethteo"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"sethteo"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"sethteo"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"sethteo"},"content":"    @FXML","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"sethteo"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"sethteo"},"content":"    @FXML","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"sethteo"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"sethteo"},"content":"    private static String USER_DIALOG_COLOR \u003d \" #218aff\";","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"sethteo"},"content":"    private static String BOT_DIALOG_COLOR \u003d \" #39ff5a\";","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"sethteo"},"content":"    private DialogBox(String text, Image img, String color) {","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"sethteo"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"sethteo"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"sethteo"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"sethteo"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"sethteo"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"sethteo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"sethteo"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"sethteo"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"sethteo"},"content":"        VBox vbox \u003d new VBox(this);","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"sethteo"},"content":"        vbox.setFillWidth(true);","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"sethteo"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"sethteo"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"sethteo"},"content":"        dialog.setStyle(\"-fx-background-color: \" + color + \";\" + \"; -fx-background-radius: 25 25 25 25; -fx-background-radius: 25 25 25 25;\" + \"-fx-padding: 10px; \");","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"sethteo"},"content":"        Circle clip \u003d new Circle(displayPicture.getFitWidth() / 2, displayPicture.getFitHeight() / 2, displayPicture.getFitWidth() / 2);","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"sethteo"},"content":"        displayPicture.setClip(clip);","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"sethteo"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"sethteo"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"sethteo"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"sethteo"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"sethteo"},"content":"    private void flip() {","lastModifiedDate":"2024-02-05"},{"lineNumber":58,"author":{"gitId":"sethteo"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"sethteo"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-05"},{"lineNumber":60,"author":{"gitId":"sethteo"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"sethteo"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"sethteo"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":63,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":64,"author":{"gitId":"sethteo"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-05"},{"lineNumber":65,"author":{"gitId":"sethteo"},"content":"        return new DialogBox(text, img, USER_DIALOG_COLOR);","lastModifiedDate":"2024-02-05"},{"lineNumber":66,"author":{"gitId":"sethteo"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":67,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":68,"author":{"gitId":"sethteo"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-02-05"},{"lineNumber":69,"author":{"gitId":"sethteo"},"content":"        var db \u003d new DialogBox(text, img, BOT_DIALOG_COLOR);","lastModifiedDate":"2024-02-05"},{"lineNumber":70,"author":{"gitId":"sethteo"},"content":"        db.flip();","lastModifiedDate":"2024-02-05"},{"lineNumber":71,"author":{"gitId":"sethteo"},"content":"        return db;","lastModifiedDate":"2024-02-05"},{"lineNumber":72,"author":{"gitId":"sethteo"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":73,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":74,"author":{"gitId":"sethteo"},"content":"}","lastModifiedDate":"2024-02-05"},{"lineNumber":75,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"sethteo":75}},{"path":"src/main/java/slaybot/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sethteo"},"content":"package slaybot;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"sethteo"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"sethteo"},"content":"import slaybot.Main;","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"sethteo"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"sethteo"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"sethteo"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"sethteo"},"content":"public class Launcher {","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"sethteo"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"sethteo"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"sethteo"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"sethteo"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"sethteo":13}},{"path":"src/main/java/slaybot/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sethteo"},"content":"package slaybot;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"sethteo"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"sethteo"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"sethteo"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"sethteo"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"sethteo"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"sethteo"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"sethteo"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"sethteo"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"sethteo"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"sethteo"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"sethteo"},"content":"    private Slaybot slaybot \u003d new Slaybot();","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"sethteo"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"sethteo"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"sethteo"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"sethteo"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"sethteo"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"sethteo"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"sethteo"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"sethteo"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setSlaybot(slaybot);","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"sethteo"},"content":"            stage.show();","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"sethteo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"sethteo"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"sethteo"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"sethteo"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"sethteo"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"sethteo":30}},{"path":"src/main/java/slaybot/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sethteo"},"content":"package slaybot;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"sethteo"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"sethteo"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"sethteo"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"sethteo"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"sethteo"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"sethteo"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"sethteo"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"sethteo"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"sethteo"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"sethteo"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"sethteo"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"sethteo"},"content":"    @FXML","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"sethteo"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"sethteo"},"content":"    @FXML","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"sethteo"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"sethteo"},"content":"    @FXML","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"sethteo"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"sethteo"},"content":"    @FXML","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"sethteo"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"sethteo"},"content":"    private Slaybot slaybot;","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"sethteo"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"sethteo"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaBot.png\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"sethteo"},"content":"    @FXML","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"sethteo"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"sethteo"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"sethteo"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"sethteo"},"content":"    public void setSlaybot(Slaybot d) {","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"sethteo"},"content":"        slaybot \u003d d;","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"sethteo"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"sethteo"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"sethteo"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"sethteo"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"sethteo"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"sethteo"},"content":"    @FXML","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"sethteo"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"sethteo"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"sethteo"},"content":"        String response \u003d slaybot.getResponse(input);","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"sethteo"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"sethteo"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"sethteo"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"sethteo"},"content":"        );","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"sethteo"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"sethteo"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"sethteo"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"sethteo":50}},{"path":"src/main/java/slaybot/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sethteo"},"content":"package slaybot;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"sethteo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"sethteo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"sethteo"},"content":"import entity.Deadline;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"sethteo"},"content":"import entity.Event;","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"sethteo"},"content":"import entity.ToDo;","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"sethteo"},"content":"import exception.InvalidDeadlineException;","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"sethteo"},"content":"import exception.InvalidEventException;","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"sethteo"},"content":"import exception.InvalidTodoException;","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"sethteo"},"content":"import exception.UnknownCommandException;","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"sethteo"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"sethteo"},"content":" * The Parser class is responsible for parsing user input and converting it","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"sethteo"},"content":" * into meaningful objects or commands for the SlayBot application. It handles the","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"sethteo"},"content":" * parsing of commands related to tasks (ToDo, Deadline, Event) and other user interactions.","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"sethteo"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"sethteo"},"content":"public class Parser {","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"sethteo"},"content":"    enum Command {","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"sethteo"},"content":"        BYE,","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"sethteo"},"content":"        LIST,","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"sethteo"},"content":"        TODO,","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"sethteo"},"content":"        DEADLINE,","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"sethteo"},"content":"        EVENT,","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"sethteo"},"content":"        MARK,","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"sethteo"},"content":"        UNMARK,","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"sethteo"},"content":"        DELETE,","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"sethteo"},"content":"        FIND,","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"sethteo"},"content":"        SORT,","lastModifiedDate":"2024-02-11"},{"lineNumber":31,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"sethteo"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"sethteo"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"sethteo"},"content":"     * Parses the user input for creating a {@code Deadline} task.","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"sethteo"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"sethteo"},"content":"     * @param arr The array containing user input words.","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"sethteo"},"content":"     * @return The parsed {@code Deadline} task.","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"sethteo"},"content":"     * @throws InvalidDeadlineException If there is an issue with the input or parsing.","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"sethteo"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"sethteo"},"content":"    public Deadline parseDeadline(String[] arr) throws InvalidDeadlineException {","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"sethteo"},"content":"        String deadlineTitle \u003d \"\";","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"sethteo"},"content":"        String dateTime \u003d \"\";","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"sethteo"},"content":"        String combinedWord \u003d \"\";","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"sethteo"},"content":"        for (int i \u003d 1; i \u003c arr.length; i++) {","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"sethteo"},"content":"            combinedWord +\u003d arr[i] + \" \";","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"sethteo"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"sethteo"},"content":"        int index \u003d combinedWord.indexOf(\"/by\");","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"sethteo"},"content":"        if (index !\u003d -1) {","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"sethteo"},"content":"            dateTime \u003d combinedWord.substring(index + 3).trim();","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"sethteo"},"content":"            deadlineTitle \u003d combinedWord.substring(0, index);","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"sethteo"},"content":"        } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"sethteo"},"content":"            if (deadlineTitle.isEmpty() \u0026\u0026 dateTime.isEmpty()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"sethteo"},"content":"                throw new InvalidDeadlineException(\"OOPS!!! The description and date of a Deadline cannot be empty.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"sethteo"},"content":"            } else if (deadlineTitle.isEmpty()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"sethteo"},"content":"                throw new InvalidDeadlineException(\"OOPS!!! The description of a Deadline cannot be empty.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"sethteo"},"content":"            } else if (dateTime.isEmpty()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"sethteo"},"content":"                throw new InvalidDeadlineException(\"OOPS!!! The date of a Deadline cannot be empty.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"sethteo"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"sethteo"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"sethteo"},"content":"        LocalDateTime date \u003d parseDateTime(dateTime);","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"sethteo"},"content":"        return new Deadline(deadlineTitle, date);","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"sethteo"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"sethteo"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":72,"author":{"gitId":"sethteo"},"content":"     * Parses the user input for creating a {@code ToDo} task.","lastModifiedDate":"2024-02-05"},{"lineNumber":73,"author":{"gitId":"sethteo"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":74,"author":{"gitId":"sethteo"},"content":"     * @param arr The array containing user input words.","lastModifiedDate":"2024-02-05"},{"lineNumber":75,"author":{"gitId":"sethteo"},"content":"     * @return The parsed {@code ToDo} task.","lastModifiedDate":"2024-02-05"},{"lineNumber":76,"author":{"gitId":"sethteo"},"content":"     * @throws InvalidTodoException If there is an issue with the input or parsing.","lastModifiedDate":"2024-02-05"},{"lineNumber":77,"author":{"gitId":"sethteo"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":78,"author":{"gitId":"sethteo"},"content":"    public ToDo parseTodo(String[] arr) throws InvalidTodoException {","lastModifiedDate":"2024-01-30"},{"lineNumber":79,"author":{"gitId":"sethteo"},"content":"        String todoTitle \u003d \"\";","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":81,"author":{"gitId":"sethteo"},"content":"        if (arr.length - 1 \u003d\u003d 0) {","lastModifiedDate":"2024-01-30"},{"lineNumber":82,"author":{"gitId":"sethteo"},"content":"            throw new InvalidTodoException(\"OOPS!!! The description of a Todo cannot be empty.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":83,"author":{"gitId":"sethteo"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":84,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":85,"author":{"gitId":"sethteo"},"content":"        for (int i \u003d 1; i \u003c arr.length; i++) {","lastModifiedDate":"2024-01-30"},{"lineNumber":86,"author":{"gitId":"sethteo"},"content":"            todoTitle +\u003d arr[i];","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"sethteo"},"content":"            if (i !\u003d arr.length - 1) {","lastModifiedDate":"2024-01-30"},{"lineNumber":88,"author":{"gitId":"sethteo"},"content":"                todoTitle +\u003d \" \";","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"sethteo"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":90,"author":{"gitId":"sethteo"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":91,"author":{"gitId":"sethteo"},"content":"        return new ToDo(todoTitle);","lastModifiedDate":"2024-01-31"},{"lineNumber":92,"author":{"gitId":"sethteo"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":93,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":94,"author":{"gitId":"sethteo"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":95,"author":{"gitId":"sethteo"},"content":"     * Parses the user input for creating an {@code Event} task.","lastModifiedDate":"2024-02-05"},{"lineNumber":96,"author":{"gitId":"sethteo"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":97,"author":{"gitId":"sethteo"},"content":"     * @param splitWords The array containing user input words.","lastModifiedDate":"2024-02-05"},{"lineNumber":98,"author":{"gitId":"sethteo"},"content":"     * @return The parsed {@code Event} task.","lastModifiedDate":"2024-02-05"},{"lineNumber":99,"author":{"gitId":"sethteo"},"content":"     * @throws InvalidEventException If there is an issue with the input or parsing.","lastModifiedDate":"2024-02-05"},{"lineNumber":100,"author":{"gitId":"sethteo"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":101,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":102,"author":{"gitId":"sethteo"},"content":"    public Event parseEvent(String[] splitWords) throws InvalidEventException {","lastModifiedDate":"2024-01-30"},{"lineNumber":103,"author":{"gitId":"sethteo"},"content":"        String combinedWord \u003d \"\";","lastModifiedDate":"2024-01-30"},{"lineNumber":104,"author":{"gitId":"sethteo"},"content":"        for (int i \u003d 1; i \u003c splitWords.length; i++) {","lastModifiedDate":"2024-01-30"},{"lineNumber":105,"author":{"gitId":"sethteo"},"content":"            combinedWord +\u003d splitWords[i] + \" \";","lastModifiedDate":"2024-01-30"},{"lineNumber":106,"author":{"gitId":"sethteo"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":107,"author":{"gitId":"sethteo"},"content":"        int indexFrom \u003d combinedWord.indexOf(\"/from\");","lastModifiedDate":"2024-01-30"},{"lineNumber":108,"author":{"gitId":"sethteo"},"content":"        int indexTo \u003d combinedWord.indexOf(\"/to\");","lastModifiedDate":"2024-01-30"},{"lineNumber":109,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":110,"author":{"gitId":"sethteo"},"content":"        if (splitWords.length - 1 \u003d\u003d 0) {","lastModifiedDate":"2024-01-30"},{"lineNumber":111,"author":{"gitId":"sethteo"},"content":"            throw new InvalidEventException(\"OOPS!!! The description of an Event cannot be empty.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":112,"author":{"gitId":"sethteo"},"content":"        } else if (indexFrom \u003c 0 || indexTo \u003c 0) {","lastModifiedDate":"2024-01-30"},{"lineNumber":113,"author":{"gitId":"sethteo"},"content":"            throw new InvalidEventException(\"OOPS!!! The date of an Event cannot be empty.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":114,"author":{"gitId":"sethteo"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":115,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":116,"author":{"gitId":"sethteo"},"content":"        String beforeFrom \u003d combinedWord.substring(0, indexFrom).trim();","lastModifiedDate":"2024-01-30"},{"lineNumber":117,"author":{"gitId":"sethteo"},"content":"        String afterFrom \u003d combinedWord.substring(indexFrom + \"/from\".length(), indexTo).trim();","lastModifiedDate":"2024-01-30"},{"lineNumber":118,"author":{"gitId":"sethteo"},"content":"        String afterTo \u003d combinedWord.substring(indexTo + \"/to\".length()).trim();","lastModifiedDate":"2024-01-30"},{"lineNumber":119,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":120,"author":{"gitId":"sethteo"},"content":"        LocalDateTime startDate \u003d parseDateTime(afterFrom);","lastModifiedDate":"2024-01-31"},{"lineNumber":121,"author":{"gitId":"sethteo"},"content":"        LocalDateTime endDate \u003d parseDateTime(afterTo);","lastModifiedDate":"2024-01-31"},{"lineNumber":122,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":123,"author":{"gitId":"sethteo"},"content":"        return new Event(beforeFrom, startDate, endDate);","lastModifiedDate":"2024-01-30"},{"lineNumber":124,"author":{"gitId":"sethteo"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":125,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":126,"author":{"gitId":"sethteo"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":127,"author":{"gitId":"sethteo"},"content":"     * Parses the user input to determine the command type.","lastModifiedDate":"2024-02-05"},{"lineNumber":128,"author":{"gitId":"sethteo"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":129,"author":{"gitId":"sethteo"},"content":"     * @param arr The array containing user input words.","lastModifiedDate":"2024-02-05"},{"lineNumber":130,"author":{"gitId":"sethteo"},"content":"     * @return The parsed command type.","lastModifiedDate":"2024-02-05"},{"lineNumber":131,"author":{"gitId":"sethteo"},"content":"     * @throws UnknownCommandException If the command is not recognized.","lastModifiedDate":"2024-02-05"},{"lineNumber":132,"author":{"gitId":"sethteo"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":133,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":134,"author":{"gitId":"sethteo"},"content":"    public Command parseCommand(String[] arr) throws UnknownCommandException {","lastModifiedDate":"2024-01-30"},{"lineNumber":135,"author":{"gitId":"sethteo"},"content":"        switch (arr[0]) {","lastModifiedDate":"2024-01-30"},{"lineNumber":136,"author":{"gitId":"sethteo"},"content":"        case \"bye\":","lastModifiedDate":"2024-01-30"},{"lineNumber":137,"author":{"gitId":"sethteo"},"content":"            return Command.BYE;","lastModifiedDate":"2024-01-30"},{"lineNumber":138,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":139,"author":{"gitId":"sethteo"},"content":"        case \"list\":","lastModifiedDate":"2024-01-30"},{"lineNumber":140,"author":{"gitId":"sethteo"},"content":"            return Command.LIST;","lastModifiedDate":"2024-01-30"},{"lineNumber":141,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":142,"author":{"gitId":"sethteo"},"content":"        case \"todo\":","lastModifiedDate":"2024-01-30"},{"lineNumber":143,"author":{"gitId":"sethteo"},"content":"            return Command.TODO;","lastModifiedDate":"2024-01-30"},{"lineNumber":144,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":145,"author":{"gitId":"sethteo"},"content":"        case \"deadline\":","lastModifiedDate":"2024-01-30"},{"lineNumber":146,"author":{"gitId":"sethteo"},"content":"            return Command.DEADLINE;","lastModifiedDate":"2024-01-30"},{"lineNumber":147,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":148,"author":{"gitId":"sethteo"},"content":"        case \"event\":","lastModifiedDate":"2024-01-30"},{"lineNumber":149,"author":{"gitId":"sethteo"},"content":"            return Command.EVENT;","lastModifiedDate":"2024-01-30"},{"lineNumber":150,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":151,"author":{"gitId":"sethteo"},"content":"        case \"mark\":","lastModifiedDate":"2024-01-30"},{"lineNumber":152,"author":{"gitId":"sethteo"},"content":"            return Command.MARK;","lastModifiedDate":"2024-01-30"},{"lineNumber":153,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":154,"author":{"gitId":"sethteo"},"content":"        case \"unmark\":","lastModifiedDate":"2024-01-30"},{"lineNumber":155,"author":{"gitId":"sethteo"},"content":"            return Command.UNMARK;","lastModifiedDate":"2024-01-30"},{"lineNumber":156,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":157,"author":{"gitId":"sethteo"},"content":"        case \"delete\":","lastModifiedDate":"2024-01-30"},{"lineNumber":158,"author":{"gitId":"sethteo"},"content":"            return Command.DELETE;","lastModifiedDate":"2024-01-30"},{"lineNumber":159,"author":{"gitId":"sethteo"},"content":"        case \"find\":","lastModifiedDate":"2024-01-31"},{"lineNumber":160,"author":{"gitId":"sethteo"},"content":"            return Command.FIND;","lastModifiedDate":"2024-01-31"},{"lineNumber":161,"author":{"gitId":"sethteo"},"content":"        case \"sort\":","lastModifiedDate":"2024-02-11"},{"lineNumber":162,"author":{"gitId":"sethteo"},"content":"            return Command.SORT;","lastModifiedDate":"2024-02-11"},{"lineNumber":163,"author":{"gitId":"sethteo"},"content":"        default:","lastModifiedDate":"2024-01-30"},{"lineNumber":164,"author":{"gitId":"sethteo"},"content":"            throw new UnknownCommandException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2024-01-30"},{"lineNumber":165,"author":{"gitId":"sethteo"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":166,"author":{"gitId":"sethteo"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":167,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":168,"author":{"gitId":"sethteo"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":169,"author":{"gitId":"sethteo"},"content":"     * Parses the date and time from the user input.","lastModifiedDate":"2024-02-05"},{"lineNumber":170,"author":{"gitId":"sethteo"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":171,"author":{"gitId":"sethteo"},"content":"     * @param dateTime The date and time string to be parsed.","lastModifiedDate":"2024-02-05"},{"lineNumber":172,"author":{"gitId":"sethteo"},"content":"     * @return The {@code LocalDateTime} object representing the parsed date and time.","lastModifiedDate":"2024-02-05"},{"lineNumber":173,"author":{"gitId":"sethteo"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":174,"author":{"gitId":"sethteo"},"content":"    public LocalDateTime parseDateTime(String dateTime) {","lastModifiedDate":"2024-01-31"},{"lineNumber":175,"author":{"gitId":"sethteo"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"M/d/yyyy HHmm\");","lastModifiedDate":"2024-01-30"},{"lineNumber":176,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":177,"author":{"gitId":"sethteo"},"content":"        return LocalDateTime.parse(dateTime, formatter);","lastModifiedDate":"2024-01-30"},{"lineNumber":178,"author":{"gitId":"sethteo"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":179,"author":{"gitId":"sethteo"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"sethteo":179}},{"path":"src/main/java/slaybot/Slaybot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sethteo"},"content":"package slaybot;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"sethteo"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"sethteo"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"sethteo"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"sethteo"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"sethteo"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"sethteo"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"sethteo"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"sethteo"},"content":" * The Slaybot class combines the various classes to provide an interactive task tracking bot","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"sethteo"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"sethteo"},"content":"public class Slaybot {","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"sethteo"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"sethteo"},"content":"    private Ui ui;","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"sethteo"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"sethteo"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"sethteo"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"sethteo"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"sethteo"},"content":"    private Scene scene;","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"sethteo"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"sethteo"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaBot.png\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"sethteo"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"sethteo"},"content":"     * Constructor for Slaybot class","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"sethteo"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"sethteo"},"content":"    public Slaybot() {","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"sethteo"},"content":"        this.tasks \u003d new TaskList();","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"sethteo"},"content":"        this.ui \u003d new Ui(tasks);","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"sethteo"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":34,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"sethteo"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"sethteo"},"content":"     * Processes a given String input and retrieves a response from the Ui class.","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"sethteo"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"sethteo"},"content":"     * @param input The String input to be processed by the Ui class.","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"sethteo"},"content":"     * @return A String representing the response generated by the Ui class.","lastModifiedDate":"2024-02-19"},{"lineNumber":41,"author":{"gitId":"sethteo"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"sethteo"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"sethteo"},"content":"        return this.ui.start(input);","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"sethteo"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"sethteo"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"sethteo":46}},{"path":"src/main/java/slaybot/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sethteo"},"content":"package slaybot;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"sethteo"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"sethteo"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"sethteo"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"sethteo"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"sethteo"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"sethteo"},"content":"import java.util.List;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"sethteo"},"content":"import entity.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"sethteo"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"sethteo"},"content":" * The Storage class deals with loading tasks from the file and saving tasks in the file","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"sethteo"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"sethteo"},"content":"public class Storage {","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"sethteo"},"content":"    private static final String PATH \u003d \"./slaybot.txt\";","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"sethteo"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"sethteo"},"content":"     * Constructor for Storage class","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"sethteo"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"sethteo"},"content":"    public Storage() {","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"sethteo"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"sethteo"},"content":"            Path filePath \u003d Paths.get(PATH);","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"sethteo"},"content":"            Files.createDirectories(filePath.getParent());","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"sethteo"},"content":"            if (!Files.exists(filePath)) {","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"sethteo"},"content":"                Files.createFile(filePath);","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"sethteo"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"sethteo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"sethteo"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"sethteo"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"sethteo"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"sethteo"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"sethteo"},"content":"     * Saves the tasks from the provided TaskList to a file.","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"sethteo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"sethteo"},"content":"     * This method takes a TaskList object, retrieves the list of tasks from it, and","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"sethteo"},"content":"     * writes each Task to a file in the PATH","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"sethteo"},"content":"     * The tasks are saved in a format suitable for later retrieval.","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"sethteo"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"sethteo"},"content":"     * @param tasks The TaskList object which contains the Task objects to be saved","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"sethteo"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"sethteo"},"content":"     * @throws IOException If an I/O error occurs while writing to the file.","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"sethteo"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"sethteo"},"content":"    public static void saveTasks(TaskList tasks) {","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"sethteo"},"content":"        List\u003cTask\u003e list \u003d tasks.getTasks();","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"sethteo"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"sethteo"},"content":"            FileWriter fw \u003d new FileWriter(PATH);","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"sethteo"},"content":"            for (Task t : list) {","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"sethteo"},"content":"                fw.write(t.save() + \"\\n\");","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"sethteo"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"sethteo"},"content":"            fw.close();","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"sethteo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"sethteo"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"sethteo"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"sethteo"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"sethteo"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"sethteo":60}},{"path":"src/main/java/slaybot/TaskComparator.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sethteo"},"content":"package slaybot;","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"sethteo"},"content":"import entity.Task;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"sethteo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"sethteo"},"content":"import java.util.Comparator;","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"sethteo"},"content":"public class TaskComparator implements Comparator\u003cTask\u003e {","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"sethteo"},"content":"    @Override","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"sethteo"},"content":"    public int compare(Task task1, Task task2) {","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"sethteo"},"content":"        LocalDateTime dateTime1 \u003d task1.getDate();","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"sethteo"},"content":"        LocalDateTime dateTime2 \u003d task2.getDate();","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"sethteo"},"content":"        if (dateTime1 \u003d\u003d null \u0026\u0026 dateTime2 \u003d\u003d null) {","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"sethteo"},"content":"            return 0; // Both are null, consider them equal","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"sethteo"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"sethteo"},"content":"        if (dateTime1 \u003d\u003d null) {","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"sethteo"},"content":"            return 1; // Null is considered greater than non-null","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"sethteo"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"sethteo"},"content":"        if (dateTime2 \u003d\u003d null) {","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"sethteo"},"content":"            return -1; // Non-null is considered greater than null","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"sethteo"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"sethteo"},"content":"        return dateTime1.compareTo(dateTime2);","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"sethteo"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"sethteo"},"content":"}","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"sethteo":25}},{"path":"src/main/java/slaybot/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sethteo"},"content":"package slaybot;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"sethteo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"sethteo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"sethteo"},"content":"import java.util.Comparator;","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"sethteo"},"content":"import java.util.List;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"sethteo"},"content":"import entity.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"sethteo"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"sethteo"},"content":" * The TaskList class represents a collection of tasks in the SlayBot application.","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"sethteo"},"content":" * It provides methods to manipulate and interact with the list of tasks, such as adding,","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"sethteo"},"content":" * removing, marking, and searching for tasks.","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"sethteo"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"sethteo"},"content":"public class TaskList {","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"sethteo"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"sethteo"},"content":"    public TaskList() {","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"sethteo"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"sethteo"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"sethteo"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"sethteo"},"content":"        return this.tasks;","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"sethteo"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"sethteo"},"content":"    public int getSize() {","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"sethteo"},"content":"        return this.tasks.size();","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"sethteo"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"sethteo"},"content":"    public String removeTask(int index) {","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"sethteo"},"content":"        try {","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"sethteo"},"content":"            this.tasks.remove(index);","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"sethteo"},"content":"            String deleteText \u003d \"\\n Successful deletion \\n You now have \"","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"sethteo"},"content":"                    + tasks.size() + \" tasks\";","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"sethteo"},"content":"            Storage.saveTasks(this);","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"sethteo"},"content":"            return deleteText;","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"sethteo"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"sethteo"},"content":"            return \"Please input a valid index\";","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"sethteo"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":41,"author":{"gitId":"sethteo"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"sethteo"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"sethteo"},"content":"     * Adds a task to the TaskList.","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"sethteo"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"sethteo"},"content":"     * @param t The task to be added.","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"sethteo"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"sethteo"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"sethteo"},"content":"        this.tasks.add(t);","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"sethteo"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"sethteo"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"sethteo"},"content":"     * Iterates through the tasks in the TaskList and prints their information.","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"sethteo"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"sethteo"},"content":"    public String iterate() {","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"sethteo"},"content":"        String output \u003d \"\";","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"sethteo"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"sethteo"},"content":"            output +\u003d i + 1 + \". \" + tasks.get(i) + \"\\n\";","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"sethteo"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"sethteo"},"content":"        return output;","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"sethteo"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"sethteo"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":65,"author":{"gitId":"sethteo"},"content":"     * Finds tasks in the TaskList that contain the specified search value in their description.","lastModifiedDate":"2024-02-05"},{"lineNumber":66,"author":{"gitId":"sethteo"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":67,"author":{"gitId":"sethteo"},"content":"     * @param searchValue The search value to match against task descriptions.","lastModifiedDate":"2024-02-05"},{"lineNumber":68,"author":{"gitId":"sethteo"},"content":"     * @return A list of tasks matching the search criteria.","lastModifiedDate":"2024-02-05"},{"lineNumber":69,"author":{"gitId":"sethteo"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":70,"author":{"gitId":"sethteo"},"content":"    public String findTasks(String searchValue) {","lastModifiedDate":"2024-02-19"},{"lineNumber":71,"author":{"gitId":"sethteo"},"content":"        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-19"},{"lineNumber":72,"author":{"gitId":"sethteo"},"content":"        String result \u003d \"\";","lastModifiedDate":"2024-02-19"},{"lineNumber":73,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"sethteo"},"content":"        for (Task t : this.tasks) {","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"sethteo"},"content":"            if (t.toString().contains(searchValue)) {","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"sethteo"},"content":"                list.add(t);","lastModifiedDate":"2024-02-19"},{"lineNumber":77,"author":{"gitId":"sethteo"},"content":"            }","lastModifiedDate":"2024-02-19"},{"lineNumber":78,"author":{"gitId":"sethteo"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":79,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":80,"author":{"gitId":"sethteo"},"content":"        if (list.isEmpty()) {","lastModifiedDate":"2024-02-19"},{"lineNumber":81,"author":{"gitId":"sethteo"},"content":"            return \"No Results Found\";","lastModifiedDate":"2024-02-19"},{"lineNumber":82,"author":{"gitId":"sethteo"},"content":"        } else {","lastModifiedDate":"2024-02-19"},{"lineNumber":83,"author":{"gitId":"sethteo"},"content":"            for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2024-02-19"},{"lineNumber":84,"author":{"gitId":"sethteo"},"content":"                result +\u003d i + 1 + \". \" + list.get(i).toString() + \"\\n\";","lastModifiedDate":"2024-02-19"},{"lineNumber":85,"author":{"gitId":"sethteo"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"sethteo"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"sethteo"},"content":"        return result;","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"sethteo"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":91,"author":{"gitId":"sethteo"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":92,"author":{"gitId":"sethteo"},"content":"     * Marks a task in the TaskList as done.","lastModifiedDate":"2024-02-05"},{"lineNumber":93,"author":{"gitId":"sethteo"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":94,"author":{"gitId":"sethteo"},"content":"     * @param index The index of the task to be marked as done.","lastModifiedDate":"2024-02-05"},{"lineNumber":95,"author":{"gitId":"sethteo"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":96,"author":{"gitId":"sethteo"},"content":"    public Task markTask(int index) {","lastModifiedDate":"2024-02-05"},{"lineNumber":97,"author":{"gitId":"sethteo"},"content":"        Task taskToMark \u003d tasks.get(index);","lastModifiedDate":"2024-01-30"},{"lineNumber":98,"author":{"gitId":"sethteo"},"content":"        taskToMark.setMarked(true);","lastModifiedDate":"2024-01-30"},{"lineNumber":99,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":100,"author":{"gitId":"sethteo"},"content":"        assert taskToMark.getMarked() \u003d\u003d true;","lastModifiedDate":"2024-02-10"},{"lineNumber":101,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":102,"author":{"gitId":"sethteo"},"content":"        return taskToMark;","lastModifiedDate":"2024-02-05"},{"lineNumber":103,"author":{"gitId":"sethteo"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":104,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":105,"author":{"gitId":"sethteo"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":106,"author":{"gitId":"sethteo"},"content":"     * Marks a task in the TaskList as not done.","lastModifiedDate":"2024-02-05"},{"lineNumber":107,"author":{"gitId":"sethteo"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":108,"author":{"gitId":"sethteo"},"content":"     * @param index The index of the task to be marked as not done.","lastModifiedDate":"2024-02-05"},{"lineNumber":109,"author":{"gitId":"sethteo"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":110,"author":{"gitId":"sethteo"},"content":"    public Task unmarkTask(int index) {","lastModifiedDate":"2024-02-05"},{"lineNumber":111,"author":{"gitId":"sethteo"},"content":"        Task taskToUnmark \u003d tasks.get(index);","lastModifiedDate":"2024-01-30"},{"lineNumber":112,"author":{"gitId":"sethteo"},"content":"        taskToUnmark.setMarked(false);","lastModifiedDate":"2024-01-30"},{"lineNumber":113,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":114,"author":{"gitId":"sethteo"},"content":"        assert taskToUnmark.getMarked() \u003d\u003d false;","lastModifiedDate":"2024-02-10"},{"lineNumber":115,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":116,"author":{"gitId":"sethteo"},"content":"        return taskToUnmark;","lastModifiedDate":"2024-02-05"},{"lineNumber":117,"author":{"gitId":"sethteo"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":118,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":119,"author":{"gitId":"sethteo"},"content":"    public void sortTask() {","lastModifiedDate":"2024-02-11"},{"lineNumber":120,"author":{"gitId":"sethteo"},"content":"        this.tasks.sort(new TaskComparator());","lastModifiedDate":"2024-02-11"},{"lineNumber":121,"author":{"gitId":"sethteo"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":122,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":123,"author":{"gitId":"sethteo"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"sethteo":123}},{"path":"src/main/java/slaybot/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sethteo"},"content":"package slaybot;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"sethteo"},"content":"import java.util.List;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"sethteo"},"content":"import entity.Deadline;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"sethteo"},"content":"import entity.Event;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"sethteo"},"content":"import entity.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"sethteo"},"content":"import entity.ToDo;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"sethteo"},"content":"import exception.InvalidDeadlineException;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"sethteo"},"content":"import exception.InvalidEventException;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"sethteo"},"content":"import exception.InvalidTodoException;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"sethteo"},"content":"import exception.UnknownCommandException;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"sethteo"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"sethteo"},"content":" * The Ui class deals with interactions with the user","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"sethteo"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"sethteo"},"content":"public class Ui {","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"sethteo"},"content":"    public static final String DIVIDER \u003d \"____________________________________________________________\";","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"sethteo"},"content":"    public static final String BYE_TEXT \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"sethteo"},"content":"    private Parser parser;","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"sethteo"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"sethteo"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"sethteo"},"content":"     * Constructor for Ui class","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"sethteo"},"content":"     * @param tasks","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"sethteo"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"sethteo"},"content":"    public Ui(TaskList tasks) {","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"sethteo"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"sethteo"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"sethteo"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"sethteo"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"sethteo"},"content":"     * Starts the user interface, allowing the user to interact with the SlayBot application.","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"sethteo"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"sethteo"},"content":"    public String start(String input) {","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"sethteo"},"content":"            String[] splitWords \u003d input.split(\" \");","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"sethteo"},"content":"            Parser.Command command \u003d null;","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"sethteo"},"content":"            while (command \u003d\u003d null) {","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"sethteo"},"content":"                try {","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"sethteo"},"content":"                    command \u003d this.parser.parseCommand(splitWords);","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"sethteo"},"content":"                } catch (UnknownCommandException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"sethteo"},"content":"                    System.out.println(DIVIDER);","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"sethteo"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"sethteo"},"content":"                    System.out.println(\"Enter a valid command\");","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"sethteo"},"content":"                    System.out.println(DIVIDER);","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"sethteo"},"content":"                    return \"Enter a valid command\";","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"sethteo"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"sethteo"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"sethteo"},"content":"            assert command !\u003d null;","lastModifiedDate":"2024-02-10"},{"lineNumber":54,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":55,"author":{"gitId":"sethteo"},"content":"            switch (command) {","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"sethteo"},"content":"                case BYE:","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"sethteo"},"content":"                    Storage.saveTasks(tasks);","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"sethteo"},"content":"                    return BYE_TEXT;","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"sethteo"},"content":"                case LIST:","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"sethteo"},"content":"                    return \"Here are the tasks in your list:\\n\" + tasks.iterate();","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"sethteo"},"content":"                case TODO:","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"sethteo"},"content":"                    ToDo todo;","lastModifiedDate":"2024-02-19"},{"lineNumber":65,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":66,"author":{"gitId":"sethteo"},"content":"                    try {","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"sethteo"},"content":"                        todo \u003d this.parser.parseTodo(splitWords);","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"sethteo"},"content":"                    } catch (InvalidTodoException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"sethteo"},"content":"                        return DIVIDER + \"\\n\" + e.getMessage() + \"\\nPlease try again\" + \"\\n\" + DIVIDER;","lastModifiedDate":"2024-02-19"},{"lineNumber":70,"author":{"gitId":"sethteo"},"content":"                    }","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"sethteo"},"content":"                    tasks.addTask(todo);","lastModifiedDate":"2024-02-19"},{"lineNumber":73,"author":{"gitId":"sethteo"},"content":"                    Storage.saveTasks(tasks);","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"sethteo"},"content":"                    return \"Todo Task Added: \" + todo.toString() + \"\\n\" + \"You have \" + tasks.getSize() + \" tasks\";","lastModifiedDate":"2024-02-05"},{"lineNumber":75,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"sethteo"},"content":"                case DEADLINE:","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"sethteo"},"content":"                    Deadline deadline;","lastModifiedDate":"2024-02-19"},{"lineNumber":78,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":79,"author":{"gitId":"sethteo"},"content":"                    try {","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"sethteo"},"content":"                        deadline \u003d this.parser.parseDeadline(splitWords);","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"sethteo"},"content":"                    } catch (InvalidDeadlineException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"sethteo"},"content":"                        return DIVIDER + \"\\n\" + e.getMessage() + \"\\nPlease try again\" + \"\\n\" + DIVIDER;","lastModifiedDate":"2024-02-19"},{"lineNumber":83,"author":{"gitId":"sethteo"},"content":"                    }","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"sethteo"},"content":"                    tasks.addTask(deadline);","lastModifiedDate":"2024-02-19"},{"lineNumber":86,"author":{"gitId":"sethteo"},"content":"                    Storage.saveTasks(tasks);","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"sethteo"},"content":"                    return \"Deadline Task Added: \" + deadline.toString() + \"\\nYou have \" + tasks.getSize() + \" tasks\";","lastModifiedDate":"2024-02-05"},{"lineNumber":88,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"sethteo"},"content":"                case EVENT:","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"sethteo"},"content":"                    Event event;","lastModifiedDate":"2024-02-19"},{"lineNumber":91,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":92,"author":{"gitId":"sethteo"},"content":"                    try {","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"sethteo"},"content":"                        event \u003d this.parser.parseEvent(splitWords);","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"sethteo"},"content":"                    } catch (InvalidEventException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":95,"author":{"gitId":"sethteo"},"content":"                        return DIVIDER + \"\\n\" + e.getMessage() + \"\\nPlease try again\" + \"\\n\" + DIVIDER;","lastModifiedDate":"2024-02-19"},{"lineNumber":96,"author":{"gitId":"sethteo"},"content":"                    }","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":98,"author":{"gitId":"sethteo"},"content":"                    tasks.addTask(event);","lastModifiedDate":"2024-02-19"},{"lineNumber":99,"author":{"gitId":"sethteo"},"content":"                    Storage.saveTasks(tasks);","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"sethteo"},"content":"                    return \"Event Task Added: \" + event.toString() + \"\\nYou have \" + tasks.getSize() + \" tasks\";","lastModifiedDate":"2024-02-05"},{"lineNumber":101,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":102,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":103,"author":{"gitId":"sethteo"},"content":"                case MARK:","lastModifiedDate":"2024-01-31"},{"lineNumber":104,"author":{"gitId":"sethteo"},"content":"                    Task t \u003d tasks.markTask(Integer.parseInt(splitWords[1]) - 1);","lastModifiedDate":"2024-02-05"},{"lineNumber":105,"author":{"gitId":"sethteo"},"content":"                    Storage.saveTasks(tasks);","lastModifiedDate":"2024-01-31"},{"lineNumber":106,"author":{"gitId":"sethteo"},"content":"                    return \"OK, I\u0027ve marked this task as done:\\n\" + t.toString();","lastModifiedDate":"2024-02-05"},{"lineNumber":107,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":108,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":109,"author":{"gitId":"sethteo"},"content":"                case UNMARK:","lastModifiedDate":"2024-01-31"},{"lineNumber":110,"author":{"gitId":"sethteo"},"content":"                    Task t1 \u003d tasks.unmarkTask(Integer.parseInt(splitWords[1]) - 1);","lastModifiedDate":"2024-02-05"},{"lineNumber":111,"author":{"gitId":"sethteo"},"content":"                    Storage.saveTasks(tasks);","lastModifiedDate":"2024-01-31"},{"lineNumber":112,"author":{"gitId":"sethteo"},"content":"                    return \"OK, I\u0027ve marked this task as not done yet:\\n\" + t1.toString();","lastModifiedDate":"2024-02-05"},{"lineNumber":113,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":114,"author":{"gitId":"sethteo"},"content":"                case DELETE:","lastModifiedDate":"2024-01-31"},{"lineNumber":115,"author":{"gitId":"sethteo"},"content":"                    int indexToDelete \u003d Integer.parseInt(splitWords[1]) - 1;","lastModifiedDate":"2024-02-19"},{"lineNumber":116,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":117,"author":{"gitId":"sethteo"},"content":"                    return tasks.removeTask(indexToDelete);","lastModifiedDate":"2024-02-19"},{"lineNumber":118,"author":{"gitId":"sethteo"},"content":"                case FIND:","lastModifiedDate":"2024-01-31"},{"lineNumber":119,"author":{"gitId":"sethteo"},"content":"                    return tasks.findTasks(splitWords[1]);","lastModifiedDate":"2024-02-19"},{"lineNumber":120,"author":{"gitId":"sethteo"},"content":"                case SORT:","lastModifiedDate":"2024-02-11"},{"lineNumber":121,"author":{"gitId":"sethteo"},"content":"                    tasks.sortTask();","lastModifiedDate":"2024-02-11"},{"lineNumber":122,"author":{"gitId":"sethteo"},"content":"                    return \"Tasks have been sorted.\";","lastModifiedDate":"2024-02-11"},{"lineNumber":123,"author":{"gitId":"sethteo"},"content":"                default:","lastModifiedDate":"2024-01-31"},{"lineNumber":124,"author":{"gitId":"sethteo"},"content":"                    return \"Enter a command to begin\";","lastModifiedDate":"2024-02-05"},{"lineNumber":125,"author":{"gitId":"sethteo"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":126,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":127,"author":{"gitId":"sethteo"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":128,"author":{"gitId":"sethteo"},"content":"}","lastModifiedDate":"2024-01-31"},{"lineNumber":129,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"sethteo":129}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"sethteo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"sethteo"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"sethteo"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"sethteo"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"sethteo"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"sethteo"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"sethteo"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"sethteo"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"sethteo"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"70.0\" fitWidth\u003d\"70.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"false\" /\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"sethteo"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"sethteo"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"sethteo"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"sethteo"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"sethteo"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"sethteo":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"sethteo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"sethteo"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"sethteo"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"sethteo"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"sethteo"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"sethteo"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"sethteo"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"slaybot.MainWindow\"\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"sethteo"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"sethteo"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"sethteo"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"sethteo"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"sethteo"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"sethteo"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"sethteo"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"sethteo"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"sethteo"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"sethteo"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"sethteo":19}},{"path":"src/test/java/slaybot/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sethteo"},"content":"package slaybot;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"sethteo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"sethteo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"sethteo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"sethteo"},"content":"public class ParserTest {","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"sethteo"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"sethteo"},"content":"    public void testDateTimeParser() {","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"sethteo"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"sethteo"},"content":"        LocalDateTime testDateTime \u003d parser.parseDateTime(\"2/12/2019 1800\");","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"sethteo"},"content":"        int year \u003d 2019;","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"sethteo"},"content":"        int month \u003d 2;","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"sethteo"},"content":"        int day \u003d 12;","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"sethteo"},"content":"        int hour \u003d 18;","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"sethteo"},"content":"        int minute \u003d 0;","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"sethteo"},"content":"        LocalDateTime actualDateTime \u003d LocalDateTime.of(year, month, day, hour, minute);","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"sethteo"},"content":"        assertEquals(testDateTime, actualDateTime);","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"sethteo"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"sethteo"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"sethteo":25}},{"path":"src/test/java/slaybot/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sethteo"},"content":"package slaybot;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"sethteo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"sethteo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"sethteo"},"content":"import entity.ToDo;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"sethteo"},"content":"public class TaskListTest {","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"sethteo"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"sethteo"},"content":"    public void testRemoveTask() {","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"sethteo"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"sethteo"},"content":"        tasks.addTask(new ToDo(\"test\"));","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"sethteo"},"content":"        int initialSize \u003d tasks.getSize();","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"sethteo"},"content":"        tasks.removeTask(0);","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"sethteo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"sethteo"},"content":"        assertEquals(initialSize - 1, tasks.getSize());","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"sethteo"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"sethteo"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"sethteo":21}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"sethteo"},"content":"todo borrow book","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"sethteo"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"sethteo"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"sethteo"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"sethteo"},"content":"bye","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"sethteo":5}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"sethteo"},"content":"java -classpath ..\\bin slaybot.slaybot \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"sethteo":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"sethteo"},"content":"java -classpath ../bin SlayBot \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"sethteo":1,"-":37}}]
