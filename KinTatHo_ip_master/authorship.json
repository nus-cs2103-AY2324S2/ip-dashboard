[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"KinTatHo"},"content":"# Yoda project template","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"KinTatHo"},"content":"3. After that, locate the `src/main/java/Yoda.java` file, right-click it, and choose `Run Yoda.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"KinTatHo"},"content":"Greetings! Yoda, I am","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"KinTatHo"},"content":"Assist you, may I?","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"KinTatHo"},"content":"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣤⣤⠤⠐⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"KinTatHo"},"content":"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡌⡦⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"KinTatHo"},"content":"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⣼⡊⢀⠔⠀⠀⣄⠤⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣤⣤⣄⣀⠀","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"KinTatHo"},"content":"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣶⠃⠉⠡⡠⠤⠊⠀⠠⣀⣀⡠⠔⠒⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣾⣿⢟⠿⠛⠛⠁","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"KinTatHo"},"content":"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⡇⠀⠀⠀⠀⠑⠶⠖⠊⠁⠀⠀⠀⡀⠀⠀⠀⢀⣠⣤⣤⡀⠀⠀⠀⠀⠀⢀⣠⣤⣶⣿⣿⠟⡱⠁⠀⠀⠀⠀","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"KinTatHo"},"content":"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⣾⣿⡇⠀⢀⡠⠀⠀⠀⠈⠑⢦⣄⣀⣀⣽⣦⣤⣾⣿⠿⠿⠿⣿⡆⠀⠀⢀⠺⣿⣿⣿⣿⡿⠁⡰⠁⠀⠀⠀⠀⠀","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"KinTatHo"},"content":"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⣿⣿⣧⣠⠊⣠⣶⣾⣿⣿⣶⣶⣿⣿⠿⠛⢿⣿⣫⢕⡠⢥⣈⠀⠙⠀⠰⣷⣿⣿⣿⡿⠋⢀⠜⠁⠀⠀⠀⠀⠀⠀","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"KinTatHo"},"content":"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⢿⣿⣿⣿⣿⣰⣿⣿⠿⣛⡛⢛⣿⣿⣟⢅⠀⠀⢿⣿⠕⢺⣿⡇⠩⠓⠂⢀⠛⠛⠋⢁⣠⠞⠁⠀⠀⠀⠀⠀⠀⠀⠀","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"KinTatHo"},"content":"⠘⢶⡶⢶⣶⣦⣤⣤⣤⣤⣤⣀⣀⣀⣀⡀⠀⠘⣿⣿⣿⠟⠁⡡⣒⣬⢭⢠⠝⢿⡡⠂⠀⠈⠻⣯⣖⣒⣺⡭⠂⢀⠈⣶⣶⣾⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"KinTatHo"},"content":"⠀⠀⠙⠳⣌⡛⢿⣿⣿⣿⣿⣿⣿⣿⣿⣻⣵⣨⣿⣿⡏⢀⠪⠎⠙⠿⣋⠴⡃⢸⣷⣤⣶⡾⠋⠈⠻⣶⣶⣶⣷⣶⣷⣿⣟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"KinTatHo"},"content":"⠀⠀⠀⠀⠈⠛⢦⣌⡙⠛⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡀⠀⠀⠩⠭⡭⠴⠊⢀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣿⣿⣿⣿⣿⡇⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"KinTatHo"},"content":"⠀⠀⠀⠀⠀⠀⠀⠈⠙⠓⠦⣄⡉⠛⠛⠻⢿⣿⣿⣿⣷⡀⠀⠀⠀⠀⢀⣰⠋⠀⠀⠀⠀⠀⣀⣰⠤⣳⣿⣿⣿⣿⣟⠑⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"KinTatHo"},"content":"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠓⠒⠒⠶⢺⣿⣿⣿⣿⣦⣄⣀⣴⣿⣯⣤⣔⠒⠚⣒⣉⣉⣴⣾⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"KinTatHo"},"content":"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠛⠹⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"KinTatHo"},"content":"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣭⣉⣉⣤⣿⣿⣿⣿⣿⣿⡿⢀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"KinTatHo"},"content":"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠟⡁⡆⠙⢶⣀⠀⢀⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"KinTatHo"},"content":"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣴⣶⣾⣿⣟⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⢛⣩⣴⣿⠇⡇⠸⡆⠙⢷⣄⠻⣿⣦⡄⠀⠀⠀⠀⠀⠀","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"KinTatHo"},"content":"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣼⣿⣿⣿⣿⣿⣿⣿⣎⢻⣿⣿⣿⣿⣿⣿⣿⣭⣭⣭⣵⣶⣾⣿⣿⣿⠟⢰⢣⠀⠈⠀⠀⠙⢷⡎⠙⣿⣦⠀⠀⠀⠀⠀","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"KinTatHo"},"content":"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣼⣿⣿⣿⣿⣿⣿⣿⣿⡟⣿⡆⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠿⠟⠛⠋⠁⢀⠇⢸⡇⠀⠀⠀⠀⠈⠁⠀⢸⣿⡆⠀⠀⠀⠀","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"KinTatHo"},"content":"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡜⡿⡘⣿⣿⣿⣿⣿⣶⣶⣤⣤⣤⣤⣤⣤⣤⣴⡎⠖⢹⡇⠀⠀⠀⠀⠀⠀⠀⠀⣿⣷⡄⠀⠀⠀","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"KinTatHo"},"content":"⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣦⡀⠘⢿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠿⠛⠋⡟⠀⠀⣸⣷⣀⣤⣀⣀⣀⣤⣤⣾⣿⣿⣿⠀⠀⠀","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"KinTatHo"},"content":"⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣭⣓⡲⠬⢭⣙⡛⠿⣿⣿⣶⣦⣀⠀⡜⠀⠀⣰⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀⠀","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"KinTatHo"},"content":"⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣭⣛⣓⠶⠦⠥⣀⠙⠋⠉⠉⠻⣄⣀⣸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀⠀","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"KinTatHo"},"content":"⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣶⣆⠐⣦⣠⣷⠊⠁⠀⠀⡭⠙⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡆⠀⠀","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"KinTatHo"},"content":"⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⢉⣛⡛⢻⡗⠂⠀⢀⣷⣄⠈⢆⠉⠙⠻⢿⣿⣿⣿⣿⣿⠇⠀⠀","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"KinTatHo"},"content":"⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⡟⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⣉⢁⣴⣿⣿⣿⣾⡇⢀⣀⣼⡿⣿⣷⡌⢻⣦⡀⠀⠈⠙⠛⠿⠏⠀⠀⠀","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"KinTatHo"},"content":"⠀⠀⠀⠀⠀⠀⠀⠀⠙⢿⣿⡄⠙⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠛⠛⠛⢯⡉⠉⠉⠉⠉⠛⢼⣿⠿⠿⠦⡙⣿⡆⢹⣷⣤⡀⠀⠀⠀⠀⠀⠀⠀","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"KinTatHo"},"content":"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⠿⠄⠈⠻⠿⠿⠿⠿⠿⠿⠛⠛⠿⠛⠉⠁⠀⠀⠀⠀⠀⠀⠻⠿⠿⠿⠿⠟⠉⠀⠀⠤⠴⠶⠌⠿⠘⠿⠿⠿⠿⠶⠤⠀⠀⠀⠀","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"KinTatHo"},"content":"________________________________________________________","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":16,"KinTatHo":34}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"KinTatHo"},"content":"    mainClass.set(\"Yoda\")","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"KinTatHo"},"content":"    archiveBaseName \u003d \"yoda\"","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":40,"KinTatHo":2}},{"path":"data/yoda.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"KinTatHo"},"content":"T | 0 | sleep","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"KinTatHo"},"content":"T | 0 | eaat","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"KinTatHo":2}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"KinTatHo"},"content":"# User Guide for Yoda Chatbot","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"KinTatHo"},"content":"Yoda Chatbot is a task management assistant that helps you keep track of various tasks including todos, deadlines, and events.","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"KinTatHo"},"content":"### Adding a Task","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"KinTatHo"},"content":"You can add three types of tasks: todo, deadline, and event.","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"KinTatHo"},"content":"#### `todo` - Adds a todo task.","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"KinTatHo"},"content":"A todo task only contains a description.","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"KinTatHo"},"content":"Example of usage:","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"KinTatHo"},"content":"`todo read book`","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"KinTatHo"},"content":"Expected outcome:","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"KinTatHo"},"content":"Hmm, added this task, I have:","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"KinTatHo"},"content":"[T][ ] read book","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"KinTatHo"},"content":"Tasks in the list, now you have 1, hmm.","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"KinTatHo"},"content":"#### `deadline` - Adds a task with a deadline.","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"KinTatHo"},"content":"A deadline task contains a description and a date/time by which the task should be completed.","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"KinTatHo"},"content":"Example of usage:","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"KinTatHo"},"content":"`deadline return book /by Sunday`","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"KinTatHo"},"content":"Expected outcome:","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"KinTatHo"},"content":"Hmm, added this task, I have:","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"KinTatHo"},"content":"[D][ ] return book (by: Sunday)","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"KinTatHo"},"content":"Tasks in the list, now you have 2, hmm.","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":32,"author":{"gitId":"KinTatHo"},"content":"#### `event` - Adds an event task.","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"KinTatHo"},"content":"An event task contains a description and a start and end time.","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":35,"author":{"gitId":"KinTatHo"},"content":"Example of usage:","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"KinTatHo"},"content":"`event project meeting /from Monday 2pm /to 4pm`","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"KinTatHo"},"content":"Expected outcome:","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"KinTatHo"},"content":"Hmm, added this task, I have:","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"KinTatHo"},"content":"[E][ ] project meeting (from: Monday 2pm to: 4pm)","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"KinTatHo"},"content":"Tasks in the list, now you have 3, hmm.","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":43,"author":{"gitId":"KinTatHo"},"content":"### Marking a Task as Done","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"KinTatHo"},"content":"You can mark a task as completed.","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"KinTatHo"},"content":"#### `mark` - Marks a task as done.","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"KinTatHo"},"content":"Example of usage:","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"KinTatHo"},"content":"`mark 1`","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"KinTatHo"},"content":"Expected outcome:","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"KinTatHo"},"content":"Done, this task is:","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"KinTatHo"},"content":"[T][X] read book","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"KinTatHo"},"content":"### Marking a Task as Unone","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"KinTatHo"},"content":"You can unmark a task as completed.","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"KinTatHo"},"content":"#### `unmark` - Marks a task as done.","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"KinTatHo"},"content":"Example of usage:","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"KinTatHo"},"content":"`unmark 1`","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"KinTatHo"},"content":"Expected outcome:","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"KinTatHo"},"content":"Undone, this task remains:","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"KinTatHo"},"content":"[T][ ] read book","lastModifiedDate":"2024-01-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":69,"author":{"gitId":"KinTatHo"},"content":"### `list` - Lists all tasks","lastModifiedDate":"2024-01-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":71,"author":{"gitId":"KinTatHo"},"content":"Shows a list of all tasks in the task manager.","lastModifiedDate":"2024-01-28"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":74,"author":{"gitId":"KinTatHo"},"content":"`list`","lastModifiedDate":"2024-01-28"},{"lineNumber":75,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":76,"author":{"gitId":"KinTatHo"},"content":"Expected outcome:","lastModifiedDate":"2024-01-28"},{"lineNumber":77,"author":{"gitId":"KinTatHo"},"content":"Tasks in your list, here they are:","lastModifiedDate":"2024-01-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":79,"author":{"gitId":"KinTatHo"},"content":"1. [T][X] read book","lastModifiedDate":"2024-01-28"},{"lineNumber":80,"author":{"gitId":"KinTatHo"},"content":"2. [D][ ] return book (by: Sunday)","lastModifiedDate":"2024-01-28"},{"lineNumber":81,"author":{"gitId":"KinTatHo"},"content":"3. [E][ ] project meeting (from: Monday 2pm to: 4pm)","lastModifiedDate":"2024-01-28"},{"lineNumber":82,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":83,"author":{"gitId":"KinTatHo"},"content":"### Deleting a Task","lastModifiedDate":"2024-01-28"},{"lineNumber":84,"author":{"gitId":"KinTatHo"},"content":"You can delete a task from your list.","lastModifiedDate":"2024-01-28"},{"lineNumber":85,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":86,"author":{"gitId":"KinTatHo"},"content":"#### `delete` - Deletes a task.","lastModifiedDate":"2024-01-28"},{"lineNumber":87,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":88,"author":{"gitId":"KinTatHo"},"content":"Example of usage:","lastModifiedDate":"2024-01-28"},{"lineNumber":89,"author":{"gitId":"KinTatHo"},"content":"`delete 1`","lastModifiedDate":"2024-01-28"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":92,"author":{"gitId":"KinTatHo"},"content":"Removed, this task has been:","lastModifiedDate":"2024-01-28"},{"lineNumber":93,"author":{"gitId":"KinTatHo"},"content":"[T][X] read book","lastModifiedDate":"2024-01-28"},{"lineNumber":94,"author":{"gitId":"KinTatHo"},"content":"Tasks in the list, now you have 2, hmm.","lastModifiedDate":"2024-01-28"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":96,"author":{"gitId":"KinTatHo"},"content":"### Exiting the Chatbot","lastModifiedDate":"2024-01-28"},{"lineNumber":97,"author":{"gitId":"KinTatHo"},"content":"You can exit the chatbot using the `bye` command.","lastModifiedDate":"2024-01-28"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":99,"author":{"gitId":"KinTatHo"},"content":"#### `bye` - Exits the application.","lastModifiedDate":"2024-01-28"},{"lineNumber":100,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":101,"author":{"gitId":"KinTatHo"},"content":"Example of usage:","lastModifiedDate":"2024-01-28"},{"lineNumber":102,"author":{"gitId":"KinTatHo"},"content":"`bye`","lastModifiedDate":"2024-01-28"},{"lineNumber":103,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":104,"author":{"gitId":"KinTatHo"},"content":"Expected outcome:","lastModifiedDate":"2024-01-28"},{"lineNumber":105,"author":{"gitId":"KinTatHo"},"content":"Farewell. See you again, I hope!","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"-":26,"KinTatHo":79}},{"path":"src/main/java/Yoda.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KinTatHo"},"content":"import yoda.YodaUI;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"KinTatHo"},"content":"import yoda.parser.Parser;","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"KinTatHo"},"content":"import yoda.storage.Storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"KinTatHo"},"content":"import yoda.task.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"KinTatHo"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"KinTatHo"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"KinTatHo"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"KinTatHo"},"content":" * Yoda is a chatbot that helps users to manage their tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"KinTatHo"},"content":" * It can add, delete, and list tasks, as well as mark tasks as done.","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"KinTatHo"},"content":" * Yoda can also find tasks by searching for keywords.","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"KinTatHo"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"KinTatHo"},"content":"public class Yoda {","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"KinTatHo"},"content":"    private final YodaUI yodaUI;","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"KinTatHo"},"content":"    public Yoda(String filePath) {","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"KinTatHo"},"content":"        Storage storage \u003d new Storage(filePath);","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"KinTatHo"},"content":"        TaskList tasks;","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"KinTatHo"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"KinTatHo"},"content":"            // Load tasks from the storage","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"KinTatHo"},"content":"            tasks \u003d storage.loadTasks();","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"KinTatHo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"KinTatHo"},"content":"            // If there\u0027s an error loading tasks, start with an empty task list","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"KinTatHo"},"content":"            System.out.println(\"Error loading tasks: \" + e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"KinTatHo"},"content":"            tasks \u003d new TaskList(null);","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"KinTatHo"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"KinTatHo"},"content":"        // Initialize YodaUI with the loaded tasks","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"KinTatHo"},"content":"        this.yodaUI \u003d new YodaUI(\"Yoda\", tasks, storage);","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"KinTatHo"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"KinTatHo"},"content":"        // Initialize Yoda with the file path for storing tasks","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"KinTatHo"},"content":"        Yoda yoda \u003d new Yoda(\"data/yoda.txt\");","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"KinTatHo"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"KinTatHo"},"content":"        Parser commandParser \u003d new Parser(yoda.yodaUI);","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"KinTatHo"},"content":"        // Display the greeting message","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"KinTatHo"},"content":"        yoda.yodaUI.printGreeting();","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"KinTatHo"},"content":"        while (yoda.yodaUI.isChatting()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"KinTatHo"},"content":"            String input \u003d scanner.nextLine();","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"KinTatHo"},"content":"            try {","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"KinTatHo"},"content":"                commandParser.parseAndExecute(input);","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"KinTatHo"},"content":"            } catch (Exception e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"KinTatHo"},"content":"                yoda.yodaUI.printMessage(\"Error occurred: \" + e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"KinTatHo"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"KinTatHo"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"KinTatHo"},"content":"        scanner.close();","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":51,"author":{"gitId":"KinTatHo"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"KinTatHo":51}},{"path":"src/main/java/exception/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KinTatHo"},"content":"package exception;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"KinTatHo"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"KinTatHo"},"content":" * Exception thrown when an attempt is made to create a task with an empty description.","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"KinTatHo"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"KinTatHo"},"content":"public class EmptyDescriptionException extends Exception {","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"KinTatHo"},"content":"     * Constructs an EmptyDescriptionException with a detailed message.","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"KinTatHo"},"content":"     * This exception is typically thrown when a task is created without a ","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"KinTatHo"},"content":"     * necessary description.","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"KinTatHo"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"KinTatHo"},"content":"     * @param message A string providing details about the exception cause.","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"KinTatHo"},"content":"    public EmptyDescriptionException(String message) {","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"KinTatHo"},"content":"        super(message); // Call to the superclass (Exception) constructor with the detailed message","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"KinTatHo"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"KinTatHo":17}},{"path":"src/main/java/exception/InvalidTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KinTatHo"},"content":"package exception;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"KinTatHo"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"KinTatHo"},"content":" * Exception thrown when an invalid task operation is attempted.","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"KinTatHo"},"content":" * This can occur in various scenarios such as trying to access a task","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"KinTatHo"},"content":" * that doesn\u0027t exist or providing an invalid task number.","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"KinTatHo"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"KinTatHo"},"content":"public class InvalidTaskException extends Exception {","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"KinTatHo"},"content":"     * Constructs an InvalidTaskException with a detailed message.","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"KinTatHo"},"content":"     * This message provides information about what makes the task operation invalid.","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"KinTatHo"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"KinTatHo"},"content":"     * @param message A string detailing the reason for the exception.","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"KinTatHo"},"content":"    public InvalidTaskException(String message) {","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"KinTatHo"},"content":"        super(message); // Call to the superclass (Exception) constructor with the detailed message","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"KinTatHo"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"KinTatHo":18}},{"path":"src/main/java/exception/TimeMissingException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KinTatHo"},"content":"package exception;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"KinTatHo"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"KinTatHo"},"content":" * Exception thrown when a required time information is missing.","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"KinTatHo"},"content":" * This can occur in scenarios such as creating a deadline or event task","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"KinTatHo"},"content":" * without specifying the necessary time details.","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"KinTatHo"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"KinTatHo"},"content":"public class TimeMissingException extends Exception {","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"KinTatHo"},"content":"     * Constructs a TimeMissingException with a detailed message.","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"KinTatHo"},"content":"     * This message provides information about the missing time detail, ","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"KinTatHo"},"content":"     * which is essential for certain types of tasks (e.g., deadlines, events).","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"KinTatHo"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"KinTatHo"},"content":"     * @param message A string detailing the reason for the exception, ","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"KinTatHo"},"content":"     *                typically indicating which time information is missing.","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"KinTatHo"},"content":"    public TimeMissingException(String message) {","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"KinTatHo"},"content":"        super(message); // Call to the superclass (Exception) constructor with the detailed message","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"KinTatHo"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"KinTatHo":20}},{"path":"src/main/java/exception/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KinTatHo"},"content":"package exception;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"KinTatHo"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"KinTatHo"},"content":" * Exception thrown when an unrecognized command is encountered.","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"KinTatHo"},"content":" * This typically happens when user input does not match any of the expected commands.","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"KinTatHo"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"KinTatHo"},"content":"public class UnknownCommandException extends Exception {","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"KinTatHo"},"content":"     * Constructs an UnknownCommandException with a detailed message.","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"KinTatHo"},"content":"     * The message usually indicates that the user input did not match any known command.","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"KinTatHo"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"KinTatHo"},"content":"     * @param message A string detailing the reason for the exception,","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"KinTatHo"},"content":"     *                such as \"Unknown command entered\".","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"KinTatHo"},"content":"    public UnknownCommandException(String message) {","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"KinTatHo"},"content":"        super(message); // Call to the superclass (Exception) constructor with the detailed message","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"KinTatHo"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"KinTatHo":18}},{"path":"src/main/java/yoda/YodaUI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KinTatHo"},"content":"package yoda;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"KinTatHo"},"content":"import yoda.task.Task;","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"KinTatHo"},"content":"import yoda.task.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"KinTatHo"},"content":"import yoda.storage.Storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"KinTatHo"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"KinTatHo"},"content":"public class YodaUI {","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"KinTatHo"},"content":"    private final TaskList taskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"KinTatHo"},"content":"    private final String chatbotName;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"KinTatHo"},"content":"    private boolean isChatting;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"KinTatHo"},"content":"    private final Storage storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"KinTatHo"},"content":"     * Constructor to initialize the chatbot with a name, a TaskList, and a Storage.","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"KinTatHo"},"content":"     * @param chatbotName The name of the chatbot.","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"KinTatHo"},"content":"     * @param taskList The TaskList object to manage tasks.","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"KinTatHo"},"content":"     * @param storage The Storage object for handling task persistence.","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"KinTatHo"},"content":"    public YodaUI(String chatbotName, TaskList taskList, Storage storage) {","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"KinTatHo"},"content":"        this.chatbotName \u003d chatbotName;","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"KinTatHo"},"content":"        this.isChatting \u003d true;","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"KinTatHo"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"KinTatHo"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"KinTatHo"},"content":"     * Checks if the chatbot is currently chatting.","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"KinTatHo"},"content":"     * @return true if chatting, false otherwise.","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"KinTatHo"},"content":"    public boolean isChatting() {","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"KinTatHo"},"content":"        return this.isChatting;","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"KinTatHo"},"content":"     * Stops the chatbot from chatting.","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"KinTatHo"},"content":"    public void stopChatting() {","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"KinTatHo"},"content":"        this.isChatting \u003d false;","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"KinTatHo"},"content":"     * Marks a task as done.","lastModifiedDate":"2024-01-27"},{"lineNumber":45,"author":{"gitId":"KinTatHo"},"content":"     * Delegates to TaskList to mark a task as done.","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"KinTatHo"},"content":"     * @param taskNumber The number of the task to mark as done.","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"KinTatHo"},"content":"    public void markTaskAsDone(int taskNumber) {","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"KinTatHo"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"KinTatHo"},"content":"            taskList.markTaskAsDone(taskNumber);","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"KinTatHo"},"content":"            Task task \u003d taskList.getTask(taskNumber);","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"KinTatHo"},"content":"            printMessage(\"Done, this task is:\\n\" + task);","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"KinTatHo"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"KinTatHo"},"content":"            printMessage(e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"KinTatHo"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"KinTatHo"},"content":"    public int getTaskListSize() {","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"KinTatHo"},"content":"        return taskList.size();","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":61,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":62,"author":{"gitId":"KinTatHo"},"content":"    // Method to get the TaskList object","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"KinTatHo"},"content":"    public TaskList getTaskList() {","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"KinTatHo"},"content":"        return this.taskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":66,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":67,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":68,"author":{"gitId":"KinTatHo"},"content":"     * Marks a task as undone.","lastModifiedDate":"2024-01-27"},{"lineNumber":69,"author":{"gitId":"KinTatHo"},"content":"     * Delegates to TaskList to mark a task as undone.","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"KinTatHo"},"content":"     * @param taskNumber The number of the task to mark as not done.","lastModifiedDate":"2024-01-27"},{"lineNumber":71,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":72,"author":{"gitId":"KinTatHo"},"content":"    public void markTaskAsUndone(int taskNumber) {","lastModifiedDate":"2024-01-27"},{"lineNumber":73,"author":{"gitId":"KinTatHo"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"KinTatHo"},"content":"            taskList.markTaskAsUndone(taskNumber);","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"KinTatHo"},"content":"            Task task \u003d taskList.getTask(taskNumber);","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"KinTatHo"},"content":"            printMessage(\"Undone, this task remains:\\n\" + task);","lastModifiedDate":"2024-01-27"},{"lineNumber":77,"author":{"gitId":"KinTatHo"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"KinTatHo"},"content":"            printMessage(e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"KinTatHo"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":81,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":82,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"KinTatHo"},"content":"     * Finds tasks that match the search term.","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"KinTatHo"},"content":"     * Delegates to TaskList to find tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"KinTatHo"},"content":"     * @param searchTerm The search term to match tasks against.","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"KinTatHo"},"content":"    public void findTasks(String searchTerm) {","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"KinTatHo"},"content":"        taskList.findTasks(searchTerm);","lastModifiedDate":"2024-02-03"},{"lineNumber":89,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":90,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":91,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":92,"author":{"gitId":"KinTatHo"},"content":"     * Deletes a task from the list.","lastModifiedDate":"2024-01-27"},{"lineNumber":93,"author":{"gitId":"KinTatHo"},"content":"     * Delegates to TaskList to delete a task.","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"KinTatHo"},"content":"     * @param taskNumber The number of the task to be deleted.","lastModifiedDate":"2024-01-27"},{"lineNumber":95,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":96,"author":{"gitId":"KinTatHo"},"content":"    public void deleteTask(int taskNumber) {","lastModifiedDate":"2024-01-27"},{"lineNumber":97,"author":{"gitId":"KinTatHo"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":98,"author":{"gitId":"KinTatHo"},"content":"            taskList.deleteTask(taskNumber);","lastModifiedDate":"2024-01-31"},{"lineNumber":99,"author":{"gitId":"KinTatHo"},"content":"            printMessage(\"Removed, this task has been:\\nNow you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"KinTatHo"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":101,"author":{"gitId":"KinTatHo"},"content":"            printMessage(e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":102,"author":{"gitId":"KinTatHo"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":103,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":104,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":105,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":106,"author":{"gitId":"KinTatHo"},"content":"     * Adds a new task to the list.","lastModifiedDate":"2024-01-27"},{"lineNumber":107,"author":{"gitId":"KinTatHo"},"content":"     * Delegates to TaskList to add a new task.","lastModifiedDate":"2024-01-31"},{"lineNumber":108,"author":{"gitId":"KinTatHo"},"content":"     * @param task The task to be added.","lastModifiedDate":"2024-01-27"},{"lineNumber":109,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":110,"author":{"gitId":"KinTatHo"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-01-30"},{"lineNumber":111,"author":{"gitId":"KinTatHo"},"content":"        taskList.addTask(task);","lastModifiedDate":"2024-01-31"},{"lineNumber":112,"author":{"gitId":"KinTatHo"},"content":"        printMessage(\"Hmm, added this task, I have:\\n\" + task + \"\\nTasks in the list, now you have \" + taskList.size() + \", hmm.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":113,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":114,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":115,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":116,"author":{"gitId":"KinTatHo"},"content":"     * Displays all the tasks in the list.","lastModifiedDate":"2024-01-27"},{"lineNumber":117,"author":{"gitId":"KinTatHo"},"content":"     * Delegates to TaskList to get the string representation of tasks.","lastModifiedDate":"2024-01-31"},{"lineNumber":118,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":119,"author":{"gitId":"KinTatHo"},"content":"    public void showTasks() {","lastModifiedDate":"2024-01-30"},{"lineNumber":120,"author":{"gitId":"KinTatHo"},"content":"        printMessage(taskList.toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":121,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":122,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":123,"author":{"gitId":"KinTatHo"},"content":"    public void saveTasks(TaskList taskList) {","lastModifiedDate":"2024-02-02"},{"lineNumber":124,"author":{"gitId":"KinTatHo"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":125,"author":{"gitId":"KinTatHo"},"content":"            storage.saveTasks(taskList);","lastModifiedDate":"2024-02-02"},{"lineNumber":126,"author":{"gitId":"KinTatHo"},"content":"            printMessage(\"Saved, your task list has been.\");","lastModifiedDate":"2024-01-28"},{"lineNumber":127,"author":{"gitId":"KinTatHo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":128,"author":{"gitId":"KinTatHo"},"content":"            printMessage(\"Error saving tasks: \" + e.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":129,"author":{"gitId":"KinTatHo"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":130,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":131,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":132,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":133,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":134,"author":{"gitId":"KinTatHo"},"content":"     * Prints a message wrapped with lines for better readability.","lastModifiedDate":"2024-01-27"},{"lineNumber":135,"author":{"gitId":"KinTatHo"},"content":"     * @param message The message to be printed.","lastModifiedDate":"2024-01-27"},{"lineNumber":136,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":137,"author":{"gitId":"KinTatHo"},"content":"    public void printMessage(String message) {","lastModifiedDate":"2024-01-27"},{"lineNumber":138,"author":{"gitId":"KinTatHo"},"content":"        printLine();","lastModifiedDate":"2024-01-27"},{"lineNumber":139,"author":{"gitId":"KinTatHo"},"content":"        System.out.println(message);","lastModifiedDate":"2024-01-31"},{"lineNumber":140,"author":{"gitId":"KinTatHo"},"content":"        printLine();","lastModifiedDate":"2024-01-27"},{"lineNumber":141,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":142,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":143,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":144,"author":{"gitId":"KinTatHo"},"content":"     * Prints a line for visual separation in the console output.","lastModifiedDate":"2024-01-27"},{"lineNumber":145,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":146,"author":{"gitId":"KinTatHo"},"content":"    private void printLine() {","lastModifiedDate":"2024-01-27"},{"lineNumber":147,"author":{"gitId":"KinTatHo"},"content":"        System.out.println(\"________________________________________________________\");","lastModifiedDate":"2024-01-27"},{"lineNumber":148,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":149,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":150,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":151,"author":{"gitId":"KinTatHo"},"content":"     * Prints a greeting message when the chatbot starts.","lastModifiedDate":"2024-01-27"},{"lineNumber":152,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":153,"author":{"gitId":"KinTatHo"},"content":"    public void printGreeting() {","lastModifiedDate":"2024-01-27"},{"lineNumber":154,"author":{"gitId":"KinTatHo"},"content":"        printLine();","lastModifiedDate":"2024-01-27"},{"lineNumber":155,"author":{"gitId":"KinTatHo"},"content":"        System.out.println(\"Greetings! \" + chatbotName + \", I am\\nAssist you, may I?\");","lastModifiedDate":"2024-01-27"},{"lineNumber":156,"author":{"gitId":"KinTatHo"},"content":"        printLine();","lastModifiedDate":"2024-01-27"},{"lineNumber":157,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":158,"author":{"gitId":"KinTatHo"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"KinTatHo":158}},{"path":"src/main/java/yoda/components/Replies.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KinTatHo"},"content":"package yoda.components;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"KinTatHo"},"content":"public class Replies {","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"KinTatHo"},"content":"    private final String chatbotName;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"KinTatHo"},"content":"     * Constructor for Replies.","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"KinTatHo"},"content":"     * @param chatbotName The name of the chatbot.","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"KinTatHo"},"content":"    public Replies(String chatbotName) {","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"KinTatHo"},"content":"        this.chatbotName \u003d chatbotName;","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"KinTatHo"},"content":"     * Prints a message wrapped with lines for better readability.","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"KinTatHo"},"content":"     * @param message The message to be printed.","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"KinTatHo"},"content":"    public void printMessage(String message) {","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"KinTatHo"},"content":"        printLine();","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"KinTatHo"},"content":"        System.out.println(message);","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"KinTatHo"},"content":"        printLine();","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"KinTatHo"},"content":"     * Prints a line for visual separation in the console output.","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"KinTatHo"},"content":"    private void printLine() {","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"KinTatHo"},"content":"        System.out.println(\"________________________________________________________\");","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"KinTatHo"},"content":"     * Prints a greeting message when the chatbot starts.","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"KinTatHo"},"content":"    public void printGreeting() {","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"KinTatHo"},"content":"        printLine();","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"KinTatHo"},"content":"        System.out.println(\"Greetings! \" + this.chatbotName + \", I am\\nAssist you, may I?\");","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"KinTatHo"},"content":"        printLine();","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"KinTatHo"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"KinTatHo":39}},{"path":"src/main/java/yoda/datetimeutil/DateTimeUtil.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KinTatHo"},"content":"package yoda.datetimeutil;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"KinTatHo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"KinTatHo"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"KinTatHo"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"KinTatHo"},"content":"import java.util.List;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"KinTatHo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"KinTatHo"},"content":"public class DateTimeUtil {","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"KinTatHo"},"content":"    private static final List\u003cDateTimeFormatter\u003e FORMATTERS \u003d Arrays.asList(","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"KinTatHo"},"content":"            DateTimeFormatter.ofPattern(\"dd MMM\"), // e.g., 30 Jan","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"KinTatHo"},"content":"            DateTimeFormatter.ofPattern(\"MMM dd\"), // e.g., Jan 30","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"KinTatHo"},"content":"            DateTimeFormatter.ofPattern(\"MMM dd yyyy\"), // e.g., Jan 30 2024","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"KinTatHo"},"content":"            DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\"), // e.g., Jan 30 2024 1306","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"KinTatHo"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-MM-dd \"), // e.g., 2024-01-30","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"KinTatHo"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"), // e.g., 2024-01-30 1306","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"KinTatHo"},"content":"            DateTimeFormatter.ofPattern(\"d MMM yyyy\"), // e.g., 30 Jan 2024","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"KinTatHo"},"content":"            DateTimeFormatter.ofPattern(\"d MMM yyyy HHmm\"), // e.g., 30 Jan 2024 1306","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"KinTatHo"},"content":"            DateTimeFormatter.ofPattern(\"d MMMM yyyy\"), // e.g., 30 January 2024","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"KinTatHo"},"content":"            DateTimeFormatter.ofPattern(\"d MMMM yyyy HHmm\"), // e.g., 30 January 2024 1306","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"KinTatHo"},"content":"            DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"), // e.g., 30/01/2024","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"KinTatHo"},"content":"            DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"), // e.g., 30/01/2024 1306","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"KinTatHo"},"content":"            DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"), // e.g., 30-01-2024","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"KinTatHo"},"content":"            DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"), // e.g., 30-01-2024 1306","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"KinTatHo"},"content":"            DateTimeFormatter.ofPattern(\"yyyy/MM/dd\"), // e.g., 2024/01/30","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"KinTatHo"},"content":"            DateTimeFormatter.ofPattern(\"yyyy/MM/dd HHmm\"), // e.g., 2024/01/30 1306","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"KinTatHo"},"content":"            DateTimeFormatter.ofPattern(\"yyyyMMdd\"),   // e.g., 20240130","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"KinTatHo"},"content":"            DateTimeFormatter.ofPattern(\"yyyyMMdd HHmm\")   // e.g., 20240130 1306","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"KinTatHo"},"content":"    );","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"KinTatHo"},"content":"    public static LocalDateTime parseDateTime(String dateTimeStr) throws DateTimeParseException {","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"KinTatHo"},"content":"        for (DateTimeFormatter formatter : FORMATTERS) {","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"KinTatHo"},"content":"            try {","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"KinTatHo"},"content":"                return LocalDateTime.parse(dateTimeStr, formatter);","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"KinTatHo"},"content":"            } catch (DateTimeParseException ignored) {","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"KinTatHo"},"content":"                // Try the next format","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"KinTatHo"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"KinTatHo"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"KinTatHo"},"content":"        throw new DateTimeParseException(\"Failed to parse date-time: \" + dateTimeStr, dateTimeStr, 0);","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"KinTatHo"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"KinTatHo":41}},{"path":"src/main/java/yoda/parser/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KinTatHo"},"content":"package yoda.parser;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"KinTatHo"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"KinTatHo"},"content":" * Enum representing the various commands that the Yoda chatbot can understand.","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"KinTatHo"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"KinTatHo"},"content":"enum Command {","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"KinTatHo"},"content":"    BYE,     // Command to end the chat session","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"KinTatHo"},"content":"    LIST,    // Command to list all tasks","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"KinTatHo"},"content":"    MARK,    // Command to mark a task as done","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"KinTatHo"},"content":"    UNMARK,  // Command to mark a task as not done","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"KinTatHo"},"content":"    TODO,    // Command to add a new \u0027Todo\u0027 task","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"KinTatHo"},"content":"    DEADLINE, // Command to add a new \u0027Deadline\u0027 task","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"KinTatHo"},"content":"    DELETE,  // Command to delete a task","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"KinTatHo"},"content":"    EVENT,   // Command to add a new \u0027Event\u0027 task","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"KinTatHo"},"content":"    UNKNOWN, // Represents an unrecognized command","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"KinTatHo"},"content":"    SAVE, // Command to save the current task list to disk","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"KinTatHo"},"content":"    FIND; // Command to find tasks by searching for keywords","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"KinTatHo"},"content":"     * Converts a string to its corresponding Command enum value. If the string","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"KinTatHo"},"content":"     * does not match any command, UNKNOWN is returned.","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"KinTatHo"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"KinTatHo"},"content":"     * @param str The input string representing a command.","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"KinTatHo"},"content":"     * @return The corresponding Command enum value, or UNKNOWN if no match is found.","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"KinTatHo"},"content":"    public static Command fromString(String str) {","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"KinTatHo"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"KinTatHo"},"content":"            return Command.valueOf(str.toUpperCase());","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"KinTatHo"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"KinTatHo"},"content":"            return UNKNOWN; // Return UNKNOWN if the input string is not a valid command","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"KinTatHo"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"KinTatHo"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"KinTatHo":33}},{"path":"src/main/java/yoda/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KinTatHo"},"content":"package yoda.parser;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"KinTatHo"},"content":"import yoda.YodaUI;","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"KinTatHo"},"content":"import yoda.task.Deadline;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"KinTatHo"},"content":"import yoda.task.Event;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"KinTatHo"},"content":"import yoda.task.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"KinTatHo"},"content":"import yoda.task.Todo;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"KinTatHo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"KinTatHo"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"KinTatHo"},"content":"import yoda.datetimeutil.DateTimeUtil;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"KinTatHo"},"content":"public class Parser {","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"KinTatHo"},"content":"    private final YodaUI yodaUI;","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"KinTatHo"},"content":"     * Constructor for CommandParser.","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"KinTatHo"},"content":"     * @param yodaUI The instance of YodaUI to interact with the task list.","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"KinTatHo"},"content":"    public Parser(YodaUI yodaUI) {","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"KinTatHo"},"content":"        this.yodaUI \u003d yodaUI;","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"KinTatHo"},"content":"     * Parses the user input and executes the corresponding command.","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"KinTatHo"},"content":"     * @param input The input string provided by the user.","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"KinTatHo"},"content":"     * @throws Exception if an error occurs during command execution.","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"KinTatHo"},"content":"    public void parseAndExecute(String input) throws Exception {","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"KinTatHo"},"content":"        String[] parts \u003d input.split(\"\\\\s+\", 2);","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"KinTatHo"},"content":"        Command command \u003d Command.fromString(parts[0]);","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"KinTatHo"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"KinTatHo"},"content":"            switch (command) {","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"KinTatHo"},"content":"                case BYE:","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"KinTatHo"},"content":"                    yodaUI.printMessage(\"Farewell. See you again, I hope!\");","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"KinTatHo"},"content":"                    yodaUI.stopChatting();","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"KinTatHo"},"content":"                    break;","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"KinTatHo"},"content":"                case LIST:","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"KinTatHo"},"content":"                    yodaUI.showTasks();","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"KinTatHo"},"content":"                    break;","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"KinTatHo"},"content":"                case SAVE:","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"KinTatHo"},"content":"                    TaskList taskList \u003d yodaUI.getTaskList();","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"KinTatHo"},"content":"                    yodaUI.saveTasks(taskList);","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"KinTatHo"},"content":"                    break;","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"KinTatHo"},"content":"                case DELETE:","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"KinTatHo"},"content":"                    performTaskOperation(parts, yodaUI::deleteTask);","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"KinTatHo"},"content":"                    break;","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"KinTatHo"},"content":"                case FIND:","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"KinTatHo"},"content":"                    if (parts.length \u003e 1) {","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"KinTatHo"},"content":"                        yodaUI.findTasks(parts[1]);","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"KinTatHo"},"content":"                    } else {","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"KinTatHo"},"content":"                        throw new Exception(\"Search term, provide you must.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"KinTatHo"},"content":"                    }","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"KinTatHo"},"content":"                    break;","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"KinTatHo"},"content":"                case MARK:","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"KinTatHo"},"content":"                    performTaskOperation(parts, yodaUI::markTaskAsDone);","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"KinTatHo"},"content":"                    break;","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"KinTatHo"},"content":"                case UNMARK:","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"KinTatHo"},"content":"                    performTaskOperation(parts, yodaUI::markTaskAsUndone);","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"KinTatHo"},"content":"                    break;","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"KinTatHo"},"content":"                case TODO:","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"KinTatHo"},"content":"                    yodaUI.addTask(new Todo(parts[1]));","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"KinTatHo"},"content":"                    break;","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"KinTatHo"},"content":"                case DEADLINE:","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"KinTatHo"},"content":"                    addTaskWithDateTime(parts, Command.DEADLINE);","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"KinTatHo"},"content":"                    break;","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"KinTatHo"},"content":"                case EVENT:","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"KinTatHo"},"content":"                    addTaskWithDateTime(parts, Command.EVENT);","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"KinTatHo"},"content":"                    break;","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"KinTatHo"},"content":"                default:","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"KinTatHo"},"content":"                    yodaUI.printMessage(\"Sorry, I am. What that means, I do not know :-(\");","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"KinTatHo"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"KinTatHo"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":73,"author":{"gitId":"KinTatHo"},"content":"            yodaUI.printMessage(e.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":74,"author":{"gitId":"KinTatHo"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":75,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":76,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":77,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":78,"author":{"gitId":"KinTatHo"},"content":"     * Adds a task with a date and time to the task list.","lastModifiedDate":"2024-01-30"},{"lineNumber":79,"author":{"gitId":"KinTatHo"},"content":"     * @param parts The split input containing the command and task description.","lastModifiedDate":"2024-01-30"},{"lineNumber":80,"author":{"gitId":"KinTatHo"},"content":"     * @param commandType The type of task to add (deadline or event).","lastModifiedDate":"2024-01-30"},{"lineNumber":81,"author":{"gitId":"KinTatHo"},"content":"     * @throws Exception if the task description or time is missing.","lastModifiedDate":"2024-01-30"},{"lineNumber":82,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":83,"author":{"gitId":"KinTatHo"},"content":"    private void addTaskWithDateTime(String[] parts, Command commandType) throws Exception {","lastModifiedDate":"2024-01-30"},{"lineNumber":84,"author":{"gitId":"KinTatHo"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2024-01-30"},{"lineNumber":85,"author":{"gitId":"KinTatHo"},"content":"            throw new Exception(\"Required, a task description and time are, hmm.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":86,"author":{"gitId":"KinTatHo"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":87,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":88,"author":{"gitId":"KinTatHo"},"content":"        String[] taskParts \u003d parts[1].split(\" /by | /from \", 2);","lastModifiedDate":"2024-01-30"},{"lineNumber":89,"author":{"gitId":"KinTatHo"},"content":"        if (taskParts.length \u003c 2) {","lastModifiedDate":"2024-01-30"},{"lineNumber":90,"author":{"gitId":"KinTatHo"},"content":"            throw new Exception(\"Required, the task time is, yes.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":91,"author":{"gitId":"KinTatHo"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":92,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":93,"author":{"gitId":"KinTatHo"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":94,"author":{"gitId":"KinTatHo"},"content":"            if (commandType \u003d\u003d Command.DEADLINE) {","lastModifiedDate":"2024-01-30"},{"lineNumber":95,"author":{"gitId":"KinTatHo"},"content":"                LocalDateTime by \u003d DateTimeUtil.parseDateTime(taskParts[1]);","lastModifiedDate":"2024-01-30"},{"lineNumber":96,"author":{"gitId":"KinTatHo"},"content":"                yodaUI.addTask(new Deadline(taskParts[0], by));","lastModifiedDate":"2024-01-30"},{"lineNumber":97,"author":{"gitId":"KinTatHo"},"content":"            } else if (commandType \u003d\u003d Command.EVENT) {","lastModifiedDate":"2024-01-30"},{"lineNumber":98,"author":{"gitId":"KinTatHo"},"content":"                String[] timeParts \u003d taskParts[1].split(\" /to \", 2);","lastModifiedDate":"2024-01-30"},{"lineNumber":99,"author":{"gitId":"KinTatHo"},"content":"                if (timeParts.length \u003c 2) {","lastModifiedDate":"2024-01-30"},{"lineNumber":100,"author":{"gitId":"KinTatHo"},"content":"                    throw new Exception(\"Required, the event end time is, yes.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":101,"author":{"gitId":"KinTatHo"},"content":"                }","lastModifiedDate":"2024-01-30"},{"lineNumber":102,"author":{"gitId":"KinTatHo"},"content":"                LocalDateTime from \u003d DateTimeUtil.parseDateTime(timeParts[0]);","lastModifiedDate":"2024-01-30"},{"lineNumber":103,"author":{"gitId":"KinTatHo"},"content":"                LocalDateTime to \u003d DateTimeUtil.parseDateTime(timeParts[1]);","lastModifiedDate":"2024-01-30"},{"lineNumber":104,"author":{"gitId":"KinTatHo"},"content":"                yodaUI.addTask(new Event(taskParts[0], from, to));","lastModifiedDate":"2024-01-30"},{"lineNumber":105,"author":{"gitId":"KinTatHo"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":106,"author":{"gitId":"KinTatHo"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":107,"author":{"gitId":"KinTatHo"},"content":"            throw new Exception(\"Invalid, the date format is. Use one of the accepted formats, you must.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":108,"author":{"gitId":"KinTatHo"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":109,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":110,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":111,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":112,"author":{"gitId":"KinTatHo"},"content":"     * Parses the task number from the user input.","lastModifiedDate":"2024-01-30"},{"lineNumber":113,"author":{"gitId":"KinTatHo"},"content":"     * @param input","lastModifiedDate":"2024-01-30"},{"lineNumber":114,"author":{"gitId":"KinTatHo"},"content":"     * @return","lastModifiedDate":"2024-01-30"},{"lineNumber":115,"author":{"gitId":"KinTatHo"},"content":"     * @throws Exception","lastModifiedDate":"2024-01-30"},{"lineNumber":116,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":117,"author":{"gitId":"KinTatHo"},"content":"    private int parseTaskNumber(String input) throws Exception {","lastModifiedDate":"2024-01-30"},{"lineNumber":118,"author":{"gitId":"KinTatHo"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":119,"author":{"gitId":"KinTatHo"},"content":"            int taskNumber \u003d Integer.parseInt(input);","lastModifiedDate":"2024-01-30"},{"lineNumber":120,"author":{"gitId":"KinTatHo"},"content":"            if (taskNumber \u003c\u003d 0 || taskNumber \u003e yodaUI.getTaskListSize()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":121,"author":{"gitId":"KinTatHo"},"content":"                throw new Exception(\"Valid task number, provide you must.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":122,"author":{"gitId":"KinTatHo"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":123,"author":{"gitId":"KinTatHo"},"content":"            return taskNumber;","lastModifiedDate":"2024-01-30"},{"lineNumber":124,"author":{"gitId":"KinTatHo"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":125,"author":{"gitId":"KinTatHo"},"content":"            throw new Exception(\"A number, enter you must.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":126,"author":{"gitId":"KinTatHo"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":127,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":128,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":129,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":130,"author":{"gitId":"KinTatHo"},"content":"     * Performs a task operation (delete, mark, unmark) based on the user input.","lastModifiedDate":"2024-01-30"},{"lineNumber":131,"author":{"gitId":"KinTatHo"},"content":"     * @param parts The split input containing the command and task number.","lastModifiedDate":"2024-01-30"},{"lineNumber":132,"author":{"gitId":"KinTatHo"},"content":"     * @param operation The operation to be performed on the task.","lastModifiedDate":"2024-01-30"},{"lineNumber":133,"author":{"gitId":"KinTatHo"},"content":"     * @throws Exception if the task number is invalid.","lastModifiedDate":"2024-01-30"},{"lineNumber":134,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":135,"author":{"gitId":"KinTatHo"},"content":"    private void performTaskOperation(String[] parts, TaskOperation operation) throws Exception {","lastModifiedDate":"2024-01-30"},{"lineNumber":136,"author":{"gitId":"KinTatHo"},"content":"        if (parts.length \u003e 1) {","lastModifiedDate":"2024-01-30"},{"lineNumber":137,"author":{"gitId":"KinTatHo"},"content":"            int taskNumber \u003d this.parseTaskNumber(parts[1]);","lastModifiedDate":"2024-01-30"},{"lineNumber":138,"author":{"gitId":"KinTatHo"},"content":"            operation.perform(taskNumber);","lastModifiedDate":"2024-01-30"},{"lineNumber":139,"author":{"gitId":"KinTatHo"},"content":"        } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":140,"author":{"gitId":"KinTatHo"},"content":"            throw new Exception(\"Specify a task number, you must.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":141,"author":{"gitId":"KinTatHo"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":142,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":143,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":144,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":145,"author":{"gitId":"KinTatHo"},"content":"     * Functional interface for task operations like delete, mark, and unmark.","lastModifiedDate":"2024-01-30"},{"lineNumber":146,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":147,"author":{"gitId":"KinTatHo"},"content":"    @FunctionalInterface","lastModifiedDate":"2024-01-30"},{"lineNumber":148,"author":{"gitId":"KinTatHo"},"content":"    private interface TaskOperation {","lastModifiedDate":"2024-01-30"},{"lineNumber":149,"author":{"gitId":"KinTatHo"},"content":"        void perform(int taskNumber) throws Exception;","lastModifiedDate":"2024-01-30"},{"lineNumber":150,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":151,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":152,"author":{"gitId":"KinTatHo"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"KinTatHo":152}},{"path":"src/main/java/yoda/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KinTatHo"},"content":"package yoda.storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"KinTatHo"},"content":"import yoda.task.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"KinTatHo"},"content":"import yoda.task.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"KinTatHo"},"content":"import yoda.task.Todo;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"KinTatHo"},"content":"import yoda.task.Deadline;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"KinTatHo"},"content":"import yoda.task.Event;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"KinTatHo"},"content":"import yoda.datetimeutil.DateTimeUtil;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"KinTatHo"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"KinTatHo"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"KinTatHo"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"KinTatHo"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"KinTatHo"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"KinTatHo"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"KinTatHo"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"KinTatHo"},"content":"import java.util.List;","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"KinTatHo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"KinTatHo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"KinTatHo"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"KinTatHo"},"content":"/** Represents the storage for tasks. */","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"KinTatHo"},"content":"public class Storage {","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"KinTatHo"},"content":"    private final String filePath;","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"KinTatHo"},"content":"    private final Path path;","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"KinTatHo"},"content":"     * Constructs a new Storage object.","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"KinTatHo"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"KinTatHo"},"content":"     * @param filePath The file path where tasks are stored.","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"KinTatHo"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"KinTatHo"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"KinTatHo"},"content":"        this.path \u003d Paths.get(filePath);","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"KinTatHo"},"content":"     * Saves the tasks to the file.","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"KinTatHo"},"content":"     * @param taskList The list of tasks to save.","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"KinTatHo"},"content":"     * @throws IOException If an I/O error occurs.","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"KinTatHo"},"content":"    public void saveTasks(TaskList taskList) throws IOException {","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"KinTatHo"},"content":"        List\u003cString\u003e taskStrings \u003d taskList.stream()","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"KinTatHo"},"content":"                .map(this::taskToFileFormat)","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"KinTatHo"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"KinTatHo"},"content":"        if (isFileContentDifferent(taskStrings)) {","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"KinTatHo"},"content":"            writeToFile(taskStrings);","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"KinTatHo"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"KinTatHo"},"content":"     * Checks if the file content is different from the given list of task strings.","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"KinTatHo"},"content":"     * @param taskStrings The list of task strings to compare with the file content.","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"KinTatHo"},"content":"     * @return true if the file content is different, false otherwise.","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"KinTatHo"},"content":"     * @throws IOException If an I/O error occurs.","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"KinTatHo"},"content":"    private boolean isFileContentDifferent(List\u003cString\u003e taskStrings) throws IOException {","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"KinTatHo"},"content":"        if (!Files.exists(path)) {","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"KinTatHo"},"content":"            Files.createDirectories(path.getParent());","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"KinTatHo"},"content":"            Files.createFile(path);","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"KinTatHo"},"content":"            return true;","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"KinTatHo"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"KinTatHo"},"content":"        List\u003cString\u003e fileContent \u003d Files.readAllLines(path);","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"KinTatHo"},"content":"        return !fileContent.equals(taskStrings);","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"KinTatHo"},"content":"     * Writes a list of task strings to the file.","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"KinTatHo"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"KinTatHo"},"content":"     * @param taskStrings The list of task strings to be written.","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"KinTatHo"},"content":"     * @throws IOException If an I/O error occurs.","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"KinTatHo"},"content":"    private void writeToFile(List\u003cString\u003e taskStrings) throws IOException {","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"KinTatHo"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filePath))) {","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"KinTatHo"},"content":"            for (String taskString : taskStrings) {","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"KinTatHo"},"content":"                writer.write(taskString + System.lineSeparator());","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"KinTatHo"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"KinTatHo"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"KinTatHo"},"content":"     * Converts a Task object into a string format suitable for file storage.","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"KinTatHo"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"KinTatHo"},"content":"     * @param task The task to be converted.","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"KinTatHo"},"content":"     * @return The task in string format.","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":89,"author":{"gitId":"KinTatHo"},"content":"    public String taskToFileFormat(Task task) {","lastModifiedDate":"2024-02-02"},{"lineNumber":90,"author":{"gitId":"KinTatHo"},"content":"        String status \u003d task.isDone() ? \"1\" : \"0\";","lastModifiedDate":"2024-01-31"},{"lineNumber":91,"author":{"gitId":"KinTatHo"},"content":"        String type \u003d task instanceof Todo ? \"T\" :","lastModifiedDate":"2024-01-31"},{"lineNumber":92,"author":{"gitId":"KinTatHo"},"content":"                task instanceof Deadline ? \"D\" :","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"KinTatHo"},"content":"                        task instanceof Event ? \"E\" : \"\";","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"KinTatHo"},"content":"        String details \u003d task.getDescription();","lastModifiedDate":"2024-01-31"},{"lineNumber":95,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"KinTatHo"},"content":"        if (task instanceof Deadline) {","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"KinTatHo"},"content":"            Deadline deadlineTask \u003d (Deadline) task;","lastModifiedDate":"2024-01-31"},{"lineNumber":98,"author":{"gitId":"KinTatHo"},"content":"            details +\u003d \" | \" + deadlineTask.getByString();","lastModifiedDate":"2024-01-31"},{"lineNumber":99,"author":{"gitId":"KinTatHo"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"KinTatHo"},"content":"            Event eventTask \u003d (Event) task;","lastModifiedDate":"2024-01-31"},{"lineNumber":101,"author":{"gitId":"KinTatHo"},"content":"            details +\u003d \" | \" + eventTask.getFromString() + \" to \" + eventTask.getToString();","lastModifiedDate":"2024-01-31"},{"lineNumber":102,"author":{"gitId":"KinTatHo"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":103,"author":{"gitId":"KinTatHo"},"content":"        return type + \" | \" + status + \" | \" + details;","lastModifiedDate":"2024-01-31"},{"lineNumber":104,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":105,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":106,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":107,"author":{"gitId":"KinTatHo"},"content":"     * Loads tasks from the file and returns them as a TaskList.","lastModifiedDate":"2024-02-03"},{"lineNumber":108,"author":{"gitId":"KinTatHo"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":109,"author":{"gitId":"KinTatHo"},"content":"     * @return The list of tasks loaded from the file.","lastModifiedDate":"2024-02-03"},{"lineNumber":110,"author":{"gitId":"KinTatHo"},"content":"     * @throws IOException If an I/O error occurs.","lastModifiedDate":"2024-02-03"},{"lineNumber":111,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":112,"author":{"gitId":"KinTatHo"},"content":"    public TaskList loadTasks() throws IOException {","lastModifiedDate":"2024-02-02"},{"lineNumber":113,"author":{"gitId":"KinTatHo"},"content":"        List\u003cTask\u003e loadedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":114,"author":{"gitId":"KinTatHo"},"content":"        Path path \u003d Paths.get(filePath);","lastModifiedDate":"2024-01-31"},{"lineNumber":115,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":116,"author":{"gitId":"KinTatHo"},"content":"        if (!Files.exists(path)) {","lastModifiedDate":"2024-01-31"},{"lineNumber":117,"author":{"gitId":"KinTatHo"},"content":"            Files.createDirectories(path.getParent());","lastModifiedDate":"2024-01-31"},{"lineNumber":118,"author":{"gitId":"KinTatHo"},"content":"            Files.createFile(path);","lastModifiedDate":"2024-01-31"},{"lineNumber":119,"author":{"gitId":"KinTatHo"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":120,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":121,"author":{"gitId":"KinTatHo"},"content":"        try (BufferedReader reader \u003d Files.newBufferedReader(path)) {","lastModifiedDate":"2024-01-31"},{"lineNumber":122,"author":{"gitId":"KinTatHo"},"content":"            String line;","lastModifiedDate":"2024-01-31"},{"lineNumber":123,"author":{"gitId":"KinTatHo"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2024-01-31"},{"lineNumber":124,"author":{"gitId":"KinTatHo"},"content":"                Task task \u003d fileToTaskFormat(line);","lastModifiedDate":"2024-01-31"},{"lineNumber":125,"author":{"gitId":"KinTatHo"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2024-01-31"},{"lineNumber":126,"author":{"gitId":"KinTatHo"},"content":"                    loadedTasks.add(task);","lastModifiedDate":"2024-01-31"},{"lineNumber":127,"author":{"gitId":"KinTatHo"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":128,"author":{"gitId":"KinTatHo"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":129,"author":{"gitId":"KinTatHo"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":130,"author":{"gitId":"KinTatHo"},"content":"        return new TaskList(loadedTasks);","lastModifiedDate":"2024-02-02"},{"lineNumber":131,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":132,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":133,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":134,"author":{"gitId":"KinTatHo"},"content":"     * Converts a line from the file into a Task object.","lastModifiedDate":"2024-02-03"},{"lineNumber":135,"author":{"gitId":"KinTatHo"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":136,"author":{"gitId":"KinTatHo"},"content":"     * @param line The line from the file to be converted.","lastModifiedDate":"2024-02-03"},{"lineNumber":137,"author":{"gitId":"KinTatHo"},"content":"     * @return The task represented by the line.","lastModifiedDate":"2024-02-03"},{"lineNumber":138,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":139,"author":{"gitId":"KinTatHo"},"content":"    private Task fileToTaskFormat(String line) {","lastModifiedDate":"2024-01-31"},{"lineNumber":140,"author":{"gitId":"KinTatHo"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2024-01-31"},{"lineNumber":141,"author":{"gitId":"KinTatHo"},"content":"        String type \u003d parts[0];","lastModifiedDate":"2024-01-31"},{"lineNumber":142,"author":{"gitId":"KinTatHo"},"content":"        boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2024-01-31"},{"lineNumber":143,"author":{"gitId":"KinTatHo"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2024-01-31"},{"lineNumber":144,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":145,"author":{"gitId":"KinTatHo"},"content":"        switch (type) {","lastModifiedDate":"2024-01-31"},{"lineNumber":146,"author":{"gitId":"KinTatHo"},"content":"            case \"T\":","lastModifiedDate":"2024-01-31"},{"lineNumber":147,"author":{"gitId":"KinTatHo"},"content":"                return createTodoTask(isDone, description);","lastModifiedDate":"2024-01-31"},{"lineNumber":148,"author":{"gitId":"KinTatHo"},"content":"            case \"D\":","lastModifiedDate":"2024-01-31"},{"lineNumber":149,"author":{"gitId":"KinTatHo"},"content":"                return createDeadlineTask(isDone, description, parts[3]);","lastModifiedDate":"2024-01-31"},{"lineNumber":150,"author":{"gitId":"KinTatHo"},"content":"            case \"E\":","lastModifiedDate":"2024-01-31"},{"lineNumber":151,"author":{"gitId":"KinTatHo"},"content":"                return createEventTask(isDone, description, parts[3], parts[4]);","lastModifiedDate":"2024-01-31"},{"lineNumber":152,"author":{"gitId":"KinTatHo"},"content":"            default:","lastModifiedDate":"2024-01-31"},{"lineNumber":153,"author":{"gitId":"KinTatHo"},"content":"                return null;","lastModifiedDate":"2024-01-31"},{"lineNumber":154,"author":{"gitId":"KinTatHo"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":155,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":156,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":157,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":158,"author":{"gitId":"KinTatHo"},"content":"     * Creates a Todo task from the given parameters.","lastModifiedDate":"2024-02-03"},{"lineNumber":159,"author":{"gitId":"KinTatHo"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":160,"author":{"gitId":"KinTatHo"},"content":"     * @param isDone      Whether the task is done.","lastModifiedDate":"2024-02-03"},{"lineNumber":161,"author":{"gitId":"KinTatHo"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":162,"author":{"gitId":"KinTatHo"},"content":"     * @return The Todo task created.","lastModifiedDate":"2024-02-03"},{"lineNumber":163,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":164,"author":{"gitId":"KinTatHo"},"content":"    private Task createTodoTask(boolean isDone, String description) {","lastModifiedDate":"2024-01-31"},{"lineNumber":165,"author":{"gitId":"KinTatHo"},"content":"        Todo todo \u003d new Todo(description);","lastModifiedDate":"2024-01-31"},{"lineNumber":166,"author":{"gitId":"KinTatHo"},"content":"        if (isDone) todo.markAsDone();","lastModifiedDate":"2024-01-31"},{"lineNumber":167,"author":{"gitId":"KinTatHo"},"content":"        return todo;","lastModifiedDate":"2024-01-31"},{"lineNumber":168,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":169,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":170,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":171,"author":{"gitId":"KinTatHo"},"content":"     * Creates a Deadline task from the given parameters.","lastModifiedDate":"2024-02-03"},{"lineNumber":172,"author":{"gitId":"KinTatHo"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":173,"author":{"gitId":"KinTatHo"},"content":"     * @param isDone      Whether the task is done.","lastModifiedDate":"2024-02-03"},{"lineNumber":174,"author":{"gitId":"KinTatHo"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":175,"author":{"gitId":"KinTatHo"},"content":"     * @param by          The deadline of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":176,"author":{"gitId":"KinTatHo"},"content":"     * @return The Deadline task created.","lastModifiedDate":"2024-02-03"},{"lineNumber":177,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":178,"author":{"gitId":"KinTatHo"},"content":"    private Task createDeadlineTask(boolean isDone, String description, String by) {","lastModifiedDate":"2024-01-31"},{"lineNumber":179,"author":{"gitId":"KinTatHo"},"content":"        LocalDateTime byDateTime \u003d DateTimeUtil.parseDateTime(by);","lastModifiedDate":"2024-01-31"},{"lineNumber":180,"author":{"gitId":"KinTatHo"},"content":"        Deadline deadline \u003d new Deadline(description, byDateTime);","lastModifiedDate":"2024-01-31"},{"lineNumber":181,"author":{"gitId":"KinTatHo"},"content":"        if (isDone) deadline.markAsDone();","lastModifiedDate":"2024-01-31"},{"lineNumber":182,"author":{"gitId":"KinTatHo"},"content":"        return deadline;","lastModifiedDate":"2024-01-31"},{"lineNumber":183,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":184,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":185,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":186,"author":{"gitId":"KinTatHo"},"content":"     * Creates an Event task from the given parameters.","lastModifiedDate":"2024-02-03"},{"lineNumber":187,"author":{"gitId":"KinTatHo"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":188,"author":{"gitId":"KinTatHo"},"content":"     * @param isDone      Whether the task is done.","lastModifiedDate":"2024-02-03"},{"lineNumber":189,"author":{"gitId":"KinTatHo"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":190,"author":{"gitId":"KinTatHo"},"content":"     * @param from        The start time of the event.","lastModifiedDate":"2024-02-03"},{"lineNumber":191,"author":{"gitId":"KinTatHo"},"content":"     * @param to          The end time of the event.","lastModifiedDate":"2024-02-03"},{"lineNumber":192,"author":{"gitId":"KinTatHo"},"content":"     * @return The Event task created.","lastModifiedDate":"2024-02-03"},{"lineNumber":193,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":194,"author":{"gitId":"KinTatHo"},"content":"    private Task createEventTask(boolean isDone, String description, String from, String to) {","lastModifiedDate":"2024-01-31"},{"lineNumber":195,"author":{"gitId":"KinTatHo"},"content":"        LocalDateTime fromDateTime \u003d DateTimeUtil.parseDateTime(from);","lastModifiedDate":"2024-01-31"},{"lineNumber":196,"author":{"gitId":"KinTatHo"},"content":"        LocalDateTime toDateTime \u003d DateTimeUtil.parseDateTime(to);","lastModifiedDate":"2024-01-31"},{"lineNumber":197,"author":{"gitId":"KinTatHo"},"content":"        Event event \u003d new Event(description, fromDateTime, toDateTime);","lastModifiedDate":"2024-01-31"},{"lineNumber":198,"author":{"gitId":"KinTatHo"},"content":"        if (isDone) event.markAsDone();","lastModifiedDate":"2024-01-31"},{"lineNumber":199,"author":{"gitId":"KinTatHo"},"content":"        return event;","lastModifiedDate":"2024-01-31"},{"lineNumber":200,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":201,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":202,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":203,"author":{"gitId":"KinTatHo"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"KinTatHo":203}},{"path":"src/main/java/yoda/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KinTatHo"},"content":"package yoda.task;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"KinTatHo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"KinTatHo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"KinTatHo"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"KinTatHo"},"content":" * Represents a deadline task. It extends the Task class and adds a deadline time.","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"KinTatHo"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"KinTatHo"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"KinTatHo"},"content":"    private final LocalDateTime by; // Deadline time for the task","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"KinTatHo"},"content":"     * Constructs a Deadline task with a description and a deadline time.","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"KinTatHo"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"KinTatHo"},"content":"     * @param description A string describing the deadline task.","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"KinTatHo"},"content":"     * @param by A string representing the time by which the task should be completed.","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"KinTatHo"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"KinTatHo"},"content":"        super(description); // Calls the constructor of the superclass Task","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"KinTatHo"},"content":"        this.by \u003d by;       // Sets the deadline time for this task","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"KinTatHo"},"content":"     * Retrieves the deadline time of the task.","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"KinTatHo"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"KinTatHo"},"content":"     * @return The deadline time of the task.","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"KinTatHo"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"KinTatHo"},"content":"        return this.by;","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"KinTatHo"},"content":"     * Retrieves the deadline time of the task as a string.","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"KinTatHo"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"KinTatHo"},"content":"     * @return The deadline time of the task as a string.","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"KinTatHo"},"content":"    public String getByString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"KinTatHo"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\");","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"KinTatHo"},"content":"        return this.by.format(formatter);","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"KinTatHo"},"content":"     * Returns a string representation of the deadline task, including its type,","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"KinTatHo"},"content":"     * description, and deadline time.","lastModifiedDate":"2024-01-27"},{"lineNumber":45,"author":{"gitId":"KinTatHo"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"KinTatHo"},"content":"     * @return A formatted string with the type of task, its description, and the deadline.","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"KinTatHo"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"KinTatHo"},"content":"    public String toString() {","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"KinTatHo"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, HH:mm\");","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"KinTatHo"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(formatter) + \")\";","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"KinTatHo"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"KinTatHo":53}},{"path":"src/main/java/yoda/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KinTatHo"},"content":"package yoda.task;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"KinTatHo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"KinTatHo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"KinTatHo"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"KinTatHo"},"content":" * Represents an event task.","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"KinTatHo"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"KinTatHo"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"KinTatHo"},"content":"    private final LocalDateTime from; // Event starting time","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"KinTatHo"},"content":"    private final LocalDateTime to; // Event ending time","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"KinTatHo"},"content":"     * Constructs an Event task with a description, start time, and end time.","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"KinTatHo"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"KinTatHo"},"content":"     * @param description A string describing the event.","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"KinTatHo"},"content":"     * @param from A string representing the start time of the event.","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"KinTatHo"},"content":"     * @param to A string representing the end time of the event.","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"KinTatHo"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"KinTatHo"},"content":"        super(description); // Calls the constructor of the superclass Task","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"KinTatHo"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"KinTatHo"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"KinTatHo"},"content":"     * Retrieves the start time of the event.","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"KinTatHo"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"KinTatHo"},"content":"     * @return The start time of the event.","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"KinTatHo"},"content":"    public LocalDateTime getFrom() {","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"KinTatHo"},"content":"        return this.from;","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"KinTatHo"},"content":"     * Retrieves the start time of the event as a string.","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"KinTatHo"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"KinTatHo"},"content":"     * @return The start time of the event as a string.","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"KinTatHo"},"content":"    public String getFromString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"KinTatHo"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\");","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"KinTatHo"},"content":"        return this.from.format(formatter);","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"KinTatHo"},"content":"     * Retrieves the end time of the event.","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"KinTatHo"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"KinTatHo"},"content":"     * @return The end time of the event.","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"KinTatHo"},"content":"    public LocalDateTime getTo() {","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"KinTatHo"},"content":"        return this.to;","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"KinTatHo"},"content":"     * Retrieves the end time of the event as a string.","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"KinTatHo"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"KinTatHo"},"content":"     * @return The end time of the event as a string.","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"KinTatHo"},"content":"    public String getToString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"KinTatHo"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\");","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"KinTatHo"},"content":"        return this.to.format(formatter);","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":62,"author":{"gitId":"KinTatHo"},"content":"     * Returns a string representation of the event.","lastModifiedDate":"2024-01-27"},{"lineNumber":63,"author":{"gitId":"KinTatHo"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":64,"author":{"gitId":"KinTatHo"},"content":"     * @return A formatted string with the type of task, its description,","lastModifiedDate":"2024-01-27"},{"lineNumber":65,"author":{"gitId":"KinTatHo"},"content":"     *         start time, and end time.","lastModifiedDate":"2024-01-27"},{"lineNumber":66,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":67,"author":{"gitId":"KinTatHo"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":68,"author":{"gitId":"KinTatHo"},"content":"    public String toString() {","lastModifiedDate":"2024-01-27"},{"lineNumber":69,"author":{"gitId":"KinTatHo"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, HH:mm\");","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"KinTatHo"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from.format(formatter) + \" to: \" + to.format(formatter) + \")\";","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":72,"author":{"gitId":"KinTatHo"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"KinTatHo":72}},{"path":"src/main/java/yoda/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KinTatHo"},"content":"package yoda.task;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"KinTatHo"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"KinTatHo"},"content":" * Represents a generic task with a description and a completion status.","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"KinTatHo"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"KinTatHo"},"content":"public class Task {","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"KinTatHo"},"content":"    private final String description; // Description of the task","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"KinTatHo"},"content":"    private boolean isDone;     // Flag to track if the task is done","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"KinTatHo"},"content":"     * Constructs a Task with the given description. By default, the task is not done.","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"KinTatHo"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"KinTatHo"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"KinTatHo"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"KinTatHo"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"KinTatHo"},"content":"        this.isDone \u003d false; // Task is not done by default","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"KinTatHo"},"content":"     * Retrieves the description of the task.","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"KinTatHo"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"KinTatHo"},"content":"     * @return The description of the task.","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"KinTatHo"},"content":"    public String getDescription() {","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"KinTatHo"},"content":"        return this.description;","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"KinTatHo"},"content":"     * Gets the status of the task.","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"KinTatHo"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"KinTatHo"},"content":"     * @return true if the task is done, false otherwise.","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"KinTatHo"},"content":"    public boolean isDone() {","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"KinTatHo"},"content":"        return this.isDone;","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"KinTatHo"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"KinTatHo"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"KinTatHo"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":45,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"KinTatHo"},"content":"     * Marks the task as not done.","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"KinTatHo"},"content":"    public void markAsUndone() {","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"KinTatHo"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-27"},{"lineNumber":51,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":54,"author":{"gitId":"KinTatHo"},"content":"     * Returns a string representation of the task, including its done status and description.","lastModifiedDate":"2024-01-27"},{"lineNumber":55,"author":{"gitId":"KinTatHo"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":56,"author":{"gitId":"KinTatHo"},"content":"     * @return A formatted string representing the task.","lastModifiedDate":"2024-01-27"},{"lineNumber":57,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":58,"author":{"gitId":"KinTatHo"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":59,"author":{"gitId":"KinTatHo"},"content":"    public String toString() {","lastModifiedDate":"2024-01-27"},{"lineNumber":60,"author":{"gitId":"KinTatHo"},"content":"        return \"[\" + (isDone ? \"X\" : \" \") + \"] \" + this.getDescription();","lastModifiedDate":"2024-01-27"},{"lineNumber":61,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":62,"author":{"gitId":"KinTatHo"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"KinTatHo":62}},{"path":"src/main/java/yoda/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KinTatHo"},"content":"package yoda.task;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"KinTatHo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"KinTatHo"},"content":"import java.util.List;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"KinTatHo"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"KinTatHo"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"KinTatHo"},"content":" * Represents a list of tasks. It provides operations to add, delete, and retrieve tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"KinTatHo"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"KinTatHo"},"content":"public class TaskList {","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"KinTatHo"},"content":"    private final List\u003cTask\u003e tasks; // List to store the tasks","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"KinTatHo"},"content":"    public TaskList(List\u003cTask\u003e loadedTasks) {","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"KinTatHo"},"content":"        this.tasks \u003d loadedTasks !\u003d null ? new ArrayList\u003c\u003e(loadedTasks) : new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"KinTatHo"},"content":"     * Adds a task to the list.","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"KinTatHo"},"content":"     * @param task The task to be added.","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"KinTatHo"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"KinTatHo"},"content":"        if (task !\u003d null) {","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"KinTatHo"},"content":"            tasks.add(task);","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"KinTatHo"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"KinTatHo"},"content":"    public void findTasks(String keyword) {","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"KinTatHo"},"content":"        List\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"KinTatHo"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"KinTatHo"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"KinTatHo"},"content":"                foundTasks.add(task);","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"KinTatHo"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"KinTatHo"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"KinTatHo"},"content":"        if (foundTasks.isEmpty()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"KinTatHo"},"content":"            System.out.println(\"No tasks found with the keyword: \" + keyword);","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"KinTatHo"},"content":"        } else {","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"KinTatHo"},"content":"            System.out.println(\"Tasks found with the keyword: \" + keyword);","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"KinTatHo"},"content":"            for (int i \u003d 0; i \u003c foundTasks.size(); i++) {","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"KinTatHo"},"content":"                System.out.println(i + 1 + \".\" + foundTasks.get(i));","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"KinTatHo"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"KinTatHo"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"KinTatHo"},"content":"     * Deletes a task from the list.","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"KinTatHo"},"content":"     * @param taskNumber The number of the task to be deleted.","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"KinTatHo"},"content":"     * @throws Exception If the task number is invalid.","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"KinTatHo"},"content":"    public void deleteTask(int taskNumber) throws Exception {","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"KinTatHo"},"content":"        if (taskNumber \u003c\u003d 0 || taskNumber \u003e tasks.size()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"KinTatHo"},"content":"            throw new Exception(\"Valid task number, provide you must.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"KinTatHo"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"KinTatHo"},"content":"        tasks.remove(taskNumber - 1);","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"KinTatHo"},"content":"     * Marks a task as done.","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"KinTatHo"},"content":"     * @param taskNumber The number of the task to mark as done.","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"KinTatHo"},"content":"     * @throws Exception If the task number is invalid.","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"KinTatHo"},"content":"    public void markTaskAsDone(int taskNumber) throws Exception {","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"KinTatHo"},"content":"        if (taskNumber \u003c\u003d 0 || taskNumber \u003e tasks.size()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"KinTatHo"},"content":"            throw new Exception(\"Valid task number, provide you must.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"KinTatHo"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"KinTatHo"},"content":"        tasks.get(taskNumber - 1).markAsDone();","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"KinTatHo"},"content":"     * Marks a task as undone.","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"KinTatHo"},"content":"     * @param taskNumber The number of the task to mark as not done.","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"KinTatHo"},"content":"     * @throws Exception If the task number is invalid.","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"KinTatHo"},"content":"    public void markTaskAsUndone(int taskNumber) throws Exception {","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"KinTatHo"},"content":"        if (taskNumber \u003c\u003d 0 || taskNumber \u003e tasks.size()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"KinTatHo"},"content":"            throw new Exception(\"Valid task number, provide you must.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"KinTatHo"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"KinTatHo"},"content":"        tasks.get(taskNumber - 1).markAsUndone();","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"KinTatHo"},"content":"     * Retrieves a task from the list.","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"KinTatHo"},"content":"     * @param taskNumber The number of the task to retrieve.","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"KinTatHo"},"content":"     * @return The task at the specified position.","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"KinTatHo"},"content":"     * @throws Exception If the task number is invalid.","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"KinTatHo"},"content":"    public Task getTask(int taskNumber) throws Exception {","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"KinTatHo"},"content":"        if (taskNumber \u003c\u003d 0 || taskNumber \u003e tasks.size()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"KinTatHo"},"content":"            throw new Exception(\"Valid task number, provide you must.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"KinTatHo"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"KinTatHo"},"content":"        return tasks.get(taskNumber - 1);","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":91,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":92,"author":{"gitId":"KinTatHo"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"KinTatHo"},"content":"     * @return The number of tasks in the list.","lastModifiedDate":"2024-02-03"},{"lineNumber":94,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":95,"author":{"gitId":"KinTatHo"},"content":"    public int size() {","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"KinTatHo"},"content":"        return tasks.size();","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":98,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":99,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":100,"author":{"gitId":"KinTatHo"},"content":"     * Checks if the list is empty.","lastModifiedDate":"2024-02-03"},{"lineNumber":101,"author":{"gitId":"KinTatHo"},"content":"     * @return true if the list is empty, false otherwise.","lastModifiedDate":"2024-02-03"},{"lineNumber":102,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":103,"author":{"gitId":"KinTatHo"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2024-01-31"},{"lineNumber":104,"author":{"gitId":"KinTatHo"},"content":"        return tasks.isEmpty();","lastModifiedDate":"2024-01-31"},{"lineNumber":105,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":106,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":107,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":108,"author":{"gitId":"KinTatHo"},"content":"     * Returns a stream of tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":109,"author":{"gitId":"KinTatHo"},"content":"     * @return A stream of Task objects.","lastModifiedDate":"2024-02-02"},{"lineNumber":110,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":111,"author":{"gitId":"KinTatHo"},"content":"    public Stream\u003cTask\u003e stream() {","lastModifiedDate":"2024-02-02"},{"lineNumber":112,"author":{"gitId":"KinTatHo"},"content":"        return tasks.stream();","lastModifiedDate":"2024-02-02"},{"lineNumber":113,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":114,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":115,"author":{"gitId":"KinTatHo"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":116,"author":{"gitId":"KinTatHo"},"content":"    public String toString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":117,"author":{"gitId":"KinTatHo"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":118,"author":{"gitId":"KinTatHo"},"content":"            return \"Empty, your task list is.\";","lastModifiedDate":"2024-01-31"},{"lineNumber":119,"author":{"gitId":"KinTatHo"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":120,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":121,"author":{"gitId":"KinTatHo"},"content":"        StringBuilder response \u003d new StringBuilder(\"Tasks in your list, here they are:\\n\");","lastModifiedDate":"2024-01-31"},{"lineNumber":122,"author":{"gitId":"KinTatHo"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-01-31"},{"lineNumber":123,"author":{"gitId":"KinTatHo"},"content":"            response.append(i + 1).append(\".\").append(tasks.get(i)).append(\"\\n\");","lastModifiedDate":"2024-01-31"},{"lineNumber":124,"author":{"gitId":"KinTatHo"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":125,"author":{"gitId":"KinTatHo"},"content":"        return response.toString().trim();","lastModifiedDate":"2024-01-31"},{"lineNumber":126,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":127,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":128,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":129,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":130,"author":{"gitId":"KinTatHo"},"content":"     * Prints a message wrapped with lines for better readability.","lastModifiedDate":"2024-01-31"},{"lineNumber":131,"author":{"gitId":"KinTatHo"},"content":"     * @param message The message to be printed.","lastModifiedDate":"2024-01-31"},{"lineNumber":132,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":133,"author":{"gitId":"KinTatHo"},"content":"    public void printMessage(String message) {","lastModifiedDate":"2024-01-31"},{"lineNumber":134,"author":{"gitId":"KinTatHo"},"content":"        printLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":135,"author":{"gitId":"KinTatHo"},"content":"        System.out.println(message);","lastModifiedDate":"2024-01-31"},{"lineNumber":136,"author":{"gitId":"KinTatHo"},"content":"        printLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":137,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":138,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":139,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":140,"author":{"gitId":"KinTatHo"},"content":"     * Prints a line for visual separation in the console output.","lastModifiedDate":"2024-01-31"},{"lineNumber":141,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":142,"author":{"gitId":"KinTatHo"},"content":"    private void printLine() {","lastModifiedDate":"2024-01-31"},{"lineNumber":143,"author":{"gitId":"KinTatHo"},"content":"        System.out.println(\"________________________________________________________\");","lastModifiedDate":"2024-01-31"},{"lineNumber":144,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":145,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":146,"author":{"gitId":"KinTatHo"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"KinTatHo":146}},{"path":"src/main/java/yoda/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KinTatHo"},"content":"package yoda.task;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"KinTatHo"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"KinTatHo"},"content":" * Represents a \"Todo\" task. It is a simple task with only a description.","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"KinTatHo"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"KinTatHo"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"KinTatHo"},"content":"     * Constructs a todo task with the given description.","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"KinTatHo"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"KinTatHo"},"content":"     * @param description A string describing the todo task.","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"KinTatHo"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"KinTatHo"},"content":"        super(description); // Call to the superclass (Task) constructor","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"KinTatHo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"KinTatHo"},"content":"     * Returns a string representation of the todo task.","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"KinTatHo"},"content":"     * The method overrides the Task class\u0027s toString method to add the specific","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"KinTatHo"},"content":"     * identifier for Todo tasks.","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"KinTatHo"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"KinTatHo"},"content":"     * @return A formatted string representing the todo task,","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"KinTatHo"},"content":"     *         prefixed with \"[T]\" to denote a Todo type task.","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"KinTatHo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"KinTatHo"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"KinTatHo"},"content":"    public String toString() {","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"KinTatHo"},"content":"        return \"[T]\" + super.toString(); // Adding the Todo identifier to the string representation","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"KinTatHo"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"KinTatHo":30}},{"path":"src/test/java/yoda/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KinTatHo"},"content":"package yoda.task;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"KinTatHo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"KinTatHo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"KinTatHo"},"content":"public class TaskListTest {","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"KinTatHo"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"KinTatHo"},"content":"    public void addTask_newTask_taskAdded() throws Exception {","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"KinTatHo"},"content":"        TaskList taskList \u003d new TaskList(null);","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"KinTatHo"},"content":"        Todo todo \u003d new Todo(\"Read book\");","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"KinTatHo"},"content":"        taskList.addTask(todo);","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"KinTatHo"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"KinTatHo"},"content":"        assertEquals(todo, taskList.getTask(1));","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"KinTatHo"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"KinTatHo"},"content":"    public void addTask_nullTask_noChange() {","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"KinTatHo"},"content":"        TaskList taskList \u003d new TaskList(null);","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"KinTatHo"},"content":"        taskList.addTask(null);","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"KinTatHo"},"content":"        assertEquals(0, taskList.size());","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"KinTatHo"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"KinTatHo":27}},{"path":"src/test/java/yoda/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KinTatHo"},"content":"package yoda.task;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"KinTatHo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"KinTatHo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"KinTatHo"},"content":"public class TodoTest {","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"KinTatHo"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"KinTatHo"},"content":"    public void todoConstructor_description_correctStringRepresentation() {","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"KinTatHo"},"content":"        String description \u003d \"Read book\";","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"KinTatHo"},"content":"        Todo todo \u003d new Todo(description);","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"KinTatHo"},"content":"        assertEquals(\"[T][ ] Read book\", todo.toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"KinTatHo"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"KinTatHo"},"content":"    public void toString_notDone_todoString() {","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"KinTatHo"},"content":"        Todo todo \u003d new Todo(\"Complete assignment\");","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"KinTatHo"},"content":"        assertEquals(\"[T][ ] Complete assignment\", todo.toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"KinTatHo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"KinTatHo"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"KinTatHo"},"content":"    public void toString_done_todoString() {","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"KinTatHo"},"content":"        Todo todo \u003d new Todo(\"Finish homework\");","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"KinTatHo"},"content":"        todo.markAsDone();","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"KinTatHo"},"content":"        assertEquals(\"[T][X] Finish homework\", todo.toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"KinTatHo"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"KinTatHo"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"KinTatHo":28}},{"path":"text-ui-test/data/yoda.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"KinTatHo"},"content":"T | 1 | read book","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"KinTatHo"},"content":"D | 0 | return book | Jun 6 2024 1800","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"KinTatHo"},"content":"E | 0 | project meeting | Aug 6 2024 1400 to Aug 6 2024 1600","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"KinTatHo"},"content":"T | 1 | join sports club","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"KinTatHo"},"content":"T | 0 | borrow book","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"KinTatHo"},"content":"T | 0 | sleep","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"KinTatHo":6}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"KinTatHo"},"content":"list","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"KinTatHo"},"content":"todo read book","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"KinTatHo"},"content":"mark 1","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"KinTatHo"},"content":"unmark 1","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"KinTatHo"},"content":"deadline return book /by 6 June 2024 1800","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"KinTatHo"},"content":"event project meeting /from 6 Aug 2024 1400 /to 6 Aug 2024 1600","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"KinTatHo"},"content":"todo join sports club","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"KinTatHo"},"content":"todo borrow book","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"KinTatHo"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"KinTatHo"},"content":"mark 1","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"KinTatHo"},"content":"mark 4","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"KinTatHo"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"KinTatHo"},"content":"todo sleep","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"KinTatHo"},"content":"save","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"KinTatHo"},"content":"bye","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"KinTatHo":15}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"KinTatHo"},"content":"java -classpath ..\\bin Yoda \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"KinTatHo":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"KinTatHo"},"content":"java -classpath ../bin Yoda \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":37,"KinTatHo":1}}]
