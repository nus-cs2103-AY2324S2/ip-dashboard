[{"path":"src/main/java/taskList/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xuelinglow"},"content":"package taskList;","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"xuelinglow"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"xuelinglow"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"xuelinglow"},"content":"    protected String byDate;","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"xuelinglow"},"content":"    public Deadline(String item, String byDate) {","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"xuelinglow"},"content":"        super(item);","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"xuelinglow"},"content":"        try {","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"xuelinglow"},"content":"            String[] dateString \u003d byDate.split(\" \", 2);","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"xuelinglow"},"content":"            //LocalDate thedate \u003d LocalDate.parse(dateString[1].trim());","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"xuelinglow"},"content":"            this.byDate \u003d dateString[0].trim() + \": \" + dateString[1].trim();","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"xuelinglow"},"content":"         } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"xuelinglow"},"content":"            throw new ArrayIndexOutOfBoundsException(\"Please enter a date\");","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"xuelinglow"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"xuelinglow"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":20,"author":{"gitId":"xuelinglow"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"xuelinglow"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":22,"author":{"gitId":"xuelinglow"},"content":"        return \"[D]\" + super.toString() + \" (\" + byDate + \")\";","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"xuelinglow"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"xuelinglow"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"xuelinglow":24}},{"path":"src/main/java/taskList/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xuelinglow"},"content":"package taskList;","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"xuelinglow"},"content":"import java.io.EOFException;","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"xuelinglow"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"xuelinglow"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"xuelinglow"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"xuelinglow"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"xuelinglow"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"xuelinglow"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"xuelinglow"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"xuelinglow"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"xuelinglow"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"xuelinglow"},"content":"public class Duke {","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"xuelinglow"},"content":"    //enum to represent different commands","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"xuelinglow"},"content":"    public enum Command {","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"xuelinglow"},"content":"        MARK, UNMARK, TODO, DEADLINE, EVENT, DELETE, LIST, BYE, HELPG, ADD, UNKNOWN","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"xuelinglow"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"xuelinglow"},"content":"    private static Command getCommand(String commandString) {","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"xuelinglow"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"xuelinglow"},"content":"            return Command.valueOf(commandString.toUpperCase());","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"xuelinglow"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"xuelinglow"},"content":"            return Command.UNKNOWN;","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"xuelinglow"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"xuelinglow"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"xuelinglow"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-22"},{"lineNumber":28,"author":{"gitId":"xuelinglow"},"content":"        //introduction text","lastModifiedDate":"2024-01-22"},{"lineNumber":29,"author":{"gitId":"xuelinglow"},"content":"        System.out.println(\"Hello! I\u0027m MichelleBot! What can I do for you? (helpg for guide)\" );","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"xuelinglow"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-22"},{"lineNumber":31,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":32,"author":{"gitId":"xuelinglow"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-22"},{"lineNumber":33,"author":{"gitId":"xuelinglow"},"content":"        boolean isRunning \u003d true;","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"xuelinglow"},"content":"        @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"xuelinglow"},"content":"        ArrayList\u003cTask\u003e theList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-22"},{"lineNumber":37,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"xuelinglow"},"content":"        String dataDirectoryPath \u003d \"./data\";","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"xuelinglow"},"content":"        String dataFilePath \u003d \"./data/duke.ser\";","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"xuelinglow"},"content":"        ","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"xuelinglow"},"content":"        if (!Files.exists(Paths.get(dataDirectoryPath))) {","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"xuelinglow"},"content":"            try {","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"xuelinglow"},"content":"                Files.createDirectories((Paths.get(dataDirectoryPath)));","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"xuelinglow"},"content":"            } catch (Exception e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"xuelinglow"},"content":"                e.printStackTrace();","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"xuelinglow"},"content":"                System.out.println(\"An unexpected error has occurred. \\n\" + e.getMessage() + \"\\nPlease contact the admininstrator\"); ","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"xuelinglow"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"xuelinglow"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"xuelinglow"},"content":"        if (!Files.exists(Paths.get(dataFilePath))) {","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"xuelinglow"},"content":"            try {","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"xuelinglow"},"content":"                Files.createFile(Paths.get(dataFilePath));","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"xuelinglow"},"content":"            } catch (Exception e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"xuelinglow"},"content":"                e.printStackTrace();","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"xuelinglow"},"content":"                System.out.println(\"An unexpected error has occurred. \\n\" + e.getMessage() + \"\\nPlease contact the admininstrator\"); ","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"xuelinglow"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"xuelinglow"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"xuelinglow"},"content":"        try (ObjectInputStream objectInputStream \u003d new ObjectInputStream(new FileInputStream(dataFilePath))) {","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"xuelinglow"},"content":"            Object obj \u003d objectInputStream.readObject();","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"xuelinglow"},"content":"            if (obj instanceof ArrayList) {","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"xuelinglow"},"content":"                theList \u003d (ArrayList\u003cTask\u003e) obj;","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"xuelinglow"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"xuelinglow"},"content":"        } catch (EOFException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"xuelinglow"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":66,"author":{"gitId":"xuelinglow"},"content":"        catch (IOException | ClassNotFoundException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":67,"author":{"gitId":"xuelinglow"},"content":"            e.printStackTrace(); // Handle the exception according to your needs","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"xuelinglow"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":69,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":70,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":71,"author":{"gitId":"xuelinglow"},"content":"        do { //continue the program until \u0027bye\u0027 command is inputted. ","lastModifiedDate":"2024-01-22"},{"lineNumber":72,"author":{"gitId":"xuelinglow"},"content":"            String input \u003d scanner.nextLine().trim();","lastModifiedDate":"2024-01-22"},{"lineNumber":73,"author":{"gitId":"xuelinglow"},"content":"            String[] inputList \u003d input.split(\" \",2);","lastModifiedDate":"2024-01-22"},{"lineNumber":74,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":75,"author":{"gitId":"xuelinglow"},"content":"            if (inputList.length !\u003d 1) { //indicates one of the other commands","lastModifiedDate":"2024-01-22"},{"lineNumber":76,"author":{"gitId":"xuelinglow"},"content":"                switch(getCommand(inputList[0])) {","lastModifiedDate":"2024-01-27"},{"lineNumber":77,"author":{"gitId":"xuelinglow"},"content":"                    //both mark and unmark handle the same exceptions. ","lastModifiedDate":"2024-01-22"},{"lineNumber":78,"author":{"gitId":"xuelinglow"},"content":"                    case MARK: //mark the task","lastModifiedDate":"2024-01-27"},{"lineNumber":79,"author":{"gitId":"xuelinglow"},"content":"                    try {        ","lastModifiedDate":"2024-01-22"},{"lineNumber":80,"author":{"gitId":"xuelinglow"},"content":"                        int number \u003d Integer.parseInt(inputList[1])-1;","lastModifiedDate":"2024-01-22"},{"lineNumber":81,"author":{"gitId":"xuelinglow"},"content":"                        theList.get(number).markItem();","lastModifiedDate":"2024-01-22"},{"lineNumber":82,"author":{"gitId":"xuelinglow"},"content":"                        System.out.println(\"I\u0027ve marked this task as done: \\n\" + theList.get(number));","lastModifiedDate":"2024-01-22"},{"lineNumber":83,"author":{"gitId":"xuelinglow"},"content":"                    } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":84,"author":{"gitId":"xuelinglow"},"content":"                        System.out.println(\"Error: Index is out of bounds. The list currently has \" + theList.size() + \" item(s)\");","lastModifiedDate":"2024-01-22"},{"lineNumber":85,"author":{"gitId":"xuelinglow"},"content":"                    } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":86,"author":{"gitId":"xuelinglow"},"content":"                        System.out.println(\"Error: Input is not a valid numeric value.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":87,"author":{"gitId":"xuelinglow"},"content":"                    } catch (Exception e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":88,"author":{"gitId":"xuelinglow"},"content":"                        e.printStackTrace();","lastModifiedDate":"2024-01-29"},{"lineNumber":89,"author":{"gitId":"xuelinglow"},"content":"                        System.out.println(\"An unexpected errormark has occurred. \\n\" + e.getMessage() + \"\\nPlease contact the admininstrator\"); ","lastModifiedDate":"2024-01-22"},{"lineNumber":90,"author":{"gitId":"xuelinglow"},"content":"                    }","lastModifiedDate":"2024-01-22"},{"lineNumber":91,"author":{"gitId":"xuelinglow"},"content":"                    break;","lastModifiedDate":"2024-01-22"},{"lineNumber":92,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":93,"author":{"gitId":"xuelinglow"},"content":"                    case UNMARK: //unmark the task","lastModifiedDate":"2024-01-27"},{"lineNumber":94,"author":{"gitId":"xuelinglow"},"content":"                        try {","lastModifiedDate":"2024-01-22"},{"lineNumber":95,"author":{"gitId":"xuelinglow"},"content":"                            int number \u003d Integer.parseInt(inputList[1])-1;","lastModifiedDate":"2024-01-22"},{"lineNumber":96,"author":{"gitId":"xuelinglow"},"content":"                            theList.get(number).unmarkItem();","lastModifiedDate":"2024-01-22"},{"lineNumber":97,"author":{"gitId":"xuelinglow"},"content":"                            System.out.println(\"I\u0027ve marked this task as not done yet: \\n\" + theList.get(number));","lastModifiedDate":"2024-01-22"},{"lineNumber":98,"author":{"gitId":"xuelinglow"},"content":"                        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":99,"author":{"gitId":"xuelinglow"},"content":"                            System.out.println(\"Error: Index is out of bounds. The list currently has \" + theList.size() + \" item(s)\");","lastModifiedDate":"2024-01-22"},{"lineNumber":100,"author":{"gitId":"xuelinglow"},"content":"                        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":101,"author":{"gitId":"xuelinglow"},"content":"                            System.out.println(\"Error: Input is not a valid numeric value.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":102,"author":{"gitId":"xuelinglow"},"content":"                        } catch (Exception e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":103,"author":{"gitId":"xuelinglow"},"content":"                            e.printStackTrace();","lastModifiedDate":"2024-01-29"},{"lineNumber":104,"author":{"gitId":"xuelinglow"},"content":"                            System.out.println(\"An unexpected error has occurred. \\n\" + e.getMessage() + \"\\nPlease contact the admininstrator\"); ","lastModifiedDate":"2024-01-22"},{"lineNumber":105,"author":{"gitId":"xuelinglow"},"content":"                        }","lastModifiedDate":"2024-01-22"},{"lineNumber":106,"author":{"gitId":"xuelinglow"},"content":"                        break;","lastModifiedDate":"2024-01-22"},{"lineNumber":107,"author":{"gitId":"xuelinglow"},"content":"                    ","lastModifiedDate":"2024-01-22"},{"lineNumber":108,"author":{"gitId":"xuelinglow"},"content":"                    // add in three types of tasks","lastModifiedDate":"2024-01-22"},{"lineNumber":109,"author":{"gitId":"xuelinglow"},"content":"                    case TODO :","lastModifiedDate":"2024-01-27"},{"lineNumber":110,"author":{"gitId":"xuelinglow"},"content":"                        ToDo newToDo \u003d new ToDo(inputList[1]);","lastModifiedDate":"2024-01-22"},{"lineNumber":111,"author":{"gitId":"xuelinglow"},"content":"                        theList.add(newToDo);","lastModifiedDate":"2024-01-22"},{"lineNumber":112,"author":{"gitId":"xuelinglow"},"content":"                        System.out.println(\"Roger that! I\u0027ve added in this task:\\n \" + newToDo  +\"\\nNow you have \"+ theList.size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":113,"author":{"gitId":"xuelinglow"},"content":"                        break;","lastModifiedDate":"2024-01-22"},{"lineNumber":114,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":115,"author":{"gitId":"xuelinglow"},"content":"                    case DEADLINE: ","lastModifiedDate":"2024-01-27"},{"lineNumber":116,"author":{"gitId":"xuelinglow"},"content":"                        try{","lastModifiedDate":"2024-01-22"},{"lineNumber":117,"author":{"gitId":"xuelinglow"},"content":"                            String[] theParts \u003d inputList[1].split(\"/\",2);","lastModifiedDate":"2024-01-22"},{"lineNumber":118,"author":{"gitId":"xuelinglow"},"content":"                            if (theParts[1].trim().startsWith(\"by\")) {","lastModifiedDate":"2024-01-22"},{"lineNumber":119,"author":{"gitId":"xuelinglow"},"content":"                                try {","lastModifiedDate":"2024-01-22"},{"lineNumber":120,"author":{"gitId":"xuelinglow"},"content":"                                    Deadline newDeadline \u003d new Deadline(theParts[0].trim(), theParts[1].trim());","lastModifiedDate":"2024-01-22"},{"lineNumber":121,"author":{"gitId":"xuelinglow"},"content":"                                    theList.add(newDeadline);","lastModifiedDate":"2024-01-22"},{"lineNumber":122,"author":{"gitId":"xuelinglow"},"content":"                                    System.out.println(\"Roger that! I\u0027ve added in this task:\\n \" + newDeadline  +\"\\nNow you have \"+ theList.size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":123,"author":{"gitId":"xuelinglow"},"content":"                                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":124,"author":{"gitId":"xuelinglow"},"content":"                                    System.out.println(\"Error creating Deadline: \" + e.getMessage());","lastModifiedDate":"2024-01-22"},{"lineNumber":125,"author":{"gitId":"xuelinglow"},"content":"                                } catch (Exception e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":126,"author":{"gitId":"xuelinglow"},"content":"                                    e.printStackTrace();","lastModifiedDate":"2024-01-29"},{"lineNumber":127,"author":{"gitId":"xuelinglow"},"content":"                                    System.out.println(\"Error creating Deadline.\" + e.getMessage());","lastModifiedDate":"2024-01-22"},{"lineNumber":128,"author":{"gitId":"xuelinglow"},"content":"                                    System.out.println(\"Please contact the adminstrator.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":129,"author":{"gitId":"xuelinglow"},"content":"                                }","lastModifiedDate":"2024-01-22"},{"lineNumber":130,"author":{"gitId":"xuelinglow"},"content":"                            } else {","lastModifiedDate":"2024-01-22"},{"lineNumber":131,"author":{"gitId":"xuelinglow"},"content":"                                System.out.println(\"Error: /by cannot be found. Please try again\");","lastModifiedDate":"2024-01-22"},{"lineNumber":132,"author":{"gitId":"xuelinglow"},"content":"                            }","lastModifiedDate":"2024-01-22"},{"lineNumber":133,"author":{"gitId":"xuelinglow"},"content":"                            ","lastModifiedDate":"2024-01-22"},{"lineNumber":134,"author":{"gitId":"xuelinglow"},"content":"                        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":135,"author":{"gitId":"xuelinglow"},"content":"                            System.out.println(\"Error creating Deadline: Please enter a deadline.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":136,"author":{"gitId":"xuelinglow"},"content":"                        } catch (Exception e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":137,"author":{"gitId":"xuelinglow"},"content":"                            e.printStackTrace();","lastModifiedDate":"2024-01-29"},{"lineNumber":138,"author":{"gitId":"xuelinglow"},"content":"                            System.out.println(\"Error creating Deadline.\" + e.getMessage());","lastModifiedDate":"2024-01-22"},{"lineNumber":139,"author":{"gitId":"xuelinglow"},"content":"                            System.out.println(\"Please contact the adminstrator.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":140,"author":{"gitId":"xuelinglow"},"content":"                        }","lastModifiedDate":"2024-01-22"},{"lineNumber":141,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":142,"author":{"gitId":"xuelinglow"},"content":"                        break;","lastModifiedDate":"2024-01-22"},{"lineNumber":143,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":144,"author":{"gitId":"xuelinglow"},"content":"                    case EVENT:","lastModifiedDate":"2024-01-27"},{"lineNumber":145,"author":{"gitId":"xuelinglow"},"content":"                        try{","lastModifiedDate":"2024-01-22"},{"lineNumber":146,"author":{"gitId":"xuelinglow"},"content":"                            String[] theParts \u003d inputList[1].split(\"/\",3);","lastModifiedDate":"2024-01-22"},{"lineNumber":147,"author":{"gitId":"xuelinglow"},"content":"                            if (theParts[1].trim().startsWith(\"from\")) {","lastModifiedDate":"2024-01-22"},{"lineNumber":148,"author":{"gitId":"xuelinglow"},"content":"                                if (theParts[2].trim().startsWith(\"to\")) {","lastModifiedDate":"2024-01-22"},{"lineNumber":149,"author":{"gitId":"xuelinglow"},"content":"                                    try {","lastModifiedDate":"2024-01-22"},{"lineNumber":150,"author":{"gitId":"xuelinglow"},"content":"                                        Event newEvent \u003d new Event(theParts[0].trim(), theParts[1].trim(), theParts[2].trim());","lastModifiedDate":"2024-01-22"},{"lineNumber":151,"author":{"gitId":"xuelinglow"},"content":"                                        theList.add(newEvent);","lastModifiedDate":"2024-01-22"},{"lineNumber":152,"author":{"gitId":"xuelinglow"},"content":"                                        System.out.println(\"Roger that! I\u0027ve added in this task:\\n \" + newEvent  +\"\\nNow you have \"+ theList.size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":153,"author":{"gitId":"xuelinglow"},"content":"                                    } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":154,"author":{"gitId":"xuelinglow"},"content":"                                        System.out.println(\"Error creating Event: \" + e.getMessage());","lastModifiedDate":"2024-01-22"},{"lineNumber":155,"author":{"gitId":"xuelinglow"},"content":"                                    } catch (Exception e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":156,"author":{"gitId":"xuelinglow"},"content":"                                        e.printStackTrace();","lastModifiedDate":"2024-01-29"},{"lineNumber":157,"author":{"gitId":"xuelinglow"},"content":"                                        System.out.println(\"Error creating Event.\" + e.getMessage());","lastModifiedDate":"2024-01-22"},{"lineNumber":158,"author":{"gitId":"xuelinglow"},"content":"                                        System.out.println(\"Please contact the adminstrator.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":159,"author":{"gitId":"xuelinglow"},"content":"                                    }","lastModifiedDate":"2024-01-22"},{"lineNumber":160,"author":{"gitId":"xuelinglow"},"content":"                                } else {","lastModifiedDate":"2024-01-22"},{"lineNumber":161,"author":{"gitId":"xuelinglow"},"content":"                                    System.out.println(\"Error: /to cannot be found. Please try again\");","lastModifiedDate":"2024-01-22"},{"lineNumber":162,"author":{"gitId":"xuelinglow"},"content":"                                }","lastModifiedDate":"2024-01-22"},{"lineNumber":163,"author":{"gitId":"xuelinglow"},"content":"                            } else {","lastModifiedDate":"2024-01-22"},{"lineNumber":164,"author":{"gitId":"xuelinglow"},"content":"                                System.out.println(\"Error: /from cannot be found. Please try again\");","lastModifiedDate":"2024-01-22"},{"lineNumber":165,"author":{"gitId":"xuelinglow"},"content":"                            }","lastModifiedDate":"2024-01-22"},{"lineNumber":166,"author":{"gitId":"xuelinglow"},"content":"                            ","lastModifiedDate":"2024-01-22"},{"lineNumber":167,"author":{"gitId":"xuelinglow"},"content":"                        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":168,"author":{"gitId":"xuelinglow"},"content":"                            System.out.println(\"Error creating Event: Please format the input properly.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":169,"author":{"gitId":"xuelinglow"},"content":"                        } catch (Exception e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":170,"author":{"gitId":"xuelinglow"},"content":"                            e.printStackTrace();","lastModifiedDate":"2024-01-29"},{"lineNumber":171,"author":{"gitId":"xuelinglow"},"content":"                            System.out.println(\"Error creating Event.\" + e.getMessage());","lastModifiedDate":"2024-01-22"},{"lineNumber":172,"author":{"gitId":"xuelinglow"},"content":"                            System.out.println(\"Please contact the adminstrator.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":173,"author":{"gitId":"xuelinglow"},"content":"                        }                      ","lastModifiedDate":"2024-01-22"},{"lineNumber":174,"author":{"gitId":"xuelinglow"},"content":"                        break;                  ","lastModifiedDate":"2024-01-22"},{"lineNumber":175,"author":{"gitId":"xuelinglow"},"content":"                        ","lastModifiedDate":"2024-01-22"},{"lineNumber":176,"author":{"gitId":"xuelinglow"},"content":"                    //delete task from task list","lastModifiedDate":"2024-01-22"},{"lineNumber":177,"author":{"gitId":"xuelinglow"},"content":"                    case DELETE:","lastModifiedDate":"2024-01-27"},{"lineNumber":178,"author":{"gitId":"xuelinglow"},"content":"                        try {","lastModifiedDate":"2024-01-22"},{"lineNumber":179,"author":{"gitId":"xuelinglow"},"content":"                            int number \u003d Integer.parseInt(inputList[1])-1;","lastModifiedDate":"2024-01-22"},{"lineNumber":180,"author":{"gitId":"xuelinglow"},"content":"                            Task removedTask \u003d theList.remove(number);","lastModifiedDate":"2024-01-22"},{"lineNumber":181,"author":{"gitId":"xuelinglow"},"content":"                            System.out.println(\"Roger that! I\u0027ve removed this task:\\n \" + removedTask  +\"\\nNow you have \"+ theList.size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":182,"author":{"gitId":"xuelinglow"},"content":"                        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":183,"author":{"gitId":"xuelinglow"},"content":"                            System.out.println(\"Error: Index is out of bounds. The list currently has \" + theList.size() + \" item(s)\");","lastModifiedDate":"2024-01-22"},{"lineNumber":184,"author":{"gitId":"xuelinglow"},"content":"                        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":185,"author":{"gitId":"xuelinglow"},"content":"                            System.out.println(\"Error: Input is not a valid numeric value.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":186,"author":{"gitId":"xuelinglow"},"content":"                        } catch (Exception e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":187,"author":{"gitId":"xuelinglow"},"content":"                            e.printStackTrace();","lastModifiedDate":"2024-01-29"},{"lineNumber":188,"author":{"gitId":"xuelinglow"},"content":"                            System.out.println(\"An unexpected error has occurred. \\n\" + e.getMessage() + \"\\nPlease contact the admininstrator\"); ","lastModifiedDate":"2024-01-22"},{"lineNumber":189,"author":{"gitId":"xuelinglow"},"content":"                        }","lastModifiedDate":"2024-01-22"},{"lineNumber":190,"author":{"gitId":"xuelinglow"},"content":"                        break;","lastModifiedDate":"2024-01-22"},{"lineNumber":191,"author":{"gitId":"xuelinglow"},"content":"                    ","lastModifiedDate":"2024-01-22"},{"lineNumber":192,"author":{"gitId":"xuelinglow"},"content":"                    // default - add in the task as according to the text input","lastModifiedDate":"2024-01-22"},{"lineNumber":193,"author":{"gitId":"xuelinglow"},"content":"                    case ADD:","lastModifiedDate":"2024-01-27"},{"lineNumber":194,"author":{"gitId":"xuelinglow"},"content":"                        System.out.println(\"I\u0027ve added in this task: \" + inputList[1]);","lastModifiedDate":"2024-01-27"},{"lineNumber":195,"author":{"gitId":"xuelinglow"},"content":"                        theList.add(new Task(inputList[1]));","lastModifiedDate":"2024-01-27"},{"lineNumber":196,"author":{"gitId":"xuelinglow"},"content":"                        System.out.println(\"\\nNow you have \"+ theList.size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":197,"author":{"gitId":"xuelinglow"},"content":"                        break;","lastModifiedDate":"2024-01-27"},{"lineNumber":198,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":199,"author":{"gitId":"xuelinglow"},"content":"                    case UNKNOWN:","lastModifiedDate":"2024-01-27"},{"lineNumber":200,"author":{"gitId":"xuelinglow"},"content":"                        System.out.println(\"Unknown command: \" + inputList[0].toLowerCase());","lastModifiedDate":"2024-01-27"},{"lineNumber":201,"author":{"gitId":"xuelinglow"},"content":"                        break;","lastModifiedDate":"2024-01-27"},{"lineNumber":202,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":203,"author":{"gitId":"xuelinglow"},"content":"                    case HELPG:","lastModifiedDate":"2024-01-27"},{"lineNumber":204,"author":{"gitId":"xuelinglow"},"content":"                    case BYE:","lastModifiedDate":"2024-01-27"},{"lineNumber":205,"author":{"gitId":"xuelinglow"},"content":"                    case LIST:","lastModifiedDate":"2024-01-27"},{"lineNumber":206,"author":{"gitId":"xuelinglow"},"content":"                        System.out.println(\"Unexpected addition text after command\");","lastModifiedDate":"2024-01-27"},{"lineNumber":207,"author":{"gitId":"xuelinglow"},"content":"                        System.out.println(\"Did you mean just \" + getCommand(inputList[0]) + \"?\");","lastModifiedDate":"2024-01-27"},{"lineNumber":208,"author":{"gitId":"xuelinglow"},"content":"                        break;","lastModifiedDate":"2024-01-27"},{"lineNumber":209,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":210,"author":{"gitId":"xuelinglow"},"content":"                } ","lastModifiedDate":"2024-01-22"},{"lineNumber":211,"author":{"gitId":"xuelinglow"},"content":"            } else { //one word command - either list or bye ","lastModifiedDate":"2024-01-22"},{"lineNumber":212,"author":{"gitId":"xuelinglow"},"content":"                switch(getCommand(input)) {","lastModifiedDate":"2024-01-27"},{"lineNumber":213,"author":{"gitId":"xuelinglow"},"content":"                    case BYE:","lastModifiedDate":"2024-01-27"},{"lineNumber":214,"author":{"gitId":"xuelinglow"},"content":"                        System.out.println(\"Bye. Hope to see you again soon! \\\\(^-^)/ \");","lastModifiedDate":"2024-01-22"},{"lineNumber":215,"author":{"gitId":"xuelinglow"},"content":"                        isRunning \u003d false; ","lastModifiedDate":"2024-01-27"},{"lineNumber":216,"author":{"gitId":"xuelinglow"},"content":"                        break;","lastModifiedDate":"2024-01-22"},{"lineNumber":217,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":218,"author":{"gitId":"xuelinglow"},"content":"                    case LIST:","lastModifiedDate":"2024-01-27"},{"lineNumber":219,"author":{"gitId":"xuelinglow"},"content":"                        for (int i \u003d 0; i \u003c theList.size(); i++) {","lastModifiedDate":"2024-01-22"},{"lineNumber":220,"author":{"gitId":"xuelinglow"},"content":"                            int itemNumber \u003d i + 1;","lastModifiedDate":"2024-01-22"},{"lineNumber":221,"author":{"gitId":"xuelinglow"},"content":"                            Task listItem \u003d theList.get(i);","lastModifiedDate":"2024-01-22"},{"lineNumber":222,"author":{"gitId":"xuelinglow"},"content":"                            System.out.println(itemNumber + \". \" + listItem);","lastModifiedDate":"2024-01-22"},{"lineNumber":223,"author":{"gitId":"xuelinglow"},"content":"                        }","lastModifiedDate":"2024-01-22"},{"lineNumber":224,"author":{"gitId":"xuelinglow"},"content":"                        break;","lastModifiedDate":"2024-01-22"},{"lineNumber":225,"author":{"gitId":"xuelinglow"},"content":"                    ","lastModifiedDate":"2024-01-22"},{"lineNumber":226,"author":{"gitId":"xuelinglow"},"content":"                    // incorrect inputs by user - other commands","lastModifiedDate":"2024-01-22"},{"lineNumber":227,"author":{"gitId":"xuelinglow"},"content":"                    case TODO:","lastModifiedDate":"2024-01-27"},{"lineNumber":228,"author":{"gitId":"xuelinglow"},"content":"                    case EVENT:","lastModifiedDate":"2024-01-27"},{"lineNumber":229,"author":{"gitId":"xuelinglow"},"content":"                    case DEADLINE:","lastModifiedDate":"2024-01-27"},{"lineNumber":230,"author":{"gitId":"xuelinglow"},"content":"                    case ADD:","lastModifiedDate":"2024-01-27"},{"lineNumber":231,"author":{"gitId":"xuelinglow"},"content":"                        System.out.println(\"You have to enter more information :( refer to helpg for more details. \");","lastModifiedDate":"2024-01-27"},{"lineNumber":232,"author":{"gitId":"xuelinglow"},"content":"                        break;","lastModifiedDate":"2024-01-22"},{"lineNumber":233,"author":{"gitId":"xuelinglow"},"content":"                    ","lastModifiedDate":"2024-01-22"},{"lineNumber":234,"author":{"gitId":"xuelinglow"},"content":"                    case MARK:","lastModifiedDate":"2024-01-27"},{"lineNumber":235,"author":{"gitId":"xuelinglow"},"content":"                    case UNMARK:","lastModifiedDate":"2024-01-27"},{"lineNumber":236,"author":{"gitId":"xuelinglow"},"content":"                    case DELETE:","lastModifiedDate":"2024-01-27"},{"lineNumber":237,"author":{"gitId":"xuelinglow"},"content":"                        System.out.println(\"Let me know the index number!\");","lastModifiedDate":"2024-01-22"},{"lineNumber":238,"author":{"gitId":"xuelinglow"},"content":"                        break;","lastModifiedDate":"2024-01-22"},{"lineNumber":239,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":240,"author":{"gitId":"xuelinglow"},"content":"                    case HELPG:","lastModifiedDate":"2024-01-27"},{"lineNumber":241,"author":{"gitId":"xuelinglow"},"content":"                        System.out.println(\"Type in text to add in a task to your list\\n\"+","lastModifiedDate":"2024-01-27"},{"lineNumber":242,"author":{"gitId":"xuelinglow"},"content":"                        \"Other commands:\\n\" +","lastModifiedDate":"2024-01-27"},{"lineNumber":243,"author":{"gitId":"xuelinglow"},"content":"                        \"add [task] - adds a task to the task list\\n\" +","lastModifiedDate":"2024-01-27"},{"lineNumber":244,"author":{"gitId":"xuelinglow"},"content":"                        \"mark [input number] - mark a task as done\\n\" +","lastModifiedDate":"2024-01-27"},{"lineNumber":245,"author":{"gitId":"xuelinglow"},"content":"                        \"unmark [input number] - unmark a task as undone\\n\" +","lastModifiedDate":"2024-01-27"},{"lineNumber":246,"author":{"gitId":"xuelinglow"},"content":"                        \"todo [task] - add a TODO task to your list\\n\" +","lastModifiedDate":"2024-01-27"},{"lineNumber":247,"author":{"gitId":"xuelinglow"},"content":"                        \"deadline [task] /by [deadline] - add a DEADLINE to your list\\n\" + ","lastModifiedDate":"2024-01-27"},{"lineNumber":248,"author":{"gitId":"xuelinglow"},"content":"                        \"event [task] /from [date] /to [date] - add an EVENT to your list\\n\" + ","lastModifiedDate":"2024-01-27"},{"lineNumber":249,"author":{"gitId":"xuelinglow"},"content":"                        \"delete [input number] - delete a task from task list\\n\" +","lastModifiedDate":"2024-01-27"},{"lineNumber":250,"author":{"gitId":"xuelinglow"},"content":"                        \"list - list out the current tasks you have\\n\" +","lastModifiedDate":"2024-01-27"},{"lineNumber":251,"author":{"gitId":"xuelinglow"},"content":"                        \"bye - exit the program \");","lastModifiedDate":"2024-01-27"},{"lineNumber":252,"author":{"gitId":"xuelinglow"},"content":"                        break;","lastModifiedDate":"2024-01-27"},{"lineNumber":253,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":254,"author":{"gitId":"xuelinglow"},"content":"                    case UNKNOWN:","lastModifiedDate":"2024-01-27"},{"lineNumber":255,"author":{"gitId":"xuelinglow"},"content":"                        System.out.println(\"Unknown command: \" + inputList[0].toLowerCase() + \"\\nPlease try again.\");","lastModifiedDate":"2024-01-27"},{"lineNumber":256,"author":{"gitId":"xuelinglow"},"content":"                        break;","lastModifiedDate":"2024-01-27"},{"lineNumber":257,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":258,"author":{"gitId":"xuelinglow"},"content":"                }","lastModifiedDate":"2024-01-22"},{"lineNumber":259,"author":{"gitId":"xuelinglow"},"content":"            }","lastModifiedDate":"2024-01-22"},{"lineNumber":260,"author":{"gitId":"xuelinglow"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-22"},{"lineNumber":261,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":262,"author":{"gitId":"xuelinglow"},"content":"            try (ObjectOutputStream objectOutputStream \u003d new ObjectOutputStream(new FileOutputStream(dataFilePath))) {","lastModifiedDate":"2024-01-29"},{"lineNumber":263,"author":{"gitId":"xuelinglow"},"content":"                objectOutputStream.writeObject(theList);","lastModifiedDate":"2024-01-29"},{"lineNumber":264,"author":{"gitId":"xuelinglow"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":265,"author":{"gitId":"xuelinglow"},"content":"                e.printStackTrace();","lastModifiedDate":"2024-01-29"},{"lineNumber":266,"author":{"gitId":"xuelinglow"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":267,"author":{"gitId":"xuelinglow"},"content":"    ","lastModifiedDate":"2024-01-29"},{"lineNumber":268,"author":{"gitId":"xuelinglow"},"content":"        } while (isRunning);","lastModifiedDate":"2024-01-27"},{"lineNumber":269,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":270,"author":{"gitId":"xuelinglow"},"content":"        scanner.close();","lastModifiedDate":"2024-01-22"},{"lineNumber":271,"author":{"gitId":"xuelinglow"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":272,"author":{"gitId":"xuelinglow"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"xuelinglow":272}},{"path":"src/main/java/taskList/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xuelinglow"},"content":"package taskList;","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"xuelinglow"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"xuelinglow"},"content":"    protected String fromDate;","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"xuelinglow"},"content":"    protected String toDate;","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"xuelinglow"},"content":"    public Event(String item, String fromDate, String toDate) {","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"xuelinglow"},"content":"        super(item);","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"xuelinglow"},"content":"        try {","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"xuelinglow"},"content":"            String[] fromDateString \u003d fromDate.split(\" \",2);","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"xuelinglow"},"content":"            this.fromDate \u003d fromDateString[1].trim();","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"xuelinglow"},"content":"            String[] toDateString \u003d toDate.split(\" \",2);","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"xuelinglow"},"content":"            this.toDate \u003d toDateString[1].trim();","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"xuelinglow"},"content":"         } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"xuelinglow"},"content":"            throw new ArrayIndexOutOfBoundsException(\"Please enter a date\");","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"xuelinglow"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"xuelinglow"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":20,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"xuelinglow"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":22,"author":{"gitId":"xuelinglow"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"xuelinglow"},"content":"        return \"[E]\" + super.toString()  + \" (from: \" + fromDate + \" to: \" + toDate + \")\";","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"xuelinglow"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"xuelinglow"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"xuelinglow":25}},{"path":"src/main/java/taskList/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xuelinglow"},"content":"package taskList;","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"xuelinglow"},"content":"import java.io.Serializable;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"xuelinglow"},"content":"public class Task implements Serializable {","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"xuelinglow"},"content":"    protected String item;","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"xuelinglow"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"xuelinglow"},"content":"    public Task(String item) {","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"xuelinglow"},"content":"        this.item \u003d item;","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"xuelinglow"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"xuelinglow"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"xuelinglow"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"xuelinglow"},"content":"        return (isDone ? \"X\" : \" \"); ","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"xuelinglow"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"xuelinglow"},"content":"    public void markItem(){","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"xuelinglow"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-22"},{"lineNumber":20,"author":{"gitId":"xuelinglow"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":22,"author":{"gitId":"xuelinglow"},"content":"    public void unmarkItem(){","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"xuelinglow"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"xuelinglow"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":26,"author":{"gitId":"xuelinglow"},"content":"    public String toString(){","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"xuelinglow"},"content":"        return \"[\" + getStatusIcon() + \"] \" + item;","lastModifiedDate":"2024-01-22"},{"lineNumber":28,"author":{"gitId":"xuelinglow"},"content":"    }  ","lastModifiedDate":"2024-01-22"},{"lineNumber":29,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":30,"author":{"gitId":"xuelinglow"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"xuelinglow":30}},{"path":"src/main/java/taskList/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xuelinglow"},"content":"package taskList;","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"xuelinglow"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"xuelinglow"},"content":"    public ToDo(String item) {","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"xuelinglow"},"content":"        super(item);","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"xuelinglow"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"xuelinglow"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"xuelinglow"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"xuelinglow"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"xuelinglow"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"xuelinglow"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"xuelinglow":14}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"xuelinglow"},"content":"add read book","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"xuelinglow"},"content":"todo borrow book","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"xuelinglow"},"content":"deadline return book /by 20-11-2020 1200","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"xuelinglow"},"content":"event project meeting /from 20-11-2023 1200 /to 21-11-2023 2359","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"xuelinglow"},"content":"list","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"xuelinglow"},"content":"mark 1","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"xuelinglow"},"content":"mark 2","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"xuelinglow"},"content":"list","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"xuelinglow"},"content":"unmark 1","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"xuelinglow"},"content":"list","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"xuelinglow"},"content":"delete 1","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"xuelinglow"},"content":"list","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"xuelinglow"},"content":"helpg","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"xuelinglow"},"content":"bye","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"xuelinglow":14}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"xuelinglow"},"content":"javac  -cp ..\\src\\main\\java\\taskList -Xlint:none -d ..\\bin ..\\src\\main\\java\\taskList\\*.java","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"xuelinglow"},"content":"java -classpath ..\\bin taskList.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"xuelinglow":2,"-":19}}]
