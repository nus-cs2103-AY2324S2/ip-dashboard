[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"Teee728"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"Teee728"},"content":"}","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"Teee728"},"content":"checkstyle {","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"Teee728"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"Teee728"},"content":"java {","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"Teee728"},"content":"    toolchain {","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"Teee728"},"content":"        languageVersion \u003d JavaLanguageVersion.of(11) //added this","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"Teee728"},"content":"}","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":25,"author":{"gitId":"Teee728"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"Teee728"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"Teee728"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"Teee728"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"Teee728"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"Teee728"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"Teee728"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"Teee728"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"Teee728"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"Teee728"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"Teee728"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"Teee728"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"Teee728"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"Teee728"},"content":"    //mainClass.set(\"seedu.duke.ui.Launcher\") //mainClassName","lastModifiedDate":"2024-02-13"},{"lineNumber":58,"author":{"gitId":"Teee728"},"content":"    mainClassName \u003d \"seedu.duke.ui.Launcher\"","lastModifiedDate":"2024-02-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"Teee728"},"content":"    archiveBaseName \u003d \"duke.ui.Launcher\"","lastModifiedDate":"2024-02-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":65,"author":{"gitId":"Teee728"},"content":"    archiveFileName \u003d \u0027duke.ui.Launcher.jar\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":70,"author":{"gitId":"Teee728"},"content":"    enableAssertions \u003d true;","lastModifiedDate":"2024-02-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Teee728":31,"-":40}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke User Guide","lastModifiedDate":"2024-01-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Update the title above to match the actual product name","lastModifiedDate":"2024-01-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"Teee728"},"content":"![image](https://github.com/Teee728/ip/assets/122243742/7b3801b4-c1c2-45f5-af69-5b14ca533e37)","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"// Product intro goes here","lastModifiedDate":"2024-01-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-01-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-01-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-01-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2024-01-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"## Feature ABC","lastModifiedDate":"2024-01-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"## Feature XYZ","lastModifiedDate":"2024-01-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07"}],"authorContributionMap":{"Teee728":1,"-":30}},{"path":"src/main/java/cruisey/Cruisey.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Teee728"},"content":"package cruisey;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Teee728"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"Teee728"},"content":"import cruisey.command.Parser;","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"Teee728"},"content":"import cruisey.exception.CruiseyException;","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"Teee728"},"content":"import cruisey.storage.Storage;","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"Teee728"},"content":"import cruisey.task.TaskList;","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"Teee728"},"content":"import cruisey.ui.Ui;","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"Teee728"},"content":"import javafx.application.Platform;","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Teee728"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"Teee728"},"content":" * The Duke class represents the main class for the Duke application.","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"Teee728"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"Teee728"},"content":"public class Cruisey {","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"Teee728"},"content":"    private Storage storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"Teee728"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Teee728"},"content":"    private Ui ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"Teee728"},"content":"     * Constructs a Duke object.","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"Teee728"},"content":"    public Cruisey() {","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"Teee728"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"Teee728"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"Teee728"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"Teee728"},"content":"            tasks \u003d new TaskList(storage.load(), ui);","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"Teee728"},"content":"            assert tasks !\u003d null : \"TaskList should not be null after loading.\";","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"Teee728"},"content":"        } catch (CruiseyException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"Teee728"},"content":"            ui.showLoadingError();","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"Teee728"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"Teee728"},"content":"            assert tasks !\u003d null : \"TaskList should not be null after initializing.\";","lastModifiedDate":"2024-02-14"},{"lineNumber":34,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"Teee728"},"content":"     * Runs the Duke application.","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"Teee728"},"content":"    public void run() {","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"Teee728"},"content":"        ui.showWelcomeMessage();","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"Teee728"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"Teee728"},"content":"        Parser parser \u003d new Parser(tasks, storage, scanner, true);","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"Teee728"},"content":"        while (parser.getRunningStatus()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"Teee728"},"content":"            String input \u003d scanner.nextLine().trim();","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"Teee728"},"content":"            parser.setCommand(input);","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"Teee728"},"content":"            try {","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"Teee728"},"content":"                parser.processCommand();","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"Teee728"},"content":"            } catch (CruiseyException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":52,"author":{"gitId":"Teee728"},"content":"                throw new RuntimeException(e);","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"Teee728"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"Teee728"},"content":"        scanner.close();","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"Teee728"},"content":"        Platform.exit(); // Close the application","lastModifiedDate":"2024-02-08"},{"lineNumber":58,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"Teee728"},"content":"     * The main method to start the Duke application.","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"Teee728"},"content":"     * @param args Command-line arguments.","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"Teee728"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"Teee728"},"content":"        Cruisey cruisey \u003d new Cruisey();","lastModifiedDate":"2024-02-22"},{"lineNumber":67,"author":{"gitId":"Teee728"},"content":"        assert cruisey !\u003d null : \"Duke instance should not be null after initialization.\";","lastModifiedDate":"2024-02-22"},{"lineNumber":68,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":69,"author":{"gitId":"Teee728"},"content":"        cruisey.run(); //\"./data/tasks.txt\"","lastModifiedDate":"2024-02-22"},{"lineNumber":70,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":71,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":72,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":73,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":74,"author":{"gitId":"Teee728"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2024-02-07"},{"lineNumber":75,"author":{"gitId":"Teee728"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2024-02-07"},{"lineNumber":76,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":77,"author":{"gitId":"Teee728"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-02-07"},{"lineNumber":78,"author":{"gitId":"Teee728"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":79,"author":{"gitId":"Teee728"},"content":"            // Initialize a new Parser","lastModifiedDate":"2024-02-07"},{"lineNumber":80,"author":{"gitId":"Teee728"},"content":"            Parser parser \u003d new Parser(tasks, storage, new Scanner(System.in), true);","lastModifiedDate":"2024-02-07"},{"lineNumber":81,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":82,"author":{"gitId":"Teee728"},"content":"            // Set the command to be processed by the parser","lastModifiedDate":"2024-02-07"},{"lineNumber":83,"author":{"gitId":"Teee728"},"content":"            parser.setCommand(input);","lastModifiedDate":"2024-02-07"},{"lineNumber":84,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":85,"author":{"gitId":"Teee728"},"content":"            // Process the command","lastModifiedDate":"2024-02-07"},{"lineNumber":86,"author":{"gitId":"Teee728"},"content":"            parser.processCommand();","lastModifiedDate":"2024-02-07"},{"lineNumber":87,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":88,"author":{"gitId":"Teee728"},"content":"            // Return the response generated by the parser","lastModifiedDate":"2024-02-07"},{"lineNumber":89,"author":{"gitId":"Teee728"},"content":"            return parser.getResponse();","lastModifiedDate":"2024-02-07"},{"lineNumber":90,"author":{"gitId":"Teee728"},"content":"        } catch (CruiseyException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":91,"author":{"gitId":"Teee728"},"content":"            return \"Uhhh, \" + e.getMessage();","lastModifiedDate":"2024-02-15"},{"lineNumber":92,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":93,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"Teee728"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Teee728":94}},{"path":"src/main/java/cruisey/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Teee728"},"content":"package cruisey;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"Teee728"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"Teee728"},"content":"import cruisey.ui.MainWindow;","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"Teee728"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"Teee728"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"Teee728"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"Teee728"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"Teee728"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"Teee728"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"Teee728"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"Teee728"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"Teee728"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"Teee728"},"content":"    private Cruisey cruisey \u003d new Cruisey();","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"Teee728"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"Teee728"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"Teee728"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"Teee728"},"content":"            stage.setTitle(\"Cruisey\");","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"Teee728"},"content":"            stage.show();","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"Teee728"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"Teee728"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"Teee728"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"Teee728"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"Teee728"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(cruisey);","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"Teee728"},"content":"            stage.show();","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"Teee728"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"Teee728"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"Teee728"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"Teee728":35}},{"path":"src/main/java/cruisey/command/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Teee728"},"content":"package cruisey.command;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"Teee728"},"content":"import static com.sun.javafx.application.PlatformImpl.exit;","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Teee728"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"Teee728"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"Teee728"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"Teee728"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"Teee728"},"content":"import cruisey.exception.CruiseyException;","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"Teee728"},"content":"import cruisey.storage.Storage;","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"Teee728"},"content":"import cruisey.task.Deadline;","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"Teee728"},"content":"import cruisey.task.Event;","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"Teee728"},"content":"import cruisey.task.Task;","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"Teee728"},"content":"import cruisey.task.TaskList;","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"Teee728"},"content":"import cruisey.task.TaskPriority;","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"Teee728"},"content":"import cruisey.task.ToDo;","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"Teee728"},"content":"import cruisey.ui.Ui;","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"Teee728"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"Teee728"},"content":"import javafx.util.Duration;","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"Teee728"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"Teee728"},"content":" * The Parser class handles the parsing of user commands and executes corresponding actions.","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"Teee728"},"content":" * It interacts with the TaskList, Storage, and Ui classes to perform operations like adding tasks,","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"Teee728"},"content":" * marking tasks as done, deleting tasks, and displaying the task list.","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"Teee728"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"Teee728"},"content":"public class Parser {","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"Teee728"},"content":"    static final int VALID_COMMAND_LENGTH \u003d 1;","lastModifiedDate":"2024-02-15"},{"lineNumber":29,"author":{"gitId":"Teee728"},"content":"    static final int FULL_TODO_COMMAND_LENGTH \u003d 5;","lastModifiedDate":"2024-02-15"},{"lineNumber":30,"author":{"gitId":"Teee728"},"content":"    static final int FULL_FIND_COMMAND_LENGTH \u003d 5;","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"Teee728"},"content":"    protected Storage storage;","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"Teee728"},"content":"    protected Scanner scanner;","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"Teee728"},"content":"    protected boolean isRunning;","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"Teee728"},"content":"    private String command;","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"Teee728"},"content":"    private boolean hasChanged \u003d false;","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"Teee728"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"Teee728"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"Teee728"},"content":"    private String response;","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"Teee728"},"content":"     * Constructs a Parser instance with the specified TaskList, Storage, Scanner, and running status.","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"Teee728"},"content":"     * @param tasks     The TaskList to be managed by the parser.","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"Teee728"},"content":"     * @param storage   The Storage object to handle data storage and retrieval.","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"Teee728"},"content":"     * @param scanner   The Scanner object to read user input.","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"Teee728"},"content":"     * @param isRunning The initial running status of the parser.","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"Teee728"},"content":"    public Parser(TaskList tasks, Storage storage, Scanner scanner, boolean isRunning) {","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"Teee728"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"Teee728"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"Teee728"},"content":"        this.scanner \u003d scanner;","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"Teee728"},"content":"        this.isRunning \u003d isRunning;","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"Teee728"},"content":"     * Gets the running status of the parser.","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"Teee728"},"content":"     * @return True if the parser is running, false otherwise.","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"Teee728"},"content":"    public boolean getRunningStatus() {","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"Teee728"},"content":"        return this.isRunning;","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"Teee728"},"content":"     * Sets the command to be processed by the parser.","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"Teee728"},"content":"     * @param command The user command to be processed.","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"Teee728"},"content":"    public void setCommand(String command) {","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"Teee728"},"content":"        this.command \u003d command;","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"Teee728"},"content":"     * Processes the user command by splitting it into words, executing the corresponding action,","lastModifiedDate":"2024-02-15"},{"lineNumber":74,"author":{"gitId":"Teee728"},"content":"     * and handling any exceptions that may occur. The processed response is then printed with","lastModifiedDate":"2024-02-15"},{"lineNumber":75,"author":{"gitId":"Teee728"},"content":"     * appropriate formatting.","lastModifiedDate":"2024-02-15"},{"lineNumber":76,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"Teee728"},"content":"     * @throws CruiseyException If there is an issue processing the command.","lastModifiedDate":"2024-02-22"},{"lineNumber":78,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"Teee728"},"content":"    public void processCommand() throws CruiseyException {","lastModifiedDate":"2024-02-22"},{"lineNumber":80,"author":{"gitId":"Teee728"},"content":"        String[] words \u003d command.split(\"\\\\s+\");","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"Teee728"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"Teee728"},"content":"            ui.printDashes();","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"Teee728"},"content":"            handleCommand(words);","lastModifiedDate":"2024-02-15"},{"lineNumber":84,"author":{"gitId":"Teee728"},"content":"        } catch (CruiseyException | IOException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":85,"author":{"gitId":"Teee728"},"content":"            handleError(e);","lastModifiedDate":"2024-02-15"},{"lineNumber":86,"author":{"gitId":"Teee728"},"content":"        } finally {","lastModifiedDate":"2024-02-15"},{"lineNumber":87,"author":{"gitId":"Teee728"},"content":"            ui.printDashes();","lastModifiedDate":"2024-02-15"},{"lineNumber":88,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":89,"author":{"gitId":"Teee728"},"content":"        assert response !\u003d null : \"Response should not be null after processing the command.\";","lastModifiedDate":"2024-02-15"},{"lineNumber":90,"author":{"gitId":"Teee728"},"content":"        assert isRunning \u003d\u003d false || isRunning \u003d\u003d true : \"Running status should be either true or false.\";","lastModifiedDate":"2024-02-15"},{"lineNumber":91,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":92,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":93,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":94,"author":{"gitId":"Teee728"},"content":"     * Handles the specific user command by identifying the first word and dispatching","lastModifiedDate":"2024-02-15"},{"lineNumber":95,"author":{"gitId":"Teee728"},"content":"     * the execution to the corresponding method.","lastModifiedDate":"2024-02-15"},{"lineNumber":96,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":97,"author":{"gitId":"Teee728"},"content":"     * @param words An array of words obtained by splitting the user command.","lastModifiedDate":"2024-02-15"},{"lineNumber":98,"author":{"gitId":"Teee728"},"content":"     * @throws CruiseyException If there is an issue handling the command.","lastModifiedDate":"2024-02-22"},{"lineNumber":99,"author":{"gitId":"Teee728"},"content":"     * @throws IOException  If an I/O error occurs during command execution.","lastModifiedDate":"2024-02-15"},{"lineNumber":100,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":101,"author":{"gitId":"Teee728"},"content":"    private void handleCommand(String[] words) throws CruiseyException, IOException {","lastModifiedDate":"2024-02-22"},{"lineNumber":102,"author":{"gitId":"Teee728"},"content":"        final String firstWord \u003d words[0].toLowerCase();","lastModifiedDate":"2024-02-15"},{"lineNumber":103,"author":{"gitId":"Teee728"},"content":"        switch (firstWord) {","lastModifiedDate":"2024-02-15"},{"lineNumber":104,"author":{"gitId":"Teee728"},"content":"        case \"bye\":","lastModifiedDate":"2024-01-31"},{"lineNumber":105,"author":{"gitId":"Teee728"},"content":"            handleByeCommand();","lastModifiedDate":"2024-02-15"},{"lineNumber":106,"author":{"gitId":"Teee728"},"content":"            exitWithDelay();","lastModifiedDate":"2024-02-22"},{"lineNumber":107,"author":{"gitId":"Teee728"},"content":"            break;","lastModifiedDate":"2024-01-31"},{"lineNumber":108,"author":{"gitId":"Teee728"},"content":"        case \"list\":","lastModifiedDate":"2024-01-31"},{"lineNumber":109,"author":{"gitId":"Teee728"},"content":"            handleListCommand();","lastModifiedDate":"2024-02-15"},{"lineNumber":110,"author":{"gitId":"Teee728"},"content":"            break;","lastModifiedDate":"2024-01-31"},{"lineNumber":111,"author":{"gitId":"Teee728"},"content":"        case \"mark\":","lastModifiedDate":"2024-01-31"},{"lineNumber":112,"author":{"gitId":"Teee728"},"content":"            handleMarkCommand(words);","lastModifiedDate":"2024-02-15"},{"lineNumber":113,"author":{"gitId":"Teee728"},"content":"            break;","lastModifiedDate":"2024-02-15"},{"lineNumber":114,"author":{"gitId":"Teee728"},"content":"        case \"unmark\":","lastModifiedDate":"2024-02-15"},{"lineNumber":115,"author":{"gitId":"Teee728"},"content":"            handleUnmarkCommand(words);","lastModifiedDate":"2024-02-15"},{"lineNumber":116,"author":{"gitId":"Teee728"},"content":"            break;","lastModifiedDate":"2024-02-15"},{"lineNumber":117,"author":{"gitId":"Teee728"},"content":"        case \"delete\":","lastModifiedDate":"2024-02-15"},{"lineNumber":118,"author":{"gitId":"Teee728"},"content":"            handleDeleteCommand(words);","lastModifiedDate":"2024-02-15"},{"lineNumber":119,"author":{"gitId":"Teee728"},"content":"            break;","lastModifiedDate":"2024-02-15"},{"lineNumber":120,"author":{"gitId":"Teee728"},"content":"        case \"todo\":","lastModifiedDate":"2024-02-15"},{"lineNumber":121,"author":{"gitId":"Teee728"},"content":"            handleToDoCommand();","lastModifiedDate":"2024-02-15"},{"lineNumber":122,"author":{"gitId":"Teee728"},"content":"            break;","lastModifiedDate":"2024-02-15"},{"lineNumber":123,"author":{"gitId":"Teee728"},"content":"        case \"deadline\":","lastModifiedDate":"2024-02-15"},{"lineNumber":124,"author":{"gitId":"Teee728"},"content":"            handleDeadlineCommand(words);","lastModifiedDate":"2024-02-15"},{"lineNumber":125,"author":{"gitId":"Teee728"},"content":"            break;","lastModifiedDate":"2024-02-15"},{"lineNumber":126,"author":{"gitId":"Teee728"},"content":"        case \"event\":","lastModifiedDate":"2024-02-15"},{"lineNumber":127,"author":{"gitId":"Teee728"},"content":"            handleEventCommand(words);","lastModifiedDate":"2024-02-15"},{"lineNumber":128,"author":{"gitId":"Teee728"},"content":"            break;","lastModifiedDate":"2024-02-15"},{"lineNumber":129,"author":{"gitId":"Teee728"},"content":"        case \"find\":","lastModifiedDate":"2024-02-15"},{"lineNumber":130,"author":{"gitId":"Teee728"},"content":"            handleFindCommand();","lastModifiedDate":"2024-02-15"},{"lineNumber":131,"author":{"gitId":"Teee728"},"content":"            break;","lastModifiedDate":"2024-02-15"},{"lineNumber":132,"author":{"gitId":"Teee728"},"content":"        default:","lastModifiedDate":"2024-02-15"},{"lineNumber":133,"author":{"gitId":"Teee728"},"content":"            handleDefaultCommand();","lastModifiedDate":"2024-02-15"},{"lineNumber":134,"author":{"gitId":"Teee728"},"content":"            break;","lastModifiedDate":"2024-02-15"},{"lineNumber":135,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":136,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":137,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":138,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":139,"author":{"gitId":"Teee728"},"content":"     * Exits the application after introducing a delay.","lastModifiedDate":"2024-02-22"},{"lineNumber":140,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":141,"author":{"gitId":"Teee728"},"content":"     * This method schedules the exit code to run on the JavaFX Application Thread","lastModifiedDate":"2024-02-22"},{"lineNumber":142,"author":{"gitId":"Teee728"},"content":"     * after a specified delay using a {@link PauseTransition}.","lastModifiedDate":"2024-02-22"},{"lineNumber":143,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":144,"author":{"gitId":"Teee728"},"content":"     * Note: The delay is set to 2 seconds (2000 milliseconds) by default.","lastModifiedDate":"2024-02-22"},{"lineNumber":145,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":146,"author":{"gitId":"Teee728"},"content":"    private void exitWithDelay() {","lastModifiedDate":"2024-02-22"},{"lineNumber":147,"author":{"gitId":"Teee728"},"content":"        Duration delayDuration \u003d Duration.seconds(2);","lastModifiedDate":"2024-02-22"},{"lineNumber":148,"author":{"gitId":"Teee728"},"content":"        PauseTransition pause \u003d new PauseTransition(delayDuration);","lastModifiedDate":"2024-02-22"},{"lineNumber":149,"author":{"gitId":"Teee728"},"content":"        pause.setOnFinished(event -\u003e exit());","lastModifiedDate":"2024-02-22"},{"lineNumber":150,"author":{"gitId":"Teee728"},"content":"        pause.play();","lastModifiedDate":"2024-02-22"},{"lineNumber":151,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":152,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":153,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":154,"author":{"gitId":"Teee728"},"content":"     * Handles the \u0027bye\u0027 command, sets the response to the goodbye message, and marks the application","lastModifiedDate":"2024-02-15"},{"lineNumber":155,"author":{"gitId":"Teee728"},"content":"     * as not running.","lastModifiedDate":"2024-02-15"},{"lineNumber":156,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":157,"author":{"gitId":"Teee728"},"content":"    private void handleByeCommand() {","lastModifiedDate":"2024-02-15"},{"lineNumber":158,"author":{"gitId":"Teee728"},"content":"        this.response \u003d ui.showGoodbyeMessage();","lastModifiedDate":"2024-02-15"},{"lineNumber":159,"author":{"gitId":"Teee728"},"content":"        isRunning \u003d false;","lastModifiedDate":"2024-02-15"},{"lineNumber":160,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":161,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":162,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":163,"author":{"gitId":"Teee728"},"content":"     * Handles the \u0027list\u0027 command, sets the response to the formatted task list, and prints the","lastModifiedDate":"2024-02-15"},{"lineNumber":164,"author":{"gitId":"Teee728"},"content":"     * number of tasks.","lastModifiedDate":"2024-02-15"},{"lineNumber":165,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":166,"author":{"gitId":"Teee728"},"content":"     * @throws CruiseyException If there is an issue handling the \u0027list\u0027 command.","lastModifiedDate":"2024-02-22"},{"lineNumber":167,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":168,"author":{"gitId":"Teee728"},"content":"    private void handleListCommand() throws CruiseyException {","lastModifiedDate":"2024-02-22"},{"lineNumber":169,"author":{"gitId":"Teee728"},"content":"        this.response \u003d Ui.showTaskList(tasks) + \"\\n\" + TaskList.getList(tasks);","lastModifiedDate":"2024-02-15"},{"lineNumber":170,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":171,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":172,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":173,"author":{"gitId":"Teee728"},"content":"     * Handles the \u0027mark\u0027 command by updating the status of a task to done, saves the tasks, and sets","lastModifiedDate":"2024-02-15"},{"lineNumber":174,"author":{"gitId":"Teee728"},"content":"     * the hasChanged flag.","lastModifiedDate":"2024-02-15"},{"lineNumber":175,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":176,"author":{"gitId":"Teee728"},"content":"     * @param words An array of words obtained by splitting the user command.","lastModifiedDate":"2024-02-15"},{"lineNumber":177,"author":{"gitId":"Teee728"},"content":"     * @throws IOException  If an I/O error occurs during command execution.","lastModifiedDate":"2024-02-15"},{"lineNumber":178,"author":{"gitId":"Teee728"},"content":"     * @throws CruiseyException If there is an issue handling the \u0027mark\u0027 command.","lastModifiedDate":"2024-02-22"},{"lineNumber":179,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":180,"author":{"gitId":"Teee728"},"content":"    private void handleMarkCommand(String[] words) throws IOException, CruiseyException {","lastModifiedDate":"2024-02-22"},{"lineNumber":181,"author":{"gitId":"Teee728"},"content":"        if (words.length \u003c\u003d VALID_COMMAND_LENGTH) {","lastModifiedDate":"2024-02-15"},{"lineNumber":182,"author":{"gitId":"Teee728"},"content":"            String error \u003d \"mark what? Please re-enter correctly with the task number!\";","lastModifiedDate":"2024-02-15"},{"lineNumber":183,"author":{"gitId":"Teee728"},"content":"            Ui.showError(error);","lastModifiedDate":"2024-02-15"},{"lineNumber":184,"author":{"gitId":"Teee728"},"content":"            this.response \u003d error;","lastModifiedDate":"2024-02-15"},{"lineNumber":185,"author":{"gitId":"Teee728"},"content":"            return;","lastModifiedDate":"2024-02-15"},{"lineNumber":186,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":187,"author":{"gitId":"Teee728"},"content":"        int taskNumber \u003d Integer.parseInt(words[1]) - 1;","lastModifiedDate":"2024-02-15"},{"lineNumber":188,"author":{"gitId":"Teee728"},"content":"        boolean isExistingIndex \u003d taskNumber \u003e\u003d 0;","lastModifiedDate":"2024-02-15"},{"lineNumber":189,"author":{"gitId":"Teee728"},"content":"        boolean isPresent \u003d taskNumber \u003c tasks.size();","lastModifiedDate":"2024-02-15"},{"lineNumber":190,"author":{"gitId":"Teee728"},"content":"        if (!(isExistingIndex \u0026\u0026 isPresent)) {","lastModifiedDate":"2024-02-15"},{"lineNumber":191,"author":{"gitId":"Teee728"},"content":"            String reply \u003d \"you have not created a task \" + words[1] + \" yet!\";","lastModifiedDate":"2024-02-15"},{"lineNumber":192,"author":{"gitId":"Teee728"},"content":"            Ui.showError(reply);","lastModifiedDate":"2024-02-15"},{"lineNumber":193,"author":{"gitId":"Teee728"},"content":"            this.response \u003d reply;","lastModifiedDate":"2024-02-15"},{"lineNumber":194,"author":{"gitId":"Teee728"},"content":"        } else {","lastModifiedDate":"2024-02-15"},{"lineNumber":195,"author":{"gitId":"Teee728"},"content":"            Task task \u003d tasks.getTask(taskNumber);","lastModifiedDate":"2024-02-15"},{"lineNumber":196,"author":{"gitId":"Teee728"},"content":"            this.response \u003d tasks.markStatus(task);","lastModifiedDate":"2024-02-07"},{"lineNumber":197,"author":{"gitId":"Teee728"},"content":"            storage.saveTasks(tasks);","lastModifiedDate":"2024-01-31"},{"lineNumber":198,"author":{"gitId":"Teee728"},"content":"            hasChanged \u003d true; //flag, no need to change","lastModifiedDate":"2024-01-31"},{"lineNumber":199,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":200,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":201,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":202,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":203,"author":{"gitId":"Teee728"},"content":"     * Handles the \u0027unmark\u0027 command by updating the status of a task to undone, saves the tasks, and sets","lastModifiedDate":"2024-02-15"},{"lineNumber":204,"author":{"gitId":"Teee728"},"content":"     * the hasChanged flag.","lastModifiedDate":"2024-02-15"},{"lineNumber":205,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":206,"author":{"gitId":"Teee728"},"content":"     * @param words An array of words obtained by splitting the user command.","lastModifiedDate":"2024-02-15"},{"lineNumber":207,"author":{"gitId":"Teee728"},"content":"     * @throws IOException  If an I/O error occurs during command execution.","lastModifiedDate":"2024-02-15"},{"lineNumber":208,"author":{"gitId":"Teee728"},"content":"     * @throws CruiseyException If there is an issue handling the \u0027unmark\u0027 command.","lastModifiedDate":"2024-02-22"},{"lineNumber":209,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":210,"author":{"gitId":"Teee728"},"content":"    private void handleUnmarkCommand(String[] words) throws IOException, CruiseyException {","lastModifiedDate":"2024-02-22"},{"lineNumber":211,"author":{"gitId":"Teee728"},"content":"        if (words.length \u003c\u003d VALID_COMMAND_LENGTH) {","lastModifiedDate":"2024-02-15"},{"lineNumber":212,"author":{"gitId":"Teee728"},"content":"            String error \u003d \"unmark what? Please re-enter correctly with the task number!\";","lastModifiedDate":"2024-02-15"},{"lineNumber":213,"author":{"gitId":"Teee728"},"content":"            Ui.showError(error);","lastModifiedDate":"2024-02-15"},{"lineNumber":214,"author":{"gitId":"Teee728"},"content":"            this.response \u003d error;","lastModifiedDate":"2024-02-15"},{"lineNumber":215,"author":{"gitId":"Teee728"},"content":"            return;","lastModifiedDate":"2024-02-15"},{"lineNumber":216,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":217,"author":{"gitId":"Teee728"},"content":"        int taskNumber \u003d Integer.parseInt(words[1]) - 1;","lastModifiedDate":"2024-02-15"},{"lineNumber":218,"author":{"gitId":"Teee728"},"content":"        boolean isExistingIndex \u003d taskNumber \u003e\u003d 0;","lastModifiedDate":"2024-02-15"},{"lineNumber":219,"author":{"gitId":"Teee728"},"content":"        boolean isPresent \u003d taskNumber \u003c tasks.size();","lastModifiedDate":"2024-02-15"},{"lineNumber":220,"author":{"gitId":"Teee728"},"content":"        if (!(isExistingIndex \u0026\u0026 isPresent)) {","lastModifiedDate":"2024-02-15"},{"lineNumber":221,"author":{"gitId":"Teee728"},"content":"            String reply \u003d \"you have not created a task \" + words[1] + \" yet!\";","lastModifiedDate":"2024-02-15"},{"lineNumber":222,"author":{"gitId":"Teee728"},"content":"            Ui.showError(reply);","lastModifiedDate":"2024-02-15"},{"lineNumber":223,"author":{"gitId":"Teee728"},"content":"            this.response \u003d reply;","lastModifiedDate":"2024-02-15"},{"lineNumber":224,"author":{"gitId":"Teee728"},"content":"        } else {","lastModifiedDate":"2024-02-15"},{"lineNumber":225,"author":{"gitId":"Teee728"},"content":"            Task task \u003d tasks.getTask(taskNumber);","lastModifiedDate":"2024-02-15"},{"lineNumber":226,"author":{"gitId":"Teee728"},"content":"            this.response \u003d tasks.unmarkStatus(task);","lastModifiedDate":"2024-02-07"},{"lineNumber":227,"author":{"gitId":"Teee728"},"content":"            storage.saveTasks(tasks);","lastModifiedDate":"2024-01-31"},{"lineNumber":228,"author":{"gitId":"Teee728"},"content":"            hasChanged \u003d true; //flag, no need to change","lastModifiedDate":"2024-01-31"},{"lineNumber":229,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":230,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":231,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":232,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":233,"author":{"gitId":"Teee728"},"content":"     * Processes a given task by adding it to the appropriate task list (ToDo, Deadline, or Event) in the TaskList.","lastModifiedDate":"2024-02-15"},{"lineNumber":234,"author":{"gitId":"Teee728"},"content":"     * The method then saves the updated task list to the storage file, updates the response message, prints the","lastModifiedDate":"2024-02-15"},{"lineNumber":235,"author":{"gitId":"Teee728"},"content":"     * number of tasks, and sets the \u0027hasChanged\u0027 flag to true.","lastModifiedDate":"2024-02-15"},{"lineNumber":236,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":237,"author":{"gitId":"Teee728"},"content":"     * @param work The task to be processed.","lastModifiedDate":"2024-02-15"},{"lineNumber":238,"author":{"gitId":"Teee728"},"content":"     * @throws IOException If an I/O error occurs during the processing of the task.","lastModifiedDate":"2024-02-15"},{"lineNumber":239,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":240,"author":{"gitId":"Teee728"},"content":"    private void processTask(Task work) throws IOException {","lastModifiedDate":"2024-02-15"},{"lineNumber":241,"author":{"gitId":"Teee728"},"content":"        if (work instanceof ToDo) {","lastModifiedDate":"2024-02-15"},{"lineNumber":242,"author":{"gitId":"Teee728"},"content":"            tasks.addToDoTask((ToDo) work);","lastModifiedDate":"2024-02-15"},{"lineNumber":243,"author":{"gitId":"Teee728"},"content":"        } else if (work instanceof Deadline) {","lastModifiedDate":"2024-02-15"},{"lineNumber":244,"author":{"gitId":"Teee728"},"content":"            tasks.addDeadlineTask((Deadline) work);","lastModifiedDate":"2024-02-15"},{"lineNumber":245,"author":{"gitId":"Teee728"},"content":"        } else if (work instanceof Event) {","lastModifiedDate":"2024-02-15"},{"lineNumber":246,"author":{"gitId":"Teee728"},"content":"            tasks.addEventTask((Event) work);","lastModifiedDate":"2024-02-15"},{"lineNumber":247,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":248,"author":{"gitId":"Teee728"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2024-02-15"},{"lineNumber":249,"author":{"gitId":"Teee728"},"content":"        this.response \u003d work.getMessage() + \"\\n\" + Ui.printNumberOfTasks(tasks);","lastModifiedDate":"2024-02-15"},{"lineNumber":250,"author":{"gitId":"Teee728"},"content":"        hasChanged \u003d true;","lastModifiedDate":"2024-02-15"},{"lineNumber":251,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":252,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":253,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":254,"author":{"gitId":"Teee728"},"content":"     * Handles the \u0027delete\u0027 command by removing a task, saves the tasks, and sets the hasChanged flag.","lastModifiedDate":"2024-02-15"},{"lineNumber":255,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":256,"author":{"gitId":"Teee728"},"content":"     * @param words An array of words obtained by splitting the user command.","lastModifiedDate":"2024-02-15"},{"lineNumber":257,"author":{"gitId":"Teee728"},"content":"     * @throws CruiseyException If there is an issue handling the \u0027delete\u0027 command.","lastModifiedDate":"2024-02-22"},{"lineNumber":258,"author":{"gitId":"Teee728"},"content":"     * @throws IOException  If an I/O error occurs during command execution.","lastModifiedDate":"2024-02-15"},{"lineNumber":259,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":260,"author":{"gitId":"Teee728"},"content":"    private void handleDeleteCommand(String[] words) throws CruiseyException, IOException {","lastModifiedDate":"2024-02-22"},{"lineNumber":261,"author":{"gitId":"Teee728"},"content":"        int taskNumber \u003d Integer.parseInt(words[1]) - 1;","lastModifiedDate":"2024-02-15"},{"lineNumber":262,"author":{"gitId":"Teee728"},"content":"        if (words.length \u003c\u003d VALID_COMMAND_LENGTH) {","lastModifiedDate":"2024-02-15"},{"lineNumber":263,"author":{"gitId":"Teee728"},"content":"            String error \u003d \"delete what? Please re-enter correctly with the task number!\";","lastModifiedDate":"2024-02-15"},{"lineNumber":264,"author":{"gitId":"Teee728"},"content":"            Ui.showError(error);","lastModifiedDate":"2024-02-15"},{"lineNumber":265,"author":{"gitId":"Teee728"},"content":"            this.response \u003d error;","lastModifiedDate":"2024-02-15"},{"lineNumber":266,"author":{"gitId":"Teee728"},"content":"            return;","lastModifiedDate":"2024-02-15"},{"lineNumber":267,"author":{"gitId":"Teee728"},"content":"        } else if (taskNumber \u003e tasks.size()) {","lastModifiedDate":"2024-02-22"},{"lineNumber":268,"author":{"gitId":"Teee728"},"content":"            String error \u003d \"you have not created a task \" + words[1] + \" for me to delete yet!\";","lastModifiedDate":"2024-02-22"},{"lineNumber":269,"author":{"gitId":"Teee728"},"content":"            Ui.showError(error);","lastModifiedDate":"2024-02-22"},{"lineNumber":270,"author":{"gitId":"Teee728"},"content":"            this.response \u003d error;","lastModifiedDate":"2024-02-22"},{"lineNumber":271,"author":{"gitId":"Teee728"},"content":"            return;","lastModifiedDate":"2024-02-22"},{"lineNumber":272,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":273,"author":{"gitId":"Teee728"},"content":"        this.response \u003d tasks.deleteTask(taskNumber)","lastModifiedDate":"2024-02-15"},{"lineNumber":274,"author":{"gitId":"Teee728"},"content":"                + \"\\n\" + Ui.printNumberOfTasks(tasks);","lastModifiedDate":"2024-02-07"},{"lineNumber":275,"author":{"gitId":"Teee728"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2024-01-31"},{"lineNumber":276,"author":{"gitId":"Teee728"},"content":"        hasChanged \u003d true;","lastModifiedDate":"2024-02-15"},{"lineNumber":277,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":278,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":279,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":280,"author":{"gitId":"Teee728"},"content":"     * Handles the \u0027todo\u0027 command by creating a new ToDo task, adding it to the task list,","lastModifiedDate":"2024-02-15"},{"lineNumber":281,"author":{"gitId":"Teee728"},"content":"     * saving the tasks, and setting the hasChanged flag.","lastModifiedDate":"2024-02-15"},{"lineNumber":282,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":283,"author":{"gitId":"Teee728"},"content":"     * @throws CruiseyException If there is an issue handling the \u0027todo\u0027 command.","lastModifiedDate":"2024-02-22"},{"lineNumber":284,"author":{"gitId":"Teee728"},"content":"     * @throws IOException  If an I/O error occurs during command execution.","lastModifiedDate":"2024-02-15"},{"lineNumber":285,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":286,"author":{"gitId":"Teee728"},"content":"    private void handleToDoCommand() throws CruiseyException, IOException {","lastModifiedDate":"2024-02-22"},{"lineNumber":287,"author":{"gitId":"Teee728"},"content":"        Matcher priorityMatcher \u003d Pattern.compile(\"/p\\\\s+(\\\\S.+)\").matcher(command);","lastModifiedDate":"2024-02-15"},{"lineNumber":288,"author":{"gitId":"Teee728"},"content":"        String priority \u003d priorityMatcher.find() ? priorityMatcher.group(1).trim() : \"\";","lastModifiedDate":"2024-02-15"},{"lineNumber":289,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":290,"author":{"gitId":"Teee728"},"content":"        Matcher toDoMatcher \u003d Pattern.compile(\"todo\\\\s+(\\\\S.+?)(?:\\\\s*/p|$)\").matcher(command);","lastModifiedDate":"2024-02-15"},{"lineNumber":291,"author":{"gitId":"Teee728"},"content":"        String todoTask \u003d toDoMatcher.find() ? toDoMatcher.group(1).trim() : \"\";","lastModifiedDate":"2024-02-15"},{"lineNumber":292,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":293,"author":{"gitId":"Teee728"},"content":"        if (command.length() \u003c\u003d FULL_TODO_COMMAND_LENGTH) {","lastModifiedDate":"2024-02-15"},{"lineNumber":294,"author":{"gitId":"Teee728"},"content":"            String reply \u003d \"you gotta enter some task TO DO!\";","lastModifiedDate":"2024-02-15"},{"lineNumber":295,"author":{"gitId":"Teee728"},"content":"            ui.showError(reply);","lastModifiedDate":"2024-02-07"},{"lineNumber":296,"author":{"gitId":"Teee728"},"content":"            this.response \u003d reply;","lastModifiedDate":"2024-02-07"},{"lineNumber":297,"author":{"gitId":"Teee728"},"content":"            return;","lastModifiedDate":"2024-02-15"},{"lineNumber":298,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":299,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":300,"author":{"gitId":"Teee728"},"content":"        ToDo work \u003d new ToDo(todoTask, ui, priority.isEmpty() ? null : TaskPriority.valueOf(priority.toUpperCase()));","lastModifiedDate":"2024-02-15"},{"lineNumber":301,"author":{"gitId":"Teee728"},"content":"        processTask(work);","lastModifiedDate":"2024-02-15"},{"lineNumber":302,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":303,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":304,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":305,"author":{"gitId":"Teee728"},"content":"     * Handles the \u0027deadline\u0027 command by creating a new Deadline task, adding it to the task list,","lastModifiedDate":"2024-02-15"},{"lineNumber":306,"author":{"gitId":"Teee728"},"content":"     * saving the tasks, and setting the hasChanged flag.","lastModifiedDate":"2024-02-15"},{"lineNumber":307,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":308,"author":{"gitId":"Teee728"},"content":"     * @param words An array of words obtained by splitting the user command.","lastModifiedDate":"2024-02-15"},{"lineNumber":309,"author":{"gitId":"Teee728"},"content":"     * @throws CruiseyException If there is an issue handling the \u0027deadline\u0027 command.","lastModifiedDate":"2024-02-22"},{"lineNumber":310,"author":{"gitId":"Teee728"},"content":"     * @throws IOException  If an I/O error occurs during command execution.","lastModifiedDate":"2024-02-15"},{"lineNumber":311,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":312,"author":{"gitId":"Teee728"},"content":"    private void handleDeadlineCommand(String[] words) throws CruiseyException, IOException {","lastModifiedDate":"2024-02-22"},{"lineNumber":313,"author":{"gitId":"Teee728"},"content":"        Matcher priorityMatcher \u003d Pattern.compile(\"/p\\\\s+(\\\\S.+)\").matcher(command);","lastModifiedDate":"2024-02-15"},{"lineNumber":314,"author":{"gitId":"Teee728"},"content":"        String priority \u003d priorityMatcher.find() ? priorityMatcher.group(1).trim() : \"\";","lastModifiedDate":"2024-02-15"},{"lineNumber":315,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":316,"author":{"gitId":"Teee728"},"content":"        Matcher byMatcher \u003d Pattern.compile(\"/by\\\\s+(\\\\S.+?)(?:\\\\s*/p|$)\").matcher(command);","lastModifiedDate":"2024-02-15"},{"lineNumber":317,"author":{"gitId":"Teee728"},"content":"        String deadlineDescription \u003d findDeadlineDescription(command);","lastModifiedDate":"2024-02-15"},{"lineNumber":318,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":319,"author":{"gitId":"Teee728"},"content":"        if (words.length \u003c\u003d 1) {","lastModifiedDate":"2024-02-15"},{"lineNumber":320,"author":{"gitId":"Teee728"},"content":"            String reply \u003d \"please include both task description and deadline correctly!\";","lastModifiedDate":"2024-02-15"},{"lineNumber":321,"author":{"gitId":"Teee728"},"content":"            ui.showError(reply);","lastModifiedDate":"2024-02-15"},{"lineNumber":322,"author":{"gitId":"Teee728"},"content":"            this.response \u003d reply;","lastModifiedDate":"2024-02-15"},{"lineNumber":323,"author":{"gitId":"Teee728"},"content":"            return;","lastModifiedDate":"2024-02-15"},{"lineNumber":324,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":325,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":326,"author":{"gitId":"Teee728"},"content":"        String by \u003d byMatcher.find() ? byMatcher.group(1).trim() : \"\";","lastModifiedDate":"2024-02-01"},{"lineNumber":327,"author":{"gitId":"Teee728"},"content":"        Deadline work \u003d new Deadline(deadlineDescription, by, ui, priority.isEmpty() ? null","lastModifiedDate":"2024-02-15"},{"lineNumber":328,"author":{"gitId":"Teee728"},"content":"                : TaskPriority.valueOf(priority.toUpperCase()));","lastModifiedDate":"2024-02-15"},{"lineNumber":329,"author":{"gitId":"Teee728"},"content":"        processTask(work);","lastModifiedDate":"2024-02-15"},{"lineNumber":330,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":331,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":332,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":333,"author":{"gitId":"Teee728"},"content":"     * Finds and extracts the description from a \u0027deadline\u0027 command.","lastModifiedDate":"2024-02-15"},{"lineNumber":334,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":335,"author":{"gitId":"Teee728"},"content":"     * The method uses a regular expression to locate the description specified in the \u0027deadline\u0027 command.","lastModifiedDate":"2024-02-15"},{"lineNumber":336,"author":{"gitId":"Teee728"},"content":"     * It searches for the substring following the \"deadline\" keyword and ending just before the \"/by\" keyword.","lastModifiedDate":"2024-02-15"},{"lineNumber":337,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":338,"author":{"gitId":"Teee728"},"content":"     * @param command The user input command containing the \u0027deadline\u0027 task details.","lastModifiedDate":"2024-02-15"},{"lineNumber":339,"author":{"gitId":"Teee728"},"content":"     * @return The extracted description from the \u0027deadline\u0027 command, or an empty string if not found.","lastModifiedDate":"2024-02-15"},{"lineNumber":340,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":341,"author":{"gitId":"Teee728"},"content":"    private String findDeadlineDescription(String command) {","lastModifiedDate":"2024-02-15"},{"lineNumber":342,"author":{"gitId":"Teee728"},"content":"        Matcher deadlineDescMatcher \u003d Pattern.compile(\"deadline\\\\s+(.+?)\\\\s*/by\").matcher(command);","lastModifiedDate":"2024-02-15"},{"lineNumber":343,"author":{"gitId":"Teee728"},"content":"        return deadlineDescMatcher.find() ? deadlineDescMatcher.group(1).trim() : \"\";","lastModifiedDate":"2024-02-15"},{"lineNumber":344,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":345,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":346,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":347,"author":{"gitId":"Teee728"},"content":"     * Handles the \u0027event\u0027 command by creating a new Event task, adding it to the task list,","lastModifiedDate":"2024-02-15"},{"lineNumber":348,"author":{"gitId":"Teee728"},"content":"     * saving the tasks, and setting the hasChanged flag.","lastModifiedDate":"2024-02-15"},{"lineNumber":349,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":350,"author":{"gitId":"Teee728"},"content":"     * @param words An array of words obtained by splitting the user command.","lastModifiedDate":"2024-02-15"},{"lineNumber":351,"author":{"gitId":"Teee728"},"content":"     * @throws CruiseyException If there is an issue handling the \u0027event\u0027 command.","lastModifiedDate":"2024-02-22"},{"lineNumber":352,"author":{"gitId":"Teee728"},"content":"     * @throws IOException  If an I/O error occurs during command execution.","lastModifiedDate":"2024-02-15"},{"lineNumber":353,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":354,"author":{"gitId":"Teee728"},"content":"    private void handleEventCommand(String[] words) throws CruiseyException, IOException {","lastModifiedDate":"2024-02-22"},{"lineNumber":355,"author":{"gitId":"Teee728"},"content":"        Matcher priorityMatcher \u003d Pattern.compile(\"/p\\\\s+(\\\\S.+)\").matcher(command);","lastModifiedDate":"2024-02-15"},{"lineNumber":356,"author":{"gitId":"Teee728"},"content":"        String priority \u003d priorityMatcher.find() ? priorityMatcher.group(1).trim() : \"\";","lastModifiedDate":"2024-02-15"},{"lineNumber":357,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":358,"author":{"gitId":"Teee728"},"content":"        Matcher fromMatcher \u003d Pattern.compile(\"/from\\\\s+(\\\\S+[^/]+)\").matcher(command);","lastModifiedDate":"2024-01-31"},{"lineNumber":359,"author":{"gitId":"Teee728"},"content":"        String eventDescription \u003d findEventDescription(command);","lastModifiedDate":"2024-02-15"},{"lineNumber":360,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":361,"author":{"gitId":"Teee728"},"content":"        if (words.length \u003c\u003d 1) {","lastModifiedDate":"2024-02-15"},{"lineNumber":362,"author":{"gitId":"Teee728"},"content":"            String reply \u003d \"you didn\u0027t enter the details or duration!\";","lastModifiedDate":"2024-02-15"},{"lineNumber":363,"author":{"gitId":"Teee728"},"content":"            Ui.showError(reply);","lastModifiedDate":"2024-02-15"},{"lineNumber":364,"author":{"gitId":"Teee728"},"content":"            this.response \u003d reply;","lastModifiedDate":"2024-02-15"},{"lineNumber":365,"author":{"gitId":"Teee728"},"content":"            return;","lastModifiedDate":"2024-02-15"},{"lineNumber":366,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":367,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":368,"author":{"gitId":"Teee728"},"content":"        String from \u003d fromMatcher.find() ? fromMatcher.group(1).trim() : \"\";","lastModifiedDate":"2024-01-31"},{"lineNumber":369,"author":{"gitId":"Teee728"},"content":"        String to \u003d findEventTo(command, priority);","lastModifiedDate":"2024-02-15"},{"lineNumber":370,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":371,"author":{"gitId":"Teee728"},"content":"        Event job \u003d new Event(eventDescription, from, to, ui, priority.isEmpty() ? null","lastModifiedDate":"2024-02-15"},{"lineNumber":372,"author":{"gitId":"Teee728"},"content":"                : TaskPriority.valueOf(priority.toUpperCase()));","lastModifiedDate":"2024-02-15"},{"lineNumber":373,"author":{"gitId":"Teee728"},"content":"        processTask(job);","lastModifiedDate":"2024-02-15"},{"lineNumber":374,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":375,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":376,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":377,"author":{"gitId":"Teee728"},"content":"     * Finds and extracts the event description from an \u0027event\u0027 command.","lastModifiedDate":"2024-02-15"},{"lineNumber":378,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":379,"author":{"gitId":"Teee728"},"content":"     * The method uses a regular expression to locate the description specified in the \u0027event\u0027 command.","lastModifiedDate":"2024-02-15"},{"lineNumber":380,"author":{"gitId":"Teee728"},"content":"     * It searches for the substring following the \"event\" keyword and ending just before the \"/from\" keyword.","lastModifiedDate":"2024-02-15"},{"lineNumber":381,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":382,"author":{"gitId":"Teee728"},"content":"     * @param command The user input command containing the \u0027event\u0027 task details.","lastModifiedDate":"2024-02-15"},{"lineNumber":383,"author":{"gitId":"Teee728"},"content":"     * @return The extracted event description from the \u0027event\u0027 command, or an empty string if not found.","lastModifiedDate":"2024-02-15"},{"lineNumber":384,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":385,"author":{"gitId":"Teee728"},"content":"    private String findEventDescription(String command) {","lastModifiedDate":"2024-02-15"},{"lineNumber":386,"author":{"gitId":"Teee728"},"content":"        Matcher descriptionMatcher \u003d Pattern.compile(\"event\\\\s+(.+?)\\\\s*/from\").matcher(command);","lastModifiedDate":"2024-02-15"},{"lineNumber":387,"author":{"gitId":"Teee728"},"content":"        return descriptionMatcher.find() ? descriptionMatcher.group(1).trim() : \"\";","lastModifiedDate":"2024-02-15"},{"lineNumber":388,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":389,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":390,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":391,"author":{"gitId":"Teee728"},"content":"     * Finds and extracts the \u0027to\u0027 information from an \u0027event\u0027 command.","lastModifiedDate":"2024-02-15"},{"lineNumber":392,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":393,"author":{"gitId":"Teee728"},"content":"     * The method uses a regular expression to locate the \u0027to\u0027 information specified in the \u0027event\u0027 command.","lastModifiedDate":"2024-02-15"},{"lineNumber":394,"author":{"gitId":"Teee728"},"content":"     * It searches for the substring following the \"/to\" keyword and ending either at the next specified marker (\"/p\")","lastModifiedDate":"2024-02-15"},{"lineNumber":395,"author":{"gitId":"Teee728"},"content":"     * or at the end of the command.","lastModifiedDate":"2024-02-15"},{"lineNumber":396,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":397,"author":{"gitId":"Teee728"},"content":"     * @param command  The user input command containing the \u0027event\u0027 task details.","lastModifiedDate":"2024-02-15"},{"lineNumber":398,"author":{"gitId":"Teee728"},"content":"     * @param priority The priority extracted from the command.","lastModifiedDate":"2024-02-15"},{"lineNumber":399,"author":{"gitId":"Teee728"},"content":"     * @return The extracted \u0027to\u0027 information from the \u0027event\u0027 command, or an empty string if not found.","lastModifiedDate":"2024-02-15"},{"lineNumber":400,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":401,"author":{"gitId":"Teee728"},"content":"    private String findEventTo(String command, String priority) {","lastModifiedDate":"2024-02-15"},{"lineNumber":402,"author":{"gitId":"Teee728"},"content":"        Matcher toMatcher \u003d Pattern.compile(\"/to\\\\s+(\\\\S.+?)(?:\\\\s*/p|$)\").matcher(command);","lastModifiedDate":"2024-02-15"},{"lineNumber":403,"author":{"gitId":"Teee728"},"content":"        return toMatcher.find() ? toMatcher.group(1).trim() : \"\";","lastModifiedDate":"2024-02-15"},{"lineNumber":404,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":405,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":406,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":407,"author":{"gitId":"Teee728"},"content":"     * Handles the \u0027find\u0027 command by searching for tasks containing a specific keyword,","lastModifiedDate":"2024-02-15"},{"lineNumber":408,"author":{"gitId":"Teee728"},"content":"     * displaying the found tasks, and printing the number of tasks.","lastModifiedDate":"2024-02-15"},{"lineNumber":409,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":410,"author":{"gitId":"Teee728"},"content":"     * @throws CruiseyException If there is an issue handling the \u0027find\u0027 command.","lastModifiedDate":"2024-02-22"},{"lineNumber":411,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":412,"author":{"gitId":"Teee728"},"content":"    private void handleFindCommand() throws CruiseyException {","lastModifiedDate":"2024-02-22"},{"lineNumber":413,"author":{"gitId":"Teee728"},"content":"        if (command.length() \u003c\u003d FULL_FIND_COMMAND_LENGTH) {","lastModifiedDate":"2024-02-15"},{"lineNumber":414,"author":{"gitId":"Teee728"},"content":"            String reply \u003d \"find what? Please re-enter correctly!\";","lastModifiedDate":"2024-02-15"},{"lineNumber":415,"author":{"gitId":"Teee728"},"content":"            ui.showError(reply);","lastModifiedDate":"2024-02-14"},{"lineNumber":416,"author":{"gitId":"Teee728"},"content":"            this.response \u003d reply;","lastModifiedDate":"2024-02-14"},{"lineNumber":417,"author":{"gitId":"Teee728"},"content":"        } else {","lastModifiedDate":"2024-02-14"},{"lineNumber":418,"author":{"gitId":"Teee728"},"content":"            String taskToFind \u003d command.substring(5).trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":419,"author":{"gitId":"Teee728"},"content":"            TaskList foundTasks \u003d tasks.findTask(taskToFind);","lastModifiedDate":"2024-02-01"},{"lineNumber":420,"author":{"gitId":"Teee728"},"content":"            if (foundTasks.size() \u003e 0) {","lastModifiedDate":"2024-02-01"},{"lineNumber":421,"author":{"gitId":"Teee728"},"content":"                this.response \u003d ui.showFoundTasks(taskToFind) + \"\\n\" + tasks.getList(foundTasks);","lastModifiedDate":"2024-02-15"},{"lineNumber":422,"author":{"gitId":"Teee728"},"content":"            } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":423,"author":{"gitId":"Teee728"},"content":"                this.response \u003d ui.showNoTasksFound(taskToFind);","lastModifiedDate":"2024-02-07"},{"lineNumber":424,"author":{"gitId":"Teee728"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":425,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":426,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":427,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":428,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":429,"author":{"gitId":"Teee728"},"content":"     * Handles default commands by displaying an error message indicating that the command is not recognized.","lastModifiedDate":"2024-02-15"},{"lineNumber":430,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":431,"author":{"gitId":"Teee728"},"content":"     * @throws CruiseyException If there is an issue handling the default command.","lastModifiedDate":"2024-02-22"},{"lineNumber":432,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":433,"author":{"gitId":"Teee728"},"content":"    private void handleDefaultCommand() throws CruiseyException {","lastModifiedDate":"2024-02-22"},{"lineNumber":434,"author":{"gitId":"Teee728"},"content":"        String reply \u003d \"I don\u0027t know what you are saying :(\";","lastModifiedDate":"2024-02-07"},{"lineNumber":435,"author":{"gitId":"Teee728"},"content":"        ui.showError(reply);","lastModifiedDate":"2024-02-07"},{"lineNumber":436,"author":{"gitId":"Teee728"},"content":"        this.response \u003d reply;","lastModifiedDate":"2024-02-07"},{"lineNumber":437,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":438,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":439,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":440,"author":{"gitId":"Teee728"},"content":"     * Handles exceptions by displaying the error message to the user and setting the response.","lastModifiedDate":"2024-02-15"},{"lineNumber":441,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":442,"author":{"gitId":"Teee728"},"content":"     * @param e The exception that occurred.","lastModifiedDate":"2024-02-15"},{"lineNumber":443,"author":{"gitId":"Teee728"},"content":"     * @throws CruiseyException If there is an issue handling the error.","lastModifiedDate":"2024-02-22"},{"lineNumber":444,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":445,"author":{"gitId":"Teee728"},"content":"    private void handleError(Exception e) throws CruiseyException {","lastModifiedDate":"2024-02-22"},{"lineNumber":446,"author":{"gitId":"Teee728"},"content":"        ui.showError(e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":447,"author":{"gitId":"Teee728"},"content":"        this.response \u003d e.getMessage();","lastModifiedDate":"2024-02-07"},{"lineNumber":448,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":449,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":450,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":451,"author":{"gitId":"Teee728"},"content":"     * Retrieves the response generated after processing the user command.","lastModifiedDate":"2024-02-15"},{"lineNumber":452,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":453,"author":{"gitId":"Teee728"},"content":"     * @return The response message generated during command processing.","lastModifiedDate":"2024-02-15"},{"lineNumber":454,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":455,"author":{"gitId":"Teee728"},"content":"    public String getResponse() {","lastModifiedDate":"2024-02-07"},{"lineNumber":456,"author":{"gitId":"Teee728"},"content":"        return this.response;","lastModifiedDate":"2024-02-07"},{"lineNumber":457,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":458,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":459,"author":{"gitId":"Teee728"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Teee728":459}},{"path":"src/main/java/cruisey/exception/CruiseyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Teee728"},"content":"package cruisey.exception;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"Teee728"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"Teee728"},"content":" * CruiseyException is a custom exception class for handling exceptions specific to the Duke application.","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"Teee728"},"content":" * It extends the standard Exception class and provides a customized toString method.","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"Teee728"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"Teee728"},"content":"public class CruiseyException extends Exception {","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"Teee728"},"content":"     * Constructs a CruiseyException with the specified error message.","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"Teee728"},"content":"     * @param message The error message associated with the exception.","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"Teee728"},"content":"    public CruiseyException(String message) {","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"Teee728"},"content":"        super(message);","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"Teee728"},"content":"     * Returns a string representation of the CruiseyException, providing additional context.","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"Teee728"},"content":"     * @return A string representation of the exception.","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"Teee728"},"content":"    public String toString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"Teee728"},"content":"        return \"Ummm, \" + getMessage();","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"Teee728"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Teee728":27}},{"path":"src/main/java/cruisey/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Teee728"},"content":"package cruisey.storage;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Teee728"},"content":"import java.io.File;","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"Teee728"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"Teee728"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"Teee728"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"Teee728"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"Teee728"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"Teee728"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"Teee728"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"Teee728"},"content":"import cruisey.exception.CruiseyException;","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"Teee728"},"content":"import cruisey.task.Deadline;","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"Teee728"},"content":"import cruisey.task.Event;","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"Teee728"},"content":"import cruisey.task.Task;","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"Teee728"},"content":"import cruisey.task.TaskList;","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"Teee728"},"content":"import cruisey.task.TaskPriority;","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"Teee728"},"content":"import cruisey.task.TaskStatus;","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"Teee728"},"content":"import cruisey.task.TaskType;","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"Teee728"},"content":"import cruisey.task.ToDo;","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"Teee728"},"content":"import cruisey.ui.Ui;","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"Teee728"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"Teee728"},"content":" * The Storage class handles the saving and loading of tasks to and from a data file.","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"Teee728"},"content":" * It uses a specific file format to store task details in a text file.","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"Teee728"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"Teee728"},"content":"public class Storage {","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"Teee728"},"content":"    /** The file path for saving and loading tasks. */","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"Teee728"},"content":"    static final String FILE_PATH \u003d \"./data/duke.txt\";","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"Teee728"},"content":"    private static File file \u003d new File(FILE_PATH);","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"Teee728"},"content":"    private DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"Teee728"},"content":"    /** The TaskList used to store tasks during the program\u0027s execution. */","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"Teee728"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"Teee728"},"content":"    private TaskList taskList \u003d new TaskList(new ArrayList \u003cTask\u003e(), this.ui);","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"Teee728"},"content":"     * Saves the tasks from the given TaskList to the data file specified by FILE_PATH.","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"Teee728"},"content":"     * @param tasks The TaskList containing tasks to be saved.","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"Teee728"},"content":"     * @throws IOException If an I/O error occurs while writing to the file.","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"Teee728"},"content":"    public void saveTasks(TaskList tasks) throws IOException {","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"Teee728"},"content":"        String text;","lastModifiedDate":"2024-02-15"},{"lineNumber":46,"author":{"gitId":"Teee728"},"content":"        File parentFolder \u003d file.getParentFile();","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"Teee728"},"content":"        if (!parentFolder.exists()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"Teee728"},"content":"            if (!parentFolder.mkdirs()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"Teee728"},"content":"                throw new IOException(\"Failed to create the data folder.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"Teee728"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"Teee728"},"content":"        try (FileWriter fileWriter \u003d new FileWriter(file, false)) {","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"Teee728"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"Teee728"},"content":"                Task task \u003d tasks.getTask(i);","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"Teee728"},"content":"                text \u003d storeTasks(task);","lastModifiedDate":"2024-02-15"},{"lineNumber":56,"author":{"gitId":"Teee728"},"content":"                fileWriter.write(text);","lastModifiedDate":"2024-02-15"},{"lineNumber":57,"author":{"gitId":"Teee728"},"content":"                fileWriter.append(\"\\n\");","lastModifiedDate":"2024-02-15"},{"lineNumber":58,"author":{"gitId":"Teee728"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":63,"author":{"gitId":"Teee728"},"content":"     * Generates a formatted string representation of a task for saving to the data file.","lastModifiedDate":"2024-02-15"},{"lineNumber":64,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":65,"author":{"gitId":"Teee728"},"content":"     * @param task The task to be converted to a string for storage.","lastModifiedDate":"2024-02-15"},{"lineNumber":66,"author":{"gitId":"Teee728"},"content":"     * @return A formatted string representing the task.","lastModifiedDate":"2024-02-15"},{"lineNumber":67,"author":{"gitId":"Teee728"},"content":"     * @throws IOException If an I/O error occurs while storing the task.","lastModifiedDate":"2024-02-15"},{"lineNumber":68,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":69,"author":{"gitId":"Teee728"},"content":"    public String storeTasks(Task task) throws IOException {","lastModifiedDate":"2024-02-15"},{"lineNumber":70,"author":{"gitId":"Teee728"},"content":"        String text;","lastModifiedDate":"2024-02-15"},{"lineNumber":71,"author":{"gitId":"Teee728"},"content":"        if (task instanceof Deadline) {","lastModifiedDate":"2024-02-15"},{"lineNumber":72,"author":{"gitId":"Teee728"},"content":"            text \u003d storeDeadline(task);","lastModifiedDate":"2024-02-15"},{"lineNumber":73,"author":{"gitId":"Teee728"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2024-02-15"},{"lineNumber":74,"author":{"gitId":"Teee728"},"content":"            text \u003d storeEvent(task);","lastModifiedDate":"2024-02-15"},{"lineNumber":75,"author":{"gitId":"Teee728"},"content":"        } else {","lastModifiedDate":"2024-02-15"},{"lineNumber":76,"author":{"gitId":"Teee728"},"content":"            text \u003d storeToDo(task);","lastModifiedDate":"2024-02-15"},{"lineNumber":77,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":78,"author":{"gitId":"Teee728"},"content":"        return text;","lastModifiedDate":"2024-02-15"},{"lineNumber":79,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":81,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":82,"author":{"gitId":"Teee728"},"content":"     * Generates a formatted string representation of a ToDo task for storage.","lastModifiedDate":"2024-02-15"},{"lineNumber":83,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":84,"author":{"gitId":"Teee728"},"content":"     * @param task The ToDo task to be converted to a string for storage.","lastModifiedDate":"2024-02-15"},{"lineNumber":85,"author":{"gitId":"Teee728"},"content":"     * @return A formatted string representing the ToDo task.","lastModifiedDate":"2024-02-15"},{"lineNumber":86,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":87,"author":{"gitId":"Teee728"},"content":"    public String storeToDo(Task task) {","lastModifiedDate":"2024-02-15"},{"lineNumber":88,"author":{"gitId":"Teee728"},"content":"        return task.getType() + \" | \" + (task.getStatusIcon().equals(\"X\") ? TaskStatus.DONE : TaskStatus.NOT_DONE)","lastModifiedDate":"2024-02-15"},{"lineNumber":89,"author":{"gitId":"Teee728"},"content":"                + \" | \" + task.getDescription();","lastModifiedDate":"2024-02-15"},{"lineNumber":90,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":91,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":92,"author":{"gitId":"Teee728"},"content":"     * Generates a formatted string representation of a Deadline task for storage.","lastModifiedDate":"2024-02-15"},{"lineNumber":93,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":94,"author":{"gitId":"Teee728"},"content":"     * @param task The Deadline task to be converted to a string for storage.","lastModifiedDate":"2024-02-15"},{"lineNumber":95,"author":{"gitId":"Teee728"},"content":"     * @return A formatted string representing the Deadline task.","lastModifiedDate":"2024-02-15"},{"lineNumber":96,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":97,"author":{"gitId":"Teee728"},"content":"    public String storeDeadline(Task task) {","lastModifiedDate":"2024-02-15"},{"lineNumber":98,"author":{"gitId":"Teee728"},"content":"        Deadline deadlineTask \u003d (Deadline) task;","lastModifiedDate":"2024-02-15"},{"lineNumber":99,"author":{"gitId":"Teee728"},"content":"        String text \u003d task.getType() + \" | \" + (task.getStatusIcon().equals(\"X\") ? TaskStatus.DONE","lastModifiedDate":"2024-02-15"},{"lineNumber":100,"author":{"gitId":"Teee728"},"content":"                : TaskStatus.NOT_DONE) + \" | \" + task.getDescription();","lastModifiedDate":"2024-02-15"},{"lineNumber":101,"author":{"gitId":"Teee728"},"content":"        if (deadlineTask.getBy() !\u003d null) {","lastModifiedDate":"2024-02-15"},{"lineNumber":102,"author":{"gitId":"Teee728"},"content":"            LocalDateTime byTime \u003d deadlineTask.getByTime();","lastModifiedDate":"2024-02-15"},{"lineNumber":103,"author":{"gitId":"Teee728"},"content":"            String formattedDateTime \u003d (byTime !\u003d null)","lastModifiedDate":"2024-02-15"},{"lineNumber":104,"author":{"gitId":"Teee728"},"content":"                    ? byTime.format(formatter) : deadlineTask.getByString();","lastModifiedDate":"2024-02-15"},{"lineNumber":105,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":106,"author":{"gitId":"Teee728"},"content":"            text +\u003d \" | \" + formattedDateTime;","lastModifiedDate":"2024-02-15"},{"lineNumber":107,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":108,"author":{"gitId":"Teee728"},"content":"        return text;","lastModifiedDate":"2024-02-15"},{"lineNumber":109,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":110,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":111,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":112,"author":{"gitId":"Teee728"},"content":"     * Generates a formatted string representation of an Event task for storage.","lastModifiedDate":"2024-02-15"},{"lineNumber":113,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":114,"author":{"gitId":"Teee728"},"content":"     * @param task The Event task to be converted to a string for storage.","lastModifiedDate":"2024-02-15"},{"lineNumber":115,"author":{"gitId":"Teee728"},"content":"     * @return A formatted string representing the Event task.","lastModifiedDate":"2024-02-15"},{"lineNumber":116,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":117,"author":{"gitId":"Teee728"},"content":"    public String storeEvent(Task task) {","lastModifiedDate":"2024-02-15"},{"lineNumber":118,"author":{"gitId":"Teee728"},"content":"        Event event \u003d (Event) task;","lastModifiedDate":"2024-02-15"},{"lineNumber":119,"author":{"gitId":"Teee728"},"content":"        String text \u003d task.getType() + \" | \" + (task.getStatusIcon().equals(\"X\")","lastModifiedDate":"2024-02-15"},{"lineNumber":120,"author":{"gitId":"Teee728"},"content":"                ? TaskStatus.DONE : TaskStatus.NOT_DONE) + \" | \" + task.getDescription();","lastModifiedDate":"2024-02-15"},{"lineNumber":121,"author":{"gitId":"Teee728"},"content":"        String fromString \u003d (event.getFromTime() !\u003d null)","lastModifiedDate":"2024-02-15"},{"lineNumber":122,"author":{"gitId":"Teee728"},"content":"                ? event.getFromTime().format(formatter) : (event.getFromString() !\u003d null ? event.getFromString() : \"\");","lastModifiedDate":"2024-02-15"},{"lineNumber":123,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":124,"author":{"gitId":"Teee728"},"content":"        String toString \u003d (event.getToTime() !\u003d null)","lastModifiedDate":"2024-02-15"},{"lineNumber":125,"author":{"gitId":"Teee728"},"content":"                ? event.getToTime().format(formatter) : (event.getToString() !\u003d null ? event.getToString() : \"\");","lastModifiedDate":"2024-02-15"},{"lineNumber":126,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":127,"author":{"gitId":"Teee728"},"content":"        return text +\u003d \" | \" + fromString + \" - \" + toString;","lastModifiedDate":"2024-02-15"},{"lineNumber":128,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":129,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":130,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":131,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":132,"author":{"gitId":"Teee728"},"content":"     * Loads tasks from the data file specified by FILE_PATH and returns them as an ArrayList.","lastModifiedDate":"2024-02-01"},{"lineNumber":133,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":134,"author":{"gitId":"Teee728"},"content":"     * @return An ArrayList containing tasks loaded from the data file.","lastModifiedDate":"2024-02-01"},{"lineNumber":135,"author":{"gitId":"Teee728"},"content":"     * @throws CruiseyException If there is an issue loading tasks from the file.","lastModifiedDate":"2024-02-22"},{"lineNumber":136,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":137,"author":{"gitId":"Teee728"},"content":"    public ArrayList\u003cTask\u003e load() throws CruiseyException {","lastModifiedDate":"2024-02-22"},{"lineNumber":138,"author":{"gitId":"Teee728"},"content":"        ArrayList\u003cTask\u003e loadedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":139,"author":{"gitId":"Teee728"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2024-01-31"},{"lineNumber":140,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":141,"author":{"gitId":"Teee728"},"content":"        if (!file.exists()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":142,"author":{"gitId":"Teee728"},"content":"            System.out.println(\"\\nData file does not currently exist. However, as you add a task, it will save it to\"","lastModifiedDate":"2024-02-15"},{"lineNumber":143,"author":{"gitId":"Teee728"},"content":"                    + \"\\nthe \" + \"path specified. You can view your task list after exiting the chatbot.\");","lastModifiedDate":"2024-02-15"},{"lineNumber":144,"author":{"gitId":"Teee728"},"content":"            return loadedTasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":145,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":146,"author":{"gitId":"Teee728"},"content":"        try (Scanner scanner \u003d new Scanner(file)) {","lastModifiedDate":"2024-01-31"},{"lineNumber":147,"author":{"gitId":"Teee728"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":148,"author":{"gitId":"Teee728"},"content":"                loadedTasks.add(parseTask(scanner.nextLine()));","lastModifiedDate":"2024-02-15"},{"lineNumber":149,"author":{"gitId":"Teee728"},"content":"            }","lastModifiedDate":"2024-02-15"},{"lineNumber":150,"author":{"gitId":"Teee728"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":151,"author":{"gitId":"Teee728"},"content":"            System.out.println(e);","lastModifiedDate":"2024-02-15"},{"lineNumber":152,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":153,"author":{"gitId":"Teee728"},"content":"        return loadedTasks;","lastModifiedDate":"2024-02-15"},{"lineNumber":154,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":155,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":156,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":157,"author":{"gitId":"Teee728"},"content":"     * Parses a line from the data file and converts it into a Task object.","lastModifiedDate":"2024-02-15"},{"lineNumber":158,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":159,"author":{"gitId":"Teee728"},"content":"     * The method splits the input line using the \"|\" delimiter and extracts the task type, description, and additional","lastModifiedDate":"2024-02-15"},{"lineNumber":160,"author":{"gitId":"Teee728"},"content":"     * information. It then uses a switch statement to determine the task type and delegates the parsing to specific","lastModifiedDate":"2024-02-15"},{"lineNumber":161,"author":{"gitId":"Teee728"},"content":"     * methods.","lastModifiedDate":"2024-02-15"},{"lineNumber":162,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":163,"author":{"gitId":"Teee728"},"content":"     * @param line The line from the data file representing a task.","lastModifiedDate":"2024-02-15"},{"lineNumber":164,"author":{"gitId":"Teee728"},"content":"     * @return A Task object parsed from the line.","lastModifiedDate":"2024-02-15"},{"lineNumber":165,"author":{"gitId":"Teee728"},"content":"     * @throws CruiseyException If there is an issue parsing the line into a Task object.","lastModifiedDate":"2024-02-22"},{"lineNumber":166,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":167,"author":{"gitId":"Teee728"},"content":"    private Task parseTask(String line) throws CruiseyException {","lastModifiedDate":"2024-02-22"},{"lineNumber":168,"author":{"gitId":"Teee728"},"content":"        String[] parts \u003d line.split(\"\\\\|\");","lastModifiedDate":"2024-01-31"},{"lineNumber":169,"author":{"gitId":"Teee728"},"content":"        TaskType taskType \u003d TaskType.valueOf(parts[0].trim());","lastModifiedDate":"2024-01-31"},{"lineNumber":170,"author":{"gitId":"Teee728"},"content":"        String description \u003d parts[2].trim();","lastModifiedDate":"2024-01-31"},{"lineNumber":171,"author":{"gitId":"Teee728"},"content":"        String additionalInfo \u003d (parts.length \u003e 3) ? parts[3].trim() : null;","lastModifiedDate":"2024-01-31"},{"lineNumber":172,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":173,"author":{"gitId":"Teee728"},"content":"        switch (taskType) {","lastModifiedDate":"2024-02-15"},{"lineNumber":174,"author":{"gitId":"Teee728"},"content":"        case T:","lastModifiedDate":"2024-02-15"},{"lineNumber":175,"author":{"gitId":"Teee728"},"content":"            return parseToDoTask(description, additionalInfo);","lastModifiedDate":"2024-02-15"},{"lineNumber":176,"author":{"gitId":"Teee728"},"content":"        case D:","lastModifiedDate":"2024-02-15"},{"lineNumber":177,"author":{"gitId":"Teee728"},"content":"            return parseDeadlineTask(description, additionalInfo);","lastModifiedDate":"2024-02-15"},{"lineNumber":178,"author":{"gitId":"Teee728"},"content":"        case E:","lastModifiedDate":"2024-02-15"},{"lineNumber":179,"author":{"gitId":"Teee728"},"content":"            return parseEventTask(description, additionalInfo);","lastModifiedDate":"2024-02-15"},{"lineNumber":180,"author":{"gitId":"Teee728"},"content":"        default:","lastModifiedDate":"2024-02-15"},{"lineNumber":181,"author":{"gitId":"Teee728"},"content":"            return new Task(null, null, null);","lastModifiedDate":"2024-02-15"},{"lineNumber":182,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":183,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":184,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":185,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":186,"author":{"gitId":"Teee728"},"content":"     * Parses a ToDo task from the given description and additional information.","lastModifiedDate":"2024-02-15"},{"lineNumber":187,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":188,"author":{"gitId":"Teee728"},"content":"     * The method extracts the priority from the additional information and creates a new ToDo task.","lastModifiedDate":"2024-02-15"},{"lineNumber":189,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":190,"author":{"gitId":"Teee728"},"content":"     * @param description     The description of the ToDo task.","lastModifiedDate":"2024-02-15"},{"lineNumber":191,"author":{"gitId":"Teee728"},"content":"     * @param additionalInfo  The additional information containing priority.","lastModifiedDate":"2024-02-15"},{"lineNumber":192,"author":{"gitId":"Teee728"},"content":"     * @return A ToDo task parsed from the description and additional information.","lastModifiedDate":"2024-02-15"},{"lineNumber":193,"author":{"gitId":"Teee728"},"content":"     * @throws CruiseyException If there is an issue parsing the ToDo task.","lastModifiedDate":"2024-02-22"},{"lineNumber":194,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":195,"author":{"gitId":"Teee728"},"content":"    private Task parseToDoTask(String description, String additionalInfo) throws CruiseyException {","lastModifiedDate":"2024-02-22"},{"lineNumber":196,"author":{"gitId":"Teee728"},"content":"        TaskPriority priority \u003d parsePriority(additionalInfo);","lastModifiedDate":"2024-02-15"},{"lineNumber":197,"author":{"gitId":"Teee728"},"content":"        return new ToDo(description, ui, priority);","lastModifiedDate":"2024-02-15"},{"lineNumber":198,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":199,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":200,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":201,"author":{"gitId":"Teee728"},"content":"     * Parses a Deadline task from the given description and additional information.","lastModifiedDate":"2024-02-15"},{"lineNumber":202,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":203,"author":{"gitId":"Teee728"},"content":"     * The method extracts the \u0027by\u0027 information and priority from the additional information and creates a new Deadline","lastModifiedDate":"2024-02-15"},{"lineNumber":204,"author":{"gitId":"Teee728"},"content":"     * task.","lastModifiedDate":"2024-02-15"},{"lineNumber":205,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":206,"author":{"gitId":"Teee728"},"content":"     * @param description     The description of the Deadline task.","lastModifiedDate":"2024-02-15"},{"lineNumber":207,"author":{"gitId":"Teee728"},"content":"     * @param additionalInfo  The additional information containing \u0027by\u0027 and priority.","lastModifiedDate":"2024-02-15"},{"lineNumber":208,"author":{"gitId":"Teee728"},"content":"     * @return A Deadline task parsed from the description and additional information.","lastModifiedDate":"2024-02-15"},{"lineNumber":209,"author":{"gitId":"Teee728"},"content":"     * @throws CruiseyException If there is an issue parsing the Deadline task.","lastModifiedDate":"2024-02-22"},{"lineNumber":210,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":211,"author":{"gitId":"Teee728"},"content":"    private Task parseDeadlineTask(String description, String additionalInfo) throws CruiseyException {","lastModifiedDate":"2024-02-22"},{"lineNumber":212,"author":{"gitId":"Teee728"},"content":"        String by \u003d additionalInfo;","lastModifiedDate":"2024-02-15"},{"lineNumber":213,"author":{"gitId":"Teee728"},"content":"        TaskPriority priority \u003d parsePriority(by);","lastModifiedDate":"2024-02-15"},{"lineNumber":214,"author":{"gitId":"Teee728"},"content":"        return new Deadline(description, by, ui, priority);","lastModifiedDate":"2024-02-15"},{"lineNumber":215,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":216,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":217,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":218,"author":{"gitId":"Teee728"},"content":"     * Parses an Event task from the given description and additional information.","lastModifiedDate":"2024-02-15"},{"lineNumber":219,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":220,"author":{"gitId":"Teee728"},"content":"     * The method extracts the \u0027from,\u0027 \u0027to,\u0027 and priority information from the additional information and creates","lastModifiedDate":"2024-02-15"},{"lineNumber":221,"author":{"gitId":"Teee728"},"content":"     * a new Event task.","lastModifiedDate":"2024-02-15"},{"lineNumber":222,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":223,"author":{"gitId":"Teee728"},"content":"     * @param description     The description of the Event task.","lastModifiedDate":"2024-02-15"},{"lineNumber":224,"author":{"gitId":"Teee728"},"content":"     * @param additionalInfo  The additional information containing \u0027from,\u0027 \u0027to,\u0027 and priority.","lastModifiedDate":"2024-02-15"},{"lineNumber":225,"author":{"gitId":"Teee728"},"content":"     * @return An Event task parsed from the description and additional information.","lastModifiedDate":"2024-02-15"},{"lineNumber":226,"author":{"gitId":"Teee728"},"content":"     * @throws CruiseyException If there is an issue parsing the Event task.","lastModifiedDate":"2024-02-22"},{"lineNumber":227,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":228,"author":{"gitId":"Teee728"},"content":"    private Task parseEventTask(String description, String additionalInfo) throws CruiseyException {","lastModifiedDate":"2024-02-22"},{"lineNumber":229,"author":{"gitId":"Teee728"},"content":"        String[] parts \u003d additionalInfo.split(\"-\");","lastModifiedDate":"2024-02-15"},{"lineNumber":230,"author":{"gitId":"Teee728"},"content":"        String from \u003d parts[0].trim();","lastModifiedDate":"2024-02-15"},{"lineNumber":231,"author":{"gitId":"Teee728"},"content":"        String to \u003d parts[1].trim();","lastModifiedDate":"2024-02-15"},{"lineNumber":232,"author":{"gitId":"Teee728"},"content":"        TaskPriority priority \u003d parsePriority(to);","lastModifiedDate":"2024-02-15"},{"lineNumber":233,"author":{"gitId":"Teee728"},"content":"        return new Event(description, from, to, ui, priority);","lastModifiedDate":"2024-02-15"},{"lineNumber":234,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":235,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":236,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":237,"author":{"gitId":"Teee728"},"content":"     * Parses the priority information from the given string.","lastModifiedDate":"2024-02-15"},{"lineNumber":238,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":239,"author":{"gitId":"Teee728"},"content":"     * The method checks if the input string starts with the priority marker (\"/p\"). If it does, it extracts the","lastModifiedDate":"2024-02-15"},{"lineNumber":240,"author":{"gitId":"Teee728"},"content":"     * priority","lastModifiedDate":"2024-02-15"},{"lineNumber":241,"author":{"gitId":"Teee728"},"content":"     * string and converts it into a TaskPriority enum value.","lastModifiedDate":"2024-02-15"},{"lineNumber":242,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":243,"author":{"gitId":"Teee728"},"content":"     * @param info The string containing priority information.","lastModifiedDate":"2024-02-15"},{"lineNumber":244,"author":{"gitId":"Teee728"},"content":"     * @return The TaskPriority enum value parsed from the input string, or null if no priority is found.","lastModifiedDate":"2024-02-15"},{"lineNumber":245,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":246,"author":{"gitId":"Teee728"},"content":"    private TaskPriority parsePriority(String info) {","lastModifiedDate":"2024-02-15"},{"lineNumber":247,"author":{"gitId":"Teee728"},"content":"        if (info !\u003d null \u0026\u0026 info.startsWith(TaskPriority.PRIORITY_MARKER)) {","lastModifiedDate":"2024-02-15"},{"lineNumber":248,"author":{"gitId":"Teee728"},"content":"            String priorityString \u003d info.substring(TaskPriority.PRIORITY_MARKER.length()).trim();","lastModifiedDate":"2024-02-15"},{"lineNumber":249,"author":{"gitId":"Teee728"},"content":"            return TaskPriority.valueOf(priorityString);","lastModifiedDate":"2024-02-15"},{"lineNumber":250,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":251,"author":{"gitId":"Teee728"},"content":"        return null;","lastModifiedDate":"2024-02-15"},{"lineNumber":252,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":253,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":254,"author":{"gitId":"Teee728"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Teee728":254}},{"path":"src/main/java/cruisey/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Teee728"},"content":"package cruisey.task;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Teee728"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Teee728"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Teee728"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Teee728"},"content":"import cruisey.exception.CruiseyException;","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"Teee728"},"content":"import cruisey.ui.Ui;","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"Teee728"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"Teee728"},"content":" * The Deadline class represents a task with a specific deadline.","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"Teee728"},"content":" * It is a subclass of the Task class and includes information about the deadline.","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"Teee728"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"Teee728"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"Teee728"},"content":"     * The LocalDateTime representing the deadline.","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"Teee728"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"Teee728"},"content":"     * The string representation of the deadline (used when parsing or if LocalDateTime parsing fails).","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"Teee728"},"content":"    protected String byString;","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"Teee728"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"Teee728"},"content":"     * Constructs a Deadline object with the specified description and deadline string.","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"Teee728"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"Teee728"},"content":"     * @param byString    The string representation of the deadline.","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"Teee728"},"content":"     * @param priority    The priority of the task.","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"Teee728"},"content":"     * @throws CruiseyException If there are issues with the provided description or deadline.","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"Teee728"},"content":"    public Deadline(String description, String byString, Ui ui, TaskPriority priority) throws CruiseyException {","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"Teee728"},"content":"        super(TaskType.D, description, priority);","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"Teee728"},"content":"        this.byString \u003d byString.trim();","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"Teee728"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"Teee728"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2024-02-15"},{"lineNumber":39,"author":{"gitId":"Teee728"},"content":"        initializeDeadline();","lastModifiedDate":"2024-02-15"},{"lineNumber":40,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":41,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":43,"author":{"gitId":"Teee728"},"content":"     * Initializes the deadline for a Deadline task. Parses the input deadline string and sets","lastModifiedDate":"2024-02-15"},{"lineNumber":44,"author":{"gitId":"Teee728"},"content":"     * the corresponding LocalDateTime. Checks for errors in the input and displays appropriate","lastModifiedDate":"2024-02-15"},{"lineNumber":45,"author":{"gitId":"Teee728"},"content":"     * error messages using the Ui class.","lastModifiedDate":"2024-02-15"},{"lineNumber":46,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":47,"author":{"gitId":"Teee728"},"content":"     * @throws CruiseyException If there is an issue with initializing the deadline.","lastModifiedDate":"2024-02-22"},{"lineNumber":48,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":49,"author":{"gitId":"Teee728"},"content":"    private void initializeDeadline() throws CruiseyException {","lastModifiedDate":"2024-02-22"},{"lineNumber":50,"author":{"gitId":"Teee728"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"Teee728"},"content":"            if (!this.byString.isEmpty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"Teee728"},"content":"                DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"Teee728"},"content":"                this.by \u003d LocalDateTime.parse(byString, dateTimeFormatter);","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"Teee728"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"Teee728"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"Teee728"},"content":"            this.by \u003d null;","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"Teee728"},"content":"        if (this.by \u003d\u003d null \u0026\u0026 this.byString.isEmpty()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"Teee728"},"content":"            Ui.showError(\"by when? You forgot to enter \\\"/by\\\"\");","lastModifiedDate":"2024-02-15"},{"lineNumber":61,"author":{"gitId":"Teee728"},"content":"        } else if (description.isEmpty()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"Teee728"},"content":"            Ui.showError(\"you forgot to enter the task for which you have to complete it by\");","lastModifiedDate":"2024-02-15"},{"lineNumber":63,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"Teee728"},"content":"     * Gets the representation of the deadline (either LocalDateTime or the original string).","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"Teee728"},"content":"     * @return The deadline as an Object (either LocalDateTime or String).","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"Teee728"},"content":"    public Object getBy() {","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"Teee728"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2024-02-22"},{"lineNumber":73,"author":{"gitId":"Teee728"},"content":"        assert (this.by !\u003d null || !this.byString.isEmpty()) : \"Either LocalDateTime or byString should be non-null.\";","lastModifiedDate":"2024-02-14"},{"lineNumber":74,"author":{"gitId":"Teee728"},"content":"        assert !(this.by !\u003d null \u0026\u0026 !this.byString.isEmpty()) : \"Both LocalDateTime and byString should not be \"","lastModifiedDate":"2024-02-15"},{"lineNumber":75,"author":{"gitId":"Teee728"},"content":"                + \" non-null.\";","lastModifiedDate":"2024-02-15"},{"lineNumber":76,"author":{"gitId":"Teee728"},"content":"        return (this.by !\u003d null) ? getByTime().format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")) : getByString();","lastModifiedDate":"2024-02-22"},{"lineNumber":77,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":79,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"Teee728"},"content":"     * Gets the LocalDateTime representation of the deadline.","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"Teee728"},"content":"     * @return The deadline as a LocalDateTime object.","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"Teee728"},"content":"    public LocalDateTime getByTime() {","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"Teee728"},"content":"        assert this.by \u003d\u003d null || !this.byString.isEmpty() : \"Either LocalDateTime should be null or byString should \"","lastModifiedDate":"2024-02-15"},{"lineNumber":86,"author":{"gitId":"Teee728"},"content":"                + \"not be empty.\";","lastModifiedDate":"2024-02-15"},{"lineNumber":87,"author":{"gitId":"Teee728"},"content":"        return this.by;","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"Teee728"},"content":"     * Gets the string representation of the deadline.","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"Teee728"},"content":"     * @return The deadline as a string.","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"Teee728"},"content":"    public String getByString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"Teee728"},"content":"        assert this.by \u003d\u003d null || !this.byString.isEmpty() : \"Either LocalDateTime should be null or byString should \"","lastModifiedDate":"2024-02-15"},{"lineNumber":97,"author":{"gitId":"Teee728"},"content":"               + \"not be empty.\";","lastModifiedDate":"2024-02-15"},{"lineNumber":98,"author":{"gitId":"Teee728"},"content":"        return this.byString;","lastModifiedDate":"2024-01-31"},{"lineNumber":99,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":101,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":102,"author":{"gitId":"Teee728"},"content":"     * Overrides the toString method to provide a formatted string representation of the Deadline task.","lastModifiedDate":"2024-02-01"},{"lineNumber":103,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":104,"author":{"gitId":"Teee728"},"content":"     * @return Formatted string representation of the Deadline task.","lastModifiedDate":"2024-02-01"},{"lineNumber":105,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":106,"author":{"gitId":"Teee728"},"content":"    public String getMessage() {","lastModifiedDate":"2024-02-07"},{"lineNumber":107,"author":{"gitId":"Teee728"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2024-02-15"},{"lineNumber":108,"author":{"gitId":"Teee728"},"content":"        String byStringFormatted \u003d this.by !\u003d null","lastModifiedDate":"2024-02-15"},{"lineNumber":109,"author":{"gitId":"Teee728"},"content":"                ? \" (by: \" + by.format(formatter) + \")\"","lastModifiedDate":"2024-02-15"},{"lineNumber":110,"author":{"gitId":"Teee728"},"content":"                : (!this.byString.isEmpty() ? \" (by: \" + this.byString + \")\" : \"\");","lastModifiedDate":"2024-02-15"},{"lineNumber":111,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":112,"author":{"gitId":"Teee728"},"content":"        String priorityFormatted \u003d (priority !\u003d null) ? \" [Priority: \" + priority + \"]\" : \"\";","lastModifiedDate":"2024-02-15"},{"lineNumber":113,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":114,"author":{"gitId":"Teee728"},"content":"        assert (this.by !\u003d null || !this.byString.isEmpty()) : \"Either LocalDateTime or byString should be non-null.\";","lastModifiedDate":"2024-02-14"},{"lineNumber":115,"author":{"gitId":"Teee728"},"content":"        assert !(this.by !\u003d null \u0026\u0026 !this.byString.isEmpty()) : \"Both LocalDateTime and byString should not \"","lastModifiedDate":"2024-02-15"},{"lineNumber":116,"author":{"gitId":"Teee728"},"content":"                + \"be non-null.\";","lastModifiedDate":"2024-02-15"},{"lineNumber":117,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":118,"author":{"gitId":"Teee728"},"content":"        return ui.printMessage(\"Coool, I\u0027ve added this task:\\n [D][\" + getStatusIcon() + \"] \"","lastModifiedDate":"2024-02-22"},{"lineNumber":119,"author":{"gitId":"Teee728"},"content":"                + getDescription() + byStringFormatted + priorityFormatted);","lastModifiedDate":"2024-02-15"},{"lineNumber":120,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":121,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":122,"author":{"gitId":"Teee728"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Teee728":122}},{"path":"src/main/java/cruisey/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Teee728"},"content":"package cruisey.task;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Teee728"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Teee728"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Teee728"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Teee728"},"content":"import cruisey.exception.CruiseyException;","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"Teee728"},"content":"import cruisey.ui.Ui;","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"Teee728"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"Teee728"},"content":" * The Event class represents a task that spans a specific duration.","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"Teee728"},"content":" * It is a subclass of the Task class and includes information about the start and end times.","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"Teee728"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"Teee728"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Teee728"},"content":"    /** The LocalDateTime representing the start time of the event. */","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"Teee728"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"Teee728"},"content":"    /** The string representation of the start time (used when parsing or if LocalDateTime parsing fails). */","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"Teee728"},"content":"    protected String fromString;","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"Teee728"},"content":"    /** The LocalDateTime representing the end time of the event. */","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"Teee728"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"Teee728"},"content":"    /** The string representation of the end time (used when parsing or if LocalDateTime parsing fails). */","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"Teee728"},"content":"    protected String toString;","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"Teee728"},"content":"    protected TaskPriority priority;","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"Teee728"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"Teee728"},"content":"     * Constructs an Event object with the specified description, start time string, and end time string.","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"Teee728"},"content":"     * @param description The description of the event.","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"Teee728"},"content":"     * @param fromString   The string representation of the start time.","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"Teee728"},"content":"     * @param toString     The string representation of the end time.","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"Teee728"},"content":"     * @param priority    The priority of the task.","lastModifiedDate":"2024-02-15"},{"lineNumber":37,"author":{"gitId":"Teee728"},"content":"     * @throws CruiseyException If there are issues with the provided description or duration.","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"Teee728"},"content":"    public Event(String description, String fromString, String toString, Ui ui, TaskPriority priority)","lastModifiedDate":"2024-02-15"},{"lineNumber":40,"author":{"gitId":"Teee728"},"content":"            throws CruiseyException {","lastModifiedDate":"2024-02-22"},{"lineNumber":41,"author":{"gitId":"Teee728"},"content":"        super(TaskType.E, description, priority);","lastModifiedDate":"2024-02-15"},{"lineNumber":42,"author":{"gitId":"Teee728"},"content":"        this.fromString \u003d fromString.trim();","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"Teee728"},"content":"        this.toString \u003d toString.trim();","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"Teee728"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"Teee728"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2024-02-15"},{"lineNumber":46,"author":{"gitId":"Teee728"},"content":"        initializeEvent();","lastModifiedDate":"2024-02-15"},{"lineNumber":47,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":48,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":50,"author":{"gitId":"Teee728"},"content":"     * Initializes the event by parsing the \"from\" and \"to\" date-time strings using the specified date-time format.","lastModifiedDate":"2024-02-15"},{"lineNumber":51,"author":{"gitId":"Teee728"},"content":"     * Validates the inputs and ensures that either LocalDateTime or its corresponding string representation is","lastModifiedDate":"2024-02-15"},{"lineNumber":52,"author":{"gitId":"Teee728"},"content":"     * non-null.","lastModifiedDate":"2024-02-15"},{"lineNumber":53,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":54,"author":{"gitId":"Teee728"},"content":"     * @throws CruiseyException If there is an issue with the date-time parsing or if the inputs are invalid.","lastModifiedDate":"2024-02-22"},{"lineNumber":55,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":56,"author":{"gitId":"Teee728"},"content":"    public void initializeEvent() throws CruiseyException {","lastModifiedDate":"2024-02-22"},{"lineNumber":57,"author":{"gitId":"Teee728"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"Teee728"},"content":"            DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"Teee728"},"content":"            this.from \u003d LocalDateTime.parse(fromString, dateTimeFormatter);","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"Teee728"},"content":"            this.to \u003d LocalDateTime.parse(toString, dateTimeFormatter);","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"Teee728"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"Teee728"},"content":"            this.from \u003d null;","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"Teee728"},"content":"            this.to \u003d null;","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"Teee728"},"content":"        validateInputs();","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":68,"author":{"gitId":"Teee728"},"content":"        assert (this.from !\u003d null || !this.fromString.isEmpty()) : \"Either LocalDateTime or fromString should be\"","lastModifiedDate":"2024-02-15"},{"lineNumber":69,"author":{"gitId":"Teee728"},"content":"                + \" non-null.\";","lastModifiedDate":"2024-02-15"},{"lineNumber":70,"author":{"gitId":"Teee728"},"content":"        assert (this.to !\u003d null || !this.toString.isEmpty()) : \"Either LocalDateTime or toString should be\"","lastModifiedDate":"2024-02-15"},{"lineNumber":71,"author":{"gitId":"Teee728"},"content":"                + \" non-null.\";","lastModifiedDate":"2024-02-15"},{"lineNumber":72,"author":{"gitId":"Teee728"},"content":"        assert !(this.from !\u003d null \u0026\u0026 !this.fromString.isEmpty()) : \"Both LocalDateTime and fromString should not\"","lastModifiedDate":"2024-02-15"},{"lineNumber":73,"author":{"gitId":"Teee728"},"content":"                + \" be non-null.\";","lastModifiedDate":"2024-02-15"},{"lineNumber":74,"author":{"gitId":"Teee728"},"content":"        assert !(this.to !\u003d null \u0026\u0026 !this.toString.isEmpty()) : \"Both LocalDateTime and toString should not \"","lastModifiedDate":"2024-02-15"},{"lineNumber":75,"author":{"gitId":"Teee728"},"content":"                + \"be non-null.\";","lastModifiedDate":"2024-02-15"},{"lineNumber":76,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"Teee728"},"content":"     * Gets the representation of the start time (either LocalDateTime or the original string).","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"Teee728"},"content":"     * @return The start time as an Object (either LocalDateTime or String).","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"Teee728"},"content":"    public Object getFrom() {","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"Teee728"},"content":"        return (this.from !\u003d null) ? getFromTime().format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"))","lastModifiedDate":"2024-02-22"},{"lineNumber":85,"author":{"gitId":"Teee728"},"content":"                : getFromString();","lastModifiedDate":"2024-02-22"},{"lineNumber":86,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"Teee728"},"content":"     * Gets the representation of the end time (either LocalDateTime or the original string).","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"Teee728"},"content":"     * @return The end time as an Object (either LocalDateTime or String).","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"Teee728"},"content":"    public Object getTo() {","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"Teee728"},"content":"        return (this.to !\u003d null) ? getToTime().format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")) : getToString();","lastModifiedDate":"2024-02-22"},{"lineNumber":94,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":95,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"Teee728"},"content":"     * Validates the inputs to ensure that required information is provided.","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":99,"author":{"gitId":"Teee728"},"content":"     * @throws CruiseyException If validation fails.","lastModifiedDate":"2024-02-22"},{"lineNumber":100,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":101,"author":{"gitId":"Teee728"},"content":"    private void validateInputs() throws CruiseyException {","lastModifiedDate":"2024-02-22"},{"lineNumber":102,"author":{"gitId":"Teee728"},"content":"        if ((from \u003d\u003d null \u0026\u0026 to \u003d\u003d null) \u0026\u0026 (fromString.isEmpty() \u0026\u0026 toString.isEmpty())) {","lastModifiedDate":"2024-01-31"},{"lineNumber":103,"author":{"gitId":"Teee728"},"content":"            Ui.showError(\"You did not mention the duration! Please re-enter correctly!\");","lastModifiedDate":"2024-02-15"},{"lineNumber":104,"author":{"gitId":"Teee728"},"content":"        } else if (from \u003d\u003d null \u0026\u0026 fromString.isEmpty()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":105,"author":{"gitId":"Teee728"},"content":"            Ui.showError(\"You did not mention from when! Please re-enter correctly!\");","lastModifiedDate":"2024-02-15"},{"lineNumber":106,"author":{"gitId":"Teee728"},"content":"        } else if (to \u003d\u003d null \u0026\u0026 toString.isEmpty()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":107,"author":{"gitId":"Teee728"},"content":"            Ui.showError(\"You did not mention till when! Please re-enter correctly!\");","lastModifiedDate":"2024-02-15"},{"lineNumber":108,"author":{"gitId":"Teee728"},"content":"        } else if (description.isEmpty()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":109,"author":{"gitId":"Teee728"},"content":"            Ui.showError(\"You didn\u0027t specify the event!\");","lastModifiedDate":"2024-02-15"},{"lineNumber":110,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":111,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":112,"author":{"gitId":"Teee728"},"content":"        assert (from \u003d\u003d null \u0026\u0026 to \u003d\u003d null) || (!fromString.isEmpty() \u0026\u0026 !toString.isEmpty())","lastModifiedDate":"2024-02-15"},{"lineNumber":113,"author":{"gitId":"Teee728"},"content":"                : \"Either both LocalDateTime objects (from and to) should be null, or both fromString and toString \"","lastModifiedDate":"2024-02-15"},{"lineNumber":114,"author":{"gitId":"Teee728"},"content":"                        + \"should be non-empty.\";","lastModifiedDate":"2024-02-15"},{"lineNumber":115,"author":{"gitId":"Teee728"},"content":"        assert !(from \u003d\u003d null \u0026\u0026 fromString.isEmpty()) : \"Either from LocalDateTime object should be non-null, or \"","lastModifiedDate":"2024-02-15"},{"lineNumber":116,"author":{"gitId":"Teee728"},"content":"                + \"fromString should be non-empty.\";","lastModifiedDate":"2024-02-15"},{"lineNumber":117,"author":{"gitId":"Teee728"},"content":"        assert !(to \u003d\u003d null \u0026\u0026 toString.isEmpty()) : \"Either to LocalDateTime object should be non-null, or toString\"","lastModifiedDate":"2024-02-15"},{"lineNumber":118,"author":{"gitId":"Teee728"},"content":"                + \" should be non-empty.\";","lastModifiedDate":"2024-02-15"},{"lineNumber":119,"author":{"gitId":"Teee728"},"content":"        assert description !\u003d null : \"Description should not be null.\";","lastModifiedDate":"2024-02-14"},{"lineNumber":120,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":121,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":122,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":123,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":124,"author":{"gitId":"Teee728"},"content":"     * Gets the LocalDateTime representation of the start time.","lastModifiedDate":"2024-02-01"},{"lineNumber":125,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":126,"author":{"gitId":"Teee728"},"content":"     * @return The start time as a LocalDateTime object.","lastModifiedDate":"2024-02-01"},{"lineNumber":127,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":128,"author":{"gitId":"Teee728"},"content":"    public LocalDateTime getFromTime() {","lastModifiedDate":"2024-01-31"},{"lineNumber":129,"author":{"gitId":"Teee728"},"content":"        return this.from;","lastModifiedDate":"2024-01-31"},{"lineNumber":130,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":131,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":132,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":133,"author":{"gitId":"Teee728"},"content":"     * Gets the LocalDateTime representation of the end time.","lastModifiedDate":"2024-02-01"},{"lineNumber":134,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":135,"author":{"gitId":"Teee728"},"content":"     * @return The end time as a LocalDateTime object.","lastModifiedDate":"2024-02-01"},{"lineNumber":136,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":137,"author":{"gitId":"Teee728"},"content":"    public LocalDateTime getToTime() {","lastModifiedDate":"2024-01-31"},{"lineNumber":138,"author":{"gitId":"Teee728"},"content":"        return this.to;","lastModifiedDate":"2024-01-31"},{"lineNumber":139,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":140,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":141,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":142,"author":{"gitId":"Teee728"},"content":"     * Gets the string representation of the start time.","lastModifiedDate":"2024-02-01"},{"lineNumber":143,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":144,"author":{"gitId":"Teee728"},"content":"     * @return The start time as a string.","lastModifiedDate":"2024-02-01"},{"lineNumber":145,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":146,"author":{"gitId":"Teee728"},"content":"    public String getFromString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":147,"author":{"gitId":"Teee728"},"content":"        return this.fromString;","lastModifiedDate":"2024-01-31"},{"lineNumber":148,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":149,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":150,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":151,"author":{"gitId":"Teee728"},"content":"     * Gets the string representation of the end time.","lastModifiedDate":"2024-02-01"},{"lineNumber":152,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":153,"author":{"gitId":"Teee728"},"content":"     * @return The end time as a string.","lastModifiedDate":"2024-02-01"},{"lineNumber":154,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":155,"author":{"gitId":"Teee728"},"content":"    public String getToString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":156,"author":{"gitId":"Teee728"},"content":"        return this.toString;","lastModifiedDate":"2024-01-31"},{"lineNumber":157,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":158,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":159,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":160,"author":{"gitId":"Teee728"},"content":"     * Overrides the toString method to provide a formatted string representation of the Event task.","lastModifiedDate":"2024-02-01"},{"lineNumber":161,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":162,"author":{"gitId":"Teee728"},"content":"     * @return Formatted string representation of the Event task.","lastModifiedDate":"2024-02-01"},{"lineNumber":163,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":164,"author":{"gitId":"Teee728"},"content":"    public String getMessage() {","lastModifiedDate":"2024-02-07"},{"lineNumber":165,"author":{"gitId":"Teee728"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2024-02-15"},{"lineNumber":166,"author":{"gitId":"Teee728"},"content":"        String fromStringFormatted \u003d (from !\u003d null)","lastModifiedDate":"2024-02-15"},{"lineNumber":167,"author":{"gitId":"Teee728"},"content":"                ? \" from: \" + from.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"))","lastModifiedDate":"2024-02-15"},{"lineNumber":168,"author":{"gitId":"Teee728"},"content":"                : (this.fromString !\u003d null ? \" from: \" + this.fromString : \"\");","lastModifiedDate":"2024-02-15"},{"lineNumber":169,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":170,"author":{"gitId":"Teee728"},"content":"        String toStringFormatted \u003d (to !\u003d null)","lastModifiedDate":"2024-02-15"},{"lineNumber":171,"author":{"gitId":"Teee728"},"content":"                ? \" to: \" + to.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"))","lastModifiedDate":"2024-02-15"},{"lineNumber":172,"author":{"gitId":"Teee728"},"content":"                : (this.toString !\u003d null ? \" to: \" + this.toString : \"\");","lastModifiedDate":"2024-02-15"},{"lineNumber":173,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":174,"author":{"gitId":"Teee728"},"content":"        String priorityFormatted \u003d (priority !\u003d null) ? \" [Priority: \" + priority + \"]\" : \"\";","lastModifiedDate":"2024-02-15"},{"lineNumber":175,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":176,"author":{"gitId":"Teee728"},"content":"        return ui.printMessage(\"Coool, I\u0027ve added this task:\\n [E][\" + getStatusIcon() + \"] \" + getDescription()","lastModifiedDate":"2024-02-22"},{"lineNumber":177,"author":{"gitId":"Teee728"},"content":"                + fromStringFormatted + toStringFormatted + priorityFormatted);","lastModifiedDate":"2024-02-15"},{"lineNumber":178,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":179,"author":{"gitId":"Teee728"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Teee728":179}},{"path":"src/main/java/cruisey/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Teee728"},"content":"package cruisey.task;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"Teee728"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"Teee728"},"content":" * The Task class represents a generic task with a description and completion status.","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"Teee728"},"content":" * It serves as the base class for more specific task types.","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"Teee728"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"Teee728"},"content":"public class Task {","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Teee728"},"content":"    /** The description of the task. */","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"Teee728"},"content":"    protected String description;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Teee728"},"content":"    /** The type of the task (e.g., ToDo, Deadline, Event). */","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"Teee728"},"content":"    protected TaskType type;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Teee728"},"content":"    /** The completion status of the task. */","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"Teee728"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Teee728"},"content":"    /** The status icon indicating whether the task is done or not. */","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"Teee728"},"content":"    protected String statusIcon;","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"Teee728"},"content":"    /** The priority of the task. */","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"Teee728"},"content":"    protected TaskPriority priority;","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"Teee728"},"content":"     * Constructs a Task object with the specified type and description.","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"Teee728"},"content":"     * @param type        The type of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"Teee728"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"Teee728"},"content":"     * @param priority    The priority of the task","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"Teee728"},"content":"    public Task(TaskType type, String description, TaskPriority priority) {","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"Teee728"},"content":"        this.type \u003d type;","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"Teee728"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"Teee728"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2024-02-15"},{"lineNumber":30,"author":{"gitId":"Teee728"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"Teee728"},"content":"        updateStatusIcon();","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"Teee728"},"content":"     * Constructs a Task object with the specified description.","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"Teee728"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"Teee728"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"Teee728"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"Teee728"},"content":"     * Checks and returns the completion status of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"Teee728"},"content":"     * @return True if the task is marked as done, false otherwise.","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"Teee728"},"content":"    public boolean checkStatus() {","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"Teee728"},"content":"        return this.isDone;","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"Teee728"},"content":"     * Gets the type of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"Teee728"},"content":"     * @return The type of the task (e.g., ToDo, Deadline, Event).","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"Teee728"},"content":"    public TaskType getType() {","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"Teee728"},"content":"        return this.type;","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"Teee728"},"content":"     * Updates the status icon based on the completion status.","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"Teee728"},"content":"    private void updateStatusIcon() {","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"Teee728"},"content":"        this.statusIcon \u003d (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"Teee728"},"content":"     * Gets the status icon indicating whether the task is done or not.","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"Teee728"},"content":"     * @return The status icon (\"X\" if done, \" \" if not done).","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"Teee728"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"Teee728"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"Teee728"},"content":"     * Gets the description of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"Teee728"},"content":"     * @return The description of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"Teee728"},"content":"    public String getDescription() {","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"Teee728"},"content":"        return this.description;","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":87,"author":{"gitId":"Teee728"},"content":"     * Sets the priority of the task.","lastModifiedDate":"2024-02-15"},{"lineNumber":88,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":89,"author":{"gitId":"Teee728"},"content":"     * This method allows updating the priority of the task by setting the provided TaskPriority.","lastModifiedDate":"2024-02-15"},{"lineNumber":90,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":91,"author":{"gitId":"Teee728"},"content":"     * @param priority The TaskPriority to set for the task.","lastModifiedDate":"2024-02-15"},{"lineNumber":92,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":93,"author":{"gitId":"Teee728"},"content":"    public void setPriority(TaskPriority priority) {","lastModifiedDate":"2024-02-15"},{"lineNumber":94,"author":{"gitId":"Teee728"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2024-02-15"},{"lineNumber":95,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":96,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":97,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":98,"author":{"gitId":"Teee728"},"content":"     * Retrieves the priority of the task.","lastModifiedDate":"2024-02-15"},{"lineNumber":99,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":100,"author":{"gitId":"Teee728"},"content":"     * This method returns the current TaskPriority assigned to the task.","lastModifiedDate":"2024-02-15"},{"lineNumber":101,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":102,"author":{"gitId":"Teee728"},"content":"     * @return The TaskPriority of the task.","lastModifiedDate":"2024-02-15"},{"lineNumber":103,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":104,"author":{"gitId":"Teee728"},"content":"    public TaskPriority getPriority() {","lastModifiedDate":"2024-02-15"},{"lineNumber":105,"author":{"gitId":"Teee728"},"content":"        return this.priority;","lastModifiedDate":"2024-02-15"},{"lineNumber":106,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":107,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":108,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":109,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":110,"author":{"gitId":"Teee728"},"content":"     * Gets a message associated with the task.","lastModifiedDate":"2024-02-15"},{"lineNumber":111,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":112,"author":{"gitId":"Teee728"},"content":"     * This method returns an empty string as a placeholder. Subclasses can override this method to provide specific","lastModifiedDate":"2024-02-15"},{"lineNumber":113,"author":{"gitId":"Teee728"},"content":"     * messages associated with the task type.","lastModifiedDate":"2024-02-15"},{"lineNumber":114,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":115,"author":{"gitId":"Teee728"},"content":"     * @return An empty string.","lastModifiedDate":"2024-02-15"},{"lineNumber":116,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":117,"author":{"gitId":"Teee728"},"content":"    public String getMessage() {","lastModifiedDate":"2024-02-15"},{"lineNumber":118,"author":{"gitId":"Teee728"},"content":"        return \"\";","lastModifiedDate":"2024-02-15"},{"lineNumber":119,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":120,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":121,"author":{"gitId":"Teee728"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Teee728":121}},{"path":"src/main/java/cruisey/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Teee728"},"content":"package cruisey.task;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"Teee728"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"Teee728"},"content":"import cruisey.exception.CruiseyException;","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"Teee728"},"content":"import cruisey.ui.Ui;","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Teee728"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"Teee728"},"content":" * The TaskList class represents a list of tasks in the Duke application.","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"Teee728"},"content":" * It provides methods to add, delete, mark, unmark, and display tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"Teee728"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"Teee728"},"content":"public class TaskList {","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Teee728"},"content":"    /** The list of tasks. */","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"Teee728"},"content":"    private ArrayList \u003c Task \u003e tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"Teee728"},"content":"    /** The user interface for displaying messages related to task operations. */","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"Teee728"},"content":"    private Ui ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"Teee728"},"content":"     * Constructs a TaskList with the specified list of tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"Teee728"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"Teee728"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks, Ui ui) {","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"Teee728"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"Teee728"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"Teee728"},"content":"        assert this.tasks !\u003d null : \"Task list should not be null.\";","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"Teee728"},"content":"        assert this.ui !\u003d null : \"UI should not be null.\";","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"Teee728"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"Teee728"},"content":"    public TaskList() {","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"Teee728"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"Teee728"},"content":"        assert this.tasks !\u003d null : \"Task list should not be null.\";","lastModifiedDate":"2024-02-14"},{"lineNumber":37,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":39,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"Teee728"},"content":"     * Adds a generic task to the task list.","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"Teee728"},"content":"     * @param task The task to be added.","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"Teee728"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"Teee728"},"content":"        assert task !\u003d null : \"Task to be added should not be null.\";","lastModifiedDate":"2024-02-14"},{"lineNumber":46,"author":{"gitId":"Teee728"},"content":"        tasks.add(task);","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"Teee728"},"content":"     * Adds a ToDo task to the task list and prints its details.","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"Teee728"},"content":"     * @param task The ToDo task to be added.","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"Teee728"},"content":"    public void addToDoTask(ToDo task) {","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"Teee728"},"content":"        assert task !\u003d null : \"ToDo task to be added should not be null.\";","lastModifiedDate":"2024-02-14"},{"lineNumber":56,"author":{"gitId":"Teee728"},"content":"        tasks.add(task);","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"Teee728"},"content":"        System.out.println(task.toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"Teee728"},"content":"     * Adds a Deadline task to the task list and prints its details.","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"Teee728"},"content":"     * @param task The Deadline task to be added.","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"Teee728"},"content":"    public void addDeadlineTask(Deadline task) {","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"Teee728"},"content":"        assert task !\u003d null : \"Deadline task to be added should not be null.\";","lastModifiedDate":"2024-02-14"},{"lineNumber":67,"author":{"gitId":"Teee728"},"content":"        tasks.add(task);","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"Teee728"},"content":"        System.out.println(task.toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"Teee728"},"content":"     * Adds an Event task to the task list and prints its details.","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"Teee728"},"content":"     * @param task The Event task to be added.","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"Teee728"},"content":"    public void addEventTask(Event task) {","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"Teee728"},"content":"        assert task !\u003d null : \"Event task to be added should not be null.\";","lastModifiedDate":"2024-02-14"},{"lineNumber":78,"author":{"gitId":"Teee728"},"content":"        tasks.add(task);","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"Teee728"},"content":"        System.out.println(task.toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"Teee728"},"content":"     * Retrieves a task from the task list based on the specified index.","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"Teee728"},"content":"     * @param index The index of the task in the list.","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"Teee728"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"Teee728"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"Teee728"},"content":"        assert index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size() : \"Index should be within bounds.\";","lastModifiedDate":"2024-02-14"},{"lineNumber":90,"author":{"gitId":"Teee728"},"content":"        return tasks.get(index);","lastModifiedDate":"2024-01-31"},{"lineNumber":91,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":92,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"Teee728"},"content":"     * Gets the number of tasks in the task list.","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"Teee728"},"content":"     * @return The number of tasks in the task list.","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"Teee728"},"content":"    public int size() {","lastModifiedDate":"2024-01-31"},{"lineNumber":99,"author":{"gitId":"Teee728"},"content":"        return tasks.size();","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":101,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":102,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":103,"author":{"gitId":"Teee728"},"content":"     * Deletes a task from the task list based on the specified index.","lastModifiedDate":"2024-02-01"},{"lineNumber":104,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":105,"author":{"gitId":"Teee728"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2024-02-01"},{"lineNumber":106,"author":{"gitId":"Teee728"},"content":"     * @throws CruiseyException If the index is out of bounds.","lastModifiedDate":"2024-02-22"},{"lineNumber":107,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":108,"author":{"gitId":"Teee728"},"content":"    public String deleteTask(int index) throws CruiseyException {","lastModifiedDate":"2024-02-22"},{"lineNumber":109,"author":{"gitId":"Teee728"},"content":"        assert index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size() : \"Index should be within bounds.\";","lastModifiedDate":"2024-02-14"},{"lineNumber":110,"author":{"gitId":"Teee728"},"content":"        Task removedTask \u003d tasks.remove(index);","lastModifiedDate":"2024-01-31"},{"lineNumber":111,"author":{"gitId":"Teee728"},"content":"        return this.ui.printDeletedTaskMessage(removedTask);","lastModifiedDate":"2024-02-07"},{"lineNumber":112,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":113,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":114,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":115,"author":{"gitId":"Teee728"},"content":"     * Marks a task as done and prints a message.","lastModifiedDate":"2024-02-01"},{"lineNumber":116,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":117,"author":{"gitId":"Teee728"},"content":"     * @param job The task to be marked as done.","lastModifiedDate":"2024-02-01"},{"lineNumber":118,"author":{"gitId":"Teee728"},"content":"     * @throws CruiseyException If the task is already marked as done.","lastModifiedDate":"2024-02-22"},{"lineNumber":119,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":120,"author":{"gitId":"Teee728"},"content":"    public String markStatus(Task job) throws CruiseyException {","lastModifiedDate":"2024-02-22"},{"lineNumber":121,"author":{"gitId":"Teee728"},"content":"        assert job !\u003d null : \"Task to be marked should not be null.\";","lastModifiedDate":"2024-02-14"},{"lineNumber":122,"author":{"gitId":"Teee728"},"content":"        if (job.isDone) {","lastModifiedDate":"2024-01-31"},{"lineNumber":123,"author":{"gitId":"Teee728"},"content":"            return Ui.showError(\"This task is already marked as done.\");","lastModifiedDate":"2024-02-07"},{"lineNumber":124,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":125,"author":{"gitId":"Teee728"},"content":"        job.isDone \u003d true;","lastModifiedDate":"2024-01-31"},{"lineNumber":126,"author":{"gitId":"Teee728"},"content":"        return this.ui.markTask(job);","lastModifiedDate":"2024-02-07"},{"lineNumber":127,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":128,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":129,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":130,"author":{"gitId":"Teee728"},"content":"     * Unmarks a task as done and prints a message.","lastModifiedDate":"2024-02-01"},{"lineNumber":131,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":132,"author":{"gitId":"Teee728"},"content":"     * @param job The task to be unmarked.","lastModifiedDate":"2024-02-01"},{"lineNumber":133,"author":{"gitId":"Teee728"},"content":"     * @throws CruiseyException If the task is already marked as not done.","lastModifiedDate":"2024-02-22"},{"lineNumber":134,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":135,"author":{"gitId":"Teee728"},"content":"    public String unmarkStatus(Task job) throws CruiseyException {","lastModifiedDate":"2024-02-22"},{"lineNumber":136,"author":{"gitId":"Teee728"},"content":"        assert job !\u003d null : \"Task to be unmarked should not be null.\";","lastModifiedDate":"2024-02-14"},{"lineNumber":137,"author":{"gitId":"Teee728"},"content":"        if (!job.isDone) {","lastModifiedDate":"2024-01-31"},{"lineNumber":138,"author":{"gitId":"Teee728"},"content":"            return Ui.showError(\"This task is already marked as not done.\");","lastModifiedDate":"2024-02-07"},{"lineNumber":139,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":140,"author":{"gitId":"Teee728"},"content":"        job.isDone \u003d false;","lastModifiedDate":"2024-01-31"},{"lineNumber":141,"author":{"gitId":"Teee728"},"content":"        return this.ui.unmarkTask(job);","lastModifiedDate":"2024-02-07"},{"lineNumber":142,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":143,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":144,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":145,"author":{"gitId":"Teee728"},"content":"     * Displays the list of tasks along with their details.","lastModifiedDate":"2024-02-01"},{"lineNumber":146,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":147,"author":{"gitId":"Teee728"},"content":"     * @param taskList The TaskList to be displayed.","lastModifiedDate":"2024-02-01"},{"lineNumber":148,"author":{"gitId":"Teee728"},"content":"     * @throws CruiseyException If there is an issue displaying the task list.","lastModifiedDate":"2024-02-22"},{"lineNumber":149,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":150,"author":{"gitId":"Teee728"},"content":"    public static String getList(TaskList taskList) throws CruiseyException {","lastModifiedDate":"2024-02-22"},{"lineNumber":151,"author":{"gitId":"Teee728"},"content":"        assert taskList !\u003d null : \"TaskList to be displayed should not be null\";","lastModifiedDate":"2024-02-15"},{"lineNumber":152,"author":{"gitId":"Teee728"},"content":"        StringBuilder taskDetails \u003d new StringBuilder();","lastModifiedDate":"2024-02-15"},{"lineNumber":153,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":154,"author":{"gitId":"Teee728"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2024-01-31"},{"lineNumber":155,"author":{"gitId":"Teee728"},"content":"            Task task \u003d taskList.getTask(i);","lastModifiedDate":"2024-01-31"},{"lineNumber":156,"author":{"gitId":"Teee728"},"content":"            appendTaskDetails(taskDetails, i + 1, task);","lastModifiedDate":"2024-02-15"},{"lineNumber":157,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":158,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":159,"author":{"gitId":"Teee728"},"content":"        return Ui.printMessage(taskDetails.toString());","lastModifiedDate":"2024-02-15"},{"lineNumber":160,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":161,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":162,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":163,"author":{"gitId":"Teee728"},"content":"     * Appends the formatted details of a task to a StringBuilder, including task type, status icon,","lastModifiedDate":"2024-02-15"},{"lineNumber":164,"author":{"gitId":"Teee728"},"content":"     * and description. If the task is an instance of Deadline or Event, additional details are appended.","lastModifiedDate":"2024-02-15"},{"lineNumber":165,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":166,"author":{"gitId":"Teee728"},"content":"     * @param taskDetails StringBuilder to append the formatted task details.","lastModifiedDate":"2024-02-15"},{"lineNumber":167,"author":{"gitId":"Teee728"},"content":"     * @param index       Index of the task in the list.","lastModifiedDate":"2024-02-15"},{"lineNumber":168,"author":{"gitId":"Teee728"},"content":"     * @param task        The Task object to extract details from.","lastModifiedDate":"2024-02-15"},{"lineNumber":169,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":170,"author":{"gitId":"Teee728"},"content":"    private static void appendTaskDetails(StringBuilder taskDetails, int index, Task task) {","lastModifiedDate":"2024-02-15"},{"lineNumber":171,"author":{"gitId":"Teee728"},"content":"        taskDetails.append(index).append(\".[\").append(task.getType()).append(\"][\");","lastModifiedDate":"2024-02-15"},{"lineNumber":172,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":173,"author":{"gitId":"Teee728"},"content":"        if (task !\u003d null) {","lastModifiedDate":"2024-02-15"},{"lineNumber":174,"author":{"gitId":"Teee728"},"content":"            taskDetails.append(task.getStatusIcon()).append(\"] \").append(task.getDescription());","lastModifiedDate":"2024-02-15"},{"lineNumber":175,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":176,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":177,"author":{"gitId":"Teee728"},"content":"        if (task instanceof Deadline) {","lastModifiedDate":"2024-01-31"},{"lineNumber":178,"author":{"gitId":"Teee728"},"content":"            appendDeadlineDetails(taskDetails, (Deadline) task);","lastModifiedDate":"2024-02-15"},{"lineNumber":179,"author":{"gitId":"Teee728"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2024-01-31"},{"lineNumber":180,"author":{"gitId":"Teee728"},"content":"            appendEventDetails(taskDetails, (Event) task);","lastModifiedDate":"2024-02-15"},{"lineNumber":181,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":182,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":183,"author":{"gitId":"Teee728"},"content":"        taskDetails.append(appendPriority(task)).append(\"\\n\");","lastModifiedDate":"2024-02-15"},{"lineNumber":184,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":185,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":186,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":187,"author":{"gitId":"Teee728"},"content":"     * Appends the formatted details of a Deadline task to a StringBuilder, including the deadline.","lastModifiedDate":"2024-02-15"},{"lineNumber":188,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":189,"author":{"gitId":"Teee728"},"content":"     * @param taskDetails    StringBuilder to append the formatted deadline details.","lastModifiedDate":"2024-02-15"},{"lineNumber":190,"author":{"gitId":"Teee728"},"content":"     * @param deadlineTask   The Deadline task object to extract details from.","lastModifiedDate":"2024-02-15"},{"lineNumber":191,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":192,"author":{"gitId":"Teee728"},"content":"    private static void appendDeadlineDetails(StringBuilder taskDetails, Deadline deadlineTask) {","lastModifiedDate":"2024-02-15"},{"lineNumber":193,"author":{"gitId":"Teee728"},"content":"        taskDetails.append(\" (by: \").append(deadlineTask.getBy()).append(\")\");","lastModifiedDate":"2024-02-15"},{"lineNumber":194,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":195,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":196,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":197,"author":{"gitId":"Teee728"},"content":"     * Appends the formatted details of an Event task to a StringBuilder, including the event\u0027s start","lastModifiedDate":"2024-02-15"},{"lineNumber":198,"author":{"gitId":"Teee728"},"content":"     * and end times.","lastModifiedDate":"2024-02-15"},{"lineNumber":199,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":200,"author":{"gitId":"Teee728"},"content":"     * @param taskDetails    StringBuilder to append the formatted event details.","lastModifiedDate":"2024-02-15"},{"lineNumber":201,"author":{"gitId":"Teee728"},"content":"     * @param eventTask      The Event task object to extract details from.","lastModifiedDate":"2024-02-15"},{"lineNumber":202,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":203,"author":{"gitId":"Teee728"},"content":"    private static void appendEventDetails(StringBuilder taskDetails, Event eventTask) {","lastModifiedDate":"2024-02-15"},{"lineNumber":204,"author":{"gitId":"Teee728"},"content":"        taskDetails.append(\" (from: \").append(eventTask.getFrom()).append(\" to: \")","lastModifiedDate":"2024-02-15"},{"lineNumber":205,"author":{"gitId":"Teee728"},"content":"                .append(eventTask.getTo()).append(\")\");","lastModifiedDate":"2024-02-15"},{"lineNumber":206,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":207,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":208,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":209,"author":{"gitId":"Teee728"},"content":"     * Appends the priority details to a task\u0027s formatted string representation.","lastModifiedDate":"2024-02-15"},{"lineNumber":210,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":211,"author":{"gitId":"Teee728"},"content":"     * This method checks if the task has a priority assigned and, if so, appends the priority information to the","lastModifiedDate":"2024-02-15"},{"lineNumber":212,"author":{"gitId":"Teee728"},"content":"     * formatted string. If no priority is assigned, an empty string is returned.","lastModifiedDate":"2024-02-15"},{"lineNumber":213,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":214,"author":{"gitId":"Teee728"},"content":"     * @param task The task for which priority details need to be appended.","lastModifiedDate":"2024-02-15"},{"lineNumber":215,"author":{"gitId":"Teee728"},"content":"     * @return A string containing the priority details if available, or an empty string otherwise.","lastModifiedDate":"2024-02-15"},{"lineNumber":216,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":217,"author":{"gitId":"Teee728"},"content":"    private static String appendPriority(Task task) {","lastModifiedDate":"2024-02-15"},{"lineNumber":218,"author":{"gitId":"Teee728"},"content":"        return (task.getPriority() !\u003d null) ? \" -\u003e Priority: \" + task.getPriority() : \"\";","lastModifiedDate":"2024-02-15"},{"lineNumber":219,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":220,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":221,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":222,"author":{"gitId":"Teee728"},"content":"     * Searches for tasks within a given list that contain a specified search string in their descriptions.","lastModifiedDate":"2024-02-01"},{"lineNumber":223,"author":{"gitId":"Teee728"},"content":"     * Creates and returns a new TaskList containing the found tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":224,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":225,"author":{"gitId":"Teee728"},"content":"     * @param searchString The string to search for in the task descriptions.","lastModifiedDate":"2024-02-01"},{"lineNumber":226,"author":{"gitId":"Teee728"},"content":"     * @return A new TaskList containing tasks with descriptions that match the search string.","lastModifiedDate":"2024-02-01"},{"lineNumber":227,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":228,"author":{"gitId":"Teee728"},"content":"    public TaskList findTask(String searchString) throws CruiseyException {","lastModifiedDate":"2024-02-22"},{"lineNumber":229,"author":{"gitId":"Teee728"},"content":"        assert searchString !\u003d null : \"Search string should not be null.\";","lastModifiedDate":"2024-02-14"},{"lineNumber":230,"author":{"gitId":"Teee728"},"content":"        TaskList foundTasks \u003d new TaskList();","lastModifiedDate":"2024-02-01"},{"lineNumber":231,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":232,"author":{"gitId":"Teee728"},"content":"        for (Task job : tasks) {","lastModifiedDate":"2024-02-01"},{"lineNumber":233,"author":{"gitId":"Teee728"},"content":"            if (job.getDescription().contains(searchString)) {","lastModifiedDate":"2024-02-01"},{"lineNumber":234,"author":{"gitId":"Teee728"},"content":"                foundTasks.addTask(job);","lastModifiedDate":"2024-02-01"},{"lineNumber":235,"author":{"gitId":"Teee728"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":236,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":237,"author":{"gitId":"Teee728"},"content":"        return foundTasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":238,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":239,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":240,"author":{"gitId":"Teee728"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Teee728":240}},{"path":"src/main/java/cruisey/task/TaskPriority.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Teee728"},"content":"package cruisey.task;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"Teee728"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"Teee728"},"content":" * The enumeration {@code TaskPriority} represents the priority levels that can be associated with tasks.","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"Teee728"},"content":" * Priority can be set to HIGH, MEDIUM, or LOW.","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"Teee728"},"content":" *","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"Teee728"},"content":" * @see cruisey.task.Task","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"Teee728"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"Teee728"},"content":"public enum TaskPriority {","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"Teee728"},"content":"     * High priority level.","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"Teee728"},"content":"    HIGH,","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"Teee728"},"content":"     * Medium priority level.","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"Teee728"},"content":"    MEDIUM,","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"Teee728"},"content":"     * Low priority level.","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"Teee728"},"content":"    LOW;","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"Teee728"},"content":"     * The priority marker used to indicate the presence of a priority level in a command.","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"Teee728"},"content":"     * Example: \"/p HIGH\" sets the priority of a task to HIGH.","lastModifiedDate":"2024-02-15"},{"lineNumber":29,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":30,"author":{"gitId":"Teee728"},"content":"    public static final String PRIORITY_MARKER \u003d \"/p\";","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"Teee728"},"content":"}","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"Teee728":31}},{"path":"src/main/java/cruisey/task/TaskStatus.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Teee728"},"content":"package cruisey.task;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"Teee728"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"Teee728"},"content":" * The {@code TaskStatus} enum represents the status of a task, indicating whether it is done or not done.","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"Teee728"},"content":" * Each status has an associated code for storage purposes.","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"Teee728"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"Teee728"},"content":"public enum TaskStatus {","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"Teee728"},"content":"     * Represents a task that is marked as done.","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"Teee728"},"content":"    DONE(\"1\"),","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"Teee728"},"content":"     * Represents a task that is not yet done.","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"Teee728"},"content":"    NOT_DONE(\"0\");","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"Teee728"},"content":"    private final String code;","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"Teee728"},"content":"     * Constructs a {@code TaskStatus} enum with the given code.","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"Teee728"},"content":"     * @param code The code associated with the task status.","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"Teee728"},"content":"    TaskStatus(String code) {","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"Teee728"},"content":"        this.code \u003d code;","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"Teee728"},"content":"}","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"Teee728":28}},{"path":"src/main/java/cruisey/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Teee728"},"content":"package cruisey.task;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Teee728"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"Teee728"},"content":" * The TaskType enum represents the types of tasks in the Duke application.","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"Teee728"},"content":" * It includes ToDo (T), Deadline (D), and Event (E) task types.","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"Teee728"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"Teee728"},"content":"public enum TaskType {","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Teee728"},"content":"        /**","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"Teee728"},"content":"         * Represents a ToDo task type.","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"Teee728"},"content":"         */","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"Teee728"},"content":"        T,","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"Teee728"},"content":"        /**","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"Teee728"},"content":"         * Represents a Deadline task type.","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"Teee728"},"content":"         */","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"Teee728"},"content":"        D,","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"Teee728"},"content":"        /**","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"Teee728"},"content":"         * Represents an Event task type.","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"Teee728"},"content":"         */","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"Teee728"},"content":"        E","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"Teee728"},"content":"}","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"Teee728":23}},{"path":"src/main/java/cruisey/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Teee728"},"content":"package cruisey.task;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Teee728"},"content":"import cruisey.exception.CruiseyException;","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"Teee728"},"content":"import cruisey.ui.Ui;","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Teee728"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"Teee728"},"content":" * The ToDo class represents a task of type ToDo in the Duke application.","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"Teee728"},"content":" * It is a subclass of the Task class.","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"Teee728"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"Teee728"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Teee728"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"Teee728"},"content":"     * Constructs a ToDo task with the specified description.","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"Teee728"},"content":"     * @param description The description of the ToDo task.","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"Teee728"},"content":"     * @param priority The priority of the task.","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"Teee728"},"content":"     * @throws CruiseyException If there is an issue with the task creation.","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"Teee728"},"content":"    public ToDo(String description, Ui ui, TaskPriority priority) throws CruiseyException {","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"Teee728"},"content":"        super(TaskType.T, description, priority);","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"Teee728"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"Teee728"},"content":"        assert this.ui !\u003d null : \"UI should not be null.\";","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"Teee728"},"content":"     * Returns a string representation of the ToDo task.","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"Teee728"},"content":"     * @return A string representation of the ToDo task.","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"Teee728"},"content":"    public String getMessage() {","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"Teee728"},"content":"        assert this.ui !\u003d null : \"UI should not be null.\";","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"Teee728"},"content":"        String priorityFormatted \u003d (priority !\u003d null) ? \" [Priority: \" + priority + \"]\" : \"\";","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"Teee728"},"content":"        return ui.printMessage(\"Coool, I\u0027ve added this task: \\n [T][\" + getStatusIcon() + \"] \" + getDescription()","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"Teee728"},"content":"                + priorityFormatted);","lastModifiedDate":"2024-02-15"},{"lineNumber":35,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"Teee728"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Teee728":36}},{"path":"src/main/java/cruisey/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Teee728"},"content":"package cruisey.ui;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"Teee728"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"Teee728"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"Teee728"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"Teee728"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"Teee728"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"Teee728"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"Teee728"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"Teee728"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"Teee728"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"Teee728"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"Teee728"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"Teee728"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"Teee728"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"Teee728"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"Teee728"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"Teee728"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"Teee728"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"Teee728"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"Teee728"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"Teee728"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"Teee728"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"Teee728"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"Teee728"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"Teee728"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"Teee728"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"Teee728"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"Teee728"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"Teee728"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"Teee728"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"Teee728"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"Teee728"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"Teee728"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"Teee728"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"Teee728"},"content":"    private void flip() {","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"Teee728"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"Teee728"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"Teee728"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"Teee728"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"Teee728"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"Teee728"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"Teee728"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"Teee728"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"Teee728"},"content":"        db.flip();","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"Teee728"},"content":"        return db;","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"Teee728"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"Teee728":62}},{"path":"src/main/java/cruisey/ui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Teee728"},"content":"package cruisey.ui;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"Teee728"},"content":"import cruisey.Main;","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"Teee728"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"Teee728"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"Teee728"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"Teee728"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"Teee728"},"content":"public class Launcher {","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"Teee728"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"Teee728"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"Teee728"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"Teee728":13}},{"path":"src/main/java/cruisey/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Teee728"},"content":"package cruisey.ui;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"Teee728"},"content":"import cruisey.Cruisey;","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"Teee728"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"Teee728"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"Teee728"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"Teee728"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"Teee728"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"Teee728"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"Teee728"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"Teee728"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"Teee728"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"Teee728"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"Teee728"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"Teee728"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"Teee728"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"Teee728"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"Teee728"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"Teee728"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"Teee728"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"Teee728"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"Teee728"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"Teee728"},"content":"    private Cruisey cruisey;","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"Teee728"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"Teee728"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"Teee728"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"Teee728"},"content":"     * Initializes the JavaFX controller.","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"Teee728"},"content":"     * This method is automatically called by JavaFX after the FXML file is loaded.","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"Teee728"},"content":"     * It sets up the initial state of the user interface and displays the welcome message.","lastModifiedDate":"2024-02-15"},{"lineNumber":35,"author":{"gitId":"Teee728"},"content":"     * The scroll pane is configured to automatically scroll to the bottom whenever the","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"Teee728"},"content":"     * height of the dialog container changes.","lastModifiedDate":"2024-02-15"},{"lineNumber":37,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":38,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":39,"author":{"gitId":"Teee728"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"Teee728"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"Teee728"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"Teee728"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"Teee728"},"content":"                DialogBox.getDukeDialog(Ui.showWelcomeMessage(), dukeImage));","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"Teee728"},"content":"    public void setDuke(Cruisey d) {","lastModifiedDate":"2024-02-22"},{"lineNumber":47,"author":{"gitId":"Teee728"},"content":"        cruisey \u003d d;","lastModifiedDate":"2024-02-22"},{"lineNumber":48,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"Teee728"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"Teee728"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"Teee728"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"Teee728"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"Teee728"},"content":"        String input \u003d userInput.getText().trim();","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"Teee728"},"content":"        if (!input.isEmpty()) {","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"Teee728"},"content":"            String response \u003d cruisey.getResponse(input);","lastModifiedDate":"2024-02-22"},{"lineNumber":59,"author":{"gitId":"Teee728"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"Teee728"},"content":"                    DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"Teee728"},"content":"                    DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"Teee728"},"content":"            );","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"Teee728"},"content":"            userInput.clear();","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":65,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":66,"author":{"gitId":"Teee728"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"Teee728":66}},{"path":"src/main/java/cruisey/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Teee728"},"content":"package cruisey.ui;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Teee728"},"content":"import cruisey.exception.CruiseyException;","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"Teee728"},"content":"import cruisey.task.Deadline;","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"Teee728"},"content":"import cruisey.task.Event;","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"Teee728"},"content":"import cruisey.task.Task;","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"Teee728"},"content":"import cruisey.task.TaskList;","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Teee728"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"Teee728"},"content":" * The Ui class handles user interface-related operations in the Duke application.","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"Teee728"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"Teee728"},"content":"public class Ui {","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"Teee728"},"content":"     * Displays an error message indicating a problem with loading tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"Teee728"},"content":"    public static String showLoadingError() {","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"Teee728"},"content":"        return \"Error loading tasks. Initializing with an empty task list.\"; //fix?","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"Teee728"},"content":"     * Displays a welcome message when the Duke application is launched.","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"Teee728"},"content":"    public static String showWelcomeMessage() {","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"Teee728"},"content":"        return \"Hello! I\u0027m Cruisey, your personal task list manager. \\nWhat can I do for you today?\";","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"Teee728"},"content":"     * Prints the number of tasks in the task list.","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"Teee728"},"content":"     * @param tasks The task list.","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"Teee728"},"content":"    public static String printNumberOfTasks(TaskList tasks) {","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"Teee728"},"content":"        assert tasks !\u003d null : \"TaskList should not be null.\";","lastModifiedDate":"2024-02-14"},{"lineNumber":34,"author":{"gitId":"Teee728"},"content":"        return (tasks.size() \u003d\u003d 1 ? \" Now you have 1 task in the list.\"","lastModifiedDate":"2024-02-15"},{"lineNumber":35,"author":{"gitId":"Teee728"},"content":"                : \"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"Teee728"},"content":"     * Prints a message about the deleted task.","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"Teee728"},"content":"     * @param task The deleted task.","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"Teee728"},"content":"    public static String printDeletedTaskMessage(Task task) {","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"Teee728"},"content":"        assert task !\u003d null : \"Task should not be null.\";","lastModifiedDate":"2024-02-14"},{"lineNumber":45,"author":{"gitId":"Teee728"},"content":"        String taskDetails \u003d \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2024-02-15"},{"lineNumber":46,"author":{"gitId":"Teee728"},"content":"                + \"[\" + task.getType() + \"][\" + task.getStatusIcon() + \"] \" + task.getDescription();","lastModifiedDate":"2024-02-15"},{"lineNumber":47,"author":{"gitId":"Teee728"},"content":"        if (task instanceof Deadline) {","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"Teee728"},"content":"            Deadline deadlineTask \u003d (Deadline) task;","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"Teee728"},"content":"            taskDetails +\u003d \" (by: \" + deadlineTask.getBy() + \")\";","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"Teee728"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"Teee728"},"content":"            Event eventTask \u003d (Event) task;","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"Teee728"},"content":"            taskDetails +\u003d \" (from: \" + eventTask.getFrom() + \" to: \" + eventTask.getTo() + \")\";","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"Teee728"},"content":"        return taskDetails;","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"Teee728"},"content":"     * Displays a goodbye message when the user exits the Duke application.","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"Teee728"},"content":"    public static String showGoodbyeMessage() {","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"Teee728"},"content":"        return \"Bye! Keep Cruisin\u0027 :))\";","lastModifiedDate":"2024-02-22"},{"lineNumber":62,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"Teee728"},"content":"     * Displays an error message.","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"Teee728"},"content":"     * @param errorMessage The error message to be displayed.","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"Teee728"},"content":"     * @throws CruiseyException DukeException is thrown to indicate an error.","lastModifiedDate":"2024-02-22"},{"lineNumber":69,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"Teee728"},"content":"    public static String showError(String errorMessage) throws CruiseyException {","lastModifiedDate":"2024-02-22"},{"lineNumber":71,"author":{"gitId":"Teee728"},"content":"        assert errorMessage !\u003d null : \"Error message should not be null.\";","lastModifiedDate":"2024-02-14"},{"lineNumber":72,"author":{"gitId":"Teee728"},"content":"        throw new CruiseyException(errorMessage);","lastModifiedDate":"2024-02-22"},{"lineNumber":73,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"Teee728"},"content":"     * Displays the task list.","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"Teee728"},"content":"     * @param tasks The task list to be displayed.","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"Teee728"},"content":"    public static String showTaskList(TaskList tasks) {","lastModifiedDate":"2024-02-07"},{"lineNumber":81,"author":{"gitId":"Teee728"},"content":"        assert tasks !\u003d null : \"TaskList should not be null.\";","lastModifiedDate":"2024-02-14"},{"lineNumber":82,"author":{"gitId":"Teee728"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"Teee728"},"content":"            return \"You have no tasks in your list!\";","lastModifiedDate":"2024-02-07"},{"lineNumber":84,"author":{"gitId":"Teee728"},"content":"        } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"Teee728"},"content":"            return (tasks.size() \u003d\u003d 1 ? \"Here is the task in your list:\" : \"Here are the tasks in your list:\");","lastModifiedDate":"2024-02-07"},{"lineNumber":86,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"Teee728"},"content":"     * Displays a message indicating that a task has been marked as done.","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"Teee728"},"content":"     * @param task The task marked as done.","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"Teee728"},"content":"    public static String markTask(Task task) {","lastModifiedDate":"2024-02-07"},{"lineNumber":95,"author":{"gitId":"Teee728"},"content":"        assert task !\u003d null : \"Task should not be null.\";","lastModifiedDate":"2024-02-14"},{"lineNumber":96,"author":{"gitId":"Teee728"},"content":"        return \"Way to go! I\u0027ve marked this as done: \\n \" + \"[\" + task.getType() + \"][\" + task.getStatusIcon() + \"] \"","lastModifiedDate":"2024-02-22"},{"lineNumber":97,"author":{"gitId":"Teee728"},"content":"                + task.getDescription();","lastModifiedDate":"2024-02-15"},{"lineNumber":98,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":99,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":101,"author":{"gitId":"Teee728"},"content":"     * Displays a message indicating that a task has been marked as not done.","lastModifiedDate":"2024-02-01"},{"lineNumber":102,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":103,"author":{"gitId":"Teee728"},"content":"     * @param task The task marked as not done.","lastModifiedDate":"2024-02-01"},{"lineNumber":104,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":105,"author":{"gitId":"Teee728"},"content":"    public static String unmarkTask(Task task) {","lastModifiedDate":"2024-02-07"},{"lineNumber":106,"author":{"gitId":"Teee728"},"content":"        assert task !\u003d null : \"Task should not be null.\";","lastModifiedDate":"2024-02-14"},{"lineNumber":107,"author":{"gitId":"Teee728"},"content":"        return \"Okayy, I\u0027ve marked this task as not done yet: \\n \" + \"[\" + task.getType() + \"][\"","lastModifiedDate":"2024-02-22"},{"lineNumber":108,"author":{"gitId":"Teee728"},"content":"                + task.getStatusIcon() + \"] \" + task.getDescription();","lastModifiedDate":"2024-02-15"},{"lineNumber":109,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":110,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":111,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":112,"author":{"gitId":"Teee728"},"content":"     * Displays a separator line.","lastModifiedDate":"2024-02-15"},{"lineNumber":113,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":114,"author":{"gitId":"Teee728"},"content":"    public static String printDashes() {","lastModifiedDate":"2024-02-15"},{"lineNumber":115,"author":{"gitId":"Teee728"},"content":"        return \"-------------------------------\";","lastModifiedDate":"2024-02-15"},{"lineNumber":116,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":117,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":118,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":119,"author":{"gitId":"Teee728"},"content":"     * Displays a message indicating tasks that match a specified search string.","lastModifiedDate":"2024-02-01"},{"lineNumber":120,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":121,"author":{"gitId":"Teee728"},"content":"     * @param task The search string to match tasks against.","lastModifiedDate":"2024-02-01"},{"lineNumber":122,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":123,"author":{"gitId":"Teee728"},"content":"    public static String showFoundTasks(String task) {","lastModifiedDate":"2024-02-07"},{"lineNumber":124,"author":{"gitId":"Teee728"},"content":"        assert task !\u003d null : \"Search string should not be null.\";","lastModifiedDate":"2024-02-14"},{"lineNumber":125,"author":{"gitId":"Teee728"},"content":"        return \"Here are the tasks matching with \\\"\" + task + \"\\\" in your list: \";","lastModifiedDate":"2024-02-07"},{"lineNumber":126,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":127,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":128,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":129,"author":{"gitId":"Teee728"},"content":"     * Displays a message indicating no tasks match a specified search string.","lastModifiedDate":"2024-02-01"},{"lineNumber":130,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":131,"author":{"gitId":"Teee728"},"content":"     * @param task The search string to match tasks against.","lastModifiedDate":"2024-02-01"},{"lineNumber":132,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":133,"author":{"gitId":"Teee728"},"content":"    public static String showNoTasksFound(String task) {","lastModifiedDate":"2024-02-07"},{"lineNumber":134,"author":{"gitId":"Teee728"},"content":"        assert task !\u003d null : \"Search string should not be null.\";","lastModifiedDate":"2024-02-14"},{"lineNumber":135,"author":{"gitId":"Teee728"},"content":"        return \"Sorry, you have no items in your tasklist matching with \\\"\" + task + \"\\\"\";","lastModifiedDate":"2024-02-07"},{"lineNumber":136,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":137,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":138,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":139,"author":{"gitId":"Teee728"},"content":"     * Returns the provided text message.","lastModifiedDate":"2024-02-15"},{"lineNumber":140,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":141,"author":{"gitId":"Teee728"},"content":"     * @param text The text message to be printed. Should not be null.","lastModifiedDate":"2024-02-15"},{"lineNumber":142,"author":{"gitId":"Teee728"},"content":"     * @return The input text message.","lastModifiedDate":"2024-02-15"},{"lineNumber":143,"author":{"gitId":"Teee728"},"content":"     * @throws AssertionError If the provided text is null.","lastModifiedDate":"2024-02-15"},{"lineNumber":144,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":145,"author":{"gitId":"Teee728"},"content":"    public static String printMessage(String text) {","lastModifiedDate":"2024-02-07"},{"lineNumber":146,"author":{"gitId":"Teee728"},"content":"        assert text !\u003d null : \"Text should not be null.\";","lastModifiedDate":"2024-02-14"},{"lineNumber":147,"author":{"gitId":"Teee728"},"content":"        return text;","lastModifiedDate":"2024-02-07"},{"lineNumber":148,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":149,"author":{"gitId":"Teee728"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Teee728":149}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Teee728"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"Teee728"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"Teee728"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"Teee728"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"Teee728"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"Teee728"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"Teee728"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: #042654; -fx-background-radius: 15;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"Teee728"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"Teee728"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" style\u003d\"-fx-font-family: Poppins-Medium;\" styleClass\u003d\"dialog\" stylesheets\u003d\"@style.css\" text\u003d\"Label\" textFill\u003d\"WHITE\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"Teee728"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"Teee728"},"content":"                \u003cInsets right\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"Teee728"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"Teee728"},"content":"         \u003cfont\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"Teee728"},"content":"            \u003cFont size\u003d\"12.0\" /\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"Teee728"},"content":"         \u003c/font\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"Teee728"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"Teee728"},"content":"            \u003cInsets bottom\u003d\"20.0\" left\u003d\"20.0\" right\u003d\"20.0\" top\u003d\"20.0\" /\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"Teee728"},"content":"         \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"Teee728"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"Teee728"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"Teee728"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"Teee728"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"Teee728"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"Teee728"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"Teee728":26}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Teee728"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"Teee728"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"Teee728"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"Teee728"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"Teee728"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"Teee728"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"Teee728"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"Teee728"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-font-family: Poppins-Medium;\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"cruisey.ui.MainWindow\"\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"Teee728"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"Teee728"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" styleClass\u003d\"send-button\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\" /\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"Teee728"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" style\u003d\"-fx-background-color: #042654;\" stylesheets\u003d\"@style.css\" text\u003d\"Send\" textFill\u003d\"WHITE\" AnchorPane.rightAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"Teee728"},"content":"         \u003cfont\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"Teee728"},"content":"            \u003cFont name\u003d\"System Bold\" size\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"Teee728"},"content":"         \u003c/font\u003e\u003c/Button\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"Teee728"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-image: url(\u0027/images/bg.png\u0027);\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"Teee728"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"Teee728"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-image: url(\u0027/images/bg.png\u0027); -fx-spacing: 20;\" styleClass\u003d\"dialogContainer\" /\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"Teee728"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"Teee728"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"Teee728"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"Teee728"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"Teee728":23}},{"path":"src/test/java/cruisey/command/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Teee728"},"content":"//ONLY WORKED FOR CLI","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"Teee728"},"content":"//package duke.command;","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"Teee728"},"content":"//","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"Teee728"},"content":"//import duke.ui.Ui;","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"Teee728"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"Teee728"},"content":"//","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"Teee728"},"content":"//import duke.exception.DukeException;","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"Teee728"},"content":"//import duke.task.TaskList;","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"Teee728"},"content":"//import duke.task.ToDo;","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"Teee728"},"content":"//import duke.storage.Storage;","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"Teee728"},"content":"//","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"Teee728"},"content":"//import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"Teee728"},"content":"//import java.io.PrintStream;","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"Teee728"},"content":"//","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"Teee728"},"content":"//import java.util.Scanner;","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"Teee728"},"content":"//","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"Teee728"},"content":"//import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Teee728"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"Teee728"},"content":"// * JUnit tests for the {@link Parser} class.","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"Teee728"},"content":"// */","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"Teee728"},"content":"//public class ParserTest {","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"Teee728"},"content":"//","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"Teee728"},"content":"//    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"Teee728"},"content":"//     * Tests the behavior of the {@code processCommand} method","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"Teee728"},"content":"//     * when the \"bye\" command is processed.","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"Teee728"},"content":"//     * It should set the running status to false.","lastModifiedDate":"2024-02-15"},{"lineNumber":29,"author":{"gitId":"Teee728"},"content":"//     *","lastModifiedDate":"2024-02-15"},{"lineNumber":30,"author":{"gitId":"Teee728"},"content":"//     * @throws DukeException If an error occurs during command processing.","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"Teee728"},"content":"//     */","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"Teee728"},"content":"//    @Test","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"Teee728"},"content":"//    void processCommandByeCommand_shouldSetRunningStatusToFalse() throws DukeException {","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"Teee728"},"content":"//        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-02-15"},{"lineNumber":35,"author":{"gitId":"Teee728"},"content":"//        Storage storage \u003d new Storage();","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"Teee728"},"content":"//        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-15"},{"lineNumber":37,"author":{"gitId":"Teee728"},"content":"//        Parser parser \u003d new Parser(taskList, storage, scanner, true);","lastModifiedDate":"2024-02-15"},{"lineNumber":38,"author":{"gitId":"Teee728"},"content":"//","lastModifiedDate":"2024-02-15"},{"lineNumber":39,"author":{"gitId":"Teee728"},"content":"//        parser.setCommand(\"bye\");","lastModifiedDate":"2024-02-15"},{"lineNumber":40,"author":{"gitId":"Teee728"},"content":"//        parser.processCommand();","lastModifiedDate":"2024-02-15"},{"lineNumber":41,"author":{"gitId":"Teee728"},"content":"//","lastModifiedDate":"2024-02-15"},{"lineNumber":42,"author":{"gitId":"Teee728"},"content":"//        assertFalse(parser.getRunningStatus());","lastModifiedDate":"2024-02-15"},{"lineNumber":43,"author":{"gitId":"Teee728"},"content":"//    }","lastModifiedDate":"2024-02-15"},{"lineNumber":44,"author":{"gitId":"Teee728"},"content":"//","lastModifiedDate":"2024-02-15"},{"lineNumber":45,"author":{"gitId":"Teee728"},"content":"//    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":46,"author":{"gitId":"Teee728"},"content":"//     * Tests the behavior of the {@code processCommand} method","lastModifiedDate":"2024-02-15"},{"lineNumber":47,"author":{"gitId":"Teee728"},"content":"//     * when the \"list\" command is processed.","lastModifiedDate":"2024-02-15"},{"lineNumber":48,"author":{"gitId":"Teee728"},"content":"//     * It should print the task list to the standard output.","lastModifiedDate":"2024-02-15"},{"lineNumber":49,"author":{"gitId":"Teee728"},"content":"//     *","lastModifiedDate":"2024-02-15"},{"lineNumber":50,"author":{"gitId":"Teee728"},"content":"//     * @throws DukeException If an error occurs during command processing.","lastModifiedDate":"2024-02-15"},{"lineNumber":51,"author":{"gitId":"Teee728"},"content":"//     */","lastModifiedDate":"2024-02-15"},{"lineNumber":52,"author":{"gitId":"Teee728"},"content":"//    @Test","lastModifiedDate":"2024-02-15"},{"lineNumber":53,"author":{"gitId":"Teee728"},"content":"//    void processCommandListCommand_shouldPrintTaskList() throws","lastModifiedDate":"2024-02-15"},{"lineNumber":54,"author":{"gitId":"Teee728"},"content":"//    DukeException { //only line separators is an issue, but produces correct output","lastModifiedDate":"2024-02-15"},{"lineNumber":55,"author":{"gitId":"Teee728"},"content":"//        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-02-15"},{"lineNumber":56,"author":{"gitId":"Teee728"},"content":"//        taskList.addToDoTask(new ToDo(\"Test Task\"));","lastModifiedDate":"2024-02-15"},{"lineNumber":57,"author":{"gitId":"Teee728"},"content":"//        Storage storage \u003d new Storage();","lastModifiedDate":"2024-02-15"},{"lineNumber":58,"author":{"gitId":"Teee728"},"content":"//        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-15"},{"lineNumber":59,"author":{"gitId":"Teee728"},"content":"//        Parser parser \u003d new Parser(taskList, storage, scanner, true);","lastModifiedDate":"2024-02-15"},{"lineNumber":60,"author":{"gitId":"Teee728"},"content":"//","lastModifiedDate":"2024-02-15"},{"lineNumber":61,"author":{"gitId":"Teee728"},"content":"//        ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-02-15"},{"lineNumber":62,"author":{"gitId":"Teee728"},"content":"//        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2024-02-15"},{"lineNumber":63,"author":{"gitId":"Teee728"},"content":"//","lastModifiedDate":"2024-02-15"},{"lineNumber":64,"author":{"gitId":"Teee728"},"content":"//        parser.setCommand(\"list\");","lastModifiedDate":"2024-02-15"},{"lineNumber":65,"author":{"gitId":"Teee728"},"content":"//        parser.processCommand();","lastModifiedDate":"2024-02-15"},{"lineNumber":66,"author":{"gitId":"Teee728"},"content":"//","lastModifiedDate":"2024-02-15"},{"lineNumber":67,"author":{"gitId":"Teee728"},"content":"//        assertEquals(\"-------------------------------\\n\"","lastModifiedDate":"2024-02-15"},{"lineNumber":68,"author":{"gitId":"Teee728"},"content":"//                + \"Here is the task in your list:\\n1.[T][ ]","lastModifiedDate":"2024-02-15"},{"lineNumber":69,"author":{"gitId":"Teee728"},"content":"//                Test Task\\n-------------------------------\", outputStream.toString().trim());","lastModifiedDate":"2024-02-15"},{"lineNumber":70,"author":{"gitId":"Teee728"},"content":"//","lastModifiedDate":"2024-02-15"},{"lineNumber":71,"author":{"gitId":"Teee728"},"content":"//        System.setOut(System.out);","lastModifiedDate":"2024-02-15"},{"lineNumber":72,"author":{"gitId":"Teee728"},"content":"//    }","lastModifiedDate":"2024-02-15"},{"lineNumber":73,"author":{"gitId":"Teee728"},"content":"//","lastModifiedDate":"2024-02-15"},{"lineNumber":74,"author":{"gitId":"Teee728"},"content":"//}","lastModifiedDate":"2024-02-15"},{"lineNumber":75,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"Teee728":75}},{"path":"src/test/java/cruisey/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Teee728"},"content":"package cruisey.storage;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"Teee728"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"Teee728"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"Teee728"},"content":"import java.io.File;","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"Teee728"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"Teee728"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"Teee728"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"Teee728"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"Teee728"},"content":"import cruisey.exception.CruiseyException;","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"Teee728"},"content":"import cruisey.task.Deadline;","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"Teee728"},"content":"import cruisey.task.Event;","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"Teee728"},"content":"import cruisey.task.Task;","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"Teee728"},"content":"import cruisey.task.TaskList;","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"Teee728"},"content":"import cruisey.task.TaskPriority;","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"Teee728"},"content":"import cruisey.task.ToDo;","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"Teee728"},"content":"import cruisey.ui.Ui;","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"Teee728"},"content":"/**","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"Teee728"},"content":" * JUnit tests for the {@link Storage} class.","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"Teee728"},"content":" */","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"Teee728"},"content":"public class StorageTest {","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"Teee728"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"Teee728"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"Teee728"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"Teee728"},"content":"    private TaskPriority priority;","lastModifiedDate":"2024-02-22"},{"lineNumber":32,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"Teee728"},"content":"     * Set up tasks and storage before each test.","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"Teee728"},"content":"    @BeforeEach","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"Teee728"},"content":"    void setUp() {","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"Teee728"},"content":"        taskList \u003d new TaskList(new ArrayList\u003c\u003e(), new Ui());","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"Teee728"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":41,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":43,"author":{"gitId":"Teee728"},"content":"     * Tests the {@code saveTasks} method, ensuring that tasks are saved to a file","lastModifiedDate":"2024-02-22"},{"lineNumber":44,"author":{"gitId":"Teee728"},"content":"     * and then loaded correctly.","lastModifiedDate":"2024-02-22"},{"lineNumber":45,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":46,"author":{"gitId":"Teee728"},"content":"     * @throws IOException    If an I/O error occurs during saving tasks.","lastModifiedDate":"2024-02-22"},{"lineNumber":47,"author":{"gitId":"Teee728"},"content":"     * @throws CruiseyException If an error occurs during loading tasks.","lastModifiedDate":"2024-02-22"},{"lineNumber":48,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":49,"author":{"gitId":"Teee728"},"content":"    @Test","lastModifiedDate":"2024-02-22"},{"lineNumber":50,"author":{"gitId":"Teee728"},"content":"    void saveTasks_shouldSaveTasksToFile() throws IOException, CruiseyException {","lastModifiedDate":"2024-02-22"},{"lineNumber":51,"author":{"gitId":"Teee728"},"content":"        taskList.addToDoTask(new ToDo(\"Finish this project\", ui, priority));","lastModifiedDate":"2024-02-22"},{"lineNumber":52,"author":{"gitId":"Teee728"},"content":"        taskList.addDeadlineTask(new Deadline(\"Test project\", \"Monday 1200\", ui, priority));","lastModifiedDate":"2024-02-22"},{"lineNumber":53,"author":{"gitId":"Teee728"},"content":"        taskList.addEventTask(new Event(\"Test Event\", \"2022-12-31\", \"2023-01-01\", ui, priority));","lastModifiedDate":"2024-02-22"},{"lineNumber":54,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":55,"author":{"gitId":"Teee728"},"content":"        storage.saveTasks(taskList);","lastModifiedDate":"2024-02-22"},{"lineNumber":56,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":57,"author":{"gitId":"Teee728"},"content":"        ArrayList\u003cTask\u003e loadedTasks \u003d storage.load();","lastModifiedDate":"2024-02-22"},{"lineNumber":58,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":59,"author":{"gitId":"Teee728"},"content":"        assertEquals(taskList.size(), loadedTasks.size());","lastModifiedDate":"2024-02-22"},{"lineNumber":60,"author":{"gitId":"Teee728"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2024-02-22"},{"lineNumber":61,"author":{"gitId":"Teee728"},"content":"            assertEquals(taskList.getTask(i).getDescription(), loadedTasks.get(i).getDescription());","lastModifiedDate":"2024-02-22"},{"lineNumber":62,"author":{"gitId":"Teee728"},"content":"            assertEquals(taskList.getTask(i).getType(), loadedTasks.get(i).getType());","lastModifiedDate":"2024-02-22"},{"lineNumber":63,"author":{"gitId":"Teee728"},"content":"            assertEquals(taskList.getTask(i).checkStatus(), loadedTasks.get(i).checkStatus());","lastModifiedDate":"2024-02-22"},{"lineNumber":64,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":65,"author":{"gitId":"Teee728"},"content":"        deleteTestFile();","lastModifiedDate":"2024-02-22"},{"lineNumber":66,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":67,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":68,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":69,"author":{"gitId":"Teee728"},"content":"     * Tests the {@code load} method when the file is empty.","lastModifiedDate":"2024-02-22"},{"lineNumber":70,"author":{"gitId":"Teee728"},"content":"     * It should return an empty task list.","lastModifiedDate":"2024-02-22"},{"lineNumber":71,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":72,"author":{"gitId":"Teee728"},"content":"     * @throws CruiseyException If an error occurs during loading tasks.","lastModifiedDate":"2024-02-22"},{"lineNumber":73,"author":{"gitId":"Teee728"},"content":"     * @throws IOException    If an I/O error occurs during saving tasks.","lastModifiedDate":"2024-02-22"},{"lineNumber":74,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":75,"author":{"gitId":"Teee728"},"content":"    @Test","lastModifiedDate":"2024-02-22"},{"lineNumber":76,"author":{"gitId":"Teee728"},"content":"    void load_emptyFile_shouldReturnEmptyTaskList() throws CruiseyException, IOException {","lastModifiedDate":"2024-02-22"},{"lineNumber":77,"author":{"gitId":"Teee728"},"content":"        storage.saveTasks(new TaskList(new ArrayList\u003c\u003e(), new Ui()));","lastModifiedDate":"2024-02-22"},{"lineNumber":78,"author":{"gitId":"Teee728"},"content":"        ArrayList\u003cTask\u003e loadedTasks \u003d storage.load();","lastModifiedDate":"2024-02-22"},{"lineNumber":79,"author":{"gitId":"Teee728"},"content":"        assertTrue(loadedTasks.isEmpty());","lastModifiedDate":"2024-02-22"},{"lineNumber":80,"author":{"gitId":"Teee728"},"content":"        deleteTestFile();","lastModifiedDate":"2024-02-22"},{"lineNumber":81,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":82,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":83,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":84,"author":{"gitId":"Teee728"},"content":"     * Deletes the test file created during testing.","lastModifiedDate":"2024-02-22"},{"lineNumber":85,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":86,"author":{"gitId":"Teee728"},"content":"    private void deleteTestFile() {","lastModifiedDate":"2024-02-22"},{"lineNumber":87,"author":{"gitId":"Teee728"},"content":"        File file \u003d new File(Storage.FILE_PATH);","lastModifiedDate":"2024-02-22"},{"lineNumber":88,"author":{"gitId":"Teee728"},"content":"        if (file.exists()) {","lastModifiedDate":"2024-02-22"},{"lineNumber":89,"author":{"gitId":"Teee728"},"content":"            file.delete();","lastModifiedDate":"2024-02-22"},{"lineNumber":90,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":91,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":92,"author":{"gitId":"Teee728"},"content":"}","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"Teee728":92}},{"path":"src/test/java/cruisey/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Teee728"},"content":"package cruisey.task;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"Teee728"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"Teee728"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"Teee728"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"Teee728"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"Teee728"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"Teee728"},"content":"import cruisey.exception.CruiseyException;","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"Teee728"},"content":"import cruisey.ui.Ui;","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"Teee728"},"content":"/**","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"Teee728"},"content":" * JUnit tests for the {@link TaskList} class.","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"Teee728"},"content":" */","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"Teee728"},"content":"public class TaskListTest {","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"Teee728"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"Teee728"},"content":"    private TaskPriority priority;","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"Teee728"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"Teee728"},"content":"     * Set up the task list before each test.","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"Teee728"},"content":"    @BeforeEach","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"Teee728"},"content":"    void setUp() {","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"Teee728"},"content":"        taskList \u003d new TaskList(new ArrayList\u003c \u003e(), ui);","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"Teee728"},"content":"     * Tests the {@code addTask} method with a valid task.","lastModifiedDate":"2024-02-22"},{"lineNumber":32,"author":{"gitId":"Teee728"},"content":"     * Verifies that the task is added to the task list.","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"Teee728"},"content":"    @Test","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"Teee728"},"content":"    void addTask_validTask_taskAdded() {","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"Teee728"},"content":"        Task task \u003d new Task(TaskType.T, \"Test Task\", priority);","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"Teee728"},"content":"        taskList.addTask(task);","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"Teee728"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"Teee728"},"content":"        assertEquals(task, taskList.getTask(0));","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":41,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":43,"author":{"gitId":"Teee728"},"content":"     * Tests the {@code addToDoTask} method with a valid ToDo task.","lastModifiedDate":"2024-02-22"},{"lineNumber":44,"author":{"gitId":"Teee728"},"content":"     * Verifies that the ToDo task is added to the task list.","lastModifiedDate":"2024-02-22"},{"lineNumber":45,"author":{"gitId":"Teee728"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":46,"author":{"gitId":"Teee728"},"content":"     * @throws CruiseyException If an error occurs while creating the ToDo task.","lastModifiedDate":"2024-02-22"},{"lineNumber":47,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":48,"author":{"gitId":"Teee728"},"content":"    @Test","lastModifiedDate":"2024-02-22"},{"lineNumber":49,"author":{"gitId":"Teee728"},"content":"    void addToDoTask_validToDoTask_toDoTaskAdded() {","lastModifiedDate":"2024-02-22"},{"lineNumber":50,"author":{"gitId":"Teee728"},"content":"        ToDo toDoTask \u003d null;","lastModifiedDate":"2024-02-22"},{"lineNumber":51,"author":{"gitId":"Teee728"},"content":"        try {","lastModifiedDate":"2024-02-22"},{"lineNumber":52,"author":{"gitId":"Teee728"},"content":"            toDoTask \u003d new ToDo(\"Test ToDo Task\", ui, priority);","lastModifiedDate":"2024-02-22"},{"lineNumber":53,"author":{"gitId":"Teee728"},"content":"        } catch (CruiseyException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":54,"author":{"gitId":"Teee728"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2024-02-22"},{"lineNumber":55,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":56,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":57,"author":{"gitId":"Teee728"},"content":"        taskList.addToDoTask(toDoTask);","lastModifiedDate":"2024-02-22"},{"lineNumber":58,"author":{"gitId":"Teee728"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2024-02-22"},{"lineNumber":59,"author":{"gitId":"Teee728"},"content":"        assertEquals(toDoTask, taskList.getTask(0));","lastModifiedDate":"2024-02-22"},{"lineNumber":60,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":61,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":62,"author":{"gitId":"Teee728"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":63,"author":{"gitId":"Teee728"},"content":"     * Tests the {@code deleteTask} method with a valid index.","lastModifiedDate":"2024-02-22"},{"lineNumber":64,"author":{"gitId":"Teee728"},"content":"     * Verifies that the task at the specified index is deleted from the task list.","lastModifiedDate":"2024-02-22"},{"lineNumber":65,"author":{"gitId":"Teee728"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":66,"author":{"gitId":"Teee728"},"content":"    @Test","lastModifiedDate":"2024-02-22"},{"lineNumber":67,"author":{"gitId":"Teee728"},"content":"    void deleteTask_validIndex_taskDeleted() {","lastModifiedDate":"2024-02-22"},{"lineNumber":68,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":69,"author":{"gitId":"Teee728"},"content":"        Task task \u003d new Task(TaskType.T, \"Test Task\", priority);","lastModifiedDate":"2024-02-22"},{"lineNumber":70,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":71,"author":{"gitId":"Teee728"},"content":"        taskList.addTask(task);","lastModifiedDate":"2024-02-22"},{"lineNumber":72,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":73,"author":{"gitId":"Teee728"},"content":"        assertDoesNotThrow(() -\u003e taskList.deleteTask(0));","lastModifiedDate":"2024-02-22"},{"lineNumber":74,"author":{"gitId":"Teee728"},"content":"        assertEquals(0, taskList.size());","lastModifiedDate":"2024-02-22"},{"lineNumber":75,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":76,"author":{"gitId":"Teee728"},"content":"}","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"Teee728":76}},{"path":"src/test/java/cruisey/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Teee728"},"content":"//package cruisey.task;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"Teee728"},"content":"//","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"Teee728"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"Teee728"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"Teee728"},"content":"//import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"Teee728"},"content":"//","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"Teee728"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"Teee728"},"content":"//","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"Teee728"},"content":"//import cruisey.exception.CruiseyException;","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"Teee728"},"content":"//import cruisey.ui.Ui;","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"Teee728"},"content":"//","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"Teee728"},"content":"///**","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"Teee728"},"content":"// * JUnit tests for the {@link ToDo} class for CLI.","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"Teee728"},"content":"// */","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"Teee728"},"content":"//public class ToDoTest { //only worked for CLI","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"Teee728"},"content":"//    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"Teee728"},"content":"//     * Tests the constructor for creating a ToDo task with a description.","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"Teee728"},"content":"//     * Verifies that the ToDo task is created successfully with the given description.","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"Teee728"},"content":"//     */","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"Teee728"},"content":"//","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"Teee728"},"content":"//    private Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"Teee728"},"content":"//    private TaskPriority priority;","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"Teee728"},"content":"//    @Test","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"Teee728"},"content":"//    public void constructor_todoWithDescription_success() {","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"Teee728"},"content":"//        try {","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"Teee728"},"content":"//            ToDo todo \u003d new ToDo(\"Test ToDo\", ui, priority);","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"Teee728"},"content":"//            assertEquals(\"Test ToDo\", todo.getDescription());","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"Teee728"},"content":"//            assertFalse(todo.checkStatus());","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"Teee728"},"content":"//        } catch (CruiseyException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"Teee728"},"content":"//            fail(\"Exception not expected: \" + e.getMessage());","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"Teee728"},"content":"//        }","lastModifiedDate":"2024-02-22"},{"lineNumber":32,"author":{"gitId":"Teee728"},"content":"//    }","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"Teee728"},"content":"//","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"Teee728"},"content":"//    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"Teee728"},"content":"//     * Tests the {@code toString} method for the string representation of a ToDo task.","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"Teee728"},"content":"//     * Verifies that the string representation matches the expected format.","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"Teee728"},"content":"//     */","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"Teee728"},"content":"//    @Test","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"Teee728"},"content":"//    public void toString_todoCheckStringRepresentation_success() { //only worked for CLI","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"Teee728"},"content":"//        try {","lastModifiedDate":"2024-02-22"},{"lineNumber":41,"author":{"gitId":"Teee728"},"content":"//            ToDo todo \u003d new ToDo(\"Test ToDo\", ui, priority);","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"Teee728"},"content":"//            assertEquals(\"Got it. I\u0027ve added this task: \\n [T][\" + todo.getStatusIcon() + \"] \"","lastModifiedDate":"2024-02-22"},{"lineNumber":43,"author":{"gitId":"Teee728"},"content":"//                            + todo.getDescription(),","lastModifiedDate":"2024-02-22"},{"lineNumber":44,"author":{"gitId":"Teee728"},"content":"//                    todo.toString());","lastModifiedDate":"2024-02-22"},{"lineNumber":45,"author":{"gitId":"Teee728"},"content":"//        } catch (CruiseyException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":46,"author":{"gitId":"Teee728"},"content":"//            fail(\"Exception not expected: \" + e.getMessage());","lastModifiedDate":"2024-02-22"},{"lineNumber":47,"author":{"gitId":"Teee728"},"content":"//        }","lastModifiedDate":"2024-02-22"},{"lineNumber":48,"author":{"gitId":"Teee728"},"content":"//    }","lastModifiedDate":"2024-02-22"},{"lineNumber":49,"author":{"gitId":"Teee728"},"content":"//","lastModifiedDate":"2024-02-22"},{"lineNumber":50,"author":{"gitId":"Teee728"},"content":"//}","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"Teee728":50}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Teee728"},"content":"java -classpath ..\\bin Duke \u003c in.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Teee728":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"Teee728"},"content":"java -classpath ../bin Duke \u003c in.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Teee728":1,"-":37}}]
