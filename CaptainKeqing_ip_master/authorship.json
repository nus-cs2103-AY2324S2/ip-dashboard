[{"path":"src/main/java/CreateDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CaptainKeqing"},"content":"public class CreateDeadlineException extends CreateTaskException {","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"CaptainKeqing"},"content":"    public CreateDeadlineException(String s) {","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"CaptainKeqing"},"content":"        super(s);","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"CaptainKeqing"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"CaptainKeqing":5}},{"path":"src/main/java/CreateEventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CaptainKeqing"},"content":"public class CreateEventException extends CreateTaskException {","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"CaptainKeqing"},"content":"    public CreateEventException(String s) {","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"CaptainKeqing"},"content":"        super(s);","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"CaptainKeqing"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"CaptainKeqing":5}},{"path":"src/main/java/CreateTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CaptainKeqing"},"content":"public class CreateTaskException extends Exception {","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"CaptainKeqing"},"content":"    public CreateTaskException(String s) {","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"CaptainKeqing"},"content":"        super(s);","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"CaptainKeqing"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"CaptainKeqing":5}},{"path":"src/main/java/CreateToDoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CaptainKeqing"},"content":"public class CreateToDoException extends CreateTaskException {","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"CaptainKeqing"},"content":"    public CreateToDoException(String s) {","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"CaptainKeqing"},"content":"        super(s);","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"CaptainKeqing"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"CaptainKeqing":5}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CaptainKeqing"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"CaptainKeqing"},"content":"    private String by;","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"CaptainKeqing"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"CaptainKeqing"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"CaptainKeqing"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"CaptainKeqing"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"CaptainKeqing"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"CaptainKeqing"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"CaptainKeqing"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"CaptainKeqing":12}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CaptainKeqing"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"CaptainKeqing"},"content":"    private String from;","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"CaptainKeqing"},"content":"    private String to;","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"CaptainKeqing"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"CaptainKeqing"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"CaptainKeqing"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"CaptainKeqing"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"CaptainKeqing"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"CaptainKeqing"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"CaptainKeqing"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"CaptainKeqing"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"CaptainKeqing":15}},{"path":"src/main/java/Lindi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CaptainKeqing"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"CaptainKeqing"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"CaptainKeqing"},"content":"import java.util.Collections.*;","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"CaptainKeqing"},"content":"public class Lindi {","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"CaptainKeqing"},"content":"    private final static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e(10);","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"CaptainKeqing"},"content":"//    private final static Task[] taskList \u003d new Task[100];","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"CaptainKeqing"},"content":"//    private static int taskListCount \u003d 0;","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"CaptainKeqing"},"content":"    private static void parseInputAndExecute(String userInput) {","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"CaptainKeqing"},"content":"        class LocalFuncs {","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"CaptainKeqing"},"content":"            void executeList(){","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"CaptainKeqing"},"content":"                taskList.forEach(System.out::println);","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"CaptainKeqing"},"content":"                if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"CaptainKeqing"},"content":"                    System.out.println(\"There are no tasks for you today. Enjoy :)\");","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"CaptainKeqing"},"content":"                }","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"CaptainKeqing"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"CaptainKeqing"},"content":"            void executeCreateTask(String s) {","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"CaptainKeqing"},"content":"                Task task;","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"CaptainKeqing"},"content":"                try{","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"CaptainKeqing"},"content":"                    task \u003d Task.create(s);","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"CaptainKeqing"},"content":"                } catch (CreateTaskException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"CaptainKeqing"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"CaptainKeqing"},"content":"                    return;","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"CaptainKeqing"},"content":"                }","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"CaptainKeqing"},"content":"                taskList.add(task);","lastModifiedDate":"2024-01-26"},{"lineNumber":27,"author":{"gitId":"CaptainKeqing"},"content":"                System.out.println(\"Got it. I\u0027ve added this task:\\n\\t\" + task +","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"CaptainKeqing"},"content":"                                   \"\\nNow you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-26"},{"lineNumber":29,"author":{"gitId":"CaptainKeqing"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"CaptainKeqing"},"content":"            /**","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"CaptainKeqing"},"content":"             * Prints a goodbye message and Exits the program (return code 0)","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"CaptainKeqing"},"content":"             */","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"CaptainKeqing"},"content":"            void goodByeAndExit() {","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"CaptainKeqing"},"content":"                System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"CaptainKeqing"},"content":"                printSeparator();","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"CaptainKeqing"},"content":"                System.exit(0); // exit with code 0, terminates program","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"CaptainKeqing"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"CaptainKeqing"},"content":"            void executeModifyTask(String s) {","lastModifiedDate":"2024-01-26"},{"lineNumber":41,"author":{"gitId":"CaptainKeqing"},"content":"                String[] sTokens \u003d s.split(\" \", 3); // expect exactly 2 substrings for a valid command input","lastModifiedDate":"2024-01-26"},{"lineNumber":42,"author":{"gitId":"CaptainKeqing"},"content":"                if (sTokens.length \u003d\u003d 1) {","lastModifiedDate":"2024-01-26"},{"lineNumber":43,"author":{"gitId":"CaptainKeqing"},"content":"                    System.out.println(\"Uh oh ! You have to give me the index of the task you want to modify :)\");","lastModifiedDate":"2024-01-26"},{"lineNumber":44,"author":{"gitId":"CaptainKeqing"},"content":"                    return;","lastModifiedDate":"2024-01-26"},{"lineNumber":45,"author":{"gitId":"CaptainKeqing"},"content":"                } else if (sTokens.length \u003d\u003d 3) {","lastModifiedDate":"2024-01-26"},{"lineNumber":46,"author":{"gitId":"CaptainKeqing"},"content":"                    System.out.println(\"Umm... is it that hard to give me JUST the index? :(\");","lastModifiedDate":"2024-01-26"},{"lineNumber":47,"author":{"gitId":"CaptainKeqing"},"content":"                    return;","lastModifiedDate":"2024-01-26"},{"lineNumber":48,"author":{"gitId":"CaptainKeqing"},"content":"                }","lastModifiedDate":"2024-01-26"},{"lineNumber":49,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":50,"author":{"gitId":"CaptainKeqing"},"content":"                try {","lastModifiedDate":"2024-01-26"},{"lineNumber":51,"author":{"gitId":"CaptainKeqing"},"content":"                    int listIndex \u003d Integer.parseInt(sTokens[1]);","lastModifiedDate":"2024-01-26"},{"lineNumber":52,"author":{"gitId":"CaptainKeqing"},"content":"                    if (listIndex \u003c 1 || listIndex \u003e taskList.size()) {","lastModifiedDate":"2024-01-26"},{"lineNumber":53,"author":{"gitId":"CaptainKeqing"},"content":"                        System.out.println(\"Sorry, I can\u0027t find that task. Please enter a valid index\\n\" +","lastModifiedDate":"2024-01-26"},{"lineNumber":54,"author":{"gitId":"CaptainKeqing"},"content":"                                \"You can see the tasks list by inputting \\\"list\\\"\");","lastModifiedDate":"2024-01-26"},{"lineNumber":55,"author":{"gitId":"CaptainKeqing"},"content":"                        return;","lastModifiedDate":"2024-01-26"},{"lineNumber":56,"author":{"gitId":"CaptainKeqing"},"content":"                    }","lastModifiedDate":"2024-01-26"},{"lineNumber":57,"author":{"gitId":"CaptainKeqing"},"content":"                    Task task \u003d taskList.get(listIndex - 1);","lastModifiedDate":"2024-01-26"},{"lineNumber":58,"author":{"gitId":"CaptainKeqing"},"content":"                    switch (sTokens[0]) {","lastModifiedDate":"2024-01-26"},{"lineNumber":59,"author":{"gitId":"CaptainKeqing"},"content":"                        case \"mark\":","lastModifiedDate":"2024-01-26"},{"lineNumber":60,"author":{"gitId":"CaptainKeqing"},"content":"                            task.markDone();","lastModifiedDate":"2024-01-26"},{"lineNumber":61,"author":{"gitId":"CaptainKeqing"},"content":"                            System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\\t\" + task);","lastModifiedDate":"2024-01-26"},{"lineNumber":62,"author":{"gitId":"CaptainKeqing"},"content":"                            break;","lastModifiedDate":"2024-01-26"},{"lineNumber":63,"author":{"gitId":"CaptainKeqing"},"content":"                        case \"unmark\":","lastModifiedDate":"2024-01-26"},{"lineNumber":64,"author":{"gitId":"CaptainKeqing"},"content":"                            task.unmarkDone();","lastModifiedDate":"2024-01-26"},{"lineNumber":65,"author":{"gitId":"CaptainKeqing"},"content":"                            System.out.println(\"Nice! I\u0027ve marked this task as not done yet:\\n\\t\" + task);","lastModifiedDate":"2024-01-26"},{"lineNumber":66,"author":{"gitId":"CaptainKeqing"},"content":"                            break;","lastModifiedDate":"2024-01-26"},{"lineNumber":67,"author":{"gitId":"CaptainKeqing"},"content":"                        case \"delete\":","lastModifiedDate":"2024-01-26"},{"lineNumber":68,"author":{"gitId":"CaptainKeqing"},"content":"                            taskList.remove(listIndex - 1);","lastModifiedDate":"2024-01-26"},{"lineNumber":69,"author":{"gitId":"CaptainKeqing"},"content":"                            System.out.println(\"Okay. I\u0027ve deleted this task:\\n\\t\" + task +","lastModifiedDate":"2024-01-26"},{"lineNumber":70,"author":{"gitId":"CaptainKeqing"},"content":"                                    \"\\nNow you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-26"},{"lineNumber":71,"author":{"gitId":"CaptainKeqing"},"content":"                            break;","lastModifiedDate":"2024-01-26"},{"lineNumber":72,"author":{"gitId":"CaptainKeqing"},"content":"                        default:","lastModifiedDate":"2024-01-26"},{"lineNumber":73,"author":{"gitId":"CaptainKeqing"},"content":"                            throw new IllegalArgumentException(\"Shouldn\u0027t be in this function unless these 3 commands\");","lastModifiedDate":"2024-01-26"},{"lineNumber":74,"author":{"gitId":"CaptainKeqing"},"content":"                    }","lastModifiedDate":"2024-01-26"},{"lineNumber":75,"author":{"gitId":"CaptainKeqing"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":76,"author":{"gitId":"CaptainKeqing"},"content":"                    System.out.println(\"I\u0027m pretty sure I gave you the indexes in base 10...\\n\" +","lastModifiedDate":"2024-01-26"},{"lineNumber":77,"author":{"gitId":"CaptainKeqing"},"content":"                            \"there shouldn\u0027t be any characters!! :(\");","lastModifiedDate":"2024-01-26"},{"lineNumber":78,"author":{"gitId":"CaptainKeqing"},"content":"                }","lastModifiedDate":"2024-01-26"},{"lineNumber":79,"author":{"gitId":"CaptainKeqing"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":80,"author":{"gitId":"CaptainKeqing"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":81,"author":{"gitId":"CaptainKeqing"},"content":"        // if command called, will be index 0, rest of string in index 1","lastModifiedDate":"2024-01-25"},{"lineNumber":82,"author":{"gitId":"CaptainKeqing"},"content":"        String[] userInputTokens \u003d userInput.split(\" \", 2); ","lastModifiedDate":"2024-01-25"},{"lineNumber":83,"author":{"gitId":"CaptainKeqing"},"content":"        LocalFuncs lf \u003d new LocalFuncs();","lastModifiedDate":"2024-01-25"},{"lineNumber":84,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":85,"author":{"gitId":"CaptainKeqing"},"content":"        switch (userInputTokens[0]) {","lastModifiedDate":"2024-01-25"},{"lineNumber":86,"author":{"gitId":"CaptainKeqing"},"content":"            case \"list\":","lastModifiedDate":"2024-01-25"},{"lineNumber":87,"author":{"gitId":"CaptainKeqing"},"content":"                lf.executeList();","lastModifiedDate":"2024-01-25"},{"lineNumber":88,"author":{"gitId":"CaptainKeqing"},"content":"                break;","lastModifiedDate":"2024-01-25"},{"lineNumber":89,"author":{"gitId":"CaptainKeqing"},"content":"            case \"unmark\":","lastModifiedDate":"2024-01-25"},{"lineNumber":90,"author":{"gitId":"CaptainKeqing"},"content":"            case \"mark\":","lastModifiedDate":"2024-01-25"},{"lineNumber":91,"author":{"gitId":"CaptainKeqing"},"content":"            case \"delete\":","lastModifiedDate":"2024-01-26"},{"lineNumber":92,"author":{"gitId":"CaptainKeqing"},"content":"                lf.executeModifyTask(userInput);","lastModifiedDate":"2024-01-26"},{"lineNumber":93,"author":{"gitId":"CaptainKeqing"},"content":"                break;","lastModifiedDate":"2024-01-25"},{"lineNumber":94,"author":{"gitId":"CaptainKeqing"},"content":"            case \"todo\":","lastModifiedDate":"2024-01-25"},{"lineNumber":95,"author":{"gitId":"CaptainKeqing"},"content":"            case \"event\":","lastModifiedDate":"2024-01-25"},{"lineNumber":96,"author":{"gitId":"CaptainKeqing"},"content":"            case \"deadline\":","lastModifiedDate":"2024-01-25"},{"lineNumber":97,"author":{"gitId":"CaptainKeqing"},"content":"                lf.executeCreateTask(userInput);","lastModifiedDate":"2024-01-25"},{"lineNumber":98,"author":{"gitId":"CaptainKeqing"},"content":"                break;","lastModifiedDate":"2024-01-25"},{"lineNumber":99,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":100,"author":{"gitId":"CaptainKeqing"},"content":"            case \"bye\":","lastModifiedDate":"2024-01-25"},{"lineNumber":101,"author":{"gitId":"CaptainKeqing"},"content":"                lf.goodByeAndExit();","lastModifiedDate":"2024-01-25"},{"lineNumber":102,"author":{"gitId":"CaptainKeqing"},"content":"                break;","lastModifiedDate":"2024-01-25"},{"lineNumber":103,"author":{"gitId":"CaptainKeqing"},"content":"            default:","lastModifiedDate":"2024-01-25"},{"lineNumber":104,"author":{"gitId":"CaptainKeqing"},"content":"                System.out.println(\"Uhh, English please? Haha, just kidding...\\n\" +","lastModifiedDate":"2024-01-26"},{"lineNumber":105,"author":{"gitId":"CaptainKeqing"},"content":"                        \"but for reals I didn\u0027t really understand that :(\");","lastModifiedDate":"2024-01-26"},{"lineNumber":106,"author":{"gitId":"CaptainKeqing"},"content":"                break;","lastModifiedDate":"2024-01-25"},{"lineNumber":107,"author":{"gitId":"CaptainKeqing"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":108,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":109,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":110,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":111,"author":{"gitId":"CaptainKeqing"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":112,"author":{"gitId":"CaptainKeqing"},"content":"     * Prints a horizontal line for better readability","lastModifiedDate":"2024-01-25"},{"lineNumber":113,"author":{"gitId":"CaptainKeqing"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":114,"author":{"gitId":"CaptainKeqing"},"content":"    private static void printSeparator() {","lastModifiedDate":"2024-01-25"},{"lineNumber":115,"author":{"gitId":"CaptainKeqing"},"content":"        System.out.println(\"-\".repeat(50));","lastModifiedDate":"2024-01-24"},{"lineNumber":116,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":117,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":118,"author":{"gitId":"CaptainKeqing"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":119,"author":{"gitId":"CaptainKeqing"},"content":"     * Prints a greeting message.","lastModifiedDate":"2024-01-25"},{"lineNumber":120,"author":{"gitId":"CaptainKeqing"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":121,"author":{"gitId":"CaptainKeqing"},"content":"    private static void greeting() {","lastModifiedDate":"2024-01-25"},{"lineNumber":122,"author":{"gitId":"CaptainKeqing"},"content":"        String name \u003d \"Lindi\";  // Log It N Do It -\u003e LINDI","lastModifiedDate":"2024-01-24"},{"lineNumber":123,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":124,"author":{"gitId":"CaptainKeqing"},"content":"        printSeparator();","lastModifiedDate":"2024-01-24"},{"lineNumber":125,"author":{"gitId":"CaptainKeqing"},"content":"        System.out.println(\"Hello! I\u0027m \" + name);","lastModifiedDate":"2024-01-24"},{"lineNumber":126,"author":{"gitId":"CaptainKeqing"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2024-01-24"},{"lineNumber":127,"author":{"gitId":"CaptainKeqing"},"content":"        printSeparator();","lastModifiedDate":"2024-01-24"},{"lineNumber":128,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":129,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":130,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":131,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":132,"author":{"gitId":"CaptainKeqing"},"content":"    private static void chatLoop() {","lastModifiedDate":"2024-01-25"},{"lineNumber":133,"author":{"gitId":"CaptainKeqing"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-26"},{"lineNumber":134,"author":{"gitId":"CaptainKeqing"},"content":"        String userInput;","lastModifiedDate":"2024-01-24"},{"lineNumber":135,"author":{"gitId":"CaptainKeqing"},"content":"        while (true) { // This will not be an infinite loop, because goodByeAndExit() terminates the program when called","lastModifiedDate":"2024-01-24"},{"lineNumber":136,"author":{"gitId":"CaptainKeqing"},"content":"            userInput \u003d scanner.nextLine();","lastModifiedDate":"2024-01-26"},{"lineNumber":137,"author":{"gitId":"CaptainKeqing"},"content":"            printSeparator();","lastModifiedDate":"2024-01-24"},{"lineNumber":138,"author":{"gitId":"CaptainKeqing"},"content":"            parseInputAndExecute(userInput);","lastModifiedDate":"2024-01-25"},{"lineNumber":139,"author":{"gitId":"CaptainKeqing"},"content":"            printSeparator();","lastModifiedDate":"2024-01-24"},{"lineNumber":140,"author":{"gitId":"CaptainKeqing"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":141,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":142,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":143,"author":{"gitId":"CaptainKeqing"},"content":"    private static boolean isNumber(String s) {","lastModifiedDate":"2024-01-25"},{"lineNumber":144,"author":{"gitId":"CaptainKeqing"},"content":"        try {","lastModifiedDate":"2024-01-25"},{"lineNumber":145,"author":{"gitId":"CaptainKeqing"},"content":"            Integer.valueOf(s);","lastModifiedDate":"2024-01-25"},{"lineNumber":146,"author":{"gitId":"CaptainKeqing"},"content":"            System.out.println(\"true number\");","lastModifiedDate":"2024-01-25"},{"lineNumber":147,"author":{"gitId":"CaptainKeqing"},"content":"            return true;","lastModifiedDate":"2024-01-25"},{"lineNumber":148,"author":{"gitId":"CaptainKeqing"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":149,"author":{"gitId":"CaptainKeqing"},"content":"            System.out.println(\"false number\");","lastModifiedDate":"2024-01-25"},{"lineNumber":150,"author":{"gitId":"CaptainKeqing"},"content":"            return false;","lastModifiedDate":"2024-01-25"},{"lineNumber":151,"author":{"gitId":"CaptainKeqing"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":152,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":153,"author":{"gitId":"CaptainKeqing"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-24"},{"lineNumber":154,"author":{"gitId":"CaptainKeqing"},"content":"        greeting();","lastModifiedDate":"2024-01-24"},{"lineNumber":155,"author":{"gitId":"CaptainKeqing"},"content":"        chatLoop();","lastModifiedDate":"2024-01-24"},{"lineNumber":156,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":157,"author":{"gitId":"CaptainKeqing"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"CaptainKeqing":157}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CaptainKeqing"},"content":"public abstract class Task { // Adapted from Course Website","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"CaptainKeqing"},"content":"    protected String description;","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"CaptainKeqing"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"CaptainKeqing"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"CaptainKeqing"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"CaptainKeqing"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"CaptainKeqing"},"content":"    public static Task create(String fullString) throws CreateTaskException {","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"CaptainKeqing"},"content":"        // s is either `todo`, `event` or `deadline`","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"CaptainKeqing"},"content":"        String[] sTokens \u003d fullString.split(\" \", 2);","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"CaptainKeqing"},"content":"        if (sTokens.length \u003c 2) {","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"CaptainKeqing"},"content":"            throw new CreateTaskException(\"soo what exactly are you trying to do? :)\");","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"CaptainKeqing"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"CaptainKeqing"},"content":"        String command \u003d sTokens[0];","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"CaptainKeqing"},"content":"        String taskString \u003d sTokens[1];","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"CaptainKeqing"},"content":"        switch (command) {","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"CaptainKeqing"},"content":"            case \"todo\":","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"CaptainKeqing"},"content":"                return new ToDo(taskString);","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"CaptainKeqing"},"content":"            case \"deadline\":","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"CaptainKeqing"},"content":"                // Further split the remaining string based on /by","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"CaptainKeqing"},"content":"                if (!taskString.contains(\"/by\")) {","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"CaptainKeqing"},"content":"                    throw new CreateDeadlineException(","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"CaptainKeqing"},"content":"                            \"You can\u0027t expect me to track a deadline if you don\u0027t give me the.. deadline right? haha\\n\" +","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"CaptainKeqing"},"content":"                                    \"please include \u0027/by\u0027 followed by the deadline :)\");","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"CaptainKeqing"},"content":"                }","lastModifiedDate":"2024-01-26"},{"lineNumber":27,"author":{"gitId":"CaptainKeqing"},"content":"                String[] descriptionNBy \u003d taskString.split(\"/by\");","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"CaptainKeqing"},"content":"                if (descriptionNBy.length \u003e 2) {","lastModifiedDate":"2024-01-26"},{"lineNumber":29,"author":{"gitId":"CaptainKeqing"},"content":"                    throw new CreateDeadlineException(\"Don\u0027t procrastinate with multiple deadlines !! :)\");","lastModifiedDate":"2024-01-26"},{"lineNumber":30,"author":{"gitId":"CaptainKeqing"},"content":"                }","lastModifiedDate":"2024-01-26"},{"lineNumber":31,"author":{"gitId":"CaptainKeqing"},"content":"                return new Deadline(descriptionNBy[0].trim(),","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"CaptainKeqing"},"content":"                                    descriptionNBy[1].trim());","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"CaptainKeqing"},"content":"            case \"event\":","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"CaptainKeqing"},"content":"                // Further split the remaining string based on /from and /to","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"CaptainKeqing"},"content":"                if (!taskString.contains(\"/from\") || !taskString.contains(\"/to\")) {","lastModifiedDate":"2024-01-26"},{"lineNumber":36,"author":{"gitId":"CaptainKeqing"},"content":"                    throw new CreateEventException(","lastModifiedDate":"2024-01-26"},{"lineNumber":37,"author":{"gitId":"CaptainKeqing"},"content":"                            \"I\u0027m not sure how you\u0027re going for an event without a start time or end time\\n\" +","lastModifiedDate":"2024-01-26"},{"lineNumber":38,"author":{"gitId":"CaptainKeqing"},"content":"                                    \"please include \u0027/from\u0027 and \u0027/to\u0027 so I can keep track for you :)\");","lastModifiedDate":"2024-01-26"},{"lineNumber":39,"author":{"gitId":"CaptainKeqing"},"content":"                }","lastModifiedDate":"2024-01-26"},{"lineNumber":40,"author":{"gitId":"CaptainKeqing"},"content":"                if (taskString.indexOf(\"/from\") \u003e taskString.indexOf(\"/to\")) {","lastModifiedDate":"2024-01-26"},{"lineNumber":41,"author":{"gitId":"CaptainKeqing"},"content":"                    throw new CreateEventException(\"Sorry! /from must appear before /to :)\");","lastModifiedDate":"2024-01-26"},{"lineNumber":42,"author":{"gitId":"CaptainKeqing"},"content":"                }","lastModifiedDate":"2024-01-26"},{"lineNumber":43,"author":{"gitId":"CaptainKeqing"},"content":"                String[] descriptionNFromNTo \u003d taskString.split(\"/from |/to \");","lastModifiedDate":"2024-01-26"},{"lineNumber":44,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":45,"author":{"gitId":"CaptainKeqing"},"content":"                if (descriptionNFromNTo.length \u003e 3) {","lastModifiedDate":"2024-01-26"},{"lineNumber":46,"author":{"gitId":"CaptainKeqing"},"content":"                    throw new CreateEventException(\"um.. I\u0027m not sure how I can track for you an event that has\\n\" +","lastModifiedDate":"2024-01-26"},{"lineNumber":47,"author":{"gitId":"CaptainKeqing"},"content":"                            \"more than 1 start or end time! :)\");","lastModifiedDate":"2024-01-26"},{"lineNumber":48,"author":{"gitId":"CaptainKeqing"},"content":"                }","lastModifiedDate":"2024-01-26"},{"lineNumber":49,"author":{"gitId":"CaptainKeqing"},"content":"                return new Event(descriptionNFromNTo[0].trim(),","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"CaptainKeqing"},"content":"                                 descriptionNFromNTo[1].trim(),","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"CaptainKeqing"},"content":"                                 descriptionNFromNTo[2].trim());","lastModifiedDate":"2024-01-25"},{"lineNumber":52,"author":{"gitId":"CaptainKeqing"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":53,"author":{"gitId":"CaptainKeqing"},"content":"        return null; // shouldn\u0027t come here, since we have done the check already before calling this factory function","lastModifiedDate":"2024-01-26"},{"lineNumber":54,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":55,"author":{"gitId":"CaptainKeqing"},"content":"    public void markDone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":56,"author":{"gitId":"CaptainKeqing"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-25"},{"lineNumber":57,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":58,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":59,"author":{"gitId":"CaptainKeqing"},"content":"    public void unmarkDone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":60,"author":{"gitId":"CaptainKeqing"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":61,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":62,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":63,"author":{"gitId":"CaptainKeqing"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":64,"author":{"gitId":"CaptainKeqing"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":65,"author":{"gitId":"CaptainKeqing"},"content":"        return String.format(\"[%s] %s\",","lastModifiedDate":"2024-01-25"},{"lineNumber":66,"author":{"gitId":"CaptainKeqing"},"content":"                                isDone ? \"X\" : \" \",","lastModifiedDate":"2024-01-25"},{"lineNumber":67,"author":{"gitId":"CaptainKeqing"},"content":"                                this.description);","lastModifiedDate":"2024-01-25"},{"lineNumber":68,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":69,"author":{"gitId":"CaptainKeqing"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"CaptainKeqing":69}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CaptainKeqing"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"CaptainKeqing"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"CaptainKeqing"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"CaptainKeqing"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"CaptainKeqing"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"CaptainKeqing"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"CaptainKeqing"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"CaptainKeqing":10}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"CaptainKeqing"},"content":"hello","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"CaptainKeqing"},"content":"list","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"CaptainKeqing"},"content":"todo practice piano","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"CaptainKeqing"},"content":"deadline finish iP /by Sat 26 2359","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"CaptainKeqing"},"content":"event volunteering /from Sat 930am /to 1130am","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"CaptainKeqing"},"content":"list","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"CaptainKeqing"},"content":"mark 2","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"CaptainKeqing"},"content":"mark 1","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"CaptainKeqing"},"content":"list","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"CaptainKeqing"},"content":"event cca practice /to 10pm","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"CaptainKeqing"},"content":"event cca practice /to 10pm /from 8pm","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"CaptainKeqing"},"content":"deadline cca leader selection","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"CaptainKeqing"},"content":"bye","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"CaptainKeqing":13}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"CaptainKeqing"},"content":"java -classpath ../bin Lindi \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"CaptainKeqing"},"content":"#dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":36,"CaptainKeqing":2}}]
