[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"dayn-1"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"dayn-1":1,"-":41}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dayn-1"},"content":"package duke;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"dayn-1"},"content":"import duke.commands.Command;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"dayn-1"},"content":"import duke.data.exception.DukeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"dayn-1"},"content":"import duke.parser.Parser;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"dayn-1"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"dayn-1"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"dayn-1"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":12,"author":{"gitId":"dayn-1"},"content":"    private Storage storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"dayn-1"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"dayn-1"},"content":"    private Ui ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"dayn-1"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"dayn-1"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"dayn-1"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"dayn-1"},"content":"        try {","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"dayn-1"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"dayn-1"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"dayn-1"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"dayn-1"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":26,"author":{"gitId":"dayn-1"},"content":"    private void run() {","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"dayn-1"},"content":"        ui.intro();","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"dayn-1"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"dayn-1"},"content":"        while (!isExit) {","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"dayn-1"},"content":"            try {","lastModifiedDate":"2024-01-23"},{"lineNumber":32,"author":{"gitId":"dayn-1"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"dayn-1"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"dayn-1"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"dayn-1"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"dayn-1"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-01-23"},{"lineNumber":37,"author":{"gitId":"dayn-1"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"dayn-1"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-24"},{"lineNumber":39,"author":{"gitId":"dayn-1"},"content":"                ui.showError(\"Invalid Number\");","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"dayn-1"},"content":"            } catch (Exception e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"dayn-1"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"dayn-1"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"dayn-1"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":45,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":46,"author":{"gitId":"dayn-1"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-24"},{"lineNumber":47,"author":{"gitId":"dayn-1"},"content":"        new Duke(\"data/tasks.txt\").run();","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":50,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"dayn-1":50,"-":2}},{"path":"src/main/java/duke/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dayn-1"},"content":"package duke.commands;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"dayn-1"},"content":"import duke.data.exception.DukeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"dayn-1"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"dayn-1"},"content":"import duke.task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"dayn-1"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"dayn-1"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"dayn-1"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"dayn-1"},"content":"\t/** Task to add */","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"dayn-1"},"content":"\tprivate final Task newTask;","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"dayn-1"},"content":"\tpublic AddCommand(Task newTask) {","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"dayn-1"},"content":"\t\tthis.newTask \u003d newTask;","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"dayn-1"},"content":"\t}","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"dayn-1"},"content":"\t@Override","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"dayn-1"},"content":"\tpublic void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"dayn-1"},"content":"\t\ttry {","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"dayn-1"},"content":"\t\t\ttasks.addTask(newTask);","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"dayn-1"},"content":"\t\t\tui.addTask(newTask, tasks.getNumTasks());","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"dayn-1"},"content":"\t\t\tstorage.saveTasks(tasks);","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"dayn-1"},"content":"\t\t} catch (Exception e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"dayn-1"},"content":"\t\t\tthrow new DukeException(e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"dayn-1"},"content":"\t\t}","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"dayn-1"},"content":"\t}","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"dayn-1"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"dayn-1":28}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dayn-1"},"content":"package duke.commands;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"dayn-1"},"content":"import duke.data.exception.DukeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"dayn-1"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"dayn-1"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"dayn-1"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"dayn-1"},"content":"public abstract class Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"dayn-1"},"content":"\t/**","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"dayn-1"},"content":"\t * Performs updates to TaskList, Ui print statements","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"dayn-1"},"content":"\t * and Storage updates based on the command type","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"dayn-1"},"content":"\t *","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"dayn-1"},"content":"\t * @param tasks TaskList of current Duke.","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"dayn-1"},"content":"\t * @param ui Ui of current Duke.","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"dayn-1"},"content":"\t * @param storage Storage of current Duke.","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"dayn-1"},"content":"\t * @throws DukeException  If error executing the command.","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"dayn-1"},"content":"\t */","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"dayn-1"},"content":"\tpublic abstract void execute(TaskList tasks, Ui ui, Storage storage)","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"dayn-1"},"content":"\t\t\tthrows DukeException;","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"dayn-1"},"content":"\t/**","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"dayn-1"},"content":"\t * returns True if ExitCommand type","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"dayn-1"},"content":"\t */","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"dayn-1"},"content":"\tpublic boolean isExit() {","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"dayn-1"},"content":"\t\treturn false;","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"dayn-1"},"content":"\t}","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"dayn-1"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"dayn-1":29}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dayn-1"},"content":"package duke.commands;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"dayn-1"},"content":"import duke.data.exception.DukeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"dayn-1"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"dayn-1"},"content":"import duke.task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"dayn-1"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"dayn-1"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"dayn-1"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"dayn-1"},"content":"\t/** Index to perform delete on */","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"dayn-1"},"content":"\tprivate final int deleteIndex;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"dayn-1"},"content":"\tpublic DeleteCommand(int deleteIndex) {","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"dayn-1"},"content":"\t\tthis.deleteIndex \u003d deleteIndex;","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"dayn-1"},"content":"\t}","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"dayn-1"},"content":"\t@Override","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"dayn-1"},"content":"\tpublic void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"dayn-1"},"content":"\t\ttry {","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"dayn-1"},"content":"\t\t\tTask toRemove \u003d tasks.deleteTask(deleteIndex);","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"dayn-1"},"content":"\t\t\tui.deleteTask(toRemove, tasks.getNumTasks());","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"dayn-1"},"content":"\t\t\tstorage.saveTasks(tasks);","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"dayn-1"},"content":"\t\t} catch (Exception e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"dayn-1"},"content":"\t\t\tthrow new DukeException(e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"dayn-1"},"content":"\t\t}","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"dayn-1"},"content":"\t}","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"dayn-1"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"dayn-1":29}},{"path":"src/main/java/duke/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dayn-1"},"content":"package duke.commands;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"dayn-1"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"dayn-1"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"dayn-1"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"dayn-1"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"dayn-1"},"content":"\t@Override","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"dayn-1"},"content":"\tpublic void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"dayn-1"},"content":"\t\tui.exit();","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"dayn-1"},"content":"\t}","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"dayn-1"},"content":"\t@Override","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"dayn-1"},"content":"\tpublic boolean isExit() {","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"dayn-1"},"content":"\t\treturn true;","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"dayn-1"},"content":"\t}","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"dayn-1"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"dayn-1":17}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dayn-1"},"content":"package duke.commands;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"dayn-1"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"dayn-1"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"dayn-1"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"dayn-1"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"dayn-1"},"content":"import java.util.List;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"dayn-1"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"dayn-1"},"content":"\t/** Keyword to search for */","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"dayn-1"},"content":"\tprivate final String searchString;","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"dayn-1"},"content":"\tpublic FindCommand(String searchString) {","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"dayn-1"},"content":"\t\tthis.searchString \u003d searchString;","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"dayn-1"},"content":"\t}","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"dayn-1"},"content":"\t@Override","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"dayn-1"},"content":"\tpublic void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"dayn-1"},"content":"\t\tList\u003cTask\u003e resultList \u003d tasks.search(searchString);","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"dayn-1"},"content":"\t\tui.find(resultList);","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"dayn-1"},"content":"\t}","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"dayn-1"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"dayn-1":24}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dayn-1"},"content":"package duke.commands;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"dayn-1"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"dayn-1"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"dayn-1"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"dayn-1"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"dayn-1"},"content":"\t@Override","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"dayn-1"},"content":"\tpublic void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"dayn-1"},"content":"\t\tui.list(tasks.getTasks());","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"dayn-1"},"content":"\t}","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"dayn-1"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"dayn-1":12}},{"path":"src/main/java/duke/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dayn-1"},"content":"package duke.commands;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"dayn-1"},"content":"import duke.data.exception.DukeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"dayn-1"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"dayn-1"},"content":"import duke.task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"dayn-1"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"dayn-1"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"dayn-1"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"dayn-1"},"content":"\t/** Index to mark or unmark */","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"dayn-1"},"content":"\tprivate final int updateIndex;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"dayn-1"},"content":"\t/** Denotes whether to mark or unmark task */","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"dayn-1"},"content":"\tprivate final boolean isComplete;","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"dayn-1"},"content":"\tpublic MarkCommand(int updateIndex, boolean isComplete) {","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"dayn-1"},"content":"\t\tthis.updateIndex \u003d updateIndex;","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"dayn-1"},"content":"\t\tthis.isComplete \u003d isComplete;","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"dayn-1"},"content":"\t}","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"dayn-1"},"content":"\t@Override","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"dayn-1"},"content":"\tpublic void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"dayn-1"},"content":"\t\ttry {","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"dayn-1"},"content":"\t\t\tTask updateTask \u003d tasks.markTask(updateIndex, isComplete);","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"dayn-1"},"content":"\t\t\tui.mark(updateTask, isComplete);","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"dayn-1"},"content":"\t\t\tstorage.saveTasks(tasks);","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"dayn-1"},"content":"\t\t} catch (Exception e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"dayn-1"},"content":"\t\t\tthrow new DukeException(e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"dayn-1"},"content":"\t\t}","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"dayn-1"},"content":"\t}","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"dayn-1"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"dayn-1":31}},{"path":"src/main/java/duke/data/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dayn-1"},"content":"package duke.data.exception;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"dayn-1"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"dayn-1"},"content":"    public DukeException(String errorDesc) {","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"dayn-1"},"content":"        super(errorDesc);","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"dayn-1"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"dayn-1":7}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dayn-1"},"content":"package duke.parser;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"dayn-1"},"content":"import duke.Duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"dayn-1"},"content":"import duke.commands.*;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"dayn-1"},"content":"import duke.data.exception.DukeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"dayn-1"},"content":"import duke.task.Deadline;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"dayn-1"},"content":"import duke.task.Event;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"dayn-1"},"content":"import duke.task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"dayn-1"},"content":"import duke.task.ToDo;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"dayn-1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"dayn-1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"dayn-1"},"content":"public class Parser {","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"dayn-1"},"content":"\t/**","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"dayn-1"},"content":"\t * Returns task stored in given line entry.","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"dayn-1"},"content":"\t *","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"dayn-1"},"content":"\t * @param taskStored String line entry of task stored in txt file","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"dayn-1"},"content":"\t * @return ToDo, Event or Deadline Task stored in given line.","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"dayn-1"},"content":"\t */","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"dayn-1"},"content":"\tpublic static Task parseFromStorage(String taskStored) {","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"dayn-1"},"content":"\t\tString[] taskLine \u003d taskStored.split(\";;;\");","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"dayn-1"},"content":"\t\tString[] details \u003d taskLine[2].split(\":::\");","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"dayn-1"},"content":"\t\tTask decodedTask \u003d new ToDo(details[0]);","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"dayn-1"},"content":"\t\tif (taskLine[0].equals(\"D\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"dayn-1"},"content":"\t\t\tdecodedTask \u003d new Deadline(details[0], parseStorageDate(details[1]));","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"dayn-1"},"content":"\t\t} else if (taskLine[0].equals(\"E\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"dayn-1"},"content":"\t\t\tdecodedTask \u003d new Event(details[0],","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"dayn-1"},"content":"\t\t\t\t\tparseStorageDate(details[1]), parseStorageDate(details[2]));","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"dayn-1"},"content":"\t\t}","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"dayn-1"},"content":"\t\tif (taskLine[1].equals(\"1\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"dayn-1"},"content":"\t\t\tdecodedTask.mark();","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"dayn-1"},"content":"\t\t}","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"dayn-1"},"content":"\t\treturn decodedTask;","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"dayn-1"},"content":"\t}","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"dayn-1"},"content":"\t/**","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"dayn-1"},"content":"\t * Returns command of specified instruction.","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"dayn-1"},"content":"\t *","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"dayn-1"},"content":"\t * @param fullCmd String full command input by user.","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"dayn-1"},"content":"\t * @return Command object.","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"dayn-1"},"content":"\t * @throws DukeException  If unknown command was given.","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"dayn-1"},"content":"\t */","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"dayn-1"},"content":"\tpublic static Command parse(String fullCmd) throws DukeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"dayn-1"},"content":"\t\tString cmd \u003d fullCmd.split(\" \")[0];","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"dayn-1"},"content":"\t\tswitch (cmd) {","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"dayn-1"},"content":"\t\tcase \"bye\":","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"dayn-1"},"content":"\t\t\treturn new ExitCommand();","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"dayn-1"},"content":"\t\tcase \"list\":","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"dayn-1"},"content":"\t\t\treturn new ListCommand();","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"dayn-1"},"content":"\t\tcase \"mark\":","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"dayn-1"},"content":"\t\t\treturn parseMark(fullCmd, true);","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"dayn-1"},"content":"\t\tcase \"unmark\":","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"dayn-1"},"content":"\t\t\treturn parseMark(fullCmd, false);","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"dayn-1"},"content":"\t\tcase \"todo\":","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"dayn-1"},"content":"\t\t\treturn parseToDo(fullCmd);","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"dayn-1"},"content":"\t\tcase \"deadline\":","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"dayn-1"},"content":"\t\t\treturn parseDeadline(fullCmd);","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"dayn-1"},"content":"\t\tcase \"event\":","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"dayn-1"},"content":"\t\t\treturn parseEvent(fullCmd);","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"dayn-1"},"content":"\t\tcase \"delete\":","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"dayn-1"},"content":"\t\t\treturn parseDelete(fullCmd);","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"dayn-1"},"content":"\t\tcase \"find\":","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"dayn-1"},"content":"\t\t\treturn parseFind(fullCmd);","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"dayn-1"},"content":"\t\tdefault:","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"dayn-1"},"content":"\t\t\tthrow new DukeException(\"\\tSorry, what do you mean?\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"dayn-1"},"content":"\t\t}","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"dayn-1"},"content":"\t}","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"dayn-1"},"content":"\tprivate static MarkCommand parseMark(String fullCmd, boolean isComplete)","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"dayn-1"},"content":"\t\t\tthrows DukeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"dayn-1"},"content":"\t\tString markFormTxt \u003d \"\\tSorry! To mark or unmark tasks, please do\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"dayn-1"},"content":"\t\t\t\t\"\\t\\t(un)mark (number)\\n\";","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"dayn-1"},"content":"\t\tif (fullCmd.split(\" \")[1].trim().isEmpty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"dayn-1"},"content":"\t\t\tthrow new DukeException(markFormTxt);","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"dayn-1"},"content":"\t\t}","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"dayn-1"},"content":"\t\tint updateIndex \u003d Integer.parseInt(fullCmd.split(\" \")[1]);","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"dayn-1"},"content":"\t\treturn new MarkCommand(updateIndex, isComplete);","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"dayn-1"},"content":"\t}","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"dayn-1"},"content":"\tprivate static AddCommand parseDeadline(String fullCmd) throws DukeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"dayn-1"},"content":"\t\tString deadlineFormTxt \u003d \"\\tSorry! Please use the given format for deadline tasks:\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"dayn-1"},"content":"\t\t\t\t+ \"\\t\\tdeadline (description) /by DD/MM/YYYY hhmm\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"dayn-1"},"content":"\t\t\t\t+ \"\\t\\teg. deadline homework /by 30/01/2023 1800\\n\";","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"dayn-1"},"content":"\t\ttry {","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"dayn-1"},"content":"\t\t\tString[] fullCmdArr \u003d fullCmd.split(\"/\", 2);","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"dayn-1"},"content":"\t\t\tif (fullCmdArr.length !\u003d 2) {","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"dayn-1"},"content":"\t\t\t\tthrow new DukeException(deadlineFormTxt);","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"dayn-1"},"content":"\t\t\t}","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"dayn-1"},"content":"\t\t\tif (!fullCmdArr[1].substring(0, Math.min(3, fullCmdArr[1].length())).equals(\"by \")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"dayn-1"},"content":"\t\t\t\tthrow new DukeException(deadlineFormTxt);","lastModifiedDate":"2024-01-31"},{"lineNumber":95,"author":{"gitId":"dayn-1"},"content":"\t\t\t}","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"dayn-1"},"content":"\t\t\tString name \u003d fullCmdArr[0].substring(9);","lastModifiedDate":"2024-01-31"},{"lineNumber":98,"author":{"gitId":"dayn-1"},"content":"\t\t\tString dueDate \u003d fullCmd.split(\"/\", 2)[1].substring(3);","lastModifiedDate":"2024-01-31"},{"lineNumber":99,"author":{"gitId":"dayn-1"},"content":"\t\t\tif (name.trim().isEmpty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":100,"author":{"gitId":"dayn-1"},"content":"\t\t\t\tthrow new DukeException(\"Description Blank\");","lastModifiedDate":"2024-02-01"},{"lineNumber":101,"author":{"gitId":"dayn-1"},"content":"\t\t\t}","lastModifiedDate":"2024-02-01"},{"lineNumber":102,"author":{"gitId":"dayn-1"},"content":"\t\t\tif (dueDate.trim().isEmpty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":103,"author":{"gitId":"dayn-1"},"content":"\t\t\t\tthrow new DukeException(deadlineFormTxt);","lastModifiedDate":"2024-02-01"},{"lineNumber":104,"author":{"gitId":"dayn-1"},"content":"\t\t\t}","lastModifiedDate":"2024-02-01"},{"lineNumber":105,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":106,"author":{"gitId":"dayn-1"},"content":"\t\t\tTask newTask \u003d new Deadline(name, parseCmdDate(dueDate));","lastModifiedDate":"2024-01-31"},{"lineNumber":107,"author":{"gitId":"dayn-1"},"content":"\t\t\treturn new AddCommand(newTask);","lastModifiedDate":"2024-01-31"},{"lineNumber":108,"author":{"gitId":"dayn-1"},"content":"\t\t} catch (Exception e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":109,"author":{"gitId":"dayn-1"},"content":"\t\t\tthrow new DukeException(deadlineFormTxt);","lastModifiedDate":"2024-01-31"},{"lineNumber":110,"author":{"gitId":"dayn-1"},"content":"\t\t}","lastModifiedDate":"2024-01-31"},{"lineNumber":111,"author":{"gitId":"dayn-1"},"content":"\t}","lastModifiedDate":"2024-01-31"},{"lineNumber":112,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":113,"author":{"gitId":"dayn-1"},"content":"\tprivate static AddCommand parseEvent(String fullCmd) throws DukeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":114,"author":{"gitId":"dayn-1"},"content":"\t\tString eventFormTxt \u003d \"\\tSorry! Please use the given format for event tasks:\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":115,"author":{"gitId":"dayn-1"},"content":"\t\t\t\t+ \"\\t\\tevent (description) /from DD/MM/YYYY hhmm /to DD/MM/YYYY hhmm\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":116,"author":{"gitId":"dayn-1"},"content":"\t\t\t\t+ \"\\t\\teg. event assignment /from 30/01/2023 1200 /to 12/02/2023 2359\\n\";","lastModifiedDate":"2024-01-31"},{"lineNumber":117,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":118,"author":{"gitId":"dayn-1"},"content":"\t\ttry {","lastModifiedDate":"2024-01-31"},{"lineNumber":119,"author":{"gitId":"dayn-1"},"content":"\t\t\tString[] fullCmdArr \u003d fullCmd.split(\"/from \");","lastModifiedDate":"2024-01-31"},{"lineNumber":120,"author":{"gitId":"dayn-1"},"content":"\t\t\tif (fullCmdArr.length !\u003d 2) {","lastModifiedDate":"2024-02-01"},{"lineNumber":121,"author":{"gitId":"dayn-1"},"content":"\t\t\t\tthrow new DukeException(eventFormTxt);","lastModifiedDate":"2024-02-01"},{"lineNumber":122,"author":{"gitId":"dayn-1"},"content":"\t\t\t}","lastModifiedDate":"2024-02-01"},{"lineNumber":123,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":124,"author":{"gitId":"dayn-1"},"content":"\t\t\tString[] fromToArr \u003d fullCmdArr[1].split(\" /to \");","lastModifiedDate":"2024-01-31"},{"lineNumber":125,"author":{"gitId":"dayn-1"},"content":"\t\t\tif (fromToArr.length !\u003d 2) {","lastModifiedDate":"2024-02-01"},{"lineNumber":126,"author":{"gitId":"dayn-1"},"content":"\t\t\t\tthrow new DukeException(eventFormTxt);","lastModifiedDate":"2024-02-01"},{"lineNumber":127,"author":{"gitId":"dayn-1"},"content":"\t\t\t}","lastModifiedDate":"2024-02-01"},{"lineNumber":128,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":129,"author":{"gitId":"dayn-1"},"content":"\t\t\tString name \u003d fullCmdArr[0].substring(6);","lastModifiedDate":"2024-01-31"},{"lineNumber":130,"author":{"gitId":"dayn-1"},"content":"\t\t\tif (name.trim().isEmpty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":131,"author":{"gitId":"dayn-1"},"content":"\t\t\t\tthrow new DukeException(\"Description Blank\");","lastModifiedDate":"2024-02-01"},{"lineNumber":132,"author":{"gitId":"dayn-1"},"content":"\t\t\t}","lastModifiedDate":"2024-02-01"},{"lineNumber":133,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":134,"author":{"gitId":"dayn-1"},"content":"\t\t\tTask newTask \u003d new Event(name, parseCmdDate(fromToArr[0]),","lastModifiedDate":"2024-01-31"},{"lineNumber":135,"author":{"gitId":"dayn-1"},"content":"\t\t\t\t\tparseCmdDate(fromToArr[1]));","lastModifiedDate":"2024-01-31"},{"lineNumber":136,"author":{"gitId":"dayn-1"},"content":"\t\t\treturn new AddCommand(newTask);","lastModifiedDate":"2024-01-31"},{"lineNumber":137,"author":{"gitId":"dayn-1"},"content":"\t\t} catch (Exception e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":138,"author":{"gitId":"dayn-1"},"content":"\t\t\tthrow new DukeException(eventFormTxt);","lastModifiedDate":"2024-01-31"},{"lineNumber":139,"author":{"gitId":"dayn-1"},"content":"\t\t}","lastModifiedDate":"2024-01-31"},{"lineNumber":140,"author":{"gitId":"dayn-1"},"content":"\t}","lastModifiedDate":"2024-01-31"},{"lineNumber":141,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":142,"author":{"gitId":"dayn-1"},"content":"\tprivate static AddCommand parseToDo(String fullCmd) throws DukeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":143,"author":{"gitId":"dayn-1"},"content":"\t\tif (fullCmd.length() \u003c 5) {","lastModifiedDate":"2024-02-01"},{"lineNumber":144,"author":{"gitId":"dayn-1"},"content":"\t\t\tthrow new DukeException(\"Description Blank\");","lastModifiedDate":"2024-02-01"},{"lineNumber":145,"author":{"gitId":"dayn-1"},"content":"\t\t}","lastModifiedDate":"2024-02-01"},{"lineNumber":146,"author":{"gitId":"dayn-1"},"content":"\t\tString name \u003d fullCmd.substring(5);","lastModifiedDate":"2024-01-31"},{"lineNumber":147,"author":{"gitId":"dayn-1"},"content":"\t\tif (name.trim().isEmpty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":148,"author":{"gitId":"dayn-1"},"content":"\t\t\tthrow new DukeException(\"Description Blank\");","lastModifiedDate":"2024-02-01"},{"lineNumber":149,"author":{"gitId":"dayn-1"},"content":"\t\t}","lastModifiedDate":"2024-02-01"},{"lineNumber":150,"author":{"gitId":"dayn-1"},"content":"\t\tTask newTask \u003d new ToDo(name);","lastModifiedDate":"2024-01-31"},{"lineNumber":151,"author":{"gitId":"dayn-1"},"content":"\t\treturn new AddCommand(newTask);","lastModifiedDate":"2024-01-31"},{"lineNumber":152,"author":{"gitId":"dayn-1"},"content":"\t}","lastModifiedDate":"2024-01-31"},{"lineNumber":153,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":154,"author":{"gitId":"dayn-1"},"content":"\tprivate static DeleteCommand parseDelete(String fullCmd) throws DukeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":155,"author":{"gitId":"dayn-1"},"content":"\t\tString deleteFormTxt \u003d \"\\tDid you mean to delete the task? Please do this:\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":156,"author":{"gitId":"dayn-1"},"content":"\t\t\t\t\"\\t\\tdelete (number)\\n\";","lastModifiedDate":"2024-01-31"},{"lineNumber":157,"author":{"gitId":"dayn-1"},"content":"\t\ttry {","lastModifiedDate":"2024-01-31"},{"lineNumber":158,"author":{"gitId":"dayn-1"},"content":"\t\t\tif (fullCmd.split(\" \")[1].trim().isEmpty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":159,"author":{"gitId":"dayn-1"},"content":"\t\t\t\tthrow new DukeException(deleteFormTxt);","lastModifiedDate":"2024-02-01"},{"lineNumber":160,"author":{"gitId":"dayn-1"},"content":"\t\t\t}","lastModifiedDate":"2024-02-01"},{"lineNumber":161,"author":{"gitId":"dayn-1"},"content":"\t\t\tint deleteIndex \u003d Integer.parseInt(fullCmd.split(\" \")[1]);","lastModifiedDate":"2024-01-31"},{"lineNumber":162,"author":{"gitId":"dayn-1"},"content":"\t\t\treturn new DeleteCommand(deleteIndex);","lastModifiedDate":"2024-01-31"},{"lineNumber":163,"author":{"gitId":"dayn-1"},"content":"\t\t} catch (Exception e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":164,"author":{"gitId":"dayn-1"},"content":"\t\t\tthrow new DukeException(deleteFormTxt);","lastModifiedDate":"2024-01-31"},{"lineNumber":165,"author":{"gitId":"dayn-1"},"content":"\t\t}","lastModifiedDate":"2024-01-31"},{"lineNumber":166,"author":{"gitId":"dayn-1"},"content":"\t}","lastModifiedDate":"2024-01-31"},{"lineNumber":167,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":168,"author":{"gitId":"dayn-1"},"content":"\tprivate static FindCommand parseFind(String fullCmd)","lastModifiedDate":"2024-02-01"},{"lineNumber":169,"author":{"gitId":"dayn-1"},"content":"\t\t\tthrows DukeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":170,"author":{"gitId":"dayn-1"},"content":"\t\tString findFormTxt \u003d \"\\tPlease specify the keyword you wish to find!\\n\";","lastModifiedDate":"2024-02-01"},{"lineNumber":171,"author":{"gitId":"dayn-1"},"content":"\t\ttry {","lastModifiedDate":"2024-02-01"},{"lineNumber":172,"author":{"gitId":"dayn-1"},"content":"\t\t\tif (fullCmd.split(\" \", 2)[1].trim().isEmpty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":173,"author":{"gitId":"dayn-1"},"content":"\t\t\t\tthrow new DukeException(findFormTxt);","lastModifiedDate":"2024-02-01"},{"lineNumber":174,"author":{"gitId":"dayn-1"},"content":"\t\t\t}","lastModifiedDate":"2024-02-01"},{"lineNumber":175,"author":{"gitId":"dayn-1"},"content":"\t\t\treturn new FindCommand(fullCmd.split(\" \", 2)[1]);","lastModifiedDate":"2024-02-01"},{"lineNumber":176,"author":{"gitId":"dayn-1"},"content":"\t\t} catch (Exception e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":177,"author":{"gitId":"dayn-1"},"content":"\t\t\tthrow new DukeException(findFormTxt);","lastModifiedDate":"2024-02-01"},{"lineNumber":178,"author":{"gitId":"dayn-1"},"content":"\t\t}","lastModifiedDate":"2024-02-01"},{"lineNumber":179,"author":{"gitId":"dayn-1"},"content":"\t}","lastModifiedDate":"2024-02-01"},{"lineNumber":180,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":181,"author":{"gitId":"dayn-1"},"content":"\tprivate static LocalDateTime parseCmdDate(String dateTime) {","lastModifiedDate":"2024-01-31"},{"lineNumber":182,"author":{"gitId":"dayn-1"},"content":"\t\tDateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2024-01-31"},{"lineNumber":183,"author":{"gitId":"dayn-1"},"content":"\t\treturn LocalDateTime.parse(dateTime, formatter);","lastModifiedDate":"2024-01-31"},{"lineNumber":184,"author":{"gitId":"dayn-1"},"content":"\t}","lastModifiedDate":"2024-01-31"},{"lineNumber":185,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":186,"author":{"gitId":"dayn-1"},"content":"\tprivate static LocalDateTime parseStorageDate(String date) {","lastModifiedDate":"2024-01-31"},{"lineNumber":187,"author":{"gitId":"dayn-1"},"content":"\t\tDateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\u0027T\u0027HH:mm\");","lastModifiedDate":"2024-02-01"},{"lineNumber":188,"author":{"gitId":"dayn-1"},"content":"\t\treturn LocalDateTime.parse(date, formatter);","lastModifiedDate":"2024-01-31"},{"lineNumber":189,"author":{"gitId":"dayn-1"},"content":"\t}","lastModifiedDate":"2024-01-31"},{"lineNumber":190,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":191,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":192,"author":{"gitId":"dayn-1"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"dayn-1":192}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dayn-1"},"content":"package duke.storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"dayn-1"},"content":"import duke.data.exception.DukeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"dayn-1"},"content":"import duke.parser.Parser;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"dayn-1"},"content":"import duke.task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"dayn-1"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"dayn-1"},"content":"import java.io.File;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"dayn-1"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"dayn-1"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"dayn-1"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"dayn-1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"dayn-1"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"dayn-1"},"content":"public class Storage {","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"dayn-1"},"content":"\t/** file path to store txt file */","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"dayn-1"},"content":"\tprivate final String filePath;","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"dayn-1"},"content":"\tpublic Storage(String filePath) {","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"dayn-1"},"content":"\t\tthis.filePath \u003d filePath;","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"dayn-1"},"content":"\t}","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"dayn-1"},"content":"\t/**","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"dayn-1"},"content":"\t * Loads list of tasks from existing txt file","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"dayn-1"},"content":"\t * else creates a new blank txt file","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"dayn-1"},"content":"\t * @return ArrayList\u003cTask\u003e list of existing tasks (if any)","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"dayn-1"},"content":"\t */","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"dayn-1"},"content":"\tpublic ArrayList\u003cTask\u003e load() {","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"dayn-1"},"content":"\t\tArrayList\u003cTask\u003e store \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"dayn-1"},"content":"\t\ttry {","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"dayn-1"},"content":"\t\t\tFile f \u003d new File(filePath);","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"dayn-1"},"content":"\t\t\tScanner s \u003d new Scanner(f); // create a Scanner using the File as the source","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"dayn-1"},"content":"\t\t\twhile (s.hasNext()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"dayn-1"},"content":"\t\t\t\tTask nextTask \u003d Parser.parseFromStorage(s.nextLine());","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"dayn-1"},"content":"\t\t\t\tstore.add(nextTask);","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"dayn-1"},"content":"\t\t\t}","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"dayn-1"},"content":"\t\t} catch (FileNotFoundException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"dayn-1"},"content":"\t\t\ttry {","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"dayn-1"},"content":"\t\t\t\tFile f \u003d new File(filePath);","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"dayn-1"},"content":"\t\t\t\tf.getParentFile().mkdirs();","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"dayn-1"},"content":"\t\t\t\tf.createNewFile();","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"dayn-1"},"content":"\t\t\t} catch (IOException ex) {","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"dayn-1"},"content":"\t\t\t\tSystem.out.println(ex.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"dayn-1"},"content":"\t\t\t}","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"dayn-1"},"content":"\t\t}","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"dayn-1"},"content":"\t\treturn store;","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"dayn-1"},"content":"\t}","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"dayn-1"},"content":"\t/**","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"dayn-1"},"content":"\t * Saves list of tasks into txt file","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"dayn-1"},"content":"\t *","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"dayn-1"},"content":"\t * @param store TaskList to be stored into txt file","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"dayn-1"},"content":"\t */","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"dayn-1"},"content":"\tpublic void saveTasks(TaskList store) throws IOException {","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"dayn-1"},"content":"\t\tFileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"dayn-1"},"content":"\t\tString toSave \u003d \"\";","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"dayn-1"},"content":"\t\tfor (Task task : store.getTasks()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"dayn-1"},"content":"\t\t\ttoSave \u003d toSave + task.getType() + \";;;\"","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"dayn-1"},"content":"\t\t\t\t\t+ (task.hasCompleted() ? 1 : 0) + \";;;\"","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"dayn-1"},"content":"\t\t\t\t\t+ task.getDetails() + \"\\n\";","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"dayn-1"},"content":"\t\t}","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"dayn-1"},"content":"\t\tfw.write(toSave);","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"dayn-1"},"content":"\t\tfw.close();","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"dayn-1"},"content":"\t}","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"dayn-1"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"dayn-1":68}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dayn-1"},"content":"package duke.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"dayn-1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"dayn-1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"dayn-1"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"dayn-1"},"content":"    /** Type icon for Deadline task */","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"dayn-1"},"content":"    private static final String TYPE \u003d \"D\";","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"dayn-1"},"content":"    /** Deadline or due date of this task */","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"dayn-1"},"content":"    protected LocalDateTime dueDate;","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"dayn-1"},"content":"    public Deadline(String name, LocalDateTime dueDate) {","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"dayn-1"},"content":"        super(name);","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"dayn-1"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"dayn-1"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"dayn-1"},"content":"    public String getDetails() {","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"dayn-1"},"content":"        return super.getDetails() + \":::\" + this.dueDate;","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"dayn-1"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"dayn-1"},"content":"    public String getType() {","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"dayn-1"},"content":"        return TYPE;","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"dayn-1"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":29,"author":{"gitId":"dayn-1"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":30,"author":{"gitId":"dayn-1"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy, HH:mm\");","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"dayn-1"},"content":"        String printDate \u003d dueDate.format(formatter);","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"dayn-1"},"content":"        return \"[\" + TYPE + \"]\" + super.toString() + \" (by: \" + printDate + \")\";","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":34,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":35,"author":{"gitId":"dayn-1"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"dayn-1":35}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dayn-1"},"content":"package duke.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"dayn-1"},"content":"import duke.task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"dayn-1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"dayn-1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"dayn-1"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"dayn-1"},"content":"    /** Type icon for Event task */","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"dayn-1"},"content":"    private static final String TYPE \u003d \"E\";","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"dayn-1"},"content":"    /** Start date/time of this task */","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"dayn-1"},"content":"    protected LocalDateTime start;","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"dayn-1"},"content":"    /** End date/time of this task */","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"dayn-1"},"content":"    protected LocalDateTime end;","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"dayn-1"},"content":"    public Event(String name, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"dayn-1"},"content":"        super(name);","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"dayn-1"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"dayn-1"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-01-22"},{"lineNumber":20,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":22,"author":{"gitId":"dayn-1"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"dayn-1"},"content":"    public String getDetails() {","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"dayn-1"},"content":"        return super.getDetails() + \":::\" + this.start + \":::\" + this.end;","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"dayn-1"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"dayn-1"},"content":"    public String getType() {","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"dayn-1"},"content":"        return TYPE;","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"dayn-1"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":33,"author":{"gitId":"dayn-1"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":34,"author":{"gitId":"dayn-1"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy, HH:mm\");","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"dayn-1"},"content":"        String printStart \u003d start.format(formatter);","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"dayn-1"},"content":"        String printEnd \u003d end.format(formatter);","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"dayn-1"},"content":"        return \"[\" + TYPE + \"]\" + super.toString() +","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"dayn-1"},"content":"                \"(from: \" + printStart + \" to: \" + printEnd + \")\";","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":40,"author":{"gitId":"dayn-1"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"dayn-1":40}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dayn-1"},"content":"package duke.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"dayn-1"},"content":"public abstract class Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"dayn-1"},"content":"    /** Name or description of given task */","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"dayn-1"},"content":"    protected String name;","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"dayn-1"},"content":"    /** Denotes if task is completed or not */","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"dayn-1"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"dayn-1"},"content":"    public Task(String name) {","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"dayn-1"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"dayn-1"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"dayn-1"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"dayn-1"},"content":"     * Returns alphabetical code for given task","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"dayn-1"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"dayn-1"},"content":"     * @return \"E\" for Event, \"D\" for Deadline, \"T\" for ToDo","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"dayn-1"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"dayn-1"},"content":"    public abstract String getType();","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"dayn-1"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"dayn-1"},"content":"     * Returns completion status icon for given task","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"dayn-1"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"dayn-1"},"content":"     * @return \"X\" if completed else \" \"","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"dayn-1"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"dayn-1"},"content":"    protected String getStatusIcon() {","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"dayn-1"},"content":"        return (this.hasCompleted() ? \"X\" : \" \");","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":29,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":30,"author":{"gitId":"dayn-1"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"dayn-1"},"content":"     * Returns boolean completion status for given task","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"dayn-1"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"dayn-1"},"content":"     * @return True if task is completed","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"dayn-1"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"dayn-1"},"content":"    public boolean hasCompleted() {","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"dayn-1"},"content":"        return this.isDone;","lastModifiedDate":"2024-01-22"},{"lineNumber":37,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":38,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":39,"author":{"gitId":"dayn-1"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"dayn-1"},"content":"     * Marks that task is complete","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"dayn-1"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"dayn-1"},"content":"    public void mark() {","lastModifiedDate":"2024-01-22"},{"lineNumber":43,"author":{"gitId":"dayn-1"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-22"},{"lineNumber":44,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":45,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":46,"author":{"gitId":"dayn-1"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"dayn-1"},"content":"     * Unmark the task. Task is not completed.","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"dayn-1"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"dayn-1"},"content":"    public void unmark() {","lastModifiedDate":"2024-01-22"},{"lineNumber":50,"author":{"gitId":"dayn-1"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-22"},{"lineNumber":51,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":52,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":53,"author":{"gitId":"dayn-1"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"dayn-1"},"content":"     * Returns task description","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"dayn-1"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"dayn-1"},"content":"     * @return name of task","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"dayn-1"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"dayn-1"},"content":"    public String getDetails() {","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"dayn-1"},"content":"        return this.name;","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"dayn-1"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":63,"author":{"gitId":"dayn-1"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":64,"author":{"gitId":"dayn-1"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.name;","lastModifiedDate":"2024-01-22"},{"lineNumber":65,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":66,"author":{"gitId":"dayn-1"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"dayn-1":66}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dayn-1"},"content":"package duke.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"dayn-1"},"content":"import duke.data.exception.DukeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"dayn-1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"dayn-1"},"content":"import java.util.List;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"dayn-1"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"dayn-1"},"content":"public class TaskList {","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"dayn-1"},"content":"\t/** List of tasks */","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"dayn-1"},"content":"\tprivate final List\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"dayn-1"},"content":"\tpublic TaskList() {","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"dayn-1"},"content":"\t\tthis.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"dayn-1"},"content":"\t}","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"dayn-1"},"content":"\tpublic TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"dayn-1"},"content":"\t\tthis.tasks \u003d tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"dayn-1"},"content":"\t}","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"dayn-1"},"content":"\t/**","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"dayn-1"},"content":"\t * Returns list of tasks","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"dayn-1"},"content":"\t *","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"dayn-1"},"content":"\t * @return List\u003cTask\u003e of tasks","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"dayn-1"},"content":"\t */","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"dayn-1"},"content":"\tpublic List\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"dayn-1"},"content":"\t\treturn tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"dayn-1"},"content":"\t}","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"dayn-1"},"content":"\t/**","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"dayn-1"},"content":"\t * Returns number of tasks","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"dayn-1"},"content":"\t *","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"dayn-1"},"content":"\t * @return Number of tasks in the list","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"dayn-1"},"content":"\t */","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"dayn-1"},"content":"\tpublic int getNumTasks() {","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"dayn-1"},"content":"\t\treturn tasks.size();","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"dayn-1"},"content":"\t}","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"dayn-1"},"content":"\t/**","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"dayn-1"},"content":"\t * Adds new task to the list","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"dayn-1"},"content":"\t *","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"dayn-1"},"content":"\t * @param newTask task to be added","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"dayn-1"},"content":"\t */","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"dayn-1"},"content":"\tpublic void addTask(Task newTask) {","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"dayn-1"},"content":"\t\ttasks.add(newTask);","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"dayn-1"},"content":"\t}","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"dayn-1"},"content":"\t/**","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"dayn-1"},"content":"\t * Deletes task at given index from the list","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"dayn-1"},"content":"\t *","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"dayn-1"},"content":"\t * @param deleteIndex index of task to be deleted","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"dayn-1"},"content":"\t * @return Task that was deleted","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"dayn-1"},"content":"\t * @throws DukeException if number given is out of bounds","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"dayn-1"},"content":"\t */","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"dayn-1"},"content":"\tpublic Task deleteTask(int deleteIndex) throws DukeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"dayn-1"},"content":"\t\tif (deleteIndex \u003e tasks.size() || deleteIndex \u003c\u003d 0) {","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"dayn-1"},"content":"\t\t\tthrow new DukeException(\"\\tNumber out of bounds!\\n\");","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"dayn-1"},"content":"\t\t}","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"dayn-1"},"content":"\t\treturn tasks.remove(deleteIndex - 1);","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"dayn-1"},"content":"\t}","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"dayn-1"},"content":"\t/**","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"dayn-1"},"content":"\t * Mark or unmark task of given update index","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"dayn-1"},"content":"\t *","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"dayn-1"},"content":"\t * @param updateIndex index of task to be updated","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"dayn-1"},"content":"\t * @param taskComplete to mark or unmark the task","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"dayn-1"},"content":"\t * @return Task that was updated","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"dayn-1"},"content":"\t * @throws DukeException if number given is out of bounds","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"dayn-1"},"content":"\t */","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"dayn-1"},"content":"\tpublic Task markTask(int updateIndex, boolean taskComplete)","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"dayn-1"},"content":"\t\t\tthrows DukeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"dayn-1"},"content":"\t\tif (updateIndex \u003e tasks.size() || updateIndex \u003c\u003d 0) {","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"dayn-1"},"content":"\t\t\tthrow new DukeException(\"Number Out of Bounds\");","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"dayn-1"},"content":"\t\t}","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"dayn-1"},"content":"\t\tTask updateTask \u003d tasks.get(updateIndex - 1);","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"dayn-1"},"content":"\t\tif (taskComplete) {","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"dayn-1"},"content":"\t\t\tupdateTask.mark();","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"dayn-1"},"content":"\t\t}","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"dayn-1"},"content":"\t\telse {","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"dayn-1"},"content":"\t\t\tupdateTask.unmark();","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"dayn-1"},"content":"\t\t}","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"dayn-1"},"content":"\t\treturn updateTask;","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"dayn-1"},"content":"\t}","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"dayn-1"},"content":"\t/**","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"dayn-1"},"content":"\t * Returns list of tasks with given search string","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"dayn-1"},"content":"\t *","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"dayn-1"},"content":"\t * @param searchString keywords to search for","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"dayn-1"},"content":"\t * @return List\u003cTask\u003e of tasks with given keyword","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"dayn-1"},"content":"\t */","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"dayn-1"},"content":"\tpublic List\u003cTask\u003e search(String searchString) {","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"dayn-1"},"content":"\t\treturn tasks.stream()","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"dayn-1"},"content":"\t\t\t\t.filter(task -\u003e task.getDetails().contains(searchString))","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"dayn-1"},"content":"\t\t\t\t.collect(Collectors.toList());","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"dayn-1"},"content":"\t}","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"dayn-1"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"dayn-1":98}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dayn-1"},"content":"package duke.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"dayn-1"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"dayn-1"},"content":"    /** Type icon for ToDo task */","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"dayn-1"},"content":"    private static final String TYPE \u003d \"T\";","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"dayn-1"},"content":"    public ToDo(String name) {","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"dayn-1"},"content":"        super(name);","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"dayn-1"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"dayn-1"},"content":"    public String getType() {","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"dayn-1"},"content":"        return TYPE;","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"dayn-1"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"dayn-1"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"dayn-1"},"content":"        return \"[\" + TYPE + \"]\" + super.toString();","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"dayn-1"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"dayn-1":21}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dayn-1"},"content":"package duke.ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"dayn-1"},"content":"import duke.task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"dayn-1"},"content":"import java.util.List;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"dayn-1"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"dayn-1"},"content":"public class Ui {","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"dayn-1"},"content":"\t/** Line separator */","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"dayn-1"},"content":"\tprivate static final String TXT_LINE \u003d \"\\t____________________________________________________________\\n\";","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"dayn-1"},"content":"\t/** Text printed if description of task is not given */","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"dayn-1"},"content":"\tprivate static final String TXT_NODESC \u003d \"\\tPlease provide the description of your task!\\n\";","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"dayn-1"},"content":"\t/**","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"dayn-1"},"content":"\t * Prints welcome lines for user during initial start-up","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"dayn-1"},"content":"\t */","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"dayn-1"},"content":"\tpublic void intro() {","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"dayn-1"},"content":"\t\tString introTxt \u003d TXT_LINE +","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"dayn-1"},"content":"\t\t\t\t\"\\t Hello! I\u0027m Megatron\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"dayn-1"},"content":"\t\t\t\t\"\\t What can I do for you?\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"dayn-1"},"content":"\t\t\t\tTXT_LINE;","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"dayn-1"},"content":"\t\tSystem.out.println(introTxt);","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"dayn-1"},"content":"\t}","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"dayn-1"},"content":"\t/**","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"dayn-1"},"content":"\t * Reads keyboard commands by the user","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"dayn-1"},"content":"\t * @return String of instructions given","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"dayn-1"},"content":"\t */","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"dayn-1"},"content":"\tpublic String readCommand() {","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"dayn-1"},"content":"\t\tScanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"dayn-1"},"content":"\t\treturn sc.nextLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"dayn-1"},"content":"\t}","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"dayn-1"},"content":"\t/**","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"dayn-1"},"content":"\t * Prints exit lines to the user","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"dayn-1"},"content":"\t */","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"dayn-1"},"content":"\tpublic void exit() {","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"dayn-1"},"content":"\t\tString outroTxt \u003d TXT_LINE + \"\\t Bye. Hope to see you again soon!\\n\" + TXT_LINE;","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"dayn-1"},"content":"\t\tSystem.out.println(outroTxt);","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"dayn-1"},"content":"\t}","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"dayn-1"},"content":"\t/**","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"dayn-1"},"content":"\t * Prints the list of tasks given","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"dayn-1"},"content":"\t *","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"dayn-1"},"content":"\t * @param store List\u003cTask\u003e of tasks to be printed","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"dayn-1"},"content":"\t */","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"dayn-1"},"content":"\tpublic void list(List\u003cTask\u003e store) {","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"dayn-1"},"content":"\t\tStringBuilder listingTxt \u003d new StringBuilder(\"\\tHere are the tasks in your list:\\n\");","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"dayn-1"},"content":"\t\tfor (int i \u003d 0; i \u003c store.size(); i++) {","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"dayn-1"},"content":"\t\t\tlistingTxt.append(\"\\t \").append(i + 1).append(\".\").append(store.get(i)).append(\"\\n\");","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"dayn-1"},"content":"\t\t}","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"dayn-1"},"content":"\t\tSystem.out.println(TXT_LINE + listingTxt + TXT_LINE);","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"dayn-1"},"content":"\t}","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"dayn-1"},"content":"\t/**","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"dayn-1"},"content":"\t * Prints details of task added to the user","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"dayn-1"},"content":"\t *","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"dayn-1"},"content":"\t * @param newTask task that was added","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"dayn-1"},"content":"\t * @param numItems number of items currently in the list","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"dayn-1"},"content":"\t */","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"dayn-1"},"content":"\tpublic void addTask(Task newTask, int numItems) {","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"dayn-1"},"content":"\t\tString addTaskTxt \u003d \"\\tGot it. I\u0027ve added this task:\\n\";","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"dayn-1"},"content":"\t\tSystem.out.println(TXT_LINE + addTaskTxt + \"\\t\\t\" + newTask + \"\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"dayn-1"},"content":"\t\t\t\t+ \"\\tNow you have \" + numItems + \" tasks in the list.\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"dayn-1"},"content":"\t\t\t\t+ TXT_LINE","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"dayn-1"},"content":"\t\t);","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"dayn-1"},"content":"\t}","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"dayn-1"},"content":"\t/**","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"dayn-1"},"content":"\t * Prints details of task deleted to the user","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"dayn-1"},"content":"\t *","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"dayn-1"},"content":"\t * @param toRemove task that was deleted","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"dayn-1"},"content":"\t * @param numItems number of items left in the list","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"dayn-1"},"content":"\t */","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"dayn-1"},"content":"\tpublic void deleteTask(Task toRemove, int numItems) {","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"dayn-1"},"content":"\t\tString deleteTxt \u003d \"\\tNoted. I will remove this task for you:\\n\";","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"dayn-1"},"content":"\t\tSystem.out.println(TXT_LINE + deleteTxt + \"\\t\\t\" + toRemove + \"\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"dayn-1"},"content":"\t\t\t\t\"\\tNow you have \" + numItems + \" tasks in the list.\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"dayn-1"},"content":"\t\t\t\tTXT_LINE","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"dayn-1"},"content":"\t\t);","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"dayn-1"},"content":"\t}","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"dayn-1"},"content":"\t/**","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"dayn-1"},"content":"\t * Prints details of task updated to the user","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"dayn-1"},"content":"\t *","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"dayn-1"},"content":"\t * @param updateTask task that was updated","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"dayn-1"},"content":"\t * @param isComplete completion status of updated task","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"dayn-1"},"content":"\t */","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"dayn-1"},"content":"\tpublic void mark(Task updateTask, boolean isComplete) {","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"dayn-1"},"content":"\t\tString markTxt \u003d \"\\tNice! I\u0027ve marked this task as done:\\n\";","lastModifiedDate":"2024-01-31"},{"lineNumber":91,"author":{"gitId":"dayn-1"},"content":"\t\tString unmarkTxt \u003d \"\\tOK, I\u0027ve marked this task as not done yet:\\n\";","lastModifiedDate":"2024-01-31"},{"lineNumber":92,"author":{"gitId":"dayn-1"},"content":"\t\tString markFormTxt \u003d \"\\tSorry! To mark or unmark tasks, please do\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"dayn-1"},"content":"\t\t\t\t\"\\t\\t(un)mark (number)\\n\";","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":95,"author":{"gitId":"dayn-1"},"content":"\t\tString toPrint \u003d isComplete ? markTxt : unmarkTxt;","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"dayn-1"},"content":"\t\tSystem.out.println(TXT_LINE + toPrint +","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"dayn-1"},"content":"\t\t\t\t\"\\t\\t\" + updateTask + \"\\n\" + TXT_LINE);","lastModifiedDate":"2024-01-31"},{"lineNumber":98,"author":{"gitId":"dayn-1"},"content":"\t}","lastModifiedDate":"2024-01-31"},{"lineNumber":99,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"dayn-1"},"content":"\t/**","lastModifiedDate":"2024-02-01"},{"lineNumber":101,"author":{"gitId":"dayn-1"},"content":"\t * Prints search results to user","lastModifiedDate":"2024-02-01"},{"lineNumber":102,"author":{"gitId":"dayn-1"},"content":"\t *","lastModifiedDate":"2024-02-01"},{"lineNumber":103,"author":{"gitId":"dayn-1"},"content":"\t * @param searchList containing list of task matched","lastModifiedDate":"2024-02-01"},{"lineNumber":104,"author":{"gitId":"dayn-1"},"content":"\t */","lastModifiedDate":"2024-02-01"},{"lineNumber":105,"author":{"gitId":"dayn-1"},"content":"\tpublic void find(List\u003cTask\u003e searchList) {","lastModifiedDate":"2024-02-01"},{"lineNumber":106,"author":{"gitId":"dayn-1"},"content":"\t\tStringBuilder findTxt \u003d new StringBuilder(\"\\tHere\u0027s what I found:\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":107,"author":{"gitId":"dayn-1"},"content":"\t\tfor (int i \u003d 0; i \u003c searchList.size(); i++) {","lastModifiedDate":"2024-02-01"},{"lineNumber":108,"author":{"gitId":"dayn-1"},"content":"\t\t\tfindTxt.append(\"\\t \").append(i + 1).append(\".\").append(searchList.get(i)).append(\"\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":109,"author":{"gitId":"dayn-1"},"content":"\t\t}","lastModifiedDate":"2024-02-01"},{"lineNumber":110,"author":{"gitId":"dayn-1"},"content":"\t\tSystem.out.println(TXT_LINE + findTxt + TXT_LINE);","lastModifiedDate":"2024-02-01"},{"lineNumber":111,"author":{"gitId":"dayn-1"},"content":"\t}","lastModifiedDate":"2024-02-01"},{"lineNumber":112,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":113,"author":{"gitId":"dayn-1"},"content":"\t/**","lastModifiedDate":"2024-01-31"},{"lineNumber":114,"author":{"gitId":"dayn-1"},"content":"\t * Prints error line to the user","lastModifiedDate":"2024-01-31"},{"lineNumber":115,"author":{"gitId":"dayn-1"},"content":"\t *","lastModifiedDate":"2024-01-31"},{"lineNumber":116,"author":{"gitId":"dayn-1"},"content":"\t * @param errorMsg containing details of the issue","lastModifiedDate":"2024-01-31"},{"lineNumber":117,"author":{"gitId":"dayn-1"},"content":"\t */","lastModifiedDate":"2024-01-31"},{"lineNumber":118,"author":{"gitId":"dayn-1"},"content":"\tpublic void showError(String errorMsg) {","lastModifiedDate":"2024-01-31"},{"lineNumber":119,"author":{"gitId":"dayn-1"},"content":"\t\tif (errorMsg.equals(\"Description Blank\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":120,"author":{"gitId":"dayn-1"},"content":"\t\t\tSystem.out.println(TXT_LINE + TXT_NODESC + TXT_LINE);","lastModifiedDate":"2024-01-31"},{"lineNumber":121,"author":{"gitId":"dayn-1"},"content":"\t\t} else if (errorMsg.equals(\"Invalid Number\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":122,"author":{"gitId":"dayn-1"},"content":"\t\t\tSystem.out.println(TXT_LINE + \"\\tInvalid number given! :(\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":123,"author":{"gitId":"dayn-1"},"content":"\t\t\t+ TXT_LINE);","lastModifiedDate":"2024-01-31"},{"lineNumber":124,"author":{"gitId":"dayn-1"},"content":"\t\t} else {","lastModifiedDate":"2024-01-31"},{"lineNumber":125,"author":{"gitId":"dayn-1"},"content":"\t\t\tSystem.out.println(TXT_LINE + errorMsg + TXT_LINE);","lastModifiedDate":"2024-01-31"},{"lineNumber":126,"author":{"gitId":"dayn-1"},"content":"\t\t}","lastModifiedDate":"2024-01-31"},{"lineNumber":127,"author":{"gitId":"dayn-1"},"content":"\t}","lastModifiedDate":"2024-01-31"},{"lineNumber":128,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":129,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":130,"author":{"gitId":"dayn-1"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"dayn-1":130}},{"path":"src/test/java/duke/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dayn-1"},"content":"package duke.parser;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"dayn-1"},"content":"import duke.task.Deadline;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"dayn-1"},"content":"import duke.task.Event;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"dayn-1"},"content":"import duke.task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"dayn-1"},"content":"import duke.task.ToDo;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"dayn-1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"dayn-1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"dayn-1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"dayn-1"},"content":"public class ParserTest {","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"dayn-1"},"content":"\t@Test","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"dayn-1"},"content":"\tpublic void parseDeadlineStorageTest() {","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"dayn-1"},"content":"\t\tString testTaskStored \u003d \"D;;;0;;;homework :::2023-01-30T18:00\";","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"dayn-1"},"content":"\t\tTask decodedTask \u003d new Deadline(\"homework \",","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"dayn-1"},"content":"\t\t\t\tLocalDateTime.of(2023, 1, 30, 18, 0));","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"dayn-1"},"content":"\t\tassertEquals(Parser.parseFromStorage(testTaskStored).toString(), decodedTask.toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"dayn-1"},"content":"\t}","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"dayn-1"},"content":"\t@Test","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"dayn-1"},"content":"\tpublic void parseToDoStorageTest() {","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"dayn-1"},"content":"\t\tString testTaskStored \u003d \"T;;;1;;;hi\";","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"dayn-1"},"content":"\t\tTask decodedTask \u003d new ToDo(\"hi\");","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"dayn-1"},"content":"\t\tdecodedTask.mark();","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"dayn-1"},"content":"\t\tassertEquals(Parser.parseFromStorage(testTaskStored).toString(), decodedTask.toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"dayn-1"},"content":"\t}","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"dayn-1"},"content":"\t@Test","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"dayn-1"},"content":"\tpublic void parseEventStorageTest() {","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"dayn-1"},"content":"\t\tString testTaskStored \u003d \"E;;;0;;;assignment :::2023-01-30T12:00:::2023-02-12T23:59\";","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"dayn-1"},"content":"\t\tTask decodedTask \u003d new Event(\"assignment \",","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"dayn-1"},"content":"\t\t\t\tLocalDateTime.of(2023, 1, 30, 12, 0),","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"dayn-1"},"content":"\t\t\t\tLocalDateTime.of(2023, 2, 12, 23, 59));","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"dayn-1"},"content":"\t\tassertEquals(Parser.parseFromStorage(testTaskStored).toString(), decodedTask.toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"dayn-1"},"content":"\t}","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"dayn-1"},"content":"}","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"dayn-1":40}},{"path":"src/test/java/duke/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dayn-1"},"content":"package duke.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"dayn-1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"dayn-1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"dayn-1"},"content":"public class ToDoTest {","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"dayn-1"},"content":"\t@Test","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"dayn-1"},"content":"\tpublic void TaskCreationTest(){","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"dayn-1"},"content":"\t\tassertEquals(new ToDo(\"hello\").toString(), \"[T][ ] hello\");","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"dayn-1"},"content":"\t}","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"dayn-1"},"content":"\t@Test","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"dayn-1"},"content":"\tpublic void markTest(){","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"dayn-1"},"content":"\t\tTask markTask \u003d new ToDo(\"hello\");","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"dayn-1"},"content":"\t\tmarkTask.mark();","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"dayn-1"},"content":"\t\tassertEquals(markTask.toString(), \"[T][X] hello\");","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"dayn-1"},"content":"\t}","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"dayn-1"},"content":"\t@Test","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"dayn-1"},"content":"\tpublic void unmarkTest(){","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"dayn-1"},"content":"\t\tTask markTask \u003d new ToDo(\"hello\");","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"dayn-1"},"content":"\t\tmarkTask.mark();","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"dayn-1"},"content":"\t\tmarkTask.unmark();","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"dayn-1"},"content":"\t\tassertEquals(markTask.toString(), \"[T][ ] hello\");","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"dayn-1"},"content":"\t}","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"dayn-1"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"dayn-1":27}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"dayn-1"},"content":"todo borrow book","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"dayn-1"},"content":"list","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"dayn-1"},"content":"mark 1","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"dayn-1"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"dayn-1"},"content":"unmark 1","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"dayn-1"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"dayn-1"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"dayn-1"},"content":"todo","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"dayn-1"},"content":"blah","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"dayn-1"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"dayn-1"},"content":"event hi/ /","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"dayn-1"},"content":"delete 1","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"dayn-1"},"content":"bye","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"dayn-1":13}}]
