[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"tohlh"},"content":"# Henry project template","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"tohlh"},"content":"3. After that, locate the `src/main/java/Henry.java` file, right-click it, and choose `Run Henry.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":22,"tohlh":2}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"tohlh"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"tohlh"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"tohlh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"tohlh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"tohlh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"tohlh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"tohlh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"tohlh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"tohlh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"tohlh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"tohlh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"tohlh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"tohlh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"tohlh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"tohlh"},"content":"    mainClass.set(\"henry.Launcher\")","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"tohlh"},"content":"    archiveBaseName \u003d \"henry\"","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":60,"author":{"gitId":"tohlh"},"content":"checkstyle {","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"tohlh"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"tohlh"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"-":40,"tohlh":22}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"tohlh"},"content":"# Henry User Guide","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"tohlh"},"content":"Henry is a desktop chatbot app for managing tasks, optimized for use via Command Line Interface (CLI).","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"tohlh"},"content":"![](./Ui.png)","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"tohlh"},"content":"Here\u0027s what Henry can do:","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"tohlh"},"content":"- Adding a `todo` task that has only description.","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"tohlh"},"content":"- Adding a `deadline` task that has description, and a deadline datetime (`by`).","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"tohlh"},"content":"- Adding an `event` task that has description, a starting datetime (`from`) and an ending datetime (`to`).","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"tohlh"},"content":"- Mark or unmark a task as done or undone.","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"tohlh"},"content":"- Delete a task from the list.","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"tohlh"},"content":"- Update a task\u0027s `description`, deadline (`by`), starting datetime (`from`) and/or ending datetime (`to`).","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":15,"author":{"gitId":"tohlh"},"content":"## Adding a Todo Task: `todo {description}`","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":17,"author":{"gitId":"tohlh"},"content":"You can add a `Todo` task into the list. A todo task only has a `description`","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":19,"author":{"gitId":"tohlh"},"content":"Example: `todo buy bread`","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"tohlh"},"content":"- This adds a todo item into the list with the description of \"buy bread\".","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"tohlh"},"content":"Expected outcome:","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"tohlh"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"tohlh"},"content":"Added this task","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"tohlh"},"content":"[T][] buy bread","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"tohlh"},"content":"Now you have 1 tasks in the list :(","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"tohlh"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"tohlh"},"content":"## Adding a Deadline Task: `deadline {description} /by {datetime}`","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":32,"author":{"gitId":"tohlh"},"content":"You can add a `Deadline` task into the list.","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"tohlh"},"content":"Example: `deadline return book /by 29/2/2024 15:00`","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"tohlh"},"content":"- This adds a deadline with description \"return book\" on 29 February 2024 15:00.","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"tohlh"},"content":"Expected outcome:","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"tohlh"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"tohlh"},"content":"Added this task","lastModifiedDate":"2024-02-22"},{"lineNumber":41,"author":{"gitId":"tohlh"},"content":"[D][] return book (by: Feb 29 2024 15:00)","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"tohlh"},"content":"Now you have 1 tasks in the list :(","lastModifiedDate":"2024-02-22"},{"lineNumber":43,"author":{"gitId":"tohlh"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":44,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":45,"author":{"gitId":"tohlh"},"content":"## Adding an Event Task: `event {description} /from {datetime} /to {datetime}`","lastModifiedDate":"2024-02-22"},{"lineNumber":46,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":47,"author":{"gitId":"tohlh"},"content":"You can add an `Event` task into the list.","lastModifiedDate":"2024-02-22"},{"lineNumber":48,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":49,"author":{"gitId":"tohlh"},"content":"Example: `event project meeting /from 29/2/2024 16:00 /to 29/2/2024 17:00`","lastModifiedDate":"2024-02-22"},{"lineNumber":50,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":51,"author":{"gitId":"tohlh"},"content":"- This adds an event with description \"project meeting\" from 29 February 2024 16:00 to 29 February 17:00.","lastModifiedDate":"2024-02-22"},{"lineNumber":52,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":53,"author":{"gitId":"tohlh"},"content":"Expected outcome:","lastModifiedDate":"2024-02-22"},{"lineNumber":54,"author":{"gitId":"tohlh"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":55,"author":{"gitId":"tohlh"},"content":"Added this task","lastModifiedDate":"2024-02-22"},{"lineNumber":56,"author":{"gitId":"tohlh"},"content":"[E][] project meeting (from: Feb 29 2024 16:00 /to Feb 29 2024 17:00)","lastModifiedDate":"2024-02-22"},{"lineNumber":57,"author":{"gitId":"tohlh"},"content":"Now you have 1 tasks in the list :(","lastModifiedDate":"2024-02-22"},{"lineNumber":58,"author":{"gitId":"tohlh"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":59,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":60,"author":{"gitId":"tohlh"},"content":"## Listing tasks: `list`","lastModifiedDate":"2024-02-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":62,"author":{"gitId":"tohlh"},"content":"You can list all the tasks that were added.","lastModifiedDate":"2024-02-22"},{"lineNumber":63,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":64,"author":{"gitId":"tohlh"},"content":"Example: `list`","lastModifiedDate":"2024-02-22"},{"lineNumber":65,"author":{"gitId":"tohlh"},"content":"- This will list all the tasks that are in the list.","lastModifiedDate":"2024-02-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":67,"author":{"gitId":"tohlh"},"content":"Expected outcome:","lastModifiedDate":"2024-02-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":69,"author":{"gitId":"tohlh"},"content":"Here is a list of tasks","lastModifiedDate":"2024-02-22"},{"lineNumber":70,"author":{"gitId":"tohlh"},"content":"1. [T][X] item1","lastModifiedDate":"2024-02-22"},{"lineNumber":71,"author":{"gitId":"tohlh"},"content":"2. [T][] item2","lastModifiedDate":"2024-02-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":74,"author":{"gitId":"tohlh"},"content":"## Marking a Task: `mark {index}`","lastModifiedDate":"2024-02-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":76,"author":{"gitId":"tohlh"},"content":"You can mark a task as done after completing it.","lastModifiedDate":"2024-02-22"},{"lineNumber":77,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":78,"author":{"gitId":"tohlh"},"content":"Example: `mark 1`","lastModifiedDate":"2024-02-22"},{"lineNumber":79,"author":{"gitId":"tohlh"},"content":"- This marks the task with index of 1 as done.","lastModifiedDate":"2024-02-22"},{"lineNumber":80,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":81,"author":{"gitId":"tohlh"},"content":"Expected outcome:","lastModifiedDate":"2024-02-22"},{"lineNumber":82,"author":{"gitId":"tohlh"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":83,"author":{"gitId":"tohlh"},"content":"This task has been marked as done. XD","lastModifiedDate":"2024-02-22"},{"lineNumber":84,"author":{"gitId":"tohlh"},"content":"[T][X] task","lastModifiedDate":"2024-02-22"},{"lineNumber":85,"author":{"gitId":"tohlh"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":87,"author":{"gitId":"tohlh"},"content":"## Unmarking a Task: `unmark {index}`","lastModifiedDate":"2024-02-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":89,"author":{"gitId":"tohlh"},"content":"You can mark a task as done after completing it.","lastModifiedDate":"2024-02-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":91,"author":{"gitId":"tohlh"},"content":"Example: unmark 1","lastModifiedDate":"2024-02-22"},{"lineNumber":92,"author":{"gitId":"tohlh"},"content":"- This marks the task with index of 1 as done.","lastModifiedDate":"2024-02-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07"},{"lineNumber":94,"author":{"gitId":"tohlh"},"content":"Expected outcome:","lastModifiedDate":"2024-02-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":96,"author":{"gitId":"tohlh"},"content":"This task has been marked as undone. :(","lastModifiedDate":"2024-02-22"},{"lineNumber":97,"author":{"gitId":"tohlh"},"content":"[T][] task","lastModifiedDate":"2024-02-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":100,"author":{"gitId":"tohlh"},"content":"## Deleting a Task: `delete {index}`","lastModifiedDate":"2024-02-22"},{"lineNumber":101,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":102,"author":{"gitId":"tohlh"},"content":"You can delete an existing task from the list.","lastModifiedDate":"2024-02-22"},{"lineNumber":103,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":104,"author":{"gitId":"tohlh"},"content":"Example: `delete 1`","lastModifiedDate":"2024-02-22"},{"lineNumber":105,"author":{"gitId":"tohlh"},"content":"- This deletes the task of index 1 from the list.","lastModifiedDate":"2024-02-22"},{"lineNumber":106,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":107,"author":{"gitId":"tohlh"},"content":"Expected outcome:","lastModifiedDate":"2024-02-22"},{"lineNumber":108,"author":{"gitId":"tohlh"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":109,"author":{"gitId":"tohlh"},"content":"This task is deleted :)","lastModifiedDate":"2024-02-22"},{"lineNumber":110,"author":{"gitId":"tohlh"},"content":"[T][] buy bread","lastModifiedDate":"2024-02-22"},{"lineNumber":111,"author":{"gitId":"tohlh"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":112,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":113,"author":{"gitId":"tohlh"},"content":"## Updating a Task: `update {index} /d {description} /by {datetime} /to {datetime} /from {datetime}`","lastModifiedDate":"2024-02-22"},{"lineNumber":114,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":115,"author":{"gitId":"tohlh"},"content":"You can update a task that is already added into the list. Other than the index, you can only specify the information that you want to change.","lastModifiedDate":"2024-02-22"},{"lineNumber":116,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":117,"author":{"gitId":"tohlh"},"content":"Example 1: `update 1 /d new description`","lastModifiedDate":"2024-02-23"},{"lineNumber":118,"author":{"gitId":"tohlh"},"content":"- This updates the description of task of index 1 into \"new description\" ","lastModifiedDate":"2024-02-22"},{"lineNumber":119,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":120,"author":{"gitId":"tohlh"},"content":"Expected outcome:","lastModifiedDate":"2024-02-22"},{"lineNumber":121,"author":{"gitId":"tohlh"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":122,"author":{"gitId":"tohlh"},"content":"Edited task: [T][] new description","lastModifiedDate":"2024-02-22"},{"lineNumber":123,"author":{"gitId":"tohlh"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":124,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":125,"author":{"gitId":"tohlh"},"content":"Example 2: `update 1 /by 08/02/2024 1400`","lastModifiedDate":"2024-02-23"},{"lineNumber":126,"author":{"gitId":"tohlh"},"content":"- This updates the deadline of task of index 1 into \"new description\"","lastModifiedDate":"2024-02-23"},{"lineNumber":127,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":128,"author":{"gitId":"tohlh"},"content":"Expected outcome:","lastModifiedDate":"2024-02-23"},{"lineNumber":129,"author":{"gitId":"tohlh"},"content":"```","lastModifiedDate":"2024-02-23"},{"lineNumber":130,"author":{"gitId":"tohlh"},"content":"Edited task: [D][] return book (by Feb 08 2024 14:00)","lastModifiedDate":"2024-02-23"},{"lineNumber":131,"author":{"gitId":"tohlh"},"content":"```","lastModifiedDate":"2024-02-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":133,"author":{"gitId":"tohlh"},"content":"## Exit Henry: `bye`","lastModifiedDate":"2024-02-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":135,"author":{"gitId":"tohlh"},"content":"You can exit Henry and your tasks will be saved automatically.","lastModifiedDate":"2024-02-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":137,"author":{"gitId":"tohlh"},"content":"Example: `bye`","lastModifiedDate":"2024-02-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":139,"author":{"gitId":"tohlh"},"content":"Expected outcome: the program exits.","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"-":25,"tohlh":114}},{"path":"src/main/java/henry/Henry.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohlh"},"content":"package henry;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"tohlh"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"tohlh"},"content":"import henry.command.Command;","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"tohlh"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"tohlh"},"content":" * Represents the Henry application.","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"tohlh"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"tohlh"},"content":"public class Henry {","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"tohlh"},"content":"    private Storage storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"tohlh"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"tohlh"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"tohlh"},"content":"     * Represents a Henry chatbot that stores and manages tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"tohlh"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"tohlh"},"content":"     * @param filePath The file path to store the tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"tohlh"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"tohlh"},"content":"    public Henry(String filePath) {","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"tohlh"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"tohlh"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"tohlh"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"tohlh"},"content":"        } catch (IOException | HenryException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"tohlh"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"tohlh"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"tohlh"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"tohlh"},"content":"        try {","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"tohlh"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"tohlh"},"content":"            if (c.isExit()) {","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"tohlh"},"content":"                System.exit(0);","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"tohlh"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"tohlh"},"content":"            return c.execute(tasks, storage);","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"tohlh"},"content":"        } catch (HenryException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"tohlh"},"content":"            return e.getMessage();","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"tohlh"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"tohlh"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"tohlh":39}},{"path":"src/main/java/henry/HenryException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohlh"},"content":"package henry;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"tohlh"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"tohlh"},"content":" * Represents an exception specific to the Henry application.","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"tohlh"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"tohlh"},"content":"public class HenryException extends Exception {","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"tohlh"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"tohlh"},"content":"     * Constructor for the HenryException class.","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"tohlh"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"tohlh"},"content":"     * @param message The error message.","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"tohlh"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"tohlh"},"content":"    public HenryException(String message) {","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"tohlh"},"content":"        super(message);","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"tohlh"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"tohlh"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"tohlh"},"content":"        return \"Whoops... \" + this.getMessage();","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"tohlh"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"tohlh":20}},{"path":"src/main/java/henry/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohlh"},"content":"package henry;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"tohlh"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"tohlh"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"tohlh"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"tohlh"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"tohlh"},"content":"public class Launcher {","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"tohlh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"tohlh"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"tohlh"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"tohlh":12}},{"path":"src/main/java/henry/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohlh"},"content":"package henry;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"tohlh"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"tohlh"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"tohlh"},"content":"import henry.ui.MainWindow;","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"tohlh"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"tohlh"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"tohlh"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"tohlh"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"tohlh"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"tohlh"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"tohlh"},"content":" * Represents the GUI for Henry using FXML.","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"tohlh"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"tohlh"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"tohlh"},"content":"    private final Henry henry \u003d new Henry(Paths.get(\"data\", \"tasks.txt\").toAbsolutePath().toString());","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"tohlh"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"tohlh"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"tohlh"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"tohlh"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"tohlh"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"tohlh"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"tohlh"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"tohlh"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setHenry(henry);","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"tohlh"},"content":"            stage.show();","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"tohlh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"tohlh"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"tohlh"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"tohlh"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"tohlh":32}},{"path":"src/main/java/henry/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohlh"},"content":"package henry;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"tohlh"},"content":"import henry.command.ByeCommand;","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"tohlh"},"content":"import henry.command.Command;","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"tohlh"},"content":"import henry.command.DeadlineCommand;","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"tohlh"},"content":"import henry.command.DeleteCommand;","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"tohlh"},"content":"import henry.command.EventCommand;","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"tohlh"},"content":"import henry.command.FindCommand;","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"tohlh"},"content":"import henry.command.ListCommand;","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"tohlh"},"content":"import henry.command.MarkCommand;","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"tohlh"},"content":"import henry.command.TodoCommand;","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"tohlh"},"content":"import henry.command.UnknownCommand;","lastModifiedDate":"2024-02-16"},{"lineNumber":13,"author":{"gitId":"tohlh"},"content":"import henry.command.UnmarkCommand;","lastModifiedDate":"2024-02-16"},{"lineNumber":14,"author":{"gitId":"tohlh"},"content":"import henry.command.UpdateCommand;","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"tohlh"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"tohlh"},"content":" * Represents a Parser object for processing commands.","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"tohlh"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"tohlh"},"content":"public class Parser {","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"tohlh"},"content":"    private enum CommandType {","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"tohlh"},"content":"        LIST, FIND, UNMARK, MARK, DELETE, TODO, DEADLINE, EVENT, UPDATE, BYE, UNKNOWN","lastModifiedDate":"2024-02-16"},{"lineNumber":22,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"tohlh"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"tohlh"},"content":"     * Handles the command and returns the corresponding Command object.","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"tohlh"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"tohlh"},"content":"     * @param commandType The type of command.","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"tohlh"},"content":"     * @param args The arguments for the command.","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"tohlh"},"content":"     * @return The corresponding Command object.","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"tohlh"},"content":"     * @throws HenryException If the command is invalid.","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"tohlh"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"tohlh"},"content":"    private static Command handleCommand(CommandType commandType, String args) throws HenryException {","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"tohlh"},"content":"        switch (commandType) {","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"tohlh"},"content":"        case LIST:","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"tohlh"},"content":"            assert args.isBlank() : \"Command does not accept arguments\";","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"tohlh"},"content":"            return new ListCommand();","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"tohlh"},"content":"        case FIND:","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"tohlh"},"content":"            assert !args.isBlank() : \"Command expects arguments\";","lastModifiedDate":"2024-02-15"},{"lineNumber":39,"author":{"gitId":"tohlh"},"content":"            return new FindCommand(args);","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"tohlh"},"content":"        case MARK:","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"tohlh"},"content":"            assert !args.isBlank() : \"Command expects arguments\";","lastModifiedDate":"2024-02-15"},{"lineNumber":42,"author":{"gitId":"tohlh"},"content":"            return new MarkCommand(args);","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"tohlh"},"content":"        case UNMARK:","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"tohlh"},"content":"            assert !args.isBlank() : \"Command expects arguments\";","lastModifiedDate":"2024-02-15"},{"lineNumber":45,"author":{"gitId":"tohlh"},"content":"            return new UnmarkCommand(args);","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"tohlh"},"content":"        case TODO:","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"tohlh"},"content":"            assert !args.isBlank() : \"Command expects arguments\";","lastModifiedDate":"2024-02-15"},{"lineNumber":48,"author":{"gitId":"tohlh"},"content":"            return new TodoCommand(args);","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"tohlh"},"content":"        case DEADLINE:","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"tohlh"},"content":"            assert !args.isBlank() : \"Command expects arguments\";","lastModifiedDate":"2024-02-15"},{"lineNumber":51,"author":{"gitId":"tohlh"},"content":"            return new DeadlineCommand(args);","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"tohlh"},"content":"        case UPDATE:","lastModifiedDate":"2024-02-16"},{"lineNumber":53,"author":{"gitId":"tohlh"},"content":"            assert !args.isBlank() : \"Command expects arguments\";","lastModifiedDate":"2024-02-16"},{"lineNumber":54,"author":{"gitId":"tohlh"},"content":"            return new UpdateCommand(args);","lastModifiedDate":"2024-02-16"},{"lineNumber":55,"author":{"gitId":"tohlh"},"content":"        case EVENT:","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"tohlh"},"content":"            assert !args.isBlank() : \"Command expects arguments\";","lastModifiedDate":"2024-02-15"},{"lineNumber":57,"author":{"gitId":"tohlh"},"content":"            return new EventCommand(args);","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"tohlh"},"content":"        case DELETE:","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"tohlh"},"content":"            assert !args.isBlank() : \"Command expects arguments\";","lastModifiedDate":"2024-02-15"},{"lineNumber":60,"author":{"gitId":"tohlh"},"content":"            return new DeleteCommand(args);","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"tohlh"},"content":"        case BYE:","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"tohlh"},"content":"            assert args.isBlank() : \"Command does not accept arguments\";","lastModifiedDate":"2024-02-15"},{"lineNumber":63,"author":{"gitId":"tohlh"},"content":"            return new ByeCommand();","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"tohlh"},"content":"        default:","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"tohlh"},"content":"            return new UnknownCommand();","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"tohlh"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"tohlh"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"tohlh"},"content":"     * Parses the full command and returns the corresponding Command object.","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"tohlh"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"tohlh"},"content":"     * @param fullCommand The full command string.","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"tohlh"},"content":"     * @return The corresponding Command object.","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"tohlh"},"content":"     * @throws HenryException If the command is invalid.","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"tohlh"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"tohlh"},"content":"    public static Command parse(String fullCommand) throws HenryException {","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"tohlh"},"content":"        String[] command \u003d fullCommand.split(\" \", 2);","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"tohlh"},"content":"        CommandType commandType;","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"tohlh"},"content":"        String params \u003d command.length \u003c 2 ? \"\" : command[1];","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"tohlh"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"tohlh"},"content":"            commandType \u003d CommandType.valueOf(command[0].toUpperCase());","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"tohlh"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"tohlh"},"content":"            commandType \u003d CommandType.UNKNOWN;","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"tohlh"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"tohlh"},"content":"        return handleCommand(commandType, params);","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"tohlh"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"tohlh":90}},{"path":"src/main/java/henry/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohlh"},"content":"package henry;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"tohlh"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"tohlh"},"content":"import java.io.File;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"tohlh"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"tohlh"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"tohlh"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"tohlh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"tohlh"},"content":"import henry.task.Deadline;","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"tohlh"},"content":"import henry.task.Event;","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"tohlh"},"content":"import henry.task.Task;","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"tohlh"},"content":"import henry.task.Todo;","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"tohlh"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"tohlh"},"content":" * Represents a Storage object for file IO.","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"tohlh"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"tohlh"},"content":"public class Storage {","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"tohlh"},"content":"    private final String filePath;","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"tohlh"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"tohlh"},"content":"     * Creates a Storage object.","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"tohlh"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"tohlh"},"content":"     * @param filePath The file path to store the tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"tohlh"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"tohlh"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"tohlh"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"tohlh"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"tohlh"},"content":"     * Loads the tasks from the file.","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"tohlh"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"tohlh"},"content":"     * @return The list of tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"tohlh"},"content":"     * @throws HenryException If the file cannot be read.","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"tohlh"},"content":"     * @throws IOException If the file cannot be read.","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"tohlh"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"tohlh"},"content":"    public ArrayList\u003cTask\u003e load() throws HenryException, IOException {","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"tohlh"},"content":"        ArrayList\u003cTask\u003e items \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"tohlh"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"tohlh"},"content":"        if (!file.exists()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"tohlh"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"tohlh"},"content":"            file.createNewFile();","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"tohlh"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"tohlh"},"content":"        BufferedReader br \u003d new BufferedReader(new FileReader(file));","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"tohlh"},"content":"        String line \u003d br.readLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"tohlh"},"content":"        while (line !\u003d null) {","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"tohlh"},"content":"            String[] currLine \u003d line.split(\" \\\\| \");","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"tohlh"},"content":"            switch (currLine[0]) {","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"tohlh"},"content":"            case \"T\":","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"tohlh"},"content":"                items.add(new Todo(currLine[2]));","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"tohlh"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"tohlh"},"content":"            case \"D\":","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"tohlh"},"content":"                items.add(new Deadline(currLine[2], currLine[3]));","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"tohlh"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"tohlh"},"content":"            case \"E\":","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"tohlh"},"content":"                items.add(new Event(currLine[2], currLine[3], currLine[4]));","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"tohlh"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"tohlh"},"content":"            default:","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"tohlh"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"tohlh"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"tohlh"},"content":"            if (currLine[1].equals(\"1\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"tohlh"},"content":"                items.get(items.size() - 1).markAsDone();","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"tohlh"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"tohlh"},"content":"            line \u003d br.readLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"tohlh"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"tohlh"},"content":"        return items;","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"tohlh"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"tohlh"},"content":"     * Saves the tasks to the file.","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"tohlh"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"tohlh"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"tohlh"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"tohlh"},"content":"    public void save(TaskList tasks) {","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"tohlh"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"tohlh"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"tohlh"},"content":"            FileWriter fw \u003d new FileWriter(file);","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"tohlh"},"content":"            for (String item : tasks.getFileStrings()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"tohlh"},"content":"                fw.write(item + \"\\n\");","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"tohlh"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"tohlh"},"content":"            fw.close();","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"tohlh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"tohlh"},"content":"            System.err.println(e);","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"tohlh"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"tohlh"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"tohlh":89}},{"path":"src/main/java/henry/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohlh"},"content":"package henry;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"tohlh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"tohlh"},"content":"import henry.task.Deadline;","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"tohlh"},"content":"import henry.task.Event;","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"tohlh"},"content":"import henry.task.Task;","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"tohlh"},"content":"import henry.task.Todo;","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"tohlh"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"tohlh"},"content":" * Represents a list of tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"tohlh"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"tohlh"},"content":"public class TaskList {","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"tohlh"},"content":"    private ArrayList\u003cTask\u003e items;","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"tohlh"},"content":"    public TaskList() {","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"tohlh"},"content":"        this.items \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"tohlh"},"content":"    public TaskList(ArrayList\u003cTask\u003e items) {","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"tohlh"},"content":"        this.items \u003d items;","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"tohlh"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"tohlh"},"content":"     * Adds a task to the list.","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"tohlh"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"tohlh"},"content":"     * @param task The task to be added.","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"tohlh"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"tohlh"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"tohlh"},"content":"        items.add(task);","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"tohlh"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":34,"author":{"gitId":"tohlh"},"content":"     * Updates a task in the list.","lastModifiedDate":"2024-02-16"},{"lineNumber":35,"author":{"gitId":"tohlh"},"content":"     * @param index The index of the task to be updated.","lastModifiedDate":"2024-02-16"},{"lineNumber":36,"author":{"gitId":"tohlh"},"content":"     * @param description The new description of the task.","lastModifiedDate":"2024-02-16"},{"lineNumber":37,"author":{"gitId":"tohlh"},"content":"     * @param to The new \u0027to\u0027 date of the task.","lastModifiedDate":"2024-02-16"},{"lineNumber":38,"author":{"gitId":"tohlh"},"content":"     * @param from The new \u0027from\u0027 date of the task.","lastModifiedDate":"2024-02-16"},{"lineNumber":39,"author":{"gitId":"tohlh"},"content":"     * @param by The new \u0027by\u0027 date of the task.","lastModifiedDate":"2024-02-16"},{"lineNumber":40,"author":{"gitId":"tohlh"},"content":"     * @return The updated task.","lastModifiedDate":"2024-02-16"},{"lineNumber":41,"author":{"gitId":"tohlh"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":42,"author":{"gitId":"tohlh"},"content":"    public Task updateTask(int index, String description, String to, String from, String by) throws HenryException {","lastModifiedDate":"2024-02-16"},{"lineNumber":43,"author":{"gitId":"tohlh"},"content":"        Task task \u003d this.items.get(index);","lastModifiedDate":"2024-02-16"},{"lineNumber":44,"author":{"gitId":"tohlh"},"content":"        if (description !\u003d null) {","lastModifiedDate":"2024-02-16"},{"lineNumber":45,"author":{"gitId":"tohlh"},"content":"            task.setDescription(description);","lastModifiedDate":"2024-02-16"},{"lineNumber":46,"author":{"gitId":"tohlh"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":47,"author":{"gitId":"tohlh"},"content":"        if (task instanceof Todo) {","lastModifiedDate":"2024-02-16"},{"lineNumber":48,"author":{"gitId":"tohlh"},"content":"            if (to !\u003d null || from !\u003d null || by !\u003d null) {","lastModifiedDate":"2024-02-16"},{"lineNumber":49,"author":{"gitId":"tohlh"},"content":"                throw new HenryException(\"Todo tasks do not have a date.\");","lastModifiedDate":"2024-02-16"},{"lineNumber":50,"author":{"gitId":"tohlh"},"content":"            }","lastModifiedDate":"2024-02-16"},{"lineNumber":51,"author":{"gitId":"tohlh"},"content":"        } else if (task instanceof Deadline) {","lastModifiedDate":"2024-02-16"},{"lineNumber":52,"author":{"gitId":"tohlh"},"content":"            if (to !\u003d null || from !\u003d null) {","lastModifiedDate":"2024-02-16"},{"lineNumber":53,"author":{"gitId":"tohlh"},"content":"                throw new HenryException(\"Deadline tasks only have a \u0027by\u0027 date.\");","lastModifiedDate":"2024-02-16"},{"lineNumber":54,"author":{"gitId":"tohlh"},"content":"            }","lastModifiedDate":"2024-02-16"},{"lineNumber":55,"author":{"gitId":"tohlh"},"content":"            if (by !\u003d null) {","lastModifiedDate":"2024-02-16"},{"lineNumber":56,"author":{"gitId":"tohlh"},"content":"                Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2024-02-16"},{"lineNumber":57,"author":{"gitId":"tohlh"},"content":"                deadline.setBy(by);","lastModifiedDate":"2024-02-16"},{"lineNumber":58,"author":{"gitId":"tohlh"},"content":"            }","lastModifiedDate":"2024-02-16"},{"lineNumber":59,"author":{"gitId":"tohlh"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2024-02-16"},{"lineNumber":60,"author":{"gitId":"tohlh"},"content":"            if (by !\u003d null) {","lastModifiedDate":"2024-02-16"},{"lineNumber":61,"author":{"gitId":"tohlh"},"content":"                throw new HenryException(\"Event tasks do not have a \u0027by\u0027 date.\");","lastModifiedDate":"2024-02-16"},{"lineNumber":62,"author":{"gitId":"tohlh"},"content":"            }","lastModifiedDate":"2024-02-16"},{"lineNumber":63,"author":{"gitId":"tohlh"},"content":"            Event event \u003d (Event) task;","lastModifiedDate":"2024-02-16"},{"lineNumber":64,"author":{"gitId":"tohlh"},"content":"            if (to !\u003d null) {","lastModifiedDate":"2024-02-16"},{"lineNumber":65,"author":{"gitId":"tohlh"},"content":"                event.setTo(to);","lastModifiedDate":"2024-02-16"},{"lineNumber":66,"author":{"gitId":"tohlh"},"content":"            }","lastModifiedDate":"2024-02-16"},{"lineNumber":67,"author":{"gitId":"tohlh"},"content":"            if (from !\u003d null) {","lastModifiedDate":"2024-02-16"},{"lineNumber":68,"author":{"gitId":"tohlh"},"content":"                event.setFrom(from);","lastModifiedDate":"2024-02-16"},{"lineNumber":69,"author":{"gitId":"tohlh"},"content":"            }","lastModifiedDate":"2024-02-16"},{"lineNumber":70,"author":{"gitId":"tohlh"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":71,"author":{"gitId":"tohlh"},"content":"        return task;","lastModifiedDate":"2024-02-16"},{"lineNumber":72,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":73,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":74,"author":{"gitId":"tohlh"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"tohlh"},"content":"     * Marks a task as done.","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"tohlh"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"tohlh"},"content":"     * @param index The index of the task to be marked as done.","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"tohlh"},"content":"     * @throws HenryException If the index is out of bounds.","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"tohlh"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"tohlh"},"content":"    public Task markTask(int index) throws HenryException {","lastModifiedDate":"2024-02-05"},{"lineNumber":81,"author":{"gitId":"tohlh"},"content":"        if (index \u003c 0 || index \u003e\u003d items.size()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"tohlh"},"content":"            throw new HenryException(\"The index is out of bounds!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"tohlh"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"tohlh"},"content":"        items.get(index).markAsDone();","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"tohlh"},"content":"        return items.get(index);","lastModifiedDate":"2024-02-05"},{"lineNumber":86,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"tohlh"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"tohlh"},"content":"     * Marks a task as undone.","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"tohlh"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"tohlh"},"content":"     * @param index The index of the task to be marked as undone.","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"tohlh"},"content":"     * @throws HenryException If the index is out of bounds.","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"tohlh"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"tohlh"},"content":"    public Task unmarkTask(int index) throws HenryException {","lastModifiedDate":"2024-02-05"},{"lineNumber":95,"author":{"gitId":"tohlh"},"content":"        if (index \u003c 0 || index \u003e\u003d items.size()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"tohlh"},"content":"            throw new HenryException(\"The index is out of bounds!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"tohlh"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":98,"author":{"gitId":"tohlh"},"content":"        items.get(index).unmarkAsDone();","lastModifiedDate":"2024-01-31"},{"lineNumber":99,"author":{"gitId":"tohlh"},"content":"        return items.get(index);","lastModifiedDate":"2024-02-05"},{"lineNumber":100,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":101,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":102,"author":{"gitId":"tohlh"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":103,"author":{"gitId":"tohlh"},"content":"     * Deletes a task from the list.","lastModifiedDate":"2024-02-01"},{"lineNumber":104,"author":{"gitId":"tohlh"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":105,"author":{"gitId":"tohlh"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2024-02-01"},{"lineNumber":106,"author":{"gitId":"tohlh"},"content":"     * @throws HenryException If the index is out of bounds.","lastModifiedDate":"2024-02-01"},{"lineNumber":107,"author":{"gitId":"tohlh"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":108,"author":{"gitId":"tohlh"},"content":"    public String deleteTask(int index) throws HenryException {","lastModifiedDate":"2024-02-05"},{"lineNumber":109,"author":{"gitId":"tohlh"},"content":"        if (index \u003c 0 || index \u003e\u003d items.size()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":110,"author":{"gitId":"tohlh"},"content":"            throw new HenryException(\"The index is out of bounds!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":111,"author":{"gitId":"tohlh"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":112,"author":{"gitId":"tohlh"},"content":"        String ret \u003d String.format(\"This task is deleted :)\\n%s\\n\", items.get(index));","lastModifiedDate":"2024-02-05"},{"lineNumber":113,"author":{"gitId":"tohlh"},"content":"        items.remove(index);","lastModifiedDate":"2024-01-31"},{"lineNumber":114,"author":{"gitId":"tohlh"},"content":"        return ret;","lastModifiedDate":"2024-02-05"},{"lineNumber":115,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":116,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":117,"author":{"gitId":"tohlh"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":118,"author":{"gitId":"tohlh"},"content":"     * Finds tasks by keyword.","lastModifiedDate":"2024-02-01"},{"lineNumber":119,"author":{"gitId":"tohlh"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":120,"author":{"gitId":"tohlh"},"content":"     * @param keyword The keyword to be searched for.","lastModifiedDate":"2024-02-01"},{"lineNumber":121,"author":{"gitId":"tohlh"},"content":"     * @return The list of tasks that contain the keyword.","lastModifiedDate":"2024-02-01"},{"lineNumber":122,"author":{"gitId":"tohlh"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":123,"author":{"gitId":"tohlh"},"content":"    public ArrayList\u003cTask\u003e findTasksByKeyword(String keyword) {","lastModifiedDate":"2024-02-01"},{"lineNumber":124,"author":{"gitId":"tohlh"},"content":"        ArrayList\u003cTask\u003e ret \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":125,"author":{"gitId":"tohlh"},"content":"        for (Task task : items) {","lastModifiedDate":"2024-02-01"},{"lineNumber":126,"author":{"gitId":"tohlh"},"content":"            if (task.containsKeyword(keyword)) {","lastModifiedDate":"2024-02-01"},{"lineNumber":127,"author":{"gitId":"tohlh"},"content":"                ret.add(task);","lastModifiedDate":"2024-02-01"},{"lineNumber":128,"author":{"gitId":"tohlh"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":129,"author":{"gitId":"tohlh"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":130,"author":{"gitId":"tohlh"},"content":"        return ret;","lastModifiedDate":"2024-02-01"},{"lineNumber":131,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":132,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":133,"author":{"gitId":"tohlh"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":134,"author":{"gitId":"tohlh"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2024-02-05"},{"lineNumber":135,"author":{"gitId":"tohlh"},"content":"     * @return Number of tasks in the list.","lastModifiedDate":"2024-02-05"},{"lineNumber":136,"author":{"gitId":"tohlh"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":137,"author":{"gitId":"tohlh"},"content":"    public int getNumOfTasks() {","lastModifiedDate":"2024-02-05"},{"lineNumber":138,"author":{"gitId":"tohlh"},"content":"        return items.size();","lastModifiedDate":"2024-02-05"},{"lineNumber":139,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":140,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":141,"author":{"gitId":"tohlh"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":142,"author":{"gitId":"tohlh"},"content":"     * Gets the list of tasks.","lastModifiedDate":"2024-02-05"},{"lineNumber":143,"author":{"gitId":"tohlh"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":144,"author":{"gitId":"tohlh"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-02-05"},{"lineNumber":145,"author":{"gitId":"tohlh"},"content":"        return new ArrayList\u003c\u003e(items);","lastModifiedDate":"2024-02-05"},{"lineNumber":146,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":147,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":148,"author":{"gitId":"tohlh"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":149,"author":{"gitId":"tohlh"},"content":"     * Returns the list of tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":150,"author":{"gitId":"tohlh"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":151,"author":{"gitId":"tohlh"},"content":"     * @return The list of tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":152,"author":{"gitId":"tohlh"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":153,"author":{"gitId":"tohlh"},"content":"    public ArrayList\u003cString\u003e getFileStrings() {","lastModifiedDate":"2024-01-31"},{"lineNumber":154,"author":{"gitId":"tohlh"},"content":"        ArrayList\u003cString\u003e ret \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":155,"author":{"gitId":"tohlh"},"content":"        for (Task item : items) {","lastModifiedDate":"2024-01-31"},{"lineNumber":156,"author":{"gitId":"tohlh"},"content":"            ret.add(item.toFileString());","lastModifiedDate":"2024-01-31"},{"lineNumber":157,"author":{"gitId":"tohlh"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":158,"author":{"gitId":"tohlh"},"content":"        return ret;","lastModifiedDate":"2024-01-31"},{"lineNumber":159,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":160,"author":{"gitId":"tohlh"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"tohlh":160}},{"path":"src/main/java/henry/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohlh"},"content":"package henry.command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"tohlh"},"content":"import henry.HenryException;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"tohlh"},"content":"import henry.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"tohlh"},"content":"import henry.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"tohlh"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"tohlh"},"content":" * Represents a command to exit the program.","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"tohlh"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"tohlh"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"tohlh"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"tohlh"},"content":"    public String execute(TaskList tasks, Storage storage) throws HenryException {","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"tohlh"},"content":"        return \"See you again bro!\";","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"tohlh"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"tohlh"},"content":"        return true;","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"tohlh"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"tohlh":19}},{"path":"src/main/java/henry/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohlh"},"content":"package henry.command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"tohlh"},"content":"import henry.HenryException;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"tohlh"},"content":"import henry.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"tohlh"},"content":"import henry.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"tohlh"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"tohlh"},"content":" * Represents a command object that can be executed","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"tohlh"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"tohlh"},"content":"public abstract class Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"tohlh"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"tohlh"},"content":"     * Executes the command.","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"tohlh"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"tohlh"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"tohlh"},"content":"     * @param storage The storage object.","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"tohlh"},"content":"     * @throws HenryException If an error occurs during execution.","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"tohlh"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"tohlh"},"content":"    public abstract String execute(TaskList tasks, Storage storage) throws HenryException;","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"tohlh"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"tohlh"},"content":"     * Checks if the command is an exit command.","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"tohlh"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"tohlh"},"content":"     * @return True if the command is an exit command, false otherwise.","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"tohlh"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"tohlh"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"tohlh"},"content":"        return false;","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"tohlh"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"tohlh":28}},{"path":"src/main/java/henry/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohlh"},"content":"package henry.command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"tohlh"},"content":"import henry.HenryException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"tohlh"},"content":"import henry.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"tohlh"},"content":"import henry.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"tohlh"},"content":"import henry.task.Deadline;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"tohlh"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"tohlh"},"content":" * Represents a command to add a deadline task.","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"tohlh"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"tohlh"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"tohlh"},"content":"    private String description;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"tohlh"},"content":"    private String by;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"tohlh"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"tohlh"},"content":"     * Creates a DeadlineCommand object.","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"tohlh"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"tohlh"},"content":"     * @param args The arguments of the command.","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"tohlh"},"content":"     * @throws HenryException If the command is invalid.","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"tohlh"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"tohlh"},"content":"    public DeadlineCommand(String args) throws HenryException {","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"tohlh"},"content":"        if (!args.contains(\"/by\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"tohlh"},"content":"            throw new HenryException(\"Missing /by\");","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"tohlh"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"tohlh"},"content":"        String[] deadlineParams \u003d args.split(\" /by \");","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"tohlh"},"content":"        if (deadlineParams[0].isBlank()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"tohlh"},"content":"            throw new HenryException(\"No description provided\");","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"tohlh"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"tohlh"},"content":"        if (deadlineParams[1].isBlank()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"tohlh"},"content":"            throw new HenryException(\"When this has to be done by?\");","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"tohlh"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"tohlh"},"content":"        this.description \u003d deadlineParams[0];","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"tohlh"},"content":"        this.by \u003d deadlineParams[1];","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"tohlh"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"tohlh"},"content":"    public String execute(TaskList tasks, Storage storage) throws HenryException {","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"tohlh"},"content":"        Deadline newDeadline \u003d new Deadline(description, by);","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"tohlh"},"content":"        tasks.addTask(newDeadline);","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"tohlh"},"content":"        storage.save(tasks);","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"tohlh"},"content":"        return String.format(\"Added this task\\n%s\\nNow you have %d tasks in the list :(\\n\",","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"tohlh"},"content":"                newDeadline,","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"tohlh"},"content":"                tasks.getNumOfTasks());","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"tohlh"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"tohlh":45}},{"path":"src/main/java/henry/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohlh"},"content":"package henry.command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"tohlh"},"content":"import henry.HenryException;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"tohlh"},"content":"import henry.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"tohlh"},"content":"import henry.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"tohlh"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"tohlh"},"content":" * Represents a command to delete a task.","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"tohlh"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"tohlh"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"tohlh"},"content":"    private int index;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"tohlh"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"tohlh"},"content":"     * Creates a DeleteCommand object.","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"tohlh"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"tohlh"},"content":"     * @param args The arguments of the command.","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"tohlh"},"content":"     * @throws HenryException If the command is invalid.","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"tohlh"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"tohlh"},"content":"    public DeleteCommand(String args) throws HenryException {","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"tohlh"},"content":"        if (args.isBlank()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"tohlh"},"content":"            throw new HenryException(\"No index provided\");","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"tohlh"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"tohlh"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"tohlh"},"content":"            this.index \u003d Integer.parseInt(args) - 1;","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"tohlh"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"tohlh"},"content":"            throw new HenryException(\"Index provided is not a number\");","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"tohlh"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"tohlh"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"tohlh"},"content":"    public String execute(TaskList tasks, Storage storage) throws HenryException {","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"tohlh"},"content":"        String deletedTask \u003d tasks.deleteTask(index);","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"tohlh"},"content":"        storage.save(tasks);","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"tohlh"},"content":"        return deletedTask;","lastModifiedDate":"2024-02-15"},{"lineNumber":35,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"tohlh"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"tohlh":36}},{"path":"src/main/java/henry/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohlh"},"content":"package henry.command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"tohlh"},"content":"import henry.HenryException;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"tohlh"},"content":"import henry.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"tohlh"},"content":"import henry.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"tohlh"},"content":"import henry.task.Event;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"tohlh"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"tohlh"},"content":" * Represents a command to add an event task.","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"tohlh"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"tohlh"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"tohlh"},"content":"    private final String description;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"tohlh"},"content":"    private final String from;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"tohlh"},"content":"    private final String to;","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"tohlh"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"tohlh"},"content":"     * Creates a EventCommand object.","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"tohlh"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"tohlh"},"content":"     * @param args The arguments of the command.","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"tohlh"},"content":"     * @throws HenryException If the command is invalid.","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"tohlh"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"tohlh"},"content":"    public EventCommand(String args) throws HenryException {","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"tohlh"},"content":"        if (!args.contains(\"/from\") || !args.contains(\"/to\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"tohlh"},"content":"            throw new HenryException(\"Missing /from or /to\");","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"tohlh"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"tohlh"},"content":"        String[] parts \u003d args.split(\" /from | /to \");","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"tohlh"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"tohlh"},"content":"            throw new HenryException(\"Incorrect command format\");","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"tohlh"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"tohlh"},"content":"        String description \u003d parts[0];","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"tohlh"},"content":"        String from \u003d args.indexOf(\"/from\") \u003c args.indexOf(\"/to\") ? parts[1] : parts[2];","lastModifiedDate":"2024-02-15"},{"lineNumber":35,"author":{"gitId":"tohlh"},"content":"        String to \u003d args.indexOf(\"/from\") \u003c args.indexOf(\"/to\") ? parts[2] : parts[1];","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"tohlh"},"content":"        if (description.isBlank() || from.isBlank() || to.isBlank()) {","lastModifiedDate":"2024-02-15"},{"lineNumber":38,"author":{"gitId":"tohlh"},"content":"            throw new HenryException(\"Please provide description, from and to\");","lastModifiedDate":"2024-02-15"},{"lineNumber":39,"author":{"gitId":"tohlh"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"tohlh"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"tohlh"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"tohlh"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"tohlh"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"tohlh"},"content":"    public String execute(TaskList tasks, Storage storage) throws HenryException {","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"tohlh"},"content":"        Event newEvent \u003d new Event(this.description, this.from, this.to);","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"tohlh"},"content":"        tasks.addTask(newEvent);","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"tohlh"},"content":"        storage.save(tasks);","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"tohlh"},"content":"        return String.format(\"Added this task\\n%s\\nNow you have %d tasks in the list :(\\n\",","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"tohlh"},"content":"                newEvent,","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"tohlh"},"content":"                tasks.getNumOfTasks());","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"tohlh"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"tohlh":55}},{"path":"src/main/java/henry/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohlh"},"content":"package henry.command;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"tohlh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"tohlh"},"content":"import henry.HenryException;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"tohlh"},"content":"import henry.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"tohlh"},"content":"import henry.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"tohlh"},"content":"import henry.task.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"tohlh"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"tohlh"},"content":" * Represents a command to find contacts.","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"tohlh"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"tohlh"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"tohlh"},"content":"    private String keyword;","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"tohlh"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"tohlh"},"content":"     * Creates a FindCommand object.","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"tohlh"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"tohlh"},"content":"     * @param args The arguments of the command.","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"tohlh"},"content":"     * @throws HenryException If the command is invalid.","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"tohlh"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"tohlh"},"content":"    public FindCommand(String args) throws HenryException {","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"tohlh"},"content":"        if (args.isBlank()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"tohlh"},"content":"            throw new HenryException(\"No keyword provided\");","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"tohlh"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"tohlh"},"content":"        this.keyword \u003d args;","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"tohlh"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"tohlh"},"content":"    public String execute(TaskList tasks, Storage storage) throws HenryException {","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"tohlh"},"content":"        ArrayList\u003cTask\u003e list \u003d tasks.findTasksByKeyword(this.keyword);","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"tohlh"},"content":"        StringBuilder ret \u003d new StringBuilder(\"Here is a list of tasks:\\n\");","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"tohlh"},"content":"        for (int i \u003d 0; i \u003c list.size(); i \u003d i + 1) {","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"tohlh"},"content":"            ret.append(String.format(\"%d. %s\\n\", i + 1, list.get(i)));","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"tohlh"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"tohlh"},"content":"        return ret + \"\\n\";","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"tohlh"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"tohlh":39}},{"path":"src/main/java/henry/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohlh"},"content":"package henry.command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"tohlh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"tohlh"},"content":"import henry.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"tohlh"},"content":"import henry.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"tohlh"},"content":"import henry.task.Task;","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"tohlh"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"tohlh"},"content":" * Represents a command to list all tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"tohlh"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"tohlh"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"tohlh"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"tohlh"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"tohlh"},"content":"        ArrayList\u003cTask\u003e list \u003d tasks.getTasks();","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"tohlh"},"content":"        StringBuilder ret \u003d new StringBuilder(\"Here is a list of tasks:\\n\");","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"tohlh"},"content":"        for (int i \u003d 0; i \u003c list.size(); i \u003d i + 1) {","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"tohlh"},"content":"            ret.append(String.format(\"%d. %s\\n\", i + 1, list.get(i)));","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"tohlh"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"tohlh"},"content":"        return ret + \"\\n\";","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"tohlh"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"tohlh":22}},{"path":"src/main/java/henry/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohlh"},"content":"package henry.command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"tohlh"},"content":"import henry.HenryException;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"tohlh"},"content":"import henry.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"tohlh"},"content":"import henry.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"tohlh"},"content":"import henry.task.Task;","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"tohlh"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"tohlh"},"content":" * Represents a command to mark a task as done.","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"tohlh"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"tohlh"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"tohlh"},"content":"    private final int index;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"tohlh"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"tohlh"},"content":"     * Creates a MarkCommand object.","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"tohlh"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"tohlh"},"content":"     * @param args The arguments of the command.","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"tohlh"},"content":"     * @throws HenryException If the command is invalid.","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"tohlh"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"tohlh"},"content":"    public MarkCommand(String args) throws HenryException {","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"tohlh"},"content":"        if (args.isBlank()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"tohlh"},"content":"            throw new HenryException(\"No index provided\");","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"tohlh"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"tohlh"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"tohlh"},"content":"            this.index \u003d Integer.parseInt(args) - 1;","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"tohlh"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"tohlh"},"content":"            throw new HenryException(\"Index provided is not a number\");","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"tohlh"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"tohlh"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"tohlh"},"content":"    public String execute(TaskList tasks, Storage storage) throws HenryException {","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"tohlh"},"content":"        Task task \u003d tasks.markTask(index);","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"tohlh"},"content":"        storage.save(tasks);","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"tohlh"},"content":"        return String.format(\"This task has been marked as done. XD\\n%s\\n\", task);","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"tohlh"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"tohlh":37}},{"path":"src/main/java/henry/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohlh"},"content":"package henry.command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"tohlh"},"content":"import henry.HenryException;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"tohlh"},"content":"import henry.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"tohlh"},"content":"import henry.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"tohlh"},"content":"import henry.task.Todo;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"tohlh"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"tohlh"},"content":" * Represents a command to add a todo task.","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"tohlh"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"tohlh"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"tohlh"},"content":"    private final String description;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"tohlh"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"tohlh"},"content":"     * Creates a TodoCommand object.","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"tohlh"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"tohlh"},"content":"     * @param args The arguments of the command.","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"tohlh"},"content":"     * @throws HenryException If the command is invalid.","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"tohlh"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"tohlh"},"content":"    public TodoCommand(String args) throws HenryException {","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"tohlh"},"content":"        if (args.isBlank()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"tohlh"},"content":"            throw new HenryException(\"No description provided\");","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"tohlh"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"tohlh"},"content":"        this.description \u003d args;","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"tohlh"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"tohlh"},"content":"    public String execute(TaskList tasks, Storage storage) throws HenryException {","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"tohlh"},"content":"        Todo newTodo \u003d new Todo(description);","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"tohlh"},"content":"        tasks.addTask(newTodo);","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"tohlh"},"content":"        storage.save(tasks);","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"tohlh"},"content":"        return String.format(\"Added this task\\n%s\\nNow you have %d tasks in the list :(\\n\",","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"tohlh"},"content":"                newTodo,","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"tohlh"},"content":"                tasks.getNumOfTasks());","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"tohlh"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"tohlh":36}},{"path":"src/main/java/henry/command/UnknownCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohlh"},"content":"package henry.command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"tohlh"},"content":"import henry.HenryException;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"tohlh"},"content":"import henry.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"tohlh"},"content":"import henry.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"tohlh"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"tohlh"},"content":" * Represents a command that is not recognised.","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"tohlh"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"tohlh"},"content":"public class UnknownCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"tohlh"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"tohlh"},"content":"    public String execute(TaskList tasks, Storage storage) throws HenryException {","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"tohlh"},"content":"        throw new HenryException(\"I don\u0027t understand this command...\");","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"tohlh"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"tohlh":15}},{"path":"src/main/java/henry/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohlh"},"content":"package henry.command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"tohlh"},"content":"import henry.HenryException;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"tohlh"},"content":"import henry.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"tohlh"},"content":"import henry.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"tohlh"},"content":"import henry.task.Task;","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"tohlh"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"tohlh"},"content":" * Represents a command to unmark a task as done.","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"tohlh"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"tohlh"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"tohlh"},"content":"    private final int index;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"tohlh"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"tohlh"},"content":"     * Creates a UnmarkCommand object.","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"tohlh"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"tohlh"},"content":"     * @param args The arguments of the command.","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"tohlh"},"content":"     * @throws HenryException If the command is invalid.","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"tohlh"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"tohlh"},"content":"    public UnmarkCommand(String args) throws HenryException {","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"tohlh"},"content":"        if (args.isBlank()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"tohlh"},"content":"            throw new HenryException(\"No index provided\");","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"tohlh"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"tohlh"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"tohlh"},"content":"            this.index \u003d Integer.parseInt(args) - 1;","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"tohlh"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"tohlh"},"content":"            throw new HenryException(\"Index provided is not a number\");","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"tohlh"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"tohlh"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"tohlh"},"content":"    public String execute(TaskList tasks, Storage storage) throws HenryException {","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"tohlh"},"content":"        Task task \u003d tasks.unmarkTask(index);","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"tohlh"},"content":"        storage.save(tasks);","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"tohlh"},"content":"        return String.format(\"This task has been marked as undone. :(\\n%s\\n\", task);","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"tohlh"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"tohlh":37}},{"path":"src/main/java/henry/command/UpdateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohlh"},"content":"package henry.command;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"tohlh"},"content":"import henry.HenryException;","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"tohlh"},"content":"import henry.Storage;","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"tohlh"},"content":"import henry.TaskList;","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"tohlh"},"content":"import henry.task.Task;","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"tohlh"},"content":"/**","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"tohlh"},"content":" * Represents a command to update a task.","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"tohlh"},"content":" */","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"tohlh"},"content":"public class UpdateCommand extends Command {","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"tohlh"},"content":"    private final int index;","lastModifiedDate":"2024-02-16"},{"lineNumber":13,"author":{"gitId":"tohlh"},"content":"    private final String description;","lastModifiedDate":"2024-02-16"},{"lineNumber":14,"author":{"gitId":"tohlh"},"content":"    private final String to;","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"tohlh"},"content":"    private final String from;","lastModifiedDate":"2024-02-16"},{"lineNumber":16,"author":{"gitId":"tohlh"},"content":"    private final String by;","lastModifiedDate":"2024-02-16"},{"lineNumber":17,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"tohlh"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":19,"author":{"gitId":"tohlh"},"content":"     * Creates an UpdateCommand object.","lastModifiedDate":"2024-02-16"},{"lineNumber":20,"author":{"gitId":"tohlh"},"content":"     * @param params The parameters of the command.","lastModifiedDate":"2024-02-16"},{"lineNumber":21,"author":{"gitId":"tohlh"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":22,"author":{"gitId":"tohlh"},"content":"    public UpdateCommand(String params) throws HenryException {","lastModifiedDate":"2024-02-16"},{"lineNumber":23,"author":{"gitId":"tohlh"},"content":"        String[] parts \u003d params.split(\" \", 2);","lastModifiedDate":"2024-02-16"},{"lineNumber":24,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":25,"author":{"gitId":"tohlh"},"content":"        try {","lastModifiedDate":"2024-02-16"},{"lineNumber":26,"author":{"gitId":"tohlh"},"content":"            this.index \u003d Integer.parseInt(parts[0]) - 1;","lastModifiedDate":"2024-02-16"},{"lineNumber":27,"author":{"gitId":"tohlh"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-16"},{"lineNumber":28,"author":{"gitId":"tohlh"},"content":"            throw new HenryException(\"Index provided is not a number\");","lastModifiedDate":"2024-02-16"},{"lineNumber":29,"author":{"gitId":"tohlh"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":30,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":31,"author":{"gitId":"tohlh"},"content":"        int descriptionIndex \u003d parts[1].indexOf(\"/d\");","lastModifiedDate":"2024-02-16"},{"lineNumber":32,"author":{"gitId":"tohlh"},"content":"        int toIndex \u003d parts[1].indexOf(\"/to\");","lastModifiedDate":"2024-02-16"},{"lineNumber":33,"author":{"gitId":"tohlh"},"content":"        int fromIndex \u003d parts[1].indexOf(\"/from\");","lastModifiedDate":"2024-02-16"},{"lineNumber":34,"author":{"gitId":"tohlh"},"content":"        int byIndex \u003d parts[1].indexOf(\"/by\");","lastModifiedDate":"2024-02-16"},{"lineNumber":35,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":36,"author":{"gitId":"tohlh"},"content":"        description \u003d descriptionIndex !\u003d -1 ? parts[1].substring(descriptionIndex + 3) : null;","lastModifiedDate":"2024-02-16"},{"lineNumber":37,"author":{"gitId":"tohlh"},"content":"        to \u003d toIndex !\u003d -1 ? parts[1].substring(toIndex + 4) : null;","lastModifiedDate":"2024-02-16"},{"lineNumber":38,"author":{"gitId":"tohlh"},"content":"        from \u003d fromIndex !\u003d -1 ? parts[1].substring(fromIndex + 6) : null;","lastModifiedDate":"2024-02-16"},{"lineNumber":39,"author":{"gitId":"tohlh"},"content":"        by \u003d byIndex !\u003d -1 ? parts[1].substring(byIndex + 4) : null;","lastModifiedDate":"2024-02-16"},{"lineNumber":40,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":41,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":42,"author":{"gitId":"tohlh"},"content":"    @Override","lastModifiedDate":"2024-02-16"},{"lineNumber":43,"author":{"gitId":"tohlh"},"content":"    public String execute(TaskList tasks, Storage storage) throws HenryException {","lastModifiedDate":"2024-02-16"},{"lineNumber":44,"author":{"gitId":"tohlh"},"content":"        Task updatedTask \u003d tasks.updateTask(index, description, to, from, by);","lastModifiedDate":"2024-02-16"},{"lineNumber":45,"author":{"gitId":"tohlh"},"content":"        storage.save(tasks);","lastModifiedDate":"2024-02-16"},{"lineNumber":46,"author":{"gitId":"tohlh"},"content":"        return String.format(\"Edited task: %s\\n\", updatedTask);","lastModifiedDate":"2024-02-16"},{"lineNumber":47,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":48,"author":{"gitId":"tohlh"},"content":"}","lastModifiedDate":"2024-02-16"}],"authorContributionMap":{"tohlh":48}},{"path":"src/main/java/henry/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohlh"},"content":"package henry.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"tohlh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"tohlh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"tohlh"},"content":"import henry.HenryException;","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"tohlh"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"tohlh"},"content":" * Represents a Deadline Task.","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"tohlh"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"tohlh"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"tohlh"},"content":"    private static final DateTimeFormatter INPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"tohlh"},"content":"    private static final DateTimeFormatter OUTPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"tohlh"},"content":"    private LocalDateTime date;","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"tohlh"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"tohlh"},"content":"     * Creates a Deadline object.","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"tohlh"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"tohlh"},"content":"     * @param description The description of the deadline.","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"tohlh"},"content":"     * @param date The due date of the deadline.","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"tohlh"},"content":"     * @throws HenryException If the description or due date is not specified.","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"tohlh"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"tohlh"},"content":"    public Deadline(String description, String date) throws HenryException {","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"tohlh"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"tohlh"},"content":"        if (date.isBlank()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"tohlh"},"content":"            throw new HenryException(\"No due date specified!\");","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"tohlh"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"tohlh"},"content":"        this.date \u003d LocalDateTime.parse(date, INPUT_FORMATTER);","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"tohlh"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":33,"author":{"gitId":"tohlh"},"content":"     * Sets the due datetime of the deadline.","lastModifiedDate":"2024-02-16"},{"lineNumber":34,"author":{"gitId":"tohlh"},"content":"     * @param date The due date of the deadline.","lastModifiedDate":"2024-02-16"},{"lineNumber":35,"author":{"gitId":"tohlh"},"content":"     * @throws HenryException If the due date is not specified.","lastModifiedDate":"2024-02-16"},{"lineNumber":36,"author":{"gitId":"tohlh"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":37,"author":{"gitId":"tohlh"},"content":"    public void setBy(String date) throws HenryException {","lastModifiedDate":"2024-02-16"},{"lineNumber":38,"author":{"gitId":"tohlh"},"content":"        if (date.isBlank()) {","lastModifiedDate":"2024-02-16"},{"lineNumber":39,"author":{"gitId":"tohlh"},"content":"            throw new HenryException(\"No due date specified!\");","lastModifiedDate":"2024-02-16"},{"lineNumber":40,"author":{"gitId":"tohlh"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":41,"author":{"gitId":"tohlh"},"content":"        this.date \u003d LocalDateTime.parse(date, INPUT_FORMATTER);","lastModifiedDate":"2024-02-16"},{"lineNumber":42,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":43,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":44,"author":{"gitId":"tohlh"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"tohlh"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"tohlh"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), date.format(OUTPUT_FORMATTER));","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"tohlh"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"tohlh"},"content":"    public String toFileString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"tohlh"},"content":"        return String.format(\"D | %s | %s\", super.toFileString(), date.format(INPUT_FORMATTER));","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"tohlh"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"tohlh":53}},{"path":"src/main/java/henry/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohlh"},"content":"package henry.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"tohlh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"tohlh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"tohlh"},"content":"import henry.HenryException;","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"tohlh"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"tohlh"},"content":" * Represents an Event Task.","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"tohlh"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"tohlh"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"tohlh"},"content":"    private static final DateTimeFormatter INPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"tohlh"},"content":"    private static final DateTimeFormatter OUTPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"tohlh"},"content":"    private LocalDateTime from;","lastModifiedDate":"2024-02-16"},{"lineNumber":16,"author":{"gitId":"tohlh"},"content":"    private LocalDateTime to;","lastModifiedDate":"2024-02-16"},{"lineNumber":17,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"tohlh"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"tohlh"},"content":"     * Creates an Event object.","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"tohlh"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"tohlh"},"content":"     * @param description The description of the event.","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"tohlh"},"content":"     * @param from The start time of the event.","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"tohlh"},"content":"     * @param to The end time of the event.","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"tohlh"},"content":"     * @throws HenryException If the description, start time or end time is not specified.","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"tohlh"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"tohlh"},"content":"    public Event(String description, String from, String to) throws HenryException {","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"tohlh"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"tohlh"},"content":"        if (from.isBlank()) {","lastModifiedDate":"2024-02-16"},{"lineNumber":30,"author":{"gitId":"tohlh"},"content":"            throw new HenryException(\"Missing time !!!\\n\");","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"tohlh"},"content":"        } else if (to.isBlank()) {","lastModifiedDate":"2024-02-16"},{"lineNumber":32,"author":{"gitId":"tohlh"},"content":"            throw new HenryException(\"Missing time!!!\\n\");","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"tohlh"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"tohlh"},"content":"        this.from \u003d LocalDateTime.parse(from, INPUT_FORMATTER);","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"tohlh"},"content":"        this.to \u003d LocalDateTime.parse(to, INPUT_FORMATTER);","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"tohlh"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":40,"author":{"gitId":"tohlh"},"content":"     * Sets the start datetime of the event.","lastModifiedDate":"2024-02-16"},{"lineNumber":41,"author":{"gitId":"tohlh"},"content":"     * @param from The start time of the event.","lastModifiedDate":"2024-02-16"},{"lineNumber":42,"author":{"gitId":"tohlh"},"content":"     * @throws HenryException If the start time is not specified.","lastModifiedDate":"2024-02-16"},{"lineNumber":43,"author":{"gitId":"tohlh"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":44,"author":{"gitId":"tohlh"},"content":"    public void setFrom(String from) throws HenryException {","lastModifiedDate":"2024-02-16"},{"lineNumber":45,"author":{"gitId":"tohlh"},"content":"        if (from.isBlank()) {","lastModifiedDate":"2024-02-16"},{"lineNumber":46,"author":{"gitId":"tohlh"},"content":"            throw new HenryException(\"Missing time !!!\\n\");","lastModifiedDate":"2024-02-16"},{"lineNumber":47,"author":{"gitId":"tohlh"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":48,"author":{"gitId":"tohlh"},"content":"        this.from \u003d LocalDateTime.parse(from, INPUT_FORMATTER);","lastModifiedDate":"2024-02-16"},{"lineNumber":49,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":50,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":51,"author":{"gitId":"tohlh"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":52,"author":{"gitId":"tohlh"},"content":"     * Sets the end datetime of the event.","lastModifiedDate":"2024-02-16"},{"lineNumber":53,"author":{"gitId":"tohlh"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":54,"author":{"gitId":"tohlh"},"content":"    public void setTo(String to) throws HenryException {","lastModifiedDate":"2024-02-16"},{"lineNumber":55,"author":{"gitId":"tohlh"},"content":"        if (to.isBlank()) {","lastModifiedDate":"2024-02-16"},{"lineNumber":56,"author":{"gitId":"tohlh"},"content":"            throw new HenryException(\"Missing time !!!\\n\");","lastModifiedDate":"2024-02-16"},{"lineNumber":57,"author":{"gitId":"tohlh"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":58,"author":{"gitId":"tohlh"},"content":"        this.to \u003d LocalDateTime.parse(to, INPUT_FORMATTER);","lastModifiedDate":"2024-02-16"},{"lineNumber":59,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":60,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":61,"author":{"gitId":"tohlh"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":62,"author":{"gitId":"tohlh"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":63,"author":{"gitId":"tohlh"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\", super.toString(),","lastModifiedDate":"2024-02-15"},{"lineNumber":64,"author":{"gitId":"tohlh"},"content":"                from.format(OUTPUT_FORMATTER), to.format(OUTPUT_FORMATTER));","lastModifiedDate":"2024-02-15"},{"lineNumber":65,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":66,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"tohlh"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"tohlh"},"content":"    public String toFileString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"tohlh"},"content":"        return String.format(\"E | %s | %s | %s\", super.toFileString(),","lastModifiedDate":"2024-02-15"},{"lineNumber":70,"author":{"gitId":"tohlh"},"content":"                from.format(INPUT_FORMATTER), to.format(INPUT_FORMATTER));","lastModifiedDate":"2024-02-15"},{"lineNumber":71,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"tohlh"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"tohlh":72}},{"path":"src/main/java/henry/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohlh"},"content":"package henry.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"tohlh"},"content":"import henry.HenryException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"tohlh"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"tohlh"},"content":" * Represents a Task.","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"tohlh"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"tohlh"},"content":"public class Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"tohlh"},"content":"    protected String description;","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"tohlh"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"tohlh"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"tohlh"},"content":"     * Constructor for the Task class.","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"tohlh"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"tohlh"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"tohlh"},"content":"     * @throws HenryException If the description is empty.","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"tohlh"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"tohlh"},"content":"    public Task(String description) throws HenryException {","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"tohlh"},"content":"        if (description.isBlank()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"tohlh"},"content":"            throw new HenryException(\"No description of task!\");","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"tohlh"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"tohlh"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"tohlh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"tohlh"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2024-02-16"},{"lineNumber":27,"author":{"gitId":"tohlh"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-16"},{"lineNumber":28,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":29,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":30,"author":{"gitId":"tohlh"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"tohlh"},"content":"     * Gets the status icon of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"tohlh"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"tohlh"},"content":"     * @return The status icon of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"tohlh"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"tohlh"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"tohlh"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"tohlh"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"tohlh"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"tohlh"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"tohlh"},"content":"     * @throws HenryException If the task was already marked.","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"tohlh"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"tohlh"},"content":"    public void markAsDone() throws HenryException {","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"tohlh"},"content":"        if (this.isDone) {","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"tohlh"},"content":"            throw new HenryException(\"This was already marked.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"tohlh"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"tohlh"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"tohlh"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"tohlh"},"content":"     * Marks the task as undone.","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"tohlh"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"tohlh"},"content":"     * @throws HenryException If the task was already unmarked.","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"tohlh"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"tohlh"},"content":"    public void unmarkAsDone() throws HenryException {","lastModifiedDate":"2024-01-25"},{"lineNumber":57,"author":{"gitId":"tohlh"},"content":"        if (!this.isDone) {","lastModifiedDate":"2024-01-25"},{"lineNumber":58,"author":{"gitId":"tohlh"},"content":"            throw new HenryException(\"This was already unmarked.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":59,"author":{"gitId":"tohlh"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":60,"author":{"gitId":"tohlh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":61,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":62,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":63,"author":{"gitId":"tohlh"},"content":"    public boolean containsKeyword(String keyword) {","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"tohlh"},"content":"        return description.contains(keyword);","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"tohlh"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":68,"author":{"gitId":"tohlh"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":69,"author":{"gitId":"tohlh"},"content":"        return String.format(\"[%s] %s\", getStatusIcon(), description);","lastModifiedDate":"2024-01-25"},{"lineNumber":70,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":71,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"tohlh"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"tohlh"},"content":"     * Converts the task to a string to be stored in a file.","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"tohlh"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"tohlh"},"content":"     * @return The string to be stored in a file.","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"tohlh"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"tohlh"},"content":"    public String toFileString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":78,"author":{"gitId":"tohlh"},"content":"        return String.format(\"%s | %s\", isDone ? \"1\" : \"0\", description);","lastModifiedDate":"2024-01-30"},{"lineNumber":79,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":80,"author":{"gitId":"tohlh"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"tohlh":80}},{"path":"src/main/java/henry/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohlh"},"content":"package henry.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"tohlh"},"content":"import henry.HenryException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"tohlh"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"tohlh"},"content":" * Represents a Todo Task.","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"tohlh"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"tohlh"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"tohlh"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"tohlh"},"content":"     * Creates a Todo object.","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"tohlh"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"tohlh"},"content":"     * @param description The description of the todo.","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"tohlh"},"content":"     * @throws HenryException If the description is not specified.","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"tohlh"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"tohlh"},"content":"    public Todo(String description) throws HenryException {","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"tohlh"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"tohlh"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"tohlh"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"tohlh"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"tohlh"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"tohlh"},"content":"    public String toFileString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"tohlh"},"content":"        return String.format(\"T | %s\", super.toFileString());","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"tohlh"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"tohlh":27}},{"path":"src/main/java/henry/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohlh"},"content":"package henry.ui;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"tohlh"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"tohlh"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"tohlh"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"tohlh"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"tohlh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"tohlh"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"tohlh"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"tohlh"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"tohlh"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"tohlh"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"tohlh"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"tohlh"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"tohlh"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"tohlh"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"tohlh"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"tohlh"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"tohlh"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"tohlh"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"tohlh"},"content":"    @FXML","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"tohlh"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"tohlh"},"content":"    @FXML","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"tohlh"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"tohlh"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"tohlh"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"tohlh"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"tohlh"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"tohlh"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"tohlh"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"tohlh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"tohlh"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"tohlh"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"tohlh"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"tohlh"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"tohlh"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"tohlh"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"tohlh"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"tohlh"},"content":"    private void flip() {","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"tohlh"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"tohlh"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"tohlh"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"tohlh"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"tohlh"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"tohlh"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"tohlh"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"tohlh"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-05"},{"lineNumber":58,"author":{"gitId":"tohlh"},"content":"        db.flip();","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"tohlh"},"content":"        return db;","lastModifiedDate":"2024-02-05"},{"lineNumber":60,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"tohlh"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"tohlh":61}},{"path":"src/main/java/henry/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohlh"},"content":"package henry.ui;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"tohlh"},"content":"import henry.Henry;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"tohlh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"tohlh"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"tohlh"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"tohlh"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"tohlh"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"tohlh"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"tohlh"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"tohlh"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"tohlh"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"tohlh"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"tohlh"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"tohlh"},"content":"    @FXML","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"tohlh"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"tohlh"},"content":"    @FXML","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"tohlh"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"tohlh"},"content":"    @FXML","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"tohlh"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"tohlh"},"content":"    @FXML","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"tohlh"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"tohlh"},"content":"    private Henry henry;","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"tohlh"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"tohlh"},"content":"    private Image henryImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"tohlh"},"content":"    @FXML","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"tohlh"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"tohlh"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"tohlh"},"content":"    public void setHenry(Henry h) {","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"tohlh"},"content":"        henry \u003d h;","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"tohlh"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"tohlh"},"content":"                DialogBox.getDukeDialog(\"Hello! I am henry\", henryImage)","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"tohlh"},"content":"        );","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"tohlh"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"tohlh"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"tohlh"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"tohlh"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"tohlh"},"content":"    @FXML","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"tohlh"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"tohlh"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"tohlh"},"content":"        String response \u003d henry.getResponse(input);","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"tohlh"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"tohlh"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"tohlh"},"content":"                DialogBox.getDukeDialog(response, henryImage)","lastModifiedDate":"2024-02-22"},{"lineNumber":52,"author":{"gitId":"tohlh"},"content":"        );","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"tohlh"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"tohlh"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"tohlh":55}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"tohlh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"tohlh"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"tohlh"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"tohlh"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"tohlh"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"tohlh"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"tohlh"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"tohlh"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"tohlh"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"tohlh"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"tohlh"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"tohlh"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"tohlh"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"tohlh"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"tohlh":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"tohlh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"tohlh"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"tohlh"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"tohlh"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"tohlh"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"tohlh"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"tohlh"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"henry.ui.MainWindow\"\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"tohlh"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"tohlh"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"tohlh"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"tohlh"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"tohlh"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"tohlh"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"tohlh"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"tohlh"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"tohlh"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"tohlh"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"tohlh":19}},{"path":"src/test/java/henry/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohlh"},"content":"package henry;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"tohlh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"tohlh"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"tohlh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"tohlh"},"content":"public class ParserTest {","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"tohlh"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"tohlh"},"content":"    public void testEventWithoutDescription() {","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"tohlh"},"content":"        Exception exception \u003d assertThrows(HenryException.class, () -\u003e Parser.parse(\"event /from 29/1/2024 1800\"));","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"tohlh"},"content":"        assertEquals(\"Missing /from or /to\",","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"tohlh"},"content":"                exception.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"tohlh"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"tohlh"},"content":"    public void testEventWithoutToDateTime() {","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"tohlh"},"content":"        Exception exception \u003d assertThrows(HenryException.class, () -\u003e Parser.parse(\"event event /from 29/2/2012\"));","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"tohlh"},"content":"        assertEquals(\"Missing /from or /to\",","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"tohlh"},"content":"                exception.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"tohlh"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"tohlh":22}},{"path":"src/test/java/henry/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohlh"},"content":"package henry.task;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"tohlh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"tohlh"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"tohlh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"tohlh"},"content":"import henry.HenryException;","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"tohlh"},"content":"public class DeadlineTest {","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"tohlh"},"content":"    @Test","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"tohlh"},"content":"    public void constructor_validInput1_success() {","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"tohlh"},"content":"        try {","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"tohlh"},"content":"            Deadline deadline \u003d new Deadline(\"test1\", \"24/2/2024 1200\");","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"tohlh"},"content":"            assertEquals(\"[D][ ] test1 (by: Feb 24 2024 12:00)\", deadline.toString());","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"tohlh"},"content":"        } catch (HenryException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"tohlh"},"content":"            fail();","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"tohlh"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"tohlh"},"content":"    @Test","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"tohlh"},"content":"    public void constructor_validInput2_success() {","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"tohlh"},"content":"        try {","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"tohlh"},"content":"            Deadline deadline \u003d new Deadline(\"test1\", \"24/2/2024 1200\");","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"tohlh"},"content":"            assertEquals(\"D | 0 | test1 | 24/2/2024 1200\", deadline.toFileString());","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"tohlh"},"content":"        } catch (HenryException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"tohlh"},"content":"            fail();","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"tohlh"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"tohlh"},"content":"    @Test","lastModifiedDate":"2024-02-22"},{"lineNumber":32,"author":{"gitId":"tohlh"},"content":"    public void constructor_markAsDone_success() {","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"tohlh"},"content":"        try {","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"tohlh"},"content":"            Deadline deadline \u003d new Deadline(\"test1\", \"24/2/2024 1200\");","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"tohlh"},"content":"            deadline.markAsDone();","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"tohlh"},"content":"            assertEquals(\"[D][X] test1 (by: Feb 24 2024 12:00)\", deadline.toString());","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"tohlh"},"content":"        } catch (HenryException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"tohlh"},"content":"            fail();","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"tohlh"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":41,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"tohlh"},"content":"    @Test","lastModifiedDate":"2024-02-22"},{"lineNumber":43,"author":{"gitId":"tohlh"},"content":"    public void constructor_invalidInput1_exceptionThrown() {","lastModifiedDate":"2024-02-22"},{"lineNumber":44,"author":{"gitId":"tohlh"},"content":"        try {","lastModifiedDate":"2024-02-22"},{"lineNumber":45,"author":{"gitId":"tohlh"},"content":"            Deadline deadline \u003d new Deadline(\"\", \"24/2/2024 1200\");","lastModifiedDate":"2024-02-22"},{"lineNumber":46,"author":{"gitId":"tohlh"},"content":"            fail();","lastModifiedDate":"2024-02-22"},{"lineNumber":47,"author":{"gitId":"tohlh"},"content":"        } catch (HenryException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":48,"author":{"gitId":"tohlh"},"content":"            assertEquals(\"No description of task!\", e.getMessage());","lastModifiedDate":"2024-02-22"},{"lineNumber":49,"author":{"gitId":"tohlh"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":50,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":51,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":52,"author":{"gitId":"tohlh"},"content":"    @Test","lastModifiedDate":"2024-02-22"},{"lineNumber":53,"author":{"gitId":"tohlh"},"content":"    public void constructor_invalidInput2_exceptionThrown() {","lastModifiedDate":"2024-02-22"},{"lineNumber":54,"author":{"gitId":"tohlh"},"content":"        try {","lastModifiedDate":"2024-02-22"},{"lineNumber":55,"author":{"gitId":"tohlh"},"content":"            Deadline deadline \u003d new Deadline(\"test1\", \"\");","lastModifiedDate":"2024-02-22"},{"lineNumber":56,"author":{"gitId":"tohlh"},"content":"            fail();","lastModifiedDate":"2024-02-22"},{"lineNumber":57,"author":{"gitId":"tohlh"},"content":"        } catch (HenryException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":58,"author":{"gitId":"tohlh"},"content":"            assertEquals(\"No due date specified!\", e.getMessage());","lastModifiedDate":"2024-02-22"},{"lineNumber":59,"author":{"gitId":"tohlh"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":60,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":61,"author":{"gitId":"tohlh"},"content":"}","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"tohlh":61}},{"path":"src/test/java/henry/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohlh"},"content":"package henry.task;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"tohlh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"tohlh"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"tohlh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"tohlh"},"content":"import henry.HenryException;","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"tohlh"},"content":"public class EventTest {","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"tohlh"},"content":"    @Test","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"tohlh"},"content":"    public void constructor_validInput1_success() {","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"tohlh"},"content":"        try {","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"tohlh"},"content":"            Event event \u003d new Event(\"test1\", \"24/2/2024 1200\", \"24/2/2024 1500\");","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"tohlh"},"content":"            assertEquals(\"[E][ ] test1 (from: Feb 24 2024 12:00 to: Feb 24 2024 15:00)\", event.toString());","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"tohlh"},"content":"        } catch (HenryException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"tohlh"},"content":"            fail();","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"tohlh"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"tohlh"},"content":"    @Test","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"tohlh"},"content":"    public void constructor_validInput2_success() {","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"tohlh"},"content":"        try {","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"tohlh"},"content":"            Event event \u003d new Event(\"test1\", \"24/2/2024 1200\", \"24/2/2024 1500\");","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"tohlh"},"content":"            assertEquals(\"E | 0 | test1 | 24/2/2024 1200 | 24/2/2024 1500\", event.toFileString());","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"tohlh"},"content":"        } catch (HenryException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"tohlh"},"content":"            fail();","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"tohlh"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"tohlh"},"content":"    @Test","lastModifiedDate":"2024-02-22"},{"lineNumber":32,"author":{"gitId":"tohlh"},"content":"    public void constructor_markAsDone_success() {","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"tohlh"},"content":"        try {","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"tohlh"},"content":"            Event event \u003d new Event(\"test1\", \"24/2/2024 1200\", \"24/2/2024 1500\");","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"tohlh"},"content":"            event.markAsDone();","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"tohlh"},"content":"            assertEquals(\"[E][X] test1 (from: Feb 24 2024 12:00 to: Feb 24 2024 15:00)\", event.toString());","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"tohlh"},"content":"        } catch (HenryException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"tohlh"},"content":"            fail();","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"tohlh"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":41,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"tohlh"},"content":"    @Test","lastModifiedDate":"2024-02-22"},{"lineNumber":43,"author":{"gitId":"tohlh"},"content":"    public void constructor_invalidInput1_exceptionThrown() {","lastModifiedDate":"2024-02-22"},{"lineNumber":44,"author":{"gitId":"tohlh"},"content":"        try {","lastModifiedDate":"2024-02-22"},{"lineNumber":45,"author":{"gitId":"tohlh"},"content":"            Event event \u003d new Event(\"\", \"24/2/2024 1200\", \"24/2/2024 1500\");","lastModifiedDate":"2024-02-22"},{"lineNumber":46,"author":{"gitId":"tohlh"},"content":"            fail();","lastModifiedDate":"2024-02-22"},{"lineNumber":47,"author":{"gitId":"tohlh"},"content":"        } catch (HenryException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":48,"author":{"gitId":"tohlh"},"content":"            assertEquals(\"No description of task!\", e.getMessage());","lastModifiedDate":"2024-02-22"},{"lineNumber":49,"author":{"gitId":"tohlh"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":50,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":51,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":52,"author":{"gitId":"tohlh"},"content":"    @Test","lastModifiedDate":"2024-02-22"},{"lineNumber":53,"author":{"gitId":"tohlh"},"content":"    public void constructor_invalidInput2_exceptionThrown() {","lastModifiedDate":"2024-02-22"},{"lineNumber":54,"author":{"gitId":"tohlh"},"content":"        try {","lastModifiedDate":"2024-02-22"},{"lineNumber":55,"author":{"gitId":"tohlh"},"content":"            Event event \u003d new Event(\"test1\", \"\", \"24/2/2024 1500\");","lastModifiedDate":"2024-02-22"},{"lineNumber":56,"author":{"gitId":"tohlh"},"content":"            fail();","lastModifiedDate":"2024-02-22"},{"lineNumber":57,"author":{"gitId":"tohlh"},"content":"        } catch (HenryException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":58,"author":{"gitId":"tohlh"},"content":"            assertEquals(\"Missing time !!!\\n\", e.getMessage());","lastModifiedDate":"2024-02-22"},{"lineNumber":59,"author":{"gitId":"tohlh"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":60,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":61,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":62,"author":{"gitId":"tohlh"},"content":"    @Test","lastModifiedDate":"2024-02-22"},{"lineNumber":63,"author":{"gitId":"tohlh"},"content":"    public void constructor_invalidInput3_exceptionThrown() {","lastModifiedDate":"2024-02-22"},{"lineNumber":64,"author":{"gitId":"tohlh"},"content":"        try {","lastModifiedDate":"2024-02-22"},{"lineNumber":65,"author":{"gitId":"tohlh"},"content":"            Event event \u003d new Event(\"test1\", \"24/2/2024 1200\", \"\");","lastModifiedDate":"2024-02-22"},{"lineNumber":66,"author":{"gitId":"tohlh"},"content":"            fail();","lastModifiedDate":"2024-02-22"},{"lineNumber":67,"author":{"gitId":"tohlh"},"content":"        } catch (HenryException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":68,"author":{"gitId":"tohlh"},"content":"            assertEquals(\"Missing time!!!\\n\", e.getMessage());","lastModifiedDate":"2024-02-22"},{"lineNumber":69,"author":{"gitId":"tohlh"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":70,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":71,"author":{"gitId":"tohlh"},"content":"}","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"tohlh":71}},{"path":"src/test/java/henry/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohlh"},"content":"package henry.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"tohlh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"tohlh"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"tohlh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"tohlh"},"content":"import henry.HenryException;","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"tohlh"},"content":"public class TodoTest {","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"tohlh"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"tohlh"},"content":"    public void constructor_validInput1_success() {","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"tohlh"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"tohlh"},"content":"            Todo todo \u003d new Todo(\"test1\");","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"tohlh"},"content":"            assertEquals(\"[T][ ] test1\", todo.toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"tohlh"},"content":"        } catch (HenryException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"tohlh"},"content":"            fail();","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"tohlh"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"tohlh"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"tohlh"},"content":"    public void constructor_validInput2_success() {","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"tohlh"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"tohlh"},"content":"            Todo todo \u003d new Todo(\"test2\");","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"tohlh"},"content":"            assertEquals(\"T | 0 | test2\", todo.toFileString());","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"tohlh"},"content":"        } catch (HenryException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"tohlh"},"content":"            fail();","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"tohlh"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"tohlh"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"tohlh"},"content":"    public void constructor_markAsDone_exceptionThrown() {","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"tohlh"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"tohlh"},"content":"            Todo todo \u003d new Todo(\"test3\");","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"tohlh"},"content":"            todo.markAsDone();","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"tohlh"},"content":"            assertEquals(\"[T][X] test3\", todo.toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"tohlh"},"content":"        } catch (HenryException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"tohlh"},"content":"            fail();","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"tohlh"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"tohlh"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"tohlh"},"content":"    public void constructor_invalidInput1_exceptionThrown() {","lastModifiedDate":"2024-02-22"},{"lineNumber":44,"author":{"gitId":"tohlh"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"tohlh"},"content":"            Todo todo \u003d new Todo(\"\");","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"tohlh"},"content":"            fail();","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"tohlh"},"content":"        } catch (HenryException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"tohlh"},"content":"            assertEquals(\"No description of task!\", e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"tohlh"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"tohlh"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"tohlh":51}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tohlh"},"content":"todo borrow book","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"tohlh"},"content":"deadline return book /by Thurs 1000","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"tohlh"},"content":"event CS3230 exam /from 1300 /to 1500","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"tohlh"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"tohlh"},"content":"mark 1","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"tohlh"},"content":"mark 3","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"tohlh"},"content":"unmark 3","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"tohlh"},"content":"mark 2","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"tohlh"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"tohlh"},"content":"bye","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"tohlh":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"tohlh"},"content":"java -classpath ..\\bin Henry \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"tohlh":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"tohlh"},"content":"java -classpath ../bin Henry \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":37,"tohlh":1}}]
