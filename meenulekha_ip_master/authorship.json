[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"meenulekha"},"content":"# duke.Duke project template","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"meenulekha"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"meenulekha":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"meenulekha"},"content":"//    id \u0027org.openjfx.javafxplugin\u0027 version \u002717.0.7\u0027","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"meenulekha"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"meenulekha"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"meenulekha"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"meenulekha"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"meenulekha"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"meenulekha"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"meenulekha"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-17"},{"lineNumber":23,"author":{"gitId":"meenulekha"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"meenulekha"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"meenulekha"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-17"},{"lineNumber":26,"author":{"gitId":"meenulekha"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-17"},{"lineNumber":27,"author":{"gitId":"meenulekha"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-17"},{"lineNumber":28,"author":{"gitId":"meenulekha"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"meenulekha"},"content":"    mainClass.set(\"Launcher\")","lastModifiedDate":"2024-02-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"meenulekha"},"content":"    archiveFileName \u003d \u0027duke.jar\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"meenulekha":18,"-":41}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"meenulekha"},"content":"# Leo User Guide","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"meenulekha"},"content":"![Ui.png](https://github.com/meenulekha/ip/blob/master/docs/Ui.png)","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"meenulekha"},"content":"Welcome to Leo, a task management application that helps you stay organized and keep track of your tasks. This user guide will walk you through the various features and functionalities of Leo.","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"meenulekha"},"content":"Leo is a simple and intuitive task management application designed to assist you in managing your tasks effectively. With Leo, you can easily add, mark, unmark, delete, and find tasks, making task management a breeze.","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":8,"author":{"gitId":"meenulekha"},"content":"## Adding Tasks, deadlines and events","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":10,"author":{"gitId":"meenulekha"},"content":"Leo allows you to add tasks with deadlines. Follow the steps below to add a deadline to your tasks.","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":12,"author":{"gitId":"meenulekha"},"content":"**Action:** \u0027deadline \u0026lt;task_description\u0026gt; /by \u0026lt;deadline_date\u0026gt;\u0027","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"meenulekha"},"content":"- **\u0026lt;task_description\u0026gt;** : Description of the task.","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"meenulekha"},"content":"- **\u0026lt;deadline_date\u0026gt;**:  Deadline date in the format dd/MM/yyyy or MMM dd yyyy.","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"meenulekha"},"content":"```","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"meenulekha"},"content":"deadline Complete report /by 28/02/2024","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"meenulekha"},"content":"```","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"meenulekha"},"content":"expected output:","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"meenulekha"},"content":"```","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"meenulekha"},"content":"Got it. I\u0027ve added this task:ch","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"meenulekha"},"content":"[D] Complete report (by: Feb 28, 2024)","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"meenulekha"},"content":"Now you have 1 task(s) in your list!","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"meenulekha"},"content":"------------------------------","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"meenulekha"},"content":"```","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"meenulekha"},"content":"## Adding Events","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"meenulekha"},"content":"## Adding Events","lastModifiedDate":"2024-02-28"},{"lineNumber":32,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"meenulekha"},"content":"Leo allows you to add events to your tasks. Follow the steps below to add an event.","lastModifiedDate":"2024-02-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"meenulekha"},"content":"**Command:** `event \u0026lt;event_description\u0026gt; /from \u0026lt;start_date\u0026gt; /to \u0026lt;end_date\u0026gt;`","lastModifiedDate":"2024-02-28"},{"lineNumber":36,"author":{"gitId":"meenulekha"},"content":"- **\u0026lt;event_description\u0026gt;**: Description of the event.","lastModifiedDate":"2024-02-28"},{"lineNumber":37,"author":{"gitId":"meenulekha"},"content":"- **\u0026lt;start_date\u0026gt;**: Start date of the event in the format `dd/MM/yyyy` or `MMM dd yyyy`.","lastModifiedDate":"2024-02-28"},{"lineNumber":38,"author":{"gitId":"meenulekha"},"content":"- **\u0026lt;end_date\u0026gt;**: End date of the event in the format `dd/MM/yyyy` or `MMM dd yyyy`.","lastModifiedDate":"2024-02-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":40,"author":{"gitId":"meenulekha"},"content":"**Example:**","lastModifiedDate":"2024-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":42,"author":{"gitId":"meenulekha"},"content":"```plaintext","lastModifiedDate":"2024-02-23"},{"lineNumber":43,"author":{"gitId":"meenulekha"},"content":"event Team meeting /from 28/02/2024 /to 29/02/2024","lastModifiedDate":"2024-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":45,"author":{"gitId":"meenulekha"},"content":"**Expected Output:**","lastModifiedDate":"2024-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":48,"author":{"gitId":"meenulekha"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2024-02-23"},{"lineNumber":49,"author":{"gitId":"meenulekha"},"content":"[E] Team meeting (from: Feb 28, 2024, to: Feb 29, 2024)","lastModifiedDate":"2024-02-23"},{"lineNumber":50,"author":{"gitId":"meenulekha"},"content":"Now you have 2 task(s) in your list!","lastModifiedDate":"2024-02-23"},{"lineNumber":51,"author":{"gitId":"meenulekha"},"content":"------------------------------","lastModifiedDate":"2024-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-02-23"},{"lineNumber":53,"author":{"gitId":"meenulekha"},"content":"## Deleting a Task","lastModifiedDate":"2024-02-23"},{"lineNumber":54,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":55,"author":{"gitId":"meenulekha"},"content":"To delete a task, use the following command:","lastModifiedDate":"2024-02-23"},{"lineNumber":56,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":57,"author":{"gitId":"meenulekha"},"content":"**Command:** `delete \u0026lt;task_number\u0026gt;`","lastModifiedDate":"2024-02-28"},{"lineNumber":58,"author":{"gitId":"meenulekha"},"content":"- **\u0026lt;task_number\u0026gt;**: The number associated with the task in the list.","lastModifiedDate":"2024-02-28"},{"lineNumber":59,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":60,"author":{"gitId":"meenulekha"},"content":"**Example:**","lastModifiedDate":"2024-02-23"},{"lineNumber":61,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":62,"author":{"gitId":"meenulekha"},"content":"```plaintext","lastModifiedDate":"2024-02-23"},{"lineNumber":63,"author":{"gitId":"meenulekha"},"content":"delete 1","lastModifiedDate":"2024-02-23"},{"lineNumber":64,"author":{"gitId":"meenulekha"},"content":"```","lastModifiedDate":"2024-02-23"},{"lineNumber":65,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":66,"author":{"gitId":"meenulekha"},"content":"**Expected Output:**","lastModifiedDate":"2024-02-23"},{"lineNumber":67,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":68,"author":{"gitId":"meenulekha"},"content":"```","lastModifiedDate":"2024-02-23"},{"lineNumber":69,"author":{"gitId":"meenulekha"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2024-02-23"},{"lineNumber":70,"author":{"gitId":"meenulekha"},"content":"[D] Complete report (by: Feb 28, 2024)","lastModifiedDate":"2024-02-23"},{"lineNumber":71,"author":{"gitId":"meenulekha"},"content":"Now you have 1 task(s) in the list.","lastModifiedDate":"2024-02-23"},{"lineNumber":72,"author":{"gitId":"meenulekha"},"content":"------------------------------","lastModifiedDate":"2024-02-23"},{"lineNumber":73,"author":{"gitId":"meenulekha"},"content":"```","lastModifiedDate":"2024-02-23"},{"lineNumber":74,"author":{"gitId":"meenulekha"},"content":"## Finding Tasks","lastModifiedDate":"2024-02-23"},{"lineNumber":75,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":76,"author":{"gitId":"meenulekha"},"content":"To find tasks containing a specific keyword, use the following command:","lastModifiedDate":"2024-02-23"},{"lineNumber":77,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":78,"author":{"gitId":"meenulekha"},"content":"**Command:** `find \u0026lt;keyword\u0026gt;`","lastModifiedDate":"2024-02-28"},{"lineNumber":79,"author":{"gitId":"meenulekha"},"content":"- **\u0026lt;keyword\u0026gt;**: The keyword to search for in task descriptions.","lastModifiedDate":"2024-02-28"},{"lineNumber":80,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":81,"author":{"gitId":"meenulekha"},"content":"**Example:**","lastModifiedDate":"2024-02-23"},{"lineNumber":82,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":83,"author":{"gitId":"meenulekha"},"content":"```plaintext","lastModifiedDate":"2024-02-23"},{"lineNumber":84,"author":{"gitId":"meenulekha"},"content":"find meeting","lastModifiedDate":"2024-02-23"},{"lineNumber":85,"author":{"gitId":"meenulekha"},"content":"```","lastModifiedDate":"2024-02-23"},{"lineNumber":86,"author":{"gitId":"meenulekha"},"content":"**Expected Output:**","lastModifiedDate":"2024-02-23"},{"lineNumber":87,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":88,"author":{"gitId":"meenulekha"},"content":"```","lastModifiedDate":"2024-02-23"},{"lineNumber":89,"author":{"gitId":"meenulekha"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2024-02-23"},{"lineNumber":90,"author":{"gitId":"meenulekha"},"content":"1. [E] Team meeting (from: Feb 28, 2024, to: Feb 29, 2024)","lastModifiedDate":"2024-02-23"},{"lineNumber":91,"author":{"gitId":"meenulekha"},"content":"------------------------------","lastModifiedDate":"2024-02-23"},{"lineNumber":92,"author":{"gitId":"meenulekha"},"content":"```","lastModifiedDate":"2024-02-23"},{"lineNumber":93,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":94,"author":{"gitId":"meenulekha"},"content":"## Chronologically sorted deadlines!","lastModifiedDate":"2024-02-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":96,"author":{"gitId":"meenulekha"},"content":"\"list\" will allow you to see all of your tasks, deadlines and events in a chronological order","lastModifiedDate":"2024-02-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":99,"author":{"gitId":"meenulekha"},"content":"## Find your tasks easily!","lastModifiedDate":"2024-02-23"},{"lineNumber":100,"author":{"gitId":"meenulekha"},"content":"\"find\" will allow you to find certain tasks, deadlines and events that you are looking for!","lastModifiedDate":"2024-02-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":102,"author":{"gitId":"meenulekha"},"content":"***Feel free to explore Leo\u0027s other features by using the commands mentioned in the user guide. ","lastModifiedDate":"2024-02-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07"},{"lineNumber":104,"author":{"gitId":"meenulekha"},"content":"  Happy tasking with Leo!","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"meenulekha":85,"-":19}},{"path":"duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"meenulekha"},"content":"T |  0 | read book","lastModifiedDate":"2024-02-17"}],"authorContributionMap":{"meenulekha":1}},{"path":"src/main/java/GUI/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"meenulekha"},"content":"package GUI;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"meenulekha"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"meenulekha"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"meenulekha"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"meenulekha"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"meenulekha"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"meenulekha"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"meenulekha"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"meenulekha"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"meenulekha"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"meenulekha"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"meenulekha"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"meenulekha"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"meenulekha"},"content":"/**","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"meenulekha"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"meenulekha"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"meenulekha"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"meenulekha"},"content":" */","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"meenulekha"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"meenulekha"},"content":"    @FXML","lastModifiedDate":"2024-02-17"},{"lineNumber":23,"author":{"gitId":"meenulekha"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"meenulekha"},"content":"    @FXML","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"meenulekha"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-17"},{"lineNumber":26,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":27,"author":{"gitId":"meenulekha"},"content":"     * Constructs a DialogBox with the specified text and image.","lastModifiedDate":"2024-02-18"},{"lineNumber":28,"author":{"gitId":"meenulekha"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":29,"author":{"gitId":"meenulekha"},"content":"     * This constructor initializes a DialogBox using a specified text and image. The constructor loads the","lastModifiedDate":"2024-02-18"},{"lineNumber":30,"author":{"gitId":"meenulekha"},"content":"     * corresponding FXML layout from the \"DialogBox.fxml\" resource file and sets the controller to the current","lastModifiedDate":"2024-02-18"},{"lineNumber":31,"author":{"gitId":"meenulekha"},"content":"     * instance. It then sets the text of the dialog box and the image for display.","lastModifiedDate":"2024-02-18"},{"lineNumber":32,"author":{"gitId":"meenulekha"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":33,"author":{"gitId":"meenulekha"},"content":"     * @param text The text content to be displayed in the dialog box.","lastModifiedDate":"2024-02-18"},{"lineNumber":34,"author":{"gitId":"meenulekha"},"content":"     * @param img The image to be displayed in the dialog box.","lastModifiedDate":"2024-02-18"},{"lineNumber":35,"author":{"gitId":"meenulekha"},"content":"     * @throws IOException If an error occurs while loading the FXML layout.","lastModifiedDate":"2024-02-18"},{"lineNumber":36,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":37,"author":{"gitId":"meenulekha"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-17"},{"lineNumber":38,"author":{"gitId":"meenulekha"},"content":"        try {","lastModifiedDate":"2024-02-17"},{"lineNumber":39,"author":{"gitId":"meenulekha"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-17"},{"lineNumber":40,"author":{"gitId":"meenulekha"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-17"},{"lineNumber":41,"author":{"gitId":"meenulekha"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-17"},{"lineNumber":42,"author":{"gitId":"meenulekha"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-17"},{"lineNumber":43,"author":{"gitId":"meenulekha"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-17"},{"lineNumber":44,"author":{"gitId":"meenulekha"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-17"},{"lineNumber":45,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":46,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":47,"author":{"gitId":"meenulekha"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-17"},{"lineNumber":48,"author":{"gitId":"meenulekha"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-17"},{"lineNumber":49,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":50,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":51,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":52,"author":{"gitId":"meenulekha"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-17"},{"lineNumber":53,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":54,"author":{"gitId":"meenulekha"},"content":"    private void flip() {","lastModifiedDate":"2024-02-17"},{"lineNumber":55,"author":{"gitId":"meenulekha"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-17"},{"lineNumber":56,"author":{"gitId":"meenulekha"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-17"},{"lineNumber":57,"author":{"gitId":"meenulekha"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-17"},{"lineNumber":58,"author":{"gitId":"meenulekha"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-17"},{"lineNumber":59,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":60,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":61,"author":{"gitId":"meenulekha"},"content":"     * Creates and returns a DialogBox representing user input.","lastModifiedDate":"2024-02-18"},{"lineNumber":62,"author":{"gitId":"meenulekha"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":63,"author":{"gitId":"meenulekha"},"content":"     * This method creates a new DialogBox instance with the specified text content and image to represent","lastModifiedDate":"2024-02-18"},{"lineNumber":64,"author":{"gitId":"meenulekha"},"content":"     * user input in the chat interface. The method returns the constructed DialogBox, ready to be displayed.","lastModifiedDate":"2024-02-18"},{"lineNumber":65,"author":{"gitId":"meenulekha"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":66,"author":{"gitId":"meenulekha"},"content":"     * @param text The text content of the user\u0027s input.","lastModifiedDate":"2024-02-18"},{"lineNumber":67,"author":{"gitId":"meenulekha"},"content":"     * @param img The image to be displayed alongside the user\u0027s input.","lastModifiedDate":"2024-02-18"},{"lineNumber":68,"author":{"gitId":"meenulekha"},"content":"     * @return A DialogBox representing the user\u0027s input.","lastModifiedDate":"2024-02-18"},{"lineNumber":69,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":70,"author":{"gitId":"meenulekha"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-17"},{"lineNumber":71,"author":{"gitId":"meenulekha"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-17"},{"lineNumber":72,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":73,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":74,"author":{"gitId":"meenulekha"},"content":"     * Creates and returns a DialogBox representing Duke\u0027s response.","lastModifiedDate":"2024-02-18"},{"lineNumber":75,"author":{"gitId":"meenulekha"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":76,"author":{"gitId":"meenulekha"},"content":"     * This method creates a new DialogBox instance with the specified text content and image to represent","lastModifiedDate":"2024-02-18"},{"lineNumber":77,"author":{"gitId":"meenulekha"},"content":"     * Duke\u0027s response in the chat interface. Additionally, it flips the orientation of the DialogBox to visually","lastModifiedDate":"2024-02-18"},{"lineNumber":78,"author":{"gitId":"meenulekha"},"content":"     * distinguish between user input and Duke\u0027s responses. The method returns the constructed DialogBox,","lastModifiedDate":"2024-02-18"},{"lineNumber":79,"author":{"gitId":"meenulekha"},"content":"     * ready to be displayed.","lastModifiedDate":"2024-02-18"},{"lineNumber":80,"author":{"gitId":"meenulekha"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":81,"author":{"gitId":"meenulekha"},"content":"     * @param text The text content of Duke\u0027s response.","lastModifiedDate":"2024-02-18"},{"lineNumber":82,"author":{"gitId":"meenulekha"},"content":"     * @param img The image to be displayed alongside Duke\u0027s response.","lastModifiedDate":"2024-02-18"},{"lineNumber":83,"author":{"gitId":"meenulekha"},"content":"     * @return A DialogBox representing Duke\u0027s response.","lastModifiedDate":"2024-02-18"},{"lineNumber":84,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":85,"author":{"gitId":"meenulekha"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-02-17"},{"lineNumber":86,"author":{"gitId":"meenulekha"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-17"},{"lineNumber":87,"author":{"gitId":"meenulekha"},"content":"        db.flip();","lastModifiedDate":"2024-02-17"},{"lineNumber":88,"author":{"gitId":"meenulekha"},"content":"        return db;","lastModifiedDate":"2024-02-17"},{"lineNumber":89,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":90,"author":{"gitId":"meenulekha"},"content":"}","lastModifiedDate":"2024-02-17"}],"authorContributionMap":{"meenulekha":90}},{"path":"src/main/java/GUI/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"meenulekha"},"content":"package GUI;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"meenulekha"},"content":"import java.io.File;","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"meenulekha"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"meenulekha"},"content":"import duke.Duke;","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"meenulekha"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"meenulekha"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"meenulekha"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"meenulekha"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"meenulekha"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"meenulekha"},"content":"/**","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"meenulekha"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"meenulekha"},"content":" */","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"meenulekha"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"meenulekha"},"content":"    private String FILE_NAME \u003d \"duke.txt\";","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"meenulekha"},"content":"    private String FILE_PATH \u003d System.getProperty(\"user.dir\") + File.separator + \"src//main/java/data\"","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"meenulekha"},"content":"            + File.separator + FILE_NAME;","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"meenulekha"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"meenulekha"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"meenulekha"},"content":"        launch(args);","lastModifiedDate":"2024-02-17"},{"lineNumber":23,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-02-17"},{"lineNumber":26,"author":{"gitId":"meenulekha"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-17"},{"lineNumber":27,"author":{"gitId":"meenulekha"},"content":"        try {","lastModifiedDate":"2024-02-17"},{"lineNumber":28,"author":{"gitId":"meenulekha"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-17"},{"lineNumber":29,"author":{"gitId":"meenulekha"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-17"},{"lineNumber":30,"author":{"gitId":"meenulekha"},"content":"            stage.setTitle(\"Leo\");","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"meenulekha"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-17"},{"lineNumber":32,"author":{"gitId":"meenulekha"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-17"},{"lineNumber":33,"author":{"gitId":"meenulekha"},"content":"            Duke duke \u003d new Duke(FILE_PATH);","lastModifiedDate":"2024-02-17"},{"lineNumber":34,"author":{"gitId":"meenulekha"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2024-02-17"},{"lineNumber":35,"author":{"gitId":"meenulekha"},"content":"            stage.show();","lastModifiedDate":"2024-02-17"},{"lineNumber":36,"author":{"gitId":"meenulekha"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-17"},{"lineNumber":37,"author":{"gitId":"meenulekha"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-17"},{"lineNumber":38,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":39,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":40,"author":{"gitId":"meenulekha"},"content":"}","lastModifiedDate":"2024-02-17"}],"authorContributionMap":{"meenulekha":40}},{"path":"src/main/java/GUI/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"meenulekha"},"content":"package GUI;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"meenulekha"},"content":"import duke.Duke;","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"meenulekha"},"content":"import javafx.application.Platform;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"meenulekha"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"meenulekha"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"meenulekha"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"meenulekha"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"meenulekha"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"meenulekha"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"meenulekha"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"meenulekha"},"content":"/**","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"meenulekha"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"meenulekha"},"content":" */","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"meenulekha"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"meenulekha"},"content":"    @FXML","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"meenulekha"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"meenulekha"},"content":"    @FXML","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"meenulekha"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"meenulekha"},"content":"    @FXML","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"meenulekha"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"meenulekha"},"content":"    @FXML","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"meenulekha"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-17"},{"lineNumber":23,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"meenulekha"},"content":"    private Duke duke;","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":26,"author":{"gitId":"meenulekha"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));","lastModifiedDate":"2024-02-17"},{"lineNumber":27,"author":{"gitId":"meenulekha"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Leo.png\"));","lastModifiedDate":"2024-02-17"},{"lineNumber":28,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":29,"author":{"gitId":"meenulekha"},"content":"     * Initializes the GUI components, binds properties, and displays the initial greeting in the dialog container.","lastModifiedDate":"2024-02-17"},{"lineNumber":30,"author":{"gitId":"meenulekha"},"content":"     * Binds the vertical value property of the scroll pane to the height property of the dialog container.","lastModifiedDate":"2024-02-17"},{"lineNumber":31,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":32,"author":{"gitId":"meenulekha"},"content":"    @FXML","lastModifiedDate":"2024-02-17"},{"lineNumber":33,"author":{"gitId":"meenulekha"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-17"},{"lineNumber":34,"author":{"gitId":"meenulekha"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-17"},{"lineNumber":35,"author":{"gitId":"meenulekha"},"content":"        String initialGreeting \u003d \"Hello! I\u0027m Leo\\nWhat can I do for you?\";","lastModifiedDate":"2024-02-17"},{"lineNumber":36,"author":{"gitId":"meenulekha"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-17"},{"lineNumber":37,"author":{"gitId":"meenulekha"},"content":"                DialogBox.getDukeDialog(initialGreeting, dukeImage)","lastModifiedDate":"2024-02-17"},{"lineNumber":38,"author":{"gitId":"meenulekha"},"content":"        );","lastModifiedDate":"2024-02-17"},{"lineNumber":39,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":40,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":41,"author":{"gitId":"meenulekha"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2024-02-17"},{"lineNumber":42,"author":{"gitId":"meenulekha"},"content":"        duke \u003d d;","lastModifiedDate":"2024-02-17"},{"lineNumber":43,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":44,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":45,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":46,"author":{"gitId":"meenulekha"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-17"},{"lineNumber":47,"author":{"gitId":"meenulekha"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-17"},{"lineNumber":48,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":49,"author":{"gitId":"meenulekha"},"content":"    @FXML","lastModifiedDate":"2024-02-17"},{"lineNumber":50,"author":{"gitId":"meenulekha"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-17"},{"lineNumber":51,"author":{"gitId":"meenulekha"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-17"},{"lineNumber":52,"author":{"gitId":"meenulekha"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2024-02-17"},{"lineNumber":53,"author":{"gitId":"meenulekha"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-17"},{"lineNumber":54,"author":{"gitId":"meenulekha"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-17"},{"lineNumber":55,"author":{"gitId":"meenulekha"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2024-02-17"},{"lineNumber":56,"author":{"gitId":"meenulekha"},"content":"        );","lastModifiedDate":"2024-02-17"},{"lineNumber":57,"author":{"gitId":"meenulekha"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-17"},{"lineNumber":58,"author":{"gitId":"meenulekha"},"content":"        if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2024-02-17"},{"lineNumber":59,"author":{"gitId":"meenulekha"},"content":"            Platform.exit();","lastModifiedDate":"2024-02-17"},{"lineNumber":60,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":61,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":62,"author":{"gitId":"meenulekha"},"content":"}","lastModifiedDate":"2024-02-17"},{"lineNumber":63,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-17"}],"authorContributionMap":{"meenulekha":63}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"meenulekha"},"content":"import GUI.Main;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"meenulekha"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"meenulekha"},"content":"//import GUI.Main;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"meenulekha"},"content":"/**","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"meenulekha"},"content":" * The Launcher class serves as the entry point for launching the Duke application.","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"meenulekha"},"content":" * It contains the main method, which invokes the Application. launch method","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"meenulekha"},"content":" * to start the JavaFX application represented by the Duke class.","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"meenulekha"},"content":" */","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"meenulekha"},"content":"public class Launcher {","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"meenulekha"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"meenulekha"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"meenulekha"},"content":"}","lastModifiedDate":"2024-02-17"}],"authorContributionMap":{"meenulekha":16}},{"path":"src/main/java/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"meenulekha"},"content":"T |  0 | do homework","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"meenulekha"},"content":"D |  0 | assignment2 | 2024-03-25","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"meenulekha"},"content":"E |  0 | school | 2025-12-25 | 2026-12-27","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"meenulekha":3}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"meenulekha"},"content":"package duke;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"meenulekha"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"meenulekha"},"content":"/**","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"meenulekha"},"content":" * Represents a task with a deadline in the task list.","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"meenulekha"},"content":" * Subclass of the Task class.","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"meenulekha"},"content":" */","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"meenulekha"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"meenulekha"},"content":"     * The deadline date for this task.","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"meenulekha"},"content":"    protected LocalDate by;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"meenulekha"},"content":"     * Constructs a Deadline object with the given description and deadline date.","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"meenulekha"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"meenulekha"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"meenulekha"},"content":"     * @param by          The deadline date of the task.","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"meenulekha"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"meenulekha"},"content":"        super(description, Task.TaskType.DEADLINE);","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"meenulekha"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"meenulekha"},"content":"     * Returns a string representation of the Deadline object.","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"meenulekha"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"meenulekha"},"content":"     * @return A string representation of the Deadline object.","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"meenulekha"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"meenulekha"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"meenulekha"},"content":"     * Returns the type of the task (deadline).","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"meenulekha"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":36,"author":{"gitId":"meenulekha"},"content":"     * @return The type of the task.","lastModifiedDate":"2024-02-10"},{"lineNumber":37,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":38,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"meenulekha"},"content":"    public String getType() {","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"meenulekha"},"content":"        return \"D\";","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":43,"author":{"gitId":"meenulekha"},"content":"     * Returns a formatted string for writing the Deadline object to a file.","lastModifiedDate":"2024-02-10"},{"lineNumber":44,"author":{"gitId":"meenulekha"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":45,"author":{"gitId":"meenulekha"},"content":"     * @return A formatted string for writing the Deadline object to a file.","lastModifiedDate":"2024-02-10"},{"lineNumber":46,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":47,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"meenulekha"},"content":"    public String toFileString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"meenulekha"},"content":"        return String.format(\"%s |  %d | %s | %s\", getType(), isDone ? 1 : 0 , description, by);","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-02-18"},{"lineNumber":52,"author":{"gitId":"meenulekha"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2024-02-18"},{"lineNumber":53,"author":{"gitId":"meenulekha"},"content":"        return by;","lastModifiedDate":"2024-02-18"},{"lineNumber":54,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":55,"author":{"gitId":"meenulekha"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"meenulekha":55}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"meenulekha"},"content":"package duke;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"meenulekha"},"content":"//import java.awt.*;","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"meenulekha"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"meenulekha"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"meenulekha"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"meenulekha"},"content":"import GUI.DialogBox;","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"meenulekha"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"meenulekha"},"content":"import javafx.application.Platform;","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"meenulekha"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"meenulekha"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"meenulekha"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"meenulekha"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"meenulekha"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"meenulekha"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"meenulekha"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-18"},{"lineNumber":17,"author":{"gitId":"meenulekha"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"meenulekha"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"meenulekha"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"meenulekha"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":23,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"meenulekha"},"content":"/**","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"meenulekha"},"content":" * Represents the main class for the Duke chatbot application.","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"meenulekha"},"content":" * Duke handles user input, manages tasks, and interacts with the user through a command-line interface.","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"meenulekha"},"content":" */","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"meenulekha"},"content":"public class Duke extends Application {","lastModifiedDate":"2024-02-17"},{"lineNumber":29,"author":{"gitId":"meenulekha"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/Leo.png\"));","lastModifiedDate":"2024-02-17"},{"lineNumber":30,"author":{"gitId":"meenulekha"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));","lastModifiedDate":"2024-02-18"},{"lineNumber":31,"author":{"gitId":"meenulekha"},"content":"    @FXML","lastModifiedDate":"2024-02-17"},{"lineNumber":32,"author":{"gitId":"meenulekha"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-17"},{"lineNumber":33,"author":{"gitId":"meenulekha"},"content":"    @FXML","lastModifiedDate":"2024-02-17"},{"lineNumber":34,"author":{"gitId":"meenulekha"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-17"},{"lineNumber":35,"author":{"gitId":"meenulekha"},"content":"    @FXML","lastModifiedDate":"2024-02-17"},{"lineNumber":36,"author":{"gitId":"meenulekha"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-17"},{"lineNumber":37,"author":{"gitId":"meenulekha"},"content":"    @FXML","lastModifiedDate":"2024-02-17"},{"lineNumber":38,"author":{"gitId":"meenulekha"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-17"},{"lineNumber":39,"author":{"gitId":"meenulekha"},"content":"    private Scene scene;","lastModifiedDate":"2024-02-17"},{"lineNumber":40,"author":{"gitId":"meenulekha"},"content":"    private boolean hasUserInteracted \u003d false;","lastModifiedDate":"2024-02-17"},{"lineNumber":41,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":42,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":43,"author":{"gitId":"meenulekha"},"content":"     * The file path for storing tasks.","lastModifiedDate":"2024-02-10"},{"lineNumber":44,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":45,"author":{"gitId":"meenulekha"},"content":"    private String FILE_PATH \u003d System.getProperty(\"user.dir\") + \"/src/main/java/data/duke.txt\";","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":47,"author":{"gitId":"meenulekha"},"content":"     * The storage component responsible for reading and writing tasks to a file.","lastModifiedDate":"2024-02-10"},{"lineNumber":48,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":49,"author":{"gitId":"meenulekha"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":51,"author":{"gitId":"meenulekha"},"content":"     * The task list containing the user\u0027s tasks.","lastModifiedDate":"2024-02-10"},{"lineNumber":52,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":53,"author":{"gitId":"meenulekha"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":55,"author":{"gitId":"meenulekha"},"content":"     * The user interface for interacting with the user.","lastModifiedDate":"2024-02-10"},{"lineNumber":56,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":57,"author":{"gitId":"meenulekha"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"meenulekha"},"content":"    public Duke() {","lastModifiedDate":"2024-02-18"},{"lineNumber":59,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":60,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":62,"author":{"gitId":"meenulekha"},"content":"     * Constructs a Duke object with the specified file path.","lastModifiedDate":"2024-02-10"},{"lineNumber":63,"author":{"gitId":"meenulekha"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":64,"author":{"gitId":"meenulekha"},"content":"     * @param filePath The file path for storing tasks.","lastModifiedDate":"2024-02-10"},{"lineNumber":65,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":66,"author":{"gitId":"meenulekha"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"meenulekha"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"meenulekha"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"meenulekha"},"content":"        tasks \u003d new TaskList(filePath);","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":72,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":73,"author":{"gitId":"meenulekha"},"content":"     * Runs the Duke chatbot application, processing user input and executing commands until the user exits.","lastModifiedDate":"2024-02-10"},{"lineNumber":74,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":75,"author":{"gitId":"meenulekha"},"content":"    public void run() {","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"meenulekha"},"content":"        String line \u003d \"------------------------------\";","lastModifiedDate":"2024-01-24"},{"lineNumber":77,"author":{"gitId":"meenulekha"},"content":"        Scanner obj \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-24"},{"lineNumber":78,"author":{"gitId":"meenulekha"},"content":"        System.out.println(\"\\n Hello! I\u0027m Leo\\n\"","lastModifiedDate":"2024-02-11"},{"lineNumber":79,"author":{"gitId":"meenulekha"},"content":"                + \" What can I do for you?\");","lastModifiedDate":"2024-02-11"},{"lineNumber":80,"author":{"gitId":"meenulekha"},"content":"        System.out.println(line);","lastModifiedDate":"2024-01-24"},{"lineNumber":81,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"meenulekha"},"content":"        while (obj.hasNextLine()) {","lastModifiedDate":"2024-01-24"},{"lineNumber":83,"author":{"gitId":"meenulekha"},"content":"            String res \u003d obj.nextLine();","lastModifiedDate":"2024-01-24"},{"lineNumber":84,"author":{"gitId":"meenulekha"},"content":"            if (res.equals(\"bye\")) {","lastModifiedDate":"2024-01-24"},{"lineNumber":85,"author":{"gitId":"meenulekha"},"content":"                System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-01-24"},{"lineNumber":86,"author":{"gitId":"meenulekha"},"content":"                System.out.println(line);","lastModifiedDate":"2024-01-24"},{"lineNumber":87,"author":{"gitId":"meenulekha"},"content":"                return;","lastModifiedDate":"2024-01-24"},{"lineNumber":88,"author":{"gitId":"meenulekha"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":89,"author":{"gitId":"meenulekha"},"content":"            Parser parser \u003d new Parser(res);","lastModifiedDate":"2024-02-02"},{"lineNumber":90,"author":{"gitId":"meenulekha"},"content":"            parser.execute(tasks, ui);","lastModifiedDate":"2024-02-02"},{"lineNumber":91,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":92,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":93,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-02-17"},{"lineNumber":94,"author":{"gitId":"meenulekha"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-17"},{"lineNumber":95,"author":{"gitId":"meenulekha"},"content":"        initialize();","lastModifiedDate":"2024-02-17"},{"lineNumber":96,"author":{"gitId":"meenulekha"},"content":"        Label helloWorld \u003d new Label(\"Hello World!\"); // Creating a new Label control","lastModifiedDate":"2024-02-17"},{"lineNumber":97,"author":{"gitId":"meenulekha"},"content":"        Scene scene \u003d new Scene(helloWorld); // Setting the scene to be our Label","lastModifiedDate":"2024-02-17"},{"lineNumber":98,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":99,"author":{"gitId":"meenulekha"},"content":"        stage.setScene(scene); // Setting the stage to show our screen","lastModifiedDate":"2024-02-17"},{"lineNumber":100,"author":{"gitId":"meenulekha"},"content":"        stage.show(); // Render the stage.","lastModifiedDate":"2024-02-17"},{"lineNumber":101,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":102,"author":{"gitId":"meenulekha"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2024-02-17"},{"lineNumber":103,"author":{"gitId":"meenulekha"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2024-02-17"},{"lineNumber":104,"author":{"gitId":"meenulekha"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2024-02-17"},{"lineNumber":105,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":106,"author":{"gitId":"meenulekha"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2024-02-17"},{"lineNumber":107,"author":{"gitId":"meenulekha"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2024-02-17"},{"lineNumber":108,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":109,"author":{"gitId":"meenulekha"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2024-02-17"},{"lineNumber":110,"author":{"gitId":"meenulekha"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2024-02-17"},{"lineNumber":111,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":112,"author":{"gitId":"meenulekha"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2024-02-17"},{"lineNumber":113,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":114,"author":{"gitId":"meenulekha"},"content":"        stage.setScene(scene);","lastModifiedDate":"2024-02-17"},{"lineNumber":115,"author":{"gitId":"meenulekha"},"content":"        stage.show();","lastModifiedDate":"2024-02-17"},{"lineNumber":116,"author":{"gitId":"meenulekha"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2024-02-17"},{"lineNumber":117,"author":{"gitId":"meenulekha"},"content":"        stage.setResizable(false);","lastModifiedDate":"2024-02-17"},{"lineNumber":118,"author":{"gitId":"meenulekha"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2024-02-17"},{"lineNumber":119,"author":{"gitId":"meenulekha"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2024-02-17"},{"lineNumber":120,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":121,"author":{"gitId":"meenulekha"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2024-02-17"},{"lineNumber":122,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":123,"author":{"gitId":"meenulekha"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2024-02-17"},{"lineNumber":124,"author":{"gitId":"meenulekha"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2024-02-17"},{"lineNumber":125,"author":{"gitId":"meenulekha"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2024-02-17"},{"lineNumber":126,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":127,"author":{"gitId":"meenulekha"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2024-02-17"},{"lineNumber":128,"author":{"gitId":"meenulekha"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2024-02-17"},{"lineNumber":129,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":130,"author":{"gitId":"meenulekha"},"content":"        //You will need to import `javafx.scene.layout.Region` for this.","lastModifiedDate":"2024-02-17"},{"lineNumber":131,"author":{"gitId":"meenulekha"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2024-02-17"},{"lineNumber":132,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":133,"author":{"gitId":"meenulekha"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2024-02-17"},{"lineNumber":134,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":135,"author":{"gitId":"meenulekha"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2024-02-17"},{"lineNumber":136,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":137,"author":{"gitId":"meenulekha"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2024-02-17"},{"lineNumber":138,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":139,"author":{"gitId":"meenulekha"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2024-02-17"},{"lineNumber":140,"author":{"gitId":"meenulekha"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2024-02-17"},{"lineNumber":141,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":142,"author":{"gitId":"meenulekha"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2024-02-17"},{"lineNumber":143,"author":{"gitId":"meenulekha"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2024-02-17"},{"lineNumber":144,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":145,"author":{"gitId":"meenulekha"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2024-02-17"},{"lineNumber":146,"author":{"gitId":"meenulekha"},"content":"            handleUserInput();","lastModifiedDate":"2024-02-17"},{"lineNumber":147,"author":{"gitId":"meenulekha"},"content":"        });","lastModifiedDate":"2024-02-17"},{"lineNumber":148,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":149,"author":{"gitId":"meenulekha"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2024-02-17"},{"lineNumber":150,"author":{"gitId":"meenulekha"},"content":"            handleUserInput();","lastModifiedDate":"2024-02-17"},{"lineNumber":151,"author":{"gitId":"meenulekha"},"content":"        });","lastModifiedDate":"2024-02-17"},{"lineNumber":152,"author":{"gitId":"meenulekha"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2024-02-17"},{"lineNumber":153,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":154,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":155,"author":{"gitId":"meenulekha"},"content":"    private Label getDialogLabel(String text) {","lastModifiedDate":"2024-02-17"},{"lineNumber":156,"author":{"gitId":"meenulekha"},"content":"        // You will need to import `javafx.scene.control.Label`.","lastModifiedDate":"2024-02-17"},{"lineNumber":157,"author":{"gitId":"meenulekha"},"content":"        Label textToAdd \u003d new Label(text);","lastModifiedDate":"2024-02-17"},{"lineNumber":158,"author":{"gitId":"meenulekha"},"content":"        textToAdd.setWrapText(true);","lastModifiedDate":"2024-02-17"},{"lineNumber":159,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":160,"author":{"gitId":"meenulekha"},"content":"        return textToAdd;","lastModifiedDate":"2024-02-17"},{"lineNumber":161,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":162,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":163,"author":{"gitId":"meenulekha"},"content":"     * Handles the user\u0027s input by displaying it in the dialog container and showing Duke\u0027s response.","lastModifiedDate":"2024-02-17"},{"lineNumber":164,"author":{"gitId":"meenulekha"},"content":"     * Clears the user input after processing.","lastModifiedDate":"2024-02-17"},{"lineNumber":165,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":166,"author":{"gitId":"meenulekha"},"content":"    @FXML","lastModifiedDate":"2024-02-17"},{"lineNumber":167,"author":{"gitId":"meenulekha"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-17"},{"lineNumber":168,"author":{"gitId":"meenulekha"},"content":"        Label userText \u003d new Label(userInput.getText());","lastModifiedDate":"2024-02-17"},{"lineNumber":169,"author":{"gitId":"meenulekha"},"content":"        Label dukeText \u003d new Label(getResponse(userInput.getText()));","lastModifiedDate":"2024-02-17"},{"lineNumber":170,"author":{"gitId":"meenulekha"},"content":"        String uText \u003d userInput.getText();","lastModifiedDate":"2024-02-17"},{"lineNumber":171,"author":{"gitId":"meenulekha"},"content":"        String dText \u003d getResponse(userInput.getText());","lastModifiedDate":"2024-02-17"},{"lineNumber":172,"author":{"gitId":"meenulekha"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-17"},{"lineNumber":173,"author":{"gitId":"meenulekha"},"content":"                DialogBox.getUserDialog(uText, user),","lastModifiedDate":"2024-02-17"},{"lineNumber":174,"author":{"gitId":"meenulekha"},"content":"                DialogBox.getDukeDialog(dText, duke)","lastModifiedDate":"2024-02-17"},{"lineNumber":175,"author":{"gitId":"meenulekha"},"content":"        );","lastModifiedDate":"2024-02-17"},{"lineNumber":176,"author":{"gitId":"meenulekha"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-17"},{"lineNumber":177,"author":{"gitId":"meenulekha"},"content":"        if (uText.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2024-02-17"},{"lineNumber":178,"author":{"gitId":"meenulekha"},"content":"            Platform.exit();","lastModifiedDate":"2024-02-17"},{"lineNumber":179,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":180,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":181,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":182,"author":{"gitId":"meenulekha"},"content":"     * Gets the response generated by the chatbot for the given user input.","lastModifiedDate":"2024-02-17"},{"lineNumber":183,"author":{"gitId":"meenulekha"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":184,"author":{"gitId":"meenulekha"},"content":"     * @param input The user input.","lastModifiedDate":"2024-02-17"},{"lineNumber":185,"author":{"gitId":"meenulekha"},"content":"     * @return The chatbot\u0027s response.","lastModifiedDate":"2024-02-17"},{"lineNumber":186,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":187,"author":{"gitId":"meenulekha"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-02-17"},{"lineNumber":188,"author":{"gitId":"meenulekha"},"content":"        return processUserInput(input);","lastModifiedDate":"2024-02-17"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":190,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":191,"author":{"gitId":"meenulekha"},"content":"     * Processes the user input, executes corresponding actions, and returns the chatbot\u0027s response.","lastModifiedDate":"2024-02-17"},{"lineNumber":192,"author":{"gitId":"meenulekha"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":193,"author":{"gitId":"meenulekha"},"content":"     * @param input The user input.","lastModifiedDate":"2024-02-17"},{"lineNumber":194,"author":{"gitId":"meenulekha"},"content":"     * @return The chatbot\u0027s response.","lastModifiedDate":"2024-02-17"},{"lineNumber":195,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":196,"author":{"gitId":"meenulekha"},"content":"    private String processUserInput(String input) {","lastModifiedDate":"2024-02-17"},{"lineNumber":197,"author":{"gitId":"meenulekha"},"content":"        if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2024-02-17"},{"lineNumber":198,"author":{"gitId":"meenulekha"},"content":"            Platform.runLater(() -\u003e {","lastModifiedDate":"2024-02-17"},{"lineNumber":199,"author":{"gitId":"meenulekha"},"content":"                Stage stage \u003d (Stage) userInput.getScene().getWindow();","lastModifiedDate":"2024-02-17"},{"lineNumber":200,"author":{"gitId":"meenulekha"},"content":"                stage.close();","lastModifiedDate":"2024-02-17"},{"lineNumber":201,"author":{"gitId":"meenulekha"},"content":"                //Platform.exit();","lastModifiedDate":"2024-02-17"},{"lineNumber":202,"author":{"gitId":"meenulekha"},"content":"            });","lastModifiedDate":"2024-02-17"},{"lineNumber":203,"author":{"gitId":"meenulekha"},"content":"            return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2024-02-17"},{"lineNumber":204,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":205,"author":{"gitId":"meenulekha"},"content":"        Parser parser \u003d new Parser(input);","lastModifiedDate":"2024-02-17"},{"lineNumber":206,"author":{"gitId":"meenulekha"},"content":"        ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-02-17"},{"lineNumber":207,"author":{"gitId":"meenulekha"},"content":"        PrintStream printStream \u003d new PrintStream(outputStream);","lastModifiedDate":"2024-02-17"},{"lineNumber":208,"author":{"gitId":"meenulekha"},"content":"        PrintStream originalOut \u003d System.out;","lastModifiedDate":"2024-02-17"},{"lineNumber":209,"author":{"gitId":"meenulekha"},"content":"        System.setOut(printStream);","lastModifiedDate":"2024-02-17"},{"lineNumber":210,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":211,"author":{"gitId":"meenulekha"},"content":"        try {","lastModifiedDate":"2024-02-17"},{"lineNumber":212,"author":{"gitId":"meenulekha"},"content":"            parser.execute(tasks, ui);","lastModifiedDate":"2024-02-17"},{"lineNumber":213,"author":{"gitId":"meenulekha"},"content":"        } finally {","lastModifiedDate":"2024-02-17"},{"lineNumber":214,"author":{"gitId":"meenulekha"},"content":"            System.setOut(originalOut);","lastModifiedDate":"2024-02-17"},{"lineNumber":215,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":216,"author":{"gitId":"meenulekha"},"content":"        String response \u003d outputStream.toString();","lastModifiedDate":"2024-02-17"},{"lineNumber":217,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":218,"author":{"gitId":"meenulekha"},"content":"        response \u003d response.trim();","lastModifiedDate":"2024-02-17"},{"lineNumber":219,"author":{"gitId":"meenulekha"},"content":"        return response;","lastModifiedDate":"2024-02-17"},{"lineNumber":220,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":221,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":222,"author":{"gitId":"meenulekha"},"content":"     * Initializes the chatbot by displaying an initial greeting in the dialog container.","lastModifiedDate":"2024-02-17"},{"lineNumber":223,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":224,"author":{"gitId":"meenulekha"},"content":"    private void initialize() {","lastModifiedDate":"2024-02-17"},{"lineNumber":225,"author":{"gitId":"meenulekha"},"content":"        String dukeGreeting \u003d getResponse(\"\");","lastModifiedDate":"2024-02-17"},{"lineNumber":226,"author":{"gitId":"meenulekha"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(dukeGreeting, duke));","lastModifiedDate":"2024-02-17"},{"lineNumber":227,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":228,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":229,"author":{"gitId":"meenulekha"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-02"},{"lineNumber":230,"author":{"gitId":"meenulekha"},"content":"        new Duke(\"data/duke.txt\").run();","lastModifiedDate":"2024-02-17"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":232,"author":{"gitId":"meenulekha"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"meenulekha":230,"-":2}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"meenulekha"},"content":"package duke;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"meenulekha"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"meenulekha"},"content":"import java.util.Date;","lastModifiedDate":"2024-02-18"},{"lineNumber":5,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":6,"author":{"gitId":"meenulekha"},"content":"/**","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"meenulekha"},"content":" * Represents a task that is an event in the task list.","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"meenulekha"},"content":" * Subclass of the Task class.","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"meenulekha"},"content":" */","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"meenulekha"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"meenulekha"},"content":"     * The starting date of the event.","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"meenulekha"},"content":"    protected LocalDate from;","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"meenulekha"},"content":"     * The ending date of the event.","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"meenulekha"},"content":"    protected LocalDate to;","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"meenulekha"},"content":"     * Constructs an Event object with the given description and event duration.","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"meenulekha"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"meenulekha"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"meenulekha"},"content":"     * @param from        The starting date of the event.","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"meenulekha"},"content":"     * @param to          The ending date of the event.","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"meenulekha"},"content":"    public Event(String description, LocalDate from, LocalDate to) {","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"meenulekha"},"content":"        super(description, Task.TaskType.EVENT);","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"meenulekha"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"meenulekha"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"meenulekha"},"content":"     * Returns a string representation of the Event object.","lastModifiedDate":"2024-02-10"},{"lineNumber":33,"author":{"gitId":"meenulekha"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"meenulekha"},"content":"     * @return A string representation of the Event object.","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":36,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"meenulekha"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"meenulekha"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":41,"author":{"gitId":"meenulekha"},"content":"     * Returns the type of the task (event).","lastModifiedDate":"2024-02-10"},{"lineNumber":42,"author":{"gitId":"meenulekha"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":43,"author":{"gitId":"meenulekha"},"content":"     * @return The type of the task.","lastModifiedDate":"2024-02-10"},{"lineNumber":44,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":45,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"meenulekha"},"content":"    public String getType() {","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"meenulekha"},"content":"        return \"E\";","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":50,"author":{"gitId":"meenulekha"},"content":"     * Returns a formatted string for writing the Event object to a file.","lastModifiedDate":"2024-02-10"},{"lineNumber":51,"author":{"gitId":"meenulekha"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":52,"author":{"gitId":"meenulekha"},"content":"     * @return A formatted string for writing the Event object to a file.","lastModifiedDate":"2024-02-10"},{"lineNumber":53,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":54,"author":{"gitId":"meenulekha"},"content":"    public String toFileString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"meenulekha"},"content":"        return String.format(\"%s |  %d | %s | %s | %s\", getType(), isDone ? 1 : 0, description, from, to);","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-02-18"},{"lineNumber":58,"author":{"gitId":"meenulekha"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2024-02-18"},{"lineNumber":59,"author":{"gitId":"meenulekha"},"content":"        return from;","lastModifiedDate":"2024-02-18"},{"lineNumber":60,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":61,"author":{"gitId":"meenulekha"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"meenulekha":61}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"meenulekha"},"content":"package duke;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"meenulekha"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"meenulekha"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"meenulekha"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"meenulekha"},"content":"/**","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"meenulekha"},"content":" * Parses user input and executes corresponding actions in the Duke application.","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"meenulekha"},"content":" */","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"meenulekha"},"content":"public class Parser {","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"meenulekha"},"content":"     * The user input to be parsed and executed.","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"meenulekha"},"content":"    private String input;","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"meenulekha"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"meenulekha"},"content":"     * Constructs a Parser object with the given user input.","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"meenulekha"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"meenulekha"},"content":"     * @param input The user input to be parsed and executed.","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"meenulekha"},"content":"    public Parser(String input) {","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"meenulekha"},"content":"        assert input !\u003d null : \"Input cannot be null\";","lastModifiedDate":"2024-02-18"},{"lineNumber":24,"author":{"gitId":"meenulekha"},"content":"        this.input \u003d input;","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"meenulekha"},"content":"     * Executes the corresponding action based on the parsed user input.","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"meenulekha"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"meenulekha"},"content":"     * @param tasks The task list to perform actions on.","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"meenulekha"},"content":"     * @param ui    The user interface to interact with the user.","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"meenulekha"},"content":"    public void execute(TaskList tasks, Ui ui) {","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"meenulekha"},"content":"        String line \u003d \"------------------------------\";","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"meenulekha"},"content":"        String[] elems \u003d input.split(\" \", 2);","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"meenulekha"},"content":"        String action \u003d elems[0];","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"meenulekha"},"content":"        String[] dateFormats \u003d {\"dd/MM/yyyy\", \"MMM dd yyyy\"};","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"meenulekha"},"content":"        int taskCount \u003d 0;","lastModifiedDate":"2024-02-18"},{"lineNumber":38,"author":{"gitId":"meenulekha"},"content":"        while (tasks.getTask(taskCount) !\u003d null) {","lastModifiedDate":"2024-02-18"},{"lineNumber":39,"author":{"gitId":"meenulekha"},"content":"            taskCount++;","lastModifiedDate":"2024-02-18"},{"lineNumber":40,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"meenulekha"},"content":"        switch (action) {","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"meenulekha"},"content":"        case \"list\":","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"meenulekha"},"content":"            ui.printList(tasks, taskCount);","lastModifiedDate":"2024-02-18"},{"lineNumber":45,"author":{"gitId":"meenulekha"},"content":"            break;","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"meenulekha"},"content":"        case \"bye\":","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"meenulekha"},"content":"            ui.printMessage(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-02-17"},{"lineNumber":48,"author":{"gitId":"meenulekha"},"content":"            ui.printMessage(line);","lastModifiedDate":"2024-02-17"},{"lineNumber":49,"author":{"gitId":"meenulekha"},"content":"            break;","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"meenulekha"},"content":"        case \"mark\":","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"meenulekha"},"content":"            handleMark(tasks, elems[1], action, elems);","lastModifiedDate":"2024-02-18"},{"lineNumber":52,"author":{"gitId":"meenulekha"},"content":"            break;","lastModifiedDate":"2024-02-18"},{"lineNumber":53,"author":{"gitId":"meenulekha"},"content":"        case \"unmark\":","lastModifiedDate":"2024-02-18"},{"lineNumber":54,"author":{"gitId":"meenulekha"},"content":"            handleUnmark(tasks, elems[1], action, elems);","lastModifiedDate":"2024-02-18"},{"lineNumber":55,"author":{"gitId":"meenulekha"},"content":"            break;","lastModifiedDate":"2024-02-18"},{"lineNumber":56,"author":{"gitId":"meenulekha"},"content":"        case \"todo\":","lastModifiedDate":"2024-02-18"},{"lineNumber":57,"author":{"gitId":"meenulekha"},"content":"            handleTodo(tasks, elems[1], ui, elems, line);","lastModifiedDate":"2024-02-18"},{"lineNumber":58,"author":{"gitId":"meenulekha"},"content":"            taskCount++;","lastModifiedDate":"2024-02-18"},{"lineNumber":59,"author":{"gitId":"meenulekha"},"content":"            break;","lastModifiedDate":"2024-02-18"},{"lineNumber":60,"author":{"gitId":"meenulekha"},"content":"        case \"deadline\":","lastModifiedDate":"2024-02-18"},{"lineNumber":61,"author":{"gitId":"meenulekha"},"content":"            handleDeadline(tasks, elems[1], ui, elems, dateFormats, line);","lastModifiedDate":"2024-02-18"},{"lineNumber":62,"author":{"gitId":"meenulekha"},"content":"            taskCount++;","lastModifiedDate":"2024-02-18"},{"lineNumber":63,"author":{"gitId":"meenulekha"},"content":"            break;","lastModifiedDate":"2024-02-18"},{"lineNumber":64,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":65,"author":{"gitId":"meenulekha"},"content":"        case \"event\":","lastModifiedDate":"2024-02-18"},{"lineNumber":66,"author":{"gitId":"meenulekha"},"content":"            handleEvent(tasks, elems[1], ui, dateFormats, elems, line);","lastModifiedDate":"2024-02-18"},{"lineNumber":67,"author":{"gitId":"meenulekha"},"content":"            taskCount++;","lastModifiedDate":"2024-02-18"},{"lineNumber":68,"author":{"gitId":"meenulekha"},"content":"            break;","lastModifiedDate":"2024-02-18"},{"lineNumber":69,"author":{"gitId":"meenulekha"},"content":"        case \"delete\":","lastModifiedDate":"2024-02-18"},{"lineNumber":70,"author":{"gitId":"meenulekha"},"content":"            handleDelete(tasks, elems[1], ui, taskCount, elems, line);","lastModifiedDate":"2024-02-18"},{"lineNumber":71,"author":{"gitId":"meenulekha"},"content":"            taskCount--;","lastModifiedDate":"2024-02-18"},{"lineNumber":72,"author":{"gitId":"meenulekha"},"content":"            break;","lastModifiedDate":"2024-02-18"},{"lineNumber":73,"author":{"gitId":"meenulekha"},"content":"        case \"find\":","lastModifiedDate":"2024-02-18"},{"lineNumber":74,"author":{"gitId":"meenulekha"},"content":"            handleFind(tasks, elems[1].toLowerCase(), ui, elems, line);","lastModifiedDate":"2024-02-18"},{"lineNumber":75,"author":{"gitId":"meenulekha"},"content":"            break;","lastModifiedDate":"2024-02-18"},{"lineNumber":76,"author":{"gitId":"meenulekha"},"content":"        default:","lastModifiedDate":"2024-02-18"},{"lineNumber":77,"author":{"gitId":"meenulekha"},"content":"            ui.printMessage(\"Sorry what??, I did not get that!\");","lastModifiedDate":"2024-02-18"},{"lineNumber":78,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":79,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":80,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":81,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":82,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":83,"author":{"gitId":"meenulekha"},"content":"    private void handleMark(TaskList tasks, String description, String action, String[] elems) {","lastModifiedDate":"2024-02-18"},{"lineNumber":84,"author":{"gitId":"meenulekha"},"content":"        assert tasks !\u003d null : \"TaskList cannot be null\";","lastModifiedDate":"2024-02-18"},{"lineNumber":85,"author":{"gitId":"meenulekha"},"content":"        assert elems !\u003d null \u0026\u0026 elems.length \u003e\u003d 2 : \"Invalid arguments for marking task\";","lastModifiedDate":"2024-02-18"},{"lineNumber":86,"author":{"gitId":"meenulekha"},"content":"        for (int k \u003d 0; k \u003c tasks.size(); k++) {","lastModifiedDate":"2024-02-18"},{"lineNumber":87,"author":{"gitId":"meenulekha"},"content":"            if (tasks.getTask(k) !\u003d null) {","lastModifiedDate":"2024-02-02"},{"lineNumber":88,"author":{"gitId":"meenulekha"},"content":"                Task t \u003d tasks.getTask(k);","lastModifiedDate":"2024-02-02"},{"lineNumber":89,"author":{"gitId":"meenulekha"},"content":"                String str \u003d t.description;","lastModifiedDate":"2024-02-02"},{"lineNumber":90,"author":{"gitId":"meenulekha"},"content":"                if (str.equals(elems[1])) {","lastModifiedDate":"2024-02-02"},{"lineNumber":91,"author":{"gitId":"meenulekha"},"content":"                    t.markAsDone();","lastModifiedDate":"2024-02-02"},{"lineNumber":92,"author":{"gitId":"meenulekha"},"content":"                }","lastModifiedDate":"2024-02-02"},{"lineNumber":93,"author":{"gitId":"meenulekha"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":94,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":95,"author":{"gitId":"meenulekha"},"content":"        ui.printMessage(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-02-17"},{"lineNumber":96,"author":{"gitId":"meenulekha"},"content":"        ui.printMessage(\"[X] \" + elems[1]);","lastModifiedDate":"2024-02-17"},{"lineNumber":97,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":98,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":99,"author":{"gitId":"meenulekha"},"content":"    private void handleUnmark(TaskList tasks, String description, String action, String[] elems) {","lastModifiedDate":"2024-02-18"},{"lineNumber":100,"author":{"gitId":"meenulekha"},"content":"        for (int k \u003d 0; k \u003c tasks.size(); k++) {","lastModifiedDate":"2024-02-18"},{"lineNumber":101,"author":{"gitId":"meenulekha"},"content":"            if (tasks.getTask(k) !\u003d null) {","lastModifiedDate":"2024-02-02"},{"lineNumber":102,"author":{"gitId":"meenulekha"},"content":"                Task t \u003d tasks.getTask(k);","lastModifiedDate":"2024-02-02"},{"lineNumber":103,"author":{"gitId":"meenulekha"},"content":"                String str \u003d t.description;","lastModifiedDate":"2024-02-02"},{"lineNumber":104,"author":{"gitId":"meenulekha"},"content":"                if (str.equals(elems[1])) {","lastModifiedDate":"2024-02-02"},{"lineNumber":105,"author":{"gitId":"meenulekha"},"content":"                    t.unMark();","lastModifiedDate":"2024-02-02"},{"lineNumber":106,"author":{"gitId":"meenulekha"},"content":"                }","lastModifiedDate":"2024-02-02"},{"lineNumber":107,"author":{"gitId":"meenulekha"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":108,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":109,"author":{"gitId":"meenulekha"},"content":"        ui.printMessage(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-02-17"},{"lineNumber":110,"author":{"gitId":"meenulekha"},"content":"        ui.printMessage(\"[ ] \" + elems[1] );","lastModifiedDate":"2024-02-17"},{"lineNumber":111,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":112,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":113,"author":{"gitId":"meenulekha"},"content":"    private void handleTodo(TaskList tasks, String description, Ui ui, String[] elems, String line) {","lastModifiedDate":"2024-02-18"},{"lineNumber":114,"author":{"gitId":"meenulekha"},"content":"        Task item \u003d new ToDo(elems[1]);","lastModifiedDate":"2024-02-02"},{"lineNumber":115,"author":{"gitId":"meenulekha"},"content":"        ui.printMessage(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-02-17"},{"lineNumber":116,"author":{"gitId":"meenulekha"},"content":"        ui.printMessage(item.toString());","lastModifiedDate":"2024-02-17"},{"lineNumber":117,"author":{"gitId":"meenulekha"},"content":"        tasks.addTask(item);","lastModifiedDate":"2024-02-02"},{"lineNumber":118,"author":{"gitId":"meenulekha"},"content":"        ui.printMessage(\"Now you have \" + tasks.size() + \" task(s) in your list!\");","lastModifiedDate":"2024-02-18"},{"lineNumber":119,"author":{"gitId":"meenulekha"},"content":"        ui.printMessage(line);","lastModifiedDate":"2024-02-17"},{"lineNumber":120,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":121,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":122,"author":{"gitId":"meenulekha"},"content":"    private void handleDeadline(TaskList tasks, String description, Ui ui, String[] elems,","lastModifiedDate":"2024-02-18"},{"lineNumber":123,"author":{"gitId":"meenulekha"},"content":"                                String[] dateFormats, String line) {","lastModifiedDate":"2024-02-18"},{"lineNumber":124,"author":{"gitId":"meenulekha"},"content":"        String[] by \u003d elems[1].split(\"/by \", 2);","lastModifiedDate":"2024-02-02"},{"lineNumber":125,"author":{"gitId":"meenulekha"},"content":"        String[] dateTime \u003d by[1].split(\" \", 2);","lastModifiedDate":"2024-02-02"},{"lineNumber":126,"author":{"gitId":"meenulekha"},"content":"        LocalDate deadlineDate \u003d null;","lastModifiedDate":"2024-02-02"},{"lineNumber":127,"author":{"gitId":"meenulekha"},"content":"        for (String format : dateFormats) {","lastModifiedDate":"2024-02-02"},{"lineNumber":128,"author":{"gitId":"meenulekha"},"content":"            try {","lastModifiedDate":"2024-02-02"},{"lineNumber":129,"author":{"gitId":"meenulekha"},"content":"                deadlineDate \u003d LocalDate.parse(by[1].trim(),","lastModifiedDate":"2024-02-02"},{"lineNumber":130,"author":{"gitId":"meenulekha"},"content":"                        DateTimeFormatter.ofPattern(format));","lastModifiedDate":"2024-02-02"},{"lineNumber":131,"author":{"gitId":"meenulekha"},"content":"                break;","lastModifiedDate":"2024-02-02"},{"lineNumber":132,"author":{"gitId":"meenulekha"},"content":"            } catch (DateTimeParseException ignored) {","lastModifiedDate":"2024-02-02"},{"lineNumber":133,"author":{"gitId":"meenulekha"},"content":"                ;","lastModifiedDate":"2024-02-17"},{"lineNumber":134,"author":{"gitId":"meenulekha"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":135,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":136,"author":{"gitId":"meenulekha"},"content":"        if (deadlineDate !\u003d null) {","lastModifiedDate":"2024-02-02"},{"lineNumber":137,"author":{"gitId":"meenulekha"},"content":"            Task dline \u003d new Deadline(by[0], deadlineDate);","lastModifiedDate":"2024-02-02"},{"lineNumber":138,"author":{"gitId":"meenulekha"},"content":"            ui.printMessage(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-02-17"},{"lineNumber":139,"author":{"gitId":"meenulekha"},"content":"            ui.printMessage(dline.toString());","lastModifiedDate":"2024-02-17"},{"lineNumber":140,"author":{"gitId":"meenulekha"},"content":"            tasks.addTask(dline);","lastModifiedDate":"2024-02-02"},{"lineNumber":141,"author":{"gitId":"meenulekha"},"content":"            ui.printMessage(\"Now you have \" + tasks.size() + \" task(s) in your list!\");","lastModifiedDate":"2024-02-18"},{"lineNumber":142,"author":{"gitId":"meenulekha"},"content":"        } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":143,"author":{"gitId":"meenulekha"},"content":"            System.out.println(\"Invalid date and time format -_-\");","lastModifiedDate":"2024-02-02"},{"lineNumber":144,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":145,"author":{"gitId":"meenulekha"},"content":"        System.out.println(line);","lastModifiedDate":"2024-02-02"},{"lineNumber":146,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":147,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":148,"author":{"gitId":"meenulekha"},"content":"    private void handleEvent(TaskList tasks, String description, Ui ui, String[] dateFormats,","lastModifiedDate":"2024-02-18"},{"lineNumber":149,"author":{"gitId":"meenulekha"},"content":"                             String[] elems, String line) {","lastModifiedDate":"2024-02-18"},{"lineNumber":150,"author":{"gitId":"meenulekha"},"content":"        String[] fromto \u003d elems[1].trim().split(\"/from\", 2);","lastModifiedDate":"2024-02-23"},{"lineNumber":151,"author":{"gitId":"meenulekha"},"content":"        String[] from \u003d fromto[1].trim().split(\"\\\\s*/to\\\\s*\", 2);","lastModifiedDate":"2024-02-23"},{"lineNumber":152,"author":{"gitId":"meenulekha"},"content":"        LocalDate fromDate \u003d null;","lastModifiedDate":"2024-02-02"},{"lineNumber":153,"author":{"gitId":"meenulekha"},"content":"        LocalDate toDate \u003d null;","lastModifiedDate":"2024-02-02"},{"lineNumber":154,"author":{"gitId":"meenulekha"},"content":"        for (String format : dateFormats) {","lastModifiedDate":"2024-02-02"},{"lineNumber":155,"author":{"gitId":"meenulekha"},"content":"            try {","lastModifiedDate":"2024-02-02"},{"lineNumber":156,"author":{"gitId":"meenulekha"},"content":"                fromDate \u003d LocalDate.parse(from[0], DateTimeFormatter.ofPattern(format));","lastModifiedDate":"2024-02-23"},{"lineNumber":157,"author":{"gitId":"meenulekha"},"content":"                toDate \u003d LocalDate.parse(from[1], DateTimeFormatter.ofPattern(format));","lastModifiedDate":"2024-02-23"},{"lineNumber":158,"author":{"gitId":"meenulekha"},"content":"                break;","lastModifiedDate":"2024-02-02"},{"lineNumber":159,"author":{"gitId":"meenulekha"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-23"},{"lineNumber":160,"author":{"gitId":"meenulekha"},"content":"                System.out.println(\"Parsing error: \" + e.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":161,"author":{"gitId":"meenulekha"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":162,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":163,"author":{"gitId":"meenulekha"},"content":"        if (toDate !\u003d null \u0026\u0026 fromDate !\u003d null) {","lastModifiedDate":"2024-02-23"},{"lineNumber":164,"author":{"gitId":"meenulekha"},"content":"            Task e \u003d new Event(fromto[0], fromDate, toDate);","lastModifiedDate":"2024-02-02"},{"lineNumber":165,"author":{"gitId":"meenulekha"},"content":"            ui.printMessage(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-02-17"},{"lineNumber":166,"author":{"gitId":"meenulekha"},"content":"            ui.printMessage(e.toString());","lastModifiedDate":"2024-02-17"},{"lineNumber":167,"author":{"gitId":"meenulekha"},"content":"            tasks.addTask(e);","lastModifiedDate":"2024-02-02"},{"lineNumber":168,"author":{"gitId":"meenulekha"},"content":"            ui.printMessage(\"Now you have \" + tasks.size() + \" task(s) in your list!\");","lastModifiedDate":"2024-02-18"},{"lineNumber":169,"author":{"gitId":"meenulekha"},"content":"            ui.printMessage(line);","lastModifiedDate":"2024-02-17"},{"lineNumber":170,"author":{"gitId":"meenulekha"},"content":"        } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":171,"author":{"gitId":"meenulekha"},"content":"            ui.printMessage(\"Invalid date and time format!! -_-\");","lastModifiedDate":"2024-02-23"},{"lineNumber":172,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":173,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":174,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":175,"author":{"gitId":"meenulekha"},"content":"    private void handleDelete(TaskList tasks, String input, Ui ui, int taskCount, String[] elems, String line) {","lastModifiedDate":"2024-02-18"},{"lineNumber":176,"author":{"gitId":"meenulekha"},"content":"        int toDelete \u003d Integer.valueOf(input) - 1;","lastModifiedDate":"2024-02-18"},{"lineNumber":177,"author":{"gitId":"meenulekha"},"content":"        if (toDelete \u003e\u003d 0 \u0026\u0026 toDelete \u003c taskCount) {","lastModifiedDate":"2024-02-18"},{"lineNumber":178,"author":{"gitId":"meenulekha"},"content":"            ui.printMessage(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-02-17"},{"lineNumber":179,"author":{"gitId":"meenulekha"},"content":"            ui.printMessage(tasks.getTask(toDelete).toString());","lastModifiedDate":"2024-02-17"},{"lineNumber":180,"author":{"gitId":"meenulekha"},"content":"            tasks.deleteTask(toDelete);","lastModifiedDate":"2024-02-18"},{"lineNumber":181,"author":{"gitId":"meenulekha"},"content":"            ui.printMessage(\"Now you have \" + tasks.size() + \" task(s) in the list.\");","lastModifiedDate":"2024-02-18"},{"lineNumber":182,"author":{"gitId":"meenulekha"},"content":"        } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":183,"author":{"gitId":"meenulekha"},"content":"            ui.printMessage(\"That is an invalid task to delete sir??\");","lastModifiedDate":"2024-02-17"},{"lineNumber":184,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":185,"author":{"gitId":"meenulekha"},"content":"        ui.printMessage(line);","lastModifiedDate":"2024-02-17"},{"lineNumber":186,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":187,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":188,"author":{"gitId":"meenulekha"},"content":"    private void handleFind(TaskList tasks, String key, Ui ui, String[] elems, String line) {","lastModifiedDate":"2024-02-18"},{"lineNumber":189,"author":{"gitId":"meenulekha"},"content":"        //String key \u003d elems[1].toLowerCase();","lastModifiedDate":"2024-02-18"},{"lineNumber":190,"author":{"gitId":"meenulekha"},"content":"        ui.printMessage(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2024-02-17"},{"lineNumber":191,"author":{"gitId":"meenulekha"},"content":"        int found \u003d 0;","lastModifiedDate":"2024-02-10"},{"lineNumber":192,"author":{"gitId":"meenulekha"},"content":"        for (int k \u003d 0; k \u003c tasks.size(); k++) {","lastModifiedDate":"2024-02-18"},{"lineNumber":193,"author":{"gitId":"meenulekha"},"content":"            Task task \u003d tasks.getTask(k);","lastModifiedDate":"2024-02-10"},{"lineNumber":194,"author":{"gitId":"meenulekha"},"content":"            if (task !\u003d null \u0026\u0026 task.description.toLowerCase().contains(key)) {","lastModifiedDate":"2024-02-10"},{"lineNumber":195,"author":{"gitId":"meenulekha"},"content":"                int nr \u003d found + 1;","lastModifiedDate":"2024-02-10"},{"lineNumber":196,"author":{"gitId":"meenulekha"},"content":"                System.out.println(nr + \".\" + task.toString() + \".\");","lastModifiedDate":"2024-02-10"},{"lineNumber":197,"author":{"gitId":"meenulekha"},"content":"                found++;","lastModifiedDate":"2024-02-10"},{"lineNumber":198,"author":{"gitId":"meenulekha"},"content":"            }","lastModifiedDate":"2024-02-10"},{"lineNumber":199,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":200,"author":{"gitId":"meenulekha"},"content":"        if (found \u003d\u003d 0) {","lastModifiedDate":"2024-02-10"},{"lineNumber":201,"author":{"gitId":"meenulekha"},"content":"            ui.printMessage(\"No matching tasks found.\");","lastModifiedDate":"2024-02-17"},{"lineNumber":202,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":203,"author":{"gitId":"meenulekha"},"content":"        ui.printMessage(line);","lastModifiedDate":"2024-02-17"},{"lineNumber":204,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":205,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":206,"author":{"gitId":"meenulekha"},"content":"}","lastModifiedDate":"2024-02-02"},{"lineNumber":207,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-18"}],"authorContributionMap":{"meenulekha":207}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"meenulekha"},"content":"package duke;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"meenulekha"},"content":"import java.io.*;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"meenulekha"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"meenulekha"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-18"},{"lineNumber":6,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":7,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":8,"author":{"gitId":"meenulekha"},"content":"/**","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"meenulekha"},"content":" * Manages the reading and writing of tasks to a file.","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"meenulekha"},"content":" */","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"meenulekha"},"content":"public class Storage {","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"meenulekha"},"content":"     * The default file path for storing tasks.","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"meenulekha"},"content":"    private String FILE_NAME \u003d \"src/main/java/data/duke.txt\";","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"meenulekha"},"content":"    @SuppressWarnings(\"checkstyle:AbbreviationAsWordInName\")","lastModifiedDate":"2024-02-18"},{"lineNumber":17,"author":{"gitId":"meenulekha"},"content":"    private String FILE_PATH \u003d System.getProperty(\"user.dir\") + File.separator + FILE_NAME;","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"meenulekha"},"content":"     * The actual file path to be used for reading and writing tasks.","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"meenulekha"},"content":"    private String filepath;","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"meenulekha"},"content":"     * Constructs a Storage object with the specified file path.","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"meenulekha"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"meenulekha"},"content":"     * @param filepath The file path to be used for reading and writing tasks.","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"meenulekha"},"content":"    public Storage(String filepath) {","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"meenulekha"},"content":"        assert filepath !\u003d null : \"Filepath cannot be null\";","lastModifiedDate":"2024-02-18"},{"lineNumber":30,"author":{"gitId":"meenulekha"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":33,"author":{"gitId":"meenulekha"},"content":"     * Saves the tasks to the specified file.","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"meenulekha"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"meenulekha"},"content":"     * @param tasks The list of tasks to be saved.","lastModifiedDate":"2024-02-10"},{"lineNumber":36,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":37,"author":{"gitId":"meenulekha"},"content":"    public void saveToFile(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-18"},{"lineNumber":38,"author":{"gitId":"meenulekha"},"content":"        assert tasks !\u003d null : \"Tasks cannot be null\";","lastModifiedDate":"2024-02-18"},{"lineNumber":39,"author":{"gitId":"meenulekha"},"content":"        Collections.sort(tasks, new TaskPriorityComparator());","lastModifiedDate":"2024-02-18"},{"lineNumber":40,"author":{"gitId":"meenulekha"},"content":"        try (PrintWriter writer \u003d new PrintWriter(FILE_PATH)) {","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"meenulekha"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2024-02-18"},{"lineNumber":42,"author":{"gitId":"meenulekha"},"content":"                writer.println(task.toFileString());","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"meenulekha"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"meenulekha"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"meenulekha"},"content":"            System.out.println(\"Could not save tasks to file \" + e.getMessage());","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":49,"author":{"gitId":"meenulekha"},"content":"     * Loads tasks from the specified file.","lastModifiedDate":"2024-02-10"},{"lineNumber":50,"author":{"gitId":"meenulekha"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":51,"author":{"gitId":"meenulekha"},"content":"     * @return The list of tasks loaded from the file.","lastModifiedDate":"2024-02-10"},{"lineNumber":52,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":53,"author":{"gitId":"meenulekha"},"content":"    public ArrayList\u003cTask\u003e loadFromFile() {","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"meenulekha"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"meenulekha"},"content":"        int index \u003d 0;","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"meenulekha"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(filepath))) {","lastModifiedDate":"2024-02-17"},{"lineNumber":57,"author":{"gitId":"meenulekha"},"content":"            String line;","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"meenulekha"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"meenulekha"},"content":"                //adding the task from the file to be read","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"meenulekha"},"content":"                assert tasks !\u003d null : \"Tasks list cannot be null\";","lastModifiedDate":"2024-02-18"},{"lineNumber":61,"author":{"gitId":"meenulekha"},"content":"                tasks.add(Task.fromFileString(line));","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"meenulekha"},"content":"                index++;","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"meenulekha"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"meenulekha"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"meenulekha"},"content":"            System.out.println(\"File not found! Creating new Data File...\");","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"meenulekha"},"content":"            //saveToFile(0, tasks);","lastModifiedDate":"2024-02-18"},{"lineNumber":67,"author":{"gitId":"meenulekha"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"meenulekha"},"content":"            System.out.println(\"Error loading file\" + e.getMessage());","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"meenulekha"},"content":"        return tasks;","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"meenulekha"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"meenulekha":74}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"meenulekha"},"content":"package duke;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"meenulekha"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"meenulekha"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"meenulekha"},"content":"import java.util.Date;","lastModifiedDate":"2024-02-18"},{"lineNumber":6,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"meenulekha"},"content":"/**","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"meenulekha"},"content":" * Represents a task in the task list.","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"meenulekha"},"content":" */","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"meenulekha"},"content":"public class Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"meenulekha"},"content":"     * Enumeration representing the types of tasks.","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"meenulekha"},"content":"    public enum TaskType {","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"meenulekha"},"content":"        TODO,","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"meenulekha"},"content":"        DEADLINE,","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"meenulekha"},"content":"        EVENT","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"meenulekha"},"content":"     * The description of the task.","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"meenulekha"},"content":"    protected String description;","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"meenulekha"},"content":"     * Indicates whether the task is done or not.","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"meenulekha"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"meenulekha"},"content":"     * The type of the task (TODO, DEADLINE, EVENT).","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"meenulekha"},"content":"    protected TaskType taskType;","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"meenulekha"},"content":"     * Constructs a Task object with the given description and task type.","lastModifiedDate":"2024-02-10"},{"lineNumber":33,"author":{"gitId":"meenulekha"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"meenulekha"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"meenulekha"},"content":"     * @param taskType    The type of the task.","lastModifiedDate":"2024-02-10"},{"lineNumber":36,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":37,"author":{"gitId":"meenulekha"},"content":"    public Task(String description, TaskType taskType) {","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"meenulekha"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"meenulekha"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"meenulekha"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":43,"author":{"gitId":"meenulekha"},"content":"     * Returns an icon representing the status of the task (done or not done).","lastModifiedDate":"2024-02-10"},{"lineNumber":44,"author":{"gitId":"meenulekha"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":45,"author":{"gitId":"meenulekha"},"content":"     * @return The status icon (X if done, blank if not done).","lastModifiedDate":"2024-02-10"},{"lineNumber":46,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":47,"author":{"gitId":"meenulekha"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"meenulekha"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":52,"author":{"gitId":"meenulekha"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-02-10"},{"lineNumber":53,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":54,"author":{"gitId":"meenulekha"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":55,"author":{"gitId":"meenulekha"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-25"},{"lineNumber":56,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":57,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":58,"author":{"gitId":"meenulekha"},"content":"     * Unmarks the task (marks as not done).","lastModifiedDate":"2024-02-10"},{"lineNumber":59,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":60,"author":{"gitId":"meenulekha"},"content":"    public void unMark() {","lastModifiedDate":"2024-01-25"},{"lineNumber":61,"author":{"gitId":"meenulekha"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":62,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":63,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":64,"author":{"gitId":"meenulekha"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2024-02-10"},{"lineNumber":65,"author":{"gitId":"meenulekha"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":66,"author":{"gitId":"meenulekha"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2024-02-10"},{"lineNumber":67,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":68,"author":{"gitId":"meenulekha"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":69,"author":{"gitId":"meenulekha"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2024-01-25"},{"lineNumber":70,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":71,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":72,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":73,"author":{"gitId":"meenulekha"},"content":"     * Returns a formatted string for writing the task to a file.","lastModifiedDate":"2024-02-10"},{"lineNumber":74,"author":{"gitId":"meenulekha"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":75,"author":{"gitId":"meenulekha"},"content":"     * @return A formatted string for writing the task to a file.","lastModifiedDate":"2024-02-10"},{"lineNumber":76,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":77,"author":{"gitId":"meenulekha"},"content":"    public String toFileString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"meenulekha"},"content":"        return String.format(\"%s |  %d | %s\", getType(), isDone ? 1 : 0, description);","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":81,"author":{"gitId":"meenulekha"},"content":"     * Creates a Task object from a string representation in a file.","lastModifiedDate":"2024-02-10"},{"lineNumber":82,"author":{"gitId":"meenulekha"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":83,"author":{"gitId":"meenulekha"},"content":"     * @param fileString The string representation of the task in the file.","lastModifiedDate":"2024-02-10"},{"lineNumber":84,"author":{"gitId":"meenulekha"},"content":"     * @return A Task object created from the file string.","lastModifiedDate":"2024-02-10"},{"lineNumber":85,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":86,"author":{"gitId":"meenulekha"},"content":"    public static Task fromFileString(String fileString) {","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"meenulekha"},"content":"        String[] elements \u003d fileString.trim().split(\"\\\\s*\\\\|\\\\s*\");","lastModifiedDate":"2024-02-17"},{"lineNumber":88,"author":{"gitId":"meenulekha"},"content":"        Boolean done \u003d elements.length \u003e 1 \u0026\u0026 Integer.parseInt(elements[1]) \u003d\u003d 1;","lastModifiedDate":"2024-02-17"},{"lineNumber":89,"author":{"gitId":"meenulekha"},"content":"        switch(elements[0]) {","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"meenulekha"},"content":"        case \"T\":","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"meenulekha"},"content":"            if (elements.length \u003c 3) {","lastModifiedDate":"2024-02-17"},{"lineNumber":92,"author":{"gitId":"meenulekha"},"content":"                throw new IllegalArgumentException(\"Invalid task format for ToDo in file\");","lastModifiedDate":"2024-02-17"},{"lineNumber":93,"author":{"gitId":"meenulekha"},"content":"            }","lastModifiedDate":"2024-02-17"},{"lineNumber":94,"author":{"gitId":"meenulekha"},"content":"            ToDo todo \u003d new ToDo((elements[2]));","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"meenulekha"},"content":"            todo.isDone \u003d done;","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"meenulekha"},"content":"            return todo;","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"meenulekha"},"content":"        case \"D\":","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"meenulekha"},"content":"            Deadline dline \u003d null;","lastModifiedDate":"2024-02-01"},{"lineNumber":99,"author":{"gitId":"meenulekha"},"content":"            if (elements.length \u003e\u003d 4) {","lastModifiedDate":"2024-02-01"},{"lineNumber":100,"author":{"gitId":"meenulekha"},"content":"                LocalDate deadlineDate \u003d LocalDate.parse(elements[3], DateTimeFormatter.ISO_DATE);","lastModifiedDate":"2024-02-01"},{"lineNumber":101,"author":{"gitId":"meenulekha"},"content":"                dline \u003d new Deadline(elements[2], deadlineDate);","lastModifiedDate":"2024-02-01"},{"lineNumber":102,"author":{"gitId":"meenulekha"},"content":"                dline.isDone \u003d done;","lastModifiedDate":"2024-02-01"},{"lineNumber":103,"author":{"gitId":"meenulekha"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":104,"author":{"gitId":"meenulekha"},"content":"            return dline;","lastModifiedDate":"2024-02-01"},{"lineNumber":105,"author":{"gitId":"meenulekha"},"content":"        case \"E\":","lastModifiedDate":"2024-02-01"},{"lineNumber":106,"author":{"gitId":"meenulekha"},"content":"            if (elements.length \u003c 5) {","lastModifiedDate":"2024-02-17"},{"lineNumber":107,"author":{"gitId":"meenulekha"},"content":"                throw new IllegalArgumentException(\"Invalid task format for ToDo in file\");","lastModifiedDate":"2024-02-17"},{"lineNumber":108,"author":{"gitId":"meenulekha"},"content":"            }","lastModifiedDate":"2024-02-17"},{"lineNumber":109,"author":{"gitId":"meenulekha"},"content":"            LocalDate fromDate \u003d LocalDate.parse(elements[3], DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":110,"author":{"gitId":"meenulekha"},"content":"            LocalDate toDate \u003d LocalDate.parse(elements[4], DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":111,"author":{"gitId":"meenulekha"},"content":"            Event event \u003d new Event(elements[2], fromDate, toDate);","lastModifiedDate":"2024-02-01"},{"lineNumber":112,"author":{"gitId":"meenulekha"},"content":"            event.isDone \u003d done;","lastModifiedDate":"2024-02-01"},{"lineNumber":113,"author":{"gitId":"meenulekha"},"content":"            return event;","lastModifiedDate":"2024-02-01"},{"lineNumber":114,"author":{"gitId":"meenulekha"},"content":"        default:","lastModifiedDate":"2024-02-01"},{"lineNumber":115,"author":{"gitId":"meenulekha"},"content":"            throw new IllegalArgumentException(\"Invalid task type in file\");","lastModifiedDate":"2024-02-01"},{"lineNumber":116,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":117,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":118,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":119,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":120,"author":{"gitId":"meenulekha"},"content":"     * Returns the type of the task.","lastModifiedDate":"2024-02-10"},{"lineNumber":121,"author":{"gitId":"meenulekha"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":122,"author":{"gitId":"meenulekha"},"content":"     * @return The type of the task.","lastModifiedDate":"2024-02-10"},{"lineNumber":123,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":124,"author":{"gitId":"meenulekha"},"content":"    public String getType() {","lastModifiedDate":"2024-02-01"},{"lineNumber":125,"author":{"gitId":"meenulekha"},"content":"        return \" \";","lastModifiedDate":"2024-02-01"},{"lineNumber":126,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":127,"author":{"gitId":"meenulekha"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2024-02-18"},{"lineNumber":128,"author":{"gitId":"meenulekha"},"content":"        return null;","lastModifiedDate":"2024-02-18"},{"lineNumber":129,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":130,"author":{"gitId":"meenulekha"},"content":"}","lastModifiedDate":"2024-01-25"},{"lineNumber":131,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"meenulekha":131}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"meenulekha"},"content":"package duke;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"meenulekha"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"meenulekha"},"content":"import java.util.List;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"meenulekha"},"content":"/**","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"meenulekha"},"content":" * Represents a list of tasks managed by the Duke application.","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"meenulekha"},"content":" */","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"meenulekha"},"content":"public class TaskList {","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"meenulekha"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"meenulekha"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"meenulekha"},"content":"     * The current number of tasks in the list.","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"meenulekha"},"content":"    private int taskCount \u003d 0;","lastModifiedDate":"2024-02-18"},{"lineNumber":16,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"meenulekha"},"content":"     * Constructs a TaskList object with the specified file path.","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"meenulekha"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"meenulekha"},"content":"     * @param filepath The file path for reading and writing tasks.","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"meenulekha"},"content":"    public TaskList(String filepath) {","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"meenulekha"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"meenulekha"},"content":"        storage \u003d new Storage(filepath);","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"meenulekha"},"content":"        tasks.addAll(storage.loadFromFile());","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"meenulekha"},"content":"     * Adds a task to the task list and saves it to the file.","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"meenulekha"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"meenulekha"},"content":"     * @param task The task to be added.","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"meenulekha"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"meenulekha"},"content":"        tasks.add(task);","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"meenulekha"},"content":"        storage.saveToFile(tasks);","lastModifiedDate":"2024-02-18"},{"lineNumber":35,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":37,"author":{"gitId":"meenulekha"},"content":"     * Deletes a task from the task list at the specified index and saves the updated list to the file.","lastModifiedDate":"2024-02-10"},{"lineNumber":38,"author":{"gitId":"meenulekha"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":39,"author":{"gitId":"meenulekha"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2024-02-10"},{"lineNumber":40,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":41,"author":{"gitId":"meenulekha"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"meenulekha"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size()) {","lastModifiedDate":"2024-02-18"},{"lineNumber":43,"author":{"gitId":"meenulekha"},"content":"            tasks.remove(index);","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"meenulekha"},"content":"            taskCount--;","lastModifiedDate":"2024-02-18"},{"lineNumber":45,"author":{"gitId":"meenulekha"},"content":"            storage.saveToFile(tasks);","lastModifiedDate":"2024-02-18"},{"lineNumber":46,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":49,"author":{"gitId":"meenulekha"},"content":"     * Retrieves the list of tasks.","lastModifiedDate":"2024-02-10"},{"lineNumber":50,"author":{"gitId":"meenulekha"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":51,"author":{"gitId":"meenulekha"},"content":"     * @return The list of tasks.","lastModifiedDate":"2024-02-10"},{"lineNumber":52,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":53,"author":{"gitId":"meenulekha"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"meenulekha"},"content":"        return tasks;","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":57,"author":{"gitId":"meenulekha"},"content":"     * Retrieves a task from the task list at the specified index.","lastModifiedDate":"2024-02-10"},{"lineNumber":58,"author":{"gitId":"meenulekha"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":59,"author":{"gitId":"meenulekha"},"content":"     * @param index The index of the task to be retrieved.","lastModifiedDate":"2024-02-10"},{"lineNumber":60,"author":{"gitId":"meenulekha"},"content":"     * @return The task at the specified index or null if the index is out of bounds.","lastModifiedDate":"2024-02-10"},{"lineNumber":61,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":62,"author":{"gitId":"meenulekha"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"meenulekha"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"meenulekha"},"content":"            return tasks.get(index);","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"meenulekha"},"content":"        } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"meenulekha"},"content":"            return null;","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":70,"author":{"gitId":"meenulekha"},"content":"     * Sets a task at the specified index in the task list.","lastModifiedDate":"2024-02-10"},{"lineNumber":71,"author":{"gitId":"meenulekha"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":72,"author":{"gitId":"meenulekha"},"content":"     * @param index The index where the task should be set.","lastModifiedDate":"2024-02-10"},{"lineNumber":73,"author":{"gitId":"meenulekha"},"content":"     * @param elem  The task to be set at the specified index.","lastModifiedDate":"2024-02-10"},{"lineNumber":74,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":75,"author":{"gitId":"meenulekha"},"content":"    public void setTask(int index, Task elem) {","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"meenulekha"},"content":"        tasks.set(index, elem);","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"meenulekha"},"content":"    public int size() {","lastModifiedDate":"2024-02-18"},{"lineNumber":79,"author":{"gitId":"meenulekha"},"content":"        return tasks.size();","lastModifiedDate":"2024-02-18"},{"lineNumber":80,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":81,"author":{"gitId":"meenulekha"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"meenulekha":81}},{"path":"src/main/java/duke/TaskPriorityComparator.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"meenulekha"},"content":"package duke;","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"meenulekha"},"content":"import java.util.Comparator;","lastModifiedDate":"2024-02-18"},{"lineNumber":4,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":5,"author":{"gitId":"meenulekha"},"content":"public class TaskPriorityComparator implements Comparator\u003cTask\u003e {","lastModifiedDate":"2024-02-18"},{"lineNumber":6,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":7,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-02-18"},{"lineNumber":8,"author":{"gitId":"meenulekha"},"content":"    public int compare(Task t1, Task t2) {","lastModifiedDate":"2024-02-18"},{"lineNumber":9,"author":{"gitId":"meenulekha"},"content":"        if (t1 instanceof ToDo \u0026\u0026 !(t2 instanceof ToDo)) {","lastModifiedDate":"2024-02-18"},{"lineNumber":10,"author":{"gitId":"meenulekha"},"content":"            return -1;","lastModifiedDate":"2024-02-18"},{"lineNumber":11,"author":{"gitId":"meenulekha"},"content":"        } else if (!(t1 instanceof ToDo) \u0026\u0026 t2 instanceof ToDo) {","lastModifiedDate":"2024-02-18"},{"lineNumber":12,"author":{"gitId":"meenulekha"},"content":"            return 1;","lastModifiedDate":"2024-02-18"},{"lineNumber":13,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":14,"author":{"gitId":"meenulekha"},"content":"        if (t1.getDate() !\u003d null \u0026\u0026 t2.getDate() !\u003d null) {","lastModifiedDate":"2024-02-18"},{"lineNumber":15,"author":{"gitId":"meenulekha"},"content":"            return t1.getDate().compareTo(t2.getDate());","lastModifiedDate":"2024-02-18"},{"lineNumber":16,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":17,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":18,"author":{"gitId":"meenulekha"},"content":"        // If one of them doesn\u0027t have a date, consider them equal","lastModifiedDate":"2024-02-18"},{"lineNumber":19,"author":{"gitId":"meenulekha"},"content":"        return 0;","lastModifiedDate":"2024-02-18"},{"lineNumber":20,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":21,"author":{"gitId":"meenulekha"},"content":"        //return compareByDate(t1, t2);","lastModifiedDate":"2024-02-18"},{"lineNumber":22,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":23,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":24,"author":{"gitId":"meenulekha"},"content":"    public int compareByDate(Task t1, Task t2) {","lastModifiedDate":"2024-02-18"},{"lineNumber":25,"author":{"gitId":"meenulekha"},"content":"        if (t1.getDate() \u003d\u003d null \u0026\u0026 t2.getDate() \u003d\u003d null) {","lastModifiedDate":"2024-02-18"},{"lineNumber":26,"author":{"gitId":"meenulekha"},"content":"            return 0;","lastModifiedDate":"2024-02-18"},{"lineNumber":27,"author":{"gitId":"meenulekha"},"content":"        } else if (t1.getDate() \u003d\u003d null) {","lastModifiedDate":"2024-02-18"},{"lineNumber":28,"author":{"gitId":"meenulekha"},"content":"            return -1;","lastModifiedDate":"2024-02-18"},{"lineNumber":29,"author":{"gitId":"meenulekha"},"content":"        } else if (t2.getDate() \u003d\u003d null) {","lastModifiedDate":"2024-02-18"},{"lineNumber":30,"author":{"gitId":"meenulekha"},"content":"            return 1;","lastModifiedDate":"2024-02-18"},{"lineNumber":31,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":32,"author":{"gitId":"meenulekha"},"content":"        return t1.getDate().compareTo(t2.getDate());","lastModifiedDate":"2024-02-18"},{"lineNumber":33,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":34,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":35,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":36,"author":{"gitId":"meenulekha"},"content":"}","lastModifiedDate":"2024-02-18"}],"authorContributionMap":{"meenulekha":36}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"meenulekha"},"content":"package duke;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"meenulekha"},"content":"/**","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"meenulekha"},"content":" * Represents a to-do task in the task list.","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"meenulekha"},"content":" * Subclass of the Task class.","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"meenulekha"},"content":" */","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"meenulekha"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"meenulekha"},"content":"     * Constructs a ToDo object with the given description.","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"meenulekha"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"meenulekha"},"content":"     * @param description The description of the to-do task.","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"meenulekha"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"meenulekha"},"content":"        super(description, Task.TaskType.TODO);","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"meenulekha"},"content":"     * Returns a string representation of the ToDo object.","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"meenulekha"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"meenulekha"},"content":"     * @return A string representation of the ToDo object.","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"meenulekha"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"meenulekha"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"meenulekha"},"content":"     * Returns the type of the task (to-do).","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"meenulekha"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"meenulekha"},"content":"     * @return The type of the task.","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"meenulekha"},"content":"    public String getType() {","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"meenulekha"},"content":"        return \"T\";","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"meenulekha"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"meenulekha":35}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"meenulekha"},"content":"package duke;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"meenulekha"},"content":"/**","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"meenulekha"},"content":" * Handles interactions with the user","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"meenulekha"},"content":" */","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"meenulekha"},"content":"public class Ui {","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"meenulekha"},"content":"    private String response;","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"meenulekha"},"content":"     * Prints the list of tasks to the console.","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"meenulekha"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"meenulekha"},"content":"     * @param tasks The TaskList containing the tasks to be printed.","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"meenulekha"},"content":"     * @param size  The number of tasks to be printed.","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"meenulekha"},"content":"    public void printList(TaskList tasks, int size) {","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"meenulekha"},"content":"        System.out.println(\"Here are the tasks in your list!\");","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"meenulekha"},"content":"        for (int j \u003d 0; j \u003c size; j++) {","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"meenulekha"},"content":"            int nr \u003d j + 1;","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"meenulekha"},"content":"            System.out.println(nr + \".\" + tasks.getTask(j).toString() + \".\");","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"meenulekha"},"content":"     * Prints a message to the console.","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"meenulekha"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"meenulekha"},"content":"     * @param msg The message to be printed.","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"meenulekha"},"content":"    public void printMessage(String msg) {","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"meenulekha"},"content":"        System.out.println(msg);","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":30,"author":{"gitId":"meenulekha"},"content":"     * Sets the response generated during the execution of user input.","lastModifiedDate":"2024-02-17"},{"lineNumber":31,"author":{"gitId":"meenulekha"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":32,"author":{"gitId":"meenulekha"},"content":"     * @param response The response to be set.","lastModifiedDate":"2024-02-17"},{"lineNumber":33,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":34,"author":{"gitId":"meenulekha"},"content":"    public void setResponse(String response) {","lastModifiedDate":"2024-02-17"},{"lineNumber":35,"author":{"gitId":"meenulekha"},"content":"        this.response \u003d response;","lastModifiedDate":"2024-02-17"},{"lineNumber":36,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":37,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":38,"author":{"gitId":"meenulekha"},"content":"     * Retrieves the response generated during the execution of user input.","lastModifiedDate":"2024-02-17"},{"lineNumber":39,"author":{"gitId":"meenulekha"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":40,"author":{"gitId":"meenulekha"},"content":"     * @return The stored response.","lastModifiedDate":"2024-02-17"},{"lineNumber":41,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":42,"author":{"gitId":"meenulekha"},"content":"    public String getResponse() {","lastModifiedDate":"2024-02-17"},{"lineNumber":43,"author":{"gitId":"meenulekha"},"content":"        return response;","lastModifiedDate":"2024-02-17"},{"lineNumber":44,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":45,"author":{"gitId":"meenulekha"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"meenulekha":45}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"meenulekha"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"meenulekha"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"meenulekha"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"meenulekha"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"meenulekha"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"meenulekha"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"meenulekha"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"meenulekha"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"meenulekha"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"meenulekha"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"meenulekha"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"meenulekha"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"meenulekha"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"meenulekha"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-17"}],"authorContributionMap":{"meenulekha":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"meenulekha"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"meenulekha"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"meenulekha"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"meenulekha"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"meenulekha"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"meenulekha"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"meenulekha"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"GUI.MainWindow\"\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"meenulekha"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"meenulekha"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"meenulekha"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"meenulekha"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"meenulekha"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"meenulekha"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"meenulekha"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"meenulekha"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"meenulekha"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"meenulekha"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-17"}],"authorContributionMap":{"meenulekha":19}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"meenulekha"},"content":"package duke;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"meenulekha"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"meenulekha"},"content":"public class TaskListTest {","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"meenulekha"},"content":"    void testAddTask() {","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"meenulekha"},"content":"        String tempFilePath \u003d System.getProperty(\"java.io.tmpdir\") + \"/duke_test.txt\";","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"meenulekha"},"content":"        TaskList taskList \u003d new TaskList(tempFilePath);","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"meenulekha"},"content":"        Task task \u003d new Task(\"Test Task\", Task.TaskType.TODO);","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"meenulekha"},"content":"        assertEquals(0, taskList.getTasks().size());","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"meenulekha"},"content":"        taskList.addTask(task);","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"meenulekha"},"content":"        assertEquals(1, taskList.getTasks().size());","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"meenulekha"},"content":"        assertEquals(task, taskList.getTask(0));","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"meenulekha"},"content":"        taskList.deleteTask(0);","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"meenulekha"},"content":"}","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"meenulekha":20}},{"path":"src/test/java/duke/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"meenulekha"},"content":"package duke;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"meenulekha"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"meenulekha"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"meenulekha"},"content":"public class ToDoTest {","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"meenulekha"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"meenulekha"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"meenulekha"},"content":"    private Parser parser;","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"meenulekha"},"content":"    public void testToString() {","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"meenulekha"},"content":"        ToDo todo \u003d new ToDo(\"Buy groceries\");","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"meenulekha"},"content":"        String result \u003d todo.toString();","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"meenulekha"},"content":"        assertEquals(\"[T][ ] Buy groceries\", result);","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"meenulekha"},"content":"    public void testGetType() {","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"meenulekha"},"content":"        ToDo todo \u003d new ToDo(\"Read a book\");","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"meenulekha"},"content":"        String result \u003d todo.getType();","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"meenulekha"},"content":"        assertEquals(\"T\", result);","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"meenulekha"},"content":"}","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"meenulekha":24}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"meenulekha"},"content":"deadline bye /by 2","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"meenulekha"},"content":"event die /from 2 /to 5","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"meenulekha"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"meenulekha":4}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"meenulekha"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"meenulekha":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"meenulekha"},"content":"if ! javac -cp /Users/meenu/Desktop/CS2103T/ip/src/main/java -Xlint:none -d /Users/meenu/Desktop/CS2103T/ip/src/main/java/bin /Users/meenu/Desktop/CS2103T/ip/src/main/java/*.java","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"meenulekha"},"content":"java -classpath /Users/meenu/Desktop/CS2103T/ip/src/main/java/bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"meenulekha":2,"-":36}}]
