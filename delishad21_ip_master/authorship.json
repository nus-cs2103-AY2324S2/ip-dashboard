[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"\u003ch1\u003e Grizzly \u003c/h1\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"\u003e ‚ÄúYour mind is for having ideas, not holding them.‚Äù ‚Äì David Allen ([source](https://dansilvestre.com/productivity-quotes/))","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"Grizzly frees your mind of having to remember things you need to do. It\u0027s,","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"- text-based","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"- easy to learn","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"- ~~FAST~~ SUPER FAST to use","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"All you need to do is,","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"1. download it from [here](https://github.com/delishad21/ip/releases/tag/v0.2.0).","lastModifiedDate":"2024-02-16"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"2. double-click it.","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"3. add your tasks.","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"4. let it manage your tasks for you üòâ","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"And it is FREE!","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":"Features:","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":"- [ ]  Managing tasks","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":"- [ ]  Managing deadlines","lastModifiedDate":"2024-02-16"},{"lineNumber":23,"author":{"gitId":"delishad21"},"content":"- [ ]  Managing events","lastModifiedDate":"2024-02-16"},{"lineNumber":24,"author":{"gitId":"delishad21"},"content":"- [ ]  Recording contacts","lastModifiedDate":"2024-02-16"},{"lineNumber":25,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"delishad21"},"content":"If you are a Java programmer, you can use it to practice Java too. Here\u0027s the main method:","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"delishad21"},"content":"public class Main {","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"delishad21"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"delishad21"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"delishad21":27,"-":6}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"delishad21"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"delishad21"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"delishad21"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"delishad21"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"delishad21"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"delishad21"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"delishad21"},"content":"    mainClass.set(\"grizzly.Launcher\")","lastModifiedDate":"2024-02-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"delishad21"},"content":"    archiveBaseName \u003d \"grizzly\"","lastModifiedDate":"2024-02-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"delishad21"},"content":"checkstyle {","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"delishad21"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"delishad21":23,"-":40}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"# Grizzly User Guide","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"![Kiku](Ui.png)","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"Hi, Welcome to the Grizzly user guide.","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"Grizzly is a chatbot that is capable of storing, managing and saving Tasks and Contacts.","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"Here is a list of all the features included with Grizzly","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"- Adding Tasks","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"    - Todo","lastModifiedDate":"2024-02-16"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"    - Deadline","lastModifiedDate":"2024-02-16"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"    - Event","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"- Adding Contacts","lastModifiedDate":"2024-02-16"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"- Listing items","lastModifiedDate":"2024-02-16"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"- Marking/Unmarking Tasks","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"- Deleting items","lastModifiedDate":"2024-02-16"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":"- Finding items","lastModifiedDate":"2024-02-16"},{"lineNumber":20,"author":{"gitId":"delishad21"},"content":"- Exiting","lastModifiedDate":"2024-02-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":"## Adding Tasks","lastModifiedDate":"2024-02-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"delishad21"},"content":"Grizzly currently supports 3 different tasks types - Todo, Deadline and Event","lastModifiedDate":"2024-02-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":26,"author":{"gitId":"delishad21"},"content":"### Todo","lastModifiedDate":"2024-02-16"},{"lineNumber":27,"author":{"gitId":"delishad21"},"content":"Basic Task with no other information.","lastModifiedDate":"2024-02-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"delishad21"},"content":"Use the following formatting to add a Todo task:","lastModifiedDate":"2024-02-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":31,"author":{"gitId":"delishad21"},"content":"todo [task name]","lastModifiedDate":"2024-02-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":33,"author":{"gitId":"delishad21"},"content":"Note: exclude the square brackets","lastModifiedDate":"2024-02-16"},{"lineNumber":34,"author":{"gitId":"delishad21"},"content":"### Deadline","lastModifiedDate":"2024-02-16"},{"lineNumber":35,"author":{"gitId":"delishad21"},"content":"Task with a due date and time.","lastModifiedDate":"2024-02-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":37,"author":{"gitId":"delishad21"},"content":"Use the following formatting to add a Todo task:","lastModifiedDate":"2024-02-16"},{"lineNumber":38,"author":{"gitId":"delishad21"},"content":"```","lastModifiedDate":"2024-02-16"},{"lineNumber":39,"author":{"gitId":"delishad21"},"content":"deadline [task name] /by [datetime]","lastModifiedDate":"2024-02-16"},{"lineNumber":40,"author":{"gitId":"delishad21"},"content":"```","lastModifiedDate":"2024-02-16"},{"lineNumber":41,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":42,"author":{"gitId":"delishad21"},"content":"Note: Insert your date and time with this formatting: `DD/MM/YYYY, HH:MM`","lastModifiedDate":"2024-02-16"},{"lineNumber":43,"author":{"gitId":"delishad21"},"content":"### Event","lastModifiedDate":"2024-02-16"},{"lineNumber":44,"author":{"gitId":"delishad21"},"content":"Task with a starting and ending date and time.","lastModifiedDate":"2024-02-16"},{"lineNumber":45,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":46,"author":{"gitId":"delishad21"},"content":"Use the following formatting to add a Todo task:","lastModifiedDate":"2024-02-16"},{"lineNumber":47,"author":{"gitId":"delishad21"},"content":"```","lastModifiedDate":"2024-02-16"},{"lineNumber":48,"author":{"gitId":"delishad21"},"content":"event [task name] /from [datetime] /to [datetime]","lastModifiedDate":"2024-02-16"},{"lineNumber":49,"author":{"gitId":"delishad21"},"content":"```","lastModifiedDate":"2024-02-16"},{"lineNumber":50,"author":{"gitId":"delishad21"},"content":"Note: Insert your date and time with this formatting: `DD/MM/YYYY, HH:MM`","lastModifiedDate":"2024-02-16"},{"lineNumber":51,"author":{"gitId":"delishad21"},"content":"## Adding Contacts","lastModifiedDate":"2024-02-16"},{"lineNumber":52,"author":{"gitId":"delishad21"},"content":"Each contact contains a name, email and phone number.","lastModifiedDate":"2024-02-16"},{"lineNumber":53,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":54,"author":{"gitId":"delishad21"},"content":"Use the following formatting to add a Contact:","lastModifiedDate":"2024-02-16"},{"lineNumber":55,"author":{"gitId":"delishad21"},"content":"```","lastModifiedDate":"2024-02-16"},{"lineNumber":56,"author":{"gitId":"delishad21"},"content":"contact [name] /email [email address] /number [phone number]","lastModifiedDate":"2024-02-16"},{"lineNumber":57,"author":{"gitId":"delishad21"},"content":"```","lastModifiedDate":"2024-02-16"},{"lineNumber":58,"author":{"gitId":"delishad21"},"content":"## Listing items","lastModifiedDate":"2024-02-16"},{"lineNumber":59,"author":{"gitId":"delishad21"},"content":"To list both tasks and contacts together, use:","lastModifiedDate":"2024-02-16"},{"lineNumber":60,"author":{"gitId":"delishad21"},"content":"```","lastModifiedDate":"2024-02-16"},{"lineNumber":61,"author":{"gitId":"delishad21"},"content":"list","lastModifiedDate":"2024-02-16"},{"lineNumber":62,"author":{"gitId":"delishad21"},"content":"```","lastModifiedDate":"2024-02-16"},{"lineNumber":63,"author":{"gitId":"delishad21"},"content":"To list just tasks, use:","lastModifiedDate":"2024-02-16"},{"lineNumber":64,"author":{"gitId":"delishad21"},"content":"```","lastModifiedDate":"2024-02-16"},{"lineNumber":65,"author":{"gitId":"delishad21"},"content":"list tasks","lastModifiedDate":"2024-02-16"},{"lineNumber":66,"author":{"gitId":"delishad21"},"content":"```","lastModifiedDate":"2024-02-16"},{"lineNumber":67,"author":{"gitId":"delishad21"},"content":"To list just contacts, use:","lastModifiedDate":"2024-02-16"},{"lineNumber":68,"author":{"gitId":"delishad21"},"content":"```","lastModifiedDate":"2024-02-16"},{"lineNumber":69,"author":{"gitId":"delishad21"},"content":"list contacts","lastModifiedDate":"2024-02-16"},{"lineNumber":70,"author":{"gitId":"delishad21"},"content":"```","lastModifiedDate":"2024-02-16"},{"lineNumber":71,"author":{"gitId":"delishad21"},"content":"## Marking/Unmarking Tasks","lastModifiedDate":"2024-02-16"},{"lineNumber":72,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":73,"author":{"gitId":"delishad21"},"content":"To mark a particular task, use:","lastModifiedDate":"2024-02-16"},{"lineNumber":74,"author":{"gitId":"delishad21"},"content":"```","lastModifiedDate":"2024-02-16"},{"lineNumber":75,"author":{"gitId":"delishad21"},"content":"mark [index of task]","lastModifiedDate":"2024-02-16"},{"lineNumber":76,"author":{"gitId":"delishad21"},"content":"```","lastModifiedDate":"2024-02-16"},{"lineNumber":77,"author":{"gitId":"delishad21"},"content":"Note: indexes of tasks can be found with the `list` command","lastModifiedDate":"2024-02-16"},{"lineNumber":78,"author":{"gitId":"delishad21"},"content":"## Deleting items","lastModifiedDate":"2024-02-16"},{"lineNumber":79,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":80,"author":{"gitId":"delishad21"},"content":"To delete a task, use:","lastModifiedDate":"2024-02-16"},{"lineNumber":81,"author":{"gitId":"delishad21"},"content":"```","lastModifiedDate":"2024-02-16"},{"lineNumber":82,"author":{"gitId":"delishad21"},"content":"delete task [index of task]","lastModifiedDate":"2024-02-16"},{"lineNumber":83,"author":{"gitId":"delishad21"},"content":"```","lastModifiedDate":"2024-02-16"},{"lineNumber":84,"author":{"gitId":"delishad21"},"content":"To delete a contact, use:","lastModifiedDate":"2024-02-16"},{"lineNumber":85,"author":{"gitId":"delishad21"},"content":"```","lastModifiedDate":"2024-02-16"},{"lineNumber":86,"author":{"gitId":"delishad21"},"content":"delete contact [index of contact]","lastModifiedDate":"2024-02-16"},{"lineNumber":87,"author":{"gitId":"delishad21"},"content":"```","lastModifiedDate":"2024-02-16"},{"lineNumber":88,"author":{"gitId":"delishad21"},"content":"Note: indexes of tasks and contactscan be found with the `list` command","lastModifiedDate":"2024-02-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":90,"author":{"gitId":"delishad21"},"content":"## Finding items","lastModifiedDate":"2024-02-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":92,"author":{"gitId":"delishad21"},"content":"To find an item, use:","lastModifiedDate":"2024-02-16"},{"lineNumber":93,"author":{"gitId":"delishad21"},"content":"```","lastModifiedDate":"2024-02-16"},{"lineNumber":94,"author":{"gitId":"delishad21"},"content":"find [description]","lastModifiedDate":"2024-02-16"},{"lineNumber":95,"author":{"gitId":"delishad21"},"content":"```","lastModifiedDate":"2024-02-16"},{"lineNumber":96,"author":{"gitId":"delishad21"},"content":"Note: Grizzly will return you list of tasks and contacts where the task description and contact name contains your description as a substring. E.g. if I have a contact with the name \"James\", using find with an input of \"ames\" will return that contact.","lastModifiedDate":"2024-02-16"},{"lineNumber":97,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":98,"author":{"gitId":"delishad21"},"content":"## Exiting","lastModifiedDate":"2024-02-16"},{"lineNumber":99,"author":{"gitId":"delishad21"},"content":"To exit Grizzly, use:","lastModifiedDate":"2024-02-16"},{"lineNumber":100,"author":{"gitId":"delishad21"},"content":"```","lastModifiedDate":"2024-02-16"},{"lineNumber":101,"author":{"gitId":"delishad21"},"content":"bye","lastModifiedDate":"2024-02-16"},{"lineNumber":102,"author":{"gitId":"delishad21"},"content":"```","lastModifiedDate":"2024-02-16"},{"lineNumber":103,"author":{"gitId":"delishad21"},"content":"This will save all the tasks and contacts that is currently stored within grizzly.","lastModifiedDate":"2024-02-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07"}],"authorContributionMap":{"delishad21":89,"-":16}},{"path":"src/main/java/grizzly/Grizzly.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package grizzly;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"import grizzly.commands.Command;","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"import grizzly.exceptions.GrizzlyException;","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"import grizzly.utils.Database;","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"import grizzly.utils.Parser;","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"import grizzly.utils.Storage;","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":" * This class implements the functionality of the Grizzly bot.","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":" * @author delishad21","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":" * @version 0.1","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"public class Grizzly {","lastModifiedDate":"2024-02-16"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"delishad21"},"content":"    private Storage storage;","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":"    private Database db;","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":"    private boolean isRunning;","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"delishad21"},"content":"     * Initialises Grizzly object with an empty tasklist and empty storage.","lastModifiedDate":"2024-02-16"},{"lineNumber":26,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"delishad21"},"content":"    public Grizzly() {","lastModifiedDate":"2024-02-16"},{"lineNumber":28,"author":{"gitId":"delishad21"},"content":"        this.db \u003d new Database();","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"delishad21"},"content":"        this.storage \u003d null;","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"delishad21"},"content":"        this.isRunning \u003d true;","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"delishad21"},"content":"     * Returns whether the Grizzly bot is still running.","lastModifiedDate":"2024-02-16"},{"lineNumber":35,"author":{"gitId":"delishad21"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"delishad21"},"content":"     * @return running state of Grizzly.","lastModifiedDate":"2024-02-16"},{"lineNumber":37,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"delishad21"},"content":"    public boolean isRunning() {","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"delishad21"},"content":"        return this.isRunning;","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":42,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"delishad21"},"content":"     * Loads filePath into a storage object for loading and saving files.","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"delishad21"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"delishad21"},"content":"     * @param filePath Path for file to be saved and loaded from.","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"delishad21"},"content":"     * @return Status of loading filepath.","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"delishad21"},"content":"    public String loadSave(String filePath) {","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"delishad21"},"content":"        if (isRunning) {","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":52,"author":{"gitId":"delishad21"},"content":"            String status \u003d \"\";","lastModifiedDate":"2024-02-09"},{"lineNumber":53,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":54,"author":{"gitId":"delishad21"},"content":"            try {","lastModifiedDate":"2024-01-27"},{"lineNumber":55,"author":{"gitId":"delishad21"},"content":"                this.storage \u003d new Storage(filePath);","lastModifiedDate":"2024-01-27"},{"lineNumber":56,"author":{"gitId":"delishad21"},"content":"                status \u003d storage.readSaveData(this.db) + \"\\n\";","lastModifiedDate":"2024-02-09"},{"lineNumber":57,"author":{"gitId":"delishad21"},"content":"                status \u003d status + db.taskListSize() + \" Tasks loaded from save\\n\";","lastModifiedDate":"2024-02-09"},{"lineNumber":58,"author":{"gitId":"delishad21"},"content":"                status \u003d status + db.contactListSize() + \" Contacts loaded from save\\n\";","lastModifiedDate":"2024-02-09"},{"lineNumber":59,"author":{"gitId":"delishad21"},"content":"            } catch (FileNotFoundException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":60,"author":{"gitId":"delishad21"},"content":"                status \u003d \"Error reading file: \" + e.getMessage() + \"\\nMaking new database\";","lastModifiedDate":"2024-02-09"},{"lineNumber":61,"author":{"gitId":"delishad21"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":62,"author":{"gitId":"delishad21"},"content":"                status \u003d \"Save file could not be generated: \" + e.getMessage() + \"\\nMaking new database\";","lastModifiedDate":"2024-02-09"},{"lineNumber":63,"author":{"gitId":"delishad21"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":64,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":65,"author":{"gitId":"delishad21"},"content":"            return status.trim();","lastModifiedDate":"2024-02-16"},{"lineNumber":66,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":67,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":68,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":69,"author":{"gitId":"delishad21"},"content":"        assert !this.isRunning();","lastModifiedDate":"2024-02-09"},{"lineNumber":70,"author":{"gitId":"delishad21"},"content":"        return \"Grizzly is not running\";","lastModifiedDate":"2024-02-16"},{"lineNumber":71,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":72,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":73,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":74,"author":{"gitId":"delishad21"},"content":"     * Parses user input into commands, executes them and returns bot response.","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"delishad21"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"delishad21"},"content":"     * @param input User input.","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"delishad21"},"content":"     * @return Response from bot.","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":79,"author":{"gitId":"delishad21"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":81,"author":{"gitId":"delishad21"},"content":"        if (isRunning) {","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"delishad21"},"content":"            return sendGrizzly(input);","lastModifiedDate":"2024-02-16"},{"lineNumber":83,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":84,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":85,"author":{"gitId":"delishad21"},"content":"        assert !this.isRunning();","lastModifiedDate":"2024-02-16"},{"lineNumber":86,"author":{"gitId":"delishad21"},"content":"        return \"Grizzly is not running\";","lastModifiedDate":"2024-02-16"},{"lineNumber":87,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":88,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":89,"author":{"gitId":"delishad21"},"content":"    private String sendGrizzly(String input) {","lastModifiedDate":"2024-02-16"},{"lineNumber":90,"author":{"gitId":"delishad21"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":91,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":92,"author":{"gitId":"delishad21"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2024-01-27"},{"lineNumber":93,"author":{"gitId":"delishad21"},"content":"            String response \u003d c.execute(db, storage);","lastModifiedDate":"2024-02-09"},{"lineNumber":94,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":95,"author":{"gitId":"delishad21"},"content":"            if (storage !\u003d null) {","lastModifiedDate":"2024-02-03"},{"lineNumber":96,"author":{"gitId":"delishad21"},"content":"                storage.saveData(db);","lastModifiedDate":"2024-02-09"},{"lineNumber":97,"author":{"gitId":"delishad21"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":98,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":99,"author":{"gitId":"delishad21"},"content":"            if (c.isExitCommand()) {","lastModifiedDate":"2024-02-04"},{"lineNumber":100,"author":{"gitId":"delishad21"},"content":"                this.isRunning \u003d false;","lastModifiedDate":"2024-02-03"},{"lineNumber":101,"author":{"gitId":"delishad21"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":102,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":103,"author":{"gitId":"delishad21"},"content":"            return response;","lastModifiedDate":"2024-02-03"},{"lineNumber":104,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":105,"author":{"gitId":"delishad21"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":106,"author":{"gitId":"delishad21"},"content":"            return \"Error parsing datetime: \" + e.getMessage()","lastModifiedDate":"2024-02-03"},{"lineNumber":107,"author":{"gitId":"delishad21"},"content":"                    + \"\\nUse the format \\\"DD/MM/YYYY, HH:MM\\\" to enter date and time.\";","lastModifiedDate":"2024-02-03"},{"lineNumber":108,"author":{"gitId":"delishad21"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":109,"author":{"gitId":"delishad21"},"content":"            return e.getMessage();","lastModifiedDate":"2024-02-03"},{"lineNumber":110,"author":{"gitId":"delishad21"},"content":"        } catch (GrizzlyException e) {","lastModifiedDate":"2024-02-16"},{"lineNumber":111,"author":{"gitId":"delishad21"},"content":"            return e.getMessage();","lastModifiedDate":"2024-02-09"},{"lineNumber":112,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":113,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"delishad21":113,"-":1}},{"path":"src/main/java/grizzly/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package grizzly;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"import grizzly.ui.Main;","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"public class Launcher {","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"     * Launches the bot.","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"delishad21":18}},{"path":"src/main/java/grizzly/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package grizzly.commands;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"import grizzly.exceptions.GrizzlyException;","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"import grizzly.utils.Database;","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"import grizzly.utils.Storage;","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":" * Abstact class that implements commands, used for the control flow of the bot.","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":" *","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":" * @author delishad21","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"public abstract class Command {","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"    private boolean isExit;","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":"     * Creates a command object.","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"delishad21"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":"     * @param isExit for determining if the command leads to an exit.","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"delishad21"},"content":"    public Command(boolean isExit) {","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"delishad21"},"content":"        this.isExit \u003d isExit;","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"delishad21"},"content":"     * Returns if the command is an exit command","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"delishad21"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"delishad21"},"content":"     * @return boolean to indicate if the command is exiting","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"delishad21"},"content":"    public boolean isExitCommand() {","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"delishad21"},"content":"        return this.isExit;","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"delishad21"},"content":"     * Executes command, left as abstract for inheriting classes to implement.","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"delishad21"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"delishad21"},"content":"     * @param db the current database of records.","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"delishad21"},"content":"     * @param storage Storage object with save file.","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"delishad21"},"content":"     * @throws GrizzlyException","lastModifiedDate":"2024-02-16"},{"lineNumber":43,"author":{"gitId":"delishad21"},"content":"     * @throws DateTimeParseException","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"delishad21"},"content":"     * @throws IOException","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"delishad21"},"content":"    public abstract String execute(Database db, Storage storage)","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"delishad21"},"content":"            throws GrizzlyException, DateTimeParseException, IOException;","lastModifiedDate":"2024-02-16"},{"lineNumber":48,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"delishad21":49}},{"path":"src/main/java/grizzly/commands/DeleteRecordCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package grizzly.commands;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"import java.util.Hashtable;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"import grizzly.contacts.Contact;","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"import grizzly.exceptions.RecordDeletionException;","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"import grizzly.tasks.Task;","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"import grizzly.utils.Database;","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"import grizzly.utils.Storage;","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":" * This class implements the command that deletes a contact when executed.","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"public class DeleteRecordCommand extends Command {","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"    private String description;","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":"     * Creates a DeleteRecordCommand, deletes a record from the database when executed.","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"delishad21"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":"     * @param params","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"delishad21"},"content":"    public DeleteRecordCommand(Hashtable\u003cString, String\u003e params) {","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"delishad21"},"content":"        super(false);","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"delishad21"},"content":"        this.description \u003d params.get(\"description\");","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"delishad21"},"content":"     * Executes the DeleteRecordCommand and deletes a record.","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"delishad21"},"content":"    public String execute(Database db, Storage storage) throws RecordDeletionException {","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":34,"author":{"gitId":"delishad21"},"content":"        String[] params \u003d splitParams();","lastModifiedDate":"2024-02-16"},{"lineNumber":35,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":36,"author":{"gitId":"delishad21"},"content":"        String recordType \u003d params[0];","lastModifiedDate":"2024-02-16"},{"lineNumber":37,"author":{"gitId":"delishad21"},"content":"        int index \u003d Integer.parseInt(params[1]);","lastModifiedDate":"2024-02-16"},{"lineNumber":38,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":39,"author":{"gitId":"delishad21"},"content":"        switch (recordType) {","lastModifiedDate":"2024-02-16"},{"lineNumber":40,"author":{"gitId":"delishad21"},"content":"        case \"task\":","lastModifiedDate":"2024-02-16"},{"lineNumber":41,"author":{"gitId":"delishad21"},"content":"            return deleteTask(db, index);","lastModifiedDate":"2024-02-16"},{"lineNumber":42,"author":{"gitId":"delishad21"},"content":"        case \"contact\":","lastModifiedDate":"2024-02-16"},{"lineNumber":43,"author":{"gitId":"delishad21"},"content":"            return deleteContact(db, index);","lastModifiedDate":"2024-02-16"},{"lineNumber":44,"author":{"gitId":"delishad21"},"content":"        default:","lastModifiedDate":"2024-02-16"},{"lineNumber":45,"author":{"gitId":"delishad21"},"content":"            throw new RecordDeletionException(\"No Such Record Type!\");","lastModifiedDate":"2024-02-16"},{"lineNumber":46,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":47,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":48,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":49,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":50,"author":{"gitId":"delishad21"},"content":"    private String[] splitParams() throws RecordDeletionException {","lastModifiedDate":"2024-02-16"},{"lineNumber":51,"author":{"gitId":"delishad21"},"content":"        String[] descSplit \u003d description.split(\" \", 2);","lastModifiedDate":"2024-02-09"},{"lineNumber":52,"author":{"gitId":"delishad21"},"content":"        if (descSplit.length \u003c 2) {","lastModifiedDate":"2024-02-09"},{"lineNumber":53,"author":{"gitId":"delishad21"},"content":"            throw new RecordDeletionException(\"Insufficient information for delete!\");","lastModifiedDate":"2024-02-09"},{"lineNumber":54,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":55,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":56,"author":{"gitId":"delishad21"},"content":"        try {","lastModifiedDate":"2024-02-16"},{"lineNumber":57,"author":{"gitId":"delishad21"},"content":"            Integer.parseInt(descSplit[1]);","lastModifiedDate":"2024-02-16"},{"lineNumber":58,"author":{"gitId":"delishad21"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-16"},{"lineNumber":59,"author":{"gitId":"delishad21"},"content":"            throw new RecordDeletionException(\"Given index \" + descSplit[1]","lastModifiedDate":"2024-02-16"},{"lineNumber":60,"author":{"gitId":"delishad21"},"content":"                                              + \" is not a valid index\");","lastModifiedDate":"2024-02-16"},{"lineNumber":61,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":62,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":63,"author":{"gitId":"delishad21"},"content":"        return descSplit;","lastModifiedDate":"2024-02-16"},{"lineNumber":64,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":65,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":66,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":67,"author":{"gitId":"delishad21"},"content":"     * Deletes task from database based on index.","lastModifiedDate":"2024-02-16"},{"lineNumber":68,"author":{"gitId":"delishad21"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":69,"author":{"gitId":"delishad21"},"content":"     * @param db database to delete from","lastModifiedDate":"2024-02-16"},{"lineNumber":70,"author":{"gitId":"delishad21"},"content":"     * @param index index of task to delete","lastModifiedDate":"2024-02-16"},{"lineNumber":71,"author":{"gitId":"delishad21"},"content":"     * @return status of removal","lastModifiedDate":"2024-02-16"},{"lineNumber":72,"author":{"gitId":"delishad21"},"content":"     * @throws RecordDeletionException if index is out of bounds","lastModifiedDate":"2024-02-16"},{"lineNumber":73,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":74,"author":{"gitId":"delishad21"},"content":"    private String deleteTask(Database db, int index) throws RecordDeletionException {","lastModifiedDate":"2024-02-16"},{"lineNumber":75,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":76,"author":{"gitId":"delishad21"},"content":"        if (index \u003c 1 || index \u003e db.taskListSize()) {","lastModifiedDate":"2024-02-09"},{"lineNumber":77,"author":{"gitId":"delishad21"},"content":"            throw new RecordDeletionException(\"Given index \" + index + \" out of bounds\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":78,"author":{"gitId":"delishad21"},"content":"                                              + \"taskList current at size: \" + db.taskListSize());","lastModifiedDate":"2024-02-09"},{"lineNumber":79,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":80,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":81,"author":{"gitId":"delishad21"},"content":"        Task task \u003d db.getTask(index);","lastModifiedDate":"2024-02-09"},{"lineNumber":82,"author":{"gitId":"delishad21"},"content":"        db.removeTask(index);","lastModifiedDate":"2024-02-09"},{"lineNumber":83,"author":{"gitId":"delishad21"},"content":"        return \"Task \\\"\" + task + \"\\\" has been removed!\";","lastModifiedDate":"2024-02-09"},{"lineNumber":84,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":85,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":86,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":87,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":88,"author":{"gitId":"delishad21"},"content":"     * Deletes contact from database based on index.","lastModifiedDate":"2024-02-16"},{"lineNumber":89,"author":{"gitId":"delishad21"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":90,"author":{"gitId":"delishad21"},"content":"     * @param db database to delete from","lastModifiedDate":"2024-02-16"},{"lineNumber":91,"author":{"gitId":"delishad21"},"content":"     * @param index index of task to delete","lastModifiedDate":"2024-02-16"},{"lineNumber":92,"author":{"gitId":"delishad21"},"content":"     * @return status of removal","lastModifiedDate":"2024-02-16"},{"lineNumber":93,"author":{"gitId":"delishad21"},"content":"     * @throws RecordDeletionException if index is out of bounds","lastModifiedDate":"2024-02-16"},{"lineNumber":94,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":95,"author":{"gitId":"delishad21"},"content":"    private String deleteContact(Database db, int index) throws RecordDeletionException {","lastModifiedDate":"2024-02-16"},{"lineNumber":96,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":97,"author":{"gitId":"delishad21"},"content":"        if (index \u003c 1 || index \u003e db.contactListSize()) {","lastModifiedDate":"2024-02-09"},{"lineNumber":98,"author":{"gitId":"delishad21"},"content":"            throw new RecordDeletionException(\"Given index \" + index + \" out of bounds\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":99,"author":{"gitId":"delishad21"},"content":"                                              + \"contactList current at size: \" + db.contactListSize());","lastModifiedDate":"2024-02-09"},{"lineNumber":100,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":101,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":102,"author":{"gitId":"delishad21"},"content":"        Contact contact \u003d db.getContact(index);","lastModifiedDate":"2024-02-09"},{"lineNumber":103,"author":{"gitId":"delishad21"},"content":"        db.removeContact(index);","lastModifiedDate":"2024-02-09"},{"lineNumber":104,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":105,"author":{"gitId":"delishad21"},"content":"        return \"Contact \\\"\" + contact + \"\\\" has been removed!\";","lastModifiedDate":"2024-02-16"},{"lineNumber":106,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":107,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":108,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"delishad21":108}},{"path":"src/main/java/grizzly/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package grizzly.commands;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"import grizzly.utils.Database;","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"import grizzly.utils.Storage;","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":" * This class implements the exit command that leads to the exit of the bot when executed.","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":" *","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":" * @author delishad21","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"     * Creates an exit command, sets isExit to true.","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"    public ExitCommand() {","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":"        super(true);","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"delishad21"},"content":"     * Executes exit command, saves data into save file using storage object.","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"delishad21"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"delishad21"},"content":"     * @param db the current database of records.","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"delishad21"},"content":"     * @param storage Storage object with save file.","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"delishad21"},"content":"    public String execute(Database db, Storage storage) {","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":33,"author":{"gitId":"delishad21"},"content":"        if (storage \u003d\u003d null) {","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"delishad21"},"content":"            return \"Data not saved: Storage initialisation not sucessful\";","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":37,"author":{"gitId":"delishad21"},"content":"        try {","lastModifiedDate":"2024-02-16"},{"lineNumber":38,"author":{"gitId":"delishad21"},"content":"            return storage.saveData(db);","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"delishad21"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"delishad21"},"content":"            return \"Data not saved: \" + e.getMessage();","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"delishad21":43}},{"path":"src/main/java/grizzly/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package grizzly.commands;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"import java.util.Hashtable;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"import grizzly.contacts.Contact;","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"import grizzly.exceptions.MissingInformationException;","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"import grizzly.tasks.Task;","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"import grizzly.utils.Database;","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"import grizzly.utils.Storage;","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":" * This class implements the find Command, when executed, it searches for tasks matching user input in the","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":" * given TaskList.","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":" *","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":" * @author delishad21","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":"    private String description;","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":"     * Creates a find command object to find tasks in tasklist based on matching string.","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"delishad21"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"delishad21"},"content":"     * @param params includes string to be matched to task.","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"delishad21"},"content":"    public FindCommand(Hashtable\u003cString, String\u003e params) {","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"delishad21"},"content":"        super(false);","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"delishad21"},"content":"        this.description \u003d params.get(\"description\");","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"delishad21"},"content":"     * Executes the find command, finds item in the TaskList provided.","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"delishad21"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"delishad21"},"content":"     * @param db the current database of records.","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"delishad21"},"content":"     * @param storage Storage object with save file.","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"delishad21"},"content":"    public String execute(Database db, Storage storage) throws MissingInformationException {","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"delishad21"},"content":"        if (description.equals(\"\")) {","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"delishad21"},"content":"            throw new MissingInformationException(\"description\");","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"delishad21"},"content":"        String toFind \u003d description.trim();","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"delishad21"},"content":"        return findTasks(db, toFind) + findContacts(db, toFind);","lastModifiedDate":"2024-02-16"},{"lineNumber":45,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":47,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":48,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":49,"author":{"gitId":"delishad21"},"content":"     * Finds tasks with description matching to user input.","lastModifiedDate":"2024-02-16"},{"lineNumber":50,"author":{"gitId":"delishad21"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":51,"author":{"gitId":"delishad21"},"content":"     * @param db database to find","lastModifiedDate":"2024-02-16"},{"lineNumber":52,"author":{"gitId":"delishad21"},"content":"     * @param toFind user input to match with task description","lastModifiedDate":"2024-02-16"},{"lineNumber":53,"author":{"gitId":"delishad21"},"content":"     * @return","lastModifiedDate":"2024-02-16"},{"lineNumber":54,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":55,"author":{"gitId":"delishad21"},"content":"    private String findTasks(Database db, String toFind) {","lastModifiedDate":"2024-02-16"},{"lineNumber":56,"author":{"gitId":"delishad21"},"content":"        String foundTasks \u003d \"\";","lastModifiedDate":"2024-02-16"},{"lineNumber":57,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":58,"author":{"gitId":"delishad21"},"content":"        for (int i \u003d 1; i \u003c\u003d db.taskListSize(); i++) {","lastModifiedDate":"2024-02-09"},{"lineNumber":59,"author":{"gitId":"delishad21"},"content":"            Task task \u003d db.getTask(i);","lastModifiedDate":"2024-02-09"},{"lineNumber":60,"author":{"gitId":"delishad21"},"content":"            if (task.getDescription().contains(toFind)) {","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"delishad21"},"content":"                foundTasks +\u003d i + \".\" + task + \"\\n\";","lastModifiedDate":"2024-02-16"},{"lineNumber":62,"author":{"gitId":"delishad21"},"content":"            }","lastModifiedDate":"2024-02-09"},{"lineNumber":63,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":64,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":65,"author":{"gitId":"delishad21"},"content":"        if (foundTasks.equals(\"\")) {","lastModifiedDate":"2024-02-16"},{"lineNumber":66,"author":{"gitId":"delishad21"},"content":"            foundTasks \u003d \"No tasks found\\n\";","lastModifiedDate":"2024-02-16"},{"lineNumber":67,"author":{"gitId":"delishad21"},"content":"        } else {","lastModifiedDate":"2024-02-16"},{"lineNumber":68,"author":{"gitId":"delishad21"},"content":"            foundTasks \u003d \"----------\\nTasks\\n----------\\n\" + foundTasks;","lastModifiedDate":"2024-02-16"},{"lineNumber":69,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":70,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":71,"author":{"gitId":"delishad21"},"content":"        return foundTasks;","lastModifiedDate":"2024-02-16"},{"lineNumber":72,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":73,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":74,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":75,"author":{"gitId":"delishad21"},"content":"     * Finds tasks with description matching to user input.","lastModifiedDate":"2024-02-16"},{"lineNumber":76,"author":{"gitId":"delishad21"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":77,"author":{"gitId":"delishad21"},"content":"     * @param db database to find","lastModifiedDate":"2024-02-16"},{"lineNumber":78,"author":{"gitId":"delishad21"},"content":"     * @param toFind user input to match with task description","lastModifiedDate":"2024-02-16"},{"lineNumber":79,"author":{"gitId":"delishad21"},"content":"     * @return","lastModifiedDate":"2024-02-16"},{"lineNumber":80,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":81,"author":{"gitId":"delishad21"},"content":"    private String findContacts(Database db, String toFind) {","lastModifiedDate":"2024-02-16"},{"lineNumber":82,"author":{"gitId":"delishad21"},"content":"        String foundContacts \u003d \"\";","lastModifiedDate":"2024-02-16"},{"lineNumber":83,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":84,"author":{"gitId":"delishad21"},"content":"        for (int i \u003d 1; i \u003c\u003d db.contactListSize(); i++) {","lastModifiedDate":"2024-02-09"},{"lineNumber":85,"author":{"gitId":"delishad21"},"content":"            Contact contact \u003d db.getContact(i);","lastModifiedDate":"2024-02-09"},{"lineNumber":86,"author":{"gitId":"delishad21"},"content":"            if (contact.toString().contains(toFind)) {","lastModifiedDate":"2024-02-09"},{"lineNumber":87,"author":{"gitId":"delishad21"},"content":"                foundContacts +\u003d i + \".\" + db.getContact(i - 1) + \"\\n\";","lastModifiedDate":"2024-02-16"},{"lineNumber":88,"author":{"gitId":"delishad21"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":89,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":90,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":91,"author":{"gitId":"delishad21"},"content":"        if (foundContacts.equals(\"\")) {","lastModifiedDate":"2024-02-16"},{"lineNumber":92,"author":{"gitId":"delishad21"},"content":"            foundContacts \u003d \"No contacts found\\n\";","lastModifiedDate":"2024-02-16"},{"lineNumber":93,"author":{"gitId":"delishad21"},"content":"        } else {","lastModifiedDate":"2024-02-16"},{"lineNumber":94,"author":{"gitId":"delishad21"},"content":"            foundContacts \u003d \"----------\\nContacts\\n----------\\n\" + foundContacts;","lastModifiedDate":"2024-02-16"},{"lineNumber":95,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":96,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":97,"author":{"gitId":"delishad21"},"content":"        return foundContacts;","lastModifiedDate":"2024-02-16"},{"lineNumber":98,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":99,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"delishad21":99}},{"path":"src/main/java/grizzly/commands/GenerateRecordCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package grizzly.commands;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"import java.util.Hashtable;","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"import grizzly.contacts.Contact;","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"import grizzly.exceptions.ContactCreationException;","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"import grizzly.exceptions.MissingInformationException;","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"import grizzly.exceptions.MissingParameterException;","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"import grizzly.tasks.Deadline;","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"import grizzly.tasks.Event;","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"import grizzly.tasks.Todo;","lastModifiedDate":"2024-02-16"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"import grizzly.utils.Database;","lastModifiedDate":"2024-02-16"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"import grizzly.utils.Storage;","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":" * This class implements a command that generates records (Tasks or Contacts) based on RecordType.","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"delishad21"},"content":"public class GenerateRecordCommand extends Command {","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":"     * Enum for different Record types.","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"delishad21"},"content":"    public static enum RecordType { TODO, DEADLINE, EVENT, CONTACT }","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"delishad21"},"content":"    private RecordType recordType;","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"delishad21"},"content":"    private Hashtable\u003cString, String\u003e params;","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"delishad21"},"content":"     * Creates GenerateRecordCommand, basic constructor that takes in the type of record and the user input.","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"delishad21"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"delishad21"},"content":"     * @param taskType The type of record to be generated based on the enum RecordType.","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"delishad21"},"content":"     * @param input user input to be parsed.","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"delishad21"},"content":"    public GenerateRecordCommand(RecordType recordType, Hashtable\u003cString, String\u003e params) {","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"delishad21"},"content":"        super(false);","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"delishad21"},"content":"        this.recordType \u003d recordType;","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"delishad21"},"content":"        this.params \u003d params;","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"delishad21"},"content":"     * Executes record generation command, generates record based on user input and recordType.","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"delishad21"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"delishad21"},"content":"     * @param db the database of records.","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"delishad21"},"content":"     * @param storage Storage object with save file.","lastModifiedDate":"2024-02-09"},{"lineNumber":46,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-02-09"},{"lineNumber":48,"author":{"gitId":"delishad21"},"content":"    public String execute(Database db, Storage storage)","lastModifiedDate":"2024-02-09"},{"lineNumber":49,"author":{"gitId":"delishad21"},"content":"            throws MissingInformationException, MissingParameterException,","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"delishad21"},"content":"            DateTimeParseException, ContactCreationException {","lastModifiedDate":"2024-02-09"},{"lineNumber":51,"author":{"gitId":"delishad21"},"content":"        switch (this.recordType) {","lastModifiedDate":"2024-02-09"},{"lineNumber":52,"author":{"gitId":"delishad21"},"content":"        case TODO:","lastModifiedDate":"2024-02-09"},{"lineNumber":53,"author":{"gitId":"delishad21"},"content":"            Todo t \u003d Todo.todoParse(false, params);","lastModifiedDate":"2024-02-09"},{"lineNumber":54,"author":{"gitId":"delishad21"},"content":"            db.addTask(t);","lastModifiedDate":"2024-02-09"},{"lineNumber":55,"author":{"gitId":"delishad21"},"content":"            return \"Todo Task added!\\n\" + t.toString() + \"\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":56,"author":{"gitId":"delishad21"},"content":"                   + \"You now have \" + db.taskListSize() + \" tasks in the list.\";","lastModifiedDate":"2024-02-09"},{"lineNumber":57,"author":{"gitId":"delishad21"},"content":"        case DEADLINE:","lastModifiedDate":"2024-02-09"},{"lineNumber":58,"author":{"gitId":"delishad21"},"content":"            Deadline d \u003d Deadline.deadlineParse(false, params);","lastModifiedDate":"2024-02-09"},{"lineNumber":59,"author":{"gitId":"delishad21"},"content":"            db.addTask(d);","lastModifiedDate":"2024-02-09"},{"lineNumber":60,"author":{"gitId":"delishad21"},"content":"            return \"Deadline Task added!\\n\" + d.toString() + \"\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":61,"author":{"gitId":"delishad21"},"content":"                   + \"You now have \" + db.taskListSize() + \" tasks in the list.\";","lastModifiedDate":"2024-02-09"},{"lineNumber":62,"author":{"gitId":"delishad21"},"content":"        case EVENT:","lastModifiedDate":"2024-02-09"},{"lineNumber":63,"author":{"gitId":"delishad21"},"content":"            Event e \u003d Event.eventParse(false, params);","lastModifiedDate":"2024-02-09"},{"lineNumber":64,"author":{"gitId":"delishad21"},"content":"            db.addTask(e);","lastModifiedDate":"2024-02-09"},{"lineNumber":65,"author":{"gitId":"delishad21"},"content":"            return \"Event Task added!\\n\" + e.toString() + \"\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":66,"author":{"gitId":"delishad21"},"content":"                   + \"You now have \" + db.taskListSize() + \" tasks in the list.\";","lastModifiedDate":"2024-02-09"},{"lineNumber":67,"author":{"gitId":"delishad21"},"content":"        case CONTACT:","lastModifiedDate":"2024-02-09"},{"lineNumber":68,"author":{"gitId":"delishad21"},"content":"            Contact c \u003d Contact.contactParse(params);","lastModifiedDate":"2024-02-09"},{"lineNumber":69,"author":{"gitId":"delishad21"},"content":"            db.addContact(c);","lastModifiedDate":"2024-02-09"},{"lineNumber":70,"author":{"gitId":"delishad21"},"content":"            return \"Contact added!\\n\" + c.toString() + \"\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":71,"author":{"gitId":"delishad21"},"content":"                   + \"You now have \" + db.contactListSize() + \" contacts.\";","lastModifiedDate":"2024-02-09"},{"lineNumber":72,"author":{"gitId":"delishad21"},"content":"        default:","lastModifiedDate":"2024-02-09"},{"lineNumber":73,"author":{"gitId":"delishad21"},"content":"            // this portion should never run due to usage of enum","lastModifiedDate":"2024-02-16"},{"lineNumber":74,"author":{"gitId":"delishad21"},"content":"            assert false;","lastModifiedDate":"2024-02-16"},{"lineNumber":75,"author":{"gitId":"delishad21"},"content":"            return \"Error generating task: No such task type\";","lastModifiedDate":"2024-02-09"},{"lineNumber":76,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":77,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":78,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"delishad21":78}},{"path":"src/main/java/grizzly/commands/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package grizzly.commands;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"import grizzly.utils.Database;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"import grizzly.utils.Storage;","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":" * This class implements the commmand for listing all available commands","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"     * Creates a HelpCommand, sets isExit to false.","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"    public HelpCommand() {","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"        super(false);","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"     * Executes help command, returns all available commands.","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"delishad21"},"content":"     * @param db the current database of records.","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":"     * @param storage Storage object with save file.","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"delishad21"},"content":"    public String execute(Database db, Storage storage) {","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"delishad21"},"content":"        return \"Here are the commands you can use:\\n\"","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"delishad21"},"content":"                + \"1. Add a todo task: todo [description]\\n\\n\"","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"delishad21"},"content":"                + \"2. Add a deadline task: \\n\"","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"delishad21"},"content":"                + \"deadline [description] /by [date, time]\\n\\n\"","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"delishad21"},"content":"                + \"3. Add an event task: \\n\"","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"delishad21"},"content":"                + \"event [description] /from [date, time] \\n/to [date, time]\\n\\n\"","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"delishad21"},"content":"                + \"4. Add a contact: \\n\"","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"delishad21"},"content":"                + \"contact [name] \\n/email [email] /number [number]\\n\\n\"","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"delishad21"},"content":"                + \"5. List all tasks: list tasks\\n\\n\"","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"delishad21"},"content":"                + \"6. List all contacts: list contacts\\n\\n\"","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"delishad21"},"content":"                + \"7. Find tasks and contacts: \\nfind [keyword]\\n\\n\"","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"delishad21"},"content":"                + \"8. Mark a task as done: \\nmark [task index]\\n\\n\"","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"delishad21"},"content":"                + \"9. Unmark a task as done:\\nunmark [task index]\\n\\n\"","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"delishad21"},"content":"                + \"10. Delete a task:\\ndelete task [task index]\\n\\n\"","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"delishad21"},"content":"                + \"11. Delete a contact:\\ndelete contact [contact index]\\n\\n\"","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"delishad21"},"content":"                + \"12. Exit the program: bye\\n\\n\"","lastModifiedDate":"2024-02-19"},{"lineNumber":41,"author":{"gitId":"delishad21"},"content":"                + \"View a comprehensive user guide at: \\n\"","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"delishad21"},"content":"                + \"https://delishad21.github.io/ip/\";","lastModifiedDate":"2024-02-19"},{"lineNumber":43,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":44,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":45,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"delishad21":45}},{"path":"src/main/java/grizzly/commands/ListRecordsCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package grizzly.commands;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"import java.util.Hashtable;","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"import grizzly.exceptions.GrizzlyException;","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"import grizzly.utils.Database;","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"import grizzly.utils.Storage;","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"/**","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":" * This class implements the commmand for listing records in a tasklist.","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":" */","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"public class ListRecordsCommand extends Command {","lastModifiedDate":"2024-02-16"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"    private String description;","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"     * Creates a ListTaskCommand, sets isExit to false.","lastModifiedDate":"2024-02-16"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"    public ListRecordsCommand(Hashtable\u003cString, String\u003e params) {","lastModifiedDate":"2024-02-16"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":"        super(false);","lastModifiedDate":"2024-02-16"},{"lineNumber":20,"author":{"gitId":"delishad21"},"content":"        this.description \u003d params.get(\"description\");","lastModifiedDate":"2024-02-16"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":23,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":24,"author":{"gitId":"delishad21"},"content":"     * Executes list task command, returns tasks and contacts in provided TaskList.","lastModifiedDate":"2024-02-16"},{"lineNumber":25,"author":{"gitId":"delishad21"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":26,"author":{"gitId":"delishad21"},"content":"     * @param db the current database of records.","lastModifiedDate":"2024-02-16"},{"lineNumber":27,"author":{"gitId":"delishad21"},"content":"     * @param storage Storage object with save file.","lastModifiedDate":"2024-02-16"},{"lineNumber":28,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":29,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-02-16"},{"lineNumber":30,"author":{"gitId":"delishad21"},"content":"    public String execute(Database db, Storage storage) throws GrizzlyException {","lastModifiedDate":"2024-02-16"},{"lineNumber":31,"author":{"gitId":"delishad21"},"content":"        switch (description.toLowerCase()) {","lastModifiedDate":"2024-02-16"},{"lineNumber":32,"author":{"gitId":"delishad21"},"content":"        case \"tasks\":","lastModifiedDate":"2024-02-16"},{"lineNumber":33,"author":{"gitId":"delishad21"},"content":"            return db.tasksToString();","lastModifiedDate":"2024-02-16"},{"lineNumber":34,"author":{"gitId":"delishad21"},"content":"        case \"contacts\":","lastModifiedDate":"2024-02-16"},{"lineNumber":35,"author":{"gitId":"delishad21"},"content":"            return db.contactsToString();","lastModifiedDate":"2024-02-16"},{"lineNumber":36,"author":{"gitId":"delishad21"},"content":"        case \"\":","lastModifiedDate":"2024-02-16"},{"lineNumber":37,"author":{"gitId":"delishad21"},"content":"            return db.toString();","lastModifiedDate":"2024-02-16"},{"lineNumber":38,"author":{"gitId":"delishad21"},"content":"        default:","lastModifiedDate":"2024-02-16"},{"lineNumber":39,"author":{"gitId":"delishad21"},"content":"            throw new GrizzlyException(\"Error: \" + description + \" is not stored in my database!\");","lastModifiedDate":"2024-02-16"},{"lineNumber":40,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":41,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":42,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-02-16"}],"authorContributionMap":{"delishad21":42}},{"path":"src/main/java/grizzly/commands/ModifyTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package grizzly.commands;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"import java.util.Hashtable;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"import grizzly.exceptions.TaskModificationException;","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"import grizzly.tasks.Task;","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"import grizzly.utils.Database;","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"import grizzly.utils.Storage;","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":" * This class implements the modify task command that modifies tasks in the bot tasklist.","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"public class ModifyTaskCommand extends Command {","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"     * Enum used for classifying task modification types","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"    public enum ModificationTypes { MARK, UNMARK }","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"    private ModificationTypes modType;","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":"    private String indexInput;","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":"     * Creates ModifyTaskCommand, takes in type of modificaiton and the user input for index to be modified.","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"delishad21"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"delishad21"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"delishad21"},"content":"     * @param modType Modification type based on enum ModificationTypes.","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"delishad21"},"content":"     * @param indexInput user input to be parsed into index.","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"delishad21"},"content":"    public ModifyTaskCommand(ModificationTypes modType, Hashtable\u003cString, String\u003e params) {","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"delishad21"},"content":"        super(false);","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"delishad21"},"content":"        this.modType \u003d modType;","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"delishad21"},"content":"        this.indexInput \u003d params.get(\"description\");","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"delishad21"},"content":"     * Executes modify task command, modifies tasks in list based on index and type.","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"delishad21"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"delishad21"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"delishad21"},"content":"     * @param db the current database of records.","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"delishad21"},"content":"     * @param storage Storage object with save file.","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"delishad21"},"content":"    public String execute(Database db, Storage storage)","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"delishad21"},"content":"            throws TaskModificationException {","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":45,"author":{"gitId":"delishad21"},"content":"        int index \u003d parseIndex(db);","lastModifiedDate":"2024-02-16"},{"lineNumber":46,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":47,"author":{"gitId":"delishad21"},"content":"        switch (this.modType) {","lastModifiedDate":"2024-02-16"},{"lineNumber":48,"author":{"gitId":"delishad21"},"content":"        case MARK:","lastModifiedDate":"2024-02-16"},{"lineNumber":49,"author":{"gitId":"delishad21"},"content":"            Task t1 \u003d db.getTask(index);","lastModifiedDate":"2024-02-16"},{"lineNumber":50,"author":{"gitId":"delishad21"},"content":"            t1.doTask();","lastModifiedDate":"2024-02-16"},{"lineNumber":51,"author":{"gitId":"delishad21"},"content":"            assert t1.toString().substring(3, 6).equals(\"[X]\");","lastModifiedDate":"2024-02-16"},{"lineNumber":52,"author":{"gitId":"delishad21"},"content":"            return \"Good job on finishing your task!:\\n\" + t1;","lastModifiedDate":"2024-02-16"},{"lineNumber":53,"author":{"gitId":"delishad21"},"content":"        case UNMARK:","lastModifiedDate":"2024-02-16"},{"lineNumber":54,"author":{"gitId":"delishad21"},"content":"            Task t2 \u003d db.getTask(index);","lastModifiedDate":"2024-02-16"},{"lineNumber":55,"author":{"gitId":"delishad21"},"content":"            t2.undoTask();","lastModifiedDate":"2024-02-16"},{"lineNumber":56,"author":{"gitId":"delishad21"},"content":"            assert t2.toString().substring(3, 6).equals(\"[ ]\");","lastModifiedDate":"2024-02-16"},{"lineNumber":57,"author":{"gitId":"delishad21"},"content":"            return \"I\u0027ve marked this task as undone:\\n\" + t2;","lastModifiedDate":"2024-02-16"},{"lineNumber":58,"author":{"gitId":"delishad21"},"content":"        default:","lastModifiedDate":"2024-02-16"},{"lineNumber":59,"author":{"gitId":"delishad21"},"content":"            return \"Error Modifying Task: No such modification type\";","lastModifiedDate":"2024-02-16"},{"lineNumber":60,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":61,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":62,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":63,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":64,"author":{"gitId":"delishad21"},"content":"     * Parses indexInput into an integer index.","lastModifiedDate":"2024-02-16"},{"lineNumber":65,"author":{"gitId":"delishad21"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":66,"author":{"gitId":"delishad21"},"content":"     * @throws TaskModificationException","lastModifiedDate":"2024-02-16"},{"lineNumber":67,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":68,"author":{"gitId":"delishad21"},"content":"    private int parseIndex(Database db) throws TaskModificationException {","lastModifiedDate":"2024-02-16"},{"lineNumber":69,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":70,"author":{"gitId":"delishad21"},"content":"        int index;","lastModifiedDate":"2024-02-16"},{"lineNumber":71,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":72,"author":{"gitId":"delishad21"},"content":"        // check if index is empty","lastModifiedDate":"2024-02-16"},{"lineNumber":73,"author":{"gitId":"delishad21"},"content":"        if (indexInput.equals(\"\")) {","lastModifiedDate":"2024-02-09"},{"lineNumber":74,"author":{"gitId":"delishad21"},"content":"            throw new TaskModificationException(\"Input is missing task number\\nList is of current length: \"","lastModifiedDate":"2024-01-28"},{"lineNumber":75,"author":{"gitId":"delishad21"},"content":"                                                + db.taskListSize());","lastModifiedDate":"2024-02-09"},{"lineNumber":76,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":77,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":78,"author":{"gitId":"delishad21"},"content":"        // check if index is a number","lastModifiedDate":"2024-02-16"},{"lineNumber":79,"author":{"gitId":"delishad21"},"content":"        try {","lastModifiedDate":"2024-02-09"},{"lineNumber":80,"author":{"gitId":"delishad21"},"content":"            index \u003d Integer.parseInt(indexInput);","lastModifiedDate":"2024-02-09"},{"lineNumber":81,"author":{"gitId":"delishad21"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-09"},{"lineNumber":82,"author":{"gitId":"delishad21"},"content":"            throw new TaskModificationException(\"Invalid number input\");","lastModifiedDate":"2024-02-09"},{"lineNumber":83,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":84,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":85,"author":{"gitId":"delishad21"},"content":"        // check if index is within bounds","lastModifiedDate":"2024-02-16"},{"lineNumber":86,"author":{"gitId":"delishad21"},"content":"        if (index \u003c 1 || index \u003e db.taskListSize()) {","lastModifiedDate":"2024-02-09"},{"lineNumber":87,"author":{"gitId":"delishad21"},"content":"            throw new TaskModificationException(\"Invalid Index \" + index","lastModifiedDate":"2024-02-09"},{"lineNumber":88,"author":{"gitId":"delishad21"},"content":"                                                + \" for current list\\nList is of current length: \"","lastModifiedDate":"2024-01-28"},{"lineNumber":89,"author":{"gitId":"delishad21"},"content":"                                                + db.taskListSize());","lastModifiedDate":"2024-02-09"},{"lineNumber":90,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":91,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":92,"author":{"gitId":"delishad21"},"content":"        return index;","lastModifiedDate":"2024-02-16"},{"lineNumber":93,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":94,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"delishad21":94}},{"path":"src/main/java/grizzly/contacts/Contact.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package grizzly.contacts;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"import java.util.Hashtable;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"import grizzly.exceptions.ContactCreationException;","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"import grizzly.exceptions.MissingInformationException;","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"import grizzly.exceptions.MissingParameterException;","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"import grizzly.utils.Parser;","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":" * This class implements the Contact record to be saved by the bot","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"public class Contact {","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"    private static final String[] REQUIRED_PARAMS \u003d {\"description\", \"email\", \"number\"};","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"    private String name;","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":"    private String email;","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"delishad21"},"content":"    private int number;","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"delishad21"},"content":"     * Creates a Contact object","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"delishad21"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"delishad21"},"content":"     * @param name","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"delishad21"},"content":"     * @param email","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"delishad21"},"content":"     * @param number","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"delishad21"},"content":"    public Contact(String name, String email, int number) {","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"delishad21"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"delishad21"},"content":"        this.email \u003d email;","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"delishad21"},"content":"        this.number \u003d number;","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"delishad21"},"content":"     * Creates a Contact object given parameters in a Hashtable.","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"delishad21"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"delishad21"},"content":"     * @param params","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"delishad21"},"content":"     * @throws ContactCreationException","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"delishad21"},"content":"     * @throws MissingInformationException","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"delishad21"},"content":"     * @throws MissingParameterException","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"delishad21"},"content":"    public static Contact contactParse(Hashtable\u003cString, String\u003e params)","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"delishad21"},"content":"            throws ContactCreationException, MissingInformationException, MissingParameterException {","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":46,"author":{"gitId":"delishad21"},"content":"        Parser.checkParams(params, REQUIRED_PARAMS);","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":48,"author":{"gitId":"delishad21"},"content":"        String[] filteredParams \u003d Stream.of(REQUIRED_PARAMS).map(x -\u003e params.get(x)).toArray(String[]::new);","lastModifiedDate":"2024-02-09"},{"lineNumber":49,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"delishad21"},"content":"        String name \u003d filteredParams[0];","lastModifiedDate":"2024-02-09"},{"lineNumber":51,"author":{"gitId":"delishad21"},"content":"        String email \u003d filteredParams[1];","lastModifiedDate":"2024-02-09"},{"lineNumber":52,"author":{"gitId":"delishad21"},"content":"        String numString \u003d filteredParams[2];","lastModifiedDate":"2024-02-09"},{"lineNumber":53,"author":{"gitId":"delishad21"},"content":"        int number;","lastModifiedDate":"2024-02-09"},{"lineNumber":54,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":55,"author":{"gitId":"delishad21"},"content":"        try {","lastModifiedDate":"2024-02-09"},{"lineNumber":56,"author":{"gitId":"delishad21"},"content":"            number \u003d Integer.parseInt(numString);","lastModifiedDate":"2024-02-09"},{"lineNumber":57,"author":{"gitId":"delishad21"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-09"},{"lineNumber":58,"author":{"gitId":"delishad21"},"content":"            throw new ContactCreationException(\"Invalid number input\");","lastModifiedDate":"2024-02-09"},{"lineNumber":59,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":60,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":61,"author":{"gitId":"delishad21"},"content":"        return new Contact(name, email, number);","lastModifiedDate":"2024-02-09"},{"lineNumber":62,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":63,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":64,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-02-09"},{"lineNumber":65,"author":{"gitId":"delishad21"},"content":"    public String toString() {","lastModifiedDate":"2024-02-09"},{"lineNumber":66,"author":{"gitId":"delishad21"},"content":"        return this.name + \" | \" + this.email + \" | \" + this.number;","lastModifiedDate":"2024-02-09"},{"lineNumber":67,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":68,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":69,"author":{"gitId":"delishad21"},"content":"    public String toSave() {","lastModifiedDate":"2024-02-09"},{"lineNumber":70,"author":{"gitId":"delishad21"},"content":"        return \"[C]|\" + this.name + \"|\" + this.email + \"|\" + this.number;","lastModifiedDate":"2024-02-09"},{"lineNumber":71,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":72,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":73,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"delishad21":73}},{"path":"src/main/java/grizzly/exceptions/ContactCreationException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package grizzly.exceptions;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":" * This class implements the exception for when an error occurs on creation of contacts.","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"public class ContactCreationException extends GrizzlyException {","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"     * Creates a ContactCreationException.","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"     * @param errorMsg","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"    public ContactCreationException(String errorMsg) {","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"        super(\"Error Creating Contact! \" + errorMsg);","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"delishad21":17}},{"path":"src/main/java/grizzly/exceptions/GrizzlyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package grizzly.exceptions;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"/**","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":" * This class is the parent class for all Exceptions specific to the Grizzly Bot.","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":" *","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":" * @author delishad21","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":" */","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"public class GrizzlyException extends Exception {","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"     * Creates a GrizzlyException, thrown when an error specific to the grizzlybot happens.","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"     * @param errorMsg error message to print","lastModifiedDate":"2024-02-16"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"    public GrizzlyException(String errorMsg) {","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"        super(errorMsg);","lastModifiedDate":"2024-02-16"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-02-16"}],"authorContributionMap":{"delishad21":18}},{"path":"src/main/java/grizzly/exceptions/MissingInformationException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package grizzly.exceptions;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":" * This class implements the Exception for when user input to the bot is missing parameter information.","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":" *","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":" * @author delishad21","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"public class MissingInformationException extends GrizzlyException {","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"     * Creates a MissingInformationException, thrown when a task is unable to be created due to","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"     * missing information.","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"     * @param missingParameters All missing information in creation of the task.","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"    public MissingInformationException(String... missingInformation) {","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"        super(\"Missing information: \" + String.join(\",\", missingInformation));","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"delishad21":20}},{"path":"src/main/java/grizzly/exceptions/MissingParameterException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package grizzly.exceptions;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":" * This class implements the Exception for when user input to the bot is missing parameters.","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":" *","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":" * @author delishad21","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"public class MissingParameterException extends GrizzlyException {","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"     * Creates a TaskCreationException, thrown when a task is unable to be created.","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"     * @param missingParameters All missing parameters in creation of the task.","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"    public MissingParameterException(String... missingParameters) {","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"        super(\"Missing parameters: \" + String.join(\",\", missingParameters));","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"delishad21":19}},{"path":"src/main/java/grizzly/exceptions/NoSuchCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package grizzly.exceptions;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":" * This class implements an excpetion for when the bot recieves an invalid command","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":" *","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":" * @author delishad21","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"public class NoSuchCommandException extends GrizzlyException {","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"     * Creates a NoSuchCommandException, used when user inputs an invalid command.","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"     * @param command The invaild command.","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"    public NoSuchCommandException(String command) {","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"        super(\"\\\"\" + command + \"\\\" is not within my capabilities, type \u0027help\u0027 to see what I can do.\");","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"delishad21":19}},{"path":"src/main/java/grizzly/exceptions/RecordCreationException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package grizzly.exceptions;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":" * This class implements an excpetion for when the bot is unable to create a task.","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":" *","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":" * @author delishad21","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"public class RecordCreationException extends GrizzlyException {","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"     * Creates a RecordCreationException, thrown when a task is unable to be created.","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"     * @param errorMsg Reason for record creation failure.","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"    public RecordCreationException(String errorMsg) {","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"        super(\"Error Creating Record! \" + errorMsg);","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"delishad21":19}},{"path":"src/main/java/grizzly/exceptions/RecordDeletionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package grizzly.exceptions;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":" * This class implements the Exception for when an error occurs on deletion of a record.","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"public class RecordDeletionException extends GrizzlyException {","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"     * Creates a RecordDeletionException.","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"     * @param errorMsg Reason for record deletion failure.","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"    public RecordDeletionException(String errorMsg) {","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"        super(\"Error Deleting Record! \" + errorMsg);","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"delishad21":16}},{"path":"src/main/java/grizzly/exceptions/TaskModificationException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package grizzly.exceptions;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":" * This class implements an excpetion for when the bot fails to modify a task.","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":" *","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":" * @author delishad21","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"public class TaskModificationException extends GrizzlyException {","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"     * Creates a TaskModificationException, thrown when user tries to modify a task but fails to.","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"     * @param errorMsg Reason for task modification failure.","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"    public TaskModificationException(String errorMsg) {","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"        super(\"Error Modifying Task! \" + errorMsg);","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"delishad21":18}},{"path":"src/main/java/grizzly/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package grizzly.tasks;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"import java.util.Hashtable;","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"import grizzly.exceptions.MissingInformationException;","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"import grizzly.exceptions.MissingParameterException;","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"import grizzly.utils.Parser;","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":" * This class implements the Deadline task type for the bot.","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":" *","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":" * @author delishad21","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":"    private static final String[] REQUIRED_PARAMS \u003d {\"description\", \"by\"};","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"delishad21"},"content":"     * Creates Deadline object.","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"delishad21"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"delishad21"},"content":"     * @param isDone Marks if task is completed.","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"delishad21"},"content":"     * @param description Description of the task.","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"delishad21"},"content":"     * @param deadline Datetime value for the deadline of the task.","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"delishad21"},"content":"    public Deadline(boolean isDone, String description, LocalDateTime deadline) {","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"delishad21"},"content":"        super(isDone, description);","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"delishad21"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-01-23"},{"lineNumber":33,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":34,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":35,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"delishad21"},"content":"     * Returns a deadline object by taking in a Hashtable of parameters and parsing it.","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"delishad21"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"delishad21"},"content":"     * @param isDone Marks if task is completed.","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"delishad21"},"content":"     * @param params Hashtable of parameters for the generation of task.","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"delishad21"},"content":"     * @throws MissingInformationException Missing parameter information.","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"delishad21"},"content":"     * @throws MissingParameterException Missing parameters.","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"delishad21"},"content":"     * @throws DateTimeParseException Error parsing datetime passed as input.","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"delishad21"},"content":"    public static Deadline deadlineParse(boolean isDone, Hashtable\u003cString, String\u003e params)","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"delishad21"},"content":"            throws MissingInformationException, MissingParameterException, DateTimeParseException {","lastModifiedDate":"2024-02-09"},{"lineNumber":46,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"delishad21"},"content":"        Parser.checkParams(params, REQUIRED_PARAMS);","lastModifiedDate":"2024-02-09"},{"lineNumber":48,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"delishad21"},"content":"        String[] filteredParams \u003d Stream.of(REQUIRED_PARAMS).map(x -\u003e params.get(x)).toArray(String[]::new);","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":51,"author":{"gitId":"delishad21"},"content":"        String description \u003d filteredParams[0];","lastModifiedDate":"2024-02-09"},{"lineNumber":52,"author":{"gitId":"delishad21"},"content":"        LocalDateTime deadlineDateTime \u003d LocalDateTime.parse(filteredParams[1], Parser.INPUT_DT_FORMATTER);","lastModifiedDate":"2024-02-09"},{"lineNumber":53,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":54,"author":{"gitId":"delishad21"},"content":"        return new Deadline(isDone, description, deadlineDateTime);","lastModifiedDate":"2024-02-09"},{"lineNumber":55,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":56,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":57,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"delishad21"},"content":"     * Returns Deadline as a viewable String.","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"delishad21"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"delishad21"},"content":"     * @return String","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":64,"author":{"gitId":"delishad21"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":65,"author":{"gitId":"delishad21"},"content":"        return \"[D]\" + super.toString() + \"\\n(by: \" + deadline.format(Parser.OUTPUT_DT_FORMATTER) + \")\";","lastModifiedDate":"2024-02-16"},{"lineNumber":66,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":67,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":68,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":69,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":70,"author":{"gitId":"delishad21"},"content":"     * Coverts Deadline into a String for saving in save file.","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"delishad21"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":72,"author":{"gitId":"delishad21"},"content":"     * @return String","lastModifiedDate":"2024-01-28"},{"lineNumber":73,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":74,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":75,"author":{"gitId":"delishad21"},"content":"    public String toSave() {","lastModifiedDate":"2024-01-27"},{"lineNumber":76,"author":{"gitId":"delishad21"},"content":"        return \"[D]|\" + super.toSave() + \"|\" + deadline.format(Parser.INPUT_DT_FORMATTER);","lastModifiedDate":"2024-01-28"},{"lineNumber":77,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":78,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"delishad21":78}},{"path":"src/main/java/grizzly/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package grizzly.tasks;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"import java.util.Hashtable;","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"import grizzly.exceptions.MissingInformationException;","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"import grizzly.exceptions.MissingParameterException;","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"import grizzly.utils.Parser;","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":" * This class implements the Event task type for the bot.","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":" *","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":" * @author delishad21","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"    private static final String[] REQUIRED_PARAMS \u003d {\"description\", \"from\", \"to\"};","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":"    private LocalDateTime start;","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"delishad21"},"content":"    private LocalDateTime end;","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"delishad21"},"content":"     * Creates Event object","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"delishad21"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"delishad21"},"content":"     * @param isDone Marks if task is completed.","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"delishad21"},"content":"     * @param description Description of the task.","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"delishad21"},"content":"     * @param start Datetime value marking the start of the event.","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"delishad21"},"content":"     * @param end Datetime value for marking the end of the event.","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"delishad21"},"content":"    public Event(boolean isDone, String description, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"delishad21"},"content":"        super(isDone, description);","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"delishad21"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-01-23"},{"lineNumber":33,"author":{"gitId":"delishad21"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-01-23"},{"lineNumber":34,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":35,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":36,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"delishad21"},"content":"     * Returns a event object by taking in user input and parsing it.","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"delishad21"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"delishad21"},"content":"     * @param isDone Marks if task is completed.","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"delishad21"},"content":"     * @param params Hashtable of parameters for the generation of task.","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"delishad21"},"content":"     * @throws MissingInformationException Missing parameter information","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"delishad21"},"content":"     * @throws MissingParameterException Missing parameters","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"delishad21"},"content":"     * @throws DateTimeParseException Error parsing datetime passed as input.","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"delishad21"},"content":"    public static Event eventParse(boolean isDone, Hashtable\u003cString, String\u003e params)","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"delishad21"},"content":"            throws MissingInformationException, MissingParameterException, DateTimeParseException {","lastModifiedDate":"2024-02-09"},{"lineNumber":48,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"delishad21"},"content":"        Parser.checkParams(params, REQUIRED_PARAMS);","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":51,"author":{"gitId":"delishad21"},"content":"        String[] filteredParams \u003d Stream.of(REQUIRED_PARAMS).map(x -\u003e params.get(x)).toArray(String[]::new);","lastModifiedDate":"2024-02-09"},{"lineNumber":52,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"delishad21"},"content":"        String description \u003d filteredParams[0];","lastModifiedDate":"2024-02-09"},{"lineNumber":54,"author":{"gitId":"delishad21"},"content":"        LocalDateTime startDateTime \u003d LocalDateTime.parse(filteredParams[1], Parser.INPUT_DT_FORMATTER);","lastModifiedDate":"2024-02-09"},{"lineNumber":55,"author":{"gitId":"delishad21"},"content":"        LocalDateTime endDateTime \u003d LocalDateTime.parse(filteredParams[2], Parser.INPUT_DT_FORMATTER);","lastModifiedDate":"2024-02-09"},{"lineNumber":56,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":57,"author":{"gitId":"delishad21"},"content":"        return new Event(isDone, description, startDateTime, endDateTime);","lastModifiedDate":"2024-02-09"},{"lineNumber":58,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":59,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":60,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":61,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"delishad21"},"content":"     * Returns Event as a viewable String.","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"delishad21"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"delishad21"},"content":"     * @return String","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":66,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":67,"author":{"gitId":"delishad21"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":68,"author":{"gitId":"delishad21"},"content":"        return \"[E]\" + super.toString() + \"\\n(from: \" + start.format(Parser.OUTPUT_DT_FORMATTER) + \")\"","lastModifiedDate":"2024-02-16"},{"lineNumber":69,"author":{"gitId":"delishad21"},"content":"               + \"\\n(to: \" + end.format(Parser.OUTPUT_DT_FORMATTER) + \")\";","lastModifiedDate":"2024-02-16"},{"lineNumber":70,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":71,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":72,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":73,"author":{"gitId":"delishad21"},"content":"     * Converts Event into a String for saving in save file.","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"delishad21"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":75,"author":{"gitId":"delishad21"},"content":"     * @return String","lastModifiedDate":"2024-01-28"},{"lineNumber":76,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":77,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":78,"author":{"gitId":"delishad21"},"content":"    public String toSave() {","lastModifiedDate":"2024-01-27"},{"lineNumber":79,"author":{"gitId":"delishad21"},"content":"        return \"[E]|\" + super.toSave() + \"|\" + start.format(Parser.INPUT_DT_FORMATTER)","lastModifiedDate":"2024-01-28"},{"lineNumber":80,"author":{"gitId":"delishad21"},"content":"               + \"|\" + end.format(Parser.INPUT_DT_FORMATTER);","lastModifiedDate":"2024-01-28"},{"lineNumber":81,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":82,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"delishad21":82}},{"path":"src/main/java/grizzly/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package grizzly.tasks;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":" * This class implements functionality for Tasks in the bot.","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":" *","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":" * @author delishad21","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"public class Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"    private String description;","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"    private boolean isDone;","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"     * Creates Task object.","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"     * @param isDone Marks if task is completed.","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"     * @param description Description of the task.","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"    public Task(boolean isDone, String description) {","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"delishad21"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"delishad21"},"content":"     * Marks task as done by setting isDone to true.","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"delishad21"},"content":"    public void doTask() {","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"delishad21"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":29,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":30,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"delishad21"},"content":"     * Marks task as undone by setting isDone to false","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"delishad21"},"content":"    public void undoTask() {","lastModifiedDate":"2024-01-23"},{"lineNumber":34,"author":{"gitId":"delishad21"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-23"},{"lineNumber":35,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":36,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":37,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"delishad21"},"content":"     * Prints task marker, private method used by toString.","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"delishad21"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"delishad21"},"content":"     * @return marker depending on whether this task is completed.","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"delishad21"},"content":"    private String statusIcon() {","lastModifiedDate":"2024-01-23"},{"lineNumber":43,"author":{"gitId":"delishad21"},"content":"        return isDone ? \"X\" : \" \";","lastModifiedDate":"2024-01-23"},{"lineNumber":44,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":45,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":46,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"delishad21"},"content":"     * Gets description value.","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"delishad21"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"delishad21"},"content":"     * @return description","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"delishad21"},"content":"    public String getDescription() {","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"delishad21"},"content":"        return this.description;","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"delishad21"},"content":"     * Returns Task as a viewable String","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"delishad21"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"delishad21"},"content":"     * @return String","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":61,"author":{"gitId":"delishad21"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":62,"author":{"gitId":"delishad21"},"content":"        return \"[\" + this.statusIcon() + \"] \" + this.description;","lastModifiedDate":"2024-01-23"},{"lineNumber":63,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":64,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":65,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":66,"author":{"gitId":"delishad21"},"content":"     * Converts Task into a String for saving in save file.","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"delishad21"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":68,"author":{"gitId":"delishad21"},"content":"     * @return String","lastModifiedDate":"2024-01-28"},{"lineNumber":69,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":70,"author":{"gitId":"delishad21"},"content":"    public String toSave() {","lastModifiedDate":"2024-01-27"},{"lineNumber":71,"author":{"gitId":"delishad21"},"content":"        return \"[\" + this.statusIcon() + \"]|\" + this.description;","lastModifiedDate":"2024-01-27"},{"lineNumber":72,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":73,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"delishad21":73}},{"path":"src/main/java/grizzly/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package grizzly.tasks;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"import java.util.Hashtable;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"import grizzly.exceptions.MissingInformationException;","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"import grizzly.exceptions.MissingParameterException;","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"import grizzly.utils.Parser;","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":" * This class inplements the Todo task type for the bot.","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":" *","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":" * @author delishad21","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"    private static final String[] REQUIRED_PARAMS \u003d {\"description\"};","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":"     * Creates Todo object.","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"delishad21"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":"     * @param isDone Marks if task is completed.","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":"     * @param description Description of the task.","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"delishad21"},"content":"    public Todo(boolean isDone, String description) {","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"delishad21"},"content":"        super(isDone, description);","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"delishad21"},"content":"     * Returns a todo object by taking in user input and parsing it.","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"delishad21"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"delishad21"},"content":"     * @param isDone Marks if task is completed.","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"delishad21"},"content":"     * @param params Hashtable of parameters for the generation of task.","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"delishad21"},"content":"     * @throws MissingInformationException Missing parameter information","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"delishad21"},"content":"     * @throws MissingParameterException Missing parameters","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"delishad21"},"content":"    public static Todo todoParse(boolean isDone, Hashtable\u003cString, String\u003e params)","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"delishad21"},"content":"            throws MissingInformationException, MissingParameterException {","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"delishad21"},"content":"        Parser.checkParams(params, REQUIRED_PARAMS);","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"delishad21"},"content":"        String[] filteredParams \u003d Stream.of(REQUIRED_PARAMS).map(x -\u003e params.get(x)).toArray(String[]::new);","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"delishad21"},"content":"        return new Todo(false, filteredParams[0]);","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":45,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"delishad21"},"content":"     * Returns Todo as a viewable String.","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"delishad21"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"delishad21"},"content":"     * @return String","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":52,"author":{"gitId":"delishad21"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":53,"author":{"gitId":"delishad21"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-23"},{"lineNumber":54,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":55,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":56,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"delishad21"},"content":"     * Method for converting Todo into a String for saving in save file.","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"delishad21"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"delishad21"},"content":"     * @return String","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":62,"author":{"gitId":"delishad21"},"content":"    public String toSave() {","lastModifiedDate":"2024-01-27"},{"lineNumber":63,"author":{"gitId":"delishad21"},"content":"        return \"[T]|\" + super.toSave();","lastModifiedDate":"2024-01-27"},{"lineNumber":64,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":65,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"delishad21":65}},{"path":"src/main/java/grizzly/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package grizzly.ui;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"import javafx.scene.effect.DropShadow;","lastModifiedDate":"2024-02-16"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2024-02-16"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"import javafx.scene.paint.ImagePattern;","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2024-02-16"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":"import javafx.scene.shape.Polygon;","lastModifiedDate":"2024-02-16"},{"lineNumber":20,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"delishad21"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"delishad21"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"delishad21"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"delishad21"},"content":"    @FXML","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"delishad21"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"delishad21"},"content":"    @FXML","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"delishad21"},"content":"    private Polygon arrow;","lastModifiedDate":"2024-02-16"},{"lineNumber":30,"author":{"gitId":"delishad21"},"content":"    @FXML","lastModifiedDate":"2024-02-16"},{"lineNumber":31,"author":{"gitId":"delishad21"},"content":"    private Circle displayPicture;","lastModifiedDate":"2024-02-16"},{"lineNumber":32,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"delishad21"},"content":"     * Creates a DialogBox for user and bot interactions.","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"delishad21"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"delishad21"},"content":"     * @param text User input or bot response.","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"delishad21"},"content":"     * @param img Image of user or bot.","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"delishad21"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"delishad21"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"delishad21"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"delishad21"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"delishad21"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"delishad21"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"delishad21"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"delishad21"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"delishad21"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"delishad21"},"content":"        displayPicture.setFill(new ImagePattern(img));","lastModifiedDate":"2024-02-16"},{"lineNumber":51,"author":{"gitId":"delishad21"},"content":"        setDropShadow();","lastModifiedDate":"2024-02-16"},{"lineNumber":52,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"delishad21"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"delishad21"},"content":"    private void flip() {","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"delishad21"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"delishad21"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"delishad21"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"delishad21"},"content":"        this.arrow.setRotate(180);","lastModifiedDate":"2024-02-16"},{"lineNumber":62,"author":{"gitId":"delishad21"},"content":"        setAlignment(Pos.CENTER_LEFT);","lastModifiedDate":"2024-02-16"},{"lineNumber":63,"author":{"gitId":"delishad21"},"content":"        dialog.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"delishad21"},"content":"     * Creates a DialogBox that is right justified.","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"delishad21"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"delishad21"},"content":"     * @param text User input or bot response.","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"delishad21"},"content":"     * @param img Image of user or bot.","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"delishad21"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"delishad21"},"content":"        DialogBox userDialog \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-16"},{"lineNumber":74,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":75,"author":{"gitId":"delishad21"},"content":"        userDialog.arrow.setStyle(\"-fx-fill: aliceblue;\");","lastModifiedDate":"2024-02-16"},{"lineNumber":76,"author":{"gitId":"delishad21"},"content":"        userDialog.dialog.setStyle(\"-fx-background-color: aliceblue;\");","lastModifiedDate":"2024-02-16"},{"lineNumber":77,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":78,"author":{"gitId":"delishad21"},"content":"        return userDialog;","lastModifiedDate":"2024-02-16"},{"lineNumber":79,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"delishad21"},"content":"     * Creates a DialogBox that is left justified.","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"delishad21"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"delishad21"},"content":"     * @param text User input or bot response.","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"delishad21"},"content":"     * @param img Image of user or bot.","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"delishad21"},"content":"    public static DialogBox getGrizzlyDialog(String text, Image img) {","lastModifiedDate":"2024-02-16"},{"lineNumber":88,"author":{"gitId":"delishad21"},"content":"        DialogBox grizzlyDialog \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-16"},{"lineNumber":89,"author":{"gitId":"delishad21"},"content":"        grizzlyDialog.flip();","lastModifiedDate":"2024-02-16"},{"lineNumber":90,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":91,"author":{"gitId":"delishad21"},"content":"        grizzlyDialog.arrow.setStyle(\"-fx-fill: #a0522d;\");","lastModifiedDate":"2024-02-16"},{"lineNumber":92,"author":{"gitId":"delishad21"},"content":"        grizzlyDialog.dialog.setStyle(\"-fx-background-color: #a0522d; -fx-text-fill: whitesmoke;\");","lastModifiedDate":"2024-02-16"},{"lineNumber":93,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":94,"author":{"gitId":"delishad21"},"content":"        return grizzlyDialog;","lastModifiedDate":"2024-02-16"},{"lineNumber":95,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":96,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":97,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":98,"author":{"gitId":"delishad21"},"content":"     * Sets drop shadow effect for the dialog box.","lastModifiedDate":"2024-02-16"},{"lineNumber":99,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":100,"author":{"gitId":"delishad21"},"content":"    private void setDropShadow() {","lastModifiedDate":"2024-02-16"},{"lineNumber":101,"author":{"gitId":"delishad21"},"content":"        DropShadow dropShadow \u003d new DropShadow();","lastModifiedDate":"2024-02-16"},{"lineNumber":102,"author":{"gitId":"delishad21"},"content":"        dropShadow.setRadius(5.0);","lastModifiedDate":"2024-02-16"},{"lineNumber":103,"author":{"gitId":"delishad21"},"content":"        dropShadow.setOffsetX(1.5);","lastModifiedDate":"2024-02-16"},{"lineNumber":104,"author":{"gitId":"delishad21"},"content":"        dropShadow.setOffsetY(1.5);","lastModifiedDate":"2024-02-16"},{"lineNumber":105,"author":{"gitId":"delishad21"},"content":"        dropShadow.setColor(Color.color(0, 0, 0));","lastModifiedDate":"2024-02-16"},{"lineNumber":106,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":107,"author":{"gitId":"delishad21"},"content":"        this.setEffect(dropShadow);","lastModifiedDate":"2024-02-16"},{"lineNumber":108,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":109,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"delishad21":109}},{"path":"src/main/java/grizzly/ui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package grizzly.ui;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"import grizzly.Grizzly;","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":" * Class that implements the starting up of the main User Interface","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"    private Grizzly grizzly \u003d new Grizzly();","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"delishad21"},"content":"     * Starts the bot by generating Javafx items for the user interface and linking a Grizzly object.","lastModifiedDate":"2024-02-16"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"delishad21"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"delishad21"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"delishad21"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"delishad21"},"content":"            System.err.println(fxmlLoader.getLocation().toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":28,"author":{"gitId":"delishad21"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"delishad21"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"delishad21"},"content":"            String css \u003d Main.class.getResource(\"/application.css\").toExternalForm();","lastModifiedDate":"2024-02-17"},{"lineNumber":31,"author":{"gitId":"delishad21"},"content":"            scene.getStylesheets().add(css);","lastModifiedDate":"2024-02-16"},{"lineNumber":32,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":33,"author":{"gitId":"delishad21"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"delishad21"},"content":"            stage.setTitle(\"Grizzly\");","lastModifiedDate":"2024-02-16"},{"lineNumber":35,"author":{"gitId":"delishad21"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setGrizzly(grizzly);","lastModifiedDate":"2024-02-16"},{"lineNumber":36,"author":{"gitId":"delishad21"},"content":"            stage.show();","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":38,"author":{"gitId":"delishad21"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"delishad21"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"delishad21":42}},{"path":"src/main/java/grizzly/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package grizzly.ui;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"import grizzly.Grizzly;","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"import javafx.application.Platform;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"import javafx.util.Duration;","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":" * Class that implements the Main Window of the bot","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"delishad21"},"content":"    @FXML","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":"    @FXML","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"delishad21"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"delishad21"},"content":"    @FXML","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"delishad21"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"delishad21"},"content":"    @FXML","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"delishad21"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"delishad21"},"content":"    @FXML","lastModifiedDate":"2024-02-17"},{"lineNumber":29,"author":{"gitId":"delishad21"},"content":"    private ImageView background;","lastModifiedDate":"2024-02-17"},{"lineNumber":30,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"delishad21"},"content":"    private Grizzly grizzly;","lastModifiedDate":"2024-02-16"},{"lineNumber":32,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"delishad21"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"delishad21"},"content":"    private Image grizzlyImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Grizzly.png\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":35,"author":{"gitId":"delishad21"},"content":"    private Image backgroundImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/BG.jpg\"));","lastModifiedDate":"2024-02-17"},{"lineNumber":36,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"delishad21"},"content":"    private String startupMessage \u003d \"Heyo im Grizzly.\\nWhat can I do for you?\";","lastModifiedDate":"2024-02-16"},{"lineNumber":38,"author":{"gitId":"delishad21"},"content":"    private String goodbyeMessage \u003d \"While waiting for you to return, I shall munch on these cookies I have here\";","lastModifiedDate":"2024-02-16"},{"lineNumber":39,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"delishad21"},"content":"     * Initializations for the main window","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"delishad21"},"content":"    @FXML","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"delishad21"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"delishad21"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"delishad21"},"content":"     * Initalises the Grizzly bot used together with the interface to provide functionality and responses.","lastModifiedDate":"2024-02-16"},{"lineNumber":50,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"delishad21"},"content":"    public void setGrizzly(Grizzly g) {","lastModifiedDate":"2024-02-16"},{"lineNumber":52,"author":{"gitId":"delishad21"},"content":"        grizzly \u003d g;","lastModifiedDate":"2024-02-16"},{"lineNumber":53,"author":{"gitId":"delishad21"},"content":"        String loadStatus \u003d g.loadSave(\"data/data.txt\");","lastModifiedDate":"2024-02-16"},{"lineNumber":54,"author":{"gitId":"delishad21"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"delishad21"},"content":"            DialogBox.getGrizzlyDialog(loadStatus, grizzlyImage),","lastModifiedDate":"2024-02-16"},{"lineNumber":56,"author":{"gitId":"delishad21"},"content":"            DialogBox.getGrizzlyDialog(startupMessage, grizzlyImage)","lastModifiedDate":"2024-02-16"},{"lineNumber":57,"author":{"gitId":"delishad21"},"content":"        );","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":59,"author":{"gitId":"delishad21"},"content":"        assert g.isRunning();","lastModifiedDate":"2024-02-16"},{"lineNumber":60,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"delishad21"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Grizzly\u0027s reply","lastModifiedDate":"2024-02-16"},{"lineNumber":64,"author":{"gitId":"delishad21"},"content":"     * and then appends them to the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"delishad21"},"content":"    @FXML","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"delishad21"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"delishad21"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"delishad21"},"content":"        String response \u003d grizzly.getResponse(input);","lastModifiedDate":"2024-02-16"},{"lineNumber":70,"author":{"gitId":"delishad21"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"delishad21"},"content":"            DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"delishad21"},"content":"            DialogBox.getGrizzlyDialog(response, grizzlyImage)","lastModifiedDate":"2024-02-16"},{"lineNumber":73,"author":{"gitId":"delishad21"},"content":"        );","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"delishad21"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"delishad21"},"content":"        if (!grizzly.isRunning()) {","lastModifiedDate":"2024-02-16"},{"lineNumber":77,"author":{"gitId":"delishad21"},"content":"            shutdown();","lastModifiedDate":"2024-02-16"},{"lineNumber":78,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":79,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":80,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":81,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":82,"author":{"gitId":"delishad21"},"content":"     * Shuts down the bot after a delay","lastModifiedDate":"2024-02-16"},{"lineNumber":83,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":84,"author":{"gitId":"delishad21"},"content":"    private void shutdown() {","lastModifiedDate":"2024-02-16"},{"lineNumber":85,"author":{"gitId":"delishad21"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"delishad21"},"content":"            DialogBox.getGrizzlyDialog(goodbyeMessage, grizzlyImage)","lastModifiedDate":"2024-02-16"},{"lineNumber":87,"author":{"gitId":"delishad21"},"content":"        );","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"delishad21"},"content":"        PauseTransition pause \u003d new PauseTransition(Duration.seconds(3));","lastModifiedDate":"2024-02-16"},{"lineNumber":89,"author":{"gitId":"delishad21"},"content":"        pause.setOnFinished(event -\u003e Platform.exit());","lastModifiedDate":"2024-02-03"},{"lineNumber":90,"author":{"gitId":"delishad21"},"content":"        pause.play();","lastModifiedDate":"2024-02-03"},{"lineNumber":91,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":92,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"delishad21":92}},{"path":"src/main/java/grizzly/utils/Database.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package grizzly.utils;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"import grizzly.contacts.Contact;","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"import grizzly.tasks.Task;","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":" * This class implementions the functionality of a database with","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":" * variable length lists containg Task and Contact objects.","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":" *","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":" * @author delishad21","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"public class Database {","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"    private ArrayList\u003cContact\u003e contactList;","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":"     * Creates a TaskList that contains an ArrayList.","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":"    public Database() {","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"delishad21"},"content":"        this.contactList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"delishad21"},"content":"     * Prints out all items in the TaskList.","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"delishad21"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"delishad21"},"content":"    public String toString() {","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"delishad21"},"content":"        return tasksToString() + contactsToString();","lastModifiedDate":"2024-02-16"},{"lineNumber":33,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":34,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":36,"author":{"gitId":"delishad21"},"content":"     * Prints out all stored tasks","lastModifiedDate":"2024-02-16"},{"lineNumber":37,"author":{"gitId":"delishad21"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":38,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":39,"author":{"gitId":"delishad21"},"content":"    public String tasksToString() {","lastModifiedDate":"2024-02-16"},{"lineNumber":40,"author":{"gitId":"delishad21"},"content":"        String s \u003d \"\";","lastModifiedDate":"2024-02-16"},{"lineNumber":41,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"delishad21"},"content":"        s +\u003d \"----------\\nTasks\\n----------\\n\";","lastModifiedDate":"2024-02-16"},{"lineNumber":43,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"delishad21"},"content":"        for (int i \u003d 1; i \u003c\u003d taskList.size(); i++) {","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"delishad21"},"content":"            s +\u003d i + \".\" + taskList.get(i - 1) + \"\\n\";","lastModifiedDate":"2024-02-16"},{"lineNumber":46,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":47,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":48,"author":{"gitId":"delishad21"},"content":"        return s;","lastModifiedDate":"2024-02-16"},{"lineNumber":49,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":51,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":52,"author":{"gitId":"delishad21"},"content":"     * Prints out all stored contacts","lastModifiedDate":"2024-02-16"},{"lineNumber":53,"author":{"gitId":"delishad21"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":54,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":55,"author":{"gitId":"delishad21"},"content":"    public String contactsToString() {","lastModifiedDate":"2024-02-16"},{"lineNumber":56,"author":{"gitId":"delishad21"},"content":"        String s \u003d \"\";","lastModifiedDate":"2024-02-16"},{"lineNumber":57,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":58,"author":{"gitId":"delishad21"},"content":"        s +\u003d \"----------\\nContacts\\n----------\\n\";","lastModifiedDate":"2024-02-16"},{"lineNumber":59,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":60,"author":{"gitId":"delishad21"},"content":"        for (int i \u003d 1; i \u003c\u003d contactList.size(); i++) {","lastModifiedDate":"2024-02-09"},{"lineNumber":61,"author":{"gitId":"delishad21"},"content":"            s +\u003d i + \".\" + contactList.get(i - 1) + \"\\n\";","lastModifiedDate":"2024-02-16"},{"lineNumber":62,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":63,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":64,"author":{"gitId":"delishad21"},"content":"        return s;","lastModifiedDate":"2024-02-16"},{"lineNumber":65,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":66,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":67,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":68,"author":{"gitId":"delishad21"},"content":"     * Adds task to list.","lastModifiedDate":"2024-02-09"},{"lineNumber":69,"author":{"gitId":"delishad21"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":70,"author":{"gitId":"delishad21"},"content":"     * @param t Task that is to be added to list.","lastModifiedDate":"2024-02-09"},{"lineNumber":71,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":72,"author":{"gitId":"delishad21"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2024-02-09"},{"lineNumber":73,"author":{"gitId":"delishad21"},"content":"        this.taskList.add(t);","lastModifiedDate":"2024-02-09"},{"lineNumber":74,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":75,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":76,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":77,"author":{"gitId":"delishad21"},"content":"     * Adds contact to list","lastModifiedDate":"2024-02-09"},{"lineNumber":78,"author":{"gitId":"delishad21"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":79,"author":{"gitId":"delishad21"},"content":"     * @param c Contact to be added to list","lastModifiedDate":"2024-02-09"},{"lineNumber":80,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":81,"author":{"gitId":"delishad21"},"content":"    public void addContact(Contact c) {","lastModifiedDate":"2024-02-09"},{"lineNumber":82,"author":{"gitId":"delishad21"},"content":"        this.contactList.add(c);","lastModifiedDate":"2024-02-09"},{"lineNumber":83,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":84,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":85,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":86,"author":{"gitId":"delishad21"},"content":"     * Removes task from list based on task input.","lastModifiedDate":"2024-02-09"},{"lineNumber":87,"author":{"gitId":"delishad21"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":88,"author":{"gitId":"delishad21"},"content":"     * @param t Task that is to be removed from list.","lastModifiedDate":"2024-02-09"},{"lineNumber":89,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":90,"author":{"gitId":"delishad21"},"content":"    public void removeTask(Task t) {","lastModifiedDate":"2024-02-09"},{"lineNumber":91,"author":{"gitId":"delishad21"},"content":"        this.taskList.remove(t);","lastModifiedDate":"2024-02-09"},{"lineNumber":92,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":93,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":94,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":95,"author":{"gitId":"delishad21"},"content":"     * Removes Task from list based on index.","lastModifiedDate":"2024-02-09"},{"lineNumber":96,"author":{"gitId":"delishad21"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":97,"author":{"gitId":"delishad21"},"content":"     * @param i Index of task to be removed from list.","lastModifiedDate":"2024-02-09"},{"lineNumber":98,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":99,"author":{"gitId":"delishad21"},"content":"    public void removeTask(int i) {","lastModifiedDate":"2024-02-09"},{"lineNumber":100,"author":{"gitId":"delishad21"},"content":"        this.taskList.remove(i - 1);","lastModifiedDate":"2024-02-09"},{"lineNumber":101,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":102,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":103,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":104,"author":{"gitId":"delishad21"},"content":"     * Removes Contact from list based on Contact input.","lastModifiedDate":"2024-02-09"},{"lineNumber":105,"author":{"gitId":"delishad21"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":106,"author":{"gitId":"delishad21"},"content":"     * @param c Task that is to be removed from list.","lastModifiedDate":"2024-02-09"},{"lineNumber":107,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":108,"author":{"gitId":"delishad21"},"content":"    public void removeContact(Contact c) {","lastModifiedDate":"2024-02-09"},{"lineNumber":109,"author":{"gitId":"delishad21"},"content":"        this.contactList.remove(c);","lastModifiedDate":"2024-02-09"},{"lineNumber":110,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":111,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":112,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":113,"author":{"gitId":"delishad21"},"content":"     * Removes Contact from list based on index.","lastModifiedDate":"2024-02-09"},{"lineNumber":114,"author":{"gitId":"delishad21"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":115,"author":{"gitId":"delishad21"},"content":"     * @param i Index of contact to be removed from list.","lastModifiedDate":"2024-02-09"},{"lineNumber":116,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":117,"author":{"gitId":"delishad21"},"content":"    public void removeContact(int i) {","lastModifiedDate":"2024-02-09"},{"lineNumber":118,"author":{"gitId":"delishad21"},"content":"        this.contactList.remove(i - 1);","lastModifiedDate":"2024-02-09"},{"lineNumber":119,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":120,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":121,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":122,"author":{"gitId":"delishad21"},"content":"     * Gets items from TaskList using index.","lastModifiedDate":"2024-02-09"},{"lineNumber":123,"author":{"gitId":"delishad21"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":124,"author":{"gitId":"delishad21"},"content":"     * @param i Index of item to be retrieved.","lastModifiedDate":"2024-02-09"},{"lineNumber":125,"author":{"gitId":"delishad21"},"content":"     * @return Task retrieved from TaskList.","lastModifiedDate":"2024-02-09"},{"lineNumber":126,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":127,"author":{"gitId":"delishad21"},"content":"    public Task getTask(int i) {","lastModifiedDate":"2024-02-09"},{"lineNumber":128,"author":{"gitId":"delishad21"},"content":"        return this.taskList.get(i - 1);","lastModifiedDate":"2024-02-09"},{"lineNumber":129,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":130,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":131,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":132,"author":{"gitId":"delishad21"},"content":"     * Gets items from ContactList using index.","lastModifiedDate":"2024-02-09"},{"lineNumber":133,"author":{"gitId":"delishad21"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":134,"author":{"gitId":"delishad21"},"content":"     * @param i Index of item to be retrieved.","lastModifiedDate":"2024-02-09"},{"lineNumber":135,"author":{"gitId":"delishad21"},"content":"     * @return Task retrieved from TaskList.","lastModifiedDate":"2024-02-09"},{"lineNumber":136,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":137,"author":{"gitId":"delishad21"},"content":"    public Contact getContact(int i) {","lastModifiedDate":"2024-02-09"},{"lineNumber":138,"author":{"gitId":"delishad21"},"content":"        return this.contactList.get(i - 1);","lastModifiedDate":"2024-02-09"},{"lineNumber":139,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":140,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":141,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":142,"author":{"gitId":"delishad21"},"content":"     * Gets current size of TaskList.","lastModifiedDate":"2024-02-09"},{"lineNumber":143,"author":{"gitId":"delishad21"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":144,"author":{"gitId":"delishad21"},"content":"     * @return Size of TaskList as integer.","lastModifiedDate":"2024-02-09"},{"lineNumber":145,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":146,"author":{"gitId":"delishad21"},"content":"    public int taskListSize() {","lastModifiedDate":"2024-02-09"},{"lineNumber":147,"author":{"gitId":"delishad21"},"content":"        return this.taskList.size();","lastModifiedDate":"2024-02-09"},{"lineNumber":148,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":149,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":150,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":151,"author":{"gitId":"delishad21"},"content":"     * Gets current size of ContactList.","lastModifiedDate":"2024-02-09"},{"lineNumber":152,"author":{"gitId":"delishad21"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":153,"author":{"gitId":"delishad21"},"content":"     * @return Size of ContactList as integer.","lastModifiedDate":"2024-02-09"},{"lineNumber":154,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":155,"author":{"gitId":"delishad21"},"content":"    public int contactListSize() {","lastModifiedDate":"2024-02-09"},{"lineNumber":156,"author":{"gitId":"delishad21"},"content":"        return this.contactList.size();","lastModifiedDate":"2024-02-09"},{"lineNumber":157,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":158,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":159,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"delishad21":159}},{"path":"src/main/java/grizzly/utils/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package grizzly.utils;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"import java.util.Hashtable;","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"import java.util.Locale;","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"import grizzly.commands.Command;","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"import grizzly.commands.DeleteRecordCommand;","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"import grizzly.commands.ExitCommand;","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"import grizzly.commands.FindCommand;","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"import grizzly.commands.GenerateRecordCommand;","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"import grizzly.commands.HelpCommand;","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"import grizzly.commands.ListRecordsCommand;","lastModifiedDate":"2024-02-16"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"import grizzly.commands.ModifyTaskCommand;","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"import grizzly.exceptions.MissingInformationException;","lastModifiedDate":"2024-02-16"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"import grizzly.exceptions.MissingParameterException;","lastModifiedDate":"2024-02-16"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"import grizzly.exceptions.NoSuchCommandException;","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"delishad21"},"content":" * This class implements the functionality for Parsing commands input into the bot.","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":" *","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":" * @author delishad21","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"delishad21"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"delishad21"},"content":"public class Parser {","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"delishad21"},"content":"    public static final DateTimeFormatter INPUT_DT_FORMATTER \u003d","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"delishad21"},"content":"        DateTimeFormatter.ofPattern(\"dd/MM/yyyy, HH:mm\");","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"delishad21"},"content":"    public static final DateTimeFormatter OUTPUT_DT_FORMATTER \u003d","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"delishad21"},"content":"        DateTimeFormatter.ofPattern(\"dd MMMM yyyy, hh:mma\", Locale.ENGLISH);","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"delishad21"},"content":"     * Parses user input and  into the appropriate commands for the bot to execute.","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"delishad21"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"delishad21"},"content":"     * @param input","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"delishad21"},"content":"     * @return Command","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"delishad21"},"content":"     * @throws NoSuchCommandException when the input is not part of bot\u0027s functionality","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"delishad21"},"content":"    public static Command parse(String input) throws NoSuchCommandException {","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"delishad21"},"content":"        // Splitting action from parameters","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"delishad21"},"content":"        String[] inputSplit \u003d input.split(\" \", 2);","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"delishad21"},"content":"        String action \u003d inputSplit[0].toLowerCase();","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":45,"author":{"gitId":"delishad21"},"content":"        // Checking for parameters. If not present, assign array with empty string to params","lastModifiedDate":"2024-02-16"},{"lineNumber":46,"author":{"gitId":"delishad21"},"content":"        String[] params \u003d inputSplit.length \u003d\u003d 2","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"delishad21"},"content":"                          ? inputSplit[1].split(\" /\")","lastModifiedDate":"2024-02-09"},{"lineNumber":48,"author":{"gitId":"delishad21"},"content":"                          : new String[]{\"\"};","lastModifiedDate":"2024-02-09"},{"lineNumber":49,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"delishad21"},"content":"        // Placing parameters into hashtable with appropriate labels","lastModifiedDate":"2024-02-16"},{"lineNumber":51,"author":{"gitId":"delishad21"},"content":"        Hashtable\u003cString, String\u003e paramsTable \u003d new Hashtable\u003c\u003e();","lastModifiedDate":"2024-02-09"},{"lineNumber":52,"author":{"gitId":"delishad21"},"content":"        paramsTable.put(\"description\", params[0]);","lastModifiedDate":"2024-02-09"},{"lineNumber":53,"author":{"gitId":"delishad21"},"content":"        for (int i \u003d 1; i \u003c params.length; i++) {","lastModifiedDate":"2024-02-09"},{"lineNumber":54,"author":{"gitId":"delishad21"},"content":"            String[] paramSplit \u003d params[i].split(\" \", 2);","lastModifiedDate":"2024-02-09"},{"lineNumber":55,"author":{"gitId":"delishad21"},"content":"            String paramLabel \u003d paramSplit[0];","lastModifiedDate":"2024-02-09"},{"lineNumber":56,"author":{"gitId":"delishad21"},"content":"            String paramInfo \u003d paramSplit[1];","lastModifiedDate":"2024-02-09"},{"lineNumber":57,"author":{"gitId":"delishad21"},"content":"            paramsTable.put(paramLabel, paramInfo);","lastModifiedDate":"2024-02-09"},{"lineNumber":58,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":59,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":60,"author":{"gitId":"delishad21"},"content":"        assert !action.equals(\"\");","lastModifiedDate":"2024-02-09"},{"lineNumber":61,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":62,"author":{"gitId":"delishad21"},"content":"        switch (action) {","lastModifiedDate":"2024-01-27"},{"lineNumber":63,"author":{"gitId":"delishad21"},"content":"        case \"bye\":","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"delishad21"},"content":"            return new ExitCommand();","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"delishad21"},"content":"        case \"help\":","lastModifiedDate":"2024-02-19"},{"lineNumber":66,"author":{"gitId":"delishad21"},"content":"            return new HelpCommand();","lastModifiedDate":"2024-02-19"},{"lineNumber":67,"author":{"gitId":"delishad21"},"content":"        case \"list\":","lastModifiedDate":"2024-01-27"},{"lineNumber":68,"author":{"gitId":"delishad21"},"content":"            return new ListRecordsCommand(paramsTable);","lastModifiedDate":"2024-02-16"},{"lineNumber":69,"author":{"gitId":"delishad21"},"content":"        case \"find\":","lastModifiedDate":"2024-01-28"},{"lineNumber":70,"author":{"gitId":"delishad21"},"content":"            return new FindCommand(paramsTable);","lastModifiedDate":"2024-02-09"},{"lineNumber":71,"author":{"gitId":"delishad21"},"content":"        case \"todo\":","lastModifiedDate":"2024-01-27"},{"lineNumber":72,"author":{"gitId":"delishad21"},"content":"            return new GenerateRecordCommand(GenerateRecordCommand.RecordType.TODO, paramsTable);","lastModifiedDate":"2024-02-09"},{"lineNumber":73,"author":{"gitId":"delishad21"},"content":"        case \"event\":","lastModifiedDate":"2024-01-27"},{"lineNumber":74,"author":{"gitId":"delishad21"},"content":"            return new GenerateRecordCommand(GenerateRecordCommand.RecordType.EVENT, paramsTable);","lastModifiedDate":"2024-02-09"},{"lineNumber":75,"author":{"gitId":"delishad21"},"content":"        case \"deadline\":","lastModifiedDate":"2024-01-27"},{"lineNumber":76,"author":{"gitId":"delishad21"},"content":"            return new GenerateRecordCommand(GenerateRecordCommand.RecordType.DEADLINE, paramsTable);","lastModifiedDate":"2024-02-09"},{"lineNumber":77,"author":{"gitId":"delishad21"},"content":"        case \"contact\":","lastModifiedDate":"2024-02-09"},{"lineNumber":78,"author":{"gitId":"delishad21"},"content":"            return new GenerateRecordCommand(GenerateRecordCommand.RecordType.CONTACT, paramsTable);","lastModifiedDate":"2024-02-09"},{"lineNumber":79,"author":{"gitId":"delishad21"},"content":"        case \"mark\":","lastModifiedDate":"2024-01-27"},{"lineNumber":80,"author":{"gitId":"delishad21"},"content":"            return new ModifyTaskCommand(ModifyTaskCommand.ModificationTypes.MARK, paramsTable);","lastModifiedDate":"2024-02-09"},{"lineNumber":81,"author":{"gitId":"delishad21"},"content":"        case \"unmark\":","lastModifiedDate":"2024-01-27"},{"lineNumber":82,"author":{"gitId":"delishad21"},"content":"            return new ModifyTaskCommand(ModifyTaskCommand.ModificationTypes.UNMARK, paramsTable);","lastModifiedDate":"2024-02-09"},{"lineNumber":83,"author":{"gitId":"delishad21"},"content":"        case \"delete\":","lastModifiedDate":"2024-01-27"},{"lineNumber":84,"author":{"gitId":"delishad21"},"content":"            return new DeleteRecordCommand(paramsTable);","lastModifiedDate":"2024-02-09"},{"lineNumber":85,"author":{"gitId":"delishad21"},"content":"        default:","lastModifiedDate":"2024-01-27"},{"lineNumber":86,"author":{"gitId":"delishad21"},"content":"            throw new NoSuchCommandException(input);","lastModifiedDate":"2024-01-27"},{"lineNumber":87,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":88,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":89,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":90,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":91,"author":{"gitId":"delishad21"},"content":"     * Checks if the Hashtable contains the required parameters.","lastModifiedDate":"2024-02-09"},{"lineNumber":92,"author":{"gitId":"delishad21"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":93,"author":{"gitId":"delishad21"},"content":"     * @param params Hashtable with parameters.","lastModifiedDate":"2024-02-09"},{"lineNumber":94,"author":{"gitId":"delishad21"},"content":"     * @param reqParams Array with the required parameters","lastModifiedDate":"2024-02-09"},{"lineNumber":95,"author":{"gitId":"delishad21"},"content":"     * @throws MissingInformationException if parameter information is missing","lastModifiedDate":"2024-02-09"},{"lineNumber":96,"author":{"gitId":"delishad21"},"content":"     * @throws MissingParameterException if parameter is missing","lastModifiedDate":"2024-02-09"},{"lineNumber":97,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":98,"author":{"gitId":"delishad21"},"content":"    public static void checkParams(Hashtable\u003cString, String\u003e params, String[] reqParams)","lastModifiedDate":"2024-02-09"},{"lineNumber":99,"author":{"gitId":"delishad21"},"content":"            throws MissingInformationException, MissingParameterException {","lastModifiedDate":"2024-02-09"},{"lineNumber":100,"author":{"gitId":"delishad21"},"content":"        //Checking for missing parameters and information","lastModifiedDate":"2024-02-09"},{"lineNumber":101,"author":{"gitId":"delishad21"},"content":"        ArrayList\u003cString\u003e missingParams \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-09"},{"lineNumber":102,"author":{"gitId":"delishad21"},"content":"        ArrayList\u003cString\u003e missingInfo \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-09"},{"lineNumber":103,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":104,"author":{"gitId":"delishad21"},"content":"        for (String param : reqParams) {","lastModifiedDate":"2024-02-09"},{"lineNumber":105,"author":{"gitId":"delishad21"},"content":"            if (!params.containsKey(param)) {","lastModifiedDate":"2024-02-09"},{"lineNumber":106,"author":{"gitId":"delishad21"},"content":"                missingParams.add(param);","lastModifiedDate":"2024-02-09"},{"lineNumber":107,"author":{"gitId":"delishad21"},"content":"                continue;","lastModifiedDate":"2024-02-09"},{"lineNumber":108,"author":{"gitId":"delishad21"},"content":"            }","lastModifiedDate":"2024-02-09"},{"lineNumber":109,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":110,"author":{"gitId":"delishad21"},"content":"            if (params.get(param).equals(\"\")) {","lastModifiedDate":"2024-02-09"},{"lineNumber":111,"author":{"gitId":"delishad21"},"content":"                missingInfo.add(param);","lastModifiedDate":"2024-02-09"},{"lineNumber":112,"author":{"gitId":"delishad21"},"content":"            }","lastModifiedDate":"2024-02-09"},{"lineNumber":113,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":114,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":115,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":116,"author":{"gitId":"delishad21"},"content":"        //Throwing exceptions if parameters/parameter description is missing","lastModifiedDate":"2024-02-09"},{"lineNumber":117,"author":{"gitId":"delishad21"},"content":"        if (missingParams.size() !\u003d 0) {","lastModifiedDate":"2024-02-09"},{"lineNumber":118,"author":{"gitId":"delishad21"},"content":"            throw new MissingParameterException(missingParams.toArray(String[]::new));","lastModifiedDate":"2024-02-09"},{"lineNumber":119,"author":{"gitId":"delishad21"},"content":"        } else if (missingInfo.size() !\u003d 0) {","lastModifiedDate":"2024-02-09"},{"lineNumber":120,"author":{"gitId":"delishad21"},"content":"            throw new MissingInformationException(missingInfo.toArray(String[]::new));","lastModifiedDate":"2024-02-09"},{"lineNumber":121,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":122,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":123,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":124,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"delishad21":124}},{"path":"src/main/java/grizzly/utils/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package grizzly.utils;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"import java.io.File;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"import grizzly.contacts.Contact;","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"import grizzly.exceptions.RecordCreationException;","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"import grizzly.tasks.Deadline;","lastModifiedDate":"2024-02-16"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"import grizzly.tasks.Event;","lastModifiedDate":"2024-02-16"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"import grizzly.tasks.Task;","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"import grizzly.tasks.Todo;","lastModifiedDate":"2024-02-16"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":" * This class implements the saving and reading of bot data into a text file.","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":" *","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"delishad21"},"content":" * @author delishad21","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":"public class Storage {","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"delishad21"},"content":"    private File f;","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"delishad21"},"content":"     * Creates a Storage object, takes in a filepath for the file in which data","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"delishad21"},"content":"     * should be saved.","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"delishad21"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"delishad21"},"content":"     * @param filePath File to save data to and load data from.","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"delishad21"},"content":"     * @throws IOException","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"delishad21"},"content":"    public Storage(String filePath) throws IOException {","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"delishad21"},"content":"        this.f \u003d new File(filePath);","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"delishad21"},"content":"        checkAndCreateFile();","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"delishad21"},"content":"     * Checks and creates file based on filepath.","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"delishad21"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"delishad21"},"content":"     * @throws IOException","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"delishad21"},"content":"    private void checkAndCreateFile() throws IOException {","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"delishad21"},"content":"        // Reading and creating data save file","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"delishad21"},"content":"        // making data folder","lastModifiedDate":"2024-01-27"},{"lineNumber":45,"author":{"gitId":"delishad21"},"content":"        if (!f.getParentFile().exists()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"delishad21"},"content":"            if (!f.getParentFile().mkdir()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"delishad21"},"content":"                throw new IOException(\"Unable to make directory\");","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"delishad21"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":51,"author":{"gitId":"delishad21"},"content":"        // making data file","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"delishad21"},"content":"        if (!f.exists()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"delishad21"},"content":"            f.createNewFile();","lastModifiedDate":"2024-01-27"},{"lineNumber":54,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":55,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":56,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":57,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"delishad21"},"content":"     * Reads save data from save file.","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"delishad21"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"delishad21"},"content":"     * @return Error log from reading save file","lastModifiedDate":"2024-02-09"},{"lineNumber":61,"author":{"gitId":"delishad21"},"content":"     * @throws FileNotFoundException","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"delishad21"},"content":"    public String readSaveData(Database db) throws FileNotFoundException {","lastModifiedDate":"2024-02-09"},{"lineNumber":64,"author":{"gitId":"delishad21"},"content":"        String errorLog \u003d \"\";","lastModifiedDate":"2024-02-09"},{"lineNumber":65,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":66,"author":{"gitId":"delishad21"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2024-01-27"},{"lineNumber":67,"author":{"gitId":"delishad21"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":68,"author":{"gitId":"delishad21"},"content":"            try {","lastModifiedDate":"2024-01-27"},{"lineNumber":69,"author":{"gitId":"delishad21"},"content":"                String line \u003d s.nextLine();","lastModifiedDate":"2024-02-09"},{"lineNumber":70,"author":{"gitId":"delishad21"},"content":"                String recordType \u003d getRecordType(line);","lastModifiedDate":"2024-02-09"},{"lineNumber":71,"author":{"gitId":"delishad21"},"content":"                switch (recordType) {","lastModifiedDate":"2024-02-09"},{"lineNumber":72,"author":{"gitId":"delishad21"},"content":"                case \"contact\":","lastModifiedDate":"2024-02-09"},{"lineNumber":73,"author":{"gitId":"delishad21"},"content":"                    db.addContact(parseContactFromSave(line));","lastModifiedDate":"2024-02-09"},{"lineNumber":74,"author":{"gitId":"delishad21"},"content":"                    break;","lastModifiedDate":"2024-02-09"},{"lineNumber":75,"author":{"gitId":"delishad21"},"content":"                case \"task\":","lastModifiedDate":"2024-02-09"},{"lineNumber":76,"author":{"gitId":"delishad21"},"content":"                    db.addTask(parseTaskFromSave(line));","lastModifiedDate":"2024-02-09"},{"lineNumber":77,"author":{"gitId":"delishad21"},"content":"                    break;","lastModifiedDate":"2024-02-09"},{"lineNumber":78,"author":{"gitId":"delishad21"},"content":"                default:","lastModifiedDate":"2024-02-09"},{"lineNumber":79,"author":{"gitId":"delishad21"},"content":"                    // Code will not end up here as getRecordType only returns 2 values","lastModifiedDate":"2024-02-09"},{"lineNumber":80,"author":{"gitId":"delishad21"},"content":"                }","lastModifiedDate":"2024-02-09"},{"lineNumber":81,"author":{"gitId":"delishad21"},"content":"            } catch (RecordCreationException e) {","lastModifiedDate":"2024-02-09"},{"lineNumber":82,"author":{"gitId":"delishad21"},"content":"                errorLog \u003d errorLog + e.getMessage() + \"\\n\";","lastModifiedDate":"2024-02-09"},{"lineNumber":83,"author":{"gitId":"delishad21"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":84,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":85,"author":{"gitId":"delishad21"},"content":"        s.close();","lastModifiedDate":"2024-01-27"},{"lineNumber":86,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":87,"author":{"gitId":"delishad21"},"content":"        return errorLog;","lastModifiedDate":"2024-02-09"},{"lineNumber":88,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":89,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":90,"author":{"gitId":"delishad21"},"content":"    private String getRecordType(String line) throws RecordCreationException {","lastModifiedDate":"2024-02-09"},{"lineNumber":91,"author":{"gitId":"delishad21"},"content":"        String tag \u003d line.split(\"\\\\|\")[0];","lastModifiedDate":"2024-02-09"},{"lineNumber":92,"author":{"gitId":"delishad21"},"content":"        switch (tag) {","lastModifiedDate":"2024-02-09"},{"lineNumber":93,"author":{"gitId":"delishad21"},"content":"        case \"[T]\":","lastModifiedDate":"2024-02-09"},{"lineNumber":94,"author":{"gitId":"delishad21"},"content":"            return \"task\";","lastModifiedDate":"2024-02-09"},{"lineNumber":95,"author":{"gitId":"delishad21"},"content":"        case \"[D]\":","lastModifiedDate":"2024-02-09"},{"lineNumber":96,"author":{"gitId":"delishad21"},"content":"            return \"task\";","lastModifiedDate":"2024-02-09"},{"lineNumber":97,"author":{"gitId":"delishad21"},"content":"        case \"[E]\":","lastModifiedDate":"2024-02-09"},{"lineNumber":98,"author":{"gitId":"delishad21"},"content":"            return \"task\";","lastModifiedDate":"2024-02-09"},{"lineNumber":99,"author":{"gitId":"delishad21"},"content":"        case \"[C]\":","lastModifiedDate":"2024-02-09"},{"lineNumber":100,"author":{"gitId":"delishad21"},"content":"            return \"contact\";","lastModifiedDate":"2024-02-09"},{"lineNumber":101,"author":{"gitId":"delishad21"},"content":"        default:","lastModifiedDate":"2024-02-09"},{"lineNumber":102,"author":{"gitId":"delishad21"},"content":"            throw new RecordCreationException(\"Unable to determine the record type \" + line);","lastModifiedDate":"2024-02-09"},{"lineNumber":103,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":104,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":105,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":106,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":107,"author":{"gitId":"delishad21"},"content":"     * Saves data from bot back to save file.","lastModifiedDate":"2024-02-01"},{"lineNumber":108,"author":{"gitId":"delishad21"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":109,"author":{"gitId":"delishad21"},"content":"     * @param data The data from the bot.","lastModifiedDate":"2024-01-28"},{"lineNumber":110,"author":{"gitId":"delishad21"},"content":"     * @throws IOException","lastModifiedDate":"2024-01-28"},{"lineNumber":111,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":112,"author":{"gitId":"delishad21"},"content":"    public String saveData(Database data) throws IOException {","lastModifiedDate":"2024-02-09"},{"lineNumber":113,"author":{"gitId":"delishad21"},"content":"        this.checkAndCreateFile();","lastModifiedDate":"2024-01-27"},{"lineNumber":114,"author":{"gitId":"delishad21"},"content":"        assert this.f.exists();","lastModifiedDate":"2024-02-09"},{"lineNumber":115,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":116,"author":{"gitId":"delishad21"},"content":"        FileWriter fw \u003d new FileWriter(f);","lastModifiedDate":"2024-01-27"},{"lineNumber":117,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":118,"author":{"gitId":"delishad21"},"content":"        String dataString \u003d \"\";","lastModifiedDate":"2024-01-27"},{"lineNumber":119,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":120,"author":{"gitId":"delishad21"},"content":"        for (int i \u003d 1; i \u003c\u003d data.taskListSize(); i++) {","lastModifiedDate":"2024-02-09"},{"lineNumber":121,"author":{"gitId":"delishad21"},"content":"            dataString \u003d dataString + data.getTask(i).toSave() + \"\\n\";","lastModifiedDate":"2024-02-09"},{"lineNumber":122,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":123,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":124,"author":{"gitId":"delishad21"},"content":"        for (int i \u003d 1; i \u003c\u003d data.contactListSize(); i++) {","lastModifiedDate":"2024-02-09"},{"lineNumber":125,"author":{"gitId":"delishad21"},"content":"            dataString \u003d dataString + data.getContact(i).toSave() + \"\\n\";","lastModifiedDate":"2024-02-09"},{"lineNumber":126,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":127,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":128,"author":{"gitId":"delishad21"},"content":"        fw.write(dataString);","lastModifiedDate":"2024-01-27"},{"lineNumber":129,"author":{"gitId":"delishad21"},"content":"        fw.close();","lastModifiedDate":"2024-01-27"},{"lineNumber":130,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":131,"author":{"gitId":"delishad21"},"content":"        return data.taskListSize() + \" tasks saved\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":132,"author":{"gitId":"delishad21"},"content":"               + data.contactListSize() + \" contacts saved\\n\";","lastModifiedDate":"2024-02-09"},{"lineNumber":133,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":134,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":135,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":136,"author":{"gitId":"delishad21"},"content":"     * Parses individual task from save file into Tasks.","lastModifiedDate":"2024-02-09"},{"lineNumber":137,"author":{"gitId":"delishad21"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":138,"author":{"gitId":"delishad21"},"content":"     * @param task Each line read from save file.","lastModifiedDate":"2024-01-28"},{"lineNumber":139,"author":{"gitId":"delishad21"},"content":"     * @return A Task object generated with information parsed from input.","lastModifiedDate":"2024-01-28"},{"lineNumber":140,"author":{"gitId":"delishad21"},"content":"     * @throws RecordCreationException","lastModifiedDate":"2024-02-09"},{"lineNumber":141,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":142,"author":{"gitId":"delishad21"},"content":"    private Task parseTaskFromSave(String task) throws RecordCreationException {","lastModifiedDate":"2024-02-09"},{"lineNumber":143,"author":{"gitId":"delishad21"},"content":"        String[] taskSplit \u003d task.split(\"\\\\|\");","lastModifiedDate":"2024-01-27"},{"lineNumber":144,"author":{"gitId":"delishad21"},"content":"        boolean isDone \u003d checkTaskDone(taskSplit[1], task);","lastModifiedDate":"2024-02-09"},{"lineNumber":145,"author":{"gitId":"delishad21"},"content":"        try {","lastModifiedDate":"2024-02-09"},{"lineNumber":146,"author":{"gitId":"delishad21"},"content":"            switch (taskSplit[0]) {","lastModifiedDate":"2024-01-27"},{"lineNumber":147,"author":{"gitId":"delishad21"},"content":"            case \"[T]\":","lastModifiedDate":"2024-01-27"},{"lineNumber":148,"author":{"gitId":"delishad21"},"content":"                return new Todo(isDone, taskSplit[2]);","lastModifiedDate":"2024-01-27"},{"lineNumber":149,"author":{"gitId":"delishad21"},"content":"            case \"[D]\":","lastModifiedDate":"2024-01-27"},{"lineNumber":150,"author":{"gitId":"delishad21"},"content":"                return new Deadline(isDone, taskSplit[2],","lastModifiedDate":"2024-01-28"},{"lineNumber":151,"author":{"gitId":"delishad21"},"content":"                                    LocalDateTime.parse(taskSplit[3], Parser.INPUT_DT_FORMATTER));","lastModifiedDate":"2024-01-28"},{"lineNumber":152,"author":{"gitId":"delishad21"},"content":"            case \"[E]\":","lastModifiedDate":"2024-01-27"},{"lineNumber":153,"author":{"gitId":"delishad21"},"content":"                return new Event(isDone, taskSplit[2],","lastModifiedDate":"2024-01-28"},{"lineNumber":154,"author":{"gitId":"delishad21"},"content":"                                LocalDateTime.parse(taskSplit[3], Parser.INPUT_DT_FORMATTER),","lastModifiedDate":"2024-01-28"},{"lineNumber":155,"author":{"gitId":"delishad21"},"content":"                                LocalDateTime.parse(taskSplit[4], Parser.INPUT_DT_FORMATTER));","lastModifiedDate":"2024-01-28"},{"lineNumber":156,"author":{"gitId":"delishad21"},"content":"            default:","lastModifiedDate":"2024-01-27"},{"lineNumber":157,"author":{"gitId":"delishad21"},"content":"                throw new RecordCreationException(\"No such task: \" + taskSplit[0] + \" for \" + task);","lastModifiedDate":"2024-02-09"},{"lineNumber":158,"author":{"gitId":"delishad21"},"content":"            }","lastModifiedDate":"2024-02-09"},{"lineNumber":159,"author":{"gitId":"delishad21"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-09"},{"lineNumber":160,"author":{"gitId":"delishad21"},"content":"            throw new RecordCreationException(\"Task is corrupted: \" + task);","lastModifiedDate":"2024-02-09"},{"lineNumber":161,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":162,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":163,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":164,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":165,"author":{"gitId":"delishad21"},"content":"     * Checks if a given task is completed.","lastModifiedDate":"2024-02-09"},{"lineNumber":166,"author":{"gitId":"delishad21"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":167,"author":{"gitId":"delishad21"},"content":"     * @param marker","lastModifiedDate":"2024-02-09"},{"lineNumber":168,"author":{"gitId":"delishad21"},"content":"     * @param task","lastModifiedDate":"2024-02-09"},{"lineNumber":169,"author":{"gitId":"delishad21"},"content":"     * @throws RecordCreationException","lastModifiedDate":"2024-02-09"},{"lineNumber":170,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":171,"author":{"gitId":"delishad21"},"content":"    private boolean checkTaskDone(String marker, String task) throws RecordCreationException {","lastModifiedDate":"2024-02-09"},{"lineNumber":172,"author":{"gitId":"delishad21"},"content":"        if (marker.equals(\"[X]\")) {","lastModifiedDate":"2024-02-09"},{"lineNumber":173,"author":{"gitId":"delishad21"},"content":"            return true;","lastModifiedDate":"2024-02-09"},{"lineNumber":174,"author":{"gitId":"delishad21"},"content":"        } else if (marker.equals(\"[ ]\")) {","lastModifiedDate":"2024-02-09"},{"lineNumber":175,"author":{"gitId":"delishad21"},"content":"            return false;","lastModifiedDate":"2024-02-09"},{"lineNumber":176,"author":{"gitId":"delishad21"},"content":"        } else {","lastModifiedDate":"2024-02-09"},{"lineNumber":177,"author":{"gitId":"delishad21"},"content":"            throw new RecordCreationException(\"Unable to determine if task \\\"\" + task + \"\\\" is done or not\");","lastModifiedDate":"2024-02-09"},{"lineNumber":178,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":179,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":180,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":181,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":182,"author":{"gitId":"delishad21"},"content":"     * Parses a line of contact from the save.","lastModifiedDate":"2024-02-09"},{"lineNumber":183,"author":{"gitId":"delishad21"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":184,"author":{"gitId":"delishad21"},"content":"     * @param contact","lastModifiedDate":"2024-02-09"},{"lineNumber":185,"author":{"gitId":"delishad21"},"content":"     * @throws RecordCreationException","lastModifiedDate":"2024-02-09"},{"lineNumber":186,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":187,"author":{"gitId":"delishad21"},"content":"    private Contact parseContactFromSave(String contact) throws RecordCreationException {","lastModifiedDate":"2024-02-09"},{"lineNumber":188,"author":{"gitId":"delishad21"},"content":"        String[] contactSplit \u003d contact.split(\"\\\\|\");","lastModifiedDate":"2024-02-09"},{"lineNumber":189,"author":{"gitId":"delishad21"},"content":"        try {","lastModifiedDate":"2024-02-09"},{"lineNumber":190,"author":{"gitId":"delishad21"},"content":"            return new Contact(contactSplit[1], contactSplit[2], Integer.parseInt(contactSplit[3]));","lastModifiedDate":"2024-02-09"},{"lineNumber":191,"author":{"gitId":"delishad21"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-09"},{"lineNumber":192,"author":{"gitId":"delishad21"},"content":"            throw new RecordCreationException(\"Contact is corrupted: \" + contact);","lastModifiedDate":"2024-02-09"},{"lineNumber":193,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":194,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":195,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":196,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"delishad21":196}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"\u003c?import javafx.scene.shape.Polygon?\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"\u003cfx:root alignment\u003d\"CENTER_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" prefWidth\u003d\"400.0\" spacing\u003d\"0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"    \u003cLabel fx:id\u003d\"dialog\" alignment\u003d\"TOP_RIGHT\" maxWidth\u003d\"260.0\" minHeight\u003d\"-Infinity\" stylesheets\u003d\"@../application.css\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"         \u003cfont\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"            \u003cFont name\u003d\"Product Sans\" size\u003d\"12.0\" /\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"         \u003c/font\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"         \u003copaqueInsets\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"            \u003cInsets top\u003d\"10.0\" /\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"         \u003c/opaqueInsets\u003e\u003c/Label\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":"      \u003cPolygon fx:id\u003d\"arrow\" fill\u003d\"ALICEBLUE\" points\u003d\"36.0, -27.0, 48.0, -36.0, 36.0, -46.0\" stroke\u003d\"TRANSPARENT\" strokeType\u003d\"INSIDE\" /\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":20,"author":{"gitId":"delishad21"},"content":"      \u003cCircle fx:id\u003d\"displayPicture\" fill\u003d\"#1f93ff00\" radius\u003d\"26.0\" stroke\u003d\"BLACK\" strokeType\u003d\"INSIDE\" strokeWidth\u003d\"2.0\" /\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":"  \u003c/children\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"delishad21"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"15.0\" right\u003d\"15.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"delishad21"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"delishad21"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"delishad21":25}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"\u003cAnchorPane maxHeight\u003d\"600.0\" maxWidth\u003d\"400.0\" minHeight\u003d\"600.0\" minWidth\u003d\"400.0\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"grizzly.ui.MainWindow\"\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"      \u003cImageView fx:id\u003d\"background\" fitHeight\u003d\"600.0\" fitWidth\u003d\"400.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"      \u003c/content\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"delishad21"},"content":"  \u003c/children\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"delishad21":21}},{"path":"src/test/java/grizzly/GrizzlyTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package grizzly;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"import java.io.File;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"public class GrizzlyTest {","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"    public void fileGenerationTest() {","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"        String filePath \u003d \"data/help.txt\";","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"        File file \u003d new File(\"data/help.txt\");","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"        file.delete();","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"        Grizzly grizzly \u003d new Grizzly();","lastModifiedDate":"2024-02-16"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"        grizzly.loadSave(filePath);","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"        assertTrue(file.exists());","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":"        file.delete();","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"delishad21":21}},{"path":"src/test/java/grizzly/commands/DeleteRecordCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package grizzly.commands;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"import java.util.Hashtable;","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"import grizzly.tasks.Todo;","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"import grizzly.utils.Database;","lastModifiedDate":"2024-02-16"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"import grizzly.utils.Storage;","lastModifiedDate":"2024-02-16"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"public class DeleteRecordCommandTest {","lastModifiedDate":"2024-02-16"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":"    public DeleteRecordCommandTest() {","lastModifiedDate":"2024-02-16"},{"lineNumber":20,"author":{"gitId":"delishad21"},"content":"        try {","lastModifiedDate":"2024-02-16"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":"            storage \u003d new Storage(\"data/help.txt\");","lastModifiedDate":"2024-02-16"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-16"},{"lineNumber":23,"author":{"gitId":"delishad21"},"content":"            fail();","lastModifiedDate":"2024-02-16"},{"lineNumber":24,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":25,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":26,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":27,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-02-16"},{"lineNumber":28,"author":{"gitId":"delishad21"},"content":"    public void testDeleteRecordIndexOutOfBounds() {","lastModifiedDate":"2024-02-16"},{"lineNumber":29,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":30,"author":{"gitId":"delishad21"},"content":"        Database db \u003d new Database();","lastModifiedDate":"2024-02-16"},{"lineNumber":31,"author":{"gitId":"delishad21"},"content":"        Hashtable\u003cString, String\u003e testMap \u003d new Hashtable\u003cString, String\u003e();","lastModifiedDate":"2024-02-16"},{"lineNumber":32,"author":{"gitId":"delishad21"},"content":"        testMap.put(\"description\", \"task 1\");","lastModifiedDate":"2024-02-16"},{"lineNumber":33,"author":{"gitId":"delishad21"},"content":"        Command c \u003d new DeleteRecordCommand(testMap);","lastModifiedDate":"2024-02-16"},{"lineNumber":34,"author":{"gitId":"delishad21"},"content":"        try {","lastModifiedDate":"2024-02-16"},{"lineNumber":35,"author":{"gitId":"delishad21"},"content":"            c.execute(db, storage);","lastModifiedDate":"2024-02-16"},{"lineNumber":36,"author":{"gitId":"delishad21"},"content":"            fail();","lastModifiedDate":"2024-02-16"},{"lineNumber":37,"author":{"gitId":"delishad21"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-16"},{"lineNumber":38,"author":{"gitId":"delishad21"},"content":"            assertEquals(e.getMessage(), (\"Error Deleting Record! Given index 1 out of bounds\\n\"","lastModifiedDate":"2024-02-16"},{"lineNumber":39,"author":{"gitId":"delishad21"},"content":"                                             + \"taskList current at size: 0\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":40,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":41,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":42,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":43,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-02-16"},{"lineNumber":44,"author":{"gitId":"delishad21"},"content":"    public void testDeleteRecordInvalidIndex() {","lastModifiedDate":"2024-02-16"},{"lineNumber":45,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":46,"author":{"gitId":"delishad21"},"content":"        Database db \u003d new Database();","lastModifiedDate":"2024-02-16"},{"lineNumber":47,"author":{"gitId":"delishad21"},"content":"        Hashtable\u003cString, String\u003e testMap \u003d new Hashtable\u003cString, String\u003e();","lastModifiedDate":"2024-02-16"},{"lineNumber":48,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":49,"author":{"gitId":"delishad21"},"content":"        testMap.put(\"description\", \"task wewowewo\");","lastModifiedDate":"2024-02-16"},{"lineNumber":50,"author":{"gitId":"delishad21"},"content":"        Command c \u003d new DeleteRecordCommand(testMap);","lastModifiedDate":"2024-02-16"},{"lineNumber":51,"author":{"gitId":"delishad21"},"content":"        try {","lastModifiedDate":"2024-02-16"},{"lineNumber":52,"author":{"gitId":"delishad21"},"content":"            c.execute(db, storage);","lastModifiedDate":"2024-02-16"},{"lineNumber":53,"author":{"gitId":"delishad21"},"content":"            fail();","lastModifiedDate":"2024-02-16"},{"lineNumber":54,"author":{"gitId":"delishad21"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-16"},{"lineNumber":55,"author":{"gitId":"delishad21"},"content":"            assertEquals(e.getMessage(), (\"Error Deleting Record! Given index \"","lastModifiedDate":"2024-02-16"},{"lineNumber":56,"author":{"gitId":"delishad21"},"content":"                                            + \"wewowewo is not a valid index\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":57,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":58,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":59,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":60,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-02-16"},{"lineNumber":61,"author":{"gitId":"delishad21"},"content":"    public void testDeleteRecordInsufficientInfo() {","lastModifiedDate":"2024-02-16"},{"lineNumber":62,"author":{"gitId":"delishad21"},"content":"        Database db \u003d new Database();","lastModifiedDate":"2024-02-16"},{"lineNumber":63,"author":{"gitId":"delishad21"},"content":"        Hashtable\u003cString, String\u003e testMap \u003d new Hashtable\u003cString, String\u003e();","lastModifiedDate":"2024-02-16"},{"lineNumber":64,"author":{"gitId":"delishad21"},"content":"        testMap.put(\"description\", \"task\");","lastModifiedDate":"2024-02-16"},{"lineNumber":65,"author":{"gitId":"delishad21"},"content":"        Command c \u003d new DeleteRecordCommand(testMap);","lastModifiedDate":"2024-02-16"},{"lineNumber":66,"author":{"gitId":"delishad21"},"content":"        try {","lastModifiedDate":"2024-02-16"},{"lineNumber":67,"author":{"gitId":"delishad21"},"content":"            c.execute(db, storage);","lastModifiedDate":"2024-02-16"},{"lineNumber":68,"author":{"gitId":"delishad21"},"content":"            fail();","lastModifiedDate":"2024-02-16"},{"lineNumber":69,"author":{"gitId":"delishad21"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-16"},{"lineNumber":70,"author":{"gitId":"delishad21"},"content":"            assertEquals(e.getMessage(), (\"Error Deleting Record! Insufficient information for delete!\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":71,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":72,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":73,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":74,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-02-16"},{"lineNumber":75,"author":{"gitId":"delishad21"},"content":"    public void testDeleteRecordWithTasks() {","lastModifiedDate":"2024-02-16"},{"lineNumber":76,"author":{"gitId":"delishad21"},"content":"        Database db \u003d new Database();","lastModifiedDate":"2024-02-16"},{"lineNumber":77,"author":{"gitId":"delishad21"},"content":"        Hashtable\u003cString, String\u003e testMap \u003d new Hashtable\u003cString, String\u003e();","lastModifiedDate":"2024-02-16"},{"lineNumber":78,"author":{"gitId":"delishad21"},"content":"        testMap.put(\"description\", \"task 1\");","lastModifiedDate":"2024-02-16"},{"lineNumber":79,"author":{"gitId":"delishad21"},"content":"        Command c \u003d new DeleteRecordCommand(testMap);","lastModifiedDate":"2024-02-16"},{"lineNumber":80,"author":{"gitId":"delishad21"},"content":"        try {","lastModifiedDate":"2024-02-16"},{"lineNumber":81,"author":{"gitId":"delishad21"},"content":"            db.addTask(new Todo(false, \"task 1\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":82,"author":{"gitId":"delishad21"},"content":"            db.addTask(new Todo(false, \"task 2\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":83,"author":{"gitId":"delishad21"},"content":"            db.addTask(new Todo(false, \"task 3\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":84,"author":{"gitId":"delishad21"},"content":"            String output \u003d c.execute(db, storage);","lastModifiedDate":"2024-02-16"},{"lineNumber":85,"author":{"gitId":"delishad21"},"content":"            assertTrue(db.taskListSize() \u003d\u003d 2);","lastModifiedDate":"2024-02-16"},{"lineNumber":86,"author":{"gitId":"delishad21"},"content":"            assertEquals(output, (\"Task \\\"[T][ ] task 1\\\" has been removed!\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":87,"author":{"gitId":"delishad21"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-16"},{"lineNumber":88,"author":{"gitId":"delishad21"},"content":"            fail();","lastModifiedDate":"2024-02-16"},{"lineNumber":89,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":90,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":91,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":92,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":93,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":94,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":95,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":96,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-02-16"}],"authorContributionMap":{"delishad21":96}},{"path":"src/test/java/grizzly/commands/ExitCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package grizzly.commands;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"import grizzly.utils.Database;","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"import grizzly.utils.Storage;","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"public class ExitCommandTest {","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-16"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"    public ExitCommandTest() {","lastModifiedDate":"2024-02-16"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"        try {","lastModifiedDate":"2024-02-16"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"            storage \u003d new Storage(\"data/help.txt\");","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-16"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":"            fail();","lastModifiedDate":"2024-02-16"},{"lineNumber":20,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":23,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-02-16"},{"lineNumber":24,"author":{"gitId":"delishad21"},"content":"    public void testExitCommand() {","lastModifiedDate":"2024-02-16"},{"lineNumber":25,"author":{"gitId":"delishad21"},"content":"        Database db \u003d new Database();","lastModifiedDate":"2024-02-16"},{"lineNumber":26,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":27,"author":{"gitId":"delishad21"},"content":"        ExitCommand e \u003d new ExitCommand();","lastModifiedDate":"2024-02-16"},{"lineNumber":28,"author":{"gitId":"delishad21"},"content":"        try {","lastModifiedDate":"2024-02-16"},{"lineNumber":29,"author":{"gitId":"delishad21"},"content":"            assertEquals(e.execute(db, storage), (\"0 tasks saved\\n0 contacts saved\\n\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":30,"author":{"gitId":"delishad21"},"content":"        } catch (Exception ex) {","lastModifiedDate":"2024-02-16"},{"lineNumber":31,"author":{"gitId":"delishad21"},"content":"            fail();","lastModifiedDate":"2024-02-16"},{"lineNumber":32,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":33,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":34,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":35,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-02-16"},{"lineNumber":36,"author":{"gitId":"delishad21"},"content":"    public void testExitCommandWithoutStorage() {","lastModifiedDate":"2024-02-16"},{"lineNumber":37,"author":{"gitId":"delishad21"},"content":"        Database db \u003d new Database();","lastModifiedDate":"2024-02-16"},{"lineNumber":38,"author":{"gitId":"delishad21"},"content":"        ExitCommand e \u003d new ExitCommand();","lastModifiedDate":"2024-02-16"},{"lineNumber":39,"author":{"gitId":"delishad21"},"content":"        try {","lastModifiedDate":"2024-02-16"},{"lineNumber":40,"author":{"gitId":"delishad21"},"content":"            assertEquals(e.execute(db, null), (\"Data not saved: Storage initialisation not sucessful\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":41,"author":{"gitId":"delishad21"},"content":"        } catch (Exception ex) {","lastModifiedDate":"2024-02-16"},{"lineNumber":42,"author":{"gitId":"delishad21"},"content":"            fail();","lastModifiedDate":"2024-02-16"},{"lineNumber":43,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":44,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":45,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-02-16"}],"authorContributionMap":{"delishad21":45}},{"path":"src/test/java/grizzly/commands/FindCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package grizzly.commands;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"import java.util.Hashtable;","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"import grizzly.tasks.Todo;","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"import grizzly.utils.Database;","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"import grizzly.utils.Storage;","lastModifiedDate":"2024-02-16"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"public class FindCommandTest {","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-16"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"    public FindCommandTest() {","lastModifiedDate":"2024-02-16"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":"        try {","lastModifiedDate":"2024-02-16"},{"lineNumber":20,"author":{"gitId":"delishad21"},"content":"            storage \u003d new Storage(\"data/help.txt\");","lastModifiedDate":"2024-02-16"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-16"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":"            fail();","lastModifiedDate":"2024-02-16"},{"lineNumber":23,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":24,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":25,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":26,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-02-16"},{"lineNumber":27,"author":{"gitId":"delishad21"},"content":"    public void testFindCommandMissingDescripton() {","lastModifiedDate":"2024-02-16"},{"lineNumber":28,"author":{"gitId":"delishad21"},"content":"        Database db \u003d new Database();","lastModifiedDate":"2024-02-16"},{"lineNumber":29,"author":{"gitId":"delishad21"},"content":"        Hashtable\u003cString, String\u003e testMap \u003d new Hashtable\u003cString, String\u003e();","lastModifiedDate":"2024-02-16"},{"lineNumber":30,"author":{"gitId":"delishad21"},"content":"        testMap.put(\"description\", \"\");","lastModifiedDate":"2024-02-16"},{"lineNumber":31,"author":{"gitId":"delishad21"},"content":"        FindCommand command \u003d new FindCommand(testMap);","lastModifiedDate":"2024-02-16"},{"lineNumber":32,"author":{"gitId":"delishad21"},"content":"        try {","lastModifiedDate":"2024-02-16"},{"lineNumber":33,"author":{"gitId":"delishad21"},"content":"            command.execute(db, storage);","lastModifiedDate":"2024-02-16"},{"lineNumber":34,"author":{"gitId":"delishad21"},"content":"            fail();","lastModifiedDate":"2024-02-16"},{"lineNumber":35,"author":{"gitId":"delishad21"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-16"},{"lineNumber":36,"author":{"gitId":"delishad21"},"content":"            assertEquals(e.getMessage(), (\"Missing information: description\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":37,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":38,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":39,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":40,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-02-16"},{"lineNumber":41,"author":{"gitId":"delishad21"},"content":"    public void testFindCommand() {","lastModifiedDate":"2024-02-16"},{"lineNumber":42,"author":{"gitId":"delishad21"},"content":"        Database db \u003d new Database();","lastModifiedDate":"2024-02-16"},{"lineNumber":43,"author":{"gitId":"delishad21"},"content":"        Hashtable\u003cString, String\u003e testMap \u003d new Hashtable\u003cString, String\u003e();","lastModifiedDate":"2024-02-16"},{"lineNumber":44,"author":{"gitId":"delishad21"},"content":"        db.addTask(new Todo(false, \"task 1\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":45,"author":{"gitId":"delishad21"},"content":"        testMap.put(\"description\", \"task 1\");","lastModifiedDate":"2024-02-16"},{"lineNumber":46,"author":{"gitId":"delishad21"},"content":"        FindCommand command \u003d new FindCommand(testMap);","lastModifiedDate":"2024-02-16"},{"lineNumber":47,"author":{"gitId":"delishad21"},"content":"        try {","lastModifiedDate":"2024-02-16"},{"lineNumber":48,"author":{"gitId":"delishad21"},"content":"            String output \u003d command.execute(db, storage);","lastModifiedDate":"2024-02-16"},{"lineNumber":49,"author":{"gitId":"delishad21"},"content":"            assertEquals(output, (\"----------\\nTasks\\n----------\\n1.[T][ ] task 1\\n\"","lastModifiedDate":"2024-02-16"},{"lineNumber":50,"author":{"gitId":"delishad21"},"content":"                                     + \"No contacts found\\n\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":51,"author":{"gitId":"delishad21"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-16"},{"lineNumber":52,"author":{"gitId":"delishad21"},"content":"            fail();","lastModifiedDate":"2024-02-16"},{"lineNumber":53,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":54,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":55,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-02-16"}],"authorContributionMap":{"delishad21":55}},{"path":"src/test/java/grizzly/commands/GenerateRecordCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package grizzly.commands;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"import java.util.Hashtable;","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"import grizzly.commands.GenerateRecordCommand.RecordType;","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"import grizzly.utils.Database;","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"import grizzly.utils.Storage;","lastModifiedDate":"2024-02-16"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"public class GenerateRecordCommandTest {","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-16"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"    public GenerateRecordCommandTest() {","lastModifiedDate":"2024-02-16"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":"        try {","lastModifiedDate":"2024-02-16"},{"lineNumber":20,"author":{"gitId":"delishad21"},"content":"            storage \u003d new Storage(\"data/help.txt\");","lastModifiedDate":"2024-02-16"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-16"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":"            fail();","lastModifiedDate":"2024-02-16"},{"lineNumber":23,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":24,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":25,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":26,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-02-16"},{"lineNumber":27,"author":{"gitId":"delishad21"},"content":"    public void testGenerateRecordCommandTodo() {","lastModifiedDate":"2024-02-16"},{"lineNumber":28,"author":{"gitId":"delishad21"},"content":"        Database db \u003d new Database();","lastModifiedDate":"2024-02-16"},{"lineNumber":29,"author":{"gitId":"delishad21"},"content":"        Hashtable\u003cString, String\u003e testMap \u003d new Hashtable\u003cString, String\u003e();","lastModifiedDate":"2024-02-16"},{"lineNumber":30,"author":{"gitId":"delishad21"},"content":"        testMap.put(\"description\", \"task 1\");","lastModifiedDate":"2024-02-16"},{"lineNumber":31,"author":{"gitId":"delishad21"},"content":"        GenerateRecordCommand command \u003d new GenerateRecordCommand(RecordType.TODO, testMap);","lastModifiedDate":"2024-02-16"},{"lineNumber":32,"author":{"gitId":"delishad21"},"content":"        try {","lastModifiedDate":"2024-02-16"},{"lineNumber":33,"author":{"gitId":"delishad21"},"content":"            String output \u003d command.execute(db, storage);","lastModifiedDate":"2024-02-16"},{"lineNumber":34,"author":{"gitId":"delishad21"},"content":"            assertEquals(output, (\"Todo Task added!\\n\" + \"[T][ ] task 1\" + \"\\n\"","lastModifiedDate":"2024-02-16"},{"lineNumber":35,"author":{"gitId":"delishad21"},"content":"                                     + \"You now have 1 tasks in the list.\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":36,"author":{"gitId":"delishad21"},"content":"            assertEquals(db.taskListSize(), 1);","lastModifiedDate":"2024-02-16"},{"lineNumber":37,"author":{"gitId":"delishad21"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-16"},{"lineNumber":38,"author":{"gitId":"delishad21"},"content":"            fail();","lastModifiedDate":"2024-02-16"},{"lineNumber":39,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":40,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":41,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":42,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-02-16"},{"lineNumber":43,"author":{"gitId":"delishad21"},"content":"    public void testGenerateRecordCommandDeadline() {","lastModifiedDate":"2024-02-16"},{"lineNumber":44,"author":{"gitId":"delishad21"},"content":"        Database db \u003d new Database();","lastModifiedDate":"2024-02-16"},{"lineNumber":45,"author":{"gitId":"delishad21"},"content":"        Hashtable\u003cString, String\u003e testMap \u003d new Hashtable\u003cString, String\u003e();","lastModifiedDate":"2024-02-16"},{"lineNumber":46,"author":{"gitId":"delishad21"},"content":"        testMap.put(\"description\", \"task 2\");","lastModifiedDate":"2024-02-16"},{"lineNumber":47,"author":{"gitId":"delishad21"},"content":"        testMap.put(\"by\", \"12/11/2024, 13:00\");","lastModifiedDate":"2024-02-16"},{"lineNumber":48,"author":{"gitId":"delishad21"},"content":"        GenerateRecordCommand command \u003d new GenerateRecordCommand(RecordType.DEADLINE, testMap);","lastModifiedDate":"2024-02-16"},{"lineNumber":49,"author":{"gitId":"delishad21"},"content":"        try {","lastModifiedDate":"2024-02-16"},{"lineNumber":50,"author":{"gitId":"delishad21"},"content":"            String output \u003d command.execute(db, storage);","lastModifiedDate":"2024-02-16"},{"lineNumber":51,"author":{"gitId":"delishad21"},"content":"            assertEquals(output, (\"Deadline Task added!\\n\" + \"[D][ ] task 2\\n\"","lastModifiedDate":"2024-02-16"},{"lineNumber":52,"author":{"gitId":"delishad21"},"content":"                                     + \"(by: 12 November 2024, 01:00PM)\\n\"","lastModifiedDate":"2024-02-16"},{"lineNumber":53,"author":{"gitId":"delishad21"},"content":"                                     + \"You now have 1 tasks in the list.\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":54,"author":{"gitId":"delishad21"},"content":"            assertEquals(db.taskListSize(), 1);","lastModifiedDate":"2024-02-16"},{"lineNumber":55,"author":{"gitId":"delishad21"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-16"},{"lineNumber":56,"author":{"gitId":"delishad21"},"content":"            fail();","lastModifiedDate":"2024-02-16"},{"lineNumber":57,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":58,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":59,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":60,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-02-16"},{"lineNumber":61,"author":{"gitId":"delishad21"},"content":"    public void testGenerateRecordCommandEvent() {","lastModifiedDate":"2024-02-16"},{"lineNumber":62,"author":{"gitId":"delishad21"},"content":"        Database db \u003d new Database();","lastModifiedDate":"2024-02-16"},{"lineNumber":63,"author":{"gitId":"delishad21"},"content":"        Hashtable\u003cString, String\u003e testMap \u003d new Hashtable\u003cString, String\u003e();","lastModifiedDate":"2024-02-16"},{"lineNumber":64,"author":{"gitId":"delishad21"},"content":"        testMap.put(\"description\", \"task 3\");","lastModifiedDate":"2024-02-16"},{"lineNumber":65,"author":{"gitId":"delishad21"},"content":"        testMap.put(\"from\", \"12/11/2024, 13:00\");","lastModifiedDate":"2024-02-16"},{"lineNumber":66,"author":{"gitId":"delishad21"},"content":"        testMap.put(\"to\", \"12/11/2024, 14:00\");","lastModifiedDate":"2024-02-16"},{"lineNumber":67,"author":{"gitId":"delishad21"},"content":"        GenerateRecordCommand command \u003d new GenerateRecordCommand(RecordType.EVENT, testMap);","lastModifiedDate":"2024-02-16"},{"lineNumber":68,"author":{"gitId":"delishad21"},"content":"        try {","lastModifiedDate":"2024-02-16"},{"lineNumber":69,"author":{"gitId":"delishad21"},"content":"            String output \u003d command.execute(db, storage);","lastModifiedDate":"2024-02-16"},{"lineNumber":70,"author":{"gitId":"delishad21"},"content":"            assertEquals(output, (\"Event Task added!\\n\" + \"[E][ ] task 3\\n\"","lastModifiedDate":"2024-02-16"},{"lineNumber":71,"author":{"gitId":"delishad21"},"content":"                                     + \"(from: 12 November 2024, 01:00PM)\\n\"","lastModifiedDate":"2024-02-16"},{"lineNumber":72,"author":{"gitId":"delishad21"},"content":"                                     + \"(to: 12 November 2024, 02:00PM)\\n\"","lastModifiedDate":"2024-02-16"},{"lineNumber":73,"author":{"gitId":"delishad21"},"content":"                                     + \"You now have 1 tasks in the list.\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":74,"author":{"gitId":"delishad21"},"content":"            assertEquals(db.taskListSize(), 1);","lastModifiedDate":"2024-02-16"},{"lineNumber":75,"author":{"gitId":"delishad21"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-16"},{"lineNumber":76,"author":{"gitId":"delishad21"},"content":"            fail();","lastModifiedDate":"2024-02-16"},{"lineNumber":77,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":78,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":79,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-02-16"}],"authorContributionMap":{"delishad21":79}},{"path":"src/test/java/grizzly/commands/HelpCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package grizzly.commands;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"import grizzly.utils.Database;","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"import grizzly.utils.Storage;","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"public class HelpCommandTest {","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"    public HelpCommandTest() {","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"        try {","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"            storage \u003d new Storage(\"data/help.txt\");","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":"    public void testExecute() {","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"delishad21"},"content":"        Database db \u003d new Database();","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"delishad21"},"content":"        HelpCommand command \u003d new HelpCommand();","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"delishad21"},"content":"        String output \u003d command.execute(db, storage);","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"delishad21"},"content":"        assertEquals(output, \"Here are the commands you can use:\\n\"","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"delishad21"},"content":"                            + \"1. Add a todo task: todo [description]\\n\\n\"","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"delishad21"},"content":"                            + \"2. Add a deadline task: \\n\"","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"delishad21"},"content":"                            + \"deadline [description] /by [date, time]\\n\\n\"","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"delishad21"},"content":"                            + \"3. Add an event task: \\n\"","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"delishad21"},"content":"                            + \"event [description] /from [date, time] \\n/to [date, time]\\n\\n\"","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"delishad21"},"content":"                            + \"4. Add a contact: \\n\"","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"delishad21"},"content":"                            + \"contact [name] \\n/email [email] /number [number]\\n\\n\"","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"delishad21"},"content":"                            + \"5. List all tasks: list tasks\\n\\n\"","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"delishad21"},"content":"                            + \"6. List all contacts: list contacts\\n\\n\"","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"delishad21"},"content":"                            + \"7. Find tasks and contacts: \\nfind [keyword]\\n\\n\"","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"delishad21"},"content":"                            + \"8. Mark a task as done: \\nmark [task index]\\n\\n\"","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"delishad21"},"content":"                            + \"9. Unmark a task as done:\\nunmark [task index]\\n\\n\"","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"delishad21"},"content":"                            + \"10. Delete a task:\\ndelete task [task index]\\n\\n\"","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"delishad21"},"content":"                            + \"11. Delete a contact:\\ndelete contact [contact index]\\n\\n\"","lastModifiedDate":"2024-02-19"},{"lineNumber":41,"author":{"gitId":"delishad21"},"content":"                            + \"12. Exit the program: bye\\n\\n\"","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"delishad21"},"content":"                            + \"View a comprehensive user guide at: \\n\"","lastModifiedDate":"2024-02-19"},{"lineNumber":43,"author":{"gitId":"delishad21"},"content":"                            + \"https://delishad21.github.io/ip/\");","lastModifiedDate":"2024-02-19"},{"lineNumber":44,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":45,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"delishad21":45}},{"path":"src/test/java/grizzly/commands/ListRecordsCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package grizzly.commands;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"import java.util.Hashtable;","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"import grizzly.utils.Database;","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"import grizzly.utils.Storage;","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"public class ListRecordsCommandTest {","lastModifiedDate":"2024-02-16"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"    public ListRecordsCommandTest() {","lastModifiedDate":"2024-02-16"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"        try {","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"            storage \u003d new Storage(\"data/help.txt\");","lastModifiedDate":"2024-02-16"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-16"},{"lineNumber":20,"author":{"gitId":"delishad21"},"content":"            fail();","lastModifiedDate":"2024-02-16"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":23,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":24,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-02-16"},{"lineNumber":25,"author":{"gitId":"delishad21"},"content":"    public void testListTaskCommand() {","lastModifiedDate":"2024-02-16"},{"lineNumber":26,"author":{"gitId":"delishad21"},"content":"        Database db \u003d new Database();","lastModifiedDate":"2024-02-16"},{"lineNumber":27,"author":{"gitId":"delishad21"},"content":"        Hashtable\u003cString, String\u003e testMap \u003d new Hashtable\u003cString, String\u003e();","lastModifiedDate":"2024-02-16"},{"lineNumber":28,"author":{"gitId":"delishad21"},"content":"        testMap.put(\"description\", \"tasks\");","lastModifiedDate":"2024-02-16"},{"lineNumber":29,"author":{"gitId":"delishad21"},"content":"        ListRecordsCommand command \u003d new ListRecordsCommand(testMap);","lastModifiedDate":"2024-02-16"},{"lineNumber":30,"author":{"gitId":"delishad21"},"content":"        try {","lastModifiedDate":"2024-02-16"},{"lineNumber":31,"author":{"gitId":"delishad21"},"content":"            String output \u003d command.execute(db, storage);","lastModifiedDate":"2024-02-16"},{"lineNumber":32,"author":{"gitId":"delishad21"},"content":"            assertEquals(output, (\"----------\\nTasks\\n----------\\n\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":33,"author":{"gitId":"delishad21"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-16"},{"lineNumber":34,"author":{"gitId":"delishad21"},"content":"            fail();","lastModifiedDate":"2024-02-16"},{"lineNumber":35,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":36,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":37,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":38,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-02-16"},{"lineNumber":39,"author":{"gitId":"delishad21"},"content":"    public void testListContactCommand() {","lastModifiedDate":"2024-02-16"},{"lineNumber":40,"author":{"gitId":"delishad21"},"content":"        Database db \u003d new Database();","lastModifiedDate":"2024-02-16"},{"lineNumber":41,"author":{"gitId":"delishad21"},"content":"        Hashtable\u003cString, String\u003e testMap \u003d new Hashtable\u003cString, String\u003e();","lastModifiedDate":"2024-02-16"},{"lineNumber":42,"author":{"gitId":"delishad21"},"content":"        testMap.put(\"description\", \"contacts\");","lastModifiedDate":"2024-02-16"},{"lineNumber":43,"author":{"gitId":"delishad21"},"content":"        ListRecordsCommand command \u003d new ListRecordsCommand(testMap);","lastModifiedDate":"2024-02-16"},{"lineNumber":44,"author":{"gitId":"delishad21"},"content":"        try {","lastModifiedDate":"2024-02-16"},{"lineNumber":45,"author":{"gitId":"delishad21"},"content":"            String output \u003d command.execute(db, storage);","lastModifiedDate":"2024-02-16"},{"lineNumber":46,"author":{"gitId":"delishad21"},"content":"            assertEquals(output, (\"----------\\nContacts\\n----------\\n\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":47,"author":{"gitId":"delishad21"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-16"},{"lineNumber":48,"author":{"gitId":"delishad21"},"content":"            fail();","lastModifiedDate":"2024-02-16"},{"lineNumber":49,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":50,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":51,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-02-16"}],"authorContributionMap":{"delishad21":51}},{"path":"src/test/java/grizzly/commands/ModifyTaskCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package grizzly.commands;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"import java.util.Hashtable;","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"import grizzly.commands.ModifyTaskCommand.ModificationTypes;","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"import grizzly.tasks.Todo;","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"import grizzly.utils.Database;","lastModifiedDate":"2024-02-16"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"import grizzly.utils.Storage;","lastModifiedDate":"2024-02-16"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"public class ModifyTaskCommandTest {","lastModifiedDate":"2024-02-16"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-16"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"    public ModifyTaskCommandTest() {","lastModifiedDate":"2024-02-16"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":"        try {","lastModifiedDate":"2024-02-16"},{"lineNumber":20,"author":{"gitId":"delishad21"},"content":"            storage \u003d new Storage(\"data/help.txt\");","lastModifiedDate":"2024-02-16"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-16"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":"            fail();","lastModifiedDate":"2024-02-16"},{"lineNumber":23,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":24,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":25,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":26,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-02-16"},{"lineNumber":27,"author":{"gitId":"delishad21"},"content":"    public void testModifyTaskCommand() {","lastModifiedDate":"2024-02-16"},{"lineNumber":28,"author":{"gitId":"delishad21"},"content":"        Database db \u003d new Database();","lastModifiedDate":"2024-02-16"},{"lineNumber":29,"author":{"gitId":"delishad21"},"content":"        Hashtable\u003cString, String\u003e testMap \u003d new Hashtable\u003cString, String\u003e();","lastModifiedDate":"2024-02-16"},{"lineNumber":30,"author":{"gitId":"delishad21"},"content":"        testMap.put(\"description\", \"1\");","lastModifiedDate":"2024-02-16"},{"lineNumber":31,"author":{"gitId":"delishad21"},"content":"        db.addTask(new Todo(false, \"task 1\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":32,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":33,"author":{"gitId":"delishad21"},"content":"        Command c \u003d new ModifyTaskCommand(ModificationTypes.MARK, testMap);","lastModifiedDate":"2024-02-16"},{"lineNumber":34,"author":{"gitId":"delishad21"},"content":"        try {","lastModifiedDate":"2024-02-16"},{"lineNumber":35,"author":{"gitId":"delishad21"},"content":"            String output \u003d c.execute(db, storage);","lastModifiedDate":"2024-02-16"},{"lineNumber":36,"author":{"gitId":"delishad21"},"content":"            assertEquals(output, (\"Good job on finishing your task!:\\n[T][X] task 1\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":37,"author":{"gitId":"delishad21"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-16"},{"lineNumber":38,"author":{"gitId":"delishad21"},"content":"            fail();","lastModifiedDate":"2024-02-16"},{"lineNumber":39,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":40,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":41,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-02-16"}],"authorContributionMap":{"delishad21":41}},{"path":"src/test/java/grizzly/contacts/ContactTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package grizzly.contacts;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"import java.util.Hashtable;","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"public class ContactTest {","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"    public void testContact() {","lastModifiedDate":"2024-02-16"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"        Contact c \u003d new Contact(\"Johan\", \"dess@gmail.com\", 123132132);","lastModifiedDate":"2024-02-16"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"        assertEquals(c.toString(), (\"Johan | dess@gmail.com | 123132132\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"    public void testContact2() {","lastModifiedDate":"2024-02-16"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":"        Contact c \u003d new Contact(\"Madeline\", \"madeline@hotmail.com\", 91824901);","lastModifiedDate":"2024-02-16"},{"lineNumber":20,"author":{"gitId":"delishad21"},"content":"        assertEquals(c.toString(), (\"Madeline | madeline@hotmail.com | 91824901\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":23,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-02-16"},{"lineNumber":24,"author":{"gitId":"delishad21"},"content":"    public void testContactParse() {","lastModifiedDate":"2024-02-16"},{"lineNumber":25,"author":{"gitId":"delishad21"},"content":"        Hashtable\u003cString, String\u003e testMap \u003d new Hashtable\u003cString, String\u003e();","lastModifiedDate":"2024-02-16"},{"lineNumber":26,"author":{"gitId":"delishad21"},"content":"        testMap.put(\"description\", \"Johan\");","lastModifiedDate":"2024-02-16"},{"lineNumber":27,"author":{"gitId":"delishad21"},"content":"        testMap.put(\"email\", \"joh@gmail.com\");","lastModifiedDate":"2024-02-16"},{"lineNumber":28,"author":{"gitId":"delishad21"},"content":"        testMap.put(\"number\", \"123132132\");","lastModifiedDate":"2024-02-16"},{"lineNumber":29,"author":{"gitId":"delishad21"},"content":"        try {","lastModifiedDate":"2024-02-16"},{"lineNumber":30,"author":{"gitId":"delishad21"},"content":"            Contact c \u003d Contact.contactParse(testMap);","lastModifiedDate":"2024-02-16"},{"lineNumber":31,"author":{"gitId":"delishad21"},"content":"            assertEquals(c.toString(), (\"Johan | joh@gmail.com | 123132132\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":32,"author":{"gitId":"delishad21"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-16"},{"lineNumber":33,"author":{"gitId":"delishad21"},"content":"            fail();","lastModifiedDate":"2024-02-16"},{"lineNumber":34,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":35,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":36,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-02-16"}],"authorContributionMap":{"delishad21":36}},{"path":"src/test/java/grizzly/exceptions/ContactCreationExceptionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package grizzly.exceptions;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"public class ContactCreationExceptionTest {","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"    public void testContactCreationException() {","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"        ContactCreationException e \u003d new ContactCreationException(\"test\");","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"        assert e.getMessage().equals(\"Error Creating Contact! test\");","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-02-16"}],"authorContributionMap":{"delishad21":11}},{"path":"src/test/java/grizzly/exceptions/GrizzlyExceptionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package grizzly.exceptions;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"public class GrizzlyExceptionTest {","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"    public void testGrizzlyException() {","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"        GrizzlyException e \u003d new GrizzlyException(\"test\");","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"        assert e.getMessage().equals(\"test\");","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-02-16"}],"authorContributionMap":{"delishad21":11}},{"path":"src/test/java/grizzly/exceptions/MissingInformationExceptionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package grizzly.exceptions;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"public class MissingInformationExceptionTest {","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"    public void testMissingInformationException() {","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"        MissingInformationException e \u003d new MissingInformationException(\"test\");","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"        assertEquals(e.getMessage(), \"Missing information: test\");","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-02-16"}],"authorContributionMap":{"delishad21":13}},{"path":"src/test/java/grizzly/exceptions/MissingParameterExceptionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package grizzly.exceptions;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"public class MissingParameterExceptionTest {","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"    public void testMissingParameterException() {","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"        MissingParameterException e \u003d new MissingParameterException(\"test\");","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"        assertEquals(e.getMessage(), \"Missing parameters: test\");","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-02-16"}],"authorContributionMap":{"delishad21":13}},{"path":"src/test/java/grizzly/exceptions/RecordCreationExceptionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package grizzly.exceptions;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"public class RecordCreationExceptionTest {","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"    public void testRecordCreationException() {","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"        RecordCreationException e \u003d new RecordCreationException(\"test\");","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"        assertEquals(e.getMessage(), \"Error Creating Record! test\");","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-02-16"}],"authorContributionMap":{"delishad21":14}},{"path":"src/test/java/grizzly/exceptions/RecordDeletionExceptionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package grizzly.exceptions;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"public class RecordDeletionExceptionTest {","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"    public void testRecordDeletionException() {","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"        RecordDeletionException e \u003d new RecordDeletionException(\"test\");","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"        assert e.getMessage().equals(\"Error Deleting Record! test\");","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-02-16"}],"authorContributionMap":{"delishad21":11}},{"path":"src/test/java/grizzly/exceptions/TaskModificationExceptionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package grizzly.exceptions;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"public class TaskModificationExceptionTest {","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"    public void testTaskModificationException() {","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"        TaskModificationException e \u003d new TaskModificationException(\"test\");","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"        assert e.getMessage().equals(\"Error Modifying Task! test\");","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-02-16"}],"authorContributionMap":{"delishad21":11}},{"path":"src/test/java/grizzly/tasks/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package grizzly.tasks;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"import java.util.Hashtable;","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"import grizzly.utils.Parser;","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"public class DeadlineTest {","lastModifiedDate":"2024-02-16"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"    public void testDeadline() {","lastModifiedDate":"2024-02-16"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"        Deadline d \u003d new Deadline(false, \"test\",","lastModifiedDate":"2024-02-16"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"                                  LocalDateTime.parse(\"12/11/2024, 13:00\",","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"                                                      Parser.INPUT_DT_FORMATTER));","lastModifiedDate":"2024-02-16"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":"        assertEquals(d.toString(), (\"[D][ ] test\\n(by: 12 November 2024, 01:00PM)\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":20,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-02-16"},{"lineNumber":23,"author":{"gitId":"delishad21"},"content":"    public void testDeadline2() {","lastModifiedDate":"2024-02-16"},{"lineNumber":24,"author":{"gitId":"delishad21"},"content":"        Deadline d \u003d new Deadline(true, \"test\",","lastModifiedDate":"2024-02-16"},{"lineNumber":25,"author":{"gitId":"delishad21"},"content":"                                  LocalDateTime.parse(\"12/02/2023, 12:00\",","lastModifiedDate":"2024-02-16"},{"lineNumber":26,"author":{"gitId":"delishad21"},"content":"                                                      Parser.INPUT_DT_FORMATTER));","lastModifiedDate":"2024-02-16"},{"lineNumber":27,"author":{"gitId":"delishad21"},"content":"        assertEquals(d.toString(), (\"[D][X] test\\n(by: 12 February 2023, 12:00PM)\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":28,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":29,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":30,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-02-16"},{"lineNumber":31,"author":{"gitId":"delishad21"},"content":"    public void testDeadlineParse() {","lastModifiedDate":"2024-02-16"},{"lineNumber":32,"author":{"gitId":"delishad21"},"content":"        Hashtable\u003cString, String\u003e testMap \u003d new Hashtable\u003cString, String\u003e();","lastModifiedDate":"2024-02-16"},{"lineNumber":33,"author":{"gitId":"delishad21"},"content":"        testMap.put(\"by\", \"12/11/2024, 13:00\");","lastModifiedDate":"2024-02-16"},{"lineNumber":34,"author":{"gitId":"delishad21"},"content":"        testMap.put(\"description\", \"test\");","lastModifiedDate":"2024-02-16"},{"lineNumber":35,"author":{"gitId":"delishad21"},"content":"        try {","lastModifiedDate":"2024-02-16"},{"lineNumber":36,"author":{"gitId":"delishad21"},"content":"            Deadline d \u003d Deadline.deadlineParse(false, testMap);","lastModifiedDate":"2024-02-16"},{"lineNumber":37,"author":{"gitId":"delishad21"},"content":"            assertEquals(d.toString(), (\"[D][ ] test\\n(by: 12 November 2024, 01:00PM)\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":38,"author":{"gitId":"delishad21"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-16"},{"lineNumber":39,"author":{"gitId":"delishad21"},"content":"            fail();","lastModifiedDate":"2024-02-16"},{"lineNumber":40,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":41,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":42,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-02-16"}],"authorContributionMap":{"delishad21":42}},{"path":"src/test/java/grizzly/tasks/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package grizzly.tasks;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"import java.util.Hashtable;","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"import grizzly.utils.Parser;","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"public class EventTest {","lastModifiedDate":"2024-02-16"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"    public void testEvent() {","lastModifiedDate":"2024-02-16"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"        Event e \u003d new Event(false,","lastModifiedDate":"2024-02-16"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"                            \"test\",","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"                            LocalDateTime.parse(\"12/11/2024, 13:00\", Parser.INPUT_DT_FORMATTER),","lastModifiedDate":"2024-02-16"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":"                            LocalDateTime.parse(\"12/11/2024, 14:00\", Parser.INPUT_DT_FORMATTER));","lastModifiedDate":"2024-02-16"},{"lineNumber":20,"author":{"gitId":"delishad21"},"content":"        assertEquals(e.toString(), (\"[E][ ] test\\n\"","lastModifiedDate":"2024-02-16"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":"                                        + \"(from: 12 November 2024, 01:00PM)\\n\"","lastModifiedDate":"2024-02-16"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":"                                        + \"(to: 12 November 2024, 02:00PM)\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":23,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":24,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":25,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-02-16"},{"lineNumber":26,"author":{"gitId":"delishad21"},"content":"    public void testEvent2() {","lastModifiedDate":"2024-02-16"},{"lineNumber":27,"author":{"gitId":"delishad21"},"content":"        Event e \u003d new Event(false,","lastModifiedDate":"2024-02-16"},{"lineNumber":28,"author":{"gitId":"delishad21"},"content":"                            \"test\",","lastModifiedDate":"2024-02-16"},{"lineNumber":29,"author":{"gitId":"delishad21"},"content":"                            LocalDateTime.parse(\"12/02/2023, 12:00\", Parser.INPUT_DT_FORMATTER),","lastModifiedDate":"2024-02-16"},{"lineNumber":30,"author":{"gitId":"delishad21"},"content":"                            LocalDateTime.parse(\"12/02/2023, 13:00\", Parser.INPUT_DT_FORMATTER));","lastModifiedDate":"2024-02-16"},{"lineNumber":31,"author":{"gitId":"delishad21"},"content":"        assertEquals(e.toString(), (\"[E][ ] test\\n\"","lastModifiedDate":"2024-02-16"},{"lineNumber":32,"author":{"gitId":"delishad21"},"content":"                                       + \"(from: 12 February 2023, 12:00PM)\\n\"","lastModifiedDate":"2024-02-16"},{"lineNumber":33,"author":{"gitId":"delishad21"},"content":"                                       + \"(to: 12 February 2023, 01:00PM)\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":34,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":35,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":36,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-02-16"},{"lineNumber":37,"author":{"gitId":"delishad21"},"content":"    public void testEvent3() {","lastModifiedDate":"2024-02-16"},{"lineNumber":38,"author":{"gitId":"delishad21"},"content":"        Event e \u003d new Event(true,","lastModifiedDate":"2024-02-16"},{"lineNumber":39,"author":{"gitId":"delishad21"},"content":"                            \"test\",","lastModifiedDate":"2024-02-16"},{"lineNumber":40,"author":{"gitId":"delishad21"},"content":"                            LocalDateTime.parse(\"12/02/2023, 12:00\", Parser.INPUT_DT_FORMATTER),","lastModifiedDate":"2024-02-16"},{"lineNumber":41,"author":{"gitId":"delishad21"},"content":"                            LocalDateTime.parse(\"12/02/2023, 13:00\", Parser.INPUT_DT_FORMATTER));","lastModifiedDate":"2024-02-16"},{"lineNumber":42,"author":{"gitId":"delishad21"},"content":"        assertEquals(e.toString(), (\"[E][X] test\\n\"","lastModifiedDate":"2024-02-16"},{"lineNumber":43,"author":{"gitId":"delishad21"},"content":"                                       + \"(from: 12 February 2023, 12:00PM)\\n\"","lastModifiedDate":"2024-02-16"},{"lineNumber":44,"author":{"gitId":"delishad21"},"content":"                                       + \"(to: 12 February 2023, 01:00PM)\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":45,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":46,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":47,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-02-16"},{"lineNumber":48,"author":{"gitId":"delishad21"},"content":"    public void testEventParse() {","lastModifiedDate":"2024-02-16"},{"lineNumber":49,"author":{"gitId":"delishad21"},"content":"        Hashtable\u003cString, String\u003e testMap \u003d new Hashtable\u003cString, String\u003e();","lastModifiedDate":"2024-02-16"},{"lineNumber":50,"author":{"gitId":"delishad21"},"content":"        testMap.put(\"from\", \"12/11/2024, 13:00\");","lastModifiedDate":"2024-02-16"},{"lineNumber":51,"author":{"gitId":"delishad21"},"content":"        testMap.put(\"to\", \"12/11/2024, 14:00\");","lastModifiedDate":"2024-02-16"},{"lineNumber":52,"author":{"gitId":"delishad21"},"content":"        testMap.put(\"description\", \"test\");","lastModifiedDate":"2024-02-16"},{"lineNumber":53,"author":{"gitId":"delishad21"},"content":"        try {","lastModifiedDate":"2024-02-16"},{"lineNumber":54,"author":{"gitId":"delishad21"},"content":"            Event e \u003d Event.eventParse(false, testMap);","lastModifiedDate":"2024-02-16"},{"lineNumber":55,"author":{"gitId":"delishad21"},"content":"            assertEquals(e.toString(), (\"[E][ ] test\\n\"","lastModifiedDate":"2024-02-16"},{"lineNumber":56,"author":{"gitId":"delishad21"},"content":"                                           + \"(from: 12 November 2024, 01:00PM)\\n\"","lastModifiedDate":"2024-02-16"},{"lineNumber":57,"author":{"gitId":"delishad21"},"content":"                                           + \"(to: 12 November 2024, 02:00PM)\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":58,"author":{"gitId":"delishad21"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-16"},{"lineNumber":59,"author":{"gitId":"delishad21"},"content":"            fail();","lastModifiedDate":"2024-02-16"},{"lineNumber":60,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":61,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":62,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-02-16"}],"authorContributionMap":{"delishad21":62}},{"path":"src/test/java/grizzly/tasks/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package grizzly.tasks;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"import java.util.Hashtable;","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"public class TodoTest {","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"    public void testTodo() {","lastModifiedDate":"2024-02-16"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"        Todo t \u003d new Todo(false, \"test\");","lastModifiedDate":"2024-02-16"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"        assertEquals(t.toString(), (\"[T][ ] test\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"    public void testTodo2() {","lastModifiedDate":"2024-02-16"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":"        Todo t \u003d new Todo(false, \"test\");","lastModifiedDate":"2024-02-16"},{"lineNumber":20,"author":{"gitId":"delishad21"},"content":"        t.doTask();","lastModifiedDate":"2024-02-16"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":"        assertEquals(t.toString(), (\"[T][X] test\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":23,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":24,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-02-16"},{"lineNumber":25,"author":{"gitId":"delishad21"},"content":"    public void testTodo3() {","lastModifiedDate":"2024-02-16"},{"lineNumber":26,"author":{"gitId":"delishad21"},"content":"        Todo t \u003d new Todo(true, \"test\");","lastModifiedDate":"2024-02-16"},{"lineNumber":27,"author":{"gitId":"delishad21"},"content":"        assertEquals(t.toString(), (\"[T][X] test\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":28,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":29,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":30,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-02-16"},{"lineNumber":31,"author":{"gitId":"delishad21"},"content":"    public void testTodoParse() {","lastModifiedDate":"2024-02-16"},{"lineNumber":32,"author":{"gitId":"delishad21"},"content":"        Hashtable\u003cString, String\u003e testMap \u003d new Hashtable\u003cString, String\u003e();","lastModifiedDate":"2024-02-16"},{"lineNumber":33,"author":{"gitId":"delishad21"},"content":"        testMap.put(\"description\", \"test\");","lastModifiedDate":"2024-02-16"},{"lineNumber":34,"author":{"gitId":"delishad21"},"content":"        try {","lastModifiedDate":"2024-02-16"},{"lineNumber":35,"author":{"gitId":"delishad21"},"content":"            Todo t \u003d Todo.todoParse(false, testMap);","lastModifiedDate":"2024-02-16"},{"lineNumber":36,"author":{"gitId":"delishad21"},"content":"            assertEquals(t.toString(), (\"[T][ ] test\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":37,"author":{"gitId":"delishad21"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-16"},{"lineNumber":38,"author":{"gitId":"delishad21"},"content":"            fail();","lastModifiedDate":"2024-02-16"},{"lineNumber":39,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":40,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":41,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-02-16"}],"authorContributionMap":{"delishad21":41}},{"path":"src/test/java/grizzly/utils/DatabaseTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package grizzly.utils;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"import grizzly.contacts.Contact;","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"import grizzly.tasks.Task;","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"import grizzly.tasks.Todo;","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"public class DatabaseTest {","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-02-16"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"    public void addTaskTest() {","lastModifiedDate":"2024-02-16"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"        Database db \u003d new Database();","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"        Task t \u003d new Task(false, \"test\");","lastModifiedDate":"2024-02-16"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"        db.addTask(t);","lastModifiedDate":"2024-02-16"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"        assertEquals(db.taskListSize(), 1);","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":20,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-02-16"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":"    public void addTodoTest() {","lastModifiedDate":"2024-02-16"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":"        Database db \u003d new Database();","lastModifiedDate":"2024-02-16"},{"lineNumber":23,"author":{"gitId":"delishad21"},"content":"        Task t \u003d new Todo(false, \"test\");","lastModifiedDate":"2024-02-16"},{"lineNumber":24,"author":{"gitId":"delishad21"},"content":"        db.addTask(t);","lastModifiedDate":"2024-02-16"},{"lineNumber":25,"author":{"gitId":"delishad21"},"content":"        assertEquals(db.tasksToString(), (\"----------\\nTasks\\n----------\\n1.[T][ ] test\\n\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":26,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":27,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":28,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-02-16"},{"lineNumber":29,"author":{"gitId":"delishad21"},"content":"    public void addContactTest() {","lastModifiedDate":"2024-02-16"},{"lineNumber":30,"author":{"gitId":"delishad21"},"content":"        Database db \u003d new Database();","lastModifiedDate":"2024-02-16"},{"lineNumber":31,"author":{"gitId":"delishad21"},"content":"        Contact c \u003d new Contact(\"test\", \"something@something\", 123231313);","lastModifiedDate":"2024-02-16"},{"lineNumber":32,"author":{"gitId":"delishad21"},"content":"        db.addContact(c);","lastModifiedDate":"2024-02-16"},{"lineNumber":33,"author":{"gitId":"delishad21"},"content":"        assertEquals(db.contactListSize(), 1);","lastModifiedDate":"2024-02-16"},{"lineNumber":34,"author":{"gitId":"delishad21"},"content":"        assertEquals(db.contactsToString(), (\"----------\\nContacts\\n----------\\n\"","lastModifiedDate":"2024-02-16"},{"lineNumber":35,"author":{"gitId":"delishad21"},"content":"                                                + \"1.test | something@something | 123231313\\n\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":36,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":37,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":38,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-02-16"},{"lineNumber":39,"author":{"gitId":"delishad21"},"content":"    public void databaseToStringTest() {","lastModifiedDate":"2024-02-16"},{"lineNumber":40,"author":{"gitId":"delishad21"},"content":"        Database db \u003d new Database();","lastModifiedDate":"2024-02-16"},{"lineNumber":41,"author":{"gitId":"delishad21"},"content":"        Task t \u003d new Todo(false, \"test\");","lastModifiedDate":"2024-02-16"},{"lineNumber":42,"author":{"gitId":"delishad21"},"content":"        db.addTask(t);","lastModifiedDate":"2024-02-16"},{"lineNumber":43,"author":{"gitId":"delishad21"},"content":"        Contact c \u003d new Contact(\"test\", \"something@something\", 123231313);","lastModifiedDate":"2024-02-16"},{"lineNumber":44,"author":{"gitId":"delishad21"},"content":"        db.addContact(c);","lastModifiedDate":"2024-02-16"},{"lineNumber":45,"author":{"gitId":"delishad21"},"content":"        assertEquals(db.toString(), (\"----------\\nTasks\\n----------\\n1.[T][ ] test\\n\"","lastModifiedDate":"2024-02-16"},{"lineNumber":46,"author":{"gitId":"delishad21"},"content":"                                        + \"----------\\nContacts\\n----------\\n\"","lastModifiedDate":"2024-02-16"},{"lineNumber":47,"author":{"gitId":"delishad21"},"content":"                                        + \"1.test | something@something | 123231313\\n\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":48,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":49,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-02-16"}],"authorContributionMap":{"delishad21":49}},{"path":"src/test/java/grizzly/utils/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package grizzly.utils;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"import grizzly.commands.Command;","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"import grizzly.commands.ExitCommand;","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"import grizzly.commands.GenerateRecordCommand;","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"import grizzly.commands.ModifyTaskCommand;","lastModifiedDate":"2024-02-16"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"import grizzly.exceptions.NoSuchCommandException;","lastModifiedDate":"2024-02-16"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"public class ParserTest {","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"    private Storage s;","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":"    public ParserTest() {","lastModifiedDate":"2024-02-16"},{"lineNumber":20,"author":{"gitId":"delishad21"},"content":"        try {","lastModifiedDate":"2024-02-16"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":"            s \u003d new Storage(\"data/test.txt\");","lastModifiedDate":"2024-02-16"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-16"},{"lineNumber":23,"author":{"gitId":"delishad21"},"content":"            fail();","lastModifiedDate":"2024-02-16"},{"lineNumber":24,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":25,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":26,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":27,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"delishad21"},"content":"    public void generateTodoTest() {","lastModifiedDate":"2024-02-16"},{"lineNumber":29,"author":{"gitId":"delishad21"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"delishad21"},"content":"            Database db \u003d new Database();","lastModifiedDate":"2024-02-16"},{"lineNumber":31,"author":{"gitId":"delishad21"},"content":"            Command c \u003d Parser.parse(\"todo task1\");","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"delishad21"},"content":"            assertTrue((c instanceof GenerateRecordCommand));","lastModifiedDate":"2024-02-16"},{"lineNumber":33,"author":{"gitId":"delishad21"},"content":"            String output;","lastModifiedDate":"2024-02-16"},{"lineNumber":34,"author":{"gitId":"delishad21"},"content":"            try {","lastModifiedDate":"2024-02-16"},{"lineNumber":35,"author":{"gitId":"delishad21"},"content":"                output \u003d c.execute(db, s);","lastModifiedDate":"2024-02-16"},{"lineNumber":36,"author":{"gitId":"delishad21"},"content":"            } catch (Exception e) {","lastModifiedDate":"2024-02-16"},{"lineNumber":37,"author":{"gitId":"delishad21"},"content":"                fail();","lastModifiedDate":"2024-02-16"},{"lineNumber":38,"author":{"gitId":"delishad21"},"content":"                return;","lastModifiedDate":"2024-02-16"},{"lineNumber":39,"author":{"gitId":"delishad21"},"content":"            }","lastModifiedDate":"2024-02-16"},{"lineNumber":40,"author":{"gitId":"delishad21"},"content":"            assertEquals(output, (\"Todo Task added!\\n[T][ ] task1\\nYou now have 1 tasks in the list.\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":41,"author":{"gitId":"delishad21"},"content":"        } catch (NoSuchCommandException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"delishad21"},"content":"            fail();","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"delishad21"},"content":"    public void generateDeadlineTest() {","lastModifiedDate":"2024-02-09"},{"lineNumber":48,"author":{"gitId":"delishad21"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"delishad21"},"content":"            Database db \u003d new Database();","lastModifiedDate":"2024-02-16"},{"lineNumber":50,"author":{"gitId":"delishad21"},"content":"            Command c \u003d Parser.parse(\"deadline task2 /by 12/11/2024, 13:00\");","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"delishad21"},"content":"            assertTrue((c instanceof GenerateRecordCommand));","lastModifiedDate":"2024-02-16"},{"lineNumber":52,"author":{"gitId":"delishad21"},"content":"            String output;","lastModifiedDate":"2024-02-16"},{"lineNumber":53,"author":{"gitId":"delishad21"},"content":"            try {","lastModifiedDate":"2024-02-16"},{"lineNumber":54,"author":{"gitId":"delishad21"},"content":"                output \u003d c.execute(db, s);","lastModifiedDate":"2024-02-16"},{"lineNumber":55,"author":{"gitId":"delishad21"},"content":"            } catch (Exception e) {","lastModifiedDate":"2024-02-16"},{"lineNumber":56,"author":{"gitId":"delishad21"},"content":"                fail();","lastModifiedDate":"2024-02-16"},{"lineNumber":57,"author":{"gitId":"delishad21"},"content":"                return;","lastModifiedDate":"2024-02-16"},{"lineNumber":58,"author":{"gitId":"delishad21"},"content":"            }","lastModifiedDate":"2024-02-16"},{"lineNumber":59,"author":{"gitId":"delishad21"},"content":"            assertEquals(output, (\"Deadline Task added!\\n\"","lastModifiedDate":"2024-02-16"},{"lineNumber":60,"author":{"gitId":"delishad21"},"content":"                                     + \"[D][ ] task2\\n\"","lastModifiedDate":"2024-02-16"},{"lineNumber":61,"author":{"gitId":"delishad21"},"content":"                                     + \"(by: 12 November 2024, 01:00PM)\\n\"","lastModifiedDate":"2024-02-16"},{"lineNumber":62,"author":{"gitId":"delishad21"},"content":"                                     + \"You now have 1 tasks in the list.\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":63,"author":{"gitId":"delishad21"},"content":"        } catch (NoSuchCommandException e) {","lastModifiedDate":"2024-02-16"},{"lineNumber":64,"author":{"gitId":"delishad21"},"content":"            fail();","lastModifiedDate":"2024-02-16"},{"lineNumber":65,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":66,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":67,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":68,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-02-16"},{"lineNumber":69,"author":{"gitId":"delishad21"},"content":"    public void generateEventTest() {","lastModifiedDate":"2024-02-16"},{"lineNumber":70,"author":{"gitId":"delishad21"},"content":"        Database db \u003d new Database();","lastModifiedDate":"2024-02-16"},{"lineNumber":71,"author":{"gitId":"delishad21"},"content":"        try {","lastModifiedDate":"2024-02-16"},{"lineNumber":72,"author":{"gitId":"delishad21"},"content":"            Command c \u003d Parser.parse(\"event task3 /from 12/11/2024, 13:00 /to 12/11/2024, 14:00\");","lastModifiedDate":"2024-02-16"},{"lineNumber":73,"author":{"gitId":"delishad21"},"content":"            assertTrue((c instanceof GenerateRecordCommand));","lastModifiedDate":"2024-02-16"},{"lineNumber":74,"author":{"gitId":"delishad21"},"content":"            String output;","lastModifiedDate":"2024-02-16"},{"lineNumber":75,"author":{"gitId":"delishad21"},"content":"            try {","lastModifiedDate":"2024-02-16"},{"lineNumber":76,"author":{"gitId":"delishad21"},"content":"                output \u003d c.execute(db, s);","lastModifiedDate":"2024-02-16"},{"lineNumber":77,"author":{"gitId":"delishad21"},"content":"            } catch (Exception e) {","lastModifiedDate":"2024-02-16"},{"lineNumber":78,"author":{"gitId":"delishad21"},"content":"                fail();","lastModifiedDate":"2024-02-16"},{"lineNumber":79,"author":{"gitId":"delishad21"},"content":"                return;","lastModifiedDate":"2024-02-16"},{"lineNumber":80,"author":{"gitId":"delishad21"},"content":"            }","lastModifiedDate":"2024-02-16"},{"lineNumber":81,"author":{"gitId":"delishad21"},"content":"            assertEquals(output, (\"Event Task added!\\n\"","lastModifiedDate":"2024-02-16"},{"lineNumber":82,"author":{"gitId":"delishad21"},"content":"                                     + \"[E][ ] task3\\n\"","lastModifiedDate":"2024-02-16"},{"lineNumber":83,"author":{"gitId":"delishad21"},"content":"                                     + \"(from: 12 November 2024, 01:00PM)\\n\"","lastModifiedDate":"2024-02-16"},{"lineNumber":84,"author":{"gitId":"delishad21"},"content":"                                     + \"(to: 12 November 2024, 02:00PM)\\n\"","lastModifiedDate":"2024-02-16"},{"lineNumber":85,"author":{"gitId":"delishad21"},"content":"                                     + \"You now have 1 tasks in the list.\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":86,"author":{"gitId":"delishad21"},"content":"        } catch (NoSuchCommandException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":87,"author":{"gitId":"delishad21"},"content":"            fail();","lastModifiedDate":"2024-01-28"},{"lineNumber":88,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":89,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":90,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":91,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":92,"author":{"gitId":"delishad21"},"content":"    public void generateModificationTest() {","lastModifiedDate":"2024-02-09"},{"lineNumber":93,"author":{"gitId":"delishad21"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":94,"author":{"gitId":"delishad21"},"content":"            Command c \u003d Parser.parse(\"mark 2\");","lastModifiedDate":"2024-01-28"},{"lineNumber":95,"author":{"gitId":"delishad21"},"content":"            assertTrue((c instanceof ModifyTaskCommand));","lastModifiedDate":"2024-02-16"},{"lineNumber":96,"author":{"gitId":"delishad21"},"content":"        } catch (NoSuchCommandException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":97,"author":{"gitId":"delishad21"},"content":"            fail();","lastModifiedDate":"2024-01-28"},{"lineNumber":98,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":99,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":100,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":101,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":102,"author":{"gitId":"delishad21"},"content":"    public void generateModificationTest2() {","lastModifiedDate":"2024-02-09"},{"lineNumber":103,"author":{"gitId":"delishad21"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":104,"author":{"gitId":"delishad21"},"content":"            Command c \u003d Parser.parse(\"unmark 2\");","lastModifiedDate":"2024-01-28"},{"lineNumber":105,"author":{"gitId":"delishad21"},"content":"            assertTrue((c instanceof ModifyTaskCommand));","lastModifiedDate":"2024-02-16"},{"lineNumber":106,"author":{"gitId":"delishad21"},"content":"        } catch (NoSuchCommandException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":107,"author":{"gitId":"delishad21"},"content":"            fail();","lastModifiedDate":"2024-01-28"},{"lineNumber":108,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":109,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":110,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":111,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":112,"author":{"gitId":"delishad21"},"content":"    public void generateExitTest() {","lastModifiedDate":"2024-02-09"},{"lineNumber":113,"author":{"gitId":"delishad21"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":114,"author":{"gitId":"delishad21"},"content":"            Command c \u003d Parser.parse(\"bye\");","lastModifiedDate":"2024-01-28"},{"lineNumber":115,"author":{"gitId":"delishad21"},"content":"            assertTrue((c instanceof ExitCommand));","lastModifiedDate":"2024-02-16"},{"lineNumber":116,"author":{"gitId":"delishad21"},"content":"        } catch (NoSuchCommandException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":117,"author":{"gitId":"delishad21"},"content":"            fail();","lastModifiedDate":"2024-01-28"},{"lineNumber":118,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":119,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":120,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":121,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":122,"author":{"gitId":"delishad21"},"content":"    public void invalidCommandTest() {","lastModifiedDate":"2024-02-09"},{"lineNumber":123,"author":{"gitId":"delishad21"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":124,"author":{"gitId":"delishad21"},"content":"            Command c \u003d Parser.parse(\"rjksjrkr\");","lastModifiedDate":"2024-01-28"},{"lineNumber":125,"author":{"gitId":"delishad21"},"content":"            fail();","lastModifiedDate":"2024-01-28"},{"lineNumber":126,"author":{"gitId":"delishad21"},"content":"        } catch (NoSuchCommandException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":127,"author":{"gitId":"delishad21"},"content":"            return;","lastModifiedDate":"2024-01-28"},{"lineNumber":128,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":129,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":130,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":131,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":132,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"delishad21":132}},{"path":"src/test/java/grizzly/utils/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package grizzly.utils;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"import java.io.File;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"import grizzly.tasks.Deadline;","lastModifiedDate":"2024-02-16"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"import grizzly.tasks.Event;","lastModifiedDate":"2024-02-16"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"import grizzly.tasks.Todo;","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"public class StorageTest {","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":"    public void testStorageFileCreation() {","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"delishad21"},"content":"        File file \u003d new File(\"data/test.txt\");","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":"        file.delete();","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"delishad21"},"content":"            Storage s \u003d new Storage(\"data/test.txt\");","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"delishad21"},"content":"            assertTrue(file.exists());","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"delishad21"},"content":"            file.delete();","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"delishad21"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"delishad21"},"content":"            fail();","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"delishad21"},"content":"            file.delete();","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"delishad21"},"content":"    public void testStorageReading() {","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"delishad21"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"delishad21"},"content":"            File file \u003d new File(\"data/test.txt\");","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"delishad21"},"content":"            file.createNewFile();","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"delishad21"},"content":"            FileWriter fw \u003d new FileWriter(file);","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"delishad21"},"content":"            fw.write(\"[T]|[ ]|1\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"delishad21"},"content":"                     + \"[D]|[X]|task2|12/11/2001, 16:00\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"delishad21"},"content":"                     + \"[E]|[ ]|task 3|12/11/2001, 15:00|13/11/2001, 16:00\");","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"delishad21"},"content":"            fw.close();","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"delishad21"},"content":"            Storage s \u003d new Storage(\"data/test.txt\");","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"delishad21"},"content":"            Database taskList \u003d new Database();","lastModifiedDate":"2024-02-09"},{"lineNumber":46,"author":{"gitId":"delishad21"},"content":"            s.readSaveData(taskList);","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"delishad21"},"content":"            assertTrue(taskList.taskListSize() \u003d\u003d 3);","lastModifiedDate":"2024-02-09"},{"lineNumber":49,"author":{"gitId":"delishad21"},"content":"            assertTrue(taskList.getTask(1) instanceof Todo);","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"delishad21"},"content":"            assertTrue(taskList.getTask(2) instanceof Deadline);","lastModifiedDate":"2024-02-09"},{"lineNumber":51,"author":{"gitId":"delishad21"},"content":"            assertTrue(taskList.getTask(3) instanceof Event);","lastModifiedDate":"2024-02-09"},{"lineNumber":52,"author":{"gitId":"delishad21"},"content":"            file.delete();","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"delishad21"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"delishad21"},"content":"            fail();","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"delishad21":58}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"todo feed dog","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"deadline assignment 2 /by jan 2","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"event prom night /from Jan 2 4pm /to Jan 2 6pm","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"mark 4","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"mark 1","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"mark 2","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"unmark 2","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"mark skfjh","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"deadline assignment /by  ","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"deadline assignment /by 2024","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"bye","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"delishad21":16}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"java -classpath ..\\bin Grizzly \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"delishad21":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"delishad21"},"content":"java -classpath ../bin Grizzly \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"delishad21":1,"-":37}}]
