[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"CaptainKeqing"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"CaptainKeqing"},"content":"    // Junit 5","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":16,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"CaptainKeqing"},"content":"    // JavaFX 17","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"CaptainKeqing"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"CaptainKeqing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"CaptainKeqing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"CaptainKeqing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"CaptainKeqing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"CaptainKeqing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"CaptainKeqing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"CaptainKeqing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"CaptainKeqing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"CaptainKeqing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"CaptainKeqing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"CaptainKeqing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"CaptainKeqing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"CaptainKeqing"},"content":"    mainClass.set(\"lindi.Launcher\")","lastModifiedDate":"2024-02-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"CaptainKeqing"},"content":"    archiveBaseName \u003d \"lindi\"","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"CaptainKeqing"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"CaptainKeqing"},"content":"checkstyle {","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"CaptainKeqing"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"-":41,"CaptainKeqing":24}},{"path":"src/main/java/lindi/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CaptainKeqing"},"content":"package lindi;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"CaptainKeqing"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.gui.Main;","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"CaptainKeqing"},"content":"/**","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"CaptainKeqing"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"CaptainKeqing"},"content":" */","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"CaptainKeqing"},"content":"public class Launcher {","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"CaptainKeqing"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"CaptainKeqing"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"CaptainKeqing"},"content":"}","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"CaptainKeqing":13}},{"path":"src/main/java/lindi/Lindi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CaptainKeqing"},"content":"package lindi;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.commands.Command;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.gui.DialogBox;","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.parser.Parser;","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.storage.Storage;","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.storage.StorageLoadException;","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.task.TaskList;","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.ui.Ui;","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"CaptainKeqing"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"CaptainKeqing"},"content":" * Entry point of Lindi Application.","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"CaptainKeqing"},"content":" * Initializes the application and starts the interaction with the user.","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"CaptainKeqing"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"CaptainKeqing"},"content":"public class Lindi {","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"CaptainKeqing"},"content":"    // Lindi private attributes for chatbot logic","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"CaptainKeqing"},"content":"    private final Storage storage;","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"CaptainKeqing"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"CaptainKeqing"},"content":"    private final Ui ui;","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"CaptainKeqing"},"content":"    private final String name \u003d \"Lindi\"; // Log It N Do It -\u003e LINDI","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"CaptainKeqing"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"CaptainKeqing"},"content":"     * No argument constructor for JavaFx compatibility","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"CaptainKeqing"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"CaptainKeqing"},"content":"    public Lindi() {","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"CaptainKeqing"},"content":"        this.storage \u003d new Storage(\"./.data\", \"LindiData.txt\"); // hard-coded data file path","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"CaptainKeqing"},"content":"        this.ui \u003d new Ui(this.name);","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"CaptainKeqing"},"content":"        try {","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"CaptainKeqing"},"content":"            this.tasks \u003d this.storage.loadFromFile();","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"CaptainKeqing"},"content":"        } catch (StorageLoadException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"CaptainKeqing"},"content":"            this.ui.displayError(e);","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"CaptainKeqing"},"content":"            this.tasks \u003d new TaskList();","lastModifiedDate":"2024-02-10"},{"lineNumber":33,"author":{"gitId":"CaptainKeqing"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":36,"author":{"gitId":"CaptainKeqing"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"CaptainKeqing"},"content":"     * Initializes Lindi","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"CaptainKeqing"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"CaptainKeqing"},"content":"     * @param dataDir directory of data file","lastModifiedDate":"2024-02-06"},{"lineNumber":40,"author":{"gitId":"CaptainKeqing"},"content":"     * @param dataFileName name of data file","lastModifiedDate":"2024-02-06"},{"lineNumber":41,"author":{"gitId":"CaptainKeqing"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":42,"author":{"gitId":"CaptainKeqing"},"content":"    public Lindi(String dataDir, String dataFileName) {","lastModifiedDate":"2024-02-06"},{"lineNumber":43,"author":{"gitId":"CaptainKeqing"},"content":"        this.storage \u003d new Storage(dataDir, dataFileName);","lastModifiedDate":"2024-02-06"},{"lineNumber":44,"author":{"gitId":"CaptainKeqing"},"content":"        this.ui \u003d new Ui(this.name);","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"CaptainKeqing"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"CaptainKeqing"},"content":"            this.tasks \u003d this.storage.loadFromFile();","lastModifiedDate":"2024-02-06"},{"lineNumber":47,"author":{"gitId":"CaptainKeqing"},"content":"        } catch (StorageLoadException e) {","lastModifiedDate":"2024-02-06"},{"lineNumber":48,"author":{"gitId":"CaptainKeqing"},"content":"            this.ui.displayError(e);","lastModifiedDate":"2024-02-06"},{"lineNumber":49,"author":{"gitId":"CaptainKeqing"},"content":"            this.tasks \u003d new TaskList();","lastModifiedDate":"2024-02-06"},{"lineNumber":50,"author":{"gitId":"CaptainKeqing"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":51,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":52,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":53,"author":{"gitId":"CaptainKeqing"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":54,"author":{"gitId":"CaptainKeqing"},"content":"     * Runs the program. This loops until terminated by user with ExitCommand.","lastModifiedDate":"2024-02-10"},{"lineNumber":55,"author":{"gitId":"CaptainKeqing"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":56,"author":{"gitId":"CaptainKeqing"},"content":"    public void run() {","lastModifiedDate":"2024-02-06"},{"lineNumber":57,"author":{"gitId":"CaptainKeqing"},"content":"        this.ui.greeting();","lastModifiedDate":"2024-02-06"},{"lineNumber":58,"author":{"gitId":"CaptainKeqing"},"content":"        boolean toExit \u003d false;","lastModifiedDate":"2024-02-06"},{"lineNumber":59,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":60,"author":{"gitId":"CaptainKeqing"},"content":"        while (!toExit) {","lastModifiedDate":"2024-02-06"},{"lineNumber":61,"author":{"gitId":"CaptainKeqing"},"content":"            String userInput \u003d this.ui.getUserInput();","lastModifiedDate":"2024-02-06"},{"lineNumber":62,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":63,"author":{"gitId":"CaptainKeqing"},"content":"            Command c \u003d Parser.parse(userInput);","lastModifiedDate":"2024-02-06"},{"lineNumber":64,"author":{"gitId":"CaptainKeqing"},"content":"            c.execute(this.tasks, this.storage);","lastModifiedDate":"2024-02-06"},{"lineNumber":65,"author":{"gitId":"CaptainKeqing"},"content":"            this.ui.displayCommand(c);","lastModifiedDate":"2024-02-06"},{"lineNumber":66,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":67,"author":{"gitId":"CaptainKeqing"},"content":"            toExit \u003d c.isExit();","lastModifiedDate":"2024-02-06"},{"lineNumber":68,"author":{"gitId":"CaptainKeqing"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":69,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":70,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":71,"author":{"gitId":"CaptainKeqing"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":72,"author":{"gitId":"CaptainKeqing"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2024-02-11"},{"lineNumber":73,"author":{"gitId":"CaptainKeqing"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2024-02-11"},{"lineNumber":74,"author":{"gitId":"CaptainKeqing"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":75,"author":{"gitId":"CaptainKeqing"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-02-11"},{"lineNumber":76,"author":{"gitId":"CaptainKeqing"},"content":"        Command c \u003d Parser.parse(input);","lastModifiedDate":"2024-02-11"},{"lineNumber":77,"author":{"gitId":"CaptainKeqing"},"content":"        c.execute(this.tasks, this.storage);","lastModifiedDate":"2024-02-11"},{"lineNumber":78,"author":{"gitId":"CaptainKeqing"},"content":"        String response \u003d c.status();","lastModifiedDate":"2024-02-11"},{"lineNumber":79,"author":{"gitId":"CaptainKeqing"},"content":"        return response;","lastModifiedDate":"2024-02-11"},{"lineNumber":80,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":81,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":82,"author":{"gitId":"CaptainKeqing"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-11"},{"lineNumber":83,"author":{"gitId":"CaptainKeqing"},"content":"        new Lindi(\"./.data\", \"LindiData.txt\").run();","lastModifiedDate":"2024-02-11"},{"lineNumber":84,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":85,"author":{"gitId":"CaptainKeqing"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"CaptainKeqing":85}},{"path":"src/main/java/lindi/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CaptainKeqing"},"content":"package lindi.commands;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.storage.Storage;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.task.TaskList;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"CaptainKeqing"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"CaptainKeqing"},"content":" * Represents a user command to be executed","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"CaptainKeqing"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"CaptainKeqing"},"content":"public abstract class Command {","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"CaptainKeqing"},"content":"    protected String statusMsg \u003d \"Not executed yet\";","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"CaptainKeqing"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"CaptainKeqing"},"content":"     * Returns if the command is to exit. ExitCommand overrides this method to return true.","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"CaptainKeqing"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"CaptainKeqing"},"content":"     * @return true if it is an ExitCommand","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"CaptainKeqing"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"CaptainKeqing"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"CaptainKeqing"},"content":"        return false;","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"CaptainKeqing"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"CaptainKeqing"},"content":"     * Returns the status message of this command.","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"CaptainKeqing"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"CaptainKeqing"},"content":"    public String status() {","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"CaptainKeqing"},"content":"        return this.statusMsg;","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"CaptainKeqing"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"CaptainKeqing"},"content":"     * Executes the command. Updates status msg accordingly.","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"CaptainKeqing"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"CaptainKeqing"},"content":"     * @param tasks tasklist to be used in execution. May be modified.","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"CaptainKeqing"},"content":"     * @param storage storage for automatic saving of changes","lastModifiedDate":"2024-02-10"},{"lineNumber":33,"author":{"gitId":"CaptainKeqing"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"CaptainKeqing"},"content":"    public abstract void execute(TaskList tasks, Storage storage);","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"CaptainKeqing"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"CaptainKeqing":35}},{"path":"src/main/java/lindi/commands/CreateTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CaptainKeqing"},"content":"package lindi.commands;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.storage.Storage;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.task.CreateTaskException;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.task.Task;","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.task.TaskList;","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"CaptainKeqing"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"CaptainKeqing"},"content":" * Represents a command that creates a task upon execution","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"CaptainKeqing"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"CaptainKeqing"},"content":"public class CreateTaskCommand extends Command {","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"CaptainKeqing"},"content":"    private final String commandString;","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"CaptainKeqing"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"CaptainKeqing"},"content":"     * Creates command to create a task with the arguments supplied by the user","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"CaptainKeqing"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"CaptainKeqing"},"content":"     * @param commandString user input string","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"CaptainKeqing"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"CaptainKeqing"},"content":"    public CreateTaskCommand(String commandString) {","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"CaptainKeqing"},"content":"        this.commandString \u003d commandString;","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"CaptainKeqing"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"CaptainKeqing"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"CaptainKeqing"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"CaptainKeqing"},"content":"     * Creates task relying on Task class factory method, adds it to task list.","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"CaptainKeqing"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"CaptainKeqing"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"CaptainKeqing"},"content":"    public void execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"CaptainKeqing"},"content":"        try {","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"CaptainKeqing"},"content":"            Task createdtask \u003d Task.create(this.commandString);","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"CaptainKeqing"},"content":"            tasks.add(createdtask);","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"CaptainKeqing"},"content":"            this.statusMsg \u003d String.format(\"Okay. I\u0027ve deleted this task:\\n\\t%s\\nNow you have %d tasks in the list.\",","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"CaptainKeqing"},"content":"                    createdtask, tasks.size());","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"CaptainKeqing"},"content":"            storage.saveToFile(tasks);","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"CaptainKeqing"},"content":"        } catch (CreateTaskException e) {","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"CaptainKeqing"},"content":"            this.statusMsg \u003d e.getMessage();","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"CaptainKeqing"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":40,"author":{"gitId":"CaptainKeqing"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"CaptainKeqing":40}},{"path":"src/main/java/lindi/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CaptainKeqing"},"content":"package lindi.commands;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.storage.Storage;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.task.Task;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.task.TaskList;","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"CaptainKeqing"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"CaptainKeqing"},"content":" * Represents a command that deletes a task upon execution","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"CaptainKeqing"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"CaptainKeqing"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"CaptainKeqing"},"content":"    private final int listIndex;","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"CaptainKeqing"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"CaptainKeqing"},"content":"     * Creates command to delete a task from the task list","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"CaptainKeqing"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"CaptainKeqing"},"content":"     * @param listIndex index of task to delete","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"CaptainKeqing"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"CaptainKeqing"},"content":"    public DeleteCommand(int listIndex) {","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"CaptainKeqing"},"content":"        this.listIndex \u003d listIndex;","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"CaptainKeqing"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"CaptainKeqing"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"CaptainKeqing"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"CaptainKeqing"},"content":"     * Delete the task at listIndex from tasks.","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"CaptainKeqing"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"CaptainKeqing"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"CaptainKeqing"},"content":"    public void execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"CaptainKeqing"},"content":"        try {","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"CaptainKeqing"},"content":"            Task deletedTask \u003d tasks.delete(this.listIndex);","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"CaptainKeqing"},"content":"            this.statusMsg \u003d String.format(\"Okay. I\u0027ve deleted this task:\\n\\t%s\\nNow you have %d tasks in the list.\",","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"CaptainKeqing"},"content":"                    deletedTask, tasks.size());","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"CaptainKeqing"},"content":"            storage.saveToFile(tasks);","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"CaptainKeqing"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"CaptainKeqing"},"content":"            this.statusMsg \u003d \"Sorry, I can\u0027t find that task. Please enter a valid index\\n\"","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"CaptainKeqing"},"content":"                    + \"You can see the tasks list by inputting \\\"list\\\"\";","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"CaptainKeqing"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"CaptainKeqing"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"CaptainKeqing":39}},{"path":"src/main/java/lindi/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CaptainKeqing"},"content":"package lindi.commands;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.storage.Storage;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.task.TaskList;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"CaptainKeqing"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"CaptainKeqing"},"content":" * Represents a command that exits the program upon execution","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"CaptainKeqing"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"CaptainKeqing"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"CaptainKeqing"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"CaptainKeqing"},"content":"    public void execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"CaptainKeqing"},"content":"        this.statusMsg \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"CaptainKeqing"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"CaptainKeqing"},"content":"     * Returns true. Will exit main program loop.","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"CaptainKeqing"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"CaptainKeqing"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"CaptainKeqing"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"CaptainKeqing"},"content":"        return true;","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"CaptainKeqing"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"CaptainKeqing":22}},{"path":"src/main/java/lindi/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CaptainKeqing"},"content":"package lindi.commands;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.storage.Storage;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.task.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"CaptainKeqing"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"CaptainKeqing"},"content":" * Represents a command that filters out tasks in the task list upon execution","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"CaptainKeqing"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"CaptainKeqing"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"CaptainKeqing"},"content":"    private final String keyword;","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"CaptainKeqing"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"CaptainKeqing"},"content":"     * Creates command to find a task by keyword","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"CaptainKeqing"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"CaptainKeqing"},"content":"     * @param keyword keyword to look for in task description","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"CaptainKeqing"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"CaptainKeqing"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"CaptainKeqing"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"CaptainKeqing"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"CaptainKeqing"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"CaptainKeqing"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"CaptainKeqing"},"content":"     * Loads and filters the tasks in task list, matching this.keyword, into status msg to be printed.","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"CaptainKeqing"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"CaptainKeqing"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"CaptainKeqing"},"content":"    public void execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"CaptainKeqing"},"content":"        TaskList tasksToDisplay \u003d new TaskList();","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"CaptainKeqing"},"content":"        tasks.getTasks().forEachRemaining(","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"CaptainKeqing"},"content":"                task -\u003e {","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"CaptainKeqing"},"content":"                    if (task.getDescription().contains(this.keyword)) {","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"CaptainKeqing"},"content":"                        tasksToDisplay.add(task);","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"CaptainKeqing"},"content":"                    }","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"CaptainKeqing"},"content":"                }","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"CaptainKeqing"},"content":"        );","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"CaptainKeqing"},"content":"        this.statusMsg \u003d tasksToDisplay.size() \u003d\u003d 0","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"CaptainKeqing"},"content":"                ? \"There are no tasks containing that search key!\" // Replaces default no tasks message in TaskList","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"CaptainKeqing"},"content":"                : tasksToDisplay.toString();","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"CaptainKeqing"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"CaptainKeqing":40}},{"path":"src/main/java/lindi/commands/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CaptainKeqing"},"content":"package lindi.commands;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.storage.Storage;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.task.TaskList;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"CaptainKeqing"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"CaptainKeqing"},"content":" * Represents an invalid command that has no effect","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"CaptainKeqing"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"CaptainKeqing"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"CaptainKeqing"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"CaptainKeqing"},"content":"     * Creates the invalid command","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"CaptainKeqing"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"CaptainKeqing"},"content":"     * @param invalidMessage reason for invalidity","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"CaptainKeqing"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"CaptainKeqing"},"content":"    public InvalidCommand(String invalidMessage) {","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"CaptainKeqing"},"content":"        this.statusMsg \u003d invalidMessage;","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"CaptainKeqing"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"CaptainKeqing"},"content":"    public void execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"CaptainKeqing"},"content":"        return; // Do nothing","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"CaptainKeqing"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"CaptainKeqing":23}},{"path":"src/main/java/lindi/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CaptainKeqing"},"content":"package lindi.commands;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.storage.Storage;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.task.TaskList;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"CaptainKeqing"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"CaptainKeqing"},"content":" * Represents a command that lists out tasks in the task list upon execution","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"CaptainKeqing"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"CaptainKeqing"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"CaptainKeqing"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"CaptainKeqing"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"CaptainKeqing"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"CaptainKeqing"},"content":"     * Loads the tasks in task list into status msg to be printed.","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"CaptainKeqing"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"CaptainKeqing"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"CaptainKeqing"},"content":"    public void execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"CaptainKeqing"},"content":"        this.statusMsg \u003d tasks.toString();","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"CaptainKeqing"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"CaptainKeqing":19}},{"path":"src/main/java/lindi/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CaptainKeqing"},"content":"package lindi.commands;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.storage.Storage;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.task.Task;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.task.TaskList;","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"CaptainKeqing"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"CaptainKeqing"},"content":" * Represents a command that marks a task as done upon execution","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"CaptainKeqing"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"CaptainKeqing"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"CaptainKeqing"},"content":"    private final int listIndex;","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"CaptainKeqing"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"CaptainKeqing"},"content":"     * Creates command that marks a task in the task List","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"CaptainKeqing"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"CaptainKeqing"},"content":"     * @param listIndex index of task to mark","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"CaptainKeqing"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"CaptainKeqing"},"content":"    public MarkCommand(int listIndex) {","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"CaptainKeqing"},"content":"        this.listIndex \u003d listIndex;","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"CaptainKeqing"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"CaptainKeqing"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"CaptainKeqing"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"CaptainKeqing"},"content":"     * Marks the task at listIndex in tasks as done.","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"CaptainKeqing"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"CaptainKeqing"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"CaptainKeqing"},"content":"    public void execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"CaptainKeqing"},"content":"        try {","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"CaptainKeqing"},"content":"            Task markedTask \u003d tasks.mark(this.listIndex);","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"CaptainKeqing"},"content":"            this.statusMsg \u003d \"Nice! I\u0027ve marked this task as done:\\n\\t\" + markedTask;","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"CaptainKeqing"},"content":"            storage.saveToFile(tasks);","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"CaptainKeqing"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"CaptainKeqing"},"content":"            this.statusMsg \u003d \"Sorry, I can\u0027t find that task. Please enter a valid index\\n\"","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"CaptainKeqing"},"content":"                    + \"You can see the tasks list by inputting \\\"list\\\"\";","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"CaptainKeqing"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"CaptainKeqing"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"CaptainKeqing":38}},{"path":"src/main/java/lindi/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CaptainKeqing"},"content":"package lindi.commands;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.storage.Storage;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.task.Task;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.task.TaskList;","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"CaptainKeqing"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"CaptainKeqing"},"content":" * Represents a command that marks a task as not done upon execution","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"CaptainKeqing"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"CaptainKeqing"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"CaptainKeqing"},"content":"    private final int listIndex;","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"CaptainKeqing"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"CaptainKeqing"},"content":"     * Creates command that unmarks a task in the task List","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"CaptainKeqing"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"CaptainKeqing"},"content":"     * @param listIndex index of task to unmark","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"CaptainKeqing"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"CaptainKeqing"},"content":"    public UnmarkCommand(int listIndex) {","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"CaptainKeqing"},"content":"        this.listIndex \u003d listIndex;","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"CaptainKeqing"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"CaptainKeqing"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"CaptainKeqing"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"CaptainKeqing"},"content":"     * Marks the task at listIndex in tasks as `not` done.","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"CaptainKeqing"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"CaptainKeqing"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"CaptainKeqing"},"content":"    public void execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"CaptainKeqing"},"content":"        try {","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"CaptainKeqing"},"content":"            Task unmarkedTask \u003d tasks.unmark(this.listIndex);","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"CaptainKeqing"},"content":"            this.statusMsg \u003d \"Nice! I\u0027ve marked this task as not done yet:\\n\\t\" + unmarkedTask;","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"CaptainKeqing"},"content":"            storage.saveToFile(tasks);","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"CaptainKeqing"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"CaptainKeqing"},"content":"            this.statusMsg \u003d \"Sorry, I can\u0027t find that task. Please enter a valid index\\n\"","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"CaptainKeqing"},"content":"                    + \"You can see the tasks list by inputting \\\"list\\\"\";","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"CaptainKeqing"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"CaptainKeqing"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"CaptainKeqing":38}},{"path":"src/main/java/lindi/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CaptainKeqing"},"content":"package lindi.gui;","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"CaptainKeqing"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"CaptainKeqing"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"CaptainKeqing"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"CaptainKeqing"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"CaptainKeqing"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"CaptainKeqing"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"CaptainKeqing"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"CaptainKeqing"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"CaptainKeqing"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"CaptainKeqing"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"CaptainKeqing"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"CaptainKeqing"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"CaptainKeqing"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"CaptainKeqing"},"content":"import javafx.scene.text.TextAlignment;","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"CaptainKeqing"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"CaptainKeqing"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"CaptainKeqing"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"CaptainKeqing"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"CaptainKeqing"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"CaptainKeqing"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"CaptainKeqing"},"content":"    @FXML","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"CaptainKeqing"},"content":"    private Text dialog;","lastModifiedDate":"2024-02-11"},{"lineNumber":27,"author":{"gitId":"CaptainKeqing"},"content":"    @FXML","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"CaptainKeqing"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"CaptainKeqing"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-11"},{"lineNumber":31,"author":{"gitId":"CaptainKeqing"},"content":"        try {","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"CaptainKeqing"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"CaptainKeqing"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-11"},{"lineNumber":34,"author":{"gitId":"CaptainKeqing"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-11"},{"lineNumber":35,"author":{"gitId":"CaptainKeqing"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-11"},{"lineNumber":36,"author":{"gitId":"CaptainKeqing"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-11"},{"lineNumber":37,"author":{"gitId":"CaptainKeqing"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-11"},{"lineNumber":38,"author":{"gitId":"CaptainKeqing"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":39,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"CaptainKeqing"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-11"},{"lineNumber":41,"author":{"gitId":"CaptainKeqing"},"content":"        dialog.setWrappingWidth(this.getPrefWidth() - 100);","lastModifiedDate":"2024-02-11"},{"lineNumber":42,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":43,"author":{"gitId":"CaptainKeqing"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-11"},{"lineNumber":44,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":45,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":46,"author":{"gitId":"CaptainKeqing"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":47,"author":{"gitId":"CaptainKeqing"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-11"},{"lineNumber":48,"author":{"gitId":"CaptainKeqing"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":49,"author":{"gitId":"CaptainKeqing"},"content":"    private void flip() {","lastModifiedDate":"2024-02-11"},{"lineNumber":50,"author":{"gitId":"CaptainKeqing"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-11"},{"lineNumber":51,"author":{"gitId":"CaptainKeqing"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-11"},{"lineNumber":52,"author":{"gitId":"CaptainKeqing"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-11"},{"lineNumber":53,"author":{"gitId":"CaptainKeqing"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-11"},{"lineNumber":54,"author":{"gitId":"CaptainKeqing"},"content":"        dialog.setTextAlignment(TextAlignment.LEFT);","lastModifiedDate":"2024-02-11"},{"lineNumber":55,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":56,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":57,"author":{"gitId":"CaptainKeqing"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-11"},{"lineNumber":58,"author":{"gitId":"CaptainKeqing"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-11"},{"lineNumber":59,"author":{"gitId":"CaptainKeqing"},"content":"        db.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2024-02-11"},{"lineNumber":60,"author":{"gitId":"CaptainKeqing"},"content":"        return db;","lastModifiedDate":"2024-02-11"},{"lineNumber":61,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":62,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":63,"author":{"gitId":"CaptainKeqing"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-02-11"},{"lineNumber":64,"author":{"gitId":"CaptainKeqing"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-11"},{"lineNumber":65,"author":{"gitId":"CaptainKeqing"},"content":"        db.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-11"},{"lineNumber":66,"author":{"gitId":"CaptainKeqing"},"content":"        db.flip();","lastModifiedDate":"2024-02-11"},{"lineNumber":67,"author":{"gitId":"CaptainKeqing"},"content":"        return db;","lastModifiedDate":"2024-02-11"},{"lineNumber":68,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":69,"author":{"gitId":"CaptainKeqing"},"content":"}","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"CaptainKeqing":69}},{"path":"src/main/java/lindi/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CaptainKeqing"},"content":"package lindi.gui;","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"CaptainKeqing"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"CaptainKeqing"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"CaptainKeqing"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"CaptainKeqing"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"CaptainKeqing"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"CaptainKeqing"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.Lindi;","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"CaptainKeqing"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"CaptainKeqing"},"content":" * A GUI for Lindi using FXML.","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"CaptainKeqing"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"CaptainKeqing"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"CaptainKeqing"},"content":"    private Lindi lindi \u003d new Lindi();","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"CaptainKeqing"},"content":"    @Override","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"CaptainKeqing"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"CaptainKeqing"},"content":"        try {","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"CaptainKeqing"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"CaptainKeqing"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"CaptainKeqing"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"CaptainKeqing"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"CaptainKeqing"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setLindi(lindi);","lastModifiedDate":"2024-02-11"},{"lineNumber":27,"author":{"gitId":"CaptainKeqing"},"content":"            stage.show();","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"CaptainKeqing"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"CaptainKeqing"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"CaptainKeqing"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":31,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"CaptainKeqing"},"content":"}","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"CaptainKeqing":32}},{"path":"src/main/java/lindi/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CaptainKeqing"},"content":"package lindi.gui;","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"CaptainKeqing"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"CaptainKeqing"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"CaptainKeqing"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"CaptainKeqing"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"CaptainKeqing"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"CaptainKeqing"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"CaptainKeqing"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.Lindi;","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"CaptainKeqing"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"CaptainKeqing"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"CaptainKeqing"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"CaptainKeqing"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"CaptainKeqing"},"content":"    @FXML","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"CaptainKeqing"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"CaptainKeqing"},"content":"    @FXML","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"CaptainKeqing"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"CaptainKeqing"},"content":"    @FXML","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"CaptainKeqing"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"CaptainKeqing"},"content":"    @FXML","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"CaptainKeqing"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"CaptainKeqing"},"content":"    private Lindi lindi;","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":27,"author":{"gitId":"CaptainKeqing"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"CaptainKeqing"},"content":"    private Image lindiImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaLindi.png\"));","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"CaptainKeqing"},"content":"    @FXML","lastModifiedDate":"2024-02-11"},{"lineNumber":31,"author":{"gitId":"CaptainKeqing"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"CaptainKeqing"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":34,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":35,"author":{"gitId":"CaptainKeqing"},"content":"    public void setLindi(Lindi l) {","lastModifiedDate":"2024-02-11"},{"lineNumber":36,"author":{"gitId":"CaptainKeqing"},"content":"        lindi \u003d l;","lastModifiedDate":"2024-02-11"},{"lineNumber":37,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":38,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":39,"author":{"gitId":"CaptainKeqing"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"CaptainKeqing"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-11"},{"lineNumber":41,"author":{"gitId":"CaptainKeqing"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-11"},{"lineNumber":42,"author":{"gitId":"CaptainKeqing"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":43,"author":{"gitId":"CaptainKeqing"},"content":"    @FXML","lastModifiedDate":"2024-02-11"},{"lineNumber":44,"author":{"gitId":"CaptainKeqing"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-11"},{"lineNumber":45,"author":{"gitId":"CaptainKeqing"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-11"},{"lineNumber":46,"author":{"gitId":"CaptainKeqing"},"content":"        String response \u003d lindi.getResponse(input);","lastModifiedDate":"2024-02-11"},{"lineNumber":47,"author":{"gitId":"CaptainKeqing"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-11"},{"lineNumber":48,"author":{"gitId":"CaptainKeqing"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-11"},{"lineNumber":49,"author":{"gitId":"CaptainKeqing"},"content":"                DialogBox.getDukeDialog(response, lindiImage)","lastModifiedDate":"2024-02-11"},{"lineNumber":50,"author":{"gitId":"CaptainKeqing"},"content":"        );","lastModifiedDate":"2024-02-11"},{"lineNumber":51,"author":{"gitId":"CaptainKeqing"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-11"},{"lineNumber":52,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":53,"author":{"gitId":"CaptainKeqing"},"content":"}","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"CaptainKeqing":53}},{"path":"src/main/java/lindi/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CaptainKeqing"},"content":"package lindi.parser;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.commands.Command;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.commands.CreateTaskCommand;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.commands.DeleteCommand;","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.commands.ExitCommand;","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.commands.FindCommand;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.commands.InvalidCommand;","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.commands.ListCommand;","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.commands.MarkCommand;","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.commands.UnmarkCommand;","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"CaptainKeqing"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"CaptainKeqing"},"content":" * Deals with making sense (parsing) of the user command.","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"CaptainKeqing"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"CaptainKeqing"},"content":"public class Parser {","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"CaptainKeqing"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"CaptainKeqing"},"content":"     * Parses the user input and returns the corresponding Command","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"CaptainKeqing"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"CaptainKeqing"},"content":"     * @param userInput the user input command string","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"CaptainKeqing"},"content":"     * @return the Command corresponding to the input string.","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"CaptainKeqing"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"CaptainKeqing"},"content":"    public static Command parse(String userInput) {","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"CaptainKeqing"},"content":"        // if command called, will be index 0, rest of string (args) in index 1","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"CaptainKeqing"},"content":"        String[] userInputTokens \u003d userInput.split(\" \", 2);","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"CaptainKeqing"},"content":"        String commandWord \u003d userInputTokens[0];","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"CaptainKeqing"},"content":"        String args \u003d userInputTokens.length \u003d\u003d 2 ? userInputTokens[1] : null;","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"CaptainKeqing"},"content":"        switch (commandWord) {","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"CaptainKeqing"},"content":"        case \"list\":","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"CaptainKeqing"},"content":"            return new ListCommand();","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"CaptainKeqing"},"content":"        case \"find\":","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"CaptainKeqing"},"content":"            return prepareFind(args);","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"CaptainKeqing"},"content":"        case \"unmark\":","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"CaptainKeqing"},"content":"            return prepareUnmark(args);","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"CaptainKeqing"},"content":"        case \"mark\":","lastModifiedDate":"2024-02-06"},{"lineNumber":40,"author":{"gitId":"CaptainKeqing"},"content":"            return prepareMark(args);","lastModifiedDate":"2024-02-06"},{"lineNumber":41,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":42,"author":{"gitId":"CaptainKeqing"},"content":"        case \"delete\":","lastModifiedDate":"2024-02-06"},{"lineNumber":43,"author":{"gitId":"CaptainKeqing"},"content":"            return prepareDelete(args);","lastModifiedDate":"2024-02-06"},{"lineNumber":44,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":45,"author":{"gitId":"CaptainKeqing"},"content":"        case \"todo\":","lastModifiedDate":"2024-02-06"},{"lineNumber":46,"author":{"gitId":"CaptainKeqing"},"content":"            // Fallthrough","lastModifiedDate":"2024-02-06"},{"lineNumber":47,"author":{"gitId":"CaptainKeqing"},"content":"        case \"event\":","lastModifiedDate":"2024-02-06"},{"lineNumber":48,"author":{"gitId":"CaptainKeqing"},"content":"            // Fallthrough","lastModifiedDate":"2024-02-06"},{"lineNumber":49,"author":{"gitId":"CaptainKeqing"},"content":"        case \"deadline\":","lastModifiedDate":"2024-02-06"},{"lineNumber":50,"author":{"gitId":"CaptainKeqing"},"content":"            return new CreateTaskCommand(userInput);","lastModifiedDate":"2024-02-06"},{"lineNumber":51,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":52,"author":{"gitId":"CaptainKeqing"},"content":"        case \"bye\":","lastModifiedDate":"2024-02-06"},{"lineNumber":53,"author":{"gitId":"CaptainKeqing"},"content":"            return new ExitCommand();","lastModifiedDate":"2024-02-06"},{"lineNumber":54,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":55,"author":{"gitId":"CaptainKeqing"},"content":"        default:","lastModifiedDate":"2024-02-06"},{"lineNumber":56,"author":{"gitId":"CaptainKeqing"},"content":"            return new InvalidCommand(\"Uhh, English please? Haha, just kidding...\\n\"","lastModifiedDate":"2024-02-06"},{"lineNumber":57,"author":{"gitId":"CaptainKeqing"},"content":"                    + \"but for reals I didn\u0027t really understand that :(\");","lastModifiedDate":"2024-02-06"},{"lineNumber":58,"author":{"gitId":"CaptainKeqing"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":59,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":60,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":61,"author":{"gitId":"CaptainKeqing"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":62,"author":{"gitId":"CaptainKeqing"},"content":"     * Returns the index from the args","lastModifiedDate":"2024-02-10"},{"lineNumber":63,"author":{"gitId":"CaptainKeqing"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":64,"author":{"gitId":"CaptainKeqing"},"content":"     * @param args arguments from user input","lastModifiedDate":"2024-02-10"},{"lineNumber":65,"author":{"gitId":"CaptainKeqing"},"content":"     * @return index from args","lastModifiedDate":"2024-02-10"},{"lineNumber":66,"author":{"gitId":"CaptainKeqing"},"content":"     * @throws NumberFormatException if args is not a number","lastModifiedDate":"2024-02-10"},{"lineNumber":67,"author":{"gitId":"CaptainKeqing"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":68,"author":{"gitId":"CaptainKeqing"},"content":"    private static int getIndexFromArgs(String args) throws NumberFormatException {","lastModifiedDate":"2024-02-06"},{"lineNumber":69,"author":{"gitId":"CaptainKeqing"},"content":"        return Integer.parseInt(args);","lastModifiedDate":"2024-02-06"},{"lineNumber":70,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":71,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":72,"author":{"gitId":"CaptainKeqing"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":73,"author":{"gitId":"CaptainKeqing"},"content":"     * Returns an FindCommand if args are valid, else InvalidCommand","lastModifiedDate":"2024-02-07"},{"lineNumber":74,"author":{"gitId":"CaptainKeqing"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":75,"author":{"gitId":"CaptainKeqing"},"content":"     * @param args arguments from user input","lastModifiedDate":"2024-02-07"},{"lineNumber":76,"author":{"gitId":"CaptainKeqing"},"content":"     * @return FindCommand if args are valid. \u003cp\u003eInvalidCommand if args is null","lastModifiedDate":"2024-02-07"},{"lineNumber":77,"author":{"gitId":"CaptainKeqing"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":78,"author":{"gitId":"CaptainKeqing"},"content":"    private static Command prepareFind(String args) {","lastModifiedDate":"2024-02-07"},{"lineNumber":79,"author":{"gitId":"CaptainKeqing"},"content":"        if (args \u003d\u003d null) {","lastModifiedDate":"2024-02-07"},{"lineNumber":80,"author":{"gitId":"CaptainKeqing"},"content":"            return new InvalidCommand(\"Please give me something to search for :)\");","lastModifiedDate":"2024-02-07"},{"lineNumber":81,"author":{"gitId":"CaptainKeqing"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":82,"author":{"gitId":"CaptainKeqing"},"content":"        return new FindCommand(args);","lastModifiedDate":"2024-02-07"},{"lineNumber":83,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":84,"author":{"gitId":"CaptainKeqing"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":85,"author":{"gitId":"CaptainKeqing"},"content":"     * Returns an UnmarkCommand if args are valid, else InvalidCommand","lastModifiedDate":"2024-02-07"},{"lineNumber":86,"author":{"gitId":"CaptainKeqing"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":87,"author":{"gitId":"CaptainKeqing"},"content":"     * @param args arguments from user input","lastModifiedDate":"2024-02-07"},{"lineNumber":88,"author":{"gitId":"CaptainKeqing"},"content":"     * @return UnmarkCommand if args are valid. \u003cp\u003eInvalidCommand if args is null or non-integer","lastModifiedDate":"2024-02-07"},{"lineNumber":89,"author":{"gitId":"CaptainKeqing"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":90,"author":{"gitId":"CaptainKeqing"},"content":"    private static Command prepareUnmark(String args) {","lastModifiedDate":"2024-02-06"},{"lineNumber":91,"author":{"gitId":"CaptainKeqing"},"content":"        if (args \u003d\u003d null) {","lastModifiedDate":"2024-02-06"},{"lineNumber":92,"author":{"gitId":"CaptainKeqing"},"content":"            return new InvalidCommand(\"Uh oh ! You have to give me the index \"","lastModifiedDate":"2024-02-06"},{"lineNumber":93,"author":{"gitId":"CaptainKeqing"},"content":"                    + \"of the task you want to modify :)\");","lastModifiedDate":"2024-02-07"},{"lineNumber":94,"author":{"gitId":"CaptainKeqing"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":95,"author":{"gitId":"CaptainKeqing"},"content":"        try {","lastModifiedDate":"2024-02-06"},{"lineNumber":96,"author":{"gitId":"CaptainKeqing"},"content":"            int listIndex \u003d getIndexFromArgs(args);","lastModifiedDate":"2024-02-06"},{"lineNumber":97,"author":{"gitId":"CaptainKeqing"},"content":"            return new UnmarkCommand(listIndex);","lastModifiedDate":"2024-02-06"},{"lineNumber":98,"author":{"gitId":"CaptainKeqing"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-06"},{"lineNumber":99,"author":{"gitId":"CaptainKeqing"},"content":"            return new InvalidCommand(\"I\u0027m pretty sure I gave you the indexes in base 10...\\n\"","lastModifiedDate":"2024-02-06"},{"lineNumber":100,"author":{"gitId":"CaptainKeqing"},"content":"                    + \"there shouldn\u0027t be any characters!! :(\");","lastModifiedDate":"2024-02-06"},{"lineNumber":101,"author":{"gitId":"CaptainKeqing"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":102,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":103,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":104,"author":{"gitId":"CaptainKeqing"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":105,"author":{"gitId":"CaptainKeqing"},"content":"     * Returns an MarkCommand if args are valid, else InvalidCommand","lastModifiedDate":"2024-02-07"},{"lineNumber":106,"author":{"gitId":"CaptainKeqing"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":107,"author":{"gitId":"CaptainKeqing"},"content":"     * @param args arguments from user input","lastModifiedDate":"2024-02-07"},{"lineNumber":108,"author":{"gitId":"CaptainKeqing"},"content":"     * @return MarkCommand if args are valid. \u003cp\u003eInvalidCommand if args is null or non-integer","lastModifiedDate":"2024-02-07"},{"lineNumber":109,"author":{"gitId":"CaptainKeqing"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":110,"author":{"gitId":"CaptainKeqing"},"content":"    private static Command prepareMark(String args) {","lastModifiedDate":"2024-02-06"},{"lineNumber":111,"author":{"gitId":"CaptainKeqing"},"content":"        if (args \u003d\u003d null) {","lastModifiedDate":"2024-02-06"},{"lineNumber":112,"author":{"gitId":"CaptainKeqing"},"content":"            return new InvalidCommand(\"Uh oh ! You have to give me the index \"","lastModifiedDate":"2024-02-06"},{"lineNumber":113,"author":{"gitId":"CaptainKeqing"},"content":"                    + \"of the task you want to modify :)\");","lastModifiedDate":"2024-02-07"},{"lineNumber":114,"author":{"gitId":"CaptainKeqing"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":115,"author":{"gitId":"CaptainKeqing"},"content":"        try {","lastModifiedDate":"2024-02-06"},{"lineNumber":116,"author":{"gitId":"CaptainKeqing"},"content":"            int listIndex \u003d getIndexFromArgs(args);","lastModifiedDate":"2024-02-06"},{"lineNumber":117,"author":{"gitId":"CaptainKeqing"},"content":"            return new MarkCommand(listIndex);","lastModifiedDate":"2024-02-06"},{"lineNumber":118,"author":{"gitId":"CaptainKeqing"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-06"},{"lineNumber":119,"author":{"gitId":"CaptainKeqing"},"content":"            return new InvalidCommand(\"I\u0027m pretty sure I gave you the indexes in base 10...\\n\"","lastModifiedDate":"2024-02-06"},{"lineNumber":120,"author":{"gitId":"CaptainKeqing"},"content":"                    + \"there shouldn\u0027t be any characters!! :(\");","lastModifiedDate":"2024-02-06"},{"lineNumber":121,"author":{"gitId":"CaptainKeqing"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":122,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":123,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":124,"author":{"gitId":"CaptainKeqing"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":125,"author":{"gitId":"CaptainKeqing"},"content":"     * Returns an DeleteCommand if args are valid, else InvalidCommand","lastModifiedDate":"2024-02-07"},{"lineNumber":126,"author":{"gitId":"CaptainKeqing"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":127,"author":{"gitId":"CaptainKeqing"},"content":"     * @param args arguments from user input","lastModifiedDate":"2024-02-07"},{"lineNumber":128,"author":{"gitId":"CaptainKeqing"},"content":"     * @return DeleteCommand if args are valid. \u003cp\u003eInvalidCommand if args is null or non-integer","lastModifiedDate":"2024-02-07"},{"lineNumber":129,"author":{"gitId":"CaptainKeqing"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":130,"author":{"gitId":"CaptainKeqing"},"content":"    private static Command prepareDelete(String args) {","lastModifiedDate":"2024-02-06"},{"lineNumber":131,"author":{"gitId":"CaptainKeqing"},"content":"        if (args \u003d\u003d null) {","lastModifiedDate":"2024-02-06"},{"lineNumber":132,"author":{"gitId":"CaptainKeqing"},"content":"            return new InvalidCommand(\"Uh oh ! You have to give me the index \"","lastModifiedDate":"2024-02-06"},{"lineNumber":133,"author":{"gitId":"CaptainKeqing"},"content":"                    + \"of the task you want to modify :)\");","lastModifiedDate":"2024-02-07"},{"lineNumber":134,"author":{"gitId":"CaptainKeqing"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":135,"author":{"gitId":"CaptainKeqing"},"content":"        try {","lastModifiedDate":"2024-02-06"},{"lineNumber":136,"author":{"gitId":"CaptainKeqing"},"content":"            int listIndex \u003d getIndexFromArgs(args);","lastModifiedDate":"2024-02-06"},{"lineNumber":137,"author":{"gitId":"CaptainKeqing"},"content":"            return new DeleteCommand(listIndex);","lastModifiedDate":"2024-02-06"},{"lineNumber":138,"author":{"gitId":"CaptainKeqing"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-06"},{"lineNumber":139,"author":{"gitId":"CaptainKeqing"},"content":"            return new InvalidCommand(\"I\u0027m pretty sure I gave you the indexes in base 10...\\n\"","lastModifiedDate":"2024-02-06"},{"lineNumber":140,"author":{"gitId":"CaptainKeqing"},"content":"                    + \"there shouldn\u0027t be any characters!! :(\");","lastModifiedDate":"2024-02-06"},{"lineNumber":141,"author":{"gitId":"CaptainKeqing"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":142,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":143,"author":{"gitId":"CaptainKeqing"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"CaptainKeqing":143}},{"path":"src/main/java/lindi/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CaptainKeqing"},"content":"package lindi.storage;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"CaptainKeqing"},"content":"import java.io.File;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"CaptainKeqing"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"CaptainKeqing"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"CaptainKeqing"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"CaptainKeqing"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.task.CreateTaskException;","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.task.Task;","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.task.TaskList;","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"CaptainKeqing"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"CaptainKeqing"},"content":" * Represents the storage unit for the application.","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"CaptainKeqing"},"content":" * Deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"CaptainKeqing"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"CaptainKeqing"},"content":"public class Storage {","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"CaptainKeqing"},"content":"    private FileWriter fileWriter;","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"CaptainKeqing"},"content":"    private Scanner fileScanner;","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"CaptainKeqing"},"content":"    private final String dataDir;","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"CaptainKeqing"},"content":"    private final String dataFileName;","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"CaptainKeqing"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"CaptainKeqing"},"content":"     * Initialises Storage to load data from and save data to a file. Creates","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"CaptainKeqing"},"content":"     * the required directories and files if necessary.","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"CaptainKeqing"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"CaptainKeqing"},"content":"     * @param dataDir directory to store the data file","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"CaptainKeqing"},"content":"     * @param dataFileName name of data file (.txt format)","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"CaptainKeqing"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"CaptainKeqing"},"content":"    public Storage(String dataDir, String dataFileName) {","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"CaptainKeqing"},"content":"        this.dataDir \u003d dataDir;","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"CaptainKeqing"},"content":"        this.dataFileName \u003d dataFileName;","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"CaptainKeqing"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"CaptainKeqing"},"content":"     * Saves the task list to the designated text file for storing data for the program.","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"CaptainKeqing"},"content":"     * Creates one if it does not exist yet.","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"CaptainKeqing"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"CaptainKeqing"},"content":"     * @param tasks task list to save to file","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"CaptainKeqing"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":41,"author":{"gitId":"CaptainKeqing"},"content":"    public void saveToFile(TaskList tasks) {","lastModifiedDate":"2024-02-06"},{"lineNumber":42,"author":{"gitId":"CaptainKeqing"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-02-06"},{"lineNumber":43,"author":{"gitId":"CaptainKeqing"},"content":"        // Loops through taskList, appends them to string with the specified format","lastModifiedDate":"2024-02-06"},{"lineNumber":44,"author":{"gitId":"CaptainKeqing"},"content":"        tasks.getTasks().forEachRemaining(","lastModifiedDate":"2024-02-06"},{"lineNumber":45,"author":{"gitId":"CaptainKeqing"},"content":"                task -\u003e {","lastModifiedDate":"2024-02-06"},{"lineNumber":46,"author":{"gitId":"CaptainKeqing"},"content":"                    String parsedTask \u003d task.toParsedFormat();","lastModifiedDate":"2024-02-10"},{"lineNumber":47,"author":{"gitId":"CaptainKeqing"},"content":"                    sb.append(parsedTask).append(\u0027\\n\u0027);","lastModifiedDate":"2024-02-06"},{"lineNumber":48,"author":{"gitId":"CaptainKeqing"},"content":"                }","lastModifiedDate":"2024-02-06"},{"lineNumber":49,"author":{"gitId":"CaptainKeqing"},"content":"        );","lastModifiedDate":"2024-02-06"},{"lineNumber":50,"author":{"gitId":"CaptainKeqing"},"content":"        try {","lastModifiedDate":"2024-02-06"},{"lineNumber":51,"author":{"gitId":"CaptainKeqing"},"content":"            // Creates the directories if they do not exist yet. No effect if it exists.","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"CaptainKeqing"},"content":"            File dir \u003d new File(dataDir);","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"CaptainKeqing"},"content":"            dir.mkdirs();","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"CaptainKeqing"},"content":"            // Creates the file if it does not exist yet. No effect if it exists.","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"CaptainKeqing"},"content":"            File dataFile \u003d new File(dir, dataFileName);","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"CaptainKeqing"},"content":"            dataFile.createNewFile();","lastModifiedDate":"2024-02-05"},{"lineNumber":58,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"CaptainKeqing"},"content":"            this.fileWriter \u003d new FileWriter(dataFile);","lastModifiedDate":"2024-02-05"},{"lineNumber":60,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"CaptainKeqing"},"content":"            this.fileWriter.write(sb.toString());","lastModifiedDate":"2024-02-06"},{"lineNumber":62,"author":{"gitId":"CaptainKeqing"},"content":"            this.fileWriter.close();","lastModifiedDate":"2024-02-05"},{"lineNumber":63,"author":{"gitId":"CaptainKeqing"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":64,"author":{"gitId":"CaptainKeqing"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2024-02-05"},{"lineNumber":65,"author":{"gitId":"CaptainKeqing"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":66,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":67,"author":{"gitId":"CaptainKeqing"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":68,"author":{"gitId":"CaptainKeqing"},"content":"     * Loads the taskList from the data file for this session","lastModifiedDate":"2024-02-05"},{"lineNumber":69,"author":{"gitId":"CaptainKeqing"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":70,"author":{"gitId":"CaptainKeqing"},"content":"     * @throws StorageLoadException if data file not exist at file path","lastModifiedDate":"2024-02-07"},{"lineNumber":71,"author":{"gitId":"CaptainKeqing"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":72,"author":{"gitId":"CaptainKeqing"},"content":"    public TaskList loadFromFile() throws StorageLoadException {","lastModifiedDate":"2024-02-06"},{"lineNumber":73,"author":{"gitId":"CaptainKeqing"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":74,"author":{"gitId":"CaptainKeqing"},"content":"            this.fileScanner \u003d new Scanner(new File(dataDir, dataFileName));","lastModifiedDate":"2024-02-06"},{"lineNumber":75,"author":{"gitId":"CaptainKeqing"},"content":"            TaskList tasksToReturn \u003d new TaskList();","lastModifiedDate":"2024-02-06"},{"lineNumber":76,"author":{"gitId":"CaptainKeqing"},"content":"            // Data file exist in folder, load it into our taskList","lastModifiedDate":"2024-02-05"},{"lineNumber":77,"author":{"gitId":"CaptainKeqing"},"content":"            while (fileScanner.hasNextLine()) {","lastModifiedDate":"2024-02-05"},{"lineNumber":78,"author":{"gitId":"CaptainKeqing"},"content":"                String parsedString \u003d fileScanner.nextLine();","lastModifiedDate":"2024-02-05"},{"lineNumber":79,"author":{"gitId":"CaptainKeqing"},"content":"                Task task \u003d Task.createFromParsedString(parsedString);","lastModifiedDate":"2024-02-05"},{"lineNumber":80,"author":{"gitId":"CaptainKeqing"},"content":"                tasksToReturn.add(task);","lastModifiedDate":"2024-02-06"},{"lineNumber":81,"author":{"gitId":"CaptainKeqing"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":82,"author":{"gitId":"CaptainKeqing"},"content":"            return tasksToReturn;","lastModifiedDate":"2024-02-06"},{"lineNumber":83,"author":{"gitId":"CaptainKeqing"},"content":"        } catch (CreateTaskException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":84,"author":{"gitId":"CaptainKeqing"},"content":"            throw new StorageLoadException(\"Error loading tasks from save file. Might be corrupted...\\n\"","lastModifiedDate":"2024-02-06"},{"lineNumber":85,"author":{"gitId":"CaptainKeqing"},"content":"                    + e.getMessage());","lastModifiedDate":"2024-02-06"},{"lineNumber":86,"author":{"gitId":"CaptainKeqing"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-06"},{"lineNumber":87,"author":{"gitId":"CaptainKeqing"},"content":"            throw new StorageLoadException(\"Error loading tasks from save file. \"","lastModifiedDate":"2024-02-07"},{"lineNumber":88,"author":{"gitId":"CaptainKeqing"},"content":"                    + \"File not found at path specified...\\n\" + new File(dataDir, dataFileName));","lastModifiedDate":"2024-02-07"},{"lineNumber":89,"author":{"gitId":"CaptainKeqing"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":90,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":91,"author":{"gitId":"CaptainKeqing"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"CaptainKeqing":91}},{"path":"src/main/java/lindi/storage/StorageLoadException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CaptainKeqing"},"content":"package lindi.storage;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"CaptainKeqing"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"CaptainKeqing"},"content":" * Represents an Exception related to loading data from file into Storage","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"CaptainKeqing"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"CaptainKeqing"},"content":"public class StorageLoadException extends Exception {","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"CaptainKeqing"},"content":"    public StorageLoadException(String s) {","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"CaptainKeqing"},"content":"        super(s);","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"CaptainKeqing"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"CaptainKeqing":10}},{"path":"src/main/java/lindi/task/CreateDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CaptainKeqing"},"content":"package lindi.task;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"CaptainKeqing"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"CaptainKeqing"},"content":" * Represents an Exception related to creation of Deadline task","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"CaptainKeqing"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"CaptainKeqing"},"content":"public class CreateDeadlineException extends CreateTaskException {","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"CaptainKeqing"},"content":"    public CreateDeadlineException(String s) {","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"CaptainKeqing"},"content":"        super(s);","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"CaptainKeqing"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"CaptainKeqing":10}},{"path":"src/main/java/lindi/task/CreateEventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CaptainKeqing"},"content":"package lindi.task;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"CaptainKeqing"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"CaptainKeqing"},"content":" * Represents an Exception related to creation of Event task","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"CaptainKeqing"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"CaptainKeqing"},"content":"public class CreateEventException extends CreateTaskException {","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"CaptainKeqing"},"content":"    public CreateEventException(String s) {","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"CaptainKeqing"},"content":"        super(s);","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"CaptainKeqing"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"CaptainKeqing":10}},{"path":"src/main/java/lindi/task/CreateTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CaptainKeqing"},"content":"package lindi.task;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"CaptainKeqing"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"CaptainKeqing"},"content":" * Represents an Exception related to creation of a task","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"CaptainKeqing"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"CaptainKeqing"},"content":"public class CreateTaskException extends Exception {","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"CaptainKeqing"},"content":"    public CreateTaskException(String s) {","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"CaptainKeqing"},"content":"        super(s);","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"CaptainKeqing"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"CaptainKeqing":10}},{"path":"src/main/java/lindi/task/CreateToDoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CaptainKeqing"},"content":"package lindi.task;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"CaptainKeqing"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"CaptainKeqing"},"content":" * Represents an Exception related to creation of ToDo task","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"CaptainKeqing"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"CaptainKeqing"},"content":"public class CreateToDoException extends CreateTaskException {","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"CaptainKeqing"},"content":"    public CreateToDoException(String s) {","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"CaptainKeqing"},"content":"        super(s);","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"CaptainKeqing"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"CaptainKeqing":10}},{"path":"src/main/java/lindi/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CaptainKeqing"},"content":"package lindi.task;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"CaptainKeqing"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"CaptainKeqing"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"CaptainKeqing"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"CaptainKeqing"},"content":" * Represents a deadline task","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"CaptainKeqing"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"CaptainKeqing"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"CaptainKeqing"},"content":"    private LocalDateTime by;","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"CaptainKeqing"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"CaptainKeqing"},"content":"     * Initialises the deadline task","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"CaptainKeqing"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"CaptainKeqing"},"content":"     * @param description description of the deadline","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"CaptainKeqing"},"content":"     * @param by datetime of the deadline following \u0027{@value SAVE_LOAD_DT_FORMAT_STRING}\u0027 format","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"CaptainKeqing"},"content":"     * @throws CreateDeadlineException if param by provided is in the wrong format","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"CaptainKeqing"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"CaptainKeqing"},"content":"    public Deadline(String description, String by) throws CreateDeadlineException {","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"CaptainKeqing"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"CaptainKeqing"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"CaptainKeqing"},"content":"            this.by \u003d LocalDateTime.parse(by, Task.SAVE_LOAD_DATETIME_FORMAT);","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"CaptainKeqing"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"CaptainKeqing"},"content":"            throw new CreateDeadlineException(String.format(\"Deadline /by argument in the wrong format. Use \"","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"CaptainKeqing"},"content":"                    + \"format \u0027%s\u0027 instead. Not saving seconds and below :)\", Task.SAVE_LOAD_DATETIME_FORMAT));","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"CaptainKeqing"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"CaptainKeqing"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"CaptainKeqing"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"CaptainKeqing"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.by.format(Task.DISPLAY_DATETIME_FORMAT) + \")\";","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"CaptainKeqing"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"CaptainKeqing"},"content":"    public String toParsedFormat() {","lastModifiedDate":"2024-02-10"},{"lineNumber":36,"author":{"gitId":"CaptainKeqing"},"content":"        return String.format(\"D | %c | %s | %s\",","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"CaptainKeqing"},"content":"                this.isDone ? \u0027y\u0027 : \u0027n\u0027, this.description,","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"CaptainKeqing"},"content":"                        this.by.format(Task.SAVE_LOAD_DATETIME_FORMAT));","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"CaptainKeqing"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"CaptainKeqing":40}},{"path":"src/main/java/lindi/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CaptainKeqing"},"content":"package lindi.task;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"CaptainKeqing"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"CaptainKeqing"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"CaptainKeqing"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"CaptainKeqing"},"content":" * Represents an event task","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"CaptainKeqing"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"CaptainKeqing"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"CaptainKeqing"},"content":"    private LocalDateTime from;","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"CaptainKeqing"},"content":"    private LocalDateTime to;","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"CaptainKeqing"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"CaptainKeqing"},"content":"     * Initialises the event task","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"CaptainKeqing"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"CaptainKeqing"},"content":"     * @param description description of the event","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"CaptainKeqing"},"content":"     * @param from start datetime of event following \u0027{@value SAVE_LOAD_DT_FORMAT_STRING}\u0027 format","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"CaptainKeqing"},"content":"     * @param to end datetime of the dateline following \u0027{@value SAVE_LOAD_DT_FORMAT_STRING}\u0027 format","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"CaptainKeqing"},"content":"     * @throws CreateEventException if param from or to provided is in the wrong format","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"CaptainKeqing"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"CaptainKeqing"},"content":"    public Event(String description, String from, String to) throws CreateEventException {","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"CaptainKeqing"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"CaptainKeqing"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"CaptainKeqing"},"content":"            this.from \u003d LocalDateTime.parse(from, Task.SAVE_LOAD_DATETIME_FORMAT);","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"CaptainKeqing"},"content":"            this.to \u003d LocalDateTime.parse(to, Task.SAVE_LOAD_DATETIME_FORMAT);","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"CaptainKeqing"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"CaptainKeqing"},"content":"            throw new CreateEventException(String.format(\"Event /from or /to argument in the wrong format. Use \"","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"CaptainKeqing"},"content":"                    + \"format \u0027%s\u0027 for each instead. Not saving seconds and below :)\", Task.SAVE_LOAD_DATETIME_FORMAT));","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"CaptainKeqing"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"CaptainKeqing"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"CaptainKeqing"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"CaptainKeqing"},"content":"        return \"[E]\" + super.toString() + String.format(\" (when: %s - %s)\",","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"CaptainKeqing"},"content":"                this.from.format(Task.DISPLAY_DATETIME_FORMAT),","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"CaptainKeqing"},"content":"                        this.to.format(Task.DISPLAY_DATETIME_FORMAT));","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"CaptainKeqing"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"CaptainKeqing"},"content":"    public String toParsedFormat() {","lastModifiedDate":"2024-02-10"},{"lineNumber":42,"author":{"gitId":"CaptainKeqing"},"content":"        return String.format(\"E | %c | %s | %s | %s\",","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"CaptainKeqing"},"content":"                this.isDone ? \u0027y\u0027 : \u0027n\u0027, this.description,","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"CaptainKeqing"},"content":"                        this.from.format(Task.SAVE_LOAD_DATETIME_FORMAT),","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"CaptainKeqing"},"content":"                                this.to.format(Task.SAVE_LOAD_DATETIME_FORMAT));","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"CaptainKeqing"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"CaptainKeqing":47}},{"path":"src/main/java/lindi/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CaptainKeqing"},"content":"package lindi.task;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"CaptainKeqing"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"CaptainKeqing"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"CaptainKeqing"},"content":" * Abstract representation for tasks","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"CaptainKeqing"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"CaptainKeqing"},"content":"public abstract class Task { // Adapted from Course Website","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"CaptainKeqing"},"content":"    protected static final String DISPLAY_DT_FORMAT_STRING \u003d \"MMM dd yyyy HH:mm\";","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"CaptainKeqing"},"content":"    protected static final String SAVE_LOAD_DT_FORMAT_STRING \u003d \"yyyy-MM-dd-HH-mm\";","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"CaptainKeqing"},"content":"    protected static final DateTimeFormatter DISPLAY_DATETIME_FORMAT \u003d","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"CaptainKeqing"},"content":"            DateTimeFormatter.ofPattern(DISPLAY_DT_FORMAT_STRING);","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"CaptainKeqing"},"content":"    protected static final DateTimeFormatter SAVE_LOAD_DATETIME_FORMAT \u003d","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"CaptainKeqing"},"content":"            DateTimeFormatter.ofPattern(SAVE_LOAD_DT_FORMAT_STRING);","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"CaptainKeqing"},"content":"    protected final String description;","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"CaptainKeqing"},"content":"    protected boolean isDone \u003d false;","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"CaptainKeqing"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"CaptainKeqing"},"content":"     * Initialises the task with the given description","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"CaptainKeqing"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"CaptainKeqing"},"content":"     * @param description description of the task","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"CaptainKeqing"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"CaptainKeqing"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"CaptainKeqing"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"CaptainKeqing"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"CaptainKeqing"},"content":"     * Factory method for subclasses of Task.","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"CaptainKeqing"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"CaptainKeqing"},"content":"     * @param fullString full user input string","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"CaptainKeqing"},"content":"     * @return ToDo, Deadline or Event depending on input string","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"CaptainKeqing"},"content":"     * @throws CreateTaskException if arguments to create task are invalid","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"CaptainKeqing"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"CaptainKeqing"},"content":"    public static Task create(String fullString) throws CreateTaskException {","lastModifiedDate":"2024-01-26"},{"lineNumber":36,"author":{"gitId":"CaptainKeqing"},"content":"        // s is either `todo`, `event` or `deadline`","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"CaptainKeqing"},"content":"        String[] sTokens \u003d fullString.split(\" \", 2);","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"CaptainKeqing"},"content":"        if (sTokens.length \u003c 2) {","lastModifiedDate":"2024-01-26"},{"lineNumber":39,"author":{"gitId":"CaptainKeqing"},"content":"            throw new CreateTaskException(\"soo what exactly are you trying to do? :)\");","lastModifiedDate":"2024-01-26"},{"lineNumber":40,"author":{"gitId":"CaptainKeqing"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":41,"author":{"gitId":"CaptainKeqing"},"content":"        String command \u003d sTokens[0];","lastModifiedDate":"2024-01-26"},{"lineNumber":42,"author":{"gitId":"CaptainKeqing"},"content":"        String taskString \u003d sTokens[1];","lastModifiedDate":"2024-01-26"},{"lineNumber":43,"author":{"gitId":"CaptainKeqing"},"content":"        switch (command) {","lastModifiedDate":"2024-01-26"},{"lineNumber":44,"author":{"gitId":"CaptainKeqing"},"content":"        case \"todo\":","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"CaptainKeqing"},"content":"            return new ToDo(taskString);","lastModifiedDate":"2024-01-26"},{"lineNumber":46,"author":{"gitId":"CaptainKeqing"},"content":"        case \"deadline\":","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"CaptainKeqing"},"content":"            // Further split the remaining string based on /by","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"CaptainKeqing"},"content":"            if (!taskString.contains(\"/by\")) {","lastModifiedDate":"2024-01-26"},{"lineNumber":49,"author":{"gitId":"CaptainKeqing"},"content":"                throw new CreateDeadlineException(","lastModifiedDate":"2024-01-26"},{"lineNumber":50,"author":{"gitId":"CaptainKeqing"},"content":"                        \"You can\u0027t expect me to track a deadline if you don\u0027t give me the.. deadline right? haha\\n\"","lastModifiedDate":"2024-02-06"},{"lineNumber":51,"author":{"gitId":"CaptainKeqing"},"content":"                                + \"please include \u0027/by\u0027 followed by the deadline :)\");","lastModifiedDate":"2024-02-06"},{"lineNumber":52,"author":{"gitId":"CaptainKeqing"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":53,"author":{"gitId":"CaptainKeqing"},"content":"            String[] descriptionNBy \u003d taskString.split(\"/by\");","lastModifiedDate":"2024-01-26"},{"lineNumber":54,"author":{"gitId":"CaptainKeqing"},"content":"            if (descriptionNBy.length \u003e 2) {","lastModifiedDate":"2024-01-26"},{"lineNumber":55,"author":{"gitId":"CaptainKeqing"},"content":"                throw new CreateDeadlineException(\"Don\u0027t procrastinate with multiple deadlines !! :)\");","lastModifiedDate":"2024-01-26"},{"lineNumber":56,"author":{"gitId":"CaptainKeqing"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":57,"author":{"gitId":"CaptainKeqing"},"content":"            return new Deadline(descriptionNBy[0].trim(),","lastModifiedDate":"2024-01-25"},{"lineNumber":58,"author":{"gitId":"CaptainKeqing"},"content":"                                descriptionNBy[1].trim());","lastModifiedDate":"2024-01-25"},{"lineNumber":59,"author":{"gitId":"CaptainKeqing"},"content":"        case \"event\":","lastModifiedDate":"2024-01-25"},{"lineNumber":60,"author":{"gitId":"CaptainKeqing"},"content":"            // Further split the remaining string based on /from and /to","lastModifiedDate":"2024-01-25"},{"lineNumber":61,"author":{"gitId":"CaptainKeqing"},"content":"            if (!taskString.contains(\"/from\") || !taskString.contains(\"/to\")) {","lastModifiedDate":"2024-01-26"},{"lineNumber":62,"author":{"gitId":"CaptainKeqing"},"content":"                throw new CreateEventException(","lastModifiedDate":"2024-01-26"},{"lineNumber":63,"author":{"gitId":"CaptainKeqing"},"content":"                        \"I\u0027m not sure how you\u0027re going for an event without a start time or end time\\n\"","lastModifiedDate":"2024-02-06"},{"lineNumber":64,"author":{"gitId":"CaptainKeqing"},"content":"                                + \"please include \u0027/from\u0027 and \u0027/to\u0027 so I can keep track for you :)\");","lastModifiedDate":"2024-02-06"},{"lineNumber":65,"author":{"gitId":"CaptainKeqing"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":66,"author":{"gitId":"CaptainKeqing"},"content":"            if (taskString.indexOf(\"/from\") \u003e taskString.indexOf(\"/to\")) {","lastModifiedDate":"2024-01-26"},{"lineNumber":67,"author":{"gitId":"CaptainKeqing"},"content":"                throw new CreateEventException(\"Sorry! /from must appear before /to :)\");","lastModifiedDate":"2024-01-26"},{"lineNumber":68,"author":{"gitId":"CaptainKeqing"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":69,"author":{"gitId":"CaptainKeqing"},"content":"            String[] descriptionNFromNTo \u003d taskString.split(\"/from |/to \");","lastModifiedDate":"2024-01-26"},{"lineNumber":70,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":71,"author":{"gitId":"CaptainKeqing"},"content":"            if (descriptionNFromNTo.length \u003e 3) {","lastModifiedDate":"2024-01-26"},{"lineNumber":72,"author":{"gitId":"CaptainKeqing"},"content":"                throw new CreateEventException(\"um.. I\u0027m not sure how I can track for you an event that has\\n\"","lastModifiedDate":"2024-02-06"},{"lineNumber":73,"author":{"gitId":"CaptainKeqing"},"content":"                        + \"more than 1 start or end time! :)\");","lastModifiedDate":"2024-02-06"},{"lineNumber":74,"author":{"gitId":"CaptainKeqing"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":75,"author":{"gitId":"CaptainKeqing"},"content":"            return new Event(descriptionNFromNTo[0].trim(),","lastModifiedDate":"2024-01-25"},{"lineNumber":76,"author":{"gitId":"CaptainKeqing"},"content":"                             descriptionNFromNTo[1].trim(),","lastModifiedDate":"2024-01-25"},{"lineNumber":77,"author":{"gitId":"CaptainKeqing"},"content":"                             descriptionNFromNTo[2].trim());","lastModifiedDate":"2024-01-25"},{"lineNumber":78,"author":{"gitId":"CaptainKeqing"},"content":"        default:","lastModifiedDate":"2024-02-06"},{"lineNumber":79,"author":{"gitId":"CaptainKeqing"},"content":"            return null;","lastModifiedDate":"2024-02-06"},{"lineNumber":80,"author":{"gitId":"CaptainKeqing"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":81,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":82,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":83,"author":{"gitId":"CaptainKeqing"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":84,"author":{"gitId":"CaptainKeqing"},"content":"     * Returns a new task created from the parsedString taken from the saved data file.","lastModifiedDate":"2024-02-10"},{"lineNumber":85,"author":{"gitId":"CaptainKeqing"},"content":"     * \u003cp\u003e\u003c/p\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":86,"author":{"gitId":"CaptainKeqing"},"content":"     * The parsedString is expected to be in the format:","lastModifiedDate":"2024-02-10"},{"lineNumber":87,"author":{"gitId":"CaptainKeqing"},"content":"     * \u003cp\u003e\u003c/p\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":88,"author":{"gitId":"CaptainKeqing"},"content":"     * * ToDo-\u003e T | y or n | description \u003cp\u003e\u003c/p\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":89,"author":{"gitId":"CaptainKeqing"},"content":"     * * Deadline-\u003e D | y or n | description | by \u003cp\u003e\u003c/p\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":90,"author":{"gitId":"CaptainKeqing"},"content":"     * * Event-\u003e E | y or n | description | from | to \u003cp\u003e\u003c/p\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":91,"author":{"gitId":"CaptainKeqing"},"content":"     * @param parsedString string from data file","lastModifiedDate":"2024-02-04"},{"lineNumber":92,"author":{"gitId":"CaptainKeqing"},"content":"     * @return a subclass of Task (ToDo, Event, Deadline)","lastModifiedDate":"2024-02-10"},{"lineNumber":93,"author":{"gitId":"CaptainKeqing"},"content":"     * @throws CreateTaskException if save file corrupted or edited such that format is not what is expected","lastModifiedDate":"2024-02-04"},{"lineNumber":94,"author":{"gitId":"CaptainKeqing"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":95,"author":{"gitId":"CaptainKeqing"},"content":"    public static Task createFromParsedString(String parsedString) throws CreateTaskException {","lastModifiedDate":"2024-02-04"},{"lineNumber":96,"author":{"gitId":"CaptainKeqing"},"content":"        // Get trimmed tokens","lastModifiedDate":"2024-02-04"},{"lineNumber":97,"author":{"gitId":"CaptainKeqing"},"content":"        String[] parsedTokens \u003d parsedString.split(\"\\\\|\");","lastModifiedDate":"2024-02-04"},{"lineNumber":98,"author":{"gitId":"CaptainKeqing"},"content":"        for (int i \u003d 0; i \u003c parsedTokens.length; i++) {","lastModifiedDate":"2024-02-04"},{"lineNumber":99,"author":{"gitId":"CaptainKeqing"},"content":"            parsedTokens[i] \u003d parsedTokens[i].trim();","lastModifiedDate":"2024-02-04"},{"lineNumber":100,"author":{"gitId":"CaptainKeqing"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":101,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":102,"author":{"gitId":"CaptainKeqing"},"content":"        // The check below considers todos having minimum of 3 tokens, and events having maximum of 5 tokens.","lastModifiedDate":"2024-02-04"},{"lineNumber":103,"author":{"gitId":"CaptainKeqing"},"content":"        if (parsedTokens.length \u003c 3 || parsedTokens.length \u003e 5) {","lastModifiedDate":"2024-02-04"},{"lineNumber":104,"author":{"gitId":"CaptainKeqing"},"content":"            throw new CreateTaskException(\"Token count not valid. File corrupted.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":105,"author":{"gitId":"CaptainKeqing"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":106,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":107,"author":{"gitId":"CaptainKeqing"},"content":"        boolean isTaskDone \u003d parsedTokens[1].equals(\"y\");","lastModifiedDate":"2024-02-10"},{"lineNumber":108,"author":{"gitId":"CaptainKeqing"},"content":"        String taskDescription \u003d parsedTokens[2];","lastModifiedDate":"2024-02-04"},{"lineNumber":109,"author":{"gitId":"CaptainKeqing"},"content":"        String taskType \u003d parsedTokens[0].equals(\"T\") ? \"todo\"","lastModifiedDate":"2024-02-04"},{"lineNumber":110,"author":{"gitId":"CaptainKeqing"},"content":"                : parsedTokens[0].equals(\"D\") ? \"deadline\"","lastModifiedDate":"2024-02-04"},{"lineNumber":111,"author":{"gitId":"CaptainKeqing"},"content":"                : parsedTokens[0].equals(\"E\") ? \"event\"","lastModifiedDate":"2024-02-04"},{"lineNumber":112,"author":{"gitId":"CaptainKeqing"},"content":"                : \"unknown\";","lastModifiedDate":"2024-02-04"},{"lineNumber":113,"author":{"gitId":"CaptainKeqing"},"content":"        if (taskType.equals(\"unknown\")) {","lastModifiedDate":"2024-02-04"},{"lineNumber":114,"author":{"gitId":"CaptainKeqing"},"content":"            throw new CreateTaskException(\"taskType invalid. File corrupted.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":115,"author":{"gitId":"CaptainKeqing"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":116,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":117,"author":{"gitId":"CaptainKeqing"},"content":"        String commandString \u003d String.format(\"%s %s\", taskType, taskDescription);","lastModifiedDate":"2024-02-04"},{"lineNumber":118,"author":{"gitId":"CaptainKeqing"},"content":"        Task newTask;","lastModifiedDate":"2024-02-04"},{"lineNumber":119,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":120,"author":{"gitId":"CaptainKeqing"},"content":"        // Create the new lindi.task using the user input string constructor","lastModifiedDate":"2024-02-06"},{"lineNumber":121,"author":{"gitId":"CaptainKeqing"},"content":"        if (taskType.equals(\"todo\") \u0026\u0026 parsedTokens.length \u003d\u003d 3) {","lastModifiedDate":"2024-02-04"},{"lineNumber":122,"author":{"gitId":"CaptainKeqing"},"content":"            newTask \u003d Task.create(commandString);","lastModifiedDate":"2024-02-04"},{"lineNumber":123,"author":{"gitId":"CaptainKeqing"},"content":"        } else if (taskType.equals(\"deadline\") \u0026\u0026 parsedTokens.length \u003d\u003d 4) {","lastModifiedDate":"2024-02-04"},{"lineNumber":124,"author":{"gitId":"CaptainKeqing"},"content":"            newTask \u003d Task.create(commandString + String.format(\"/by %s\", parsedTokens[3]));","lastModifiedDate":"2024-02-04"},{"lineNumber":125,"author":{"gitId":"CaptainKeqing"},"content":"        } else if (taskType.equals(\"event\") \u0026\u0026 parsedTokens.length \u003d\u003d 5) {","lastModifiedDate":"2024-02-04"},{"lineNumber":126,"author":{"gitId":"CaptainKeqing"},"content":"            newTask \u003d Task.create(commandString + String.format(\"/from %s /to %s\", parsedTokens[3], parsedTokens[4]));","lastModifiedDate":"2024-02-04"},{"lineNumber":127,"author":{"gitId":"CaptainKeqing"},"content":"        } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":128,"author":{"gitId":"CaptainKeqing"},"content":"            throw new CreateTaskException(\"Task type and token count not matched. File corrupted.\");","lastModifiedDate":"2024-02-10"},{"lineNumber":129,"author":{"gitId":"CaptainKeqing"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":130,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":131,"author":{"gitId":"CaptainKeqing"},"content":"        // Finally mark if lindi.task is done or not","lastModifiedDate":"2024-02-06"},{"lineNumber":132,"author":{"gitId":"CaptainKeqing"},"content":"        if (isTaskDone) {","lastModifiedDate":"2024-02-10"},{"lineNumber":133,"author":{"gitId":"CaptainKeqing"},"content":"            assert newTask !\u003d null;","lastModifiedDate":"2024-02-04"},{"lineNumber":134,"author":{"gitId":"CaptainKeqing"},"content":"            newTask.markDone();","lastModifiedDate":"2024-02-04"},{"lineNumber":135,"author":{"gitId":"CaptainKeqing"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":136,"author":{"gitId":"CaptainKeqing"},"content":"        return newTask;","lastModifiedDate":"2024-02-04"},{"lineNumber":137,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":138,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":139,"author":{"gitId":"CaptainKeqing"},"content":"    public void markDone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":140,"author":{"gitId":"CaptainKeqing"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-25"},{"lineNumber":141,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":142,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":143,"author":{"gitId":"CaptainKeqing"},"content":"    public void unmarkDone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":144,"author":{"gitId":"CaptainKeqing"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":145,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":146,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":147,"author":{"gitId":"CaptainKeqing"},"content":"    public String getDescription() {","lastModifiedDate":"2024-02-07"},{"lineNumber":148,"author":{"gitId":"CaptainKeqing"},"content":"        return this.description;","lastModifiedDate":"2024-02-07"},{"lineNumber":149,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":150,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":151,"author":{"gitId":"CaptainKeqing"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":152,"author":{"gitId":"CaptainKeqing"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":153,"author":{"gitId":"CaptainKeqing"},"content":"        return String.format(\"[%s] %s\",","lastModifiedDate":"2024-01-25"},{"lineNumber":154,"author":{"gitId":"CaptainKeqing"},"content":"                isDone ? \"X\" : \" \", this.description);","lastModifiedDate":"2024-02-07"},{"lineNumber":155,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":156,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":157,"author":{"gitId":"CaptainKeqing"},"content":"    public abstract String toParsedFormat();","lastModifiedDate":"2024-02-10"},{"lineNumber":158,"author":{"gitId":"CaptainKeqing"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"CaptainKeqing":158}},{"path":"src/main/java/lindi/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CaptainKeqing"},"content":"package lindi.task;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"CaptainKeqing"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"CaptainKeqing"},"content":"import java.util.Iterator;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"CaptainKeqing"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"CaptainKeqing"},"content":" * Represents the taskList to be used in the application.","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"CaptainKeqing"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"CaptainKeqing"},"content":"public class TaskList {","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"CaptainKeqing"},"content":"    private final ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"CaptainKeqing"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"CaptainKeqing"},"content":"     * Returns the number of tasks in the lindi.task list.","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"CaptainKeqing"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"CaptainKeqing"},"content":"    public int size() {","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"CaptainKeqing"},"content":"        return tasks.size();","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"CaptainKeqing"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"CaptainKeqing"},"content":"     * Adds a task to the task list","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"CaptainKeqing"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"CaptainKeqing"},"content":"    public void add(Task task) {","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"CaptainKeqing"},"content":"        tasks.add(task);","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"CaptainKeqing"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"CaptainKeqing"},"content":"     * Deletes the task at index from task list, and returns it","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"CaptainKeqing"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"CaptainKeqing"},"content":"     * @param listIndex index of task to delete as shown by list command","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"CaptainKeqing"},"content":"     * @return the task that was deleted","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"CaptainKeqing"},"content":"     * @throws IndexOutOfBoundsException if index is out of bounds","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"CaptainKeqing"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"CaptainKeqing"},"content":"    public Task delete(int listIndex) throws IndexOutOfBoundsException {","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"CaptainKeqing"},"content":"        return tasks.remove(listIndex - 1);","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"CaptainKeqing"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"CaptainKeqing"},"content":"     * Marks the item in task list at index as done, and returns it","lastModifiedDate":"2024-02-10"},{"lineNumber":39,"author":{"gitId":"CaptainKeqing"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":40,"author":{"gitId":"CaptainKeqing"},"content":"     * @param listIndex index of task to mark as shown by list command","lastModifiedDate":"2024-02-10"},{"lineNumber":41,"author":{"gitId":"CaptainKeqing"},"content":"     * @return the task that was marked","lastModifiedDate":"2024-02-10"},{"lineNumber":42,"author":{"gitId":"CaptainKeqing"},"content":"     * @throws IndexOutOfBoundsException if index is out of bounds","lastModifiedDate":"2024-02-06"},{"lineNumber":43,"author":{"gitId":"CaptainKeqing"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":44,"author":{"gitId":"CaptainKeqing"},"content":"    public Task mark(int listIndex) throws IndexOutOfBoundsException {","lastModifiedDate":"2024-02-06"},{"lineNumber":45,"author":{"gitId":"CaptainKeqing"},"content":"        Task task \u003d tasks.get(listIndex - 1);","lastModifiedDate":"2024-02-06"},{"lineNumber":46,"author":{"gitId":"CaptainKeqing"},"content":"        task.markDone();","lastModifiedDate":"2024-02-06"},{"lineNumber":47,"author":{"gitId":"CaptainKeqing"},"content":"        return task;","lastModifiedDate":"2024-02-06"},{"lineNumber":48,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":49,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":50,"author":{"gitId":"CaptainKeqing"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":51,"author":{"gitId":"CaptainKeqing"},"content":"     * Unmarks the item in task list at index as done, and returns it","lastModifiedDate":"2024-02-10"},{"lineNumber":52,"author":{"gitId":"CaptainKeqing"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"CaptainKeqing"},"content":"     * @param listIndex index of task to unmark as shown by list command","lastModifiedDate":"2024-02-10"},{"lineNumber":54,"author":{"gitId":"CaptainKeqing"},"content":"     * @return the task that was unmarked","lastModifiedDate":"2024-02-10"},{"lineNumber":55,"author":{"gitId":"CaptainKeqing"},"content":"     * @throws IndexOutOfBoundsException if index is out of bounds","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"CaptainKeqing"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"CaptainKeqing"},"content":"    public Task unmark(int listIndex) throws IndexOutOfBoundsException {","lastModifiedDate":"2024-02-06"},{"lineNumber":58,"author":{"gitId":"CaptainKeqing"},"content":"        Task task \u003d tasks.get(listIndex - 1);","lastModifiedDate":"2024-02-06"},{"lineNumber":59,"author":{"gitId":"CaptainKeqing"},"content":"        task.unmarkDone();","lastModifiedDate":"2024-02-06"},{"lineNumber":60,"author":{"gitId":"CaptainKeqing"},"content":"        return task;","lastModifiedDate":"2024-02-06"},{"lineNumber":61,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":63,"author":{"gitId":"CaptainKeqing"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":64,"author":{"gitId":"CaptainKeqing"},"content":"     * Returns the tasks as an Iterator to prevent modification.","lastModifiedDate":"2024-02-07"},{"lineNumber":65,"author":{"gitId":"CaptainKeqing"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":66,"author":{"gitId":"CaptainKeqing"},"content":"    public Iterator\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-02-06"},{"lineNumber":67,"author":{"gitId":"CaptainKeqing"},"content":"        return this.tasks.iterator();","lastModifiedDate":"2024-02-06"},{"lineNumber":68,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":69,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":70,"author":{"gitId":"CaptainKeqing"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":71,"author":{"gitId":"CaptainKeqing"},"content":"    public String toString() {","lastModifiedDate":"2024-02-05"},{"lineNumber":72,"author":{"gitId":"CaptainKeqing"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-02-05"},{"lineNumber":73,"author":{"gitId":"CaptainKeqing"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-05"},{"lineNumber":74,"author":{"gitId":"CaptainKeqing"},"content":"            sb.append(String.format(\"%d. %s \\n\", i + 1, tasks.get(i).toString()));","lastModifiedDate":"2024-02-05"},{"lineNumber":75,"author":{"gitId":"CaptainKeqing"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":76,"author":{"gitId":"CaptainKeqing"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2024-02-05"},{"lineNumber":77,"author":{"gitId":"CaptainKeqing"},"content":"            sb.append(\"There are no tasks for you today. Enjoy :)\");","lastModifiedDate":"2024-02-05"},{"lineNumber":78,"author":{"gitId":"CaptainKeqing"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":79,"author":{"gitId":"CaptainKeqing"},"content":"        return sb.toString();","lastModifiedDate":"2024-02-05"},{"lineNumber":80,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":81,"author":{"gitId":"CaptainKeqing"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"CaptainKeqing":81}},{"path":"src/main/java/lindi/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CaptainKeqing"},"content":"package lindi.task;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"CaptainKeqing"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"CaptainKeqing"},"content":" * Represents an todo task","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"CaptainKeqing"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"CaptainKeqing"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"CaptainKeqing"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"CaptainKeqing"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"CaptainKeqing"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"CaptainKeqing"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"CaptainKeqing"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"CaptainKeqing"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"CaptainKeqing"},"content":"    public String toParsedFormat() {","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"CaptainKeqing"},"content":"        return String.format(\"T | %c | %s\",","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"CaptainKeqing"},"content":"                this.isDone ? \u0027y\u0027 : \u0027n\u0027, this.description);","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"CaptainKeqing"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"CaptainKeqing":21}},{"path":"src/main/java/lindi/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CaptainKeqing"},"content":"package lindi.ui;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"CaptainKeqing"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.commands.Command;","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"CaptainKeqing"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"CaptainKeqing"},"content":" * Text based UI of the application. Deals with interactions with the user","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"CaptainKeqing"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"CaptainKeqing"},"content":"public class Ui {","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"CaptainKeqing"},"content":"    private static final String LINE_SEPARATOR \u003d \"-\".repeat(50); // For visibility purposes","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"CaptainKeqing"},"content":"    private final Scanner in;","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"CaptainKeqing"},"content":"    private final String name;","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"CaptainKeqing"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"CaptainKeqing"},"content":"     * Creates a user interface with system.in input","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"CaptainKeqing"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"CaptainKeqing"},"content":"    public Ui(String name) {","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"CaptainKeqing"},"content":"        this.in \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"CaptainKeqing"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"CaptainKeqing"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"CaptainKeqing"},"content":"     * Returns the input line read in from user","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"CaptainKeqing"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"CaptainKeqing"},"content":"    public String getUserInput() {","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"CaptainKeqing"},"content":"        return in.nextLine();","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"CaptainKeqing"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"CaptainKeqing"},"content":"     * Prints the given string, decorated with a line separator for better visibility","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"CaptainKeqing"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"CaptainKeqing"},"content":"    private void print(String s) {","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"CaptainKeqing"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"CaptainKeqing"},"content":"        System.out.println(s);","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"CaptainKeqing"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"CaptainKeqing"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":40,"author":{"gitId":"CaptainKeqing"},"content":"     * Displays to the user the status of the given command.","lastModifiedDate":"2024-02-06"},{"lineNumber":41,"author":{"gitId":"CaptainKeqing"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":42,"author":{"gitId":"CaptainKeqing"},"content":"    public void displayCommand(Command command) {","lastModifiedDate":"2024-02-06"},{"lineNumber":43,"author":{"gitId":"CaptainKeqing"},"content":"        this.print(command.status());","lastModifiedDate":"2024-02-06"},{"lineNumber":44,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":45,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":46,"author":{"gitId":"CaptainKeqing"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":47,"author":{"gitId":"CaptainKeqing"},"content":"     * Displays to the user the exception.","lastModifiedDate":"2024-02-06"},{"lineNumber":48,"author":{"gitId":"CaptainKeqing"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":49,"author":{"gitId":"CaptainKeqing"},"content":"    public void displayError(Exception e) {","lastModifiedDate":"2024-02-06"},{"lineNumber":50,"author":{"gitId":"CaptainKeqing"},"content":"        this.print(\"Oops ! There was an error:\\n\" + e.getMessage());","lastModifiedDate":"2024-02-06"},{"lineNumber":51,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":52,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":53,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":54,"author":{"gitId":"CaptainKeqing"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":55,"author":{"gitId":"CaptainKeqing"},"content":"     * Displays a greeting message.","lastModifiedDate":"2024-02-06"},{"lineNumber":56,"author":{"gitId":"CaptainKeqing"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":57,"author":{"gitId":"CaptainKeqing"},"content":"    public void greeting() {","lastModifiedDate":"2024-02-06"},{"lineNumber":58,"author":{"gitId":"CaptainKeqing"},"content":"        this.print(String.format(\"Hello I\u0027m %s\\nWhat can I do for you?\", this.name));","lastModifiedDate":"2024-02-06"},{"lineNumber":59,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":60,"author":{"gitId":"CaptainKeqing"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"CaptainKeqing":60}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"CaptainKeqing"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"CaptainKeqing"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"CaptainKeqing"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"CaptainKeqing"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"CaptainKeqing"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"CaptainKeqing"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"CaptainKeqing"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"CaptainKeqing"},"content":"        \u003cText fx:id\u003d\"dialog\" text\u003d\"Text\" textAlignment\u003d\"RIGHT\" /\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"CaptainKeqing"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"CaptainKeqing"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"CaptainKeqing"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"CaptainKeqing"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"CaptainKeqing"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"CaptainKeqing"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"CaptainKeqing":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"CaptainKeqing"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"CaptainKeqing"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"CaptainKeqing"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"CaptainKeqing"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"CaptainKeqing"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"CaptainKeqing"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"CaptainKeqing"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"lindi.gui.MainWindow\"\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"CaptainKeqing"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"CaptainKeqing"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"CaptainKeqing"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"CaptainKeqing"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"CaptainKeqing"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"CaptainKeqing"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"CaptainKeqing"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"CaptainKeqing"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"CaptainKeqing"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"CaptainKeqing"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"CaptainKeqing":19}},{"path":"src/test/java/lindi/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CaptainKeqing"},"content":"package lindi.parser;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"CaptainKeqing"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.commands.CreateTaskCommand;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.commands.DeleteCommand;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.commands.ExitCommand;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.commands.FindCommand;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.commands.InvalidCommand;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.commands.ListCommand;","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.commands.MarkCommand;","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.commands.UnmarkCommand;","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"CaptainKeqing"},"content":"public class ParserTest {","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"CaptainKeqing"},"content":"    @Test","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"CaptainKeqing"},"content":"    public void parseTestValid() {","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"CaptainKeqing"},"content":"        // normal list command returns a ListCommand","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"CaptainKeqing"},"content":"        assert(Parser.parse(\"list\") instanceof ListCommand);","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"CaptainKeqing"},"content":"        // list command with extra arguments returns a ListCommand","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"CaptainKeqing"},"content":"        assert(Parser.parse(\"list\") instanceof ListCommand);","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"CaptainKeqing"},"content":"        // normal find command search key argument returns a FindCommand","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"CaptainKeqing"},"content":"        assert(Parser.parse(\"find sampleKey\") instanceof FindCommand);","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"CaptainKeqing"},"content":"        // normal mark command with index argument returns a MarkCommand","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"CaptainKeqing"},"content":"        assert(Parser.parse(\"mark 3\") instanceof MarkCommand);","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"CaptainKeqing"},"content":"        // normal mark command with index argument returns a UnmarkCommand","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"CaptainKeqing"},"content":"        assert(Parser.parse(\"unmark 3\") instanceof UnmarkCommand);","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"CaptainKeqing"},"content":"        // normal delete command with index argument returns a DeleteCommand","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"CaptainKeqing"},"content":"        assert(Parser.parse(\"delete 3\") instanceof DeleteCommand);","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"CaptainKeqing"},"content":"        // normal todo command with argument returns a CreateTaskCommand","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"CaptainKeqing"},"content":"        assert(Parser.parse(\"todo something\") instanceof CreateTaskCommand);","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"CaptainKeqing"},"content":"        // normal deadline command with /by argument returns a CreateTaskCommand","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"CaptainKeqing"},"content":"        assert(Parser.parse(\"deadline someDeadline /by 2024-02-07-23-59\")","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"CaptainKeqing"},"content":"                instanceof CreateTaskCommand);","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"CaptainKeqing"},"content":"        // normal event command with /from and /to argument returns a CreateTaskCommand","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"CaptainKeqing"},"content":"        assert(Parser.parse(\"event someEvent /from 2024-02-07-23-59 /to 2024-02-08-23-59\")","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"CaptainKeqing"},"content":"                instanceof CreateTaskCommand);","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"CaptainKeqing"},"content":"        // normal bye command returns a ExitCommand","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"CaptainKeqing"},"content":"        assert(Parser.parse(\"bye\") instanceof ExitCommand);","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"CaptainKeqing"},"content":"    @Test","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"CaptainKeqing"},"content":"    public void parseTestInvalid() {","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"CaptainKeqing"},"content":"        // find command without search key argument returns an InvalidCommand","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"CaptainKeqing"},"content":"        assert(Parser.parse(\"find\") instanceof InvalidCommand);","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"CaptainKeqing"},"content":"        // mark command without index argument returns a InvalidCommand","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"CaptainKeqing"},"content":"        assert(Parser.parse(\"mark\") instanceof InvalidCommand);","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"CaptainKeqing"},"content":"        // mark command with non-integer argument returns a InvalidCommand","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"CaptainKeqing"},"content":"        assert(Parser.parse(\"mark 3af\") instanceof InvalidCommand);","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"CaptainKeqing"},"content":"        // unmark command without index argument returns a InvalidCommand","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"CaptainKeqing"},"content":"        assert(Parser.parse(\"unmark\") instanceof InvalidCommand);","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"CaptainKeqing"},"content":"        // unmark command with non-integer argument returns a InvalidCommand","lastModifiedDate":"2024-02-07"},{"lineNumber":65,"author":{"gitId":"CaptainKeqing"},"content":"        assert(Parser.parse(\"unmark 3af\") instanceof InvalidCommand);","lastModifiedDate":"2024-02-07"},{"lineNumber":66,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":67,"author":{"gitId":"CaptainKeqing"},"content":"        // delete command without index argument returns a InvalidCommand","lastModifiedDate":"2024-02-07"},{"lineNumber":68,"author":{"gitId":"CaptainKeqing"},"content":"        assert(Parser.parse(\"delete\") instanceof InvalidCommand);","lastModifiedDate":"2024-02-07"},{"lineNumber":69,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":70,"author":{"gitId":"CaptainKeqing"},"content":"        // delete command with non-integer argument returns a InvalidCommand","lastModifiedDate":"2024-02-07"},{"lineNumber":71,"author":{"gitId":"CaptainKeqing"},"content":"        assert(Parser.parse(\"delete 3af\") instanceof InvalidCommand);","lastModifiedDate":"2024-02-07"},{"lineNumber":72,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":73,"author":{"gitId":"CaptainKeqing"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"CaptainKeqing":73}},{"path":"src/test/java/lindi/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CaptainKeqing"},"content":"package lindi.storage;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"CaptainKeqing"},"content":"import java.io.File;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"CaptainKeqing"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"CaptainKeqing"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"CaptainKeqing"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.task.TaskList;","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"CaptainKeqing"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"CaptainKeqing"},"content":" * Tester for Storage class. Uses a mock data folder","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"CaptainKeqing"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"CaptainKeqing"},"content":"public class StorageTest {","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"CaptainKeqing"},"content":"    private final String testDataDir \u003d \"./.testData\";","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"CaptainKeqing"},"content":"    private final String testFile \u003d \".testFile.txt\";","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"CaptainKeqing"},"content":"    public StorageTest() {","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"CaptainKeqing"},"content":"        File testDataDirectory \u003d new File(testDataDir);","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"CaptainKeqing"},"content":"        if (testDataDirectory.exists()) {","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"CaptainKeqing"},"content":"            throw new RuntimeException(\"Test cannot continue, folder exists already.\\n\"","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"CaptainKeqing"},"content":"                    + \"There may be user generated files which will be overwritten if test executed\");","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"CaptainKeqing"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"CaptainKeqing"},"content":"    @Test","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"CaptainKeqing"},"content":"    public void saveToFile_emptyTaskList_fileCreatedAndEmpty() {","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"CaptainKeqing"},"content":"        Storage storage \u003d new Storage(this.testDataDir, this.testFile);","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"CaptainKeqing"},"content":"        storage.saveToFile(new TaskList());","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"CaptainKeqing"},"content":"        File dir \u003d new File(this.testDataDir);","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"CaptainKeqing"},"content":"        File f \u003d new File(dir, this.testFile);","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"CaptainKeqing"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"CaptainKeqing"},"content":"            Scanner fileScanner \u003d new Scanner(f);","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"CaptainKeqing"},"content":"            assert !fileScanner.hasNextLine();","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"CaptainKeqing"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"CaptainKeqing"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"CaptainKeqing"},"content":"        } finally {","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"CaptainKeqing"},"content":"            f.delete();","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"CaptainKeqing"},"content":"            dir.delete();","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"CaptainKeqing"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"CaptainKeqing"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"CaptainKeqing":44}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"CaptainKeqing"},"content":"hello","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"CaptainKeqing"},"content":"list","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"CaptainKeqing"},"content":"todo practice piano","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"CaptainKeqing"},"content":"deadline finish iP /by Sat 26 2359","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"CaptainKeqing"},"content":"event volunteering /from Sat 930am /to 1130am","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"CaptainKeqing"},"content":"list","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"CaptainKeqing"},"content":"mark 2","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"CaptainKeqing"},"content":"mark 1","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"CaptainKeqing"},"content":"list","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"CaptainKeqing"},"content":"event cca practice /to 10pm","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"CaptainKeqing"},"content":"event cca practice /to 10pm /from 8pm","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"CaptainKeqing"},"content":"deadline cca leader selection","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"CaptainKeqing"},"content":"bye","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"CaptainKeqing":13}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"CaptainKeqing"},"content":"java -classpath ../bin Lindi \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"CaptainKeqing"},"content":"#dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":36,"CaptainKeqing":2}}]
