[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"Bandov"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"Bandov"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"Bandov"},"content":"javafx {","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Bandov"},"content":"    version \u003d \"17.0.7\"","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"Bandov"},"content":"    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027  ]","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Bandov"},"content":"}","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"Bandov"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"Bandov"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"Bandov"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"Bandov"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"Bandov"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"Bandov"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"Bandov"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"Bandov"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"Bandov"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"Bandov"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"Bandov"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"Bandov"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"Bandov"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"Bandov"},"content":"checkstyle {","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"Bandov"},"content":"    toolVersion \u003d \"10.2\"","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"Bandov"},"content":"}","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"Bandov"},"content":"    mainClass.set(\"duke.Launcher\")","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"Bandov"},"content":"    archiveFileName \u003d \u0027duke.jar\u0027","lastModifiedDate":"2024-01-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Bandov":26,"-":41}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Bandov"},"content":"# BobBot User Guide","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-01-07"},{"lineNumber":4,"author":{"gitId":"Bandov"},"content":"![DaExample.png](../src/main/resources/images/Ui.png)","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":6,"author":{"gitId":"Bandov"},"content":"ob cooks, cleans and keeps your quintessential information for you. It\u0027s a chatbot that helps you keep track of your tasks, deadlines and events. It\u0027s a simple and easy to use chatbot that is perfect for anyone who wants to keep track of their tasks and deadlines.","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":10,"author":{"gitId":"Bandov"},"content":"The Deadline feature allows users to create, manage, and track tasks that have specific deadlines. This feature is an integral part of our application, designed to help users stay organized and on top of their tasks.","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"Bandov"},"content":"Deadline newDeadline \u003d new Deadline(\"Task Description\", LocalDate.parse(\"YYYY-MM-DD\"));","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"Bandov"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"Bandov"},"content":"```","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"Bandov"},"content":"[D][ ] Task Description (by: YYYY-MM-DD) TagName","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"Bandov"},"content":"```","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":23,"author":{"gitId":"Bandov"},"content":"## Adding Event","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"Bandov"},"content":"The Event Management feature designed to help users effectively manage their scheduled events. This feature extends the basic task functionality to include events with specific start and end times, making it easier for users to organize their schedules.","lastModifiedDate":"2024-02-17"},{"lineNumber":26,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":27,"author":{"gitId":"Bandov"},"content":"Create events with a detailed description, along with precise start and end times. This feature allows users to define and manage activities within a designated time frame.","lastModifiedDate":"2024-02-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"//Give examples of usage","lastModifiedDate":"2024-01-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"Bandov"},"content":"Event newEvent \u003d new Event(\"Event Description\", LocalDateTime.parse(\"YYYY-MM-DDTHH:MM\"), LocalDateTime.parse(\"YYYY-MM-DDTHH:MM\"));","lastModifiedDate":"2024-02-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":36,"author":{"gitId":"Bandov"},"content":"[E][ ] Event Description (from: YYYY-MM-DDTHH:MM to: YYYY-MM-DDTHH:MM) TagName","lastModifiedDate":"2024-02-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":39,"author":{"gitId":"Bandov"},"content":"## Tagging feature","lastModifiedDate":"2024-02-17"},{"lineNumber":40,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":41,"author":{"gitId":"Bandov"},"content":"The tagging feature enables users to categorize their tasks using simple labels. Tags provide an easy way to mark, identify, or group tasks, enhancing the task management capabilities of our application.","lastModifiedDate":"2024-02-17"},{"lineNumber":42,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":43,"author":{"gitId":"Bandov"},"content":"A tag can be created with a specific name, which can then be associated with one or more tasks.","lastModifiedDate":"2024-02-17"},{"lineNumber":44,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":45,"author":{"gitId":"Bandov"},"content":"// Give examples of usage","lastModifiedDate":"2024-02-17"},{"lineNumber":46,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":47,"author":{"gitId":"Bandov"},"content":"Tag urgentTag \u003d new Tag(\"Urgent\");","lastModifiedDate":"2024-02-17"},{"lineNumber":48,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":49,"author":{"gitId":"Bandov"},"content":"Associating Tags with Tasks","lastModifiedDate":"2024-02-17"},{"lineNumber":50,"author":{"gitId":"Bandov"},"content":"Once a tag is created, it can be associated with tasks. This association helps in categorizing tasks based on the tag\u0027s name.","lastModifiedDate":"2024-02-17"},{"lineNumber":51,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":52,"author":{"gitId":"Bandov"},"content":"Example:","lastModifiedDate":"2024-02-17"},{"lineNumber":53,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":54,"author":{"gitId":"Bandov"},"content":"To associate a tag with a task, the task class should have methods to add or remove tags. ","lastModifiedDate":"2024-02-17"},{"lineNumber":55,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":56,"author":{"gitId":"Bandov"},"content":"For instance:","lastModifiedDate":"2024-02-17"},{"lineNumber":57,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":58,"author":{"gitId":"Bandov"},"content":"task.addTag(urgentTag);","lastModifiedDate":"2024-02-17"},{"lineNumber":59,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":60,"author":{"gitId":"Bandov"},"content":"Removing Tags from Tasks","lastModifiedDate":"2024-02-17"},{"lineNumber":61,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":62,"author":{"gitId":"Bandov"},"content":"If a task\u0027s priority changes or if the tag is no longer relevant, the tag can be removed from the task.","lastModifiedDate":"2024-02-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":64,"author":{"gitId":"Bandov"},"content":"// Example of usage","lastModifiedDate":"2024-02-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":66,"author":{"gitId":"Bandov"},"content":"task.removeTag(urgentTag);","lastModifiedDate":"2024-02-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":68,"author":{"gitId":"Bandov"},"content":"Integration","lastModifiedDate":"2024-02-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07"},{"lineNumber":70,"author":{"gitId":"Bandov"},"content":"The tagging feature is designed to work seamlessly with the task management system of the application. It complements other features such as deadlines and events, providing a comprehensive solution for organizing and managing tasks.]()","lastModifiedDate":"2024-02-17"}],"authorContributionMap":{"Bandov":48,"-":22}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bandov"},"content":"package duke;","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"Bandov"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"Bandov"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"Bandov"},"content":" * The Deadline class represents a task with a deadline.","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"Bandov"},"content":" * It is a subclass of the Task class.","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"Bandov"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"Bandov"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-20"},{"lineNumber":10,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":11,"author":{"gitId":"Bandov"},"content":"    protected LocalDate by;","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"Bandov"},"content":"    protected Tag tag;","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":14,"author":{"gitId":"Bandov"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"Bandov"},"content":"     * Constructor for Deadline.","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"Bandov"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"Bandov"},"content":"     * @param description The description of the deadline.","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"Bandov"},"content":"     * @param by The deadline of the deadline.","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"Bandov"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"Bandov"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"Bandov"},"content":"        super(description);","lastModifiedDate":"2024-01-20"},{"lineNumber":22,"author":{"gitId":"Bandov"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-20"},{"lineNumber":23,"author":{"gitId":"Bandov"},"content":"        this.tag \u003d null;","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":25,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":26,"author":{"gitId":"Bandov"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"Bandov"},"content":"     * Returns the string representation of the deadline.","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"Bandov"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"Bandov"},"content":"     * @return The string representation of the deadline.","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"Bandov"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"Bandov"},"content":"    @Override","lastModifiedDate":"2024-01-20"},{"lineNumber":32,"author":{"gitId":"Bandov"},"content":"    public String toString() {","lastModifiedDate":"2024-01-20"},{"lineNumber":33,"author":{"gitId":"Bandov"},"content":"        return \"[D]\" + (isDone ? \"[X] \" : \"[ ] \") + super.description + \" (by: \" + by + \")\"","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"Bandov"},"content":"                + (tag \u003d\u003d null ? \"\" : \" \" + tag.getTagName());","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":36,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"Bandov"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"Bandov"},"content":"     * Returns the string representation of the deadline to be stored in the file.","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"Bandov"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"Bandov"},"content":"     * @return The string representation of the deadline to be stored in the file.","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"Bandov"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"Bandov"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"Bandov"},"content":"    public String toFileString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"Bandov"},"content":"        return \"D\" + \" | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + by","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"Bandov"},"content":"                + (tag \u003d\u003d null ? \"\" : \" | \" + tag.getTagName());","lastModifiedDate":"2024-02-09"},{"lineNumber":46,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"Bandov"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"Bandov"},"content":"     * Returns a Deadline instance from the string representation of the deadline stored in the file.","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"Bandov"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":51,"author":{"gitId":"Bandov"},"content":"     * @param str The string representation of the deadline stored in the file.","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"Bandov"},"content":"     * @return The Deadline instance from the string representation of the deadline stored in the file.","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"Bandov"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":54,"author":{"gitId":"Bandov"},"content":"    public static Deadline fromFileString(String str) {","lastModifiedDate":"2024-01-25"},{"lineNumber":55,"author":{"gitId":"Bandov"},"content":"        String[] parts \u003d str.split(\" \\\\| \");","lastModifiedDate":"2024-01-25"},{"lineNumber":56,"author":{"gitId":"Bandov"},"content":"        if (!parts[0].equals(\"D\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":57,"author":{"gitId":"Bandov"},"content":"            return null;","lastModifiedDate":"2024-01-25"},{"lineNumber":58,"author":{"gitId":"Bandov"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":59,"author":{"gitId":"Bandov"},"content":"        String description \u003d parts[2].trim();","lastModifiedDate":"2024-01-25"},{"lineNumber":60,"author":{"gitId":"Bandov"},"content":"        LocalDate by \u003d LocalDate.parse(parts[3].trim());","lastModifiedDate":"2024-01-25"},{"lineNumber":61,"author":{"gitId":"Bandov"},"content":"        boolean isDone \u003d parts[1].trim().equals(\"1\");","lastModifiedDate":"2024-01-25"},{"lineNumber":62,"author":{"gitId":"Bandov"},"content":"        Deadline deadline \u003d new Deadline(description, by);","lastModifiedDate":"2024-01-25"},{"lineNumber":63,"author":{"gitId":"Bandov"},"content":"        if (isDone) {","lastModifiedDate":"2024-01-27"},{"lineNumber":64,"author":{"gitId":"Bandov"},"content":"            deadline.markAsDone();","lastModifiedDate":"2024-01-27"},{"lineNumber":65,"author":{"gitId":"Bandov"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":66,"author":{"gitId":"Bandov"},"content":"        if (parts.length \u003e 4) {","lastModifiedDate":"2024-02-09"},{"lineNumber":67,"author":{"gitId":"Bandov"},"content":"            deadline.tag \u003d new Tag(parts[4].trim());","lastModifiedDate":"2024-02-09"},{"lineNumber":68,"author":{"gitId":"Bandov"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":69,"author":{"gitId":"Bandov"},"content":"        return deadline;","lastModifiedDate":"2024-01-25"},{"lineNumber":70,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":71,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":72,"author":{"gitId":"Bandov"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":73,"author":{"gitId":"Bandov"},"content":"     * Returns the date of the deadline.","lastModifiedDate":"2024-01-27"},{"lineNumber":74,"author":{"gitId":"Bandov"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":75,"author":{"gitId":"Bandov"},"content":"     * @return The date of the deadline.","lastModifiedDate":"2024-01-27"},{"lineNumber":76,"author":{"gitId":"Bandov"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":77,"author":{"gitId":"Bandov"},"content":"    public String getDate() {","lastModifiedDate":"2024-01-26"},{"lineNumber":78,"author":{"gitId":"Bandov"},"content":"        return by.toString();","lastModifiedDate":"2024-01-26"},{"lineNumber":79,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":80,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":81,"author":{"gitId":"Bandov"},"content":"    public void addTag(String tag) {","lastModifiedDate":"2024-02-09"},{"lineNumber":82,"author":{"gitId":"Bandov"},"content":"        this.tag \u003d new Tag(tag);","lastModifiedDate":"2024-02-09"},{"lineNumber":83,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":84,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":85,"author":{"gitId":"Bandov"},"content":"    public void removeTag() {","lastModifiedDate":"2024-02-09"},{"lineNumber":86,"author":{"gitId":"Bandov"},"content":"        this.tag \u003d null;","lastModifiedDate":"2024-02-09"},{"lineNumber":87,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":88,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":89,"author":{"gitId":"Bandov"},"content":"    public Tag getTag() {","lastModifiedDate":"2024-02-17"},{"lineNumber":90,"author":{"gitId":"Bandov"},"content":"        return this.tag;","lastModifiedDate":"2024-02-17"},{"lineNumber":91,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":92,"author":{"gitId":"Bandov"},"content":"}","lastModifiedDate":"2024-01-20"}],"authorContributionMap":{"Bandov":92}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bandov"},"content":"package duke;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"Bandov"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Bandov"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Bandov"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Bandov"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Bandov"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Bandov"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Bandov"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Bandov"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Bandov"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Bandov"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Bandov"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"Bandov"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Bandov"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Bandov"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"Bandov"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"Bandov"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"Bandov"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"Bandov"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"Bandov"},"content":"    @FXML","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"Bandov"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"Bandov"},"content":"    @FXML","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"Bandov"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"Bandov"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"Bandov"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"Bandov"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"Bandov"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"Bandov"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"Bandov"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"Bandov"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"Bandov"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"Bandov"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"Bandov"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"Bandov"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"Bandov"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"Bandov"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"Bandov"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"Bandov"},"content":"    private void flip() {","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"Bandov"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"Bandov"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"Bandov"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"Bandov"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"Bandov"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"Bandov"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"Bandov"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"Bandov"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"Bandov"},"content":"        db.flip();","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"Bandov"},"content":"        return db;","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"Bandov"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"Bandov":63}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bandov"},"content":"package duke;","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"Bandov"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"Bandov"},"content":"import javafx.application.Platform;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":8,"author":{"gitId":"Bandov"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"Bandov"},"content":" * The Duke class is the main class of the Duke application.","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"Bandov"},"content":" * It is responsible for the initialization of the Storage and TaskList instances.","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"Bandov"},"content":" * It also contains the main method that serves as the entry point for the Duke application.","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"Bandov"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"Bandov"},"content":"public class Duke {","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"Bandov"},"content":"    private static TaskList tasks;","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"Bandov"},"content":"    private Storage storage;","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"Bandov"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"Bandov"},"content":"     * Constructor for Duke.","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"Bandov"},"content":"     * Initializes the Storage and TaskList instances.","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"Bandov"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"Bandov"},"content":"     * @param filePath The path to the file where the task list is stored.","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"Bandov"},"content":"     * @throws DukeException If an error occurs while loading the task list.","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"Bandov"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"Bandov"},"content":"    public Duke(String filePath) throws DukeException {","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"Bandov"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"Bandov"},"content":"        try {","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"Bandov"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"Bandov"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":29,"author":{"gitId":"Bandov"},"content":"            Ui.showLoadingError();","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"Bandov"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"Bandov"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":32,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":33,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"Bandov"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"Bandov"},"content":"     * Processes the given input and returns a response.","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"Bandov"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"Bandov"},"content":"     * This method handles user input and performs actions based on the input. If the input is \"bye\",","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"Bandov"},"content":"     * it attempts to save the current list of tasks to storage and then exits the platform. For other inputs,","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"Bandov"},"content":"     * it processes the input to generate a response. If an error occurs during saving or processing,","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"Bandov"},"content":"     * an appropriate error message is returned.","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"Bandov"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"Bandov"},"content":"     * @param input The user input to be processed.","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"Bandov"},"content":"     * @return A string representing the response to the input. This could be a confirmation message for actions","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"Bandov"},"content":"     *         taken (e.g., saving data, adding a task), an error message if something goes wrong, or any other","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"Bandov"},"content":"     *         response generated based on the user input.","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"Bandov"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"Bandov"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"Bandov"},"content":"        String response;","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"Bandov"},"content":"        assert input !\u003d null : \"Input should not be null\";","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"Bandov"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"Bandov"},"content":"            try {","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"Bandov"},"content":"                Storage.saveCurrentList(tasks);","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"Bandov"},"content":"                Platform.exit();","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"Bandov"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"Bandov"},"content":"                return \"Error saving file\";","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"Bandov"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"Bandov"},"content":"            return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"Bandov"},"content":"        } else {","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"Bandov"},"content":"            try {","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"Bandov"},"content":"                response \u003d Ui.parse(tasks, input);","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"Bandov"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"Bandov"},"content":"                return e.getMessage();","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"Bandov"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"Bandov"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"Bandov"},"content":"        return response;","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Bandov":68,"-":1}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bandov"},"content":"package duke;","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"Bandov"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"Bandov"},"content":" * The DukeException class represents an exception specific to the Duke application.","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"Bandov"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"Bandov"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"Bandov"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"Bandov"},"content":"     * Constructor for DukeException.","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"Bandov"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"Bandov"},"content":"     * @param message The error message.","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"Bandov"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"Bandov"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"Bandov"},"content":"        super(message);","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"Bandov"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"Bandov":16}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bandov"},"content":"package duke;","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"Bandov"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"Bandov"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"Bandov"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"Bandov"},"content":" * Represents an event task with a description, start time, and end time.","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"Bandov"},"content":" * It extends the Task class by adding time-specific information.","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"Bandov"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"Bandov"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-20"},{"lineNumber":11,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":12,"author":{"gitId":"Bandov"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"Bandov"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"Bandov"},"content":"    protected Tag tag;","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":16,"author":{"gitId":"Bandov"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"Bandov"},"content":"     * Constructs an Event task with the specified description, start time, and end time.","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"Bandov"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"Bandov"},"content":"     * @param description The description of the event.","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"Bandov"},"content":"     * @param from The start time of the event.","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"Bandov"},"content":"     * @param to The end time of the event.","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"Bandov"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"Bandov"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"Bandov"},"content":"        super(description);","lastModifiedDate":"2024-01-20"},{"lineNumber":25,"author":{"gitId":"Bandov"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-20"},{"lineNumber":26,"author":{"gitId":"Bandov"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-20"},{"lineNumber":27,"author":{"gitId":"Bandov"},"content":"        this.tag \u003d null;","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":29,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":30,"author":{"gitId":"Bandov"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"Bandov"},"content":"     * Returns a string representation of the event task, including its type, status, description, and timing.","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"Bandov"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"Bandov"},"content":"     * @return A string representation of the event task.","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"Bandov"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"Bandov"},"content":"    @Override","lastModifiedDate":"2024-01-20"},{"lineNumber":36,"author":{"gitId":"Bandov"},"content":"    public String toString() {","lastModifiedDate":"2024-01-20"},{"lineNumber":37,"author":{"gitId":"Bandov"},"content":"        return \"[E]\" + (isDone ? \"[X] \" : \"[ ] \") + super.description + \" (from: \" + from + \" to: \" + to + \")\"","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"Bandov"},"content":"                + (tag \u003d\u003d null ? \"\" : \" \" + tag.getTagName());","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":40,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"Bandov"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"Bandov"},"content":"     * Returns a string representation of the event task formatted for file storage.","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"Bandov"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"Bandov"},"content":"     * @return A string formatted for file storage.","lastModifiedDate":"2024-01-27"},{"lineNumber":45,"author":{"gitId":"Bandov"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"Bandov"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"Bandov"},"content":"    public String toFileString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"Bandov"},"content":"        return \"E\" + \" | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + from + \" - \" + to","lastModifiedDate":"2024-02-09"},{"lineNumber":49,"author":{"gitId":"Bandov"},"content":"                + (tag \u003d\u003d null ? \"\" : \" | \" + tag.getTagName());","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":52,"author":{"gitId":"Bandov"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"Bandov"},"content":"     * Creates an Event object from a string representation formatted for file storage.","lastModifiedDate":"2024-01-27"},{"lineNumber":54,"author":{"gitId":"Bandov"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":55,"author":{"gitId":"Bandov"},"content":"     * @param str The string representation of the event from a file.","lastModifiedDate":"2024-01-27"},{"lineNumber":56,"author":{"gitId":"Bandov"},"content":"     * @return An Event object, or null if the string format is invalid.","lastModifiedDate":"2024-01-27"},{"lineNumber":57,"author":{"gitId":"Bandov"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":58,"author":{"gitId":"Bandov"},"content":"    public static Event fromFileString(String str) {","lastModifiedDate":"2024-01-25"},{"lineNumber":59,"author":{"gitId":"Bandov"},"content":"        String[] parts \u003d str.split(\" \\\\| \");","lastModifiedDate":"2024-01-25"},{"lineNumber":60,"author":{"gitId":"Bandov"},"content":"        if (!parts[0].equals(\"E\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":61,"author":{"gitId":"Bandov"},"content":"            return null;","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"Bandov"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":63,"author":{"gitId":"Bandov"},"content":"        String description \u003d parts[2].trim();","lastModifiedDate":"2024-01-25"},{"lineNumber":64,"author":{"gitId":"Bandov"},"content":"        String[] times \u003d parts[3].split(\" - \");","lastModifiedDate":"2024-01-25"},{"lineNumber":65,"author":{"gitId":"Bandov"},"content":"        if (times.length \u003c 2) {","lastModifiedDate":"2024-01-25"},{"lineNumber":66,"author":{"gitId":"Bandov"},"content":"            return null;","lastModifiedDate":"2024-01-25"},{"lineNumber":67,"author":{"gitId":"Bandov"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":68,"author":{"gitId":"Bandov"},"content":"        String from \u003d times[0].trim();","lastModifiedDate":"2024-01-25"},{"lineNumber":69,"author":{"gitId":"Bandov"},"content":"        String to \u003d times[1].trim();","lastModifiedDate":"2024-01-25"},{"lineNumber":70,"author":{"gitId":"Bandov"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\u0027T\u0027HH:mm\");","lastModifiedDate":"2024-01-25"},{"lineNumber":71,"author":{"gitId":"Bandov"},"content":"        LocalDateTime dateTimeFrom \u003d LocalDateTime.parse(from, formatter);","lastModifiedDate":"2024-01-25"},{"lineNumber":72,"author":{"gitId":"Bandov"},"content":"        LocalDateTime dateTimeTo \u003d LocalDateTime.parse(to, formatter);","lastModifiedDate":"2024-01-25"},{"lineNumber":73,"author":{"gitId":"Bandov"},"content":"        boolean isDone \u003d parts[1].trim().equals(\"1\");","lastModifiedDate":"2024-01-25"},{"lineNumber":74,"author":{"gitId":"Bandov"},"content":"        Event event \u003d new Event(description, dateTimeFrom, dateTimeTo);","lastModifiedDate":"2024-01-25"},{"lineNumber":75,"author":{"gitId":"Bandov"},"content":"        if (isDone) {","lastModifiedDate":"2024-01-27"},{"lineNumber":76,"author":{"gitId":"Bandov"},"content":"            event.markAsDone();","lastModifiedDate":"2024-01-27"},{"lineNumber":77,"author":{"gitId":"Bandov"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":78,"author":{"gitId":"Bandov"},"content":"        if (parts.length \u003e 4) {","lastModifiedDate":"2024-02-09"},{"lineNumber":79,"author":{"gitId":"Bandov"},"content":"            event.tag \u003d new Tag(parts[4].trim());","lastModifiedDate":"2024-02-09"},{"lineNumber":80,"author":{"gitId":"Bandov"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":81,"author":{"gitId":"Bandov"},"content":"        return event;","lastModifiedDate":"2024-01-25"},{"lineNumber":82,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":83,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":84,"author":{"gitId":"Bandov"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":85,"author":{"gitId":"Bandov"},"content":"     * Returns the start time of the event.","lastModifiedDate":"2024-01-27"},{"lineNumber":86,"author":{"gitId":"Bandov"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":87,"author":{"gitId":"Bandov"},"content":"     * @return A string representation of the start time.","lastModifiedDate":"2024-01-27"},{"lineNumber":88,"author":{"gitId":"Bandov"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":89,"author":{"gitId":"Bandov"},"content":"    public String getFromDate() {","lastModifiedDate":"2024-01-26"},{"lineNumber":90,"author":{"gitId":"Bandov"},"content":"        return from.toString();","lastModifiedDate":"2024-01-26"},{"lineNumber":91,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":92,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":93,"author":{"gitId":"Bandov"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":94,"author":{"gitId":"Bandov"},"content":"     * Returns the end time of the event.","lastModifiedDate":"2024-01-27"},{"lineNumber":95,"author":{"gitId":"Bandov"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":96,"author":{"gitId":"Bandov"},"content":"     * @return A string representation of the end time.","lastModifiedDate":"2024-01-27"},{"lineNumber":97,"author":{"gitId":"Bandov"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":98,"author":{"gitId":"Bandov"},"content":"    public String getToDate() {","lastModifiedDate":"2024-01-26"},{"lineNumber":99,"author":{"gitId":"Bandov"},"content":"        return to.toString();","lastModifiedDate":"2024-01-26"},{"lineNumber":100,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":101,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":102,"author":{"gitId":"Bandov"},"content":"    public void addTag(String tag) {","lastModifiedDate":"2024-02-09"},{"lineNumber":103,"author":{"gitId":"Bandov"},"content":"        this.tag \u003d new Tag(tag);","lastModifiedDate":"2024-02-09"},{"lineNumber":104,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":105,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":106,"author":{"gitId":"Bandov"},"content":"    public void removeTag() {","lastModifiedDate":"2024-02-09"},{"lineNumber":107,"author":{"gitId":"Bandov"},"content":"        this.tag \u003d null;","lastModifiedDate":"2024-02-09"},{"lineNumber":108,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":109,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":110,"author":{"gitId":"Bandov"},"content":"    public Tag getTag() {","lastModifiedDate":"2024-02-17"},{"lineNumber":111,"author":{"gitId":"Bandov"},"content":"        return tag;","lastModifiedDate":"2024-02-17"},{"lineNumber":112,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":113,"author":{"gitId":"Bandov"},"content":"}","lastModifiedDate":"2024-01-20"}],"authorContributionMap":{"Bandov":113}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bandov"},"content":"package duke;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"Bandov"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Bandov"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Bandov"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Bandov"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Bandov"},"content":"public class Launcher {","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Bandov"},"content":"    public static void main(String... args) {","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Bandov"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Bandov"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"Bandov":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bandov"},"content":"package duke;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"Bandov"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Bandov"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Bandov"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Bandov"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Bandov"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Bandov"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Bandov"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Bandov"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Bandov"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Bandov"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Bandov"},"content":"    private final Duke duke;","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Bandov"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"Bandov"},"content":"     * Constructor for Main class.","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"Bandov"},"content":"     * Initializes a new Duke instance with the given file path.","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"Bandov"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"Bandov"},"content":"     * @throws DukeException if there is an error initializing Duke with the specified file path.","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"Bandov"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"Bandov"},"content":"    public Main() throws DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"Bandov"},"content":"        duke \u003d new Duke(\"../duke.txt\");","lastModifiedDate":"2024-02-17"},{"lineNumber":26,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"Bandov"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"Bandov"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"Bandov"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"Bandov"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"Bandov"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"Bandov"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"Bandov"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"Bandov"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"Bandov"},"content":"            stage.show();","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"Bandov"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"Bandov"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"Bandov"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"Bandov"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"Bandov":41}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bandov"},"content":"package duke;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"Bandov"},"content":"import java.util.Objects;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"Bandov"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Bandov"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Bandov"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Bandov"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Bandov"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Bandov"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"Bandov"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Bandov"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Bandov"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"Bandov"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Bandov"},"content":"    @FXML","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Bandov"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Bandov"},"content":"    @FXML","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"Bandov"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"Bandov"},"content":"    @FXML","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"Bandov"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"Bandov"},"content":"    private Duke duke;","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"Bandov"},"content":"    private Image userImage \u003d new Image(Objects.requireNonNull(this.getClass()","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"Bandov"},"content":"                    .getResourceAsStream(\"/images/DaUser_transparent.png\")));","lastModifiedDate":"2024-02-13"},{"lineNumber":27,"author":{"gitId":"Bandov"},"content":"    private Image dukeImage \u003d new Image(Objects.requireNonNull(this.getClass()","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"Bandov"},"content":"            .getResourceAsStream(\"/images/DaBot_transparent.png\")));","lastModifiedDate":"2024-02-13"},{"lineNumber":29,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"Bandov"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"Bandov"},"content":"     * Initializes the controller class.","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"Bandov"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"Bandov"},"content":"     * This method is automatically called after the FXML file has been loaded. It binds the vertical scroll","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"Bandov"},"content":"     * position of the scroll pane to the height of the dialog container and adds a welcome dialog box to the","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"Bandov"},"content":"     * dialog container.","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"Bandov"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"Bandov"},"content":"    @FXML","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"Bandov"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"Bandov"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"Bandov"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"Bandov"},"content":"                DialogBox.getDukeDialog(Ui.showWelcome(), dukeImage)","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"Bandov"},"content":"        );","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"Bandov"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"Bandov"},"content":"        duke \u003d d;","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"Bandov"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"Bandov"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"Bandov"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"Bandov"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"Bandov"},"content":"    @FXML","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"Bandov"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"Bandov"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"Bandov"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"Bandov"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"Bandov"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"Bandov"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"Bandov"},"content":"        );","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"Bandov"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"Bandov"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"Bandov":63}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bandov"},"content":"package duke;","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"Bandov"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"Bandov"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"Bandov"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"Bandov"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"Bandov"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"Bandov"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"Bandov"},"content":" * The Parser class represents a parser that parses the user input.","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"Bandov"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"Bandov"},"content":"public class Parser {","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"Bandov"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"Bandov"},"content":"     * Parses the user input for a \"todo\" command and adds a new Todo task to the task list.","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"Bandov"},"content":"     * This method expects the input to follow the format \"todo [description]\" where [description]","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Bandov"},"content":"     * is the task\u0027s description. It throws an exception if the input does not contain a description","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Bandov"},"content":"     * for the todo after the command keyword.","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"Bandov"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"Bandov"},"content":"     * @param list The TaskList to which the new todo task is added. This list is modified by adding a","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"Bandov"},"content":"     *             new Todo task with the provided description.","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"Bandov"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"Bandov"},"content":"     * @param message The user input string, expected to start with \"todo\" followed by the task\u0027s description.","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"Bandov"},"content":"     *                The method parses this input to extract and add the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"Bandov"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"Bandov"},"content":"     * @return A string response indicating that the new Todo task has been added to the list,","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"Bandov"},"content":"     *                including a summary of the task and the total number of tasks in the list.","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"Bandov"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"Bandov"},"content":"     * @throws DukeException If the input string does not contain a description for the todo or","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"Bandov"},"content":"     *                       if the description is empty. The exception message provides feedback","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"Bandov"},"content":"     *                       to the user about the missing description.","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"Bandov"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"Bandov"},"content":"    public static String handleTodo(TaskList list, String message) throws DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"Bandov"},"content":"        if (message.trim().equals(\"todo\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"Bandov"},"content":"            throw new DukeException(\"OOPS!!! The description of a todo cannot be empty buddy.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"Bandov"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"Bandov"},"content":"        String description \u003d message.substring(5).trim();","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"Bandov"},"content":"        Task task \u003d new Task(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"Bandov"},"content":"        list.add(task);","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"Bandov"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + task","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"Bandov"},"content":"                + \"\\nNow you have \" + list.size() + \" tasks in the list.\";","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"Bandov"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":45,"author":{"gitId":"Bandov"},"content":"     * Parses the user input for a \"deadline\" command, creating and adding a new Deadline task to the task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"Bandov"},"content":"     * The command should follow the format \"deadline [description] /by [date]\" where [date]","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"Bandov"},"content":"     * is in the \"yyyy-MM-dd\" format.","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"Bandov"},"content":"     * Throws an exception if the command syntax is incorrect or the date format does not match the expected pattern.","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"Bandov"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"Bandov"},"content":"     * @param list The task list to which the new Deadline task will be added.","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"Bandov"},"content":"     * @param message The user input containing the command and its arguments.","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"Bandov"},"content":"     * @return A string response indicating the successful addition of the Deadline task to the list,","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"Bandov"},"content":"     *         along with a count of the total tasks now present.","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"Bandov"},"content":"     * @throws DukeException If the deadline date/time is missing, or the date format is incorrect.","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"Bandov"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":56,"author":{"gitId":"Bandov"},"content":"    public static String handleDeadline(TaskList list, String message) throws DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"Bandov"},"content":"        String[] parts \u003d message.split(\"/by\", 2);","lastModifiedDate":"2024-01-25"},{"lineNumber":58,"author":{"gitId":"Bandov"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2024-01-25"},{"lineNumber":59,"author":{"gitId":"Bandov"},"content":"            throw new DukeException(\"OOPS!!! The deadline date/time is missing buddy.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":60,"author":{"gitId":"Bandov"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":61,"author":{"gitId":"Bandov"},"content":"        String description \u003d parts[0].substring(9).trim();","lastModifiedDate":"2024-01-25"},{"lineNumber":62,"author":{"gitId":"Bandov"},"content":"        String by \u003d parts[1].trim();","lastModifiedDate":"2024-01-25"},{"lineNumber":63,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":64,"author":{"gitId":"Bandov"},"content":"        Deadline task;","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"Bandov"},"content":"        try {","lastModifiedDate":"2024-01-25"},{"lineNumber":66,"author":{"gitId":"Bandov"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-01-25"},{"lineNumber":67,"author":{"gitId":"Bandov"},"content":"            LocalDate date \u003d LocalDate.parse(by, formatter);","lastModifiedDate":"2024-01-25"},{"lineNumber":68,"author":{"gitId":"Bandov"},"content":"            task \u003d new Deadline(description, date);","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"Bandov"},"content":"            list.add(task);","lastModifiedDate":"2024-01-25"},{"lineNumber":70,"author":{"gitId":"Bandov"},"content":"            Ui.printWithLines(\"Got it. I\u0027ve added this task:\", task.toString(),","lastModifiedDate":"2024-01-27"},{"lineNumber":71,"author":{"gitId":"Bandov"},"content":"                    \"Now you have \" + list.size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-27"},{"lineNumber":72,"author":{"gitId":"Bandov"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":73,"author":{"gitId":"Bandov"},"content":"            throw new DukeException(\"OOPS!!! The deadline date format is incorrect. Please use yyyy-MM-dd format.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":74,"author":{"gitId":"Bandov"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":75,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"Bandov"},"content":"        return String.format(\"Got it. I\u0027ve added this task:\\n%s\\nNow you have %d tasks in the list.\",","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"Bandov"},"content":"                task, list.size());","lastModifiedDate":"2024-02-05"},{"lineNumber":78,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":79,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":80,"author":{"gitId":"Bandov"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":81,"author":{"gitId":"Bandov"},"content":"     * Parses the user input for an \"event\" command, creating and adding a new Event task to the task","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"Bandov"},"content":"     * list with specified start and end times.","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"Bandov"},"content":"     * The command should follow the format \"event [description] /from [start time] /to [end time]\"","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"Bandov"},"content":"     * where the time is in the \"yyyy-MM-dd HH:mm\" format.","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"Bandov"},"content":"     * Throws an exception if the command syntax is incorrect or the time format does not match the expected pattern.","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"Bandov"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":87,"author":{"gitId":"Bandov"},"content":"     * @param list The task list to which the new Event task will be added.","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"Bandov"},"content":"     * @param message The user input containing the command and its arguments.","lastModifiedDate":"2024-02-03"},{"lineNumber":89,"author":{"gitId":"Bandov"},"content":"     * @return A string response indicating the successful addition of the Event task to the list,","lastModifiedDate":"2024-02-03"},{"lineNumber":90,"author":{"gitId":"Bandov"},"content":"     *         along with a count of the total tasks now present.","lastModifiedDate":"2024-02-03"},{"lineNumber":91,"author":{"gitId":"Bandov"},"content":"     * @throws DukeException If the event time is missing, incomplete, or incorrectly formatted.","lastModifiedDate":"2024-02-03"},{"lineNumber":92,"author":{"gitId":"Bandov"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":93,"author":{"gitId":"Bandov"},"content":"    public static String handleEvent(TaskList list, String message) throws DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":94,"author":{"gitId":"Bandov"},"content":"        String[] parts \u003d message.split(\" /from \", 2);","lastModifiedDate":"2024-01-25"},{"lineNumber":95,"author":{"gitId":"Bandov"},"content":"        if (parts.length \u003c 2 || !parts[1].contains(\" /to \")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":96,"author":{"gitId":"Bandov"},"content":"            throw new DukeException(\"OOPS!!! The event time is missing or incomplete buddy.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":97,"author":{"gitId":"Bandov"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":98,"author":{"gitId":"Bandov"},"content":"        String description \u003d parts[0].substring(6).trim();","lastModifiedDate":"2024-01-25"},{"lineNumber":99,"author":{"gitId":"Bandov"},"content":"        String[] timeParts \u003d parts[1].split(\" /to \", 2);","lastModifiedDate":"2024-01-25"},{"lineNumber":100,"author":{"gitId":"Bandov"},"content":"        String fromTime \u003d timeParts[0].trim();","lastModifiedDate":"2024-01-25"},{"lineNumber":101,"author":{"gitId":"Bandov"},"content":"        String toTime \u003d timeParts[1].trim();","lastModifiedDate":"2024-01-25"},{"lineNumber":102,"author":{"gitId":"Bandov"},"content":"        Event task;","lastModifiedDate":"2024-02-03"},{"lineNumber":103,"author":{"gitId":"Bandov"},"content":"        try {","lastModifiedDate":"2024-01-25"},{"lineNumber":104,"author":{"gitId":"Bandov"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2024-01-25"},{"lineNumber":105,"author":{"gitId":"Bandov"},"content":"            LocalDateTime dateTimeFrom \u003d LocalDateTime.parse(fromTime, formatter);","lastModifiedDate":"2024-01-25"},{"lineNumber":106,"author":{"gitId":"Bandov"},"content":"            LocalDateTime dateTimeTo \u003d LocalDateTime.parse(toTime, formatter);","lastModifiedDate":"2024-01-25"},{"lineNumber":107,"author":{"gitId":"Bandov"},"content":"            task \u003d new Event(description, dateTimeFrom, dateTimeTo);","lastModifiedDate":"2024-02-03"},{"lineNumber":108,"author":{"gitId":"Bandov"},"content":"            list.add(task);","lastModifiedDate":"2024-01-25"},{"lineNumber":109,"author":{"gitId":"Bandov"},"content":"            Ui.printWithLines(\"Got it. I\u0027ve added this task:\", task.toString(),","lastModifiedDate":"2024-01-27"},{"lineNumber":110,"author":{"gitId":"Bandov"},"content":"                    \"Now you have \" + list.size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-27"},{"lineNumber":111,"author":{"gitId":"Bandov"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":112,"author":{"gitId":"Bandov"},"content":"            throw new DukeException(\"OOPS!!! The deadline date format is incorrect. \"","lastModifiedDate":"2024-01-27"},{"lineNumber":113,"author":{"gitId":"Bandov"},"content":"                    + \"Please use yyyy-MM-dd HH:mm format.\");","lastModifiedDate":"2024-01-27"},{"lineNumber":114,"author":{"gitId":"Bandov"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":115,"author":{"gitId":"Bandov"},"content":"        return String.format(\"Got it. I\u0027ve added this task:\\n%s\\nNow you have %d tasks in the list.\",","lastModifiedDate":"2024-02-03"},{"lineNumber":116,"author":{"gitId":"Bandov"},"content":"                task, list.size());","lastModifiedDate":"2024-02-05"},{"lineNumber":117,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":118,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":119,"author":{"gitId":"Bandov"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":120,"author":{"gitId":"Bandov"},"content":"     * Generates a string representation of all tasks currently in the task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":121,"author":{"gitId":"Bandov"},"content":"     * This method is used to handle the \"list\" command, displaying each task with its index.","lastModifiedDate":"2024-02-03"},{"lineNumber":122,"author":{"gitId":"Bandov"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":123,"author":{"gitId":"Bandov"},"content":"     * @param list The task list to be displayed.","lastModifiedDate":"2024-02-03"},{"lineNumber":124,"author":{"gitId":"Bandov"},"content":"     * @return A string listing all tasks in the task list, each prefixed by its index number.","lastModifiedDate":"2024-02-03"},{"lineNumber":125,"author":{"gitId":"Bandov"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":126,"author":{"gitId":"Bandov"},"content":"    public static String handleList(TaskList list) {","lastModifiedDate":"2024-02-03"},{"lineNumber":127,"author":{"gitId":"Bandov"},"content":"        StringBuilder response \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2024-02-03"},{"lineNumber":128,"author":{"gitId":"Bandov"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2024-01-25"},{"lineNumber":129,"author":{"gitId":"Bandov"},"content":"            response.append(String.format(\"%d. %s\\n\", i + 1, list.get(i).toString()));","lastModifiedDate":"2024-02-03"},{"lineNumber":130,"author":{"gitId":"Bandov"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":131,"author":{"gitId":"Bandov"},"content":"        return response.toString().trim();","lastModifiedDate":"2024-02-03"},{"lineNumber":132,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":133,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":134,"author":{"gitId":"Bandov"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":135,"author":{"gitId":"Bandov"},"content":"     * Marks a specified task in the task list as done. The task to be marked is specified by an index number","lastModifiedDate":"2024-02-03"},{"lineNumber":136,"author":{"gitId":"Bandov"},"content":"     * following the \"mark\" command. Throws an exception if the index is missing or invalid.","lastModifiedDate":"2024-02-03"},{"lineNumber":137,"author":{"gitId":"Bandov"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":138,"author":{"gitId":"Bandov"},"content":"     * @param list The task list containing the task to mark.","lastModifiedDate":"2024-02-03"},{"lineNumber":139,"author":{"gitId":"Bandov"},"content":"     * @param message The user input containing the command and the index of the task to be marked.","lastModifiedDate":"2024-02-03"},{"lineNumber":140,"author":{"gitId":"Bandov"},"content":"     * @return A string response indicating the task has been successfully marked as done.","lastModifiedDate":"2024-02-03"},{"lineNumber":141,"author":{"gitId":"Bandov"},"content":"     * @throws DukeException If the task number is missing or invalid.","lastModifiedDate":"2024-01-27"},{"lineNumber":142,"author":{"gitId":"Bandov"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":143,"author":{"gitId":"Bandov"},"content":"    public static String handleMark(TaskList list, String message) throws DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":144,"author":{"gitId":"Bandov"},"content":"        if (message.trim().equals(\"mark\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":145,"author":{"gitId":"Bandov"},"content":"            throw new DukeException(\"OOPS!!! The task number is missing buddy.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":146,"author":{"gitId":"Bandov"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":147,"author":{"gitId":"Bandov"},"content":"        int index \u003d Integer.parseInt(message.substring(5).trim()) - 1;","lastModifiedDate":"2024-01-25"},{"lineNumber":148,"author":{"gitId":"Bandov"},"content":"        if (index \u003c 0 || index \u003e\u003d list.size()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":149,"author":{"gitId":"Bandov"},"content":"            throw new DukeException(\"OOPS!!! Task number is invalid buddy.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":150,"author":{"gitId":"Bandov"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":151,"author":{"gitId":"Bandov"},"content":"        Task task \u003d list.get(index);","lastModifiedDate":"2024-01-25"},{"lineNumber":152,"author":{"gitId":"Bandov"},"content":"        task.markAsDone();","lastModifiedDate":"2024-01-25"},{"lineNumber":153,"author":{"gitId":"Bandov"},"content":"        Ui.printWithLines(\"Nice! I\u0027ve marked this task as done:\", task.toString());","lastModifiedDate":"2024-01-25"},{"lineNumber":154,"author":{"gitId":"Bandov"},"content":"        return String.format(\"Nice! I\u0027ve marked this task as done:\\n%s\", task);","lastModifiedDate":"2024-02-05"},{"lineNumber":155,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":156,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":157,"author":{"gitId":"Bandov"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":158,"author":{"gitId":"Bandov"},"content":"     * Marks a specified task in the task list as not done. The task to be unmarked is specified by an index number","lastModifiedDate":"2024-02-03"},{"lineNumber":159,"author":{"gitId":"Bandov"},"content":"     * following the \"unmark\" command. Throws an exception if the index is missing or invalid.","lastModifiedDate":"2024-02-03"},{"lineNumber":160,"author":{"gitId":"Bandov"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":161,"author":{"gitId":"Bandov"},"content":"     * @param list The task list containing the task to unmark.","lastModifiedDate":"2024-02-03"},{"lineNumber":162,"author":{"gitId":"Bandov"},"content":"     * @param message The user input containing the command and the index of the task to be unmarked.","lastModifiedDate":"2024-02-03"},{"lineNumber":163,"author":{"gitId":"Bandov"},"content":"     * @return A string response indicating the task has been successfully marked as not done.","lastModifiedDate":"2024-02-03"},{"lineNumber":164,"author":{"gitId":"Bandov"},"content":"     * @throws DukeException If the task number is missing or invalid.","lastModifiedDate":"2024-01-27"},{"lineNumber":165,"author":{"gitId":"Bandov"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":166,"author":{"gitId":"Bandov"},"content":"    public static String handleUnmark(TaskList list, String message) throws DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":167,"author":{"gitId":"Bandov"},"content":"        if (message.trim().equals(\"unmark\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":168,"author":{"gitId":"Bandov"},"content":"            throw new DukeException(\"OOPS!!! The task number is missing buddy.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":169,"author":{"gitId":"Bandov"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":170,"author":{"gitId":"Bandov"},"content":"        int index \u003d Integer.parseInt(message.substring(7).trim()) - 1;","lastModifiedDate":"2024-01-25"},{"lineNumber":171,"author":{"gitId":"Bandov"},"content":"        if (index \u003c 0 || index \u003e\u003d list.size()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":172,"author":{"gitId":"Bandov"},"content":"            throw new DukeException(\"OOPS!!! Task number is invalid buddy.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":173,"author":{"gitId":"Bandov"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":174,"author":{"gitId":"Bandov"},"content":"        Task task \u003d list.get(index);","lastModifiedDate":"2024-01-25"},{"lineNumber":175,"author":{"gitId":"Bandov"},"content":"        task.unMarkAsDone();","lastModifiedDate":"2024-01-25"},{"lineNumber":176,"author":{"gitId":"Bandov"},"content":"        Ui.printWithLines(\"OK, I\u0027ve marked this task as not done yet:\", task.toString());","lastModifiedDate":"2024-01-25"},{"lineNumber":177,"author":{"gitId":"Bandov"},"content":"        return String.format(\"OK, I\u0027ve marked this task as not done yet:\\n%s\", task);","lastModifiedDate":"2024-02-05"},{"lineNumber":178,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":179,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":180,"author":{"gitId":"Bandov"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":181,"author":{"gitId":"Bandov"},"content":"     * Deletes a specified task from the task list. The task to be deleted is specified by an index number","lastModifiedDate":"2024-02-03"},{"lineNumber":182,"author":{"gitId":"Bandov"},"content":"     * following the \"delete\" command. Throws an exception if the index is missing or invalid.","lastModifiedDate":"2024-02-03"},{"lineNumber":183,"author":{"gitId":"Bandov"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":184,"author":{"gitId":"Bandov"},"content":"     * @param list The task list from which the task will be deleted.","lastModifiedDate":"2024-02-03"},{"lineNumber":185,"author":{"gitId":"Bandov"},"content":"     * @param message The user input containing the command and the index of the task to be deleted.","lastModifiedDate":"2024-02-03"},{"lineNumber":186,"author":{"gitId":"Bandov"},"content":"     * @return A string response indicating the task has been successfully deleted from the list.","lastModifiedDate":"2024-02-03"},{"lineNumber":187,"author":{"gitId":"Bandov"},"content":"     * @throws DukeException If the task number is missing or invalid.","lastModifiedDate":"2024-01-27"},{"lineNumber":188,"author":{"gitId":"Bandov"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":189,"author":{"gitId":"Bandov"},"content":"    public static String deleteTask(TaskList list, String message) throws DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":190,"author":{"gitId":"Bandov"},"content":"        if (message.trim().equals(\"delete\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":191,"author":{"gitId":"Bandov"},"content":"            throw new DukeException(\"OOPS!!! The task number is missing buddy.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":192,"author":{"gitId":"Bandov"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":193,"author":{"gitId":"Bandov"},"content":"        int index \u003d Integer.parseInt(message.substring(7).trim()) - 1;","lastModifiedDate":"2024-01-25"},{"lineNumber":194,"author":{"gitId":"Bandov"},"content":"        if (index \u003c 0 || index \u003e\u003d list.size()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":195,"author":{"gitId":"Bandov"},"content":"            throw new DukeException(\"OOPS!!! Task number is invalid buddy.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":196,"author":{"gitId":"Bandov"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":197,"author":{"gitId":"Bandov"},"content":"        Task task \u003d list.get(index);","lastModifiedDate":"2024-01-25"},{"lineNumber":198,"author":{"gitId":"Bandov"},"content":"        list.remove(index);","lastModifiedDate":"2024-01-25"},{"lineNumber":199,"author":{"gitId":"Bandov"},"content":"        Ui.printWithLines(\"OK, I\u0027ve deleted this task:\", task.toString());","lastModifiedDate":"2024-01-25"},{"lineNumber":200,"author":{"gitId":"Bandov"},"content":"        return String.format(\"OK, I\u0027ve deleted this task:\\n%s\", task);","lastModifiedDate":"2024-02-05"},{"lineNumber":201,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":202,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":203,"author":{"gitId":"Bandov"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":204,"author":{"gitId":"Bandov"},"content":"     * Finds and lists all tasks in the task list that contain the specified keyword. The keyword follows","lastModifiedDate":"2024-02-03"},{"lineNumber":205,"author":{"gitId":"Bandov"},"content":"     * the \"find\" command. Throws an exception if the keyword is missing.","lastModifiedDate":"2024-02-03"},{"lineNumber":206,"author":{"gitId":"Bandov"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":207,"author":{"gitId":"Bandov"},"content":"     * @param list The task list to search for matching tasks.","lastModifiedDate":"2024-01-27"},{"lineNumber":208,"author":{"gitId":"Bandov"},"content":"     * @param message The user input containing the command and the keyword for the search.","lastModifiedDate":"2024-02-03"},{"lineNumber":209,"author":{"gitId":"Bandov"},"content":"     * @return A string listing all tasks that match the keyword, each prefixed by its index number.","lastModifiedDate":"2024-02-03"},{"lineNumber":210,"author":{"gitId":"Bandov"},"content":"     * @throws DukeException If the keyword is missing.","lastModifiedDate":"2024-01-27"},{"lineNumber":211,"author":{"gitId":"Bandov"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":212,"author":{"gitId":"Bandov"},"content":"    public static String findTask(TaskList list, String message) throws DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":213,"author":{"gitId":"Bandov"},"content":"        if (message.trim().equals(\"find\")) {","lastModifiedDate":"2024-01-27"},{"lineNumber":214,"author":{"gitId":"Bandov"},"content":"            throw new DukeException(\"OOPS!!! The keyword is missing buddy.\");","lastModifiedDate":"2024-01-27"},{"lineNumber":215,"author":{"gitId":"Bandov"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":216,"author":{"gitId":"Bandov"},"content":"        String keyword \u003d message.substring(5).trim();","lastModifiedDate":"2024-01-27"},{"lineNumber":217,"author":{"gitId":"Bandov"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d list.find(keyword);","lastModifiedDate":"2024-01-27"},{"lineNumber":218,"author":{"gitId":"Bandov"},"content":"        StringBuilder response \u003d new StringBuilder();","lastModifiedDate":"2024-02-03"},{"lineNumber":219,"author":{"gitId":"Bandov"},"content":"        if (matchingTasks.size() \u003d\u003d 0) {","lastModifiedDate":"2024-01-27"},{"lineNumber":220,"author":{"gitId":"Bandov"},"content":"            response.append(\"No matching task found.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":221,"author":{"gitId":"Bandov"},"content":"        } else {","lastModifiedDate":"2024-01-27"},{"lineNumber":222,"author":{"gitId":"Bandov"},"content":"            response.append(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2024-02-03"},{"lineNumber":223,"author":{"gitId":"Bandov"},"content":"            for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2024-01-27"},{"lineNumber":224,"author":{"gitId":"Bandov"},"content":"                response.append(String.format(\"%d. %s\\n\", i + 1, matchingTasks.get(i).toString()));","lastModifiedDate":"2024-02-03"},{"lineNumber":225,"author":{"gitId":"Bandov"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":226,"author":{"gitId":"Bandov"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":227,"author":{"gitId":"Bandov"},"content":"        return response.toString().trim();","lastModifiedDate":"2024-02-03"},{"lineNumber":228,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":229,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":230,"author":{"gitId":"Bandov"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":231,"author":{"gitId":"Bandov"},"content":"     * Adds a tag to a specific task in the task list. The tag is added with a \"#\" prefix.","lastModifiedDate":"2024-02-09"},{"lineNumber":232,"author":{"gitId":"Bandov"},"content":"     * The input message is expected to be in the format \"[task number] /tag [tag]\",","lastModifiedDate":"2024-02-09"},{"lineNumber":233,"author":{"gitId":"Bandov"},"content":"     * where [task number] is the 1-based index of the task in the list and [tag] is the tag to be added.","lastModifiedDate":"2024-02-09"},{"lineNumber":234,"author":{"gitId":"Bandov"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":235,"author":{"gitId":"Bandov"},"content":"     * @param list The task list to which the tag will be added.","lastModifiedDate":"2024-02-09"},{"lineNumber":236,"author":{"gitId":"Bandov"},"content":"     * @param message The input message containing the task number and tag.","lastModifiedDate":"2024-02-09"},{"lineNumber":237,"author":{"gitId":"Bandov"},"content":"     * @return A confirmation message indicating the tag has been added to the specified task.","lastModifiedDate":"2024-02-09"},{"lineNumber":238,"author":{"gitId":"Bandov"},"content":"     * @throws DukeException If the input message format is incorrect, the task number is missing,","lastModifiedDate":"2024-02-09"},{"lineNumber":239,"author":{"gitId":"Bandov"},"content":"     *                       the task number is invalid (less than 1 or greater than the size of the task list),","lastModifiedDate":"2024-02-09"},{"lineNumber":240,"author":{"gitId":"Bandov"},"content":"     *                       or the tag is missing from the input message.","lastModifiedDate":"2024-02-09"},{"lineNumber":241,"author":{"gitId":"Bandov"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":242,"author":{"gitId":"Bandov"},"content":"    public static String handleTag(TaskList list, String message) throws DukeException {","lastModifiedDate":"2024-02-09"},{"lineNumber":243,"author":{"gitId":"Bandov"},"content":"        // Split the message on \" /tag \" to separate the command with the task number from the tag","lastModifiedDate":"2024-02-09"},{"lineNumber":244,"author":{"gitId":"Bandov"},"content":"        String[] parts \u003d message.split(\" /tag \");","lastModifiedDate":"2024-02-09"},{"lineNumber":245,"author":{"gitId":"Bandov"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2024-02-09"},{"lineNumber":246,"author":{"gitId":"Bandov"},"content":"            throw new DukeException(\"OOPS!!! The tag is missing buddy.\");","lastModifiedDate":"2024-02-09"},{"lineNumber":247,"author":{"gitId":"Bandov"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":248,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":249,"author":{"gitId":"Bandov"},"content":"        // Further split the first part to get the task number","lastModifiedDate":"2024-02-09"},{"lineNumber":250,"author":{"gitId":"Bandov"},"content":"        String[] commandParts \u003d parts[0].split(\" \");","lastModifiedDate":"2024-02-09"},{"lineNumber":251,"author":{"gitId":"Bandov"},"content":"        if (commandParts.length \u003c 2) {","lastModifiedDate":"2024-02-09"},{"lineNumber":252,"author":{"gitId":"Bandov"},"content":"            throw new DukeException(\"OOPS!!! The task number is missing buddy.\");","lastModifiedDate":"2024-02-09"},{"lineNumber":253,"author":{"gitId":"Bandov"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":254,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":255,"author":{"gitId":"Bandov"},"content":"        // Parse the task number and validate it","lastModifiedDate":"2024-02-09"},{"lineNumber":256,"author":{"gitId":"Bandov"},"content":"        int index \u003d Integer.parseInt(commandParts[1].trim()) - 1;","lastModifiedDate":"2024-02-09"},{"lineNumber":257,"author":{"gitId":"Bandov"},"content":"        if (index \u003c 0 || index \u003e\u003d list.size()) {","lastModifiedDate":"2024-02-09"},{"lineNumber":258,"author":{"gitId":"Bandov"},"content":"            throw new DukeException(\"OOPS!!! Task number is invalid buddy.\");","lastModifiedDate":"2024-02-09"},{"lineNumber":259,"author":{"gitId":"Bandov"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":260,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":261,"author":{"gitId":"Bandov"},"content":"        // Retrieve the task and add the tag with a \"#\" prefix","lastModifiedDate":"2024-02-09"},{"lineNumber":262,"author":{"gitId":"Bandov"},"content":"        Task task \u003d list.get(index);","lastModifiedDate":"2024-02-09"},{"lineNumber":263,"author":{"gitId":"Bandov"},"content":"        task.addTag(\"#\" + parts[1].trim());","lastModifiedDate":"2024-02-09"},{"lineNumber":264,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":265,"author":{"gitId":"Bandov"},"content":"        // Print the result and return the confirmation message","lastModifiedDate":"2024-02-09"},{"lineNumber":266,"author":{"gitId":"Bandov"},"content":"        Ui.printWithLines(\"OK, I\u0027ve added this tag to the task:\", task.toString());","lastModifiedDate":"2024-02-09"},{"lineNumber":267,"author":{"gitId":"Bandov"},"content":"        return String.format(\"OK, I\u0027ve added this tag to the task:\\n%s\", task);","lastModifiedDate":"2024-02-09"},{"lineNumber":268,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":269,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":270,"author":{"gitId":"Bandov"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":271,"author":{"gitId":"Bandov"},"content":"     * Removes a tag from a specific task in the task list. The task number is expected to be provided","lastModifiedDate":"2024-02-09"},{"lineNumber":272,"author":{"gitId":"Bandov"},"content":"     * in the input message in the format \"removetag [task number]\", where [task number] is the 1-based index","lastModifiedDate":"2024-02-09"},{"lineNumber":273,"author":{"gitId":"Bandov"},"content":"     * of the task in the list.","lastModifiedDate":"2024-02-09"},{"lineNumber":274,"author":{"gitId":"Bandov"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":275,"author":{"gitId":"Bandov"},"content":"     * @param list The task list from which the tag will be removed.","lastModifiedDate":"2024-02-09"},{"lineNumber":276,"author":{"gitId":"Bandov"},"content":"     * @param message The input message containing the task number from which the tag should be removed.","lastModifiedDate":"2024-02-09"},{"lineNumber":277,"author":{"gitId":"Bandov"},"content":"     * @return A confirmation message indicating the tag has been removed from the specified task.","lastModifiedDate":"2024-02-09"},{"lineNumber":278,"author":{"gitId":"Bandov"},"content":"     * @throws DukeException If the input message format is incorrect, the task number is missing,","lastModifiedDate":"2024-02-09"},{"lineNumber":279,"author":{"gitId":"Bandov"},"content":"     *                       or the task number is invalid (less than 1 or greater than the size of the task list).","lastModifiedDate":"2024-02-09"},{"lineNumber":280,"author":{"gitId":"Bandov"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":281,"author":{"gitId":"Bandov"},"content":"    public static String removeTag(TaskList list, String message) throws DukeException {","lastModifiedDate":"2024-02-09"},{"lineNumber":282,"author":{"gitId":"Bandov"},"content":"        if (message.trim().equals(\"removetag\")) {","lastModifiedDate":"2024-02-09"},{"lineNumber":283,"author":{"gitId":"Bandov"},"content":"            throw new DukeException(\"OOPS!!! The task number is missing buddy.\");","lastModifiedDate":"2024-02-09"},{"lineNumber":284,"author":{"gitId":"Bandov"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":285,"author":{"gitId":"Bandov"},"content":"        int index \u003d Integer.parseInt(message.substring(10).trim()) - 1;","lastModifiedDate":"2024-02-09"},{"lineNumber":286,"author":{"gitId":"Bandov"},"content":"        if (index \u003c 0 || index \u003e\u003d list.size()) {","lastModifiedDate":"2024-02-09"},{"lineNumber":287,"author":{"gitId":"Bandov"},"content":"            throw new DukeException(\"OOPS!!! Task number is invalid buddy.\");","lastModifiedDate":"2024-02-09"},{"lineNumber":288,"author":{"gitId":"Bandov"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":289,"author":{"gitId":"Bandov"},"content":"        Task task \u003d list.get(index);","lastModifiedDate":"2024-02-09"},{"lineNumber":290,"author":{"gitId":"Bandov"},"content":"        task.removeTag();","lastModifiedDate":"2024-02-09"},{"lineNumber":291,"author":{"gitId":"Bandov"},"content":"        Ui.printWithLines(\"OK, I\u0027ve removed the tag from this task:\", task.toString());","lastModifiedDate":"2024-02-09"},{"lineNumber":292,"author":{"gitId":"Bandov"},"content":"        return String.format(\"OK, I\u0027ve removed the tag from this task:\\n%s\", task);","lastModifiedDate":"2024-02-09"},{"lineNumber":293,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":294,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":295,"author":{"gitId":"Bandov"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"Bandov":295}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bandov"},"content":"package duke;","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"Bandov"},"content":"import java.io.File;","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"Bandov"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"Bandov"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"Bandov"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"Bandov"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"Bandov"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"Bandov"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"Bandov"},"content":" * The Storage class is responsible for handling file operations including","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"Bandov"},"content":" * loading tasks from a file and saving tasks to a file.","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"Bandov"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"Bandov"},"content":"public class Storage {","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"Bandov"},"content":"    protected static String filePath;","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"Bandov"},"content":"    protected Scanner scanner;","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"Bandov"},"content":"    protected File file;","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"Bandov"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"Bandov"},"content":"     * Creates a Storage object which initializes a Scanner for reading from a file.","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"Bandov"},"content":"     * The file path is specified by the provided string.","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"Bandov"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"Bandov"},"content":"     * @param filePath The file path of the storage file.","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"Bandov"},"content":"     * @throws DukeException If the file is not found.","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"Bandov"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"Bandov"},"content":"    public Storage(String filePath) throws DukeException {","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"Bandov"},"content":"        try {","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"Bandov"},"content":"            Storage.filePath \u003d filePath;","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"Bandov"},"content":"            this.file \u003d new File(filePath);","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"Bandov"},"content":"            // Attempt to create the file if it does not exist","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"Bandov"},"content":"            if (file.createNewFile()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"Bandov"},"content":"                System.out.println(\"File created: \" + file.getName());","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"Bandov"},"content":"            } else {","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"Bandov"},"content":"                System.out.println(\"File already exists.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"Bandov"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"Bandov"},"content":"            this.scanner \u003d new Scanner(file);","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"Bandov"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"Bandov"},"content":"            throw new DukeException(\"File not found: \" + filePath);","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"Bandov"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"Bandov"},"content":"            throw new DukeException(\"An error occurred while creating or opening the file: \" + filePath);","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"Bandov"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"Bandov"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":45,"author":{"gitId":"Bandov"},"content":"     * Writes the given text to a file at the specified file path.","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"Bandov"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"Bandov"},"content":"     * @param filePath The file path where the text is to be written.","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"Bandov"},"content":"     * @param textToAdd The text to write to the file.","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"Bandov"},"content":"     * @throws IOException If an I/O error occurs.","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"Bandov"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":51,"author":{"gitId":"Bandov"},"content":"    private static void writeToFile(String filePath, String textToAdd) throws IOException {","lastModifiedDate":"2024-01-25"},{"lineNumber":52,"author":{"gitId":"Bandov"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2024-01-25"},{"lineNumber":53,"author":{"gitId":"Bandov"},"content":"        FileWriter fw \u003d new FileWriter(file);","lastModifiedDate":"2024-01-25"},{"lineNumber":54,"author":{"gitId":"Bandov"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2024-01-25"},{"lineNumber":55,"author":{"gitId":"Bandov"},"content":"        fw.close();","lastModifiedDate":"2024-01-25"},{"lineNumber":56,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":57,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":58,"author":{"gitId":"Bandov"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":59,"author":{"gitId":"Bandov"},"content":"     * Saves the current list of tasks to the file.","lastModifiedDate":"2024-01-27"},{"lineNumber":60,"author":{"gitId":"Bandov"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":61,"author":{"gitId":"Bandov"},"content":"     * @param list The task list to be saved.","lastModifiedDate":"2024-01-27"},{"lineNumber":62,"author":{"gitId":"Bandov"},"content":"     * @throws IOException If an I/O error occurs during writing.","lastModifiedDate":"2024-01-27"},{"lineNumber":63,"author":{"gitId":"Bandov"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":64,"author":{"gitId":"Bandov"},"content":"    public static void saveCurrentList(TaskList list) throws IOException {","lastModifiedDate":"2024-01-25"},{"lineNumber":65,"author":{"gitId":"Bandov"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-01-25"},{"lineNumber":66,"author":{"gitId":"Bandov"},"content":"        for (Task task : list.getList()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":67,"author":{"gitId":"Bandov"},"content":"            sb.append(task.toFileString());","lastModifiedDate":"2024-01-25"},{"lineNumber":68,"author":{"gitId":"Bandov"},"content":"            sb.append(\"\\n\");","lastModifiedDate":"2024-01-25"},{"lineNumber":69,"author":{"gitId":"Bandov"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":70,"author":{"gitId":"Bandov"},"content":"        writeToFile(filePath, sb.toString());","lastModifiedDate":"2024-01-25"},{"lineNumber":71,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":72,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":73,"author":{"gitId":"Bandov"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":74,"author":{"gitId":"Bandov"},"content":"     * Loads tasks from the file and returns them as an ArrayList of Task objects.","lastModifiedDate":"2024-01-27"},{"lineNumber":75,"author":{"gitId":"Bandov"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":76,"author":{"gitId":"Bandov"},"content":"     * @return An ArrayList of Task objects.","lastModifiedDate":"2024-01-27"},{"lineNumber":77,"author":{"gitId":"Bandov"},"content":"     * @throws DukeException If an error occurs while reading from the file.","lastModifiedDate":"2024-01-27"},{"lineNumber":78,"author":{"gitId":"Bandov"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":79,"author":{"gitId":"Bandov"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2024-01-25"},{"lineNumber":80,"author":{"gitId":"Bandov"},"content":"        assert scanner !\u003d null : \"Scanner should not be null\";","lastModifiedDate":"2024-02-05"},{"lineNumber":81,"author":{"gitId":"Bandov"},"content":"        assert file !\u003d null : \"File should not be null\";","lastModifiedDate":"2024-02-05"},{"lineNumber":82,"author":{"gitId":"Bandov"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-25"},{"lineNumber":83,"author":{"gitId":"Bandov"},"content":"        while (scanner.hasNext()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":84,"author":{"gitId":"Bandov"},"content":"            String line \u003d scanner.nextLine();","lastModifiedDate":"2024-01-25"},{"lineNumber":85,"author":{"gitId":"Bandov"},"content":"            String type \u003d line.substring(0, 1);","lastModifiedDate":"2024-01-25"},{"lineNumber":86,"author":{"gitId":"Bandov"},"content":"            assert type.equals(\"T\") || type.equals(\"D\") || type.equals(\"E\") : \"Invalid task type\";","lastModifiedDate":"2024-02-05"},{"lineNumber":87,"author":{"gitId":"Bandov"},"content":"            switch (type) {","lastModifiedDate":"2024-01-25"},{"lineNumber":88,"author":{"gitId":"Bandov"},"content":"            case \"T\":","lastModifiedDate":"2024-01-25"},{"lineNumber":89,"author":{"gitId":"Bandov"},"content":"                list.add(Task.fromFileString(line));","lastModifiedDate":"2024-01-25"},{"lineNumber":90,"author":{"gitId":"Bandov"},"content":"                break;","lastModifiedDate":"2024-01-25"},{"lineNumber":91,"author":{"gitId":"Bandov"},"content":"            case \"D\":","lastModifiedDate":"2024-01-25"},{"lineNumber":92,"author":{"gitId":"Bandov"},"content":"                list.add(Deadline.fromFileString(line));","lastModifiedDate":"2024-01-25"},{"lineNumber":93,"author":{"gitId":"Bandov"},"content":"                break;","lastModifiedDate":"2024-01-25"},{"lineNumber":94,"author":{"gitId":"Bandov"},"content":"            case \"E\":","lastModifiedDate":"2024-01-25"},{"lineNumber":95,"author":{"gitId":"Bandov"},"content":"                list.add(Event.fromFileString(line));","lastModifiedDate":"2024-01-25"},{"lineNumber":96,"author":{"gitId":"Bandov"},"content":"                break;","lastModifiedDate":"2024-01-25"},{"lineNumber":97,"author":{"gitId":"Bandov"},"content":"            default:","lastModifiedDate":"2024-01-27"},{"lineNumber":98,"author":{"gitId":"Bandov"},"content":"                throw new DukeException(\"Error loading file\");","lastModifiedDate":"2024-01-27"},{"lineNumber":99,"author":{"gitId":"Bandov"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":100,"author":{"gitId":"Bandov"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":101,"author":{"gitId":"Bandov"},"content":"        return list;","lastModifiedDate":"2024-01-25"},{"lineNumber":102,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":103,"author":{"gitId":"Bandov"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"Bandov":103}},{"path":"src/main/java/duke/Tag.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bandov"},"content":"package duke;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"Bandov"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"Bandov"},"content":" * Represents a tag that can be associated with a task. A tag is a simple label that helps to categorize or","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"Bandov"},"content":" * mark tasks for easy identification or grouping.","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"Bandov"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"Bandov"},"content":"public class Tag {","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"Bandov"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"Bandov"},"content":"     * The name of the tag.","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"Bandov"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"Bandov"},"content":"    private String tagName;","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"Bandov"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"Bandov"},"content":"     * Constructs a new Tag with the specified name.","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"Bandov"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"Bandov"},"content":"     * @param tagName The name of the tag. This name is used to identify or categorize tasks.","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"Bandov"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"Bandov"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"Bandov"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"Bandov"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"Bandov"},"content":"     * Returns the name of the tag.","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"Bandov"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"Bandov"},"content":"     * @return The name of the tag.","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"Bandov"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"Bandov"},"content":"    public String getTagName() {","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"Bandov"},"content":"        return tagName;","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"Bandov"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"Bandov":30}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bandov"},"content":"package duke;","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"Bandov"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"Bandov"},"content":" * Represents a task with a description and a completion status.","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"Bandov"},"content":" * This class serves as the base class for more specific types of tasks.","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"Bandov"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"Bandov"},"content":"public class Task {","lastModifiedDate":"2024-01-20"},{"lineNumber":8,"author":{"gitId":"Bandov"},"content":"    protected String description;","lastModifiedDate":"2024-01-20"},{"lineNumber":9,"author":{"gitId":"Bandov"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-20"},{"lineNumber":10,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":11,"author":{"gitId":"Bandov"},"content":"    protected Tag tag;","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"Bandov"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"Bandov"},"content":"     * Constructs a Task with the specified description. The task is initially not done.","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"Bandov"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"Bandov"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"Bandov"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"Bandov"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-20"},{"lineNumber":19,"author":{"gitId":"Bandov"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-20"},{"lineNumber":20,"author":{"gitId":"Bandov"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-20"},{"lineNumber":21,"author":{"gitId":"Bandov"},"content":"        this.tag \u003d null;","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":23,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":24,"author":{"gitId":"Bandov"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"Bandov"},"content":"     * Returns the description of the task.","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"Bandov"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"Bandov"},"content":"     * @return The description of the task.","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"Bandov"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"Bandov"},"content":"    public String getDescription() {","lastModifiedDate":"2024-01-20"},{"lineNumber":30,"author":{"gitId":"Bandov"},"content":"        return description;","lastModifiedDate":"2024-01-20"},{"lineNumber":31,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":32,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":33,"author":{"gitId":"Bandov"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"Bandov"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"Bandov"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"Bandov"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-20"},{"lineNumber":37,"author":{"gitId":"Bandov"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-01-20"},{"lineNumber":38,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":39,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":40,"author":{"gitId":"Bandov"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"Bandov"},"content":"     * Marks the task as not done.","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"Bandov"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"Bandov"},"content":"    public void unMarkAsDone() {","lastModifiedDate":"2024-01-20"},{"lineNumber":44,"author":{"gitId":"Bandov"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-01-20"},{"lineNumber":45,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":46,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":47,"author":{"gitId":"Bandov"},"content":"    public boolean isDone() {","lastModifiedDate":"2024-02-17"},{"lineNumber":48,"author":{"gitId":"Bandov"},"content":"        return isDone;","lastModifiedDate":"2024-02-17"},{"lineNumber":49,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":50,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":51,"author":{"gitId":"Bandov"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"Bandov"},"content":"     * Returns a string representation of the task,","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"Bandov"},"content":"     * including its type, completion status, and description.","lastModifiedDate":"2024-01-27"},{"lineNumber":54,"author":{"gitId":"Bandov"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":55,"author":{"gitId":"Bandov"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2024-01-27"},{"lineNumber":56,"author":{"gitId":"Bandov"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":57,"author":{"gitId":"Bandov"},"content":"    @Override","lastModifiedDate":"2024-01-20"},{"lineNumber":58,"author":{"gitId":"Bandov"},"content":"    public String toString() {","lastModifiedDate":"2024-01-20"},{"lineNumber":59,"author":{"gitId":"Bandov"},"content":"        return \"[T]\" + (isDone ? \"[X] \" : \"[ ] \") + description + (tag \u003d\u003d null ? \"\" : \" \" + tag.getTagName());","lastModifiedDate":"2024-02-09"},{"lineNumber":60,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":61,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":62,"author":{"gitId":"Bandov"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":63,"author":{"gitId":"Bandov"},"content":"     * Returns a string representation of the task formatted for file storage,","lastModifiedDate":"2024-01-27"},{"lineNumber":64,"author":{"gitId":"Bandov"},"content":"     * including its type, completion status, and description.","lastModifiedDate":"2024-01-27"},{"lineNumber":65,"author":{"gitId":"Bandov"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":66,"author":{"gitId":"Bandov"},"content":"     * @return A string formatted for file storage.","lastModifiedDate":"2024-01-27"},{"lineNumber":67,"author":{"gitId":"Bandov"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":68,"author":{"gitId":"Bandov"},"content":"    public String toFileString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":69,"author":{"gitId":"Bandov"},"content":"        return \"T\" + \" | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + (tag \u003d\u003d null ? \"\" : \" | \" + tag.getTagName());","lastModifiedDate":"2024-02-09"},{"lineNumber":70,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":71,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":72,"author":{"gitId":"Bandov"},"content":"    public void addTag(String tag) {","lastModifiedDate":"2024-02-09"},{"lineNumber":73,"author":{"gitId":"Bandov"},"content":"        this.tag \u003d new Tag(tag);","lastModifiedDate":"2024-02-09"},{"lineNumber":74,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":75,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":76,"author":{"gitId":"Bandov"},"content":"    public void removeTag() {","lastModifiedDate":"2024-02-09"},{"lineNumber":77,"author":{"gitId":"Bandov"},"content":"        this.tag \u003d null;","lastModifiedDate":"2024-02-09"},{"lineNumber":78,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":79,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":80,"author":{"gitId":"Bandov"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":81,"author":{"gitId":"Bandov"},"content":"     * Returns a Task instance from the string representation of the task stored in the file.","lastModifiedDate":"2024-01-27"},{"lineNumber":82,"author":{"gitId":"Bandov"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":83,"author":{"gitId":"Bandov"},"content":"     * @param str The string representation of the task stored in the file.","lastModifiedDate":"2024-01-27"},{"lineNumber":84,"author":{"gitId":"Bandov"},"content":"     * @return The Task instance from the string representation of the task stored in the file.","lastModifiedDate":"2024-01-27"},{"lineNumber":85,"author":{"gitId":"Bandov"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":86,"author":{"gitId":"Bandov"},"content":"    public static Task fromFileString(String str) {","lastModifiedDate":"2024-01-25"},{"lineNumber":87,"author":{"gitId":"Bandov"},"content":"        String[] parts \u003d str.split(\" \\\\| \");","lastModifiedDate":"2024-01-25"},{"lineNumber":88,"author":{"gitId":"Bandov"},"content":"        if (!parts[0].equals(\"T\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":89,"author":{"gitId":"Bandov"},"content":"            return null;","lastModifiedDate":"2024-01-25"},{"lineNumber":90,"author":{"gitId":"Bandov"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":91,"author":{"gitId":"Bandov"},"content":"        String description \u003d parts[2].trim();","lastModifiedDate":"2024-01-25"},{"lineNumber":92,"author":{"gitId":"Bandov"},"content":"        boolean isDone \u003d parts[1].trim().equals(\"1\");","lastModifiedDate":"2024-01-25"},{"lineNumber":93,"author":{"gitId":"Bandov"},"content":"        Task task \u003d new Task(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":94,"author":{"gitId":"Bandov"},"content":"        if (isDone) {","lastModifiedDate":"2024-01-27"},{"lineNumber":95,"author":{"gitId":"Bandov"},"content":"            task.markAsDone();","lastModifiedDate":"2024-01-27"},{"lineNumber":96,"author":{"gitId":"Bandov"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":97,"author":{"gitId":"Bandov"},"content":"        if (parts.length \u003e 3) {","lastModifiedDate":"2024-02-09"},{"lineNumber":98,"author":{"gitId":"Bandov"},"content":"            task.tag \u003d new Tag(parts[3].trim());","lastModifiedDate":"2024-02-09"},{"lineNumber":99,"author":{"gitId":"Bandov"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":100,"author":{"gitId":"Bandov"},"content":"        return task;","lastModifiedDate":"2024-01-25"},{"lineNumber":101,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":102,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":103,"author":{"gitId":"Bandov"},"content":"}","lastModifiedDate":"2024-01-20"}],"authorContributionMap":{"Bandov":103}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bandov"},"content":"package duke;","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"Bandov"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"Bandov"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"Bandov"},"content":" * The TaskList class represents a list of tasks.","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"Bandov"},"content":" * It encapsulates an ArrayList of Task objects and","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"Bandov"},"content":" * provides methods to manipulate the list.","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"Bandov"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"Bandov"},"content":"public class TaskList {","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"Bandov"},"content":"    private final ArrayList\u003cTask\u003e list;","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"Bandov"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"Bandov"},"content":"     * Constructs a TaskList with the specified list of tasks.","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"Bandov"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"Bandov"},"content":"     * @param list An ArrayList of Task objects.","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"Bandov"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"Bandov"},"content":"    public TaskList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"Bandov"},"content":"        this.list \u003d list;","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"Bandov"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"Bandov"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"Bandov"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"Bandov"},"content":"    public TaskList() {","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"Bandov"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"Bandov"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"Bandov"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"Bandov"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"Bandov"},"content":"     * @param task The Task object to be added.","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"Bandov"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"Bandov"},"content":"    public void add(Task task) {","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"Bandov"},"content":"        list.add(task);","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"Bandov"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"Bandov"},"content":"     * Removes a task from the task list at the specified index.","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"Bandov"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"Bandov"},"content":"     * @param index The index of the task to be removed.","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"Bandov"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"Bandov"},"content":"    public void remove(int index) {","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"Bandov"},"content":"        list.remove(index);","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"Bandov"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"Bandov"},"content":"     * Retrieves a task from the task list at the specified index.","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"Bandov"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"Bandov"},"content":"     * @param index The index of the task to be retrieved.","lastModifiedDate":"2024-01-27"},{"lineNumber":51,"author":{"gitId":"Bandov"},"content":"     * @return The Task object at the specified index.","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"Bandov"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"Bandov"},"content":"    public Task get(int index) {","lastModifiedDate":"2024-01-25"},{"lineNumber":54,"author":{"gitId":"Bandov"},"content":"        return list.get(index);","lastModifiedDate":"2024-01-25"},{"lineNumber":55,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":56,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":57,"author":{"gitId":"Bandov"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":58,"author":{"gitId":"Bandov"},"content":"     * Returns the number of tasks in the task list.","lastModifiedDate":"2024-01-27"},{"lineNumber":59,"author":{"gitId":"Bandov"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":60,"author":{"gitId":"Bandov"},"content":"     * @return The size of the task list.","lastModifiedDate":"2024-01-27"},{"lineNumber":61,"author":{"gitId":"Bandov"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":62,"author":{"gitId":"Bandov"},"content":"    public int size() {","lastModifiedDate":"2024-01-25"},{"lineNumber":63,"author":{"gitId":"Bandov"},"content":"        return list.size();","lastModifiedDate":"2024-01-25"},{"lineNumber":64,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":65,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":66,"author":{"gitId":"Bandov"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":67,"author":{"gitId":"Bandov"},"content":"     * Returns the ArrayList containing all the tasks.","lastModifiedDate":"2024-01-27"},{"lineNumber":68,"author":{"gitId":"Bandov"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":69,"author":{"gitId":"Bandov"},"content":"     * @return An ArrayList of Task objects.","lastModifiedDate":"2024-01-27"},{"lineNumber":70,"author":{"gitId":"Bandov"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":71,"author":{"gitId":"Bandov"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2024-01-25"},{"lineNumber":72,"author":{"gitId":"Bandov"},"content":"        return list;","lastModifiedDate":"2024-01-25"},{"lineNumber":73,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":74,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":75,"author":{"gitId":"Bandov"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":76,"author":{"gitId":"Bandov"},"content":"     * Finds all tasks in the task list that contain the specified keyword.","lastModifiedDate":"2024-01-27"},{"lineNumber":77,"author":{"gitId":"Bandov"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":78,"author":{"gitId":"Bandov"},"content":"     * @param keyword The keyword to search for.","lastModifiedDate":"2024-01-27"},{"lineNumber":79,"author":{"gitId":"Bandov"},"content":"     * @return An ArrayList of Task objects that contain the keyword.","lastModifiedDate":"2024-01-27"},{"lineNumber":80,"author":{"gitId":"Bandov"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":81,"author":{"gitId":"Bandov"},"content":"    public ArrayList\u003cTask\u003e find(String keyword) {","lastModifiedDate":"2024-01-27"},{"lineNumber":82,"author":{"gitId":"Bandov"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-27"},{"lineNumber":83,"author":{"gitId":"Bandov"},"content":"        for (Task task : list) {","lastModifiedDate":"2024-01-27"},{"lineNumber":84,"author":{"gitId":"Bandov"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2024-01-27"},{"lineNumber":85,"author":{"gitId":"Bandov"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2024-01-27"},{"lineNumber":86,"author":{"gitId":"Bandov"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":87,"author":{"gitId":"Bandov"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":88,"author":{"gitId":"Bandov"},"content":"        return matchingTasks;","lastModifiedDate":"2024-01-27"},{"lineNumber":89,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":90,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":91,"author":{"gitId":"Bandov"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":92,"author":{"gitId":"Bandov"},"content":"     * Returns a string representation of the task list.","lastModifiedDate":"2024-01-27"},{"lineNumber":93,"author":{"gitId":"Bandov"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":94,"author":{"gitId":"Bandov"},"content":"     * @return A string representation of the task list.","lastModifiedDate":"2024-01-27"},{"lineNumber":95,"author":{"gitId":"Bandov"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":96,"author":{"gitId":"Bandov"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":97,"author":{"gitId":"Bandov"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":98,"author":{"gitId":"Bandov"},"content":"        return list.toString();","lastModifiedDate":"2024-01-25"},{"lineNumber":99,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":100,"author":{"gitId":"Bandov"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"Bandov":100}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bandov"},"content":"package duke;","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"Bandov"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"Bandov"},"content":" * The Ui class is responsible for handling user interactions.","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"Bandov"},"content":" * It provides methods to display messages to the user and parse user input.","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"Bandov"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"Bandov"},"content":"public class Ui {","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"Bandov"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"Bandov"},"content":"     * Prints one or more messages to the console, each separated by a line.","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"Bandov"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"Bandov"},"content":"     * @param messages An array of messages to be printed.","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"Bandov"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"Bandov"},"content":"    public static void printWithLines(String... messages) {","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"Bandov"},"content":"        System.out.println(\"------------------------------------------\");","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"Bandov"},"content":"        for (String message : messages) {","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"Bandov"},"content":"            System.out.println(message);","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"Bandov"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"Bandov"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"Bandov"},"content":"     * Displays an error message when there is an error loading the file.","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"Bandov"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"Bandov"},"content":"    public static void showLoadingError() {","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"Bandov"},"content":"        printWithLines(\"Error loading file\");","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"Bandov"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"Bandov"},"content":"     * Parses and processes user input, delegating to specific handler methods based on the command.","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"Bandov"},"content":"     * This method serves as the central point of command processing for the application, routing","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"Bandov"},"content":"     * different commands like \"todo\", \"deadline\", \"event\", \"list\", \"mark\", \"unmark\", \"delete\", and \"find\"","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"Bandov"},"content":"     * to their respective handler methods. It also handles the \"bye\" command directly. If the command","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"Bandov"},"content":"     * does not match any known command, it throws a DukeException indicating that the command is unknown.","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"Bandov"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"Bandov"},"content":"     * @param list The task list that the commands will operate on. This could involve adding, deleting,","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"Bandov"},"content":"     *             marking, unmarking tasks, listing tasks, or finding tasks within the list.","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"Bandov"},"content":"     * @param message The raw user input containing the command and any arguments. The format and presence","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"Bandov"},"content":"     *                of arguments depend on the specific command. For example, \"todo\" commands expect a task","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"Bandov"},"content":"     *                description, \"deadline\" and \"event\" commands expect descriptions and dates/times, while","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"Bandov"},"content":"     *                \"mark\" and \"unmark\" commands expect a task number.","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"Bandov"},"content":"     * @return A string response generated by the specific command handler. This response could confirm","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"Bandov"},"content":"     *         the execution of a command, list tasks, show an error message, or say goodbye in the case","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"Bandov"},"content":"     *         of the \"bye\" command.","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"Bandov"},"content":"     * @throws DukeException If the user input is invalid for the given command, such as missing arguments","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"Bandov"},"content":"     *                       for \"todo\", \"deadline\", or \"event\", an invalid task number for \"mark\" or \"unmark\",","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"Bandov"},"content":"     *                       or if the command is unrecognized. The exception message is specific to the error","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"Bandov"},"content":"     *                       encountered, providing feedback to the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"Bandov"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"Bandov"},"content":"    public static String parse(TaskList list, String message) throws DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"Bandov"},"content":"        try {","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"Bandov"},"content":"            if (message.startsWith(\"todo\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"Bandov"},"content":"                return Parser.handleTodo(list, message);","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"Bandov"},"content":"            } else if (message.startsWith(\"deadline\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":53,"author":{"gitId":"Bandov"},"content":"                return Parser.handleDeadline(list, message);","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"Bandov"},"content":"            } else if (message.startsWith(\"event\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":55,"author":{"gitId":"Bandov"},"content":"                return Parser.handleEvent(list, message);","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"Bandov"},"content":"            } else if (message.equals(\"list\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":57,"author":{"gitId":"Bandov"},"content":"                return Parser.handleList(list);","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"Bandov"},"content":"            } else if (message.startsWith(\"mark\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":59,"author":{"gitId":"Bandov"},"content":"                return Parser.handleMark(list, message);","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"Bandov"},"content":"            } else if (message.startsWith(\"unmark\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":61,"author":{"gitId":"Bandov"},"content":"                return Parser.handleUnmark(list, message);","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"Bandov"},"content":"            } else if (message.startsWith(\"delete\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":63,"author":{"gitId":"Bandov"},"content":"                return Parser.deleteTask(list, message);","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"Bandov"},"content":"            } else if (message.startsWith(\"find\")) {","lastModifiedDate":"2024-01-27"},{"lineNumber":65,"author":{"gitId":"Bandov"},"content":"                return Parser.findTask(list, message);","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"Bandov"},"content":"            } else if (message.equals(\"bye\")) {","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"Bandov"},"content":"                return \"Bye! Hope to see you again soon!\";","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"Bandov"},"content":"            } else if (message.startsWith(\"tag\")) {","lastModifiedDate":"2024-02-09"},{"lineNumber":69,"author":{"gitId":"Bandov"},"content":"                return Parser.handleTag(list, message);","lastModifiedDate":"2024-02-09"},{"lineNumber":70,"author":{"gitId":"Bandov"},"content":"            } else if (message.startsWith(\"removetag\")) {","lastModifiedDate":"2024-02-09"},{"lineNumber":71,"author":{"gitId":"Bandov"},"content":"                return Parser.removeTag(list, message);","lastModifiedDate":"2024-02-09"},{"lineNumber":72,"author":{"gitId":"Bandov"},"content":"            } else {","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"Bandov"},"content":"                throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2024-02-09"},{"lineNumber":74,"author":{"gitId":"Bandov"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":75,"author":{"gitId":"Bandov"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":76,"author":{"gitId":"Bandov"},"content":"            throw e;","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"Bandov"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":78,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":79,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":80,"author":{"gitId":"Bandov"},"content":"    public static String showWelcome() {","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"Bandov"},"content":"        return \"Hello! I\u0027m Bob!\\nWhat can I do for you?\";","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"Bandov"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"Bandov":84}},{"path":"src/main/java/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"Bandov"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"Bandov"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"Bandov"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"Bandov"},"content":"then","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"Bandov"},"content":"    mkdir ../bin","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"Bandov"},"content":"fi","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"Bandov"},"content":"# delete output from previous run","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"Bandov"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"Bandov"},"content":"then","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"Bandov"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"Bandov"},"content":"fi","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"Bandov"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"Bandov"},"content":"if ! javac -Xlint:none -d ../bin /Users/dom/ip/src/main/java/duke/Duke.java","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"Bandov"},"content":"then","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"Bandov"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"Bandov"},"content":"    exit 1","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"Bandov"},"content":"fi","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"Bandov"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"Bandov"},"content":"java Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"Bandov"},"content":"# compare the output to the expected output","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"Bandov"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"Bandov"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"Bandov"},"content":"then","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"Bandov"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"Bandov"},"content":"    exit 0","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"Bandov"},"content":"else","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"Bandov"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2024-01-24"},{"lineNumber":33,"author":{"gitId":"Bandov"},"content":"    exit 1","lastModifiedDate":"2024-01-24"},{"lineNumber":34,"author":{"gitId":"Bandov"},"content":"fi","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"Bandov":35}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Bandov"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Bandov"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"Bandov"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Bandov"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Bandov"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Bandov"},"content":"\u003c?import javafx.scene.layout.Priority?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Bandov"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Bandov"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Bandov"},"content":"        \u003c!-- Label with increased text size --\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"Bandov"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" HBox.hgrow\u003d\"ALWAYS\" maxWidth\u003d\"1.7976931348623157E308\" style\u003d\"-fx-font-size: 16px;\"/\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"Bandov"},"content":"        \u003c!-- ImageView will not grow and will have a fixed size --\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Bandov"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" HBox.hgrow\u003d\"NEVER\"/\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Bandov"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"Bandov"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Bandov"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Bandov"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Bandov"},"content":"    \u003cHBox.hgrow\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"Bandov"},"content":"        \u003c!-- This ensures that the dialog label can grow horizontally as much as it needs --\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"Bandov"},"content":"        \u003cPriority fx:value\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"Bandov"},"content":"    \u003c/HBox.hgrow\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"Bandov"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"Bandov":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Bandov"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Bandov"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"Bandov"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Bandov"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Bandov"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Bandov"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Bandov"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Bandov"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Bandov"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Bandov"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Bandov"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Bandov"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Bandov"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"Bandov"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: grey;\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"Bandov"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Bandov"},"content":"        \u003cHBox alignment\u003d\"CENTER\" spacing\u003d\"10\" prefHeight\u003d\"50.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: white;\"\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Bandov"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"Bandov"},"content":"                \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"Bandov"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"Bandov"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"Bandov"},"content":"                \u003cLabel fx:id\u003d\"botLabel\" text\u003d\"BobBot\" style\u003d\"-fx-text-fill: #333; -fx-font-size: 28px;\" HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"Bandov"},"content":"                \u003cImageView fx:id\u003d\"botImage\" fitHeight\u003d\"40.0\" fitWidth\u003d\"40.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" HBox.hgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"Bandov"},"content":"                    \u003cimage\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"Bandov"},"content":"                        \u003cImage url\u003d \"@../images/DaBot_transparent.png\" /\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"Bandov"},"content":"                    \u003c/image\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"Bandov"},"content":"                \u003c/ImageView\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"Bandov"},"content":"            \u003c/children\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"Bandov"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"Bandov"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" layoutY\u003d\"50.0\" hbarPolicy\u003d\"NEVER\" prefHeight\u003d\"508.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background: white; -fx-border-color: grey;\"\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":31,"author":{"gitId":"Bandov"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"Bandov"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" alignment\u003d\"CENTER\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: #d3d3d3;\"\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":33,"author":{"gitId":"Bandov"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"Bandov"},"content":"                        \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"Bandov"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"Bandov"},"content":"                \u003c/VBox\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"Bandov"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"Bandov"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"Bandov"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" style\u003d\"-fx-background-color: #ddd; -fx-text-fill: black; -fx-prompt-text-fill: gray;\" promptText\u003d\"Enter your command...\"\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"Bandov"},"content":"            \u003cfont\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"Bandov"},"content":"                \u003cFont size\u003d\"14.0\" /\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"Bandov"},"content":"            \u003c/font\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"Bandov"},"content":"        \u003c/TextField\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"Bandov"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" style\u003d\"-fx-background-color: #bbb; -fx-text-fill: black;\"\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"Bandov"},"content":"            \u003cfont\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"Bandov"},"content":"                \u003cFont size\u003d\"14.0\" /\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"Bandov"},"content":"            \u003c/font\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"Bandov"},"content":"        \u003c/Button\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"Bandov"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"Bandov"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"Bandov":50}},{"path":"src/test/java/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bandov"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"Bandov"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"Bandov"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"Bandov"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"Bandov"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"Bandov"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"Bandov"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"Bandov"},"content":"import duke.Deadline;","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"Bandov"},"content":"import duke.Tag;","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"Bandov"},"content":"class DeadlineTest {","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"Bandov"},"content":"    void testToString() {","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"Bandov"},"content":"        LocalDate date \u003d LocalDate.of(2024, 2, 13);","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"Bandov"},"content":"        Deadline deadline \u003d new Deadline(\"Submit report\", date);","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"Bandov"},"content":"        assertEquals(\"[D][ ] Submit report (by: 2024-02-13)\", deadline.toString(),","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"Bandov"},"content":"                \"toString does not match expected output without tag.\");","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":23,"author":{"gitId":"Bandov"},"content":"        deadline.addTag(\"Urgent\");","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"Bandov"},"content":"        assertEquals(\"[D][ ] Submit report (by: 2024-02-13) Urgent\", deadline.toString(),","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"Bandov"},"content":"                \"toString does not match expected output with tag.\");","lastModifiedDate":"2024-02-17"},{"lineNumber":26,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":27,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":28,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-02-17"},{"lineNumber":29,"author":{"gitId":"Bandov"},"content":"    void testToFileString() {","lastModifiedDate":"2024-02-17"},{"lineNumber":30,"author":{"gitId":"Bandov"},"content":"        LocalDate date \u003d LocalDate.of(2024, 2, 13);","lastModifiedDate":"2024-02-17"},{"lineNumber":31,"author":{"gitId":"Bandov"},"content":"        Deadline deadline \u003d new Deadline(\"Complete assignment\", date);","lastModifiedDate":"2024-02-17"},{"lineNumber":32,"author":{"gitId":"Bandov"},"content":"        assertEquals(\"D | 0 | Complete assignment | 2024-02-13\", deadline.toFileString(),","lastModifiedDate":"2024-02-17"},{"lineNumber":33,"author":{"gitId":"Bandov"},"content":"                \"toFileString does not match expected output without tag.\");","lastModifiedDate":"2024-02-17"},{"lineNumber":34,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":35,"author":{"gitId":"Bandov"},"content":"        deadline.markAsDone();","lastModifiedDate":"2024-02-17"},{"lineNumber":36,"author":{"gitId":"Bandov"},"content":"        assertEquals(\"D | 1 | Complete assignment | 2024-02-13\", deadline.toFileString(),","lastModifiedDate":"2024-02-17"},{"lineNumber":37,"author":{"gitId":"Bandov"},"content":"                \"toFileString does not match expected output for done task without tag.\");","lastModifiedDate":"2024-02-17"},{"lineNumber":38,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":39,"author":{"gitId":"Bandov"},"content":"        deadline.addTag(\"HighPriority\");","lastModifiedDate":"2024-02-17"},{"lineNumber":40,"author":{"gitId":"Bandov"},"content":"        assertEquals(\"D | 1 | Complete assignment | 2024-02-13 | HighPriority\", deadline.toFileString(),","lastModifiedDate":"2024-02-17"},{"lineNumber":41,"author":{"gitId":"Bandov"},"content":"                \"toFileString does not match expected output for done task with tag.\");","lastModifiedDate":"2024-02-17"},{"lineNumber":42,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":43,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":44,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-02-17"},{"lineNumber":45,"author":{"gitId":"Bandov"},"content":"    void testFromFileString() {","lastModifiedDate":"2024-02-17"},{"lineNumber":46,"author":{"gitId":"Bandov"},"content":"        String fileString \u003d \"D | 0 | Finish project | 2024-02-20\";","lastModifiedDate":"2024-02-17"},{"lineNumber":47,"author":{"gitId":"Bandov"},"content":"        Deadline deadline \u003d Deadline.fromFileString(fileString);","lastModifiedDate":"2024-02-17"},{"lineNumber":48,"author":{"gitId":"Bandov"},"content":"        assertNotNull(deadline, \"Deadline should not be null.\");","lastModifiedDate":"2024-02-17"},{"lineNumber":49,"author":{"gitId":"Bandov"},"content":"        assertEquals(\"Finish project\", deadline.getDescription(), \"Description does not match.\");","lastModifiedDate":"2024-02-17"},{"lineNumber":50,"author":{"gitId":"Bandov"},"content":"        assertEquals(\"2024-02-20\", deadline.getDate(), \"Date does not match.\");","lastModifiedDate":"2024-02-17"},{"lineNumber":51,"author":{"gitId":"Bandov"},"content":"        assertFalse(deadline.isDone(), \"Task should not be marked as done.\");","lastModifiedDate":"2024-02-17"},{"lineNumber":52,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":53,"author":{"gitId":"Bandov"},"content":"        String fileStringWithTag \u003d \"D | 1 | Review code | 2024-03-01 | CodeReview\";","lastModifiedDate":"2024-02-17"},{"lineNumber":54,"author":{"gitId":"Bandov"},"content":"        Deadline deadlineWithTag \u003d Deadline.fromFileString(fileStringWithTag);","lastModifiedDate":"2024-02-17"},{"lineNumber":55,"author":{"gitId":"Bandov"},"content":"        assertNotNull(deadlineWithTag, \"Deadline with tag should not be null.\");","lastModifiedDate":"2024-02-17"},{"lineNumber":56,"author":{"gitId":"Bandov"},"content":"        assertTrue(deadlineWithTag.isDone(), \"Task should be marked as done.\");","lastModifiedDate":"2024-02-17"},{"lineNumber":57,"author":{"gitId":"Bandov"},"content":"        Tag tag \u003d deadlineWithTag.getTag();","lastModifiedDate":"2024-02-17"},{"lineNumber":58,"author":{"gitId":"Bandov"},"content":"        assertEquals(\"CodeReview\", tag.getTagName(), \"Tag does not match.\");","lastModifiedDate":"2024-02-17"},{"lineNumber":59,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":60,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":61,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-02-17"},{"lineNumber":62,"author":{"gitId":"Bandov"},"content":"    void testAddAndRemoveTag() {","lastModifiedDate":"2024-02-17"},{"lineNumber":63,"author":{"gitId":"Bandov"},"content":"        LocalDate date \u003d LocalDate.of(2024, 2, 13);","lastModifiedDate":"2024-02-17"},{"lineNumber":64,"author":{"gitId":"Bandov"},"content":"        Deadline deadline \u003d new Deadline(\"Update documentation\", date);","lastModifiedDate":"2024-02-17"},{"lineNumber":65,"author":{"gitId":"Bandov"},"content":"        Tag tag \u003d deadline.getTag();","lastModifiedDate":"2024-02-17"},{"lineNumber":66,"author":{"gitId":"Bandov"},"content":"        assertNull(tag, \"Initially, tag should be null.\");","lastModifiedDate":"2024-02-17"},{"lineNumber":67,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":68,"author":{"gitId":"Bandov"},"content":"        deadline.addTag(\"Important\");","lastModifiedDate":"2024-02-17"},{"lineNumber":69,"author":{"gitId":"Bandov"},"content":"        Tag tag2 \u003d deadline.getTag();","lastModifiedDate":"2024-02-17"},{"lineNumber":70,"author":{"gitId":"Bandov"},"content":"        assertNotNull(tag2, \"Tag should not be null after adding.\");","lastModifiedDate":"2024-02-17"},{"lineNumber":71,"author":{"gitId":"Bandov"},"content":"        assertEquals(\"Important\", tag2.getTagName(), \"Tag name does not match after adding.\");","lastModifiedDate":"2024-02-17"},{"lineNumber":72,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":73,"author":{"gitId":"Bandov"},"content":"        deadline.removeTag();","lastModifiedDate":"2024-02-17"},{"lineNumber":74,"author":{"gitId":"Bandov"},"content":"        Tag tag3 \u003d deadline.getTag();","lastModifiedDate":"2024-02-17"},{"lineNumber":75,"author":{"gitId":"Bandov"},"content":"        assertNull(tag3, \"Tag should be null after removal.\");","lastModifiedDate":"2024-02-17"},{"lineNumber":76,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":77,"author":{"gitId":"Bandov"},"content":"}","lastModifiedDate":"2024-02-17"},{"lineNumber":78,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-17"}],"authorContributionMap":{"Bandov":78}},{"path":"src/test/java/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bandov"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"Bandov"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"Bandov"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"Bandov"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"Bandov"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"Bandov"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"Bandov"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"Bandov"},"content":"import duke.Event;","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"Bandov"},"content":"import duke.Tag;","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"Bandov"},"content":"class EventTest {","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"Bandov"},"content":"    void testToString() {","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"Bandov"},"content":"        LocalDateTime start \u003d LocalDateTime.of(2024, 2, 13, 10, 0);","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"Bandov"},"content":"        LocalDateTime end \u003d LocalDateTime.of(2024, 2, 13, 12, 0);","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"Bandov"},"content":"        Event event \u003d new Event(\"Team meeting\", start, end);","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"Bandov"},"content":"        assertEquals(\"[E][ ] Team meeting (from: 2024-02-13T10:00 to: 2024-02-13T12:00)\", event.toString(),","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"Bandov"},"content":"                \"toString does not match expected output without tag.\");","lastModifiedDate":"2024-02-17"},{"lineNumber":23,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"Bandov"},"content":"        event.addTag(\"Work\");","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"Bandov"},"content":"        assertEquals(\"[E][ ] Team meeting (from: 2024-02-13T10:00 to: 2024-02-13T12:00) Work\",","lastModifiedDate":"2024-02-17"},{"lineNumber":26,"author":{"gitId":"Bandov"},"content":"                event.toString(), \"toString does not match expected output with tag.\");","lastModifiedDate":"2024-02-17"},{"lineNumber":27,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":28,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":29,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-02-17"},{"lineNumber":30,"author":{"gitId":"Bandov"},"content":"    void testToFileString() {","lastModifiedDate":"2024-02-17"},{"lineNumber":31,"author":{"gitId":"Bandov"},"content":"        LocalDateTime start \u003d LocalDateTime.of(2024, 2, 20, 14, 0);","lastModifiedDate":"2024-02-17"},{"lineNumber":32,"author":{"gitId":"Bandov"},"content":"        LocalDateTime end \u003d LocalDateTime.of(2024, 2, 20, 16, 0);","lastModifiedDate":"2024-02-17"},{"lineNumber":33,"author":{"gitId":"Bandov"},"content":"        Event event \u003d new Event(\"Client presentation\", start, end);","lastModifiedDate":"2024-02-17"},{"lineNumber":34,"author":{"gitId":"Bandov"},"content":"        assertEquals(\"E | 0 | Client presentation | 2024-02-20T14:00 - 2024-02-20T16:00\", event.toFileString(),","lastModifiedDate":"2024-02-17"},{"lineNumber":35,"author":{"gitId":"Bandov"},"content":"                \"toFileString does not match expected output without tag.\");","lastModifiedDate":"2024-02-17"},{"lineNumber":36,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":37,"author":{"gitId":"Bandov"},"content":"        event.markAsDone();","lastModifiedDate":"2024-02-17"},{"lineNumber":38,"author":{"gitId":"Bandov"},"content":"        assertEquals(\"E | 1 | Client presentation | 2024-02-20T14:00 - 2024-02-20T16:00\", event.toFileString(),","lastModifiedDate":"2024-02-17"},{"lineNumber":39,"author":{"gitId":"Bandov"},"content":"                \"toFileString does not match expected output for done task without tag.\");","lastModifiedDate":"2024-02-17"},{"lineNumber":40,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":41,"author":{"gitId":"Bandov"},"content":"        event.addTag(\"Important\");","lastModifiedDate":"2024-02-17"},{"lineNumber":42,"author":{"gitId":"Bandov"},"content":"        assertEquals(\"E | 1 | Client presentation | 2024-02-20T14:00 - 2024-02-20T16:00 | Important\",","lastModifiedDate":"2024-02-17"},{"lineNumber":43,"author":{"gitId":"Bandov"},"content":"                event.toFileString(), \"toFileString does not match expected output for done task with tag.\");","lastModifiedDate":"2024-02-17"},{"lineNumber":44,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":45,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":46,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-02-17"},{"lineNumber":47,"author":{"gitId":"Bandov"},"content":"    void testFromFileString() {","lastModifiedDate":"2024-02-17"},{"lineNumber":48,"author":{"gitId":"Bandov"},"content":"        String fileString \u003d \"E | 0 | Conference | 2024-03-05T09:00 - 2024-03-05T11:00\";","lastModifiedDate":"2024-02-17"},{"lineNumber":49,"author":{"gitId":"Bandov"},"content":"        Event event \u003d Event.fromFileString(fileString);","lastModifiedDate":"2024-02-17"},{"lineNumber":50,"author":{"gitId":"Bandov"},"content":"        assertNotNull(event, \"Event should not be null.\");","lastModifiedDate":"2024-02-17"},{"lineNumber":51,"author":{"gitId":"Bandov"},"content":"        assertEquals(\"Conference\", event.getDescription(), \"Description does not match.\");","lastModifiedDate":"2024-02-17"},{"lineNumber":52,"author":{"gitId":"Bandov"},"content":"        assertEquals(\"2024-03-05T09:00\", event.getFromDate(), \"Start time does not match.\");","lastModifiedDate":"2024-02-17"},{"lineNumber":53,"author":{"gitId":"Bandov"},"content":"        assertEquals(\"2024-03-05T11:00\", event.getToDate(), \"End time does not match.\");","lastModifiedDate":"2024-02-17"},{"lineNumber":54,"author":{"gitId":"Bandov"},"content":"        assertFalse(event.isDone(), \"Task should not be marked as done.\");","lastModifiedDate":"2024-02-17"},{"lineNumber":55,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":56,"author":{"gitId":"Bandov"},"content":"        String fileStringWithTag \u003d \"E | 1 | Seminar | 2024-04-10T14:00 - 2024-04-10T17:00 | Education\";","lastModifiedDate":"2024-02-17"},{"lineNumber":57,"author":{"gitId":"Bandov"},"content":"        Event eventWithTag \u003d Event.fromFileString(fileStringWithTag);","lastModifiedDate":"2024-02-17"},{"lineNumber":58,"author":{"gitId":"Bandov"},"content":"        assertNotNull(eventWithTag, \"Event with tag should not be null.\");","lastModifiedDate":"2024-02-17"},{"lineNumber":59,"author":{"gitId":"Bandov"},"content":"        assertTrue(eventWithTag.isDone(), \"Task should be marked as done.\");","lastModifiedDate":"2024-02-17"},{"lineNumber":60,"author":{"gitId":"Bandov"},"content":"        Tag tag \u003d eventWithTag.getTag();","lastModifiedDate":"2024-02-17"},{"lineNumber":61,"author":{"gitId":"Bandov"},"content":"        assertEquals(\"Education\", tag.getTagName(), \"Tag does not match.\");","lastModifiedDate":"2024-02-17"},{"lineNumber":62,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":63,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":64,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-02-17"},{"lineNumber":65,"author":{"gitId":"Bandov"},"content":"    void testAddAndRemoveTag() {","lastModifiedDate":"2024-02-17"},{"lineNumber":66,"author":{"gitId":"Bandov"},"content":"        LocalDateTime start \u003d LocalDateTime.of(2024, 2, 25, 10, 0);","lastModifiedDate":"2024-02-17"},{"lineNumber":67,"author":{"gitId":"Bandov"},"content":"        LocalDateTime end \u003d LocalDateTime.of(2024, 2, 25, 12, 0);","lastModifiedDate":"2024-02-17"},{"lineNumber":68,"author":{"gitId":"Bandov"},"content":"        Event event \u003d new Event(\"Webinar\", start, end);","lastModifiedDate":"2024-02-17"},{"lineNumber":69,"author":{"gitId":"Bandov"},"content":"        Tag tag \u003d event.getTag();","lastModifiedDate":"2024-02-17"},{"lineNumber":70,"author":{"gitId":"Bandov"},"content":"        assertNull(tag, \"Initially, tag should be null.\");","lastModifiedDate":"2024-02-17"},{"lineNumber":71,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":72,"author":{"gitId":"Bandov"},"content":"        event.addTag(\"Tech\");","lastModifiedDate":"2024-02-17"},{"lineNumber":73,"author":{"gitId":"Bandov"},"content":"        Tag tag2 \u003d event.getTag();","lastModifiedDate":"2024-02-17"},{"lineNumber":74,"author":{"gitId":"Bandov"},"content":"        assertNotNull(tag2, \"Tag should not be null after adding.\");","lastModifiedDate":"2024-02-17"},{"lineNumber":75,"author":{"gitId":"Bandov"},"content":"        assertEquals(\"Tech\", tag2.getTagName(), \"Tag name does not match after adding.\");","lastModifiedDate":"2024-02-17"},{"lineNumber":76,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":77,"author":{"gitId":"Bandov"},"content":"        event.removeTag();","lastModifiedDate":"2024-02-17"},{"lineNumber":78,"author":{"gitId":"Bandov"},"content":"        Tag tag3 \u003d event.getTag();","lastModifiedDate":"2024-02-17"},{"lineNumber":79,"author":{"gitId":"Bandov"},"content":"        assertNull(tag3, \"Tag should be null after removal.\");","lastModifiedDate":"2024-02-17"},{"lineNumber":80,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":81,"author":{"gitId":"Bandov"},"content":"}","lastModifiedDate":"2024-02-17"}],"authorContributionMap":{"Bandov":81}},{"path":"src/test/java/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bandov"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Bandov"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Bandov"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"Bandov"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"Bandov"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"Bandov"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"Bandov"},"content":"import duke.Deadline;","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"Bandov"},"content":"import duke.DukeException;","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"Bandov"},"content":"import duke.Event;","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"Bandov"},"content":"import duke.Parser;","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"Bandov"},"content":"import duke.Task;","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"Bandov"},"content":"import duke.TaskList;","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"Bandov"},"content":"class ParserTest {","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"Bandov"},"content":"    private TaskList list;","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"Bandov"},"content":"    @BeforeEach","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"Bandov"},"content":"    void setUp() {","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"Bandov"},"content":"        list \u003d new TaskList();","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"Bandov"},"content":"        // Mocking Ui methods or ensure that Ui methods can run in a test environment","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"Bandov"},"content":"    void handleTodo_validInput_addsTodo() {","lastModifiedDate":"2024-01-26"},{"lineNumber":27,"author":{"gitId":"Bandov"},"content":"        try {","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"Bandov"},"content":"            Parser.handleTodo(list, \"todo read book\");","lastModifiedDate":"2024-01-26"},{"lineNumber":29,"author":{"gitId":"Bandov"},"content":"            assertEquals(1, list.size());","lastModifiedDate":"2024-01-26"},{"lineNumber":30,"author":{"gitId":"Bandov"},"content":"            Task addedTask \u003d list.get(0);","lastModifiedDate":"2024-01-26"},{"lineNumber":31,"author":{"gitId":"Bandov"},"content":"            assertEquals(\"read book\", addedTask.getDescription());","lastModifiedDate":"2024-01-26"},{"lineNumber":32,"author":{"gitId":"Bandov"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":33,"author":{"gitId":"Bandov"},"content":"            fail(\"Exception should not be thrown for valid input\");","lastModifiedDate":"2024-01-26"},{"lineNumber":34,"author":{"gitId":"Bandov"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":35,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":36,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":37,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-01-26"},{"lineNumber":38,"author":{"gitId":"Bandov"},"content":"    void handleTodo_emptyDescription_throwsDukeException() {","lastModifiedDate":"2024-01-26"},{"lineNumber":39,"author":{"gitId":"Bandov"},"content":"        Executable todoWithEmptyDescription \u003d () -\u003e Parser.handleTodo(list, \"todo\");","lastModifiedDate":"2024-01-26"},{"lineNumber":40,"author":{"gitId":"Bandov"},"content":"        assertThrows(DukeException.class, todoWithEmptyDescription,","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"Bandov"},"content":"                \"Exception was expected for empty todo description\");","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":43,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":44,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-01-26"},{"lineNumber":45,"author":{"gitId":"Bandov"},"content":"    void handleTodo_validInput_addsDeadline() {","lastModifiedDate":"2024-01-26"},{"lineNumber":46,"author":{"gitId":"Bandov"},"content":"        try {","lastModifiedDate":"2024-01-26"},{"lineNumber":47,"author":{"gitId":"Bandov"},"content":"            Parser.handleDeadline(list, \"deadline read book /by 2020-02-02\");","lastModifiedDate":"2024-01-26"},{"lineNumber":48,"author":{"gitId":"Bandov"},"content":"            assertEquals(1, list.size());","lastModifiedDate":"2024-01-26"},{"lineNumber":49,"author":{"gitId":"Bandov"},"content":"            Deadline addedTask \u003d (Deadline) list.get(0);","lastModifiedDate":"2024-01-26"},{"lineNumber":50,"author":{"gitId":"Bandov"},"content":"            assertEquals(\"read book\", addedTask.getDescription());","lastModifiedDate":"2024-01-26"},{"lineNumber":51,"author":{"gitId":"Bandov"},"content":"            assertEquals(\"2020-02-02\", addedTask.getDate());","lastModifiedDate":"2024-01-26"},{"lineNumber":52,"author":{"gitId":"Bandov"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":53,"author":{"gitId":"Bandov"},"content":"            fail(\"Exception should not be thrown for valid input\");","lastModifiedDate":"2024-01-26"},{"lineNumber":54,"author":{"gitId":"Bandov"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":55,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":56,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":57,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-01-26"},{"lineNumber":58,"author":{"gitId":"Bandov"},"content":"    void handleDeadline_emptyDescription_throwsDukeException() {","lastModifiedDate":"2024-01-26"},{"lineNumber":59,"author":{"gitId":"Bandov"},"content":"        Executable todoWithEmptyDescription \u003d () -\u003e Parser.handleDeadline(list, \"deadline\");","lastModifiedDate":"2024-01-26"},{"lineNumber":60,"author":{"gitId":"Bandov"},"content":"        assertThrows(DukeException.class, todoWithEmptyDescription,","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"Bandov"},"content":"                \"Exception was expected for empty todo description\");","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":63,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":64,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-01-26"},{"lineNumber":65,"author":{"gitId":"Bandov"},"content":"    void handleTodo_validInput_addsEvent() {","lastModifiedDate":"2024-01-26"},{"lineNumber":66,"author":{"gitId":"Bandov"},"content":"        try {","lastModifiedDate":"2024-01-26"},{"lineNumber":67,"author":{"gitId":"Bandov"},"content":"            Parser.handleEvent(list, \"event read book /from 2020-02-02 23:00 /to 2020-02-03 23:15\");","lastModifiedDate":"2024-01-26"},{"lineNumber":68,"author":{"gitId":"Bandov"},"content":"            assertEquals(1, list.size());","lastModifiedDate":"2024-01-26"},{"lineNumber":69,"author":{"gitId":"Bandov"},"content":"            Event addedTask \u003d (Event) list.get(0);","lastModifiedDate":"2024-01-26"},{"lineNumber":70,"author":{"gitId":"Bandov"},"content":"            assertEquals(\"read book\", addedTask.getDescription());","lastModifiedDate":"2024-01-26"},{"lineNumber":71,"author":{"gitId":"Bandov"},"content":"            assertEquals(\"2020-02-02T23:00\", addedTask.getFromDate());","lastModifiedDate":"2024-01-26"},{"lineNumber":72,"author":{"gitId":"Bandov"},"content":"            assertEquals(\"2020-02-03T23:15\", addedTask.getToDate());","lastModifiedDate":"2024-01-26"},{"lineNumber":73,"author":{"gitId":"Bandov"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":74,"author":{"gitId":"Bandov"},"content":"            fail(\"Exception should not be thrown for valid input\");","lastModifiedDate":"2024-01-26"},{"lineNumber":75,"author":{"gitId":"Bandov"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":76,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":77,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":78,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-01-26"},{"lineNumber":79,"author":{"gitId":"Bandov"},"content":"    void handleEvent_emptyDescription_throwsDukeException() {","lastModifiedDate":"2024-01-26"},{"lineNumber":80,"author":{"gitId":"Bandov"},"content":"        Executable todoWithEmptyDescription \u003d () -\u003e Parser.handleDeadline(list, \"event\");","lastModifiedDate":"2024-01-26"},{"lineNumber":81,"author":{"gitId":"Bandov"},"content":"        assertThrows(DukeException.class, todoWithEmptyDescription,","lastModifiedDate":"2024-01-30"},{"lineNumber":82,"author":{"gitId":"Bandov"},"content":"                \"Exception was expected for empty todo description\");","lastModifiedDate":"2024-01-30"},{"lineNumber":83,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":84,"author":{"gitId":"Bandov"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Bandov":84}},{"path":"src/test/java/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bandov"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Bandov"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"Bandov"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"Bandov"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"Bandov"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"Bandov"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"Bandov"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"Bandov"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"Bandov"},"content":"import duke.DukeException;","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"Bandov"},"content":"import duke.Storage;","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"Bandov"},"content":"import duke.Task;","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"Bandov"},"content":"import duke.TaskList;","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"Bandov"},"content":"class StorageTest {","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"Bandov"},"content":"    private Path tempFile;","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"Bandov"},"content":"    private Storage storage;","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"Bandov"},"content":"    @BeforeEach","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"Bandov"},"content":"    void setUp() throws IOException, DukeException {","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"Bandov"},"content":"        // Create a temporary file","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"Bandov"},"content":"        tempFile \u003d Files.createTempFile(\"test\", \".txt\");","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"Bandov"},"content":"        // Initialize Storage with the temporary file path","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"Bandov"},"content":"        storage \u003d new Storage(tempFile.toString());","lastModifiedDate":"2024-01-26"},{"lineNumber":27,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":29,"author":{"gitId":"Bandov"},"content":"    @AfterEach","lastModifiedDate":"2024-01-26"},{"lineNumber":30,"author":{"gitId":"Bandov"},"content":"    void tearDown() throws IOException {","lastModifiedDate":"2024-01-26"},{"lineNumber":31,"author":{"gitId":"Bandov"},"content":"        // Delete the temporary file after each test","lastModifiedDate":"2024-01-26"},{"lineNumber":32,"author":{"gitId":"Bandov"},"content":"        Files.deleteIfExists(tempFile);","lastModifiedDate":"2024-01-26"},{"lineNumber":33,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":34,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":35,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-01-26"},{"lineNumber":36,"author":{"gitId":"Bandov"},"content":"    void saveAndLoadTodoTask() throws IOException, DukeException {","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"Bandov"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2024-01-26"},{"lineNumber":38,"author":{"gitId":"Bandov"},"content":"        list.add(new Task(\"read book\")); // Assuming Task is a valid type for simplicity","lastModifiedDate":"2024-01-26"},{"lineNumber":39,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":40,"author":{"gitId":"Bandov"},"content":"        // Save the list to the file","lastModifiedDate":"2024-01-26"},{"lineNumber":41,"author":{"gitId":"Bandov"},"content":"        Storage.saveCurrentList(list);","lastModifiedDate":"2024-01-26"},{"lineNumber":42,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":43,"author":{"gitId":"Bandov"},"content":"        // Load the list back","lastModifiedDate":"2024-01-26"},{"lineNumber":44,"author":{"gitId":"Bandov"},"content":"        ArrayList\u003cTask\u003e loadedList \u003d storage.load();","lastModifiedDate":"2024-01-26"},{"lineNumber":45,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":46,"author":{"gitId":"Bandov"},"content":"        // Check if the loaded list matches the saved list","lastModifiedDate":"2024-01-26"},{"lineNumber":47,"author":{"gitId":"Bandov"},"content":"        assertEquals(1, loadedList.size());","lastModifiedDate":"2024-01-26"},{"lineNumber":48,"author":{"gitId":"Bandov"},"content":"        assertEquals(\"read book\", loadedList.get(0).getDescription());","lastModifiedDate":"2024-01-26"},{"lineNumber":49,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":50,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":51,"author":{"gitId":"Bandov"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Bandov":51}},{"path":"src/test/java/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bandov"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Bandov"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"Bandov"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"Bandov"},"content":"import duke.Task;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"Bandov"},"content":"import duke.TaskList;","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"Bandov"},"content":"public class TaskListTest {","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"Bandov"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"Bandov"},"content":"    @BeforeEach","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"Bandov"},"content":"    void setUp() {","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"Bandov"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"Bandov"},"content":"    @Test","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"Bandov"},"content":"    void testAddTask() {","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"Bandov"},"content":"        Task task \u003d new Task(\"Read book\");","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"Bandov"},"content":"        tasks.add(task);","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"Bandov"},"content":"        assertEquals(1, tasks.size());","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"Bandov"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Bandov":22}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Bandov"},"content":"todo Read a book","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"Bandov"},"content":"deadline Submit assignment /by 2024-01-30","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"Bandov"},"content":"event Team meeting /from 2024-01-25 10:00 /to 2024-01-25 12:00","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"Bandov"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"Bandov"},"content":"mark 1","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"Bandov"},"content":"unmark 1","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"Bandov"},"content":"todo","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"Bandov"},"content":"deadline Finish project","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"Bandov"},"content":"event Conference /from 2024-01-28","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"Bandov"},"content":"mark 100","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"Bandov"},"content":"unmark 100","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"Bandov"},"content":"unmark","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"Bandov"},"content":"dance","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"Bandov"},"content":"todo Complete Java project","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"Bandov"},"content":"deadline File taxes /by 2024-04-15","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"Bandov"},"content":"event Birthday Party /from 2024-03-10 18:00 /to 2024-03-10 22:00","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"Bandov"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"Bandov"},"content":"mark 2","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"Bandov"},"content":"unmark 2","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"Bandov"},"content":"deadline Prepare presentation /by 2024-03-05","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"Bandov"},"content":"event Workshop /from 2024-02-20 09:00 /to 2024-02-20 12:00","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"Bandov"},"content":"todo Clean the house","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"Bandov"},"content":"delete 1","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"Bandov"},"content":"delete 3","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"Bandov"},"content":"delete 100","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"Bandov"},"content":"delete","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"Bandov"},"content":"todo Grocery Shopping","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"Bandov"},"content":"todo Call Mom","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"Bandov"},"content":"deadline Renew Insurance /by 2024-05-01","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"Bandov"},"content":"event Doctor\u0027s Appointment /from 2024-04-20 15:00 /to 2024-04-20 16:00","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"Bandov"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"Bandov"},"content":"mark 4","lastModifiedDate":"2024-01-24"},{"lineNumber":33,"author":{"gitId":"Bandov"},"content":"mark 5","lastModifiedDate":"2024-01-24"},{"lineNumber":34,"author":{"gitId":"Bandov"},"content":"unmark 4","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"Bandov"},"content":"bye","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"Bandov":35}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"Bandov"},"content":"if ! javac -Xlint:none -d ../bin /Users/dom/ip/src/main/java/*.java","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"Bandov"},"content":"java -cp ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"Bandov"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"Bandov":4,"-":31}}]
