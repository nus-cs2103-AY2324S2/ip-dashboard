[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YuSoonZ"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"YuSoonZ"},"content":"    protected String by;","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"YuSoonZ"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"YuSoonZ"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"YuSoonZ"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"YuSoonZ"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"YuSoonZ"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"YuSoonZ"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"YuSoonZ"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"YuSoonZ"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"YuSoonZ"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"YuSoonZ":14}},{"path":"src/main/java/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YuSoonZ"},"content":"public class Events extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"YuSoonZ"},"content":"    protected String start;","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"YuSoonZ"},"content":"    protected String end;","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"YuSoonZ"},"content":"    public Events(String description, String start, String end) {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"YuSoonZ"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"YuSoonZ"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"YuSoonZ"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"YuSoonZ"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"YuSoonZ"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"YuSoonZ"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"YuSoonZ"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + start + \" to:\" + end + \")\";","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"YuSoonZ"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"YuSoonZ"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"YuSoonZ":16}},{"path":"src/main/java/Prompts.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YuSoonZ"},"content":"public enum Prompts {","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"YuSoonZ"},"content":"    TODO,","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"YuSoonZ"},"content":"    DEADLINE,","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"YuSoonZ"},"content":"    EVENT,","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"YuSoonZ"},"content":"    MARK,","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"YuSoonZ"},"content":"    UNMARK,","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"YuSoonZ"},"content":"    DELETE,","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"YuSoonZ"},"content":"    BYE,","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"YuSoonZ"},"content":"    LIST","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"YuSoonZ"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"YuSoonZ":10}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YuSoonZ"},"content":"public class Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"YuSoonZ"},"content":"    protected String description;","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"YuSoonZ"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"YuSoonZ"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"YuSoonZ"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"YuSoonZ"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"YuSoonZ"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"YuSoonZ"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"YuSoonZ"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"YuSoonZ"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"YuSoonZ"},"content":"    public void markDone() {","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"YuSoonZ"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"YuSoonZ"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"YuSoonZ"},"content":"    public void unmark() {","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"YuSoonZ"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"YuSoonZ"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"YuSoonZ"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"YuSoonZ"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"YuSoonZ"},"content":"        return \"[\" + getStatusIcon() + \"]\" + this.description;","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"YuSoonZ"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"YuSoonZ"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"YuSoonZ":26}},{"path":"src/main/java/TheAdvisor.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YuSoonZ"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"YuSoonZ"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"YuSoonZ"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"YuSoonZ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"YuSoonZ"},"content":"public class TheAdvisor {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"YuSoonZ"},"content":"    public static void main(String[] args) throws IOException, TheAdvisorException {","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"YuSoonZ"},"content":"        BufferedReader br \u003d new BufferedReader(new InputStreamReader(System.in));","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"YuSoonZ"},"content":"        String intro \u003d \"Hello, I am The Advisor. The one and only advisor you will ever need in your investing \" +","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"YuSoonZ"},"content":"                \"journey. What can I do for you?\";","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"YuSoonZ"},"content":"        System.out.println(intro + \"\\n\");","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"YuSoonZ"},"content":"        // An ArrayList that stores the tasks to be done","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"YuSoonZ"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"YuSoonZ"},"content":"        while (true) {","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"YuSoonZ"},"content":"            try {","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"YuSoonZ"},"content":"                processInput(br.readLine(), taskList);","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"YuSoonZ"},"content":"            } catch (TheAdvisorException e) {","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"YuSoonZ"},"content":"                System.out.println(\"Error: \" + e.getMessage());","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"YuSoonZ"},"content":"            }","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"YuSoonZ"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"YuSoonZ"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"YuSoonZ"},"content":"    private static void processInput(String str, ArrayList\u003cTask\u003e taskList) throws TheAdvisorException {","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"YuSoonZ"},"content":"        String[] strings \u003d str.split(\" \");","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"YuSoonZ"},"content":"        Prompts prompts \u003d getPrompts(strings[0]);","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"YuSoonZ"},"content":"        switch (prompts) {","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"YuSoonZ"},"content":"            case BYE:","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"YuSoonZ"},"content":"                System.out.println(\"     Goodbye. Thank you for using TheAdvisor chatbox and I hope that my advice has managed\" +","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"YuSoonZ"},"content":"                        \"to help you in your investing journey!\");","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":33,"author":{"gitId":"YuSoonZ"},"content":"                // Exit the program","lastModifiedDate":"2024-01-24"},{"lineNumber":34,"author":{"gitId":"YuSoonZ"},"content":"                System.exit(0);","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"YuSoonZ"},"content":"                break;","lastModifiedDate":"2024-01-24"},{"lineNumber":36,"author":{"gitId":"YuSoonZ"},"content":"            case LIST:","lastModifiedDate":"2024-01-24"},{"lineNumber":37,"author":{"gitId":"YuSoonZ"},"content":"                int counter \u003d 1;","lastModifiedDate":"2024-01-24"},{"lineNumber":38,"author":{"gitId":"YuSoonZ"},"content":"                System.out.println(\"     Here are the tasks in your list:\");","lastModifiedDate":"2024-01-24"},{"lineNumber":39,"author":{"gitId":"YuSoonZ"},"content":"                for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2024-01-24"},{"lineNumber":40,"author":{"gitId":"YuSoonZ"},"content":"                    System.out.println(\"     \" + counter + \". \" + taskList.get(i).toString());","lastModifiedDate":"2024-01-24"},{"lineNumber":41,"author":{"gitId":"YuSoonZ"},"content":"                    counter++;","lastModifiedDate":"2024-01-24"},{"lineNumber":42,"author":{"gitId":"YuSoonZ"},"content":"                }","lastModifiedDate":"2024-01-24"},{"lineNumber":43,"author":{"gitId":"YuSoonZ"},"content":"                break;","lastModifiedDate":"2024-01-24"},{"lineNumber":44,"author":{"gitId":"YuSoonZ"},"content":"            case MARK:","lastModifiedDate":"2024-01-24"},{"lineNumber":45,"author":{"gitId":"YuSoonZ"},"content":"                checkArrayLength(strings, 2, \"Invalid format. Make sure that the format is: \"","lastModifiedDate":"2024-01-24"},{"lineNumber":46,"author":{"gitId":"YuSoonZ"},"content":"                        + \"mark + (number) to mark something on the list as completed.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":47,"author":{"gitId":"YuSoonZ"},"content":"                // 1-based indexing on input","lastModifiedDate":"2024-01-24"},{"lineNumber":48,"author":{"gitId":"YuSoonZ"},"content":"                int markNumber \u003d Integer.parseInt(strings[1]);","lastModifiedDate":"2024-01-24"},{"lineNumber":49,"author":{"gitId":"YuSoonZ"},"content":"                checkIndex(markNumber, taskList.size());","lastModifiedDate":"2024-01-24"},{"lineNumber":50,"author":{"gitId":"YuSoonZ"},"content":"                Task mark \u003d taskList.get(markNumber - 1);","lastModifiedDate":"2024-01-24"},{"lineNumber":51,"author":{"gitId":"YuSoonZ"},"content":"                mark.markDone();","lastModifiedDate":"2024-01-24"},{"lineNumber":52,"author":{"gitId":"YuSoonZ"},"content":"                System.out.println(\"     Nice! I\u0027ve marked this task as done:\\n\" + \"       \" +","lastModifiedDate":"2024-01-24"},{"lineNumber":53,"author":{"gitId":"YuSoonZ"},"content":"                        mark.toString());","lastModifiedDate":"2024-01-24"},{"lineNumber":54,"author":{"gitId":"YuSoonZ"},"content":"                break;","lastModifiedDate":"2024-01-24"},{"lineNumber":55,"author":{"gitId":"YuSoonZ"},"content":"            case UNMARK:","lastModifiedDate":"2024-01-24"},{"lineNumber":56,"author":{"gitId":"YuSoonZ"},"content":"                checkArrayLength(strings, 2, \"Invalid format. Make sure that the format is: \"","lastModifiedDate":"2024-01-24"},{"lineNumber":57,"author":{"gitId":"YuSoonZ"},"content":"                        + \"unmark + (number) to unmark something on the list.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":58,"author":{"gitId":"YuSoonZ"},"content":"                // 1-based indexing on input","lastModifiedDate":"2024-01-24"},{"lineNumber":59,"author":{"gitId":"YuSoonZ"},"content":"                int unmarkNumber \u003d Integer.parseInt(strings[1]);","lastModifiedDate":"2024-01-24"},{"lineNumber":60,"author":{"gitId":"YuSoonZ"},"content":"                checkIndex(unmarkNumber, taskList.size());","lastModifiedDate":"2024-01-24"},{"lineNumber":61,"author":{"gitId":"YuSoonZ"},"content":"                Task unmarked \u003d taskList.get(unmarkNumber - 1);","lastModifiedDate":"2024-01-24"},{"lineNumber":62,"author":{"gitId":"YuSoonZ"},"content":"                unmarked.unmark();","lastModifiedDate":"2024-01-24"},{"lineNumber":63,"author":{"gitId":"YuSoonZ"},"content":"                System.out.println(\"     OK, I\u0027ve marked this task as not done yet:\\n\" + \"       \" +","lastModifiedDate":"2024-01-24"},{"lineNumber":64,"author":{"gitId":"YuSoonZ"},"content":"                        unmarked.toString());","lastModifiedDate":"2024-01-24"},{"lineNumber":65,"author":{"gitId":"YuSoonZ"},"content":"                break;","lastModifiedDate":"2024-01-24"},{"lineNumber":66,"author":{"gitId":"YuSoonZ"},"content":"            case DELETE:","lastModifiedDate":"2024-01-24"},{"lineNumber":67,"author":{"gitId":"YuSoonZ"},"content":"                checkArrayLength(strings, 2, \"Invalid format. Make sure that the format is: \"","lastModifiedDate":"2024-01-24"},{"lineNumber":68,"author":{"gitId":"YuSoonZ"},"content":"                        + \"delete + (number) to delete something from the list.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":69,"author":{"gitId":"YuSoonZ"},"content":"                // 1-based indexing on input","lastModifiedDate":"2024-01-24"},{"lineNumber":70,"author":{"gitId":"YuSoonZ"},"content":"                int deleteNumber \u003d Integer.parseInt(strings[1]);","lastModifiedDate":"2024-01-24"},{"lineNumber":71,"author":{"gitId":"YuSoonZ"},"content":"                checkIndex(deleteNumber, taskList.size());","lastModifiedDate":"2024-01-24"},{"lineNumber":72,"author":{"gitId":"YuSoonZ"},"content":"                Task deleted \u003d taskList.get(deleteNumber - 1);","lastModifiedDate":"2024-01-24"},{"lineNumber":73,"author":{"gitId":"YuSoonZ"},"content":"                taskList.remove(deleteNumber - 1);","lastModifiedDate":"2024-01-24"},{"lineNumber":74,"author":{"gitId":"YuSoonZ"},"content":"                System.out.println(\"     Noted. I\u0027ve removed this task:\\n\" + \"       \" +","lastModifiedDate":"2024-01-24"},{"lineNumber":75,"author":{"gitId":"YuSoonZ"},"content":"                        deleted.toString() + \"\\n\" + \"     Now you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":76,"author":{"gitId":"YuSoonZ"},"content":"                break;","lastModifiedDate":"2024-01-24"},{"lineNumber":77,"author":{"gitId":"YuSoonZ"},"content":"            default:","lastModifiedDate":"2024-01-24"},{"lineNumber":78,"author":{"gitId":"YuSoonZ"},"content":"                String type \u003d strings[0];","lastModifiedDate":"2024-01-24"},{"lineNumber":79,"author":{"gitId":"YuSoonZ"},"content":"                switch (type) {","lastModifiedDate":"2024-01-24"},{"lineNumber":80,"author":{"gitId":"YuSoonZ"},"content":"                    case \"todo\": {","lastModifiedDate":"2024-01-24"},{"lineNumber":81,"author":{"gitId":"YuSoonZ"},"content":"                        String task \u003d str.substring(4);","lastModifiedDate":"2024-01-24"},{"lineNumber":82,"author":{"gitId":"YuSoonZ"},"content":"                        checkEmptyDescription(task, \"The description for todo cannot be empty. Please try again.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":83,"author":{"gitId":"YuSoonZ"},"content":"                        ToDos toDos \u003d new ToDos(task);","lastModifiedDate":"2024-01-24"},{"lineNumber":84,"author":{"gitId":"YuSoonZ"},"content":"                        taskList.add(toDos);","lastModifiedDate":"2024-01-24"},{"lineNumber":85,"author":{"gitId":"YuSoonZ"},"content":"                        System.out.println(\"     Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2024-01-24"},{"lineNumber":86,"author":{"gitId":"YuSoonZ"},"content":"                                \"       \" + toDos.toString() + \"\\n\" +","lastModifiedDate":"2024-01-24"},{"lineNumber":87,"author":{"gitId":"YuSoonZ"},"content":"                                \"     Now you have \" + taskList.size() +","lastModifiedDate":"2024-01-24"},{"lineNumber":88,"author":{"gitId":"YuSoonZ"},"content":"                                \" tasks in the list.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":89,"author":{"gitId":"YuSoonZ"},"content":"                        break;","lastModifiedDate":"2024-01-24"},{"lineNumber":90,"author":{"gitId":"YuSoonZ"},"content":"                    }","lastModifiedDate":"2024-01-24"},{"lineNumber":91,"author":{"gitId":"YuSoonZ"},"content":"                    case \"deadline\": {","lastModifiedDate":"2024-01-24"},{"lineNumber":92,"author":{"gitId":"YuSoonZ"},"content":"                        String task \u003d str.substring(8);","lastModifiedDate":"2024-01-24"},{"lineNumber":93,"author":{"gitId":"YuSoonZ"},"content":"                        checkEmptyDescription(task, \"The description for deadline cannot be empty. Please try again.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":94,"author":{"gitId":"YuSoonZ"},"content":"                        String[] arrTask \u003d task.split(\" /by \");","lastModifiedDate":"2024-01-24"},{"lineNumber":95,"author":{"gitId":"YuSoonZ"},"content":"                        checkArrayLength(arrTask, 2, \"Invalid deadline format\" +","lastModifiedDate":"2024-01-24"},{"lineNumber":96,"author":{"gitId":"YuSoonZ"},"content":"                                \"Please use the correct format: deadline + description + /by + date/day\");","lastModifiedDate":"2024-01-24"},{"lineNumber":97,"author":{"gitId":"YuSoonZ"},"content":"                        Deadline deadline \u003d new Deadline(arrTask[0], arrTask[1]);","lastModifiedDate":"2024-01-24"},{"lineNumber":98,"author":{"gitId":"YuSoonZ"},"content":"                        taskList.add(deadline);","lastModifiedDate":"2024-01-24"},{"lineNumber":99,"author":{"gitId":"YuSoonZ"},"content":"                        System.out.println(\"     Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2024-01-24"},{"lineNumber":100,"author":{"gitId":"YuSoonZ"},"content":"                                \"       \" + deadline.toString() + \"\\n\" +","lastModifiedDate":"2024-01-24"},{"lineNumber":101,"author":{"gitId":"YuSoonZ"},"content":"                                \"     Now you have \" + taskList.size() +","lastModifiedDate":"2024-01-24"},{"lineNumber":102,"author":{"gitId":"YuSoonZ"},"content":"                                \" tasks in the list.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":103,"author":{"gitId":"YuSoonZ"},"content":"                        break;","lastModifiedDate":"2024-01-24"},{"lineNumber":104,"author":{"gitId":"YuSoonZ"},"content":"                    }","lastModifiedDate":"2024-01-24"},{"lineNumber":105,"author":{"gitId":"YuSoonZ"},"content":"                    case \"event\": {","lastModifiedDate":"2024-01-24"},{"lineNumber":106,"author":{"gitId":"YuSoonZ"},"content":"                        String task \u003d str.substring(5);","lastModifiedDate":"2024-01-24"},{"lineNumber":107,"author":{"gitId":"YuSoonZ"},"content":"                        checkEmptyDescription(task, \"The description for event cannot be empty. Please try again.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":108,"author":{"gitId":"YuSoonZ"},"content":"                        String[] arrTask \u003d task.split(\" /from \");","lastModifiedDate":"2024-01-24"},{"lineNumber":109,"author":{"gitId":"YuSoonZ"},"content":"                        checkArrayLength(arrTask, 2, \"Invalid event format\" +","lastModifiedDate":"2024-01-24"},{"lineNumber":110,"author":{"gitId":"YuSoonZ"},"content":"                                \"Please use the correct format: event + description + /from + date/day + /to +date/time\");","lastModifiedDate":"2024-01-24"},{"lineNumber":111,"author":{"gitId":"YuSoonZ"},"content":"                        String[] timings \u003d arrTask[1].split(\" /to\");","lastModifiedDate":"2024-01-24"},{"lineNumber":112,"author":{"gitId":"YuSoonZ"},"content":"                        checkArrayLength(arrTask, 2, \"Invalid event format\" +","lastModifiedDate":"2024-01-24"},{"lineNumber":113,"author":{"gitId":"YuSoonZ"},"content":"                                \"Please use the correct format: event + description + /from + date/day + /to +date/time\");","lastModifiedDate":"2024-01-24"},{"lineNumber":114,"author":{"gitId":"YuSoonZ"},"content":"                        Events events \u003d new Events(arrTask[0], timings[0], timings[1]);","lastModifiedDate":"2024-01-24"},{"lineNumber":115,"author":{"gitId":"YuSoonZ"},"content":"                        taskList.add(events);","lastModifiedDate":"2024-01-24"},{"lineNumber":116,"author":{"gitId":"YuSoonZ"},"content":"                        System.out.println(\"     Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2024-01-24"},{"lineNumber":117,"author":{"gitId":"YuSoonZ"},"content":"                                \"       \" + events.toString() + \"\\n\" +","lastModifiedDate":"2024-01-24"},{"lineNumber":118,"author":{"gitId":"YuSoonZ"},"content":"                                \"     Now you have \" + taskList.size() +","lastModifiedDate":"2024-01-24"},{"lineNumber":119,"author":{"gitId":"YuSoonZ"},"content":"                                \" tasks in the list.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":120,"author":{"gitId":"YuSoonZ"},"content":"                        break;","lastModifiedDate":"2024-01-24"},{"lineNumber":121,"author":{"gitId":"YuSoonZ"},"content":"                    }","lastModifiedDate":"2024-01-24"},{"lineNumber":122,"author":{"gitId":"YuSoonZ"},"content":"                    default:","lastModifiedDate":"2024-01-24"},{"lineNumber":123,"author":{"gitId":"YuSoonZ"},"content":"                        throw new TheAdvisorException(\"Incorrect input, please try again with the correct input of either: \"","lastModifiedDate":"2024-01-24"},{"lineNumber":124,"author":{"gitId":"YuSoonZ"},"content":"                                + \"todo, event, mark...etc\");","lastModifiedDate":"2024-01-24"},{"lineNumber":125,"author":{"gitId":"YuSoonZ"},"content":"                }","lastModifiedDate":"2024-01-24"},{"lineNumber":126,"author":{"gitId":"YuSoonZ"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":127,"author":{"gitId":"YuSoonZ"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":128,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":129,"author":{"gitId":"YuSoonZ"},"content":"    private static void checkIndex(int index, int size) throws TheAdvisorException {","lastModifiedDate":"2024-01-24"},{"lineNumber":130,"author":{"gitId":"YuSoonZ"},"content":"        if (index \u003c\u003d 0) {","lastModifiedDate":"2024-01-24"},{"lineNumber":131,"author":{"gitId":"YuSoonZ"},"content":"            throw new TheAdvisorException(\"We use 1-indexing for marking. Please try again.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":132,"author":{"gitId":"YuSoonZ"},"content":"        } else if (index \u003e size) {","lastModifiedDate":"2024-01-24"},{"lineNumber":133,"author":{"gitId":"YuSoonZ"},"content":"            throw new TheAdvisorException(\"Out of bounds. Please try again.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":134,"author":{"gitId":"YuSoonZ"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":135,"author":{"gitId":"YuSoonZ"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":136,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":137,"author":{"gitId":"YuSoonZ"},"content":"    private static void checkEmptyDescription(String description, String errorMessage) throws TheAdvisorException {","lastModifiedDate":"2024-01-24"},{"lineNumber":138,"author":{"gitId":"YuSoonZ"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2024-01-24"},{"lineNumber":139,"author":{"gitId":"YuSoonZ"},"content":"            throw new TheAdvisorException(errorMessage);","lastModifiedDate":"2024-01-24"},{"lineNumber":140,"author":{"gitId":"YuSoonZ"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":141,"author":{"gitId":"YuSoonZ"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":142,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":143,"author":{"gitId":"YuSoonZ"},"content":"    private static void checkArrayLength(String[] array, int expectedLength, String errorMessage) throws TheAdvisorException {","lastModifiedDate":"2024-01-24"},{"lineNumber":144,"author":{"gitId":"YuSoonZ"},"content":"        if (array.length !\u003d expectedLength) {","lastModifiedDate":"2024-01-24"},{"lineNumber":145,"author":{"gitId":"YuSoonZ"},"content":"            throw new TheAdvisorException(errorMessage);","lastModifiedDate":"2024-01-24"},{"lineNumber":146,"author":{"gitId":"YuSoonZ"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":147,"author":{"gitId":"YuSoonZ"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":148,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":149,"author":{"gitId":"YuSoonZ"},"content":"    private static Prompts getPrompts(String prompt) throws TheAdvisorException {","lastModifiedDate":"2024-01-24"},{"lineNumber":150,"author":{"gitId":"YuSoonZ"},"content":"        try {","lastModifiedDate":"2024-01-24"},{"lineNumber":151,"author":{"gitId":"YuSoonZ"},"content":"            return Prompts.valueOf(prompt.toUpperCase());","lastModifiedDate":"2024-01-24"},{"lineNumber":152,"author":{"gitId":"YuSoonZ"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-01-24"},{"lineNumber":153,"author":{"gitId":"YuSoonZ"},"content":"            throw new TheAdvisorException(\"Invalid command: \" + prompt);","lastModifiedDate":"2024-01-24"},{"lineNumber":154,"author":{"gitId":"YuSoonZ"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":155,"author":{"gitId":"YuSoonZ"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":156,"author":{"gitId":"YuSoonZ"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"YuSoonZ":156}},{"path":"src/main/java/TheAdvisorException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YuSoonZ"},"content":"public class TheAdvisorException extends Exception {","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"YuSoonZ"},"content":"    public TheAdvisorException (String message) {","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"YuSoonZ"},"content":"        super(message);","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"YuSoonZ"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"YuSoonZ"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"YuSoonZ":5}},{"path":"src/main/java/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YuSoonZ"},"content":"public class ToDos extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"YuSoonZ"},"content":"    public ToDos(String description) {","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"YuSoonZ"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"YuSoonZ"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"YuSoonZ"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"YuSoonZ"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"YuSoonZ"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"YuSoonZ"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"YuSoonZ"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"YuSoonZ":10}}]
