[{"path":"src/main/java/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"import java.util.List;","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":"public class AddCommand extends Command\u003cList\u003cTask\u003e\u003e {","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":"    private Task task;","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"amanzainal"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"amanzainal"},"content":"        super(\"add\", List.of());","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"amanzainal"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"amanzainal"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"amanzainal"},"content":"    public List\u003cTask\u003e execute(List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"amanzainal"},"content":"        tasks.add(task);","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"amanzainal"},"content":"        Integer count \u003d tasks.size();","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"amanzainal"},"content":"        System.out.printf(\"\\n        ~~~ \u003e^o_o^\u003c ~~~\\nGot it! I\u0027ve added this task:\\n - %s\\n\\nYou have %d task(s) in the list.\\n\", task, count);","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"amanzainal"},"content":"        return tasks;","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"amanzainal":18}},{"path":"src/main/java/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"import java.util.List;","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":"class ByeCommand extends Command\u003cList\u003cTask\u003e\u003e {","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":"    protected String command;","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":"    protected List\u003cString\u003e arguments;","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"amanzainal"},"content":"    public ByeCommand() {","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"amanzainal"},"content":"        super(\"bye\", List.of());","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"amanzainal"},"content":"    List\u003cTask\u003e execute(List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"amanzainal"},"content":"        return tasks;","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"amanzainal":14}},{"path":"src/main/java/Coat.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"import java.util.List;","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":"import java.util.Optional;","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"amanzainal"},"content":"public class Coat {","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"amanzainal"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"amanzainal"},"content":"        System.out.printf(Messages.WELCOME);","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"amanzainal"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"amanzainal"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"amanzainal"},"content":"        Command\u003cList\u003cTask\u003e\u003e currentCommand \u003d null;","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"amanzainal"},"content":"        while (true) {","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"amanzainal"},"content":"            System.out.printf(\"\\n-\u003e \");","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"amanzainal"},"content":"            String userInput \u003d scanner.nextLine();","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"amanzainal"},"content":"            // Parse user input","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"amanzainal"},"content":"            Command\u003cList\u003cTask\u003e\u003e parsedCommand \u003d CommandParser.parseInput(userInput);","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"amanzainal"},"content":"            // Execute the command","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"amanzainal"},"content":"            if (parsedCommand !\u003d null) {","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"amanzainal"},"content":"                currentCommand \u003d parsedCommand;","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"amanzainal"},"content":"                currentCommand.execute(tasks);","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"amanzainal"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"amanzainal"},"content":"            // Exit condition","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"amanzainal"},"content":"            if (parsedCommand.getCommand().equals(\"bye\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"amanzainal"},"content":"                System.out.printf(Messages.EXIT);","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"amanzainal"},"content":"                break;","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"amanzainal"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"amanzainal"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"amanzainal"},"content":"        scanner.close();","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"amanzainal":36}},{"path":"src/main/java/CoatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"public class CoatException extends RuntimeException {","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":"    public CoatException(String message) {","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":"        super(message);","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"amanzainal":5}},{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"import java.util.List;","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":"abstract class Command\u003cT\u003e {","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":"    protected String command;","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":"    protected List\u003cString\u003e arguments;","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"amanzainal"},"content":"    Command(String command, List\u003cString\u003e arguments) {","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"amanzainal"},"content":"        this.command \u003d command;","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"amanzainal"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"amanzainal"},"content":"    abstract T execute(List\u003cTask\u003e tasks);","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"amanzainal"},"content":"    public String getCommand() {","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"amanzainal"},"content":"        return this.command;","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"amanzainal":17}},{"path":"src/main/java/CommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"import java.util.List;","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":"public class CommandParser {","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":"    public static Command\u003cList\u003cTask\u003e\u003e parseInput(String userInput) throws CoatException {","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":"        try {","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"amanzainal"},"content":"            String[] parts \u003d userInput.split(\" \", 2);","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"amanzainal"},"content":"            String command \u003d parts[0].toLowerCase();","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"amanzainal"},"content":"            List\u003cString\u003e arguments \u003d parts.length \u003e 1 ? List.of(parts[1].split(\"\\\\s+\")) : List.of();","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"amanzainal"},"content":"            String taskDescription \u003d extractTaskDescription(arguments);","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"amanzainal"},"content":"            String deadline \u003d \"Error: No deadline set.\";","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"amanzainal"},"content":"            String start \u003d \"Error: No start time set.\";","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"amanzainal"},"content":"            String end \u003d \"Error: No end time set.\";","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"amanzainal"},"content":"            // Get Deadline","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"amanzainal"},"content":"            if (arguments.contains(\"/by\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"amanzainal"},"content":"                int index \u003d arguments.indexOf(\"/by\");","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"amanzainal"},"content":"                if (index \u003c arguments.size() - 1) {","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"amanzainal"},"content":"                    deadline \u003d String.join(\" \", arguments.subList(index + 1, arguments.size()));","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"amanzainal"},"content":"                } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"amanzainal"},"content":"                    throw new CoatException(\"Error: Missing deadline after /by. Correct format: /by \u003cdeadline\u003e\");","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"amanzainal"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"amanzainal"},"content":"            } else if (command.equals(\"deadline\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"amanzainal"},"content":"                throw new CoatException(\"Error: No description provided for the deadline command.\\nCorrect format: deadline \u003cdescription\u003e /by \u003cdeadline\u003e\\n\");","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"amanzainal"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"amanzainal"},"content":"            // Get From / To values","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"amanzainal"},"content":"            if (arguments.contains(\"/from\") \u0026\u0026 arguments.contains(\"/to\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"amanzainal"},"content":"                int fromIndex \u003d arguments.indexOf(\"/from\");","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"amanzainal"},"content":"                int toIndex \u003d arguments.indexOf(\"/to\");","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"amanzainal"},"content":"                if (fromIndex \u003c toIndex \u0026\u0026 toIndex \u003c arguments.size() - 1) {","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"amanzainal"},"content":"                    start \u003d String.join(\" \", arguments.subList(fromIndex + 1, toIndex));","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"amanzainal"},"content":"                    end \u003d String.join(\" \", arguments.subList(toIndex + 1, arguments.size()));","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"amanzainal"},"content":"                } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"amanzainal"},"content":"                    throw new CoatException(\"Error: Missing /from or /to after event command. Correct format: event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e\");","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"amanzainal"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"amanzainal"},"content":"            } else if (arguments.contains(\"/from\") || arguments.contains(\"/to\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"amanzainal"},"content":"                throw new CoatException(\"Error: Both /from and /to are required for the event command. Correct format: /from \u003cstart\u003e /to \u003cend\u003e\");","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"amanzainal"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"amanzainal"},"content":"            switch (command) {","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"amanzainal"},"content":"                case \"help\":","lastModifiedDate":"2024-01-26"},{"lineNumber":43,"author":{"gitId":"amanzainal"},"content":"                    return new HelpCommand();","lastModifiedDate":"2024-01-26"},{"lineNumber":44,"author":{"gitId":"amanzainal"},"content":"                case \"list\":","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"amanzainal"},"content":"                    return new ListCommand();","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"amanzainal"},"content":"                case \"mark\":","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"amanzainal"},"content":"                    return new MarkCommand(arguments);","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"amanzainal"},"content":"                case \"bye\":","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"amanzainal"},"content":"                    return new ByeCommand();","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"amanzainal"},"content":"                case \"unmark\":","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"amanzainal"},"content":"                    return new UnmarkCommand(arguments);","lastModifiedDate":"2024-01-25"},{"lineNumber":52,"author":{"gitId":"amanzainal"},"content":"                case \"delete\":","lastModifiedDate":"2024-01-25"},{"lineNumber":53,"author":{"gitId":"amanzainal"},"content":"                    return new DeleteCommand(arguments);","lastModifiedDate":"2024-01-25"},{"lineNumber":54,"author":{"gitId":"amanzainal"},"content":"                case \"todo\":","lastModifiedDate":"2024-01-25"},{"lineNumber":55,"author":{"gitId":"amanzainal"},"content":"                    if (taskDescription.isEmpty()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":56,"author":{"gitId":"amanzainal"},"content":"                        throw new CoatException(\"Error: Todo description cannot be empty.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":57,"author":{"gitId":"amanzainal"},"content":"                    }","lastModifiedDate":"2024-01-25"},{"lineNumber":58,"author":{"gitId":"amanzainal"},"content":"                    return new AddCommand(new ToDo(taskDescription));","lastModifiedDate":"2024-01-25"},{"lineNumber":59,"author":{"gitId":"amanzainal"},"content":"                case \"deadline\":","lastModifiedDate":"2024-01-25"},{"lineNumber":60,"author":{"gitId":"amanzainal"},"content":"                    if (taskDescription.isEmpty()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":61,"author":{"gitId":"amanzainal"},"content":"                        throw new CoatException(\"Error: Deadline description cannot be empty.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":62,"author":{"gitId":"amanzainal"},"content":"                    }","lastModifiedDate":"2024-01-25"},{"lineNumber":63,"author":{"gitId":"amanzainal"},"content":"                    return new AddCommand(new Deadline(taskDescription, deadline));","lastModifiedDate":"2024-01-25"},{"lineNumber":64,"author":{"gitId":"amanzainal"},"content":"                case \"event\":","lastModifiedDate":"2024-01-25"},{"lineNumber":65,"author":{"gitId":"amanzainal"},"content":"                    if (taskDescription.isEmpty()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":66,"author":{"gitId":"amanzainal"},"content":"                        throw new CoatException(\"Error: Event description cannot be empty.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":67,"author":{"gitId":"amanzainal"},"content":"                    } else if (start.equals(\"Error: No start time set.\") || end.equals(\"Error: No end time set.\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":68,"author":{"gitId":"amanzainal"},"content":"                        throw new CoatException(\"Error: Both start and end times are required for the event command. Correct format: /from \u003cstart\u003e /to \u003cend\u003e\");","lastModifiedDate":"2024-01-25"},{"lineNumber":69,"author":{"gitId":"amanzainal"},"content":"                    }","lastModifiedDate":"2024-01-25"},{"lineNumber":70,"author":{"gitId":"amanzainal"},"content":"                    return new AddCommand(new Event(taskDescription, start, end));","lastModifiedDate":"2024-01-25"},{"lineNumber":71,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":72,"author":{"gitId":"amanzainal"},"content":"                default:","lastModifiedDate":"2024-01-25"},{"lineNumber":73,"author":{"gitId":"amanzainal"},"content":"                    throw new CoatException(\"Sorry.. I don\u0027t know what that means! If you want to leave, just say \u0027bye\u0027! :(\");","lastModifiedDate":"2024-01-26"},{"lineNumber":74,"author":{"gitId":"amanzainal"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":75,"author":{"gitId":"amanzainal"},"content":"        } catch (CoatException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":76,"author":{"gitId":"amanzainal"},"content":"            System.out.printf(\"\\n%s\" + e.getMessage());","lastModifiedDate":"2024-01-26"},{"lineNumber":77,"author":{"gitId":"amanzainal"},"content":"            return new UnknownCommand();","lastModifiedDate":"2024-01-25"},{"lineNumber":78,"author":{"gitId":"amanzainal"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":79,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":80,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":81,"author":{"gitId":"amanzainal"},"content":"    private static String extractTaskDescription(List\u003cString\u003e arguments) {","lastModifiedDate":"2024-01-25"},{"lineNumber":82,"author":{"gitId":"amanzainal"},"content":"        int keywordIndex \u003d findKeywordIndex(arguments, \"/by\", \"/from\", \"/to\");","lastModifiedDate":"2024-01-25"},{"lineNumber":83,"author":{"gitId":"amanzainal"},"content":"        if (keywordIndex !\u003d -1) {","lastModifiedDate":"2024-01-25"},{"lineNumber":84,"author":{"gitId":"amanzainal"},"content":"            return String.join(\" \", arguments.subList(0, keywordIndex));","lastModifiedDate":"2024-01-25"},{"lineNumber":85,"author":{"gitId":"amanzainal"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":86,"author":{"gitId":"amanzainal"},"content":"        return String.join(\" \", arguments);","lastModifiedDate":"2024-01-25"},{"lineNumber":87,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":88,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":89,"author":{"gitId":"amanzainal"},"content":"    private static int findKeywordIndex(List\u003cString\u003e arguments, String... keywords) {","lastModifiedDate":"2024-01-25"},{"lineNumber":90,"author":{"gitId":"amanzainal"},"content":"        for (String keyword : keywords) {","lastModifiedDate":"2024-01-25"},{"lineNumber":91,"author":{"gitId":"amanzainal"},"content":"            if (arguments.contains(keyword)) {","lastModifiedDate":"2024-01-25"},{"lineNumber":92,"author":{"gitId":"amanzainal"},"content":"                return arguments.indexOf(keyword);","lastModifiedDate":"2024-01-25"},{"lineNumber":93,"author":{"gitId":"amanzainal"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":94,"author":{"gitId":"amanzainal"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":95,"author":{"gitId":"amanzainal"},"content":"        return -1;","lastModifiedDate":"2024-01-25"},{"lineNumber":96,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":97,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"amanzainal":97}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":"    private String deadline;","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":"    private TaskType type;","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":"    public Deadline(String description, String deadline) {","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"amanzainal"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"amanzainal"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"amanzainal"},"content":"        this.type \u003d TaskType.D;","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"amanzainal"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"amanzainal"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"amanzainal"},"content":"        return String.format(\"[%s]%s (by: %s)\", type, super.toString(), deadline);","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"amanzainal":15}},{"path":"src/main/java/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"import java.util.List;","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":"public class DeleteCommand extends Command\u003cList\u003cTask\u003e\u003e {","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":"    public DeleteCommand(List\u003cString\u003e arguments) {","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":"        super(\"delete\", arguments);","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"amanzainal"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"amanzainal"},"content":"    List\u003cTask\u003e execute(List\u003cTask\u003e tasks) throws CoatException {","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"amanzainal"},"content":"        try {","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"amanzainal"},"content":"            if (arguments.isEmpty()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"amanzainal"},"content":"                throw new CoatException(\"Hey, you need to tell me which one to delete! Try \u0027delete \u003cNUMBER\u003e\u0027. ~(\u003e_\u003c)\\n\");","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"amanzainal"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"amanzainal"},"content":"            int index \u003d Integer.parseInt(arguments.get(0)) - 1;","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"amanzainal"},"content":"            if (index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"amanzainal"},"content":"                tasks.remove(index);","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"amanzainal"},"content":"                System.out.printf(\"\\nDeleted task %d ~(^-^)\\n \", index + 1);","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"amanzainal"},"content":"            } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"amanzainal"},"content":"                throw new CoatException(String.format(\"I can\u0027t do that.. Task index %s is out of range! ~(T_T)\\n\", arguments.get(0)));","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"amanzainal"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"amanzainal"},"content":"        } catch (CoatException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"amanzainal"},"content":"            System.out.printf(\"%s\", e.getMessage());","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"amanzainal"},"content":"            return tasks;","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"amanzainal"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"amanzainal"},"content":"            System.out.printf(\"Sigh.. That\u0027s not a valid number! Try \u0027delete \u003cNUMBER\u003e\u0027.\\n\");","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"amanzainal"},"content":"            return tasks;","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"amanzainal"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"amanzainal"},"content":"        return tasks;","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"amanzainal":33}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":"    private String start;","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":"    private String end;","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":"    private TaskType type;","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"amanzainal"},"content":"    public Event(String description, String start, String end) {","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"amanzainal"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"amanzainal"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"amanzainal"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"amanzainal"},"content":"        this.type \u003d TaskType.E;","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"amanzainal"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"amanzainal"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"amanzainal"},"content":"        return String.format(\"[%s]%s (from: %s to: %s)\", type, super.toString(), start, end);","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"amanzainal":17}},{"path":"src/main/java/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"import java.util.List;","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":"public class HelpCommand extends Command\u003cList\u003cTask\u003e\u003e {","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":"    public HelpCommand() {","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":"        super(\"help\", List.of());","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"amanzainal"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"amanzainal"},"content":"    List\u003cTask\u003e execute(List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"amanzainal"},"content":"        System.out.printf(\"\\nHere\u0027s all the things I can do for you! ~(^o.o^)\\n\");","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"amanzainal"},"content":"        System.out.println(\"1. todo \u003cdescription\u003e - Add a reminder to do something!\");","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"amanzainal"},"content":"        System.out.println(\"2. deadline \u003cdescription\u003e /by \u003cdeadline\u003e - Add a reminder.. with a deadline!\");","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"amanzainal"},"content":"        System.out.println(\"3. event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e - Add an event to your calendar\");","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"amanzainal"},"content":"        System.out.println(\"4. list - List all your tasks and events\");","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"amanzainal"},"content":"        System.out.println(\"5. mark \u003cindex\u003e - Mark a task as done\");","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"amanzainal"},"content":"        System.out.println(\"6. unmark \u003cindex\u003e - Mark a task as undone\");","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"amanzainal"},"content":"        System.out.println(\"7. delete \u003cindex\u003e - Delete a task. Warning! I have bad memory. (I can\u0027t restore deleted tasks)\");","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"amanzainal"},"content":"        System.out.println(\"8. help - Show this list of commands\");","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"amanzainal"},"content":"        System.out.println(\"9. bye - Leave :(\");","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"amanzainal"},"content":"        return tasks;","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"amanzainal":22}},{"path":"src/main/java/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"import java.util.List;","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":"class ListCommand extends Command\u003cList\u003cTask\u003e\u003e {","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":"    ListCommand() {","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":"        super(\"list\", List.of());","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"amanzainal"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"amanzainal"},"content":"    List\u003cTask\u003e execute(List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"amanzainal"},"content":"        System.out.printf(\"\\nHere\u0027s your list! ~~(^-^)\\n\");","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"amanzainal"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"amanzainal"},"content":"            System.out.printf(\"%d. %s\\n\", i + 1, tasks.get(i));","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"amanzainal"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"amanzainal"},"content":"        return tasks;","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"amanzainal":16}},{"path":"src/main/java/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"import java.util.List;","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":"class MarkCommand extends Command\u003cList\u003cTask\u003e\u003e {","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":"    public MarkCommand(List\u003cString\u003e arguments) {","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":"        super(\"mark\", arguments);","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"amanzainal"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"amanzainal"},"content":"    List\u003cTask\u003e execute(List\u003cTask\u003e tasks) throws CoatException {","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"amanzainal"},"content":"        // Assuming arguments is a list of one string","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"amanzainal"},"content":"        if (!arguments.isEmpty()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"amanzainal"},"content":"            try {","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"amanzainal"},"content":"                int index \u003d Integer.parseInt(arguments.get(0)) - 1;","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"amanzainal"},"content":"                if (index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"amanzainal"},"content":"                    Task task \u003d tasks.get(index);","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"amanzainal"},"content":"                    if (!task.isDone()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"amanzainal"},"content":"                        task.markAsDone();","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"amanzainal"},"content":"                        System.out.printf(\"Marked task %d as done: %s\\nGood job! ~(^-^)\\n\", index + 1, task.getDescription());","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"amanzainal"},"content":"                    } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"amanzainal"},"content":"                        throw new CoatException(String.format(\"I can\u0027t do that.. Task %d is already done! ~(T_T)\\n\", index + 1));","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"amanzainal"},"content":"                    }","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"amanzainal"},"content":"                } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"amanzainal"},"content":"                    throw new CoatException(String.format(\"I can\u0027t do that.. Task index %s is out of range! ~(T_T)\\n\", arguments.get(0)));","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"amanzainal"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"amanzainal"},"content":"            } catch (CoatException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"amanzainal"},"content":"                System.out.printf(\"%s\", e.getMessage());","lastModifiedDate":"2024-01-26"},{"lineNumber":27,"author":{"gitId":"amanzainal"},"content":"                return tasks;","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"amanzainal"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"amanzainal"},"content":"                System.out.printf(\"Sigh.. That\u0027s not a valid number! Try \u0027mark \u003cNUMBER\u003e\u0027.\\n\");","lastModifiedDate":"2024-01-26"},{"lineNumber":30,"author":{"gitId":"amanzainal"},"content":"                return tasks;","lastModifiedDate":"2024-01-26"},{"lineNumber":31,"author":{"gitId":"amanzainal"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"amanzainal"},"content":"        } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"amanzainal"},"content":"            System.out.printf(\"I can\u0027t do that.. You need to specify a task index! Try \\\"mark \u003cindex\u003e\\\".. \\n\");","lastModifiedDate":"2024-01-26"},{"lineNumber":34,"author":{"gitId":"amanzainal"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"amanzainal"},"content":"        return tasks;","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"amanzainal":38}},{"path":"src/main/java/Messages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":" * This class contains ASCII art messages generated online.","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":" * Escape characters for backslashes have been added to the ASCII art.","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":" *","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":" * @author @AmanZainal","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"amanzainal"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"amanzainal"},"content":"public class Messages {","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"amanzainal"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"amanzainal"},"content":"     * The ASCII art representing a welcome message.","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"amanzainal"},"content":"     * Includes a stylized text and an ASCII art cat saying \"meow.\"","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"amanzainal"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"amanzainal"},"content":"    public static final String WELCOME \u003d","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"amanzainal"},"content":"            \"  _____            _     _   _             _____      _   _           _   \\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"amanzainal"},"content":"            \" / ____|          | |   | | | |           / ____|    | | | |         | |  \\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"amanzainal"},"content":"            \"| |     ___   __ _| |_  | |_| |__   ___  | |     __ _| |_| |__   ___ | |_ \\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"amanzainal"},"content":"            \"| |    / _ \\\\ / _` | __| | __| \u0027_ \\\\ / _ \\\\ | |    / _` | __| \u0027_ \\\\ / _ \\\\| __|\\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"amanzainal"},"content":"            \"| |___| (_) | (_| | |_  | |_| | | |  __/ | |___| (_| | |_| |_) | (_) | |_ \\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"amanzainal"},"content":"            \"\\\\_____/\\\\___/ \\\\__,_|\\\\__|  \\\\__|_| |_|\\\\___| \\\\_____|\\\\__,_|\\\\__|_.__/ \\\\___/ \\\\__|\\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"amanzainal"},"content":"            \"                                                                          \\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"amanzainal"},"content":"            \"                        _    _      _ _       _                        \\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"amanzainal"},"content":"            \"                       | |  | |    | | |     | |         /\\\\_/\\\\  meow    \\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"amanzainal"},"content":"            \"  ___  __ _ _   _ ___  | |__| | ___| | | ___ | |        ( o.o )       \\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"amanzainal"},"content":"            \" / __|/ _` | | | / __| |  __  |/ _ \\\\ | |/ _ \\\\| |         \u003e ^ \u003c         \\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"amanzainal"},"content":"            \" \\\\__ \\\\ (_| | |_| \\\\__ \\\\ | |  | |  __/ | | (_) |_|                   \\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"amanzainal"},"content":"            \" |___/\\\\__,_|\\\\__, |___/ |_|  |_|\\\\___|_|_|\\\\___/(_)                   \\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"amanzainal"},"content":"            \"             __/ |                                                     \\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"amanzainal"},"content":"            \"            |___/                                                      \\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"amanzainal"},"content":"            \"\\nWhat are we doing today? ~(^o.o^)\\nSay \u0027help\u0027 if you want to know the tricks I can do!\";","lastModifiedDate":"2024-01-26"},{"lineNumber":32,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"amanzainal"},"content":"    public static final String EXIT \u003d","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"amanzainal"},"content":"    \"Aw, see you soon! :3\\n\";","lastModifiedDate":"2024-01-26"},{"lineNumber":35,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"amanzainal":36}},{"path":"src/main/java/Pair.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":" * This utility class stores two items together in a pair.","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":" * It could be used, for instance, to faciliate returning of","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":" * two values in a function.","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":" *","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"amanzainal"},"content":" * @author cs2030","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"amanzainal"},"content":" * @param \u003cT\u003e the type of the first element","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"amanzainal"},"content":" * @param \u003cU\u003e the type of the second element","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"amanzainal"},"content":" **/","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"amanzainal"},"content":"public class Pair\u003cT, U\u003e {","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"amanzainal"},"content":"    private final T t;","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"amanzainal"},"content":"    private final U u;","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"amanzainal"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"amanzainal"},"content":"     * Creates a {@code Pair} of items.","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"amanzainal"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"amanzainal"},"content":"     * @param t first item of the pair","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"amanzainal"},"content":"     * @param u second item of the pair","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"amanzainal"},"content":"     **/","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"amanzainal"},"content":"    public Pair(T t, U u) {","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"amanzainal"},"content":"        this.t \u003d t;","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"amanzainal"},"content":"        this.u \u003d u;","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"amanzainal"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"amanzainal"},"content":"     * Returns the first item of the pair.","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"amanzainal"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"amanzainal"},"content":"     * @return the first item of the pair","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"amanzainal"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"amanzainal"},"content":"    public T first() {","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"amanzainal"},"content":"        return this.t;","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"amanzainal"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"amanzainal"},"content":"     * Returns the second item of the pair.","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"amanzainal"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"amanzainal"},"content":"     * @return the second item of the pair","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"amanzainal"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"amanzainal"},"content":"    public U second() {","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"amanzainal"},"content":"        return this.u;","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"amanzainal"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"amanzainal"},"content":"     * Returns a string representation of this pair enclosed in ({@code \"()\"}).","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"amanzainal"},"content":"     * The two elements are separated by the characters {@code \", \"} (comma and space).","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"amanzainal"},"content":"     * Elements are converted to strings as by {@link String#valueOf(Object)}.","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"amanzainal"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"amanzainal"},"content":"     * @return a string representation of this list","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"amanzainal"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"amanzainal"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"amanzainal"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":52,"author":{"gitId":"amanzainal"},"content":"        return \"(\" + this.t + \", \" + this.u + \")\";","lastModifiedDate":"2024-01-25"},{"lineNumber":53,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":54,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"amanzainal":54}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"public class Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":"    private String description;","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":"    private boolean isDone;","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"amanzainal"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"amanzainal"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"amanzainal"},"content":"    public String getDescription() {","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"amanzainal"},"content":"        return description;","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"amanzainal"},"content":"    public boolean isDone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"amanzainal"},"content":"        return isDone;","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"amanzainal"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"amanzainal"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"amanzainal"},"content":"    public void markUndone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"amanzainal"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"amanzainal"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"amanzainal"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"amanzainal"},"content":"        return String.format(\"[%s] %s\", isDone ? \"X\" : \" \", description);","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"amanzainal":30}},{"path":"src/main/java/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"public enum TaskType {","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":"    T,","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":"    D,","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":"    E","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"amanzainal":5}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":"    private TaskType type;","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"amanzainal"},"content":"        this.type \u003d TaskType.T;","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"amanzainal"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"amanzainal"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"amanzainal"},"content":"        return String.format(\"[%s]%s\", type, super.toString());","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"amanzainal":13}},{"path":"src/main/java/UnknownCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"import java.util.List;","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":"public class UnknownCommand extends Command\u003cList\u003cTask\u003e\u003e {","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":"    public UnknownCommand() {","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":"        super(\"\", List.of());","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"amanzainal"},"content":"    List\u003cTask\u003e execute(List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"amanzainal"},"content":"        return null;","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"amanzainal":11}},{"path":"src/main/java/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"import java.util.List;","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":"class UnmarkCommand extends Command\u003cList\u003cTask\u003e\u003e {","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":"    public UnmarkCommand(List\u003cString\u003e arguments) {","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":"        super(\"unmark\", arguments);","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"amanzainal"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"amanzainal"},"content":"    List\u003cTask\u003e execute(List\u003cTask\u003e tasks) throws CoatException {","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"amanzainal"},"content":"        // Assuming arguments is a list of one string","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"amanzainal"},"content":"        if (!arguments.isEmpty()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"amanzainal"},"content":"            try {","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"amanzainal"},"content":"                int index \u003d Integer.parseInt(arguments.get(0)) - 1;","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"amanzainal"},"content":"                if (index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"amanzainal"},"content":"                    Task task \u003d tasks.get(index);","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"amanzainal"},"content":"                    if (task.isDone()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"amanzainal"},"content":"                        task.markUndone();","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"amanzainal"},"content":"                        System.out.printf(\"Oh no.. Marked task %d as undone: %s\\n\", index + 1, task.getDescription());","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"amanzainal"},"content":"                    } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"amanzainal"},"content":"                        throw new CoatException(String.format(\"I can\u0027t do that.. Task %d is already undone! ~(T_T)\\n\", index + 1));","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"amanzainal"},"content":"                    }","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"amanzainal"},"content":"                } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"amanzainal"},"content":"                    throw new CoatException(String.format(\"I can\u0027t do that.. Task index %s is out of range! ~(T_T)\\n\", arguments.get(0)));","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"amanzainal"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"amanzainal"},"content":"            } catch (CoatException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"amanzainal"},"content":"                System.out.printf(\"%s\", e.getMessage());","lastModifiedDate":"2024-01-26"},{"lineNumber":27,"author":{"gitId":"amanzainal"},"content":"                return tasks;","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"amanzainal"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"amanzainal"},"content":"                System.out.printf(\"Sigh.. That\u0027s not a valid number! Try \u0027unmark \u003cNUMBER\u003e\u0027.\\n\");","lastModifiedDate":"2024-01-26"},{"lineNumber":30,"author":{"gitId":"amanzainal"},"content":"                return tasks;","lastModifiedDate":"2024-01-26"},{"lineNumber":31,"author":{"gitId":"amanzainal"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"amanzainal"},"content":"        } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"amanzainal"},"content":"            System.out.printf(\"I can\u0027t do that.. You need to specify a task index! Try \\\"mark \u003cindex\u003e\\\".. \\n\");","lastModifiedDate":"2024-01-26"},{"lineNumber":34,"author":{"gitId":"amanzainal"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"amanzainal"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"amanzainal"},"content":"        return tasks;","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"amanzainal"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"amanzainal"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"amanzainal":38}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"amanzainal"},"content":"Hello","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"amanzainal"},"content":"todo borrow book","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"amanzainal"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"amanzainal"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"amanzainal"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"amanzainal"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"amanzainal"},"content":"bye","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"amanzainal":7}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"amanzainal"},"content":"java -classpath ..\\bin Coat \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"amanzainal":1}}]
