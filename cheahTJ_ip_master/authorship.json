[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheahTJ"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"cheahTJ"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"cheahTJ"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"cheahTJ"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"cheahTJ"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"cheahTJ"},"content":"        super(description);","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"cheahTJ"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"cheahTJ"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"cheahTJ"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"cheahTJ"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy, HHmm\")) + \")\";","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"cheahTJ"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"cheahTJ":16}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"cheahTJ"},"content":"    private fileStorage storage;","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"cheahTJ"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"cheahTJ"},"content":"    private UI ui;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"cheahTJ"},"content":"    private Parser parser;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"cheahTJ"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"cheahTJ"},"content":"        this.ui \u003d new UI();","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"cheahTJ"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"cheahTJ"},"content":"            this.storage \u003d new fileStorage(filePath);","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"cheahTJ"},"content":"            this.tasks \u003d new TaskList(storage.bootingUp());","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"cheahTJ"},"content":"        } catch (myBotException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"cheahTJ"},"content":"            this.tasks \u003d new TaskList();","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"cheahTJ"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":18,"author":{"gitId":"cheahTJ"},"content":"    public void run() {","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"cheahTJ"},"content":"        ui.showWelcome();","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"cheahTJ"},"content":"        while (true) {","lastModifiedDate":"2024-01-21"},{"lineNumber":21,"author":{"gitId":"cheahTJ"},"content":"            String userInput \u003d ui.readCommand();","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"cheahTJ"},"content":"            String[] words \u003d userInput.split(\" \");","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"cheahTJ"},"content":"            parser \u003d new Parser(userInput);","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"cheahTJ"},"content":"            if (userInput.equals(\"bye\")) {","lastModifiedDate":"2024-01-21"},{"lineNumber":26,"author":{"gitId":"cheahTJ"},"content":"                ui.sayGoodbye();","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"cheahTJ"},"content":"                break;","lastModifiedDate":"2024-01-21"},{"lineNumber":28,"author":{"gitId":"cheahTJ"},"content":"            } else if (userInput.equals(\"list\")) {","lastModifiedDate":"2024-01-21"},{"lineNumber":29,"author":{"gitId":"cheahTJ"},"content":"                ui.listText();","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"cheahTJ"},"content":"                tasks.listTask();","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"cheahTJ"},"content":"            } else if (words[0].equals(\"mark\")) {","lastModifiedDate":"2024-01-22"},{"lineNumber":32,"author":{"gitId":"cheahTJ"},"content":"                try {","lastModifiedDate":"2024-01-23"},{"lineNumber":33,"author":{"gitId":"cheahTJ"},"content":"                    int taskNumber \u003d parser.markParser(tasks.getTaskSize());","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"cheahTJ"},"content":"                    tasks.updateTaskToStorage(this.storage);","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"cheahTJ"},"content":"                    ui.markTaskText(taskNumber, this.tasks);","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"cheahTJ"},"content":"                } catch (myBotException e) {","lastModifiedDate":"2024-01-23"},{"lineNumber":37,"author":{"gitId":"cheahTJ"},"content":"                    ui.showError(e.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"cheahTJ"},"content":"                }","lastModifiedDate":"2024-01-23"},{"lineNumber":39,"author":{"gitId":"cheahTJ"},"content":"            } else if (words[0].equals(\"unmark\")) {","lastModifiedDate":"2024-01-22"},{"lineNumber":40,"author":{"gitId":"cheahTJ"},"content":"                try {","lastModifiedDate":"2024-01-23"},{"lineNumber":41,"author":{"gitId":"cheahTJ"},"content":"                    int taskNum \u003d parser.unmarkParser(tasks.getTaskSize());","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"cheahTJ"},"content":"                    tasks.updateTaskToStorage(this.storage);","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"cheahTJ"},"content":"                    ui.unmarkTaskText(taskNum, this.tasks);","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"cheahTJ"},"content":"                } catch (myBotException e) {","lastModifiedDate":"2024-01-23"},{"lineNumber":45,"author":{"gitId":"cheahTJ"},"content":"                    ui.showError(e.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"cheahTJ"},"content":"                }","lastModifiedDate":"2024-01-23"},{"lineNumber":47,"author":{"gitId":"cheahTJ"},"content":"            } else if (words[0].equals(\"todo\")) {","lastModifiedDate":"2024-01-23"},{"lineNumber":48,"author":{"gitId":"cheahTJ"},"content":"                try {","lastModifiedDate":"2024-01-23"},{"lineNumber":49,"author":{"gitId":"cheahTJ"},"content":"                    ToDos todo \u003d parser.todoParser();","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"cheahTJ"},"content":"                    tasks.addTask(todo);","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"cheahTJ"},"content":"                    tasks.updateTaskToStorage(this.storage);","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"cheahTJ"},"content":"                    ui.additionToTasksText(todo, this.tasks);","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"cheahTJ"},"content":"                } catch (myBotException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"cheahTJ"},"content":"                    ui.showError(e.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"cheahTJ"},"content":"                }","lastModifiedDate":"2024-01-23"},{"lineNumber":56,"author":{"gitId":"cheahTJ"},"content":"            } else if (words[0].equals(\"deadline\")) {","lastModifiedDate":"2024-01-22"},{"lineNumber":57,"author":{"gitId":"cheahTJ"},"content":"                try {","lastModifiedDate":"2024-01-23"},{"lineNumber":58,"author":{"gitId":"cheahTJ"},"content":"                    Deadline deadlineTask \u003d parser.deadlineParser();","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"cheahTJ"},"content":"                    tasks.addTask(deadlineTask);","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"cheahTJ"},"content":"                    tasks.updateTaskToStorage(this.storage);","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"cheahTJ"},"content":"                    ui.additionToTasksText(deadlineTask, this.tasks);","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"cheahTJ"},"content":"                } catch (myBotException e) {","lastModifiedDate":"2024-01-23"},{"lineNumber":63,"author":{"gitId":"cheahTJ"},"content":"                    ui.showError(e.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"cheahTJ"},"content":"                }","lastModifiedDate":"2024-01-23"},{"lineNumber":65,"author":{"gitId":"cheahTJ"},"content":"            } else if (words[0].equals(\"event\")) {","lastModifiedDate":"2024-01-22"},{"lineNumber":66,"author":{"gitId":"cheahTJ"},"content":"                try {","lastModifiedDate":"2024-01-23"},{"lineNumber":67,"author":{"gitId":"cheahTJ"},"content":"                    Events events \u003d parser.eventsParser();","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"cheahTJ"},"content":"                    tasks.addTask(events);","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"cheahTJ"},"content":"                    tasks.updateTaskToStorage(this.storage);","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"cheahTJ"},"content":"                    ui.additionToTasksText(events, this.tasks);","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"cheahTJ"},"content":"                } catch (myBotException e) {","lastModifiedDate":"2024-01-23"},{"lineNumber":72,"author":{"gitId":"cheahTJ"},"content":"                    ui.showError(e.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":73,"author":{"gitId":"cheahTJ"},"content":"                }","lastModifiedDate":"2024-01-23"},{"lineNumber":74,"author":{"gitId":"cheahTJ"},"content":"            } else if (words[0].equals(\"delete\")) {","lastModifiedDate":"2024-01-23"},{"lineNumber":75,"author":{"gitId":"cheahTJ"},"content":"                try {","lastModifiedDate":"2024-01-23"},{"lineNumber":76,"author":{"gitId":"cheahTJ"},"content":"                    int taskNumber \u003d parser.deleteParser(tasks.getTaskSize());","lastModifiedDate":"2024-01-30"},{"lineNumber":77,"author":{"gitId":"cheahTJ"},"content":"                    ui.deletionToTasksText(taskNumber, this.tasks);","lastModifiedDate":"2024-01-30"},{"lineNumber":78,"author":{"gitId":"cheahTJ"},"content":"                    tasks.updateTaskToStorage(this.storage);","lastModifiedDate":"2024-01-30"},{"lineNumber":79,"author":{"gitId":"cheahTJ"},"content":"                } catch (myBotException e) {","lastModifiedDate":"2024-01-23"},{"lineNumber":80,"author":{"gitId":"cheahTJ"},"content":"                    ui.showError(e.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":81,"author":{"gitId":"cheahTJ"},"content":"                }","lastModifiedDate":"2024-01-23"},{"lineNumber":82,"author":{"gitId":"cheahTJ"},"content":"            } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":83,"author":{"gitId":"cheahTJ"},"content":"                ui.showError(\"OOPS! I\u0027m sorry, but I don\u0027t know what that means :\u0027(\");","lastModifiedDate":"2024-01-30"},{"lineNumber":84,"author":{"gitId":"cheahTJ"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":85,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":86,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":87,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-30"},{"lineNumber":89,"author":{"gitId":"cheahTJ"},"content":"        new Duke(\"./data/dukeData.txt\").run();","lastModifiedDate":"2024-01-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"cheahTJ":87,"-":4}},{"path":"src/main/java/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheahTJ"},"content":"public class Events extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"cheahTJ"},"content":"    protected String start;","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"cheahTJ"},"content":"    protected String end;","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"cheahTJ"},"content":"    public Events(String description, String start, String end) {","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"cheahTJ"},"content":"        super(description);","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"cheahTJ"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"cheahTJ"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"cheahTJ"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"cheahTJ"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"cheahTJ"},"content":"        return \"[E]\" + super.toString() + \" (from:\" + start + \" to:\" + end + \")\";","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"cheahTJ"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"cheahTJ":14}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheahTJ"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"cheahTJ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"cheahTJ"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"cheahTJ"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"cheahTJ"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"cheahTJ"},"content":"public class Parser {","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"cheahTJ"},"content":"    protected String userInput;","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"cheahTJ"},"content":"    protected ArrayList\u003cString\u003e words;","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"cheahTJ"},"content":"    public Parser (String userInput) {","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"cheahTJ"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"cheahTJ"},"content":"        this.words \u003d new ArrayList\u003c\u003e(Arrays.asList(userInput.split(\" \")));}","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"cheahTJ"},"content":"    /*","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"cheahTJ"},"content":"     * Returns a todo object with the task description","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"cheahTJ"},"content":"     * Handles errors where user fails to include task description","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"cheahTJ"},"content":"    public ToDos todoParser() throws myBotException {","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"cheahTJ"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"cheahTJ"},"content":"            if (!this.words.get(1).isEmpty()) {","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"cheahTJ"},"content":"                StringBuilder description \u003d new StringBuilder(this.words.get(1));","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"cheahTJ"},"content":"                for (int i \u003d 2; i \u003c words.size(); i++) {","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"cheahTJ"},"content":"                    description.append(\" \").append(this.words.get(i));","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"cheahTJ"},"content":"                }","lastModifiedDate":"2024-01-22"},{"lineNumber":26,"author":{"gitId":"cheahTJ"},"content":"                return new ToDos(description.toString());","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"cheahTJ"},"content":"            } else {","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"cheahTJ"},"content":"                throw new IndexOutOfBoundsException();","lastModifiedDate":"2024-01-23"},{"lineNumber":29,"author":{"gitId":"cheahTJ"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":30,"author":{"gitId":"cheahTJ"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"cheahTJ"},"content":"            throw new myBotException(\"OOPS! The command is incomplete. Please provide a task description!\");","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":34,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":35,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":36,"author":{"gitId":"cheahTJ"},"content":"    /*","lastModifiedDate":"2024-01-23"},{"lineNumber":37,"author":{"gitId":"cheahTJ"},"content":"     * Return a deadline object with task description and date/time to complete the task","lastModifiedDate":"2024-01-23"},{"lineNumber":38,"author":{"gitId":"cheahTJ"},"content":"     * Handles error where user forgets to include task description, a deadline,","lastModifiedDate":"2024-01-23"},{"lineNumber":39,"author":{"gitId":"cheahTJ"},"content":"     * or when there is an incorrect syntax (e.g. never include /by)","lastModifiedDate":"2024-01-23"},{"lineNumber":40,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":41,"author":{"gitId":"cheahTJ"},"content":"    public Deadline deadlineParser() throws myBotException {","lastModifiedDate":"2024-01-23"},{"lineNumber":42,"author":{"gitId":"cheahTJ"},"content":"        StringBuilder description \u003d new StringBuilder();","lastModifiedDate":"2024-01-23"},{"lineNumber":43,"author":{"gitId":"cheahTJ"},"content":"        StringBuilder by  \u003d new StringBuilder();","lastModifiedDate":"2024-01-22"},{"lineNumber":44,"author":{"gitId":"cheahTJ"},"content":"        int index \u003d this.words.indexOf(\"/by\");","lastModifiedDate":"2024-01-22"},{"lineNumber":45,"author":{"gitId":"cheahTJ"},"content":"        if (index !\u003d -1) {","lastModifiedDate":"2024-01-23"},{"lineNumber":46,"author":{"gitId":"cheahTJ"},"content":"            if (index !\u003d 1) {","lastModifiedDate":"2024-01-23"},{"lineNumber":47,"author":{"gitId":"cheahTJ"},"content":"                // This is to ensure that /by would not become part of the description field","lastModifiedDate":"2024-01-23"},{"lineNumber":48,"author":{"gitId":"cheahTJ"},"content":"                // if the user forgets to include description field","lastModifiedDate":"2024-01-23"},{"lineNumber":49,"author":{"gitId":"cheahTJ"},"content":"                description \u003d new StringBuilder(this.words.get(1));","lastModifiedDate":"2024-01-23"},{"lineNumber":50,"author":{"gitId":"cheahTJ"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":51,"author":{"gitId":"cheahTJ"},"content":"        } else {","lastModifiedDate":"2024-01-23"},{"lineNumber":52,"author":{"gitId":"cheahTJ"},"content":"            throw new myBotException(\"I don\u0027t understand your command. Try writing: deadline (task description) /by (d/m/yyyy HHmm format)\");","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":54,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":55,"author":{"gitId":"cheahTJ"},"content":"        for (int i \u003d 2; i \u003c words.size(); i++) {","lastModifiedDate":"2024-01-22"},{"lineNumber":56,"author":{"gitId":"cheahTJ"},"content":"            if (i \u003c index) {","lastModifiedDate":"2024-01-22"},{"lineNumber":57,"author":{"gitId":"cheahTJ"},"content":"                description.append(\" \").append(words.get(i));","lastModifiedDate":"2024-01-22"},{"lineNumber":58,"author":{"gitId":"cheahTJ"},"content":"            } else if (i \u003e index) {","lastModifiedDate":"2024-01-22"},{"lineNumber":59,"author":{"gitId":"cheahTJ"},"content":"                by.append(\" \").append(words.get(i));","lastModifiedDate":"2024-01-22"},{"lineNumber":60,"author":{"gitId":"cheahTJ"},"content":"            }","lastModifiedDate":"2024-01-22"},{"lineNumber":61,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":62,"author":{"gitId":"cheahTJ"},"content":"        if (!(by.toString().isEmpty() || description.toString().isEmpty())) {","lastModifiedDate":"2024-01-23"},{"lineNumber":63,"author":{"gitId":"cheahTJ"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"cheahTJ"},"content":"            LocalDateTime parsedDateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"cheahTJ"},"content":"            try {","lastModifiedDate":"2024-01-28"},{"lineNumber":66,"author":{"gitId":"cheahTJ"},"content":"                parsedDateTime \u003d LocalDateTime.parse(by.toString().trim(), formatter);","lastModifiedDate":"2024-01-28"},{"lineNumber":67,"author":{"gitId":"cheahTJ"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":68,"author":{"gitId":"cheahTJ"},"content":"                throw new myBotException(\"I don\u0027t understand your command. Try writing: deadline (task description) /by (d/m/yyyy HHmm format)\");","lastModifiedDate":"2024-01-28"},{"lineNumber":69,"author":{"gitId":"cheahTJ"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":70,"author":{"gitId":"cheahTJ"},"content":"            return new Deadline(description.toString(), parsedDateTime);","lastModifiedDate":"2024-01-28"},{"lineNumber":71,"author":{"gitId":"cheahTJ"},"content":"        } else {","lastModifiedDate":"2024-01-23"},{"lineNumber":72,"author":{"gitId":"cheahTJ"},"content":"            throw new myBotException(\"You have missing fields! You need a task description \u0026 a deadline to finish your task, try again!\");","lastModifiedDate":"2024-01-23"},{"lineNumber":73,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":74,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":75,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":76,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":77,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":78,"author":{"gitId":"cheahTJ"},"content":"    /*","lastModifiedDate":"2024-01-23"},{"lineNumber":79,"author":{"gitId":"cheahTJ"},"content":"     * Returns an event object with task description, a from and to date/time","lastModifiedDate":"2024-01-23"},{"lineNumber":80,"author":{"gitId":"cheahTJ"},"content":"     * Handles errors where users forget to include task description, a from or to date/time or","lastModifiedDate":"2024-01-23"},{"lineNumber":81,"author":{"gitId":"cheahTJ"},"content":"     * incorrect syntax (e.g. never include /from, /to)","lastModifiedDate":"2024-01-23"},{"lineNumber":82,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":83,"author":{"gitId":"cheahTJ"},"content":"    public Events eventsParser() throws myBotException {","lastModifiedDate":"2024-01-23"},{"lineNumber":84,"author":{"gitId":"cheahTJ"},"content":"        StringBuilder description \u003d new StringBuilder();","lastModifiedDate":"2024-01-23"},{"lineNumber":85,"author":{"gitId":"cheahTJ"},"content":"        StringBuilder start \u003d new StringBuilder();","lastModifiedDate":"2024-01-22"},{"lineNumber":86,"author":{"gitId":"cheahTJ"},"content":"        StringBuilder end \u003d new StringBuilder();","lastModifiedDate":"2024-01-22"},{"lineNumber":87,"author":{"gitId":"cheahTJ"},"content":"        int indexOfFrom \u003d this.words.indexOf(\"/from\");","lastModifiedDate":"2024-01-22"},{"lineNumber":88,"author":{"gitId":"cheahTJ"},"content":"        int indexOfTo \u003d this.words.indexOf(\"/to\");","lastModifiedDate":"2024-01-22"},{"lineNumber":89,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":90,"author":{"gitId":"cheahTJ"},"content":"        if (indexOfFrom \u003d\u003d -1 || indexOfTo \u003d\u003d -1) {","lastModifiedDate":"2024-01-23"},{"lineNumber":91,"author":{"gitId":"cheahTJ"},"content":"            throw new myBotException(\"I don\u0027t understand your command. Try writing: event (task description) /from (date/time) /to (date/time)\");","lastModifiedDate":"2024-01-23"},{"lineNumber":92,"author":{"gitId":"cheahTJ"},"content":"        } else {","lastModifiedDate":"2024-01-23"},{"lineNumber":93,"author":{"gitId":"cheahTJ"},"content":"            if (indexOfFrom \u003d\u003d 1 || indexOfTo \u003d\u003d 1) {} else {","lastModifiedDate":"2024-01-23"},{"lineNumber":94,"author":{"gitId":"cheahTJ"},"content":"                description \u003d new StringBuilder(this.words.get(1));","lastModifiedDate":"2024-01-23"},{"lineNumber":95,"author":{"gitId":"cheahTJ"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":96,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":97,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":98,"author":{"gitId":"cheahTJ"},"content":"        for (int i \u003d 2; i \u003c words.size(); i++) {","lastModifiedDate":"2024-01-22"},{"lineNumber":99,"author":{"gitId":"cheahTJ"},"content":"            if (i \u003c indexOfFrom) {","lastModifiedDate":"2024-01-22"},{"lineNumber":100,"author":{"gitId":"cheahTJ"},"content":"                description.append(\" \").append(words.get(i));","lastModifiedDate":"2024-01-22"},{"lineNumber":101,"author":{"gitId":"cheahTJ"},"content":"            } else if (i \u003e indexOfFrom \u0026\u0026 i \u003c indexOfTo) {","lastModifiedDate":"2024-01-22"},{"lineNumber":102,"author":{"gitId":"cheahTJ"},"content":"                start.append(\" \").append(words.get(i));","lastModifiedDate":"2024-01-22"},{"lineNumber":103,"author":{"gitId":"cheahTJ"},"content":"            } else if (i \u003e indexOfTo){","lastModifiedDate":"2024-01-22"},{"lineNumber":104,"author":{"gitId":"cheahTJ"},"content":"                end.append(\" \").append(words.get(i));","lastModifiedDate":"2024-01-22"},{"lineNumber":105,"author":{"gitId":"cheahTJ"},"content":"            }","lastModifiedDate":"2024-01-22"},{"lineNumber":106,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":107,"author":{"gitId":"cheahTJ"},"content":"        if (description.toString().isEmpty() || start.toString().isEmpty() || end.toString().isEmpty()) {","lastModifiedDate":"2024-01-23"},{"lineNumber":108,"author":{"gitId":"cheahTJ"},"content":"            throw new myBotException(\"You having missing fields! You need a task description, start and end date/time for your task, try again!\");","lastModifiedDate":"2024-01-23"},{"lineNumber":109,"author":{"gitId":"cheahTJ"},"content":"        } else {","lastModifiedDate":"2024-01-23"},{"lineNumber":110,"author":{"gitId":"cheahTJ"},"content":"            return new Events(description.toString(), start.toString(), end.toString());","lastModifiedDate":"2024-01-22"},{"lineNumber":111,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":112,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":113,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":114,"author":{"gitId":"cheahTJ"},"content":"    /*","lastModifiedDate":"2024-01-23"},{"lineNumber":115,"author":{"gitId":"cheahTJ"},"content":"     * Returns an integer to know which task the user wishes to mark","lastModifiedDate":"2024-01-23"},{"lineNumber":116,"author":{"gitId":"cheahTJ"},"content":"     * Deals with error when the user accidentally tries to mark a task which does not belong in the list of task","lastModifiedDate":"2024-01-23"},{"lineNumber":117,"author":{"gitId":"cheahTJ"},"content":"     * or when the user fails to include which task they want to mark as completed","lastModifiedDate":"2024-01-23"},{"lineNumber":118,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":119,"author":{"gitId":"cheahTJ"},"content":"    public int markParser(int currentNumOfTask) throws myBotException {","lastModifiedDate":"2024-01-30"},{"lineNumber":120,"author":{"gitId":"cheahTJ"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":121,"author":{"gitId":"cheahTJ"},"content":"            if (!this.words.get(1).isEmpty()) {","lastModifiedDate":"2024-01-23"},{"lineNumber":122,"author":{"gitId":"cheahTJ"},"content":"                if (Integer.parseInt(this.words.get(1)) \u003e currentNumOfTask || Integer.parseInt(this.words.get(1)) \u003c\u003d 0) {","lastModifiedDate":"2024-01-23"},{"lineNumber":123,"author":{"gitId":"cheahTJ"},"content":"                    throw new myBotException(\"You have currently \" + currentNumOfTask + \" tasks. You cannot mark task larger or smaller than this!\");","lastModifiedDate":"2024-01-23"},{"lineNumber":124,"author":{"gitId":"cheahTJ"},"content":"                } else {","lastModifiedDate":"2024-01-23"},{"lineNumber":125,"author":{"gitId":"cheahTJ"},"content":"                    return Integer.parseInt(this.words.get(1)) - 1;","lastModifiedDate":"2024-01-22"},{"lineNumber":126,"author":{"gitId":"cheahTJ"},"content":"                }","lastModifiedDate":"2024-01-22"},{"lineNumber":127,"author":{"gitId":"cheahTJ"},"content":"            } else {","lastModifiedDate":"2024-01-23"},{"lineNumber":128,"author":{"gitId":"cheahTJ"},"content":"                throw new IndexOutOfBoundsException();","lastModifiedDate":"2024-01-23"},{"lineNumber":129,"author":{"gitId":"cheahTJ"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":130,"author":{"gitId":"cheahTJ"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":131,"author":{"gitId":"cheahTJ"},"content":"            throw new myBotException(\"I\u0027m not sure which task you wish to mark. Please specify the task you wish to mark and try again!\");","lastModifiedDate":"2024-01-30"},{"lineNumber":132,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":133,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":134,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":135,"author":{"gitId":"cheahTJ"},"content":"    /*","lastModifiedDate":"2024-01-23"},{"lineNumber":136,"author":{"gitId":"cheahTJ"},"content":"     * Returns an integer to know which task the user wishes to un-mark","lastModifiedDate":"2024-01-23"},{"lineNumber":137,"author":{"gitId":"cheahTJ"},"content":"     * Deals with error when the user accidentally tries to un-mark a task which does not belong in the list of task","lastModifiedDate":"2024-01-23"},{"lineNumber":138,"author":{"gitId":"cheahTJ"},"content":"     * or when the user fails to include which task they want to un-mark","lastModifiedDate":"2024-01-23"},{"lineNumber":139,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":140,"author":{"gitId":"cheahTJ"},"content":"    public int unmarkParser(int currentNumOfTask) throws myBotException {","lastModifiedDate":"2024-01-30"},{"lineNumber":141,"author":{"gitId":"cheahTJ"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":142,"author":{"gitId":"cheahTJ"},"content":"            if (!this.words.get(1).isEmpty()) {","lastModifiedDate":"2024-01-23"},{"lineNumber":143,"author":{"gitId":"cheahTJ"},"content":"                if (Integer.parseInt(this.words.get(1)) \u003e currentNumOfTask || Integer.parseInt(this.words.get(1)) \u003c\u003d 0) {","lastModifiedDate":"2024-01-23"},{"lineNumber":144,"author":{"gitId":"cheahTJ"},"content":"                    throw new myBotException(\"You have currently \" + currentNumOfTask + \" tasks. You cannot un-mark task larger or smaller than this!\");","lastModifiedDate":"2024-01-23"},{"lineNumber":145,"author":{"gitId":"cheahTJ"},"content":"                } else {","lastModifiedDate":"2024-01-23"},{"lineNumber":146,"author":{"gitId":"cheahTJ"},"content":"                    return Integer.parseInt(this.words.get(1)) - 1;","lastModifiedDate":"2024-01-22"},{"lineNumber":147,"author":{"gitId":"cheahTJ"},"content":"                }","lastModifiedDate":"2024-01-22"},{"lineNumber":148,"author":{"gitId":"cheahTJ"},"content":"            } else {","lastModifiedDate":"2024-01-23"},{"lineNumber":149,"author":{"gitId":"cheahTJ"},"content":"                throw new IndexOutOfBoundsException();","lastModifiedDate":"2024-01-23"},{"lineNumber":150,"author":{"gitId":"cheahTJ"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":151,"author":{"gitId":"cheahTJ"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":152,"author":{"gitId":"cheahTJ"},"content":"            throw new myBotException(\"I\u0027m not sure which task you wish to un-mark. Please specify the task you wish to un-mark and try again!\");","lastModifiedDate":"2024-01-30"},{"lineNumber":153,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":154,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":155,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":156,"author":{"gitId":"cheahTJ"},"content":"    /*","lastModifiedDate":"2024-01-23"},{"lineNumber":157,"author":{"gitId":"cheahTJ"},"content":"     * Returns an integer to know which task the user wishes to delete","lastModifiedDate":"2024-01-23"},{"lineNumber":158,"author":{"gitId":"cheahTJ"},"content":"     * Deals with error when the user accidentally tries to delete a task which does not belong in the list of task","lastModifiedDate":"2024-01-23"},{"lineNumber":159,"author":{"gitId":"cheahTJ"},"content":"     * or when the user fails to include which task they want to delete","lastModifiedDate":"2024-01-23"},{"lineNumber":160,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":161,"author":{"gitId":"cheahTJ"},"content":"    public int deleteParser(int currentNumOfTask) throws myBotException {","lastModifiedDate":"2024-01-30"},{"lineNumber":162,"author":{"gitId":"cheahTJ"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":163,"author":{"gitId":"cheahTJ"},"content":"            if (!this.words.get(1).isEmpty()) {","lastModifiedDate":"2024-01-23"},{"lineNumber":164,"author":{"gitId":"cheahTJ"},"content":"                if (Integer.parseInt(this.words.get(1)) \u003e currentNumOfTask || Integer.parseInt(this.words.get(1)) \u003c\u003d 0) {","lastModifiedDate":"2024-01-23"},{"lineNumber":165,"author":{"gitId":"cheahTJ"},"content":"                    throw new myBotException(\"You have currently \" + currentNumOfTask + \" tasks. You cannot delete task larger or smaller than this!\");","lastModifiedDate":"2024-01-23"},{"lineNumber":166,"author":{"gitId":"cheahTJ"},"content":"                } else {","lastModifiedDate":"2024-01-23"},{"lineNumber":167,"author":{"gitId":"cheahTJ"},"content":"                    return Integer.parseInt(this.words.get(1)) - 1;","lastModifiedDate":"2024-01-23"},{"lineNumber":168,"author":{"gitId":"cheahTJ"},"content":"                }","lastModifiedDate":"2024-01-23"},{"lineNumber":169,"author":{"gitId":"cheahTJ"},"content":"            } else {","lastModifiedDate":"2024-01-23"},{"lineNumber":170,"author":{"gitId":"cheahTJ"},"content":"                throw new IndexOutOfBoundsException();","lastModifiedDate":"2024-01-23"},{"lineNumber":171,"author":{"gitId":"cheahTJ"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":172,"author":{"gitId":"cheahTJ"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":173,"author":{"gitId":"cheahTJ"},"content":"            throw new myBotException(\"I\u0027m not sure which task you wish to delete. Please specify the task you want to delete and try again!\");","lastModifiedDate":"2024-01-30"},{"lineNumber":174,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":175,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":176,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":177,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":178,"author":{"gitId":"cheahTJ"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"cheahTJ":178}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheahTJ"},"content":"public class Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"cheahTJ"},"content":"    protected String description;","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"cheahTJ"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"cheahTJ"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"cheahTJ"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"cheahTJ"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"cheahTJ"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"cheahTJ"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"cheahTJ"},"content":"    // When a user wishes to mark a task as completed","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"cheahTJ"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"cheahTJ"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"cheahTJ"},"content":"    // When user wishes to un-mark a certain task","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"cheahTJ"},"content":"    public void uncheckingTask() {","lastModifiedDate":"2024-01-22"},{"lineNumber":20,"author":{"gitId":"cheahTJ"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":22,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"cheahTJ"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"cheahTJ"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"cheahTJ"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2024-01-22"},{"lineNumber":26,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"cheahTJ"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"cheahTJ":27}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheahTJ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"cheahTJ"},"content":"public class TaskList {","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"cheahTJ"},"content":"    ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"cheahTJ"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"cheahTJ"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"cheahTJ"},"content":"    public TaskList() {","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"cheahTJ"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"cheahTJ"},"content":"    public int getTaskSize() {","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"cheahTJ"},"content":"        return this.tasks.size();","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"cheahTJ"},"content":"    public void updateTaskToStorage(fileStorage fs) throws myBotException {","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"cheahTJ"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"cheahTJ"},"content":"            fs.updateFile(this.tasks);","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"cheahTJ"},"content":"        } catch (myBotException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"cheahTJ"},"content":"            throw new myBotException(e.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"cheahTJ"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"cheahTJ"},"content":"        this.tasks.add(task);","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"cheahTJ"},"content":"    public void removeTask(int taskNumber) {","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"cheahTJ"},"content":"        this.tasks.remove(taskNumber);","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"cheahTJ"},"content":"    public String taskToString(int taskNumber) {","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"cheahTJ"},"content":"        return this.tasks.get(taskNumber).toString();","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"cheahTJ"},"content":"    public String taskStatusIcon(int taskNumber) {","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"cheahTJ"},"content":"        return this.tasks.get(taskNumber).getStatusIcon();","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"cheahTJ"},"content":"    public void taskMarkAsDone(int taskNumber) {","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"cheahTJ"},"content":"        this.tasks.get(taskNumber).markAsDone();","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"cheahTJ"},"content":"    public void taskUncheckTask(int taskNumber) {","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"cheahTJ"},"content":"        this.tasks.get(taskNumber).uncheckingTask();","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"cheahTJ"},"content":"    public void listTask() {","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"cheahTJ"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"cheahTJ"},"content":"            if (tasks.get(i) \u003d\u003d null) {","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"cheahTJ"},"content":"                break;","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"cheahTJ"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"cheahTJ"},"content":"            int taskNumber \u003d i + 1;","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"cheahTJ"},"content":"            System.out.println(taskNumber + \".\" + tasks.get(i).toString());","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"cheahTJ"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"cheahTJ":58}},{"path":"src/main/java/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheahTJ"},"content":"public class ToDos extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"cheahTJ"},"content":"    public ToDos(String description) {","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"cheahTJ"},"content":"        super(description);","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"cheahTJ"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"cheahTJ"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"cheahTJ"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"cheahTJ"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"cheahTJ":10}},{"path":"src/main/java/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheahTJ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"cheahTJ"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"cheahTJ"},"content":"public class UI {","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"cheahTJ"},"content":"    private final Scanner sc;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"cheahTJ"},"content":"    public UI() {","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"cheahTJ"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"cheahTJ"},"content":"    public void showWelcome() {","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"cheahTJ"},"content":"        String greetingMsg \u003d \"Hello! I\u0027m PingMeBot\\n\" + \"What can I do for you?\";","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"cheahTJ"},"content":"        System.out.println(greetingMsg);","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"cheahTJ"},"content":"    public void sayGoodbye() {","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"cheahTJ"},"content":"        String exitMsg \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"cheahTJ"},"content":"        System.out.println(\"\\n\" + exitMsg);","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"cheahTJ"},"content":"    public void listText() {","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"cheahTJ"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"cheahTJ"},"content":"    public String readCommand() {","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"cheahTJ"},"content":"        return this.sc.nextLine();","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"cheahTJ"},"content":"    public void additionToTasksText(Task task, TaskList allTasks) {","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"cheahTJ"},"content":"        String toUserUponAddition \u003d \"\";","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"cheahTJ"},"content":"        toUserUponAddition +\u003d (\"\\n\" + \"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"cheahTJ"},"content":"        toUserUponAddition +\u003d \"\\n\"  + \"  \" + task.toString();","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"cheahTJ"},"content":"        toUserUponAddition +\u003d \"\\n\" + \"Now you have \" + allTasks.getTaskSize() + \" tasks in the list.\";","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"cheahTJ"},"content":"        System.out.println(toUserUponAddition);","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"cheahTJ"},"content":"    public void deletionToTasksText(int taskNumber, TaskList allTasks) {","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"cheahTJ"},"content":"        String toUserUponDeletion \u003d \"\";","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"cheahTJ"},"content":"        toUserUponDeletion +\u003d \"Noted. I\u0027ve removed this task:\";","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"cheahTJ"},"content":"        toUserUponDeletion +\u003d \"\\n\"  + \"  \" + allTasks.taskToString(taskNumber);","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"cheahTJ"},"content":"        allTasks.removeTask(taskNumber);","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"cheahTJ"},"content":"        toUserUponDeletion +\u003d \"\\n\" + \"Now you have \" + allTasks.getTaskSize() + \" tasks in the list.\";","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"cheahTJ"},"content":"        System.out.println(toUserUponDeletion);","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"cheahTJ"},"content":"    public void markTaskText(int taskNum, TaskList allTasks) throws myBotException {","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"cheahTJ"},"content":"        String toUserUponMarkingTask \u003d \"\";","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"cheahTJ"},"content":"        if (allTasks.taskStatusIcon(taskNum).equals(\"X\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"cheahTJ"},"content":"            throw new myBotException(\"You cannot mark task again which has been completed!\");","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"cheahTJ"},"content":"        allTasks.taskMarkAsDone(taskNum);","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"cheahTJ"},"content":"        toUserUponMarkingTask +\u003d \"Nice! I\u0027ve marked this task as done:\";","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"cheahTJ"},"content":"        toUserUponMarkingTask +\u003d \"\\n\" + \"  \" + allTasks.taskToString(taskNum);","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"cheahTJ"},"content":"        System.out.println(toUserUponMarkingTask);","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"cheahTJ"},"content":"    public void unmarkTaskText(int taskNum, TaskList allTasks) throws myBotException {","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"cheahTJ"},"content":"        String toUserUponUnmarkingTask \u003d \"\";","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"cheahTJ"},"content":"        if (allTasks.taskStatusIcon(taskNum).equals(\" \")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"cheahTJ"},"content":"            throw new myBotException(\"You cannot un-mark task which has not been marked!\");","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"cheahTJ"},"content":"        allTasks.taskUncheckTask(taskNum);","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"cheahTJ"},"content":"        toUserUponUnmarkingTask +\u003d \"OK, I\u0027ve marked this task as not done yet:\";","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"cheahTJ"},"content":"        toUserUponUnmarkingTask +\u003d \"\\n\" + \"  \" + allTasks.taskToString(taskNum);","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"cheahTJ"},"content":"        System.out.println(toUserUponUnmarkingTask);","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"cheahTJ"},"content":"    public void showError(String errorMessage) {","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"cheahTJ"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":73,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":74,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":75,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":76,"author":{"gitId":"cheahTJ"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"cheahTJ":76}},{"path":"src/main/java/fileStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheahTJ"},"content":"import java.io.File;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"cheahTJ"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"cheahTJ"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"cheahTJ"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"cheahTJ"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"cheahTJ"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"cheahTJ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"cheahTJ"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"cheahTJ"},"content":"public class fileStorage {","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"cheahTJ"},"content":"    protected File myFile;","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"cheahTJ"},"content":"    protected String filePath;","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"cheahTJ"},"content":"    public fileStorage(String filePath) throws myBotException {","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"cheahTJ"},"content":"        this.myFile \u003d new File(filePath);","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"cheahTJ"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"cheahTJ"},"content":"        if (!myFile.exists()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"cheahTJ"},"content":"            try {","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"cheahTJ"},"content":"                if (this.myFile.getParentFile().mkdirs()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"cheahTJ"},"content":"                    System.out.println(\"Directory has been successfully created\");","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"cheahTJ"},"content":"                } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"cheahTJ"},"content":"                    System.out.println(\"Error creating directory...\");","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"cheahTJ"},"content":"                }","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"cheahTJ"},"content":"                if (this.myFile.createNewFile()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"cheahTJ"},"content":"                    System.out.println(\"File has been successfully created\");","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"cheahTJ"},"content":"                } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"cheahTJ"},"content":"                    System.out.println(\"Error creating file...\");","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"cheahTJ"},"content":"                }","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"cheahTJ"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"cheahTJ"},"content":"                throw new myBotException(e.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"cheahTJ"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"cheahTJ"},"content":"    public ArrayList\u003cTask\u003e bootingUp() throws myBotException {","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"cheahTJ"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"cheahTJ"},"content":"        if (this.myFile.length() \u003d\u003d 0) {","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"cheahTJ"},"content":"            tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"cheahTJ"},"content":"        } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"cheahTJ"},"content":"            try {","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"cheahTJ"},"content":"                Scanner sc \u003d new Scanner(this.myFile);","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"cheahTJ"},"content":"                while (sc.hasNextLine()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"cheahTJ"},"content":"                    String text \u003d sc.nextLine();","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"cheahTJ"},"content":"                    String[] segmentedText \u003d text.split(\"\\\\|\");","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"cheahTJ"},"content":"                    if (segmentedText[0].trim().equals(\"todo\")) {","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"cheahTJ"},"content":"                        // Format for Todo: T | 1/0 | read book","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"cheahTJ"},"content":"                        int isTaskCompleted \u003d Integer.parseInt(segmentedText[1].trim());","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"cheahTJ"},"content":"                        String description \u003d segmentedText[2].trim();","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"cheahTJ"},"content":"                        ToDos todo \u003d new ToDos(description);","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"cheahTJ"},"content":"                        if (isTaskCompleted \u003d\u003d 1) {","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"cheahTJ"},"content":"                            todo.markAsDone();","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"cheahTJ"},"content":"                        }","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"cheahTJ"},"content":"                        tasks.add(todo);","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"cheahTJ"},"content":"                    } else if (segmentedText[0].trim().equals(\"deadline\")) {","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"cheahTJ"},"content":"                        // Format for Deadline: D | 1/0 | read book | Date/Time","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"cheahTJ"},"content":"                        int isTaskCompleted \u003d Integer.parseInt(segmentedText[1].trim());","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"cheahTJ"},"content":"                        String description \u003d segmentedText[2].trim();","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"cheahTJ"},"content":"                        String deadlineTime \u003d segmentedText[3].trim();","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"cheahTJ"},"content":"                        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\");","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"cheahTJ"},"content":"                        LocalDateTime parsedDateTime \u003d LocalDateTime.parse(deadlineTime, formatter);","lastModifiedDate":"2024-01-28"},{"lineNumber":66,"author":{"gitId":"cheahTJ"},"content":"                        Deadline deadline \u003d new Deadline(description, parsedDateTime);","lastModifiedDate":"2024-01-28"},{"lineNumber":67,"author":{"gitId":"cheahTJ"},"content":"                        if (isTaskCompleted \u003d\u003d 1) {","lastModifiedDate":"2024-01-28"},{"lineNumber":68,"author":{"gitId":"cheahTJ"},"content":"                            deadline.markAsDone();","lastModifiedDate":"2024-01-28"},{"lineNumber":69,"author":{"gitId":"cheahTJ"},"content":"                        }","lastModifiedDate":"2024-01-28"},{"lineNumber":70,"author":{"gitId":"cheahTJ"},"content":"                        tasks.add(deadline);","lastModifiedDate":"2024-01-28"},{"lineNumber":71,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":72,"author":{"gitId":"cheahTJ"},"content":"                    } else if (segmentedText[0].trim().equals(\"event\")) {","lastModifiedDate":"2024-01-28"},{"lineNumber":73,"author":{"gitId":"cheahTJ"},"content":"                        // Format for Event: E | 1/0 | read book | Date/Time(from) | Date/Time(To)","lastModifiedDate":"2024-01-28"},{"lineNumber":74,"author":{"gitId":"cheahTJ"},"content":"                        int isTaskCompleted \u003d Integer.parseInt(segmentedText[1].trim());","lastModifiedDate":"2024-01-28"},{"lineNumber":75,"author":{"gitId":"cheahTJ"},"content":"                        String description \u003d segmentedText[2].trim();","lastModifiedDate":"2024-01-28"},{"lineNumber":76,"author":{"gitId":"cheahTJ"},"content":"                        String from \u003d \" \" + segmentedText[3].trim();","lastModifiedDate":"2024-01-28"},{"lineNumber":77,"author":{"gitId":"cheahTJ"},"content":"                        String to \u003d \" \" + segmentedText[4].trim();","lastModifiedDate":"2024-01-28"},{"lineNumber":78,"author":{"gitId":"cheahTJ"},"content":"                        Events event \u003d new Events(description,from,to);","lastModifiedDate":"2024-01-28"},{"lineNumber":79,"author":{"gitId":"cheahTJ"},"content":"                        if (isTaskCompleted \u003d\u003d 1) {","lastModifiedDate":"2024-01-28"},{"lineNumber":80,"author":{"gitId":"cheahTJ"},"content":"                            event.markAsDone();","lastModifiedDate":"2024-01-28"},{"lineNumber":81,"author":{"gitId":"cheahTJ"},"content":"                        }","lastModifiedDate":"2024-01-28"},{"lineNumber":82,"author":{"gitId":"cheahTJ"},"content":"                        tasks.add(event);","lastModifiedDate":"2024-01-28"},{"lineNumber":83,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":84,"author":{"gitId":"cheahTJ"},"content":"                    } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":85,"author":{"gitId":"cheahTJ"},"content":"                        throw new myBotException(\"Weird expression found!\");","lastModifiedDate":"2024-01-28"},{"lineNumber":86,"author":{"gitId":"cheahTJ"},"content":"                    }","lastModifiedDate":"2024-01-28"},{"lineNumber":87,"author":{"gitId":"cheahTJ"},"content":"                }","lastModifiedDate":"2024-01-28"},{"lineNumber":88,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":89,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":90,"author":{"gitId":"cheahTJ"},"content":"            } catch (FileNotFoundException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":91,"author":{"gitId":"cheahTJ"},"content":"                throw new myBotException(e.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":92,"author":{"gitId":"cheahTJ"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":93,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":94,"author":{"gitId":"cheahTJ"},"content":"        return tasks;","lastModifiedDate":"2024-01-28"},{"lineNumber":95,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":96,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":97,"author":{"gitId":"cheahTJ"},"content":"    public void updateFile(ArrayList\u003cTask\u003e tasks) throws myBotException {","lastModifiedDate":"2024-01-28"},{"lineNumber":98,"author":{"gitId":"cheahTJ"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":99,"author":{"gitId":"cheahTJ"},"content":"            FileWriter fw \u003d new FileWriter(this.filePath);","lastModifiedDate":"2024-01-28"},{"lineNumber":100,"author":{"gitId":"cheahTJ"},"content":"            for (Task t : tasks) {","lastModifiedDate":"2024-01-28"},{"lineNumber":101,"author":{"gitId":"cheahTJ"},"content":"                int isCompleted \u003d t.isDone ? 1 : 0;","lastModifiedDate":"2024-01-28"},{"lineNumber":102,"author":{"gitId":"cheahTJ"},"content":"                if (t instanceof ToDos) {","lastModifiedDate":"2024-01-28"},{"lineNumber":103,"author":{"gitId":"cheahTJ"},"content":"                    String toWrite \u003d \"todo | \" + isCompleted + \" | \" + t.description;","lastModifiedDate":"2024-01-28"},{"lineNumber":104,"author":{"gitId":"cheahTJ"},"content":"                    fw.write(toWrite + System.lineSeparator());","lastModifiedDate":"2024-01-28"},{"lineNumber":105,"author":{"gitId":"cheahTJ"},"content":"                } else if (t instanceof Deadline) {","lastModifiedDate":"2024-01-28"},{"lineNumber":106,"author":{"gitId":"cheahTJ"},"content":"                    String toWrite \u003d \"deadline | \" + isCompleted + \" | \" + t.description + \" | \" + ((Deadline) t).by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\"));","lastModifiedDate":"2024-01-28"},{"lineNumber":107,"author":{"gitId":"cheahTJ"},"content":"                    fw.write(toWrite + System.lineSeparator());","lastModifiedDate":"2024-01-28"},{"lineNumber":108,"author":{"gitId":"cheahTJ"},"content":"                } else if (t instanceof Events) {","lastModifiedDate":"2024-01-28"},{"lineNumber":109,"author":{"gitId":"cheahTJ"},"content":"                    String toWrite \u003d \"event | \" + isCompleted + \" | \" + t.description + \" | \" + ((Events) t).start + \" | \" + ((Events) t).end;","lastModifiedDate":"2024-01-28"},{"lineNumber":110,"author":{"gitId":"cheahTJ"},"content":"                    fw.write(toWrite + System.lineSeparator());","lastModifiedDate":"2024-01-28"},{"lineNumber":111,"author":{"gitId":"cheahTJ"},"content":"                }","lastModifiedDate":"2024-01-28"},{"lineNumber":112,"author":{"gitId":"cheahTJ"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":113,"author":{"gitId":"cheahTJ"},"content":"            fw.close();","lastModifiedDate":"2024-01-28"},{"lineNumber":114,"author":{"gitId":"cheahTJ"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":115,"author":{"gitId":"cheahTJ"},"content":"            throw new myBotException(\"There is not file to be updated!\");","lastModifiedDate":"2024-01-28"},{"lineNumber":116,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":117,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":118,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":119,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":120,"author":{"gitId":"cheahTJ"},"content":"}","lastModifiedDate":"2024-01-28"},{"lineNumber":121,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":122,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"cheahTJ":122}},{"path":"src/main/java/myBotException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheahTJ"},"content":"public class myBotException extends Exception {","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"cheahTJ"},"content":"    protected String message;","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"cheahTJ"},"content":"    public myBotException(String message) {","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"cheahTJ"},"content":"        super(message);","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"cheahTJ"},"content":"        this.message \u003d message;","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"cheahTJ"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"cheahTJ":7}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"cheahTJ"},"content":"todo borrow book","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"cheahTJ"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"cheahTJ"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"cheahTJ"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"cheahTJ"},"content":"mark 2","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"cheahTJ"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"cheahTJ"},"content":"unmark 2","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"cheahTJ"},"content":"list","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"cheahTJ":8}}]
