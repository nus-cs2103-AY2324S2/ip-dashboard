[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"Tanzhiheng26"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Tanzhiheng26"},"content":"}","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Tanzhiheng26"},"content":"checkstyle {","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Tanzhiheng26"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"Tanzhiheng26"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"Tanzhiheng26"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"Tanzhiheng26"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"Tanzhiheng26"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"Tanzhiheng26"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"Tanzhiheng26"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"Tanzhiheng26"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"Tanzhiheng26"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"Tanzhiheng26"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"Tanzhiheng26"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"Tanzhiheng26"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"Tanzhiheng26"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"Tanzhiheng26"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"Tanzhiheng26"},"content":"    mainClass.set(\"gui.Launcher\")","lastModifiedDate":"2024-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"Tanzhiheng26"},"content":"    archiveFileName \u003d \u0027ezra.jar\u0027","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"Tanzhiheng26"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-02-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Tanzhiheng26":23,"-":40}},{"path":"src/main/java/ezra/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tanzhiheng26"},"content":"package ezra;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Tanzhiheng26"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"Tanzhiheng26"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"Tanzhiheng26"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"Tanzhiheng26"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"Tanzhiheng26"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"Tanzhiheng26"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"Tanzhiheng26"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-20"},{"lineNumber":11,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"Tanzhiheng26"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"Tanzhiheng26"},"content":"    protected String byInput;","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"Tanzhiheng26"},"content":"     * Constructs a Deadline object with the specified description and deadline.","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param by The deadline of the task in the format \"dd/MM/yyyy HHmm\".","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"Tanzhiheng26"},"content":"     * @throws DateTimeParseException If the deadline format is invalid.","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"Tanzhiheng26"},"content":"    public Deadline(String description, String by) throws DateTimeParseException {","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"Tanzhiheng26"},"content":"        super(description);","lastModifiedDate":"2024-01-20"},{"lineNumber":24,"author":{"gitId":"Tanzhiheng26"},"content":"        this.by \u003d LocalDateTime.parse(by, DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"Tanzhiheng26"},"content":"        this.byInput \u003d by;","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":27,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":28,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"Tanzhiheng26"},"content":"     * Returns a formatted string representation of the Deadline object to display to the user.","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"Tanzhiheng26"},"content":"     * @return A formatted string including task type, status, description, and deadline.","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"Tanzhiheng26"},"content":"    @Override","lastModifiedDate":"2024-01-20"},{"lineNumber":34,"author":{"gitId":"Tanzhiheng26"},"content":"    public String toString() {","lastModifiedDate":"2024-01-20"},{"lineNumber":35,"author":{"gitId":"Tanzhiheng26"},"content":"        String byString \u003d this.by.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy hh:mm a\"));","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"Tanzhiheng26"},"content":"        return String.format(\"[D][%s] %s (by: %s)\", this.getStatusIcon(), this.description, byString);","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":38,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"Tanzhiheng26"},"content":"     * Returns a formatted string representation of the Deadline object for storage purposes.","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"Tanzhiheng26"},"content":"     * @return A formatted string suitable for storage, including task type, status, description, and deadline.","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"Tanzhiheng26"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":45,"author":{"gitId":"Tanzhiheng26"},"content":"    public String toStorageString() {","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"Tanzhiheng26"},"content":"        return String.format(\"D | %d | %s | %s\", this.isDone ? 1 : 0, this.description, this.byInput);","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"Tanzhiheng26"},"content":"     * Checks if this Deadline object is equal to another object.","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param o The object to compare to.","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"Tanzhiheng26"},"content":"     * @return True if the objects are equal, false otherwise.","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"Tanzhiheng26"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"Tanzhiheng26"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"Tanzhiheng26"},"content":"        if (o \u003d\u003d this) {","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"Tanzhiheng26"},"content":"            return true;","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"Tanzhiheng26"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"Tanzhiheng26"},"content":"        if (!(o instanceof Deadline)) {","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"Tanzhiheng26"},"content":"            return false;","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"Tanzhiheng26"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"Tanzhiheng26"},"content":"        Deadline d \u003d (Deadline) o;","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"Tanzhiheng26"},"content":"        return this.description.equals(d.description) \u0026\u0026 this.byInput.equals(d.byInput);","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":66,"author":{"gitId":"Tanzhiheng26"},"content":"}","lastModifiedDate":"2024-01-20"}],"authorContributionMap":{"Tanzhiheng26":66}},{"path":"src/main/java/ezra/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tanzhiheng26"},"content":"package ezra;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Tanzhiheng26"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"Tanzhiheng26"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"Tanzhiheng26"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"Tanzhiheng26"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"Tanzhiheng26"},"content":" * Represents a task with a specific start and end time.","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"Tanzhiheng26"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"Tanzhiheng26"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-21"},{"lineNumber":11,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"Tanzhiheng26"},"content":"    protected LocalDateTime start;","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"Tanzhiheng26"},"content":"    protected LocalDateTime end;","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"Tanzhiheng26"},"content":"    protected String startInput;","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"Tanzhiheng26"},"content":"    protected String endInput;","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":17,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"Tanzhiheng26"},"content":"     * Constructs an Event object with the specified description, start time, and end time.","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param start       The start time of the event in the format \"dd/MM/yyyy HHmm\".","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param end         The end time of the event in the format \"dd/MM/yyyy HHmm\".","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"Tanzhiheng26"},"content":"     * @throws DateTimeParseException If the start or end time format is invalid.","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"Tanzhiheng26"},"content":"    public Event(String description, String start, String end) throws DateTimeParseException {","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"Tanzhiheng26"},"content":"        super(description);","lastModifiedDate":"2024-01-21"},{"lineNumber":27,"author":{"gitId":"Tanzhiheng26"},"content":"        this.start \u003d LocalDateTime.parse(start, DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"Tanzhiheng26"},"content":"        this.end \u003d LocalDateTime.parse(end, DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"Tanzhiheng26"},"content":"        this.startInput \u003d start;","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"Tanzhiheng26"},"content":"        this.endInput \u003d end;","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":32,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":33,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"Tanzhiheng26"},"content":"     * Returns a formatted string representation of the Event object to display to the user.","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"Tanzhiheng26"},"content":"     * @return A formatted string including task type, status, description, start time, and end time.","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"Tanzhiheng26"},"content":"    @Override","lastModifiedDate":"2024-01-21"},{"lineNumber":39,"author":{"gitId":"Tanzhiheng26"},"content":"    public String toString() {","lastModifiedDate":"2024-01-21"},{"lineNumber":40,"author":{"gitId":"Tanzhiheng26"},"content":"        String startString \u003d this.start.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy hh:mm a\"));","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"Tanzhiheng26"},"content":"        String endString \u003d this.end.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy hh:mm a\"));","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"Tanzhiheng26"},"content":"        return String.format(","lastModifiedDate":"2024-01-21"},{"lineNumber":43,"author":{"gitId":"Tanzhiheng26"},"content":"                \"[E][%s] %s (from: %s to: %s)\",","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"Tanzhiheng26"},"content":"                this.getStatusIcon(),","lastModifiedDate":"2024-01-21"},{"lineNumber":45,"author":{"gitId":"Tanzhiheng26"},"content":"                this.description,","lastModifiedDate":"2024-01-21"},{"lineNumber":46,"author":{"gitId":"Tanzhiheng26"},"content":"                startString,","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"Tanzhiheng26"},"content":"                endString);","lastModifiedDate":"2024-02-10"},{"lineNumber":48,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":49,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"Tanzhiheng26"},"content":"     * Returns a formatted string representation of the Event object for storage purposes.","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"Tanzhiheng26"},"content":"     * @return A formatted string suitable for storage, including task type, status, description, start and end time.","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"Tanzhiheng26"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":56,"author":{"gitId":"Tanzhiheng26"},"content":"    public String toStorageString() {","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"Tanzhiheng26"},"content":"        return String.format(\"E | %d | %s | %s | %s\",","lastModifiedDate":"2024-02-10"},{"lineNumber":58,"author":{"gitId":"Tanzhiheng26"},"content":"                this.isDone ? 1 : 0,","lastModifiedDate":"2024-02-10"},{"lineNumber":59,"author":{"gitId":"Tanzhiheng26"},"content":"                this.description,","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"Tanzhiheng26"},"content":"                this.startInput,","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"Tanzhiheng26"},"content":"                this.endInput);","lastModifiedDate":"2024-02-10"},{"lineNumber":62,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":63,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"Tanzhiheng26"},"content":"     * Checks if this Event object is equal to another object.","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param o The object to compare to.","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"Tanzhiheng26"},"content":"     * @return True if the objects are equal, false otherwise.","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"Tanzhiheng26"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":71,"author":{"gitId":"Tanzhiheng26"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"Tanzhiheng26"},"content":"        if (o \u003d\u003d this) {","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"Tanzhiheng26"},"content":"            return true;","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"Tanzhiheng26"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":75,"author":{"gitId":"Tanzhiheng26"},"content":"        if (!(o instanceof Event)) {","lastModifiedDate":"2024-01-30"},{"lineNumber":76,"author":{"gitId":"Tanzhiheng26"},"content":"            return false;","lastModifiedDate":"2024-01-29"},{"lineNumber":77,"author":{"gitId":"Tanzhiheng26"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":78,"author":{"gitId":"Tanzhiheng26"},"content":"        Event e \u003d (Event) o;","lastModifiedDate":"2024-01-30"},{"lineNumber":79,"author":{"gitId":"Tanzhiheng26"},"content":"        return this.description.equals(e.description)","lastModifiedDate":"2024-01-30"},{"lineNumber":80,"author":{"gitId":"Tanzhiheng26"},"content":"                \u0026\u0026 this.startInput.equals(e.startInput)","lastModifiedDate":"2024-01-30"},{"lineNumber":81,"author":{"gitId":"Tanzhiheng26"},"content":"                \u0026\u0026 this.endInput.equals(e.endInput);","lastModifiedDate":"2024-01-30"},{"lineNumber":82,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":83,"author":{"gitId":"Tanzhiheng26"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"Tanzhiheng26":83}},{"path":"src/main/java/ezra/Ezra.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tanzhiheng26"},"content":"package ezra;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Tanzhiheng26"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"Tanzhiheng26"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"Tanzhiheng26"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"Tanzhiheng26"},"content":" * Main class for the Ezra chatbot.","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"Tanzhiheng26"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"Tanzhiheng26"},"content":"public class Ezra {","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"Tanzhiheng26"},"content":"    private Storage storage;","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"Tanzhiheng26"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"Tanzhiheng26"},"content":"     * Constructs an Ezra object with the specified file path to load saved tasks from.","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param filepath The file path for storing tasks.","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"Tanzhiheng26"},"content":"    public Ezra(String filepath) {","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"Tanzhiheng26"},"content":"        this.storage \u003d new Storage(filepath);","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"Tanzhiheng26"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"Tanzhiheng26"},"content":"            this.tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"Tanzhiheng26"},"content":"        } catch (FileNotFoundException | WrongFormatException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"Tanzhiheng26"},"content":"            this.tasks \u003d new TaskList();","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"Tanzhiheng26"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"Tanzhiheng26"},"content":"     * Generates a response based on the given input using the Parser class.","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param input The input given the user.","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"Tanzhiheng26"},"content":"     * @return The response message to the user\u0027s input.","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"Tanzhiheng26"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"Tanzhiheng26"},"content":"        return Parser.generateReply(input, storage, tasks);","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Tanzhiheng26":36,"-":1}},{"path":"src/main/java/ezra/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tanzhiheng26"},"content":"package ezra;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Tanzhiheng26"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"Tanzhiheng26"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"Tanzhiheng26"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"Tanzhiheng26"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"Tanzhiheng26"},"content":" * Parses user input commands and performs corresponding actions.","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"Tanzhiheng26"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"Tanzhiheng26"},"content":"public class Parser {","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"Tanzhiheng26"},"content":"     * Reads the user input, processes the command, updates the task list, and generates a reply.","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param input   The user input command.","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param storage Storage object for writing tasks to a file.","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param tasks   TaskList object for managing tasks.","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"Tanzhiheng26"},"content":"     * @return A message to be displayed to the user.","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"Tanzhiheng26"},"content":"    public static String generateReply(String input, Storage storage, TaskList tasks) {","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"Tanzhiheng26"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"Tanzhiheng26"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"Tanzhiheng26"},"content":"                return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"Tanzhiheng26"},"content":"            } else if (input.equals(\"list\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"Tanzhiheng26"},"content":"                return tasks.listTasks();","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"Tanzhiheng26"},"content":"            } else if (input.startsWith(\"mark\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"Tanzhiheng26"},"content":"                return tasks.mark(storage, Parser.parseMark(input));","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"Tanzhiheng26"},"content":"            } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"Tanzhiheng26"},"content":"                return tasks.unmark(storage, Parser.parseUnmark(input));","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"Tanzhiheng26"},"content":"            } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"Tanzhiheng26"},"content":"                return tasks.delete(storage, Parser.parseDelete(input));","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"Tanzhiheng26"},"content":"            } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"Tanzhiheng26"},"content":"                return tasks.updateTasks(storage, Parser.parseToDo(input));","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"Tanzhiheng26"},"content":"            } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"Tanzhiheng26"},"content":"                return tasks.updateTasks(storage, Parser.parseDeadline(input));","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"Tanzhiheng26"},"content":"            } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"Tanzhiheng26"},"content":"                return tasks.updateTasks(storage, Parser.parseEvent(input));","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"Tanzhiheng26"},"content":"            } else if (input.startsWith(\"find\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"Tanzhiheng26"},"content":"                return tasks.find(Parser.parseFind(input));","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"Tanzhiheng26"},"content":"            } else {","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"Tanzhiheng26"},"content":"                return \"Invalid command\";","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"Tanzhiheng26"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"Tanzhiheng26"},"content":"        } catch (WrongFormatException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"Tanzhiheng26"},"content":"            return e.getMessage();","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"Tanzhiheng26"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"Tanzhiheng26"},"content":"            return \"Date time must be in this format: 28/01/2023 1800\";","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"Tanzhiheng26"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"Tanzhiheng26"},"content":"     * Parses a \u0027todo\u0027 command from the user input.","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param input The user input command.","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"Tanzhiheng26"},"content":"     * @return A ToDo object representing the task to be added.","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"Tanzhiheng26"},"content":"     * @throws WrongFormatException If the command format is invalid.","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"Tanzhiheng26"},"content":"    public static ToDo parseToDo(String input) throws WrongFormatException {","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"Tanzhiheng26"},"content":"        boolean isValidToDoCommand \u003d Pattern.matches(\"todo\\\\s\\\\S.*\", input);","lastModifiedDate":"2024-02-09"},{"lineNumber":59,"author":{"gitId":"Tanzhiheng26"},"content":"        if (!isValidToDoCommand) {","lastModifiedDate":"2024-02-09"},{"lineNumber":60,"author":{"gitId":"Tanzhiheng26"},"content":"            throw new WrongFormatException(\"Invalid \u0027todo\u0027 command format. Usage: todo \u003cdescription\u003e\");","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"Tanzhiheng26"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"Tanzhiheng26"},"content":"        return new ToDo(extractToDoDescription(input));","lastModifiedDate":"2024-02-09"},{"lineNumber":63,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":64,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":65,"author":{"gitId":"Tanzhiheng26"},"content":"    public static String extractToDoDescription(String input) {","lastModifiedDate":"2024-02-09"},{"lineNumber":66,"author":{"gitId":"Tanzhiheng26"},"content":"        return input.split(\"\\\\s\", 2)[1];","lastModifiedDate":"2024-02-09"},{"lineNumber":67,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":69,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"Tanzhiheng26"},"content":"     * Parses a \u0027deadline\u0027 command from the user input.","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param input The user input command.","lastModifiedDate":"2024-01-30"},{"lineNumber":73,"author":{"gitId":"Tanzhiheng26"},"content":"     * @return A Deadline object representing the task to be added.","lastModifiedDate":"2024-01-30"},{"lineNumber":74,"author":{"gitId":"Tanzhiheng26"},"content":"     * @throws WrongFormatException If the command format is invalid.","lastModifiedDate":"2024-01-30"},{"lineNumber":75,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":76,"author":{"gitId":"Tanzhiheng26"},"content":"    public static Deadline parseDeadline(String input) throws WrongFormatException {","lastModifiedDate":"2024-01-29"},{"lineNumber":77,"author":{"gitId":"Tanzhiheng26"},"content":"        boolean isValidDeadlineCommand \u003d Pattern.matches(\"deadline\\\\s\\\\S.*\\\\s/by\\\\s\\\\S.*\", input);","lastModifiedDate":"2024-02-09"},{"lineNumber":78,"author":{"gitId":"Tanzhiheng26"},"content":"        if (!isValidDeadlineCommand) {","lastModifiedDate":"2024-02-09"},{"lineNumber":79,"author":{"gitId":"Tanzhiheng26"},"content":"            throw new WrongFormatException(","lastModifiedDate":"2024-01-29"},{"lineNumber":80,"author":{"gitId":"Tanzhiheng26"},"content":"                    \"Invalid \u0027deadline\u0027 command format. Usage: deadline \u003cdescription\u003e /by \u003cdate time\u003e\");","lastModifiedDate":"2024-01-30"},{"lineNumber":81,"author":{"gitId":"Tanzhiheng26"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":82,"author":{"gitId":"Tanzhiheng26"},"content":"        return new Deadline(extractDeadlineDescription(input), extractDeadlineBy(input));","lastModifiedDate":"2024-02-09"},{"lineNumber":83,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":84,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":85,"author":{"gitId":"Tanzhiheng26"},"content":"    public static String extractDeadlineDescription(String input) {","lastModifiedDate":"2024-02-09"},{"lineNumber":86,"author":{"gitId":"Tanzhiheng26"},"content":"        String deadlineSpaceDescription \u003d input.split(\"\\\\s/by\\\\s\")[0];","lastModifiedDate":"2024-02-09"},{"lineNumber":87,"author":{"gitId":"Tanzhiheng26"},"content":"        return deadlineSpaceDescription.split(\"\\\\s\", 2)[1];","lastModifiedDate":"2024-02-09"},{"lineNumber":88,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":89,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":90,"author":{"gitId":"Tanzhiheng26"},"content":"    public static String extractDeadlineBy(String input) {","lastModifiedDate":"2024-02-09"},{"lineNumber":91,"author":{"gitId":"Tanzhiheng26"},"content":"        return input.split(\"\\\\s/by\\\\s\")[1];","lastModifiedDate":"2024-02-09"},{"lineNumber":92,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":93,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":94,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":95,"author":{"gitId":"Tanzhiheng26"},"content":"     * Parses an \u0027event\u0027 command from the user input.","lastModifiedDate":"2024-01-30"},{"lineNumber":96,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":97,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param input The user input command.","lastModifiedDate":"2024-01-30"},{"lineNumber":98,"author":{"gitId":"Tanzhiheng26"},"content":"     * @return An Event object representing the task to be added.","lastModifiedDate":"2024-01-30"},{"lineNumber":99,"author":{"gitId":"Tanzhiheng26"},"content":"     * @throws WrongFormatException If the command format is invalid.","lastModifiedDate":"2024-01-30"},{"lineNumber":100,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":101,"author":{"gitId":"Tanzhiheng26"},"content":"    public static Event parseEvent(String input) throws WrongFormatException {","lastModifiedDate":"2024-01-29"},{"lineNumber":102,"author":{"gitId":"Tanzhiheng26"},"content":"        boolean isValidEventCommand \u003d Pattern.matches(\"event\\\\s\\\\S.*\\\\s/from\\\\s\\\\S.*\\\\s/to\\\\s\\\\S.*\", input);","lastModifiedDate":"2024-02-09"},{"lineNumber":103,"author":{"gitId":"Tanzhiheng26"},"content":"        if (!isValidEventCommand) {","lastModifiedDate":"2024-02-09"},{"lineNumber":104,"author":{"gitId":"Tanzhiheng26"},"content":"            throw new WrongFormatException(","lastModifiedDate":"2024-01-29"},{"lineNumber":105,"author":{"gitId":"Tanzhiheng26"},"content":"                    \"Invalid \u0027event\u0027 command format. Usage: event \u003cdescription\u003e /from \u003cdate time\u003e /to \u003cdate time\u003e\");","lastModifiedDate":"2024-01-30"},{"lineNumber":106,"author":{"gitId":"Tanzhiheng26"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":107,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":108,"author":{"gitId":"Tanzhiheng26"},"content":"        return new Event(extractEventDescription(input), extractEventFrom(input), extractEventTo(input));","lastModifiedDate":"2024-02-09"},{"lineNumber":109,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":110,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":111,"author":{"gitId":"Tanzhiheng26"},"content":"    public static String extractEventDescription(String input) {","lastModifiedDate":"2024-02-09"},{"lineNumber":112,"author":{"gitId":"Tanzhiheng26"},"content":"        String eventSpaceDescription \u003d input.split(\"\\\\s/from\\\\s\")[0];","lastModifiedDate":"2024-02-09"},{"lineNumber":113,"author":{"gitId":"Tanzhiheng26"},"content":"        return eventSpaceDescription.split(\"\\\\s\", 2)[1];","lastModifiedDate":"2024-02-09"},{"lineNumber":114,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":115,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":116,"author":{"gitId":"Tanzhiheng26"},"content":"    public static String extractEventFrom(String input) {","lastModifiedDate":"2024-02-09"},{"lineNumber":117,"author":{"gitId":"Tanzhiheng26"},"content":"        String inputWithoutTo \u003d input.split(\"\\\\s/to\\\\s\")[0];","lastModifiedDate":"2024-02-09"},{"lineNumber":118,"author":{"gitId":"Tanzhiheng26"},"content":"        return inputWithoutTo.split(\"\\\\s/from\\\\s\")[1];","lastModifiedDate":"2024-02-09"},{"lineNumber":119,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":120,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":121,"author":{"gitId":"Tanzhiheng26"},"content":"    public static String extractEventTo(String input) {","lastModifiedDate":"2024-02-09"},{"lineNumber":122,"author":{"gitId":"Tanzhiheng26"},"content":"        return input.split(\"\\\\s/to\\\\s\")[1];","lastModifiedDate":"2024-02-09"},{"lineNumber":123,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":124,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":125,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":126,"author":{"gitId":"Tanzhiheng26"},"content":"     * Parses a \u0027delete\u0027 command from the user input.","lastModifiedDate":"2024-01-30"},{"lineNumber":127,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":128,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param input The user input command.","lastModifiedDate":"2024-01-30"},{"lineNumber":129,"author":{"gitId":"Tanzhiheng26"},"content":"     * @return The indices of the tasks to be deleted. Invalid index is handled by delete in TaskList.","lastModifiedDate":"2024-02-05"},{"lineNumber":130,"author":{"gitId":"Tanzhiheng26"},"content":"     * @throws WrongFormatException If the command format is invalid.","lastModifiedDate":"2024-01-30"},{"lineNumber":131,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":132,"author":{"gitId":"Tanzhiheng26"},"content":"    public static int[] parseDelete(String input) throws WrongFormatException {","lastModifiedDate":"2024-02-10"},{"lineNumber":133,"author":{"gitId":"Tanzhiheng26"},"content":"        boolean isValidDeleteCommand \u003d Pattern.matches(\"delete(\\\\s\\\\d+)+\", input);","lastModifiedDate":"2024-02-09"},{"lineNumber":134,"author":{"gitId":"Tanzhiheng26"},"content":"        if (!isValidDeleteCommand) {","lastModifiedDate":"2024-02-09"},{"lineNumber":135,"author":{"gitId":"Tanzhiheng26"},"content":"            throw new WrongFormatException(\"Invalid \u0027delete\u0027 command format. Usage: delete \u003cexisting task numbers\u003e\");","lastModifiedDate":"2024-02-05"},{"lineNumber":136,"author":{"gitId":"Tanzhiheng26"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":137,"author":{"gitId":"Tanzhiheng26"},"content":"        return extractTaskIndices(input);","lastModifiedDate":"2024-02-10"},{"lineNumber":138,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":139,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":140,"author":{"gitId":"Tanzhiheng26"},"content":"    public static int[] extractTaskIndices(String input) {","lastModifiedDate":"2024-02-10"},{"lineNumber":141,"author":{"gitId":"Tanzhiheng26"},"content":"        String[] splitArray \u003d input.split(\"\\\\s\");","lastModifiedDate":"2024-02-09"},{"lineNumber":142,"author":{"gitId":"Tanzhiheng26"},"content":"        // First element in splitArray is the name of the command","lastModifiedDate":"2024-02-09"},{"lineNumber":143,"author":{"gitId":"Tanzhiheng26"},"content":"        String[] taskNumbers \u003d Arrays.copyOfRange(splitArray, 1, splitArray.length);","lastModifiedDate":"2024-02-10"},{"lineNumber":144,"author":{"gitId":"Tanzhiheng26"},"content":"        return Arrays.stream(taskNumbers).mapToInt(x -\u003e Integer.parseInt(x) - 1).toArray();","lastModifiedDate":"2024-02-10"},{"lineNumber":145,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":146,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":147,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":148,"author":{"gitId":"Tanzhiheng26"},"content":"     * Parses a \u0027mark\u0027 command from the user input.","lastModifiedDate":"2024-01-30"},{"lineNumber":149,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":150,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param input The user input command.","lastModifiedDate":"2024-01-30"},{"lineNumber":151,"author":{"gitId":"Tanzhiheng26"},"content":"     * @return The indices of the tasks to be marked as done. Invalid index is handled by mark in TaskList.","lastModifiedDate":"2024-02-05"},{"lineNumber":152,"author":{"gitId":"Tanzhiheng26"},"content":"     * @throws WrongFormatException If the command format is invalid.","lastModifiedDate":"2024-01-30"},{"lineNumber":153,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":154,"author":{"gitId":"Tanzhiheng26"},"content":"    public static int[] parseMark(String input) throws WrongFormatException {","lastModifiedDate":"2024-02-10"},{"lineNumber":155,"author":{"gitId":"Tanzhiheng26"},"content":"        boolean isValidMarkCommand \u003d Pattern.matches(\"mark(\\\\s\\\\d+)+\", input);","lastModifiedDate":"2024-02-09"},{"lineNumber":156,"author":{"gitId":"Tanzhiheng26"},"content":"        if (!isValidMarkCommand) {","lastModifiedDate":"2024-02-09"},{"lineNumber":157,"author":{"gitId":"Tanzhiheng26"},"content":"            throw new WrongFormatException(\"Invalid \u0027mark\u0027 command format. Usage: mark \u003cexisting task numbers\u003e\");","lastModifiedDate":"2024-02-05"},{"lineNumber":158,"author":{"gitId":"Tanzhiheng26"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":159,"author":{"gitId":"Tanzhiheng26"},"content":"        return extractTaskIndices(input);","lastModifiedDate":"2024-02-10"},{"lineNumber":160,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":161,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":162,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":163,"author":{"gitId":"Tanzhiheng26"},"content":"     * Parses an \u0027unmark\u0027 command from the user input.","lastModifiedDate":"2024-01-30"},{"lineNumber":164,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":165,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param input The user input command.","lastModifiedDate":"2024-01-30"},{"lineNumber":166,"author":{"gitId":"Tanzhiheng26"},"content":"     * @return The indices of the tasks to be marked as not done. Invalid index is handled by unmark in TaskList.","lastModifiedDate":"2024-02-05"},{"lineNumber":167,"author":{"gitId":"Tanzhiheng26"},"content":"     * @throws WrongFormatException If the command format is invalid.","lastModifiedDate":"2024-01-30"},{"lineNumber":168,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":169,"author":{"gitId":"Tanzhiheng26"},"content":"    public static int[] parseUnmark(String input) throws WrongFormatException {","lastModifiedDate":"2024-02-10"},{"lineNumber":170,"author":{"gitId":"Tanzhiheng26"},"content":"        boolean isValidUnmarkCommand \u003d Pattern.matches(\"unmark(\\\\s\\\\d+)+\", input);","lastModifiedDate":"2024-02-09"},{"lineNumber":171,"author":{"gitId":"Tanzhiheng26"},"content":"        if (!isValidUnmarkCommand) {","lastModifiedDate":"2024-02-09"},{"lineNumber":172,"author":{"gitId":"Tanzhiheng26"},"content":"            throw new WrongFormatException(\"Invalid \u0027unmark\u0027 command format. Usage: unmark \u003cexisting task numbers\u003e\");","lastModifiedDate":"2024-02-05"},{"lineNumber":173,"author":{"gitId":"Tanzhiheng26"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":174,"author":{"gitId":"Tanzhiheng26"},"content":"        return extractTaskIndices(input);","lastModifiedDate":"2024-02-10"},{"lineNumber":175,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":176,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":177,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":178,"author":{"gitId":"Tanzhiheng26"},"content":"     * Parses a \u0027find\u0027 command from the user input and extracts the keyword to search for.","lastModifiedDate":"2024-01-30"},{"lineNumber":179,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":180,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param input The user input command.","lastModifiedDate":"2024-01-30"},{"lineNumber":181,"author":{"gitId":"Tanzhiheng26"},"content":"     * @return The keyword to search for in task descriptions.","lastModifiedDate":"2024-01-30"},{"lineNumber":182,"author":{"gitId":"Tanzhiheng26"},"content":"     * @throws WrongFormatException If the command format is invalid.","lastModifiedDate":"2024-01-30"},{"lineNumber":183,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":184,"author":{"gitId":"Tanzhiheng26"},"content":"    public static String parseFind(String input) throws WrongFormatException {","lastModifiedDate":"2024-01-30"},{"lineNumber":185,"author":{"gitId":"Tanzhiheng26"},"content":"        boolean isValidFindCommand \u003d Pattern.matches(\"find\\\\s\\\\S.*\", input);","lastModifiedDate":"2024-02-09"},{"lineNumber":186,"author":{"gitId":"Tanzhiheng26"},"content":"        if (!isValidFindCommand) {","lastModifiedDate":"2024-02-09"},{"lineNumber":187,"author":{"gitId":"Tanzhiheng26"},"content":"            throw new WrongFormatException(\"Invalid \u0027find\u0027 command format. Usage: find \u003ckeyword\u003e\");","lastModifiedDate":"2024-02-09"},{"lineNumber":188,"author":{"gitId":"Tanzhiheng26"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":189,"author":{"gitId":"Tanzhiheng26"},"content":"        return extractKeyword(input);","lastModifiedDate":"2024-02-09"},{"lineNumber":190,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":191,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":192,"author":{"gitId":"Tanzhiheng26"},"content":"    public static String extractKeyword(String input) {","lastModifiedDate":"2024-02-09"},{"lineNumber":193,"author":{"gitId":"Tanzhiheng26"},"content":"        return input.split(\"\\\\s\", 2)[1];","lastModifiedDate":"2024-02-09"},{"lineNumber":194,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":195,"author":{"gitId":"Tanzhiheng26"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"Tanzhiheng26":195}},{"path":"src/main/java/ezra/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tanzhiheng26"},"content":"package ezra;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Tanzhiheng26"},"content":"import java.io.File;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"Tanzhiheng26"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"Tanzhiheng26"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"Tanzhiheng26"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"Tanzhiheng26"},"content":" * Handles the storage of tasks in a file.","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"Tanzhiheng26"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"Tanzhiheng26"},"content":"public class Storage {","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"Tanzhiheng26"},"content":"    protected String filepath;","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"Tanzhiheng26"},"content":"     * Constructs a Storage object with the specified file path.","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param filepath The file path for storing tasks.","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"Tanzhiheng26"},"content":"    public Storage(String filepath) {","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"Tanzhiheng26"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"Tanzhiheng26"},"content":"     * Writes the tasks from a TaskList to the storage file.","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param taskList The TaskList containing tasks to be written to the file.","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"Tanzhiheng26"},"content":"     * @throws IOException If an I/O error occurs while writing to the file.","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"Tanzhiheng26"},"content":"    public void writeToFile(TaskList taskList) throws IOException {","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"Tanzhiheng26"},"content":"        // Create data directory if it does not exist","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"Tanzhiheng26"},"content":"        File directory \u003d new File(\"data\");","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"Tanzhiheng26"},"content":"        directory.mkdir();","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"Tanzhiheng26"},"content":"        // Create ezra.txt in data directory if it does not exist","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"Tanzhiheng26"},"content":"        File f \u003d new File(\"data/ezra.txt\");","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"Tanzhiheng26"},"content":"        f.createNewFile();","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"Tanzhiheng26"},"content":"        // Write tasks to ezra.txt","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"Tanzhiheng26"},"content":"        FileWriter fw \u003d new FileWriter(f);","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"Tanzhiheng26"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"Tanzhiheng26"},"content":"        for (Task t : taskList.tasks) {","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"Tanzhiheng26"},"content":"            builder.append(t.toStorageString()).append(\"\\n\");","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"Tanzhiheng26"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"Tanzhiheng26"},"content":"        fw.write(builder.toString());","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"Tanzhiheng26"},"content":"        fw.close();","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"Tanzhiheng26"},"content":"     * Loads the storage file.","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"Tanzhiheng26"},"content":"     * @return The File object representing the storage file.","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"Tanzhiheng26"},"content":"    public File load() {","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"Tanzhiheng26"},"content":"        return new File(filepath);","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"Tanzhiheng26"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"Tanzhiheng26":56}},{"path":"src/main/java/ezra/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tanzhiheng26"},"content":"package ezra;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Tanzhiheng26"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"Tanzhiheng26"},"content":" * Represents a generic task with a description and completion status.","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"Tanzhiheng26"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"Tanzhiheng26"},"content":"public abstract class Task {","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"Tanzhiheng26"},"content":"    protected String description;","lastModifiedDate":"2024-01-20"},{"lineNumber":9,"author":{"gitId":"Tanzhiheng26"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-20"},{"lineNumber":10,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":11,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"Tanzhiheng26"},"content":"     * Constructs a Task object with the specified description.","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"Tanzhiheng26"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-20"},{"lineNumber":17,"author":{"gitId":"Tanzhiheng26"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-20"},{"lineNumber":18,"author":{"gitId":"Tanzhiheng26"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-20"},{"lineNumber":19,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":20,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":21,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"Tanzhiheng26"},"content":"     * Gets the status icon for the task.","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"Tanzhiheng26"},"content":"     * @return \"X\" if the task is done, \" \" (space) otherwise.","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"Tanzhiheng26"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-20"},{"lineNumber":27,"author":{"gitId":"Tanzhiheng26"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-01-20"},{"lineNumber":28,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":29,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":30,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"Tanzhiheng26"},"content":"     * Returns a formatted string representation of the Task object for storage purposes.","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"Tanzhiheng26"},"content":"     * @return A formatted string suitable for storage, including the completion status and description.","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"Tanzhiheng26"},"content":"    public abstract String toStorageString();","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"Tanzhiheng26"},"content":"}","lastModifiedDate":"2024-01-20"}],"authorContributionMap":{"Tanzhiheng26":36}},{"path":"src/main/java/ezra/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tanzhiheng26"},"content":"package ezra;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Tanzhiheng26"},"content":"import java.io.File;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Tanzhiheng26"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"Tanzhiheng26"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"Tanzhiheng26"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Tanzhiheng26"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"Tanzhiheng26"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"Tanzhiheng26"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"Tanzhiheng26"},"content":" * Represents a collection of tasks and provides methods for managing them.","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"Tanzhiheng26"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"Tanzhiheng26"},"content":"public class TaskList {","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"Tanzhiheng26"},"content":"    protected ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"Tanzhiheng26"},"content":"    protected static final String LIST_MESSAGE_START \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"Tanzhiheng26"},"content":"    protected static final String DELETE_MESSAGE_START \u003d \"I\u0027ve removed the following task(s):\\n\";","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"Tanzhiheng26"},"content":"    protected static final String MARK_MESSAGE_START \u003d \"I\u0027ve marked the following task(s) as done:\\n\";","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"Tanzhiheng26"},"content":"    protected static final String UNMARK_MESSAGE_START \u003d \"I\u0027ve marked the following task(s) as not done:\\n\";","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"Tanzhiheng26"},"content":"    protected static final String FIND_MESSAGE_START \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"Tanzhiheng26"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"Tanzhiheng26"},"content":"    public TaskList() {","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"Tanzhiheng26"},"content":"     * Constructs a TaskList by reading tasks from a file.","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param f The file containing tasks.","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"Tanzhiheng26"},"content":"     * @throws FileNotFoundException If the specified file is not found.","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"Tanzhiheng26"},"content":"    public TaskList(File f) throws FileNotFoundException, WrongFormatException {","lastModifiedDate":"2024-02-10"},{"lineNumber":36,"author":{"gitId":"Tanzhiheng26"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"Tanzhiheng26"},"content":"        while (s.hasNextLine()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"Tanzhiheng26"},"content":"            // Extract command, isDone and description from input","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"Tanzhiheng26"},"content":"            String task \u003d s.nextLine();","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"Tanzhiheng26"},"content":"            String[] arr \u003d task.split(\" \\\\| \");","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"Tanzhiheng26"},"content":"            String command \u003d arr[0];","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"Tanzhiheng26"},"content":"            boolean isDone \u003d arr[1].equals(\"1\");","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"Tanzhiheng26"},"content":"            String description \u003d arr[2];","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"Tanzhiheng26"},"content":"            switch (command) {","lastModifiedDate":"2024-02-10"},{"lineNumber":46,"author":{"gitId":"Tanzhiheng26"},"content":"            case \"T\":","lastModifiedDate":"2024-02-10"},{"lineNumber":47,"author":{"gitId":"Tanzhiheng26"},"content":"                ToDo todo \u003d new ToDo(description);","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"Tanzhiheng26"},"content":"                todo.isDone \u003d isDone;","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"Tanzhiheng26"},"content":"                this.tasks.add(todo);","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"Tanzhiheng26"},"content":"                break;","lastModifiedDate":"2024-02-10"},{"lineNumber":51,"author":{"gitId":"Tanzhiheng26"},"content":"            case \"D\":","lastModifiedDate":"2024-02-10"},{"lineNumber":52,"author":{"gitId":"Tanzhiheng26"},"content":"                String by \u003d arr[3];","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"Tanzhiheng26"},"content":"                Deadline deadline \u003d new Deadline(description, by);","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"Tanzhiheng26"},"content":"                deadline.isDone \u003d isDone;","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"Tanzhiheng26"},"content":"                this.tasks.add(deadline);","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"Tanzhiheng26"},"content":"                break;","lastModifiedDate":"2024-02-10"},{"lineNumber":57,"author":{"gitId":"Tanzhiheng26"},"content":"            case \"E\":","lastModifiedDate":"2024-02-10"},{"lineNumber":58,"author":{"gitId":"Tanzhiheng26"},"content":"                String from \u003d arr[3];","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"Tanzhiheng26"},"content":"                String to \u003d arr[4];","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"Tanzhiheng26"},"content":"                Event event \u003d new Event(description, from, to);","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"Tanzhiheng26"},"content":"                event.isDone \u003d isDone;","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"Tanzhiheng26"},"content":"                this.tasks.add(event);","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"Tanzhiheng26"},"content":"                break;","lastModifiedDate":"2024-02-10"},{"lineNumber":64,"author":{"gitId":"Tanzhiheng26"},"content":"            default:","lastModifiedDate":"2024-02-10"},{"lineNumber":65,"author":{"gitId":"Tanzhiheng26"},"content":"                throw new WrongFormatException(\"Cannot load task from file\");","lastModifiedDate":"2024-02-10"},{"lineNumber":66,"author":{"gitId":"Tanzhiheng26"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":67,"author":{"gitId":"Tanzhiheng26"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":69,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":70,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"Tanzhiheng26"},"content":"     * Lists all tasks in the TaskList.","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":73,"author":{"gitId":"Tanzhiheng26"},"content":"     * @return A string representing the list of tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":74,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":75,"author":{"gitId":"Tanzhiheng26"},"content":"    public String listTasks() {","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"Tanzhiheng26"},"content":"        if (this.tasks.isEmpty()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"Tanzhiheng26"},"content":"            return \"There are no tasks in your list.\";","lastModifiedDate":"2024-02-10"},{"lineNumber":78,"author":{"gitId":"Tanzhiheng26"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":79,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":80,"author":{"gitId":"Tanzhiheng26"},"content":"        StringBuilder message \u003d new StringBuilder(LIST_MESSAGE_START);","lastModifiedDate":"2024-02-10"},{"lineNumber":81,"author":{"gitId":"Tanzhiheng26"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2024-02-10"},{"lineNumber":82,"author":{"gitId":"Tanzhiheng26"},"content":"            message.append(String.format(\"%d. %s\\n\", i + 1, this.tasks.get(i)));","lastModifiedDate":"2024-02-10"},{"lineNumber":83,"author":{"gitId":"Tanzhiheng26"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":84,"author":{"gitId":"Tanzhiheng26"},"content":"        return message.toString();","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":87,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":88,"author":{"gitId":"Tanzhiheng26"},"content":"     * Deletes the tasks corresponding to the give task numbers.","lastModifiedDate":"2024-02-06"},{"lineNumber":89,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":90,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param storage The storage to update after deletion.","lastModifiedDate":"2024-01-30"},{"lineNumber":91,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param taskIndices The array of task indices to be deleted.","lastModifiedDate":"2024-02-10"},{"lineNumber":92,"author":{"gitId":"Tanzhiheng26"},"content":"     * @return A message to be displayed after the delete operation.","lastModifiedDate":"2024-02-04"},{"lineNumber":93,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":94,"author":{"gitId":"Tanzhiheng26"},"content":"    public String delete(Storage storage, int... taskIndices) {","lastModifiedDate":"2024-02-10"},{"lineNumber":95,"author":{"gitId":"Tanzhiheng26"},"content":"        String invalidTaskNumbers \u003d getInvalidTaskNumbers(taskIndices);","lastModifiedDate":"2024-02-10"},{"lineNumber":96,"author":{"gitId":"Tanzhiheng26"},"content":"        String deletedTasks \u003d getDeletedTasks(taskIndices);","lastModifiedDate":"2024-02-10"},{"lineNumber":97,"author":{"gitId":"Tanzhiheng26"},"content":"        boolean hasDeletedTasks \u003d !deletedTasks.equals(DELETE_MESSAGE_START);","lastModifiedDate":"2024-02-10"},{"lineNumber":98,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":99,"author":{"gitId":"Tanzhiheng26"},"content":"        if (!hasDeletedTasks) {","lastModifiedDate":"2024-02-10"},{"lineNumber":100,"author":{"gitId":"Tanzhiheng26"},"content":"            return invalidTaskNumbers;","lastModifiedDate":"2024-02-10"},{"lineNumber":101,"author":{"gitId":"Tanzhiheng26"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":102,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":103,"author":{"gitId":"Tanzhiheng26"},"content":"        // Update tasks in storage","lastModifiedDate":"2024-01-30"},{"lineNumber":104,"author":{"gitId":"Tanzhiheng26"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":105,"author":{"gitId":"Tanzhiheng26"},"content":"            storage.writeToFile(this);","lastModifiedDate":"2024-01-29"},{"lineNumber":106,"author":{"gitId":"Tanzhiheng26"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":107,"author":{"gitId":"Tanzhiheng26"},"content":"            return String.format(\"Something went wrong: %s\\n\", e.getMessage());","lastModifiedDate":"2024-02-05"},{"lineNumber":108,"author":{"gitId":"Tanzhiheng26"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":109,"author":{"gitId":"Tanzhiheng26"},"content":"        return invalidTaskNumbers + deletedTasks;","lastModifiedDate":"2024-02-10"},{"lineNumber":110,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":111,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":112,"author":{"gitId":"Tanzhiheng26"},"content":"    public String getInvalidTaskNumbers(int... taskIndices) {","lastModifiedDate":"2024-02-10"},{"lineNumber":113,"author":{"gitId":"Tanzhiheng26"},"content":"        StringBuilder invalidTaskNumbers \u003d new StringBuilder();","lastModifiedDate":"2024-02-10"},{"lineNumber":114,"author":{"gitId":"Tanzhiheng26"},"content":"        for (int taskIndex : taskIndices) {","lastModifiedDate":"2024-02-10"},{"lineNumber":115,"author":{"gitId":"Tanzhiheng26"},"content":"            // Check for invalid taskIndex","lastModifiedDate":"2024-02-10"},{"lineNumber":116,"author":{"gitId":"Tanzhiheng26"},"content":"            if (taskIndex \u003c 0 || taskIndex \u003e\u003d this.tasks.size()) {","lastModifiedDate":"2024-02-10"},{"lineNumber":117,"author":{"gitId":"Tanzhiheng26"},"content":"                invalidTaskNumbers.append(String.format(\"%d is an invalid task number.\\n\", taskIndex + 1));","lastModifiedDate":"2024-02-10"},{"lineNumber":118,"author":{"gitId":"Tanzhiheng26"},"content":"            }","lastModifiedDate":"2024-02-10"},{"lineNumber":119,"author":{"gitId":"Tanzhiheng26"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":120,"author":{"gitId":"Tanzhiheng26"},"content":"        return invalidTaskNumbers.toString();","lastModifiedDate":"2024-02-05"},{"lineNumber":121,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":122,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":123,"author":{"gitId":"Tanzhiheng26"},"content":"    public String getDeletedTasks(int... taskIndices) {","lastModifiedDate":"2024-02-10"},{"lineNumber":124,"author":{"gitId":"Tanzhiheng26"},"content":"        StringBuilder deletedTasks \u003d new StringBuilder(DELETE_MESSAGE_START);","lastModifiedDate":"2024-02-10"},{"lineNumber":125,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":126,"author":{"gitId":"Tanzhiheng26"},"content":"        // Delete task numbers from largest to smallest so that there are no changes in task number after each deletion","lastModifiedDate":"2024-02-10"},{"lineNumber":127,"author":{"gitId":"Tanzhiheng26"},"content":"        Arrays.sort(taskIndices);","lastModifiedDate":"2024-02-10"},{"lineNumber":128,"author":{"gitId":"Tanzhiheng26"},"content":"        for (int i \u003d taskIndices.length - 1; i \u003e\u003d 0; i--) {","lastModifiedDate":"2024-02-10"},{"lineNumber":129,"author":{"gitId":"Tanzhiheng26"},"content":"            int taskIndex \u003d taskIndices[i];","lastModifiedDate":"2024-02-10"},{"lineNumber":130,"author":{"gitId":"Tanzhiheng26"},"content":"            assert taskIndex \u003e\u003d -1: \"taskNumber \u003e\u003d 0 so taskIndex \u003e\u003d -1\";","lastModifiedDate":"2024-02-10"},{"lineNumber":131,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":132,"author":{"gitId":"Tanzhiheng26"},"content":"            // Check for invalid taskIndex","lastModifiedDate":"2024-02-10"},{"lineNumber":133,"author":{"gitId":"Tanzhiheng26"},"content":"            if (taskIndex \u003c 0 || taskIndex \u003e\u003d this.tasks.size()) {","lastModifiedDate":"2024-02-10"},{"lineNumber":134,"author":{"gitId":"Tanzhiheng26"},"content":"                continue;","lastModifiedDate":"2024-02-10"},{"lineNumber":135,"author":{"gitId":"Tanzhiheng26"},"content":"            }","lastModifiedDate":"2024-02-10"},{"lineNumber":136,"author":{"gitId":"Tanzhiheng26"},"content":"            deletedTasks.append(this.tasks.get(taskIndex)).append(\"\\n\");","lastModifiedDate":"2024-02-10"},{"lineNumber":137,"author":{"gitId":"Tanzhiheng26"},"content":"            this.tasks.remove(taskIndex);","lastModifiedDate":"2024-02-10"},{"lineNumber":138,"author":{"gitId":"Tanzhiheng26"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":139,"author":{"gitId":"Tanzhiheng26"},"content":"        return deletedTasks.toString();","lastModifiedDate":"2024-02-10"},{"lineNumber":140,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":141,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":142,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":143,"author":{"gitId":"Tanzhiheng26"},"content":"     * Updates the TaskList by adding a new task.","lastModifiedDate":"2024-01-30"},{"lineNumber":144,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":145,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param storage The storage to update after addition.","lastModifiedDate":"2024-01-30"},{"lineNumber":146,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param task The task to be added.","lastModifiedDate":"2024-02-06"},{"lineNumber":147,"author":{"gitId":"Tanzhiheng26"},"content":"     * @return A message to be displayed after adding the task.","lastModifiedDate":"2024-02-04"},{"lineNumber":148,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":149,"author":{"gitId":"Tanzhiheng26"},"content":"    public String updateTasks(Storage storage, Task task) {","lastModifiedDate":"2024-02-06"},{"lineNumber":150,"author":{"gitId":"Tanzhiheng26"},"content":"        this.tasks.add(task);","lastModifiedDate":"2024-01-30"},{"lineNumber":151,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":152,"author":{"gitId":"Tanzhiheng26"},"content":"        // Update tasks in storage","lastModifiedDate":"2024-01-30"},{"lineNumber":153,"author":{"gitId":"Tanzhiheng26"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":154,"author":{"gitId":"Tanzhiheng26"},"content":"            storage.writeToFile(this);","lastModifiedDate":"2024-01-29"},{"lineNumber":155,"author":{"gitId":"Tanzhiheng26"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":156,"author":{"gitId":"Tanzhiheng26"},"content":"            return String.format(\"Something went wrong: %s\\n\", e.getMessage());","lastModifiedDate":"2024-02-05"},{"lineNumber":157,"author":{"gitId":"Tanzhiheng26"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":158,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":159,"author":{"gitId":"Tanzhiheng26"},"content":"        return String.format(\"Got it. I\u0027ve added this task:\\n%s\\nNow you have %d tasks in the list.\\n\",","lastModifiedDate":"2024-02-10"},{"lineNumber":160,"author":{"gitId":"Tanzhiheng26"},"content":"                task, this.tasks.size());","lastModifiedDate":"2024-02-10"},{"lineNumber":161,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":162,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":163,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":164,"author":{"gitId":"Tanzhiheng26"},"content":"     * Marks the tasks corresponding to the give task numbers as done.","lastModifiedDate":"2024-02-06"},{"lineNumber":165,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":166,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param storage The storage to update after marking.","lastModifiedDate":"2024-01-30"},{"lineNumber":167,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param taskIndices The array of task indices to be marked as done.","lastModifiedDate":"2024-02-10"},{"lineNumber":168,"author":{"gitId":"Tanzhiheng26"},"content":"     * @return A message to be displayed after marking the task.","lastModifiedDate":"2024-02-04"},{"lineNumber":169,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":170,"author":{"gitId":"Tanzhiheng26"},"content":"    public String mark(Storage storage, int... taskIndices) {","lastModifiedDate":"2024-02-10"},{"lineNumber":171,"author":{"gitId":"Tanzhiheng26"},"content":"        String invalidTaskNumbers \u003d getInvalidTaskNumbers(taskIndices);","lastModifiedDate":"2024-02-10"},{"lineNumber":172,"author":{"gitId":"Tanzhiheng26"},"content":"        String markedTasks \u003d getMarkedTasks(taskIndices);","lastModifiedDate":"2024-02-10"},{"lineNumber":173,"author":{"gitId":"Tanzhiheng26"},"content":"        boolean hasMarkedTasks \u003d !markedTasks.equals(MARK_MESSAGE_START);","lastModifiedDate":"2024-02-10"},{"lineNumber":174,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":175,"author":{"gitId":"Tanzhiheng26"},"content":"        if (!hasMarkedTasks) {","lastModifiedDate":"2024-02-10"},{"lineNumber":176,"author":{"gitId":"Tanzhiheng26"},"content":"            return invalidTaskNumbers;","lastModifiedDate":"2024-02-10"},{"lineNumber":177,"author":{"gitId":"Tanzhiheng26"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":178,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":179,"author":{"gitId":"Tanzhiheng26"},"content":"        // Update tasks in storage","lastModifiedDate":"2024-01-30"},{"lineNumber":180,"author":{"gitId":"Tanzhiheng26"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":181,"author":{"gitId":"Tanzhiheng26"},"content":"            storage.writeToFile(this);","lastModifiedDate":"2024-01-29"},{"lineNumber":182,"author":{"gitId":"Tanzhiheng26"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":183,"author":{"gitId":"Tanzhiheng26"},"content":"            return String.format(\"Something went wrong: %s\\n\", e.getMessage());","lastModifiedDate":"2024-02-05"},{"lineNumber":184,"author":{"gitId":"Tanzhiheng26"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":185,"author":{"gitId":"Tanzhiheng26"},"content":"        return invalidTaskNumbers + markedTasks;","lastModifiedDate":"2024-02-10"},{"lineNumber":186,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":187,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":188,"author":{"gitId":"Tanzhiheng26"},"content":"    public String getMarkedTasks(int... taskIndices) {","lastModifiedDate":"2024-02-10"},{"lineNumber":189,"author":{"gitId":"Tanzhiheng26"},"content":"        StringBuilder markedTasks \u003d new StringBuilder(MARK_MESSAGE_START);","lastModifiedDate":"2024-02-10"},{"lineNumber":190,"author":{"gitId":"Tanzhiheng26"},"content":"        for (int taskIndex : taskIndices) {","lastModifiedDate":"2024-02-10"},{"lineNumber":191,"author":{"gitId":"Tanzhiheng26"},"content":"            assert taskIndex \u003e\u003d -1: \"taskNumber \u003e\u003d 0 so taskIndex \u003e\u003d -1\";","lastModifiedDate":"2024-02-10"},{"lineNumber":192,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":193,"author":{"gitId":"Tanzhiheng26"},"content":"            // Check for invalid taskIndex","lastModifiedDate":"2024-02-10"},{"lineNumber":194,"author":{"gitId":"Tanzhiheng26"},"content":"            if (taskIndex \u003c 0 || taskIndex \u003e\u003d this.tasks.size()) {","lastModifiedDate":"2024-02-10"},{"lineNumber":195,"author":{"gitId":"Tanzhiheng26"},"content":"                continue;","lastModifiedDate":"2024-02-10"},{"lineNumber":196,"author":{"gitId":"Tanzhiheng26"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":197,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":198,"author":{"gitId":"Tanzhiheng26"},"content":"            this.tasks.get(taskIndex).isDone \u003d true;","lastModifiedDate":"2024-02-10"},{"lineNumber":199,"author":{"gitId":"Tanzhiheng26"},"content":"            markedTasks.append(this.tasks.get(taskIndex)).append(\"\\n\");","lastModifiedDate":"2024-02-10"},{"lineNumber":200,"author":{"gitId":"Tanzhiheng26"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":201,"author":{"gitId":"Tanzhiheng26"},"content":"        return markedTasks.toString();","lastModifiedDate":"2024-02-10"},{"lineNumber":202,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":203,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":204,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":205,"author":{"gitId":"Tanzhiheng26"},"content":"     * Marks the tasks corresponding to the give task numbers as not done.","lastModifiedDate":"2024-02-06"},{"lineNumber":206,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":207,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param taskIndices The array of task indices to be marked as not done.","lastModifiedDate":"2024-02-10"},{"lineNumber":208,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param storage The storage to update after marking.","lastModifiedDate":"2024-01-30"},{"lineNumber":209,"author":{"gitId":"Tanzhiheng26"},"content":"     * @return A message to be displayed after unmarking the task.","lastModifiedDate":"2024-02-04"},{"lineNumber":210,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":211,"author":{"gitId":"Tanzhiheng26"},"content":"    public String unmark(Storage storage, int... taskIndices) {","lastModifiedDate":"2024-02-10"},{"lineNumber":212,"author":{"gitId":"Tanzhiheng26"},"content":"        String invalidTaskNumbers \u003d getInvalidTaskNumbers(taskIndices);","lastModifiedDate":"2024-02-10"},{"lineNumber":213,"author":{"gitId":"Tanzhiheng26"},"content":"        String unmarkedTasks \u003d getUnmarkedTasks(taskIndices);","lastModifiedDate":"2024-02-10"},{"lineNumber":214,"author":{"gitId":"Tanzhiheng26"},"content":"        boolean hasUnmarkedTasks \u003d !unmarkedTasks.equals(UNMARK_MESSAGE_START);","lastModifiedDate":"2024-02-10"},{"lineNumber":215,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":216,"author":{"gitId":"Tanzhiheng26"},"content":"        if (!hasUnmarkedTasks) {","lastModifiedDate":"2024-02-10"},{"lineNumber":217,"author":{"gitId":"Tanzhiheng26"},"content":"            return invalidTaskNumbers;","lastModifiedDate":"2024-02-10"},{"lineNumber":218,"author":{"gitId":"Tanzhiheng26"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":219,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":220,"author":{"gitId":"Tanzhiheng26"},"content":"        // Update tasks in storage","lastModifiedDate":"2024-01-30"},{"lineNumber":221,"author":{"gitId":"Tanzhiheng26"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":222,"author":{"gitId":"Tanzhiheng26"},"content":"            storage.writeToFile(this);","lastModifiedDate":"2024-01-29"},{"lineNumber":223,"author":{"gitId":"Tanzhiheng26"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":224,"author":{"gitId":"Tanzhiheng26"},"content":"            return String.format(\"Something went wrong: %s\\n\", e.getMessage());","lastModifiedDate":"2024-02-05"},{"lineNumber":225,"author":{"gitId":"Tanzhiheng26"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":226,"author":{"gitId":"Tanzhiheng26"},"content":"        return invalidTaskNumbers + unmarkedTasks;","lastModifiedDate":"2024-02-10"},{"lineNumber":227,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":228,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":229,"author":{"gitId":"Tanzhiheng26"},"content":"    public String getUnmarkedTasks(int... taskIndices) {","lastModifiedDate":"2024-02-10"},{"lineNumber":230,"author":{"gitId":"Tanzhiheng26"},"content":"        StringBuilder unmarkedTasks \u003d new StringBuilder(UNMARK_MESSAGE_START);","lastModifiedDate":"2024-02-10"},{"lineNumber":231,"author":{"gitId":"Tanzhiheng26"},"content":"        for (int taskIndex : taskIndices) {","lastModifiedDate":"2024-02-10"},{"lineNumber":232,"author":{"gitId":"Tanzhiheng26"},"content":"            assert taskIndex \u003e\u003d -1: \"taskNumber \u003e\u003d 0 so taskIndex \u003e\u003d -1\";","lastModifiedDate":"2024-02-10"},{"lineNumber":233,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":234,"author":{"gitId":"Tanzhiheng26"},"content":"            // Check for invalid taskIndex","lastModifiedDate":"2024-02-10"},{"lineNumber":235,"author":{"gitId":"Tanzhiheng26"},"content":"            if (taskIndex \u003c 0 || taskIndex \u003e\u003d this.tasks.size()) {","lastModifiedDate":"2024-02-10"},{"lineNumber":236,"author":{"gitId":"Tanzhiheng26"},"content":"                continue;","lastModifiedDate":"2024-02-10"},{"lineNumber":237,"author":{"gitId":"Tanzhiheng26"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":238,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":239,"author":{"gitId":"Tanzhiheng26"},"content":"            this.tasks.get(taskIndex).isDone \u003d false;","lastModifiedDate":"2024-02-10"},{"lineNumber":240,"author":{"gitId":"Tanzhiheng26"},"content":"            unmarkedTasks.append(this.tasks.get(taskIndex)).append(\"\\n\");","lastModifiedDate":"2024-02-10"},{"lineNumber":241,"author":{"gitId":"Tanzhiheng26"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":242,"author":{"gitId":"Tanzhiheng26"},"content":"        return unmarkedTasks.toString();","lastModifiedDate":"2024-02-10"},{"lineNumber":243,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":244,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":245,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":246,"author":{"gitId":"Tanzhiheng26"},"content":"     * Finds tasks in the TaskList that contain the specified keyword in their descriptions.","lastModifiedDate":"2024-01-30"},{"lineNumber":247,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":248,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param keyword The keyword to search for in task descriptions.","lastModifiedDate":"2024-01-30"},{"lineNumber":249,"author":{"gitId":"Tanzhiheng26"},"content":"     * @return A string representing the matching tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":250,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":251,"author":{"gitId":"Tanzhiheng26"},"content":"    public String find(String keyword) {","lastModifiedDate":"2024-02-03"},{"lineNumber":252,"author":{"gitId":"Tanzhiheng26"},"content":"        ArrayList\u003cInteger\u003e matchingTaskIndices \u003d getMatchingTaskIndices(keyword);","lastModifiedDate":"2024-02-10"},{"lineNumber":253,"author":{"gitId":"Tanzhiheng26"},"content":"        return getMatchingTasks(matchingTaskIndices);","lastModifiedDate":"2024-02-10"},{"lineNumber":254,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":255,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":256,"author":{"gitId":"Tanzhiheng26"},"content":"    public ArrayList\u003cInteger\u003e getMatchingTaskIndices(String keyword) {","lastModifiedDate":"2024-02-10"},{"lineNumber":257,"author":{"gitId":"Tanzhiheng26"},"content":"        ArrayList\u003cInteger\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-10"},{"lineNumber":258,"author":{"gitId":"Tanzhiheng26"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2024-01-30"},{"lineNumber":259,"author":{"gitId":"Tanzhiheng26"},"content":"            if (this.tasks.get(i).description.contains(keyword)) {","lastModifiedDate":"2024-01-30"},{"lineNumber":260,"author":{"gitId":"Tanzhiheng26"},"content":"                matchingTasks.add(i);","lastModifiedDate":"2024-01-30"},{"lineNumber":261,"author":{"gitId":"Tanzhiheng26"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":262,"author":{"gitId":"Tanzhiheng26"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":263,"author":{"gitId":"Tanzhiheng26"},"content":"        return matchingTasks;","lastModifiedDate":"2024-02-10"},{"lineNumber":264,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":265,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":266,"author":{"gitId":"Tanzhiheng26"},"content":"    public String getMatchingTasks(ArrayList\u003cInteger\u003e matchingTaskIndices) {","lastModifiedDate":"2024-02-10"},{"lineNumber":267,"author":{"gitId":"Tanzhiheng26"},"content":"        if (matchingTaskIndices.isEmpty()) {","lastModifiedDate":"2024-02-10"},{"lineNumber":268,"author":{"gitId":"Tanzhiheng26"},"content":"            return \"There are no matching tasks in your list.\";","lastModifiedDate":"2024-02-10"},{"lineNumber":269,"author":{"gitId":"Tanzhiheng26"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":270,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":271,"author":{"gitId":"Tanzhiheng26"},"content":"        StringBuilder message \u003d new StringBuilder(FIND_MESSAGE_START);","lastModifiedDate":"2024-02-10"},{"lineNumber":272,"author":{"gitId":"Tanzhiheng26"},"content":"        for (Integer i : matchingTaskIndices) {","lastModifiedDate":"2024-02-10"},{"lineNumber":273,"author":{"gitId":"Tanzhiheng26"},"content":"            message.append(String.format(\"%d. %s\\n\", i + 1, this.tasks.get(i)));","lastModifiedDate":"2024-02-10"},{"lineNumber":274,"author":{"gitId":"Tanzhiheng26"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":275,"author":{"gitId":"Tanzhiheng26"},"content":"        return message.toString();","lastModifiedDate":"2024-02-03"},{"lineNumber":276,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":277,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":278,"author":{"gitId":"Tanzhiheng26"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"Tanzhiheng26":278}},{"path":"src/main/java/ezra/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tanzhiheng26"},"content":"package ezra;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Tanzhiheng26"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"Tanzhiheng26"},"content":" * Represents a simple to-do task without a specific deadline or start/end time.","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"Tanzhiheng26"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"Tanzhiheng26"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-20"},{"lineNumber":7,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"Tanzhiheng26"},"content":"     * Constructs a ToDo object with the specified description.","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param description The description of the to-do task.","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"Tanzhiheng26"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-01-20"},{"lineNumber":14,"author":{"gitId":"Tanzhiheng26"},"content":"        super(description);","lastModifiedDate":"2024-01-20"},{"lineNumber":15,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":16,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":17,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"Tanzhiheng26"},"content":"     * Returns a formatted string representation of the ToDo object to display to the user.","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"Tanzhiheng26"},"content":"     * @return A formatted string including task type, status, and description.","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"Tanzhiheng26"},"content":"    @Override","lastModifiedDate":"2024-01-20"},{"lineNumber":23,"author":{"gitId":"Tanzhiheng26"},"content":"    public String toString() {","lastModifiedDate":"2024-01-20"},{"lineNumber":24,"author":{"gitId":"Tanzhiheng26"},"content":"        return String.format(\"[T][%s] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2024-01-20"},{"lineNumber":25,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":26,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"Tanzhiheng26"},"content":"     * Returns a formatted string representation of the ToDo object for storage purposes.","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"Tanzhiheng26"},"content":"     * @return A formatted string suitable for storage, including task type, status, and description.","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"Tanzhiheng26"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"Tanzhiheng26"},"content":"    public String toStorageString() {","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"Tanzhiheng26"},"content":"        return String.format(\"T | %d | %s\", this.isDone ? 1 : 0, this.description);","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"Tanzhiheng26"},"content":"     * Checks if this ToDo object is equal to another object.","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param o The object to compare to.","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"Tanzhiheng26"},"content":"     * @return True if the objects are equal, false otherwise.","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"Tanzhiheng26"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"Tanzhiheng26"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"Tanzhiheng26"},"content":"        if (o \u003d\u003d this) {","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"Tanzhiheng26"},"content":"            return true;","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"Tanzhiheng26"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"Tanzhiheng26"},"content":"        if (!(o instanceof ToDo)) {","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"Tanzhiheng26"},"content":"            return false;","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"Tanzhiheng26"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"Tanzhiheng26"},"content":"        ToDo t \u003d (ToDo) o;","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"Tanzhiheng26"},"content":"        return this.description.equals(t.description);","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"Tanzhiheng26"},"content":"}","lastModifiedDate":"2024-01-20"}],"authorContributionMap":{"Tanzhiheng26":54}},{"path":"src/main/java/ezra/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tanzhiheng26"},"content":"package ezra;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Tanzhiheng26"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"Tanzhiheng26"},"content":" * Represents the user interface for the Ezra task management application.","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"Tanzhiheng26"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"Tanzhiheng26"},"content":"public class Ui {","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"Tanzhiheng26"},"content":"     * Prints a horizontal line to the console.","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"Tanzhiheng26"},"content":"    public static void horizontalLine() {","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"Tanzhiheng26"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"Tanzhiheng26"},"content":"     * Displays a greeting message to the user.","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"Tanzhiheng26"},"content":"    public static void greet() {","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"Tanzhiheng26"},"content":"        Ui.horizontalLine();","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"Tanzhiheng26"},"content":"        System.out.println(\"Hello! I\u0027m Ezra.\\nWhat can I do for you?\");","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"Tanzhiheng26"},"content":"        Ui.horizontalLine();","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"Tanzhiheng26"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"Tanzhiheng26":23}},{"path":"src/main/java/ezra/WrongFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tanzhiheng26"},"content":"package ezra;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Tanzhiheng26"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"Tanzhiheng26"},"content":" * Exception thrown when there is an incorrect format in user input commands.","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"Tanzhiheng26"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"Tanzhiheng26"},"content":"public class WrongFormatException extends Exception {","lastModifiedDate":"2024-01-21"},{"lineNumber":7,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"Tanzhiheng26"},"content":"     * Constructs a WrongFormatException with the specified error message.","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param message The error message describing the incorrect format.","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"Tanzhiheng26"},"content":"    public WrongFormatException(String message) {","lastModifiedDate":"2024-01-21"},{"lineNumber":14,"author":{"gitId":"Tanzhiheng26"},"content":"        super(message);","lastModifiedDate":"2024-01-21"},{"lineNumber":15,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":16,"author":{"gitId":"Tanzhiheng26"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"Tanzhiheng26":16}},{"path":"src/main/java/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tanzhiheng26"},"content":"package gui;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"Tanzhiheng26"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Tanzhiheng26"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Tanzhiheng26"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Tanzhiheng26"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Tanzhiheng26"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Tanzhiheng26"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Tanzhiheng26"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Tanzhiheng26"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Tanzhiheng26"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Tanzhiheng26"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Tanzhiheng26"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"Tanzhiheng26"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Tanzhiheng26"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Tanzhiheng26"},"content":"import javafx.scene.text.TextFlow;","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"Tanzhiheng26"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"Tanzhiheng26"},"content":" * A custom JavaFX control representing a dialog box with an ImageView for the speaker\u0027s face and a label for text.","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"Tanzhiheng26"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"Tanzhiheng26"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"Tanzhiheng26"},"content":"    @FXML","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"Tanzhiheng26"},"content":"    private TextFlow dialogTextFlow;","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"Tanzhiheng26"},"content":"    @FXML","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"Tanzhiheng26"},"content":"    private Text dialogText;","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"Tanzhiheng26"},"content":"    @FXML","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"Tanzhiheng26"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"Tanzhiheng26"},"content":"     * Constructs a DialogBox with the specified text and image.","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param text The text content of the dialog box.","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param img  The image to be displayed in the dialog box.","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"Tanzhiheng26"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"Tanzhiheng26"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"Tanzhiheng26"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"Tanzhiheng26"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"Tanzhiheng26"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"Tanzhiheng26"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"Tanzhiheng26"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"Tanzhiheng26"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"Tanzhiheng26"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"Tanzhiheng26"},"content":"        dialogText.setText(text);","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"Tanzhiheng26"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"Tanzhiheng26"},"content":"        // Set a circular clip for the displayPicture","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"Tanzhiheng26"},"content":"        Circle clipCircle \u003d new Circle();","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"Tanzhiheng26"},"content":"        // fitHeight and fitWidth are ImageView properties set in DialogBox.fxml","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"Tanzhiheng26"},"content":"        clipCircle.setRadius(displayPicture.getFitWidth() / 2);","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"Tanzhiheng26"},"content":"        clipCircle.setCenterX(displayPicture.getFitWidth() / 2);","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"Tanzhiheng26"},"content":"        clipCircle.setCenterY(displayPicture.getFitHeight() / 2);","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"Tanzhiheng26"},"content":"        displayPicture.setClip(clipCircle);","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"Tanzhiheng26"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"Tanzhiheng26"},"content":"    private void flip() {","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"Tanzhiheng26"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"Tanzhiheng26"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"Tanzhiheng26"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"Tanzhiheng26"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"Tanzhiheng26"},"content":"     * Creates a DialogBox for user messages.","lastModifiedDate":"2024-02-04"},{"lineNumber":72,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":73,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param text The text content of the user\u0027s message.","lastModifiedDate":"2024-02-04"},{"lineNumber":74,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param img  The image representing the user.","lastModifiedDate":"2024-02-04"},{"lineNumber":75,"author":{"gitId":"Tanzhiheng26"},"content":"     * @return A DialogBox instance for user messages.","lastModifiedDate":"2024-02-04"},{"lineNumber":76,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":77,"author":{"gitId":"Tanzhiheng26"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"Tanzhiheng26"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":82,"author":{"gitId":"Tanzhiheng26"},"content":"     * Creates a DialogBox for Ezra\u0027s messages, flipping it to display the image on the left.","lastModifiedDate":"2024-02-04"},{"lineNumber":83,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":84,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param text The text content of Ezra\u0027s message.","lastModifiedDate":"2024-02-04"},{"lineNumber":85,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param img  The image representing Ezra.","lastModifiedDate":"2024-02-04"},{"lineNumber":86,"author":{"gitId":"Tanzhiheng26"},"content":"     * @return A DialogBox instance for Ezra\u0027s messages.","lastModifiedDate":"2024-02-04"},{"lineNumber":87,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":88,"author":{"gitId":"Tanzhiheng26"},"content":"    public static DialogBox getEzraDialog(String text, Image img) {","lastModifiedDate":"2024-02-04"},{"lineNumber":89,"author":{"gitId":"Tanzhiheng26"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-03"},{"lineNumber":90,"author":{"gitId":"Tanzhiheng26"},"content":"        db.flip();","lastModifiedDate":"2024-02-03"},{"lineNumber":91,"author":{"gitId":"Tanzhiheng26"},"content":"        return db;","lastModifiedDate":"2024-02-03"},{"lineNumber":92,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"Tanzhiheng26"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"Tanzhiheng26":93}},{"path":"src/main/java/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tanzhiheng26"},"content":"package gui;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"Tanzhiheng26"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Tanzhiheng26"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Tanzhiheng26"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Tanzhiheng26"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Tanzhiheng26"},"content":"public class Launcher {","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"Tanzhiheng26"},"content":"     * The main method to launch the JavaFX application.","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param args Command-line arguments.","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"Tanzhiheng26"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Tanzhiheng26"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Tanzhiheng26"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"Tanzhiheng26":18}},{"path":"src/main/java/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tanzhiheng26"},"content":"package gui;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"Tanzhiheng26"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Tanzhiheng26"},"content":"import ezra.Ezra;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Tanzhiheng26"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Tanzhiheng26"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Tanzhiheng26"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Tanzhiheng26"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Tanzhiheng26"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Tanzhiheng26"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Tanzhiheng26"},"content":" * The main class for the GUI application of Ezra using FXML.","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"Tanzhiheng26"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"Tanzhiheng26"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Tanzhiheng26"},"content":"    private Ezra ezra \u003d new Ezra(\"data/ezra.txt\");","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"Tanzhiheng26"},"content":"     * The main entry point for the application.","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param stage The primary stage for the application.","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"Tanzhiheng26"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"Tanzhiheng26"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"Tanzhiheng26"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"Tanzhiheng26"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"Tanzhiheng26"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"Tanzhiheng26"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"Tanzhiheng26"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"Tanzhiheng26"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setEzra(ezra);","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"Tanzhiheng26"},"content":"            stage.setResizable(false);","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"Tanzhiheng26"},"content":"            stage.show();","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"Tanzhiheng26"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"Tanzhiheng26"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"Tanzhiheng26"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"Tanzhiheng26"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"Tanzhiheng26":38}},{"path":"src/main/java/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tanzhiheng26"},"content":"package gui;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"Tanzhiheng26"},"content":"import ezra.Ezra;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Tanzhiheng26"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Tanzhiheng26"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Tanzhiheng26"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Tanzhiheng26"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Tanzhiheng26"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Tanzhiheng26"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Tanzhiheng26"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Tanzhiheng26"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Tanzhiheng26"},"content":" * Controller for MainWindow, providing the layout for the other controls.","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"Tanzhiheng26"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"Tanzhiheng26"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Tanzhiheng26"},"content":"    @FXML","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Tanzhiheng26"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Tanzhiheng26"},"content":"    @FXML","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"Tanzhiheng26"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"Tanzhiheng26"},"content":"    @FXML","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"Tanzhiheng26"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"Tanzhiheng26"},"content":"    @FXML","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"Tanzhiheng26"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"Tanzhiheng26"},"content":"    private Ezra ezra;","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"Tanzhiheng26"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"Tanzhiheng26"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"Tanzhiheng26"},"content":"     * Scrolls down to the end every time dialogContainer\u0027s height changes.","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"Tanzhiheng26"},"content":"     * Displays greeting message.","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"Tanzhiheng26"},"content":"    @FXML","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"Tanzhiheng26"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"Tanzhiheng26"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"Tanzhiheng26"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"Tanzhiheng26"},"content":"                DialogBox.getEzraDialog(\"Hello! I\u0027m Ezra.\\nWhat can I do for you?\", dukeImage)","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"Tanzhiheng26"},"content":"        );","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"Tanzhiheng26"},"content":"     * Sets the Ezra instance for the controller.","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"Tanzhiheng26"},"content":"     * @param e The Ezra instance to set.","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"Tanzhiheng26"},"content":"    public void setEzra(Ezra e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"Tanzhiheng26"},"content":"        ezra \u003d e;","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"Tanzhiheng26"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"Tanzhiheng26"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"Tanzhiheng26"},"content":"    @FXML","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"Tanzhiheng26"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"Tanzhiheng26"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"Tanzhiheng26"},"content":"        String response \u003d ezra.getResponse(input);","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"Tanzhiheng26"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"Tanzhiheng26"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"Tanzhiheng26"},"content":"                DialogBox.getEzraDialog(response, dukeImage)","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"Tanzhiheng26"},"content":"        );","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"Tanzhiheng26"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"Tanzhiheng26"},"content":"}","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"Tanzhiheng26":65}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Tanzhiheng26"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"Tanzhiheng26"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Tanzhiheng26"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Tanzhiheng26"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Tanzhiheng26"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Tanzhiheng26"},"content":"\u003c?import javafx.scene.text.TextFlow?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Tanzhiheng26"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Tanzhiheng26"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Tanzhiheng26"},"content":"        \u003cTextFlow fx:id\u003d\"dialogTextFlow\" style\u003d\"-fx-padding: 8;\"\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Tanzhiheng26"},"content":"            \u003cText fx:id\u003d\"dialogText\" style\u003d\"-fx-font-family: \u0027Arial\u0027; -fx-font-size: 14.0;\"\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Tanzhiheng26"},"content":"            \u003c/Text\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Tanzhiheng26"},"content":"        \u003c/TextFlow\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"Tanzhiheng26"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Tanzhiheng26"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Tanzhiheng26"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Tanzhiheng26"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"Tanzhiheng26"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"Tanzhiheng26"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"Tanzhiheng26":20}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Tanzhiheng26"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"Tanzhiheng26"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Tanzhiheng26"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Tanzhiheng26"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Tanzhiheng26"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Tanzhiheng26"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Tanzhiheng26"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\"","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"Tanzhiheng26"},"content":"            prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"Tanzhiheng26"},"content":"            fx:controller\u003d\"gui.MainWindow\"\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"Tanzhiheng26"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Tanzhiheng26"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\"","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"Tanzhiheng26"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"Tanzhiheng26"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"Tanzhiheng26"},"content":"                prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"Tanzhiheng26"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"Tanzhiheng26"},"content":"                    vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"Tanzhiheng26"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"Tanzhiheng26"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"Tanzhiheng26"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"Tanzhiheng26"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"Tanzhiheng26"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"Tanzhiheng26"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"Tanzhiheng26":24}},{"path":"src/test/java/ezra/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tanzhiheng26"},"content":"package ezra;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Tanzhiheng26"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"Tanzhiheng26"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Tanzhiheng26"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Tanzhiheng26"},"content":" * Tests for the {@link Deadline} class.","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Tanzhiheng26"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Tanzhiheng26"},"content":"public class DeadlineTest {","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Tanzhiheng26"},"content":"     * Test cases for the {@link Deadline#toString()} method.","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"Tanzhiheng26"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"Tanzhiheng26"},"content":"    public void testToString() {","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"Tanzhiheng26"},"content":"        Deadline deadline1 \u003d new Deadline(\"Return book\", \"29/01/2024 1800\");","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"Tanzhiheng26"},"content":"        String expectedString1 \u003d \"[D][ ] Return book (by: 29 Jan 2024 06:00 PM)\";","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"Tanzhiheng26"},"content":"        assertEquals(expectedString1, deadline1.toString());","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"Tanzhiheng26"},"content":"        Deadline deadline2 \u003d new Deadline(\"Finish assignment\", \"01/02/2024 0000\");","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"Tanzhiheng26"},"content":"        String expectedString2 \u003d \"[D][ ] Finish assignment (by: 01 Feb 2024 12:00 AM)\";","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"Tanzhiheng26"},"content":"        assertEquals(expectedString2, deadline2.toString());","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"Tanzhiheng26"},"content":"     * Test cases for the {@link Deadline#toStorageString()} method.","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"Tanzhiheng26"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"Tanzhiheng26"},"content":"    public void testToStorageString() {","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"Tanzhiheng26"},"content":"        Deadline deadline1 \u003d new Deadline(\"Return book\", \"29/01/2024 1800\");","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"Tanzhiheng26"},"content":"        String expectedString1 \u003d \"D | 0 | Return book | 29/01/2024 1800\";","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"Tanzhiheng26"},"content":"        assertEquals(expectedString1, deadline1.toStorageString());","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"Tanzhiheng26"},"content":"        Deadline deadline2 \u003d new Deadline(\"Finish assignment\", \"01/02/2024 0000\");","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"Tanzhiheng26"},"content":"        String expectedString2 \u003d \"D | 0 | Finish assignment | 01/02/2024 0000\";","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"Tanzhiheng26"},"content":"        assertEquals(expectedString2, deadline2.toStorageString());","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"Tanzhiheng26"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"Tanzhiheng26":39}},{"path":"src/test/java/ezra/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tanzhiheng26"},"content":"package ezra;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Tanzhiheng26"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"Tanzhiheng26"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"Tanzhiheng26"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"Tanzhiheng26"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Tanzhiheng26"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Tanzhiheng26"},"content":" * Tests for the {@link Parser} class.","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Tanzhiheng26"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Tanzhiheng26"},"content":"public class ParserTest {","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"Tanzhiheng26"},"content":"     * Test cases for the {@link Parser#parseDeadline(String)} method.","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Tanzhiheng26"},"content":"     * @throws WrongFormatException if the input has an unexpected format","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"Tanzhiheng26"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"Tanzhiheng26"},"content":"    public void testParseDeadline() throws WrongFormatException {","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"Tanzhiheng26"},"content":"        assertThrows(WrongFormatException.class, () -\u003e","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"Tanzhiheng26"},"content":"                Parser.parseDeadline(\"deadline return books\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"Tanzhiheng26"},"content":"        assertThrows(WrongFormatException.class, () -\u003e","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"Tanzhiheng26"},"content":"                Parser.parseDeadline(\"deadline /by 29/01/24 1800\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"Tanzhiheng26"},"content":"        assertThrows(WrongFormatException.class, () -\u003e","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"Tanzhiheng26"},"content":"                Parser.parseDeadline(\"deadline return books /by\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"Tanzhiheng26"},"content":"        assertThrows(WrongFormatException.class, () -\u003e","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"Tanzhiheng26"},"content":"                Parser.parseDeadline(\"deadline return books by 29/01/24 1800\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"Tanzhiheng26"},"content":"        assertEquals(new Deadline(\"return books\", \"29/01/2024 1800\"),","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"Tanzhiheng26"},"content":"                Parser.parseDeadline(\"deadline return books /by 29/01/2024 1800\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"Tanzhiheng26"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"Tanzhiheng26"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"Tanzhiheng26"},"content":"     * Test cases for the {@link Parser#parseDelete(String)} method.","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"Tanzhiheng26"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"Tanzhiheng26"},"content":"     * @throws WrongFormatException if the input has an unexpected format","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"Tanzhiheng26"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"Tanzhiheng26"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"Tanzhiheng26"},"content":"    public void testParseDelete() throws WrongFormatException {","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"Tanzhiheng26"},"content":"        assertArrayEquals(new int[]{0}, Parser.parseDelete(\"delete 1\"));","lastModifiedDate":"2024-02-10"},{"lineNumber":41,"author":{"gitId":"Tanzhiheng26"},"content":"        assertArrayEquals(new int[]{9}, Parser.parseDelete(\"delete 10\"));","lastModifiedDate":"2024-02-10"},{"lineNumber":42,"author":{"gitId":"Tanzhiheng26"},"content":"        assertArrayEquals(new int[]{0, 1, 2}, Parser.parseDelete(\"delete 1 2 3\"));","lastModifiedDate":"2024-02-10"},{"lineNumber":43,"author":{"gitId":"Tanzhiheng26"},"content":"        assertArrayEquals(new int[]{9, 10, 11, 12}, Parser.parseDelete(\"delete 10 11 12 13\"));","lastModifiedDate":"2024-02-10"},{"lineNumber":44,"author":{"gitId":"Tanzhiheng26"},"content":"        assertThrows(WrongFormatException.class, () -\u003e","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"Tanzhiheng26"},"content":"                Parser.parseDelete(\"delete -1\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"Tanzhiheng26"},"content":"        assertThrows(WrongFormatException.class, () -\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":47,"author":{"gitId":"Tanzhiheng26"},"content":"                Parser.parseDelete(\"delete 1 2 3 -1\"));","lastModifiedDate":"2024-02-10"},{"lineNumber":48,"author":{"gitId":"Tanzhiheng26"},"content":"        assertThrows(WrongFormatException.class, () -\u003e","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"Tanzhiheng26"},"content":"                Parser.parseDelete(\"delete abc\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"Tanzhiheng26"},"content":"        assertThrows(WrongFormatException.class, () -\u003e","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"Tanzhiheng26"},"content":"                Parser.parseDelete(\"delete 12a\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"Tanzhiheng26"},"content":"        assertThrows(WrongFormatException.class, () -\u003e","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"Tanzhiheng26"},"content":"                Parser.parseDelete(\"delete\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"Tanzhiheng26"},"content":"        assertThrows(WrongFormatException.class, () -\u003e","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"Tanzhiheng26"},"content":"                Parser.parseDelete(\"delete \"));","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"Tanzhiheng26"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"Tanzhiheng26"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"Tanzhiheng26":57}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Tanzhiheng26"},"content":"list","lastModifiedDate":"2024-01-21"},{"lineNumber":2,"author":{"gitId":"Tanzhiheng26"},"content":"todo borrow book","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Tanzhiheng26"},"content":"mark 1","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"Tanzhiheng26"},"content":"unmark 1","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"Tanzhiheng26"},"content":"delete 1","lastModifiedDate":"2024-01-21"},{"lineNumber":6,"author":{"gitId":"Tanzhiheng26"},"content":"bye","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"Tanzhiheng26":6}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"Tanzhiheng26"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\ezra\\*.java","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Tanzhiheng26"},"content":"java -classpath ..\\bin ezra.Ezra \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Tanzhiheng26":2,"-":19}}]
