[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"# Jade ","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"Jade is a Personal Assistant Chatbot that helps a person to keep track of various things.","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"fy17ohhh"},"content":"3. After that, locate the `src/main/java/jade/Jade.java` file, right-click it, and choose `Run Jade.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"fy17ohhh"},"content":"      ____   ___    ____     ______","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"fy17ohhh"},"content":"      |  |  / _ \\\\ |  ___ \\ / |____/","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"fy17ohhh"},"content":"      |  | | | | | | |  | | | |____","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"fy17ohhh"},"content":"      |  | | |_| | | |  | | | |____|","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"fy17ohhh"},"content":"   |\\ |  | | ___ | | |__| | | |____","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"fy17ohhh"},"content":"    \\ ___| |_| |_| |_____/  \\_|____\\","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"fy17ohhh":9,"-":15}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"fy17ohhh"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"fy17ohhh"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"fy17ohhh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"fy17ohhh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"fy17ohhh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"fy17ohhh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"fy17ohhh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"fy17ohhh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"fy17ohhh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"fy17ohhh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"fy17ohhh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"fy17ohhh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"fy17ohhh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"fy17ohhh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"fy17ohhh"},"content":"    mainClass.set(\"jade.gui.Launcher\")","lastModifiedDate":"2024-02-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"fy17ohhh"},"content":"    archiveBaseName \u003d \"jade\"","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"fy17ohhh"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"fy17ohhh"},"content":"runShadow {","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"fy17ohhh"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"fy17ohhh"},"content":"checkstyle {","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"fy17ohhh"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"fy17ohhh"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"fy17ohhh":26,"-":41}},{"path":"src/main/java/jade/Jade.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package jade;","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"import jade.commands.Command;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"fy17ohhh"},"content":"import jade.data.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"fy17ohhh"},"content":"import jade.exception.JadeException;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"fy17ohhh"},"content":"import jade.parser.Parser;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"fy17ohhh"},"content":"import jade.storage.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"fy17ohhh"},"content":"import jade.ui.Ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"fy17ohhh"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"fy17ohhh"},"content":" * A \u003ccode\u003eJade\u003c/code\u003e object is a personal chatbot assistant that","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"fy17ohhh"},"content":" * helps users with task management with the option of adding dates available.","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"fy17ohhh"},"content":" *","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"fy17ohhh"},"content":" * @author Feiyang Shang","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"fy17ohhh"},"content":" * @version v1.0","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"fy17ohhh"},"content":" * @since 2024-01-23","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"fy17ohhh"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"fy17ohhh"},"content":"public class Jade {","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"fy17ohhh"},"content":"    private static final String USER_TASKS_FILE_PATH \u003d \"data/jadeList.txt\";","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"fy17ohhh"},"content":"    private TaskList taskList; // list that stores all user tasks","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"fy17ohhh"},"content":"    private final Storage storage; // storage object to load from and save to local file","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"fy17ohhh"},"content":"    private boolean shouldExit;","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"fy17ohhh"},"content":"     * Class constructor.","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"fy17ohhh"},"content":"    public Jade() {","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"fy17ohhh"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"fy17ohhh"},"content":"        this.storage \u003d new Storage(USER_TASKS_FILE_PATH);","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"fy17ohhh"},"content":"        this.shouldExit \u003d false;","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"fy17ohhh"},"content":"        try {","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"fy17ohhh"},"content":"            this.taskList \u003d new TaskList(storage.load());","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"fy17ohhh"},"content":"        } catch (JadeException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"fy17ohhh"},"content":"            System.out.print(Ui.LOADING_ERROR_MESSAGE);","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"fy17ohhh"},"content":"            this.taskList \u003d new TaskList();","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"fy17ohhh"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":36,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"fy17ohhh"},"content":"     * Generates a response from user input.","lastModifiedDate":"2024-02-11"},{"lineNumber":39,"author":{"gitId":"fy17ohhh"},"content":"     * @param input The user input.","lastModifiedDate":"2024-02-08"},{"lineNumber":40,"author":{"gitId":"fy17ohhh"},"content":"     * @return The response message by executing user command.","lastModifiedDate":"2024-02-08"},{"lineNumber":41,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"fy17ohhh"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"fy17ohhh"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"fy17ohhh"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"fy17ohhh"},"content":"            this.shouldExit \u003d c.isExit();","lastModifiedDate":"2024-02-09"},{"lineNumber":46,"author":{"gitId":"fy17ohhh"},"content":"            return c.execute(taskList, storage);","lastModifiedDate":"2024-02-08"},{"lineNumber":47,"author":{"gitId":"fy17ohhh"},"content":"        } catch (JadeException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"fy17ohhh"},"content":"            return e.getMessage();","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"fy17ohhh"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"fy17ohhh"},"content":"    public boolean shouldExit() {","lastModifiedDate":"2024-02-08"},{"lineNumber":52,"author":{"gitId":"fy17ohhh"},"content":"        return this.shouldExit;","lastModifiedDate":"2024-02-08"},{"lineNumber":53,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"fy17ohhh"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"fy17ohhh":54}},{"path":"src/main/java/jade/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package jade.commands;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"import jade.data.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"fy17ohhh"},"content":"import jade.data.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"fy17ohhh"},"content":"import jade.exception.JadeException;","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"fy17ohhh"},"content":"import jade.storage.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"fy17ohhh"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"fy17ohhh"},"content":" * The \u003ccode\u003eAddCommand\u003c/code\u003e object represents the command to add a task.","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"fy17ohhh"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"fy17ohhh"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"fy17ohhh"},"content":"    private static final String RESULT_MSG_FORMATTED \u003d \"Got it. I\u0027ve added this task:\\n\\t %s\\n\"","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"fy17ohhh"},"content":"            + \"Now you have %d task(s) in the list.\";","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"fy17ohhh"},"content":"    private final Task task; // the task to be added.","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"fy17ohhh"},"content":"     * Class constructor specifying the task to be added.","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"fy17ohhh"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"fy17ohhh"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"fy17ohhh"},"content":"     * @inheritDoc This implementation prints an add message after the task is added.","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"fy17ohhh"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"fy17ohhh"},"content":"    public String execute(TaskList taskList, Storage storage) throws JadeException {","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"fy17ohhh"},"content":"        taskList.add(task);","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"fy17ohhh"},"content":"        String result \u003d String.format(RESULT_MSG_FORMATTED, task, taskList.size());","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"fy17ohhh"},"content":"        storage.saveChange(taskList);","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"fy17ohhh"},"content":"        return result;","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"fy17ohhh"},"content":"     * @inheritDoc The AddCommand does not indicate the exit of the program.","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"fy17ohhh"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"fy17ohhh"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-08"},{"lineNumber":39,"author":{"gitId":"fy17ohhh"},"content":"        return false;","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"fy17ohhh"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"fy17ohhh":41}},{"path":"src/main/java/jade/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package jade.commands;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"import jade.data.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"fy17ohhh"},"content":"import jade.exception.JadeException;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"fy17ohhh"},"content":"import jade.storage.Storage;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"fy17ohhh"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"fy17ohhh"},"content":" * The \u003ccode\u003eCommand\u003c/code\u003e object represents a user command supported by the program.","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"fy17ohhh"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"fy17ohhh"},"content":"public abstract class Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"fy17ohhh"},"content":"     * Returns the result string, i.e. the response from Jade by executing","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"fy17ohhh"},"content":"     * the command with all the tasks, the program\u0027s ui, and the storage object.","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"fy17ohhh"},"content":"    public abstract String execute(TaskList taskList, Storage storage) throws JadeException;","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"fy17ohhh"},"content":"     * Checks whether the program should exit.","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"fy17ohhh"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"fy17ohhh"},"content":"     * @return True if the program is to be exited, otherwise false.","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"fy17ohhh"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"fy17ohhh"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"fy17ohhh":24}},{"path":"src/main/java/jade/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package jade.commands;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"import jade.data.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"fy17ohhh"},"content":"import jade.data.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"fy17ohhh"},"content":"import jade.exception.JadeException;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"fy17ohhh"},"content":"import jade.storage.Storage;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"fy17ohhh"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"fy17ohhh"},"content":" * The \u003ccode\u003eDeleteCommand\u003c/code\u003e object represents the command to delete a task.","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"fy17ohhh"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"fy17ohhh"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"fy17ohhh"},"content":"    private static final String RESULT_MSG_FORMATTED \u003d \"OK, I\u0027ve deleted this task:\\n\\t  %s\\n\"","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"fy17ohhh"},"content":"            + \"Now you have %d task(s) in the list.\";","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"fy17ohhh"},"content":"    private static final String ERR_MSG \u003d \"Please input a valid number to delete the task.\";","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"fy17ohhh"},"content":"    private final int index; // the index of the task to be deleted","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"fy17ohhh"},"content":"     * Class constructor specifying the index of the task to be deleted.","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"fy17ohhh"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"fy17ohhh"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"fy17ohhh"},"content":"     * @inheritDoc This implementation prints a delete message after the task is deleted.","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"fy17ohhh"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"fy17ohhh"},"content":"    public String execute(TaskList taskList, Storage storage) throws JadeException {","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"fy17ohhh"},"content":"        if (index \u003c\u003d 0 || index \u003e taskList.size()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"fy17ohhh"},"content":"            throw new JadeException(ERR_MSG);","lastModifiedDate":"2024-02-11"},{"lineNumber":31,"author":{"gitId":"fy17ohhh"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"fy17ohhh"},"content":"        Task deletedTask \u003d taskList.get(index - 1);","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"fy17ohhh"},"content":"        taskList.remove(index - 1);","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"fy17ohhh"},"content":"        String result \u003d String.format(RESULT_MSG_FORMATTED, deletedTask, taskList.size());","lastModifiedDate":"2024-02-11"},{"lineNumber":35,"author":{"gitId":"fy17ohhh"},"content":"        storage.saveChange(taskList);","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"fy17ohhh"},"content":"        return result;","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"fy17ohhh"},"content":"     * @inheritDoc The DeleteCommand does not indicate the exit of the program.","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"fy17ohhh"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"fy17ohhh"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-08"},{"lineNumber":44,"author":{"gitId":"fy17ohhh"},"content":"        return false;","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"fy17ohhh"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"fy17ohhh":46}},{"path":"src/main/java/jade/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package jade.commands;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"import jade.data.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"fy17ohhh"},"content":"import jade.exception.JadeException;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"fy17ohhh"},"content":"import jade.storage.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"fy17ohhh"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"fy17ohhh"},"content":" * The \u003ccode\u003eExitCommand\u003c/code\u003e object represents the command to exit the program.","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"fy17ohhh"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"fy17ohhh"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"fy17ohhh"},"content":"    private static final String RESULT_MSG_FORMATTED \u003d \"Bye. Hope to see you again soon.\";","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"fy17ohhh"},"content":"     * @inheritDoc This implementation prints a farewell message after saving changes to the local file.","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"fy17ohhh"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"fy17ohhh"},"content":"    public String execute(TaskList taskList, Storage storage) throws JadeException {","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"fy17ohhh"},"content":"        storage.saveChange(taskList);","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"fy17ohhh"},"content":"        return RESULT_MSG_FORMATTED;","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"fy17ohhh"},"content":"     * @inheritDoc The ExitCommand indicates the exit of the program.","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"fy17ohhh"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"fy17ohhh"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"fy17ohhh"},"content":"        return true;","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"fy17ohhh"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"fy17ohhh":28}},{"path":"src/main/java/jade/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package jade.commands;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"fy17ohhh"},"content":"import jade.data.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"fy17ohhh"},"content":"import jade.exception.JadeException;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"fy17ohhh"},"content":"import jade.storage.Storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"fy17ohhh"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"fy17ohhh"},"content":" * The \u003ccode\u003eFindCommand\u003c/code\u003e object represents the command to","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"fy17ohhh"},"content":" * search for tasks that contain the keyword.","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"fy17ohhh"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"fy17ohhh"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"fy17ohhh"},"content":"    private static final String RESULT_MSG_FORMATTED \u003d \"Here are the matching tasks in your list:%s\";","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"fy17ohhh"},"content":"    private static final String EMPTY_RESULT_MSG \u003d \"There are no matching results!\";","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"fy17ohhh"},"content":"    private final String keyword; // the keyword of the description to be searched","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"fy17ohhh"},"content":"     * Class constructor specifying the keyword of the description to be searched.","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"fy17ohhh"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"fy17ohhh"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"fy17ohhh"},"content":"     * @inheritDoc This implementation prints all tasks that contain the keyword.","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"fy17ohhh"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"fy17ohhh"},"content":"    public String execute(TaskList taskList, Storage storage) throws JadeException {","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"fy17ohhh"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"fy17ohhh"},"content":"        int[] count \u003d {0}; // track the number of matching tasks found","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"fy17ohhh"},"content":"        IntStream.range(0, taskList.size())","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"fy17ohhh"},"content":"                .filter(x -\u003e taskList.get(x).containsKeyword(keyword))","lastModifiedDate":"2024-02-11"},{"lineNumber":34,"author":{"gitId":"fy17ohhh"},"content":"                .forEach(x -\u003e {","lastModifiedDate":"2024-02-11"},{"lineNumber":35,"author":{"gitId":"fy17ohhh"},"content":"                    count[0]++;","lastModifiedDate":"2024-02-11"},{"lineNumber":36,"author":{"gitId":"fy17ohhh"},"content":"                    sb.append(String.format(\"\\n\\t%d. %s\", x + 1, taskList.get(x)));","lastModifiedDate":"2024-02-11"},{"lineNumber":37,"author":{"gitId":"fy17ohhh"},"content":"                });","lastModifiedDate":"2024-02-11"},{"lineNumber":38,"author":{"gitId":"fy17ohhh"},"content":"        if (count[0] \u003d\u003d 0) {","lastModifiedDate":"2024-02-11"},{"lineNumber":39,"author":{"gitId":"fy17ohhh"},"content":"            return EMPTY_RESULT_MSG;","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"fy17ohhh"},"content":"        } else {","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"fy17ohhh"},"content":"            return String.format(RESULT_MSG_FORMATTED, sb);","lastModifiedDate":"2024-02-11"},{"lineNumber":42,"author":{"gitId":"fy17ohhh"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"fy17ohhh"},"content":"     * @inheritDoc The DeleteCommand does not indicate the exit of the program.","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"fy17ohhh"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"fy17ohhh"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-08"},{"lineNumber":50,"author":{"gitId":"fy17ohhh"},"content":"        return false;","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"fy17ohhh"},"content":"}","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"fy17ohhh":53}},{"path":"src/main/java/jade/commands/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package jade.commands;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"import jade.data.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"fy17ohhh"},"content":"import jade.storage.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"fy17ohhh"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"fy17ohhh"},"content":" * The \u003ccode\u003eInvalidCommand\u003c/code\u003e object represents an invalid command.","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"fy17ohhh"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"fy17ohhh"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"fy17ohhh"},"content":"    private String invalidMessage \u003d \"Input is invalid, please retry.\";","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"fy17ohhh"},"content":"     * The empty class constructor.","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"fy17ohhh"},"content":"    public InvalidCommand() {}","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"fy17ohhh"},"content":"     * Class constructor specifying the JadeException.","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"fy17ohhh"},"content":"    public InvalidCommand(String exceptionMessage) {","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"fy17ohhh"},"content":"        this.invalidMessage \u003d exceptionMessage;","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"fy17ohhh"},"content":"     * @inheritDoc This implementation prints an error message to user","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"fy17ohhh"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"fy17ohhh"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"fy17ohhh"},"content":"        return invalidMessage;","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"fy17ohhh"},"content":"     * @inheritDoc The InvalidCommand does not indicate the exit of the program.","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"fy17ohhh"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"fy17ohhh"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"fy17ohhh"},"content":"        return false;","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"fy17ohhh"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"fy17ohhh":35}},{"path":"src/main/java/jade/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package jade.commands;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"fy17ohhh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"fy17ohhh"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"fy17ohhh"},"content":"import jade.data.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"fy17ohhh"},"content":"import jade.storage.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"fy17ohhh"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"fy17ohhh"},"content":" * The \u003ccode\u003eListCommand\u003c/code\u003e object represents the command to list all tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"fy17ohhh"},"content":" * It is also optional for the user to specify a date for listing all tasks on that date.","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"fy17ohhh"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"fy17ohhh"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"fy17ohhh"},"content":"    private static final String EMPTY_RESULT_MSG \u003d \"You have no tasks now :-|\";","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"fy17ohhh"},"content":"    private static final String EMPTY_RESULT_MSG_FORMATTED \u003d \"You have no tasks on %s.\";","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"fy17ohhh"},"content":"    private static final String RESULT_MSG_FORMATTED \u003d \"Here are the task(s) in your list%s:\";","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"fy17ohhh"},"content":"    private static final String LIST_INDEX_FORMATTED \u003d \"\\n\\t%d. %s\";","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"fy17ohhh"},"content":"    private final LocalDate selectedDate; // the user specified date for listing all tasks","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"fy17ohhh"},"content":"     * Class constructor initializing the selected date as null.","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"fy17ohhh"},"content":"    public ListCommand() {","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"fy17ohhh"},"content":"        this.selectedDate \u003d null;","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"fy17ohhh"},"content":"     * Another Class constructor specifying the selected date.","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"fy17ohhh"},"content":"    public ListCommand(LocalDate selectedDateTime) {","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"fy17ohhh"},"content":"        this.selectedDate \u003d selectedDateTime;","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"fy17ohhh"},"content":"     * @inheritDoc This implementation prints all tasks with an option to specify a date.","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"fy17ohhh"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"fy17ohhh"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"fy17ohhh"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"fy17ohhh"},"content":"            // Show user that there are no tasks now","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"fy17ohhh"},"content":"            return EMPTY_RESULT_MSG;","lastModifiedDate":"2024-02-11"},{"lineNumber":43,"author":{"gitId":"fy17ohhh"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"fy17ohhh"},"content":"        if (selectedDate !\u003d null) {","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"fy17ohhh"},"content":"            return handleListWithDate(taskList); // print tasks on a specific date","lastModifiedDate":"2024-02-09"},{"lineNumber":46,"author":{"gitId":"fy17ohhh"},"content":"        } else {","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"fy17ohhh"},"content":"            return handleListWithoutDate(taskList);","lastModifiedDate":"2024-02-09"},{"lineNumber":48,"author":{"gitId":"fy17ohhh"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":49,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":51,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":52,"author":{"gitId":"fy17ohhh"},"content":"     * @inheritDoc This implementation prints all tasks with an option to specify a date.","lastModifiedDate":"2024-02-11"},{"lineNumber":53,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":54,"author":{"gitId":"fy17ohhh"},"content":"    private String handleListWithDate(TaskList taskList) {","lastModifiedDate":"2024-02-09"},{"lineNumber":55,"author":{"gitId":"fy17ohhh"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"fy17ohhh"},"content":"        String dateString \u003d \" on \" + selectedDate;","lastModifiedDate":"2024-02-09"},{"lineNumber":57,"author":{"gitId":"fy17ohhh"},"content":"        sb.append(String.format(RESULT_MSG_FORMATTED, dateString));","lastModifiedDate":"2024-02-11"},{"lineNumber":58,"author":{"gitId":"fy17ohhh"},"content":"        int[] count \u003d {0}; // to track the number of tasks to be printed","lastModifiedDate":"2024-02-11"},{"lineNumber":59,"author":{"gitId":"fy17ohhh"},"content":"        IntStream.range(0, taskList.size())","lastModifiedDate":"2024-02-11"},{"lineNumber":60,"author":{"gitId":"fy17ohhh"},"content":"                .filter(x -\u003e taskList.get(x).isSameDate(selectedDate))","lastModifiedDate":"2024-02-11"},{"lineNumber":61,"author":{"gitId":"fy17ohhh"},"content":"                .forEach(x -\u003e {","lastModifiedDate":"2024-02-11"},{"lineNumber":62,"author":{"gitId":"fy17ohhh"},"content":"                    count[0]++;","lastModifiedDate":"2024-02-11"},{"lineNumber":63,"author":{"gitId":"fy17ohhh"},"content":"                    sb.append(String.format(LIST_INDEX_FORMATTED, x + 1, taskList.get(x)));","lastModifiedDate":"2024-02-11"},{"lineNumber":64,"author":{"gitId":"fy17ohhh"},"content":"                });","lastModifiedDate":"2024-02-11"},{"lineNumber":65,"author":{"gitId":"fy17ohhh"},"content":"        if (count[0] \u003d\u003d 0) {","lastModifiedDate":"2024-02-11"},{"lineNumber":66,"author":{"gitId":"fy17ohhh"},"content":"            return String.format(EMPTY_RESULT_MSG_FORMATTED, selectedDate","lastModifiedDate":"2024-02-11"},{"lineNumber":67,"author":{"gitId":"fy17ohhh"},"content":"                    .format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));","lastModifiedDate":"2024-02-07"},{"lineNumber":68,"author":{"gitId":"fy17ohhh"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":69,"author":{"gitId":"fy17ohhh"},"content":"        return sb.toString();","lastModifiedDate":"2024-02-07"},{"lineNumber":70,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"fy17ohhh"},"content":"    private String handleListWithoutDate(TaskList taskList) {","lastModifiedDate":"2024-02-09"},{"lineNumber":72,"author":{"gitId":"fy17ohhh"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-02-09"},{"lineNumber":73,"author":{"gitId":"fy17ohhh"},"content":"        sb.append(RESULT_MSG_FORMATTED);","lastModifiedDate":"2024-02-11"},{"lineNumber":74,"author":{"gitId":"fy17ohhh"},"content":"        IntStream.range(1, taskList.size() + 1).forEach(x -\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":75,"author":{"gitId":"fy17ohhh"},"content":"                sb.append(String.format(LIST_INDEX_FORMATTED, x, taskList.get(x - 1))));","lastModifiedDate":"2024-02-11"},{"lineNumber":76,"author":{"gitId":"fy17ohhh"},"content":"        return sb.toString();","lastModifiedDate":"2024-02-09"},{"lineNumber":77,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"fy17ohhh"},"content":"     * @inheritDoc The ListCommand does not indicate the exit of the program.","lastModifiedDate":"2024-02-04"},{"lineNumber":81,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"fy17ohhh"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"fy17ohhh"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-08"},{"lineNumber":84,"author":{"gitId":"fy17ohhh"},"content":"        return false;","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"fy17ohhh"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"fy17ohhh":86}},{"path":"src/main/java/jade/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package jade.commands;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"import jade.data.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"fy17ohhh"},"content":"import jade.exception.JadeException;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"fy17ohhh"},"content":"import jade.storage.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"fy17ohhh"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"fy17ohhh"},"content":" * The \u003ccode\u003eMarkCommand\u003c/code\u003e object represents the command to mark a task as done.","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"fy17ohhh"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"fy17ohhh"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"fy17ohhh"},"content":"    private static final String RESULT_MSG_FORMATTED \u003d \"Nice, I\u0027ve marked this task as done:\\n\\t  %s\";","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"fy17ohhh"},"content":"    private static final String ERR_MSG \u003d \"Please input a valid number to mark done.\";","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"fy17ohhh"},"content":"    private final int index; // the index of the task to be marked","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"fy17ohhh"},"content":"     * Class constructor specifying the index of the task to be marked.","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"fy17ohhh"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"fy17ohhh"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"fy17ohhh"},"content":"     * @inheritDoc This implementation prints a mark message after the task is marked.","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"fy17ohhh"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"fy17ohhh"},"content":"    public String execute(TaskList taskList, Storage storage) throws JadeException {","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"fy17ohhh"},"content":"        if (index \u003c\u003d 0 || index \u003e taskList.size()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"fy17ohhh"},"content":"            throw new JadeException(ERR_MSG);","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"fy17ohhh"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"fy17ohhh"},"content":"        taskList.mark(index - 1);","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"fy17ohhh"},"content":"        String result \u003d String.format(RESULT_MSG_FORMATTED, taskList.get(index - 1));","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"fy17ohhh"},"content":"        storage.saveChange(taskList);","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"fy17ohhh"},"content":"        return result;","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"fy17ohhh"},"content":"     * @inheritDoc The MarkCommand does not indicate the exit of the program.","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"fy17ohhh"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"fy17ohhh"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-08"},{"lineNumber":41,"author":{"gitId":"fy17ohhh"},"content":"        return false;","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"fy17ohhh"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"fy17ohhh":43}},{"path":"src/main/java/jade/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package jade.commands;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"import jade.data.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"fy17ohhh"},"content":"import jade.exception.JadeException;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"fy17ohhh"},"content":"import jade.storage.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"fy17ohhh"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"fy17ohhh"},"content":" * The \u003ccode\u003eUnmarkCommand\u003c/code\u003e object represents the command to mark a task as not done yet.","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"fy17ohhh"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"fy17ohhh"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"fy17ohhh"},"content":"    private static final String RESULT_MSG_FORMATTED \u003d \"Nice, I\u0027ve marked this task \"","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"fy17ohhh"},"content":"            + \"as not done yet:\\n\\t  %s\";","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"fy17ohhh"},"content":"    private static final String ERR_MSG \u003d \"Please input a valid number to unmark done.\";","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"fy17ohhh"},"content":"    private final int index; // the index of the task to be unmarked","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"fy17ohhh"},"content":"     * Class constructor specifying the index of the task to be unmarked.","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"fy17ohhh"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"fy17ohhh"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"fy17ohhh"},"content":"     * @inheritDoc This implementation prints an unmark message after the task is unmarked.","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"fy17ohhh"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"fy17ohhh"},"content":"    public String execute(TaskList taskList, Storage storage) throws JadeException {","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"fy17ohhh"},"content":"        if (index \u003c\u003d 0 || index \u003e taskList.size()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"fy17ohhh"},"content":"            throw new JadeException(ERR_MSG);","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"fy17ohhh"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"fy17ohhh"},"content":"        taskList.unmark(index - 1);","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"fy17ohhh"},"content":"        String result \u003d String.format(RESULT_MSG_FORMATTED, taskList.get(index - 1));","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"fy17ohhh"},"content":"        storage.saveChange(taskList);","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"fy17ohhh"},"content":"        return result;","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"fy17ohhh"},"content":"     * @inheritDoc The UnmarkCommand does not indicate the exit of the program.","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"fy17ohhh"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"fy17ohhh"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-08"},{"lineNumber":42,"author":{"gitId":"fy17ohhh"},"content":"        return false;","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"fy17ohhh"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"fy17ohhh":44}},{"path":"src/main/java/jade/data/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package jade.data;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"fy17ohhh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"fy17ohhh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"fy17ohhh"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"fy17ohhh"},"content":" * The \u003ccode\u003eDeadline\u003c/code\u003e object represents a user task with a deadline date.","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"fy17ohhh"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"fy17ohhh"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"fy17ohhh"},"content":"    protected LocalDateTime deadlineDateTime;","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"fy17ohhh"},"content":"     * Class constructor specifying the deadline description and deadline date.","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"fy17ohhh"},"content":"    public Deadline(String description, LocalDateTime deadlineDateTime) {","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"fy17ohhh"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"fy17ohhh"},"content":"        this.deadlineDateTime \u003d deadlineDateTime;","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"fy17ohhh"},"content":"     * Another Class constructor.","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"fy17ohhh"},"content":"     * Specifying the deadline description, deadline date, and the completion status.","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"fy17ohhh"},"content":"    public Deadline(String description, LocalDateTime deadlineDateTime, boolean isDone) {","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"fy17ohhh"},"content":"        super(description, isDone);","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"fy17ohhh"},"content":"        this.deadlineDateTime \u003d deadlineDateTime;","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"fy17ohhh"},"content":"     * Returns a formatted string of the deadline date.","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"fy17ohhh"},"content":"    public String dateFormatter() {","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"fy17ohhh"},"content":"        return deadlineDateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy hmma\"));","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"fy17ohhh"},"content":"     * @inheritDoc This implementation checks whether the deadline date equals to the date.","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"fy17ohhh"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"fy17ohhh"},"content":"    public boolean isSameDate(LocalDate date) {","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"fy17ohhh"},"content":"        return date.equals(deadlineDateTime.toLocalDate());","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"fy17ohhh"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":46,"author":{"gitId":"fy17ohhh"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":47,"author":{"gitId":"fy17ohhh"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), dateFormatter());","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":49,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"fy17ohhh"},"content":"     * @inheritDoc Adds the deadline date at the end.","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"fy17ohhh"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"fy17ohhh"},"content":"    public String taskFormatter() {","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"fy17ohhh"},"content":"        return String.format(\"D | %s | %s | %s\\n\", statusFormatter(), description, dateFormatter());","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"fy17ohhh"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"fy17ohhh":57}},{"path":"src/main/java/jade/data/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package jade.data;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"fy17ohhh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"fy17ohhh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"fy17ohhh"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"fy17ohhh"},"content":" * The \u003ccode\u003eEvent\u003c/code\u003e object represents a user task with a start DateTime and an end DateTime.","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"fy17ohhh"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"fy17ohhh"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"fy17ohhh"},"content":"    protected LocalDateTime startDateTime;","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"fy17ohhh"},"content":"    protected LocalDateTime endDateTime;","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"fy17ohhh"},"content":"     * Class constructor specifying the event description, start DateTime, and end DateTime.","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"fy17ohhh"},"content":"    public Event(String description, LocalDateTime startDateTime, LocalDateTime endDateTime) {","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"fy17ohhh"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"fy17ohhh"},"content":"        this.startDateTime \u003d startDateTime;","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"fy17ohhh"},"content":"        this.endDateTime \u003d endDateTime;","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"fy17ohhh"},"content":"     * Another Event constructor.","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"fy17ohhh"},"content":"     * Specifying the deadline description, start DateTime, end DateTime, and the completion status.","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"fy17ohhh"},"content":"    public Event(String description, LocalDateTime startDateTime, LocalDateTime endDateTime, boolean isDone) {","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"fy17ohhh"},"content":"        super(description, isDone);","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"fy17ohhh"},"content":"        this.startDateTime \u003d startDateTime;","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"fy17ohhh"},"content":"        this.endDateTime \u003d endDateTime;","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"fy17ohhh"},"content":"     * Returns a formatted string of the LocalDateTime object.","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"fy17ohhh"},"content":"    public String dateTimeFormatter(LocalDateTime dateTime) {","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"fy17ohhh"},"content":"        return dateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy hmma\"));","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"fy17ohhh"},"content":"     * @inheritDoc This implementation checks whether the event DateTimes include the DateTime,","lastModifiedDate":"2024-02-11"},{"lineNumber":43,"author":{"gitId":"fy17ohhh"},"content":"     *      both startDateTime and endDateTime inclusively.","lastModifiedDate":"2024-02-11"},{"lineNumber":44,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"fy17ohhh"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"fy17ohhh"},"content":"    public boolean isSameDate(LocalDate dateTime) {","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"fy17ohhh"},"content":"        return (dateTime.isBefore(endDateTime.toLocalDate()) \u0026\u0026 dateTime.isAfter(startDateTime.toLocalDate()))","lastModifiedDate":"2024-02-09"},{"lineNumber":48,"author":{"gitId":"fy17ohhh"},"content":"                || dateTime.equals(startDateTime.toLocalDate()) || dateTime.equals(endDateTime.toLocalDate());","lastModifiedDate":"2024-02-09"},{"lineNumber":49,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"fy17ohhh"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":52,"author":{"gitId":"fy17ohhh"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":53,"author":{"gitId":"fy17ohhh"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\", super.toString(),","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"fy17ohhh"},"content":"                dateTimeFormatter(startDateTime), dateTimeFormatter(endDateTime));","lastModifiedDate":"2024-02-09"},{"lineNumber":55,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":56,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"fy17ohhh"},"content":"     * @inheritDoc Adds the start DateTime and end DateTime at the end.","lastModifiedDate":"2024-02-09"},{"lineNumber":59,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"fy17ohhh"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"fy17ohhh"},"content":"    public String taskFormatter() {","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"fy17ohhh"},"content":"        return String.format(\"E | %s | %s | %s - %s\\n\", statusFormatter(),","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"fy17ohhh"},"content":"                description, dateTimeFormatter(startDateTime), dateTimeFormatter(endDateTime));","lastModifiedDate":"2024-02-09"},{"lineNumber":64,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"fy17ohhh"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"fy17ohhh":65}},{"path":"src/main/java/jade/data/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package jade.data;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"fy17ohhh"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"fy17ohhh"},"content":" * The \u003ccode\u003eTask\u003c/code\u003e object represents a user task.","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"fy17ohhh"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"fy17ohhh"},"content":"public class Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"fy17ohhh"},"content":"    protected String description; // the description of the task","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"fy17ohhh"},"content":"    protected boolean isDone; // the completion status of the task, if true then is done","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"fy17ohhh"},"content":"     * Class constructor specifying the task description.","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"fy17ohhh"},"content":"     * The task is not done by default.","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"fy17ohhh"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"fy17ohhh"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"fy17ohhh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"fy17ohhh"},"content":"     * Another Class constructor specifying the task description and completion status.","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"fy17ohhh"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"fy17ohhh"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"fy17ohhh"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"fy17ohhh"},"content":"     * Returns the icon of the current completion status.","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"fy17ohhh"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"fy17ohhh"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-01-24"},{"lineNumber":34,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":36,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"fy17ohhh"},"content":"     * Returns the string of the completion status boolean value.","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"fy17ohhh"},"content":"     * If is done then returns \"1\", otherwise returns \"0\".","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"fy17ohhh"},"content":"    public String statusFormatter() {","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"fy17ohhh"},"content":"        return (isDone ? \"1\" : \"0\");","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"fy17ohhh"},"content":"     * Modifies the completion status as done.","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"fy17ohhh"},"content":"    public void mark() {","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"fy17ohhh"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-24"},{"lineNumber":49,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":50,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":51,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"fy17ohhh"},"content":"     * Modifies the completion status as not done.","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"fy17ohhh"},"content":"    public void unmark() {","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"fy17ohhh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":56,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":57,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":58,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"fy17ohhh"},"content":"     * Checks if the two dates are the same.","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"fy17ohhh"},"content":"     * The Task class has no date, so the methods returns false by default.","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"fy17ohhh"},"content":"    public boolean isSameDate(LocalDate dateTime) {","lastModifiedDate":"2024-02-09"},{"lineNumber":63,"author":{"gitId":"fy17ohhh"},"content":"        return false;","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"fy17ohhh"},"content":"     * Returns the formatted task string to be saved in the local file.","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"fy17ohhh"},"content":"    public String taskFormatter() {","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"fy17ohhh"},"content":"        return String.format(\"T | %s | %s\\n\", statusFormatter(), description);","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":73,"author":{"gitId":"fy17ohhh"},"content":"    public boolean containsKeyword(String keyword) {","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"fy17ohhh"},"content":"        return this.description.contains(keyword);","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"fy17ohhh"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":78,"author":{"gitId":"fy17ohhh"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":79,"author":{"gitId":"fy17ohhh"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2024-01-24"},{"lineNumber":80,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":81,"author":{"gitId":"fy17ohhh"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"fy17ohhh":81}},{"path":"src/main/java/jade/data/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package jade.data;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"fy17ohhh"},"content":"import java.util.List;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"fy17ohhh"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"fy17ohhh"},"content":" * The \u003ccode\u003eTaskList\u003c/code\u003e object represents a list consists of user tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"fy17ohhh"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"fy17ohhh"},"content":"public class TaskList {","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"fy17ohhh"},"content":"    private final List\u003cTask\u003e taskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"fy17ohhh"},"content":"     * A Class constructor initializing an empty list to save user tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"fy17ohhh"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"fy17ohhh"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"fy17ohhh"},"content":"     * Another Class constructor specifying the list that saves all user tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"fy17ohhh"},"content":"    public TaskList(List\u003cTask\u003e taskList) {","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"fy17ohhh"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"fy17ohhh"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"fy17ohhh"},"content":"    public int size() {","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"fy17ohhh"},"content":"        return taskList.size();","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"fy17ohhh"},"content":"     * Adds the task to the list.","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"fy17ohhh"},"content":"    public void add(Task task) {","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"fy17ohhh"},"content":"        taskList.add(task);","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"fy17ohhh"},"content":"     * Removes the task at the specified index.","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"fy17ohhh"},"content":"    public void remove(int index) {","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"fy17ohhh"},"content":"        taskList.remove(index);","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"fy17ohhh"},"content":"     * Marks the task as done at the specified index.","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"fy17ohhh"},"content":"    public void mark(int index) {","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"fy17ohhh"},"content":"        taskList.get(index).mark();","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"fy17ohhh"},"content":"     * Marks the task as not done yet at the specified index.","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"fy17ohhh"},"content":"    public void unmark(int index) {","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"fy17ohhh"},"content":"        taskList.get(index).unmark();","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"fy17ohhh"},"content":"     * Checks whether the list has no tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"fy17ohhh"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"fy17ohhh"},"content":"     * @return 0 if there is no tasks in the list.","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"fy17ohhh"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"fy17ohhh"},"content":"        return size() \u003d\u003d 0;","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"fy17ohhh"},"content":"     * Returns the Task at the specified index.","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"fy17ohhh"},"content":"    public Task get(int index) {","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"fy17ohhh"},"content":"        return taskList.get(index);","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"fy17ohhh"},"content":"     * Returns the formatted string of all tasks in the list.","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"fy17ohhh"},"content":"     * Each task starts at a new line.","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"fy17ohhh"},"content":"    public String listFormatter() {","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"fy17ohhh"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"fy17ohhh"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"fy17ohhh"},"content":"            sb.append(task.taskFormatter());","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"fy17ohhh"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"fy17ohhh"},"content":"        return sb.toString();","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"fy17ohhh"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"fy17ohhh":88}},{"path":"src/main/java/jade/data/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package jade.data;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"fy17ohhh"},"content":" * The \u003ccode\u003eTodo\u003c/code\u003e object represents a user todo task.","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"fy17ohhh"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"fy17ohhh"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"fy17ohhh"},"content":"     * Class constructor specifying the task description.","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"fy17ohhh"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"fy17ohhh"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"fy17ohhh"},"content":"     * Another Class constructor specifying the task description and completion status.","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"fy17ohhh"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"fy17ohhh"},"content":"        super(description, isDone);","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"fy17ohhh"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"fy17ohhh"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"fy17ohhh"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"fy17ohhh"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"fy17ohhh":25}},{"path":"src/main/java/jade/exception/JadeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package jade.exception;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"fy17ohhh"},"content":" * A customized exception class for the program.","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"fy17ohhh"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"fy17ohhh"},"content":"public class JadeException extends Exception {","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"fy17ohhh"},"content":"    public JadeException(String message) {","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"fy17ohhh"},"content":"        super(message);","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"fy17ohhh"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"fy17ohhh":10}},{"path":"src/main/java/jade/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package jade.gui;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"fy17ohhh"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"fy17ohhh"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"fy17ohhh"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"fy17ohhh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"fy17ohhh"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"fy17ohhh"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"fy17ohhh"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"fy17ohhh"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"fy17ohhh"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"fy17ohhh"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"fy17ohhh"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"fy17ohhh"},"content":"import javafx.scene.shape.Rectangle;","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"fy17ohhh"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"fy17ohhh"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"fy17ohhh"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"fy17ohhh"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"fy17ohhh"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"fy17ohhh"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"fy17ohhh"},"content":"    private static final String FXML_FILE_PATH \u003d \"/view/DialogBox.fxml\";","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"fy17ohhh"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"fy17ohhh"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"fy17ohhh"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"fy17ohhh"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"fy17ohhh"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"fy17ohhh"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"fy17ohhh"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(FXML_FILE_PATH));","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"fy17ohhh"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"fy17ohhh"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"fy17ohhh"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"fy17ohhh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"fy17ohhh"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"fy17ohhh"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"fy17ohhh"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"fy17ohhh"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"fy17ohhh"},"content":"        setImgStyle();","lastModifiedDate":"2024-02-11"},{"lineNumber":42,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":43,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":44,"author":{"gitId":"fy17ohhh"},"content":"     * Styles the user image and jade image which will appear in dialog boxes.","lastModifiedDate":"2024-02-11"},{"lineNumber":45,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":46,"author":{"gitId":"fy17ohhh"},"content":"    private void setImgStyle() {","lastModifiedDate":"2024-02-11"},{"lineNumber":47,"author":{"gitId":"fy17ohhh"},"content":"        Rectangle clip \u003d new Rectangle(displayPicture.getFitWidth(), displayPicture.getFitHeight());","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"fy17ohhh"},"content":"        clip.setArcWidth(40);","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"fy17ohhh"},"content":"        clip.setArcHeight(40);","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"fy17ohhh"},"content":"        displayPicture.setClip(clip);","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"fy17ohhh"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"fy17ohhh"},"content":"    private void flip() {","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"fy17ohhh"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"fy17ohhh"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"fy17ohhh"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"fy17ohhh"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"fy17ohhh"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"fy17ohhh"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-11"},{"lineNumber":64,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":65,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":66,"author":{"gitId":"fy17ohhh"},"content":"    public static DialogBox getJadeDialog(String text, Image img) {","lastModifiedDate":"2024-02-07"},{"lineNumber":67,"author":{"gitId":"fy17ohhh"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-07"},{"lineNumber":68,"author":{"gitId":"fy17ohhh"},"content":"        db.flip();","lastModifiedDate":"2024-02-07"},{"lineNumber":69,"author":{"gitId":"fy17ohhh"},"content":"        return db;","lastModifiedDate":"2024-02-07"},{"lineNumber":70,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":71,"author":{"gitId":"fy17ohhh"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"fy17ohhh":71}},{"path":"src/main/java/jade/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package jade.gui;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"fy17ohhh"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"fy17ohhh"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"fy17ohhh"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"fy17ohhh"},"content":"public class Launcher {","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"fy17ohhh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"fy17ohhh"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"fy17ohhh"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"fy17ohhh":12}},{"path":"src/main/java/jade/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package jade.gui;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"fy17ohhh"},"content":"import jade.Jade;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"fy17ohhh"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"fy17ohhh"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"fy17ohhh"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"fy17ohhh"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"fy17ohhh"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"fy17ohhh"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"fy17ohhh"},"content":" * A GUI for Jade using FXML.","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"fy17ohhh"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"fy17ohhh"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"fy17ohhh"},"content":"    private static final String FXML_FILE_PATH \u003d \"/view/MainWindow.fxml\";","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"fy17ohhh"},"content":"    private final Jade jade \u003d new Jade();","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"fy17ohhh"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"fy17ohhh"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"fy17ohhh"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"fy17ohhh"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(FXML_FILE_PATH));","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"fy17ohhh"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"fy17ohhh"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"fy17ohhh"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"fy17ohhh"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setJade(jade);","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"fy17ohhh"},"content":"            stage.show();","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"fy17ohhh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"fy17ohhh"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"fy17ohhh"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"fy17ohhh"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"fy17ohhh":32}},{"path":"src/main/java/jade/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package jade.gui;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"import jade.Jade;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"fy17ohhh"},"content":"import jade.ui.Ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"fy17ohhh"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"fy17ohhh"},"content":"import javafx.application.Platform;","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"fy17ohhh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"fy17ohhh"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"fy17ohhh"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"fy17ohhh"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"fy17ohhh"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"fy17ohhh"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"fy17ohhh"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"fy17ohhh"},"content":"import javafx.util.Duration;","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"fy17ohhh"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"fy17ohhh"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"fy17ohhh"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"fy17ohhh"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"fy17ohhh"},"content":"    private static final String USER_IMG_PATH \u003d \"/images/user.png\";","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"fy17ohhh"},"content":"    private static final String JADE_IMG_PATH \u003d \"/images/jade.png\";","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"fy17ohhh"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"fy17ohhh"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"fy17ohhh"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"fy17ohhh"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"fy17ohhh"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"fy17ohhh"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"fy17ohhh"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"fy17ohhh"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"fy17ohhh"},"content":"    private Jade jade;","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"fy17ohhh"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(USER_IMG_PATH));","lastModifiedDate":"2024-02-11"},{"lineNumber":34,"author":{"gitId":"fy17ohhh"},"content":"    private final Image jadeImage \u003d new Image(this.getClass().getResourceAsStream(JADE_IMG_PATH));","lastModifiedDate":"2024-02-11"},{"lineNumber":35,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":37,"author":{"gitId":"fy17ohhh"},"content":"     * Initializes the scrollPane with the launch message for user.","lastModifiedDate":"2024-02-11"},{"lineNumber":38,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":39,"author":{"gitId":"fy17ohhh"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"fy17ohhh"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"fy17ohhh"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"fy17ohhh"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getJadeDialog(Ui.LAUNCH_MESSAGE, jadeImage));","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"fy17ohhh"},"content":"    public void setJade(Jade j) {","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"fy17ohhh"},"content":"        jade \u003d j;","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"fy17ohhh"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"fy17ohhh"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"fy17ohhh"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"fy17ohhh"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"fy17ohhh"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"fy17ohhh"},"content":"        String response \u003d jade.getResponse(input);","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"fy17ohhh"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"fy17ohhh"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"fy17ohhh"},"content":"                DialogBox.getJadeDialog(response, jadeImage)","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"fy17ohhh"},"content":"        );","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"fy17ohhh"},"content":"        actOnExit();","lastModifiedDate":"2024-02-11"},{"lineNumber":62,"author":{"gitId":"fy17ohhh"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-11"},{"lineNumber":63,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":64,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":65,"author":{"gitId":"fy17ohhh"},"content":"     * Checks if user has required for exiting the program,","lastModifiedDate":"2024-02-11"},{"lineNumber":66,"author":{"gitId":"fy17ohhh"},"content":"     * and sets exit actions.","lastModifiedDate":"2024-02-11"},{"lineNumber":67,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":68,"author":{"gitId":"fy17ohhh"},"content":"    private void actOnExit() {","lastModifiedDate":"2024-02-11"},{"lineNumber":69,"author":{"gitId":"fy17ohhh"},"content":"        if (jade.shouldExit()) {","lastModifiedDate":"2024-02-08"},{"lineNumber":70,"author":{"gitId":"fy17ohhh"},"content":"            userInput.setEditable(false);","lastModifiedDate":"2024-02-09"},{"lineNumber":71,"author":{"gitId":"fy17ohhh"},"content":"            sendButton.setDisable(true);","lastModifiedDate":"2024-02-09"},{"lineNumber":72,"author":{"gitId":"fy17ohhh"},"content":"            PauseTransition pause \u003d new PauseTransition(Duration.seconds(3));","lastModifiedDate":"2024-02-09"},{"lineNumber":73,"author":{"gitId":"fy17ohhh"},"content":"            pause.setOnFinished(event -\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":74,"author":{"gitId":"fy17ohhh"},"content":"                    Platform.exit());","lastModifiedDate":"2024-02-09"},{"lineNumber":75,"author":{"gitId":"fy17ohhh"},"content":"            pause.play();","lastModifiedDate":"2024-02-09"},{"lineNumber":76,"author":{"gitId":"fy17ohhh"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":77,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":78,"author":{"gitId":"fy17ohhh"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"fy17ohhh":78}},{"path":"src/main/java/jade/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package jade.parser;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"fy17ohhh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"fy17ohhh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"fy17ohhh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"fy17ohhh"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"fy17ohhh"},"content":"import jade.commands.AddCommand;","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"fy17ohhh"},"content":"import jade.commands.Command;","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"fy17ohhh"},"content":"import jade.commands.DeleteCommand;","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"fy17ohhh"},"content":"import jade.commands.ExitCommand;","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"fy17ohhh"},"content":"import jade.commands.FindCommand;","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"fy17ohhh"},"content":"import jade.commands.InvalidCommand;","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"fy17ohhh"},"content":"import jade.commands.ListCommand;","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"fy17ohhh"},"content":"import jade.commands.MarkCommand;","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"fy17ohhh"},"content":"import jade.commands.UnmarkCommand;","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"fy17ohhh"},"content":"import jade.data.Deadline;","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"fy17ohhh"},"content":"import jade.data.Event;","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"fy17ohhh"},"content":"import jade.data.Todo;","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"fy17ohhh"},"content":"import jade.exception.JadeException;","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"fy17ohhh"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"fy17ohhh"},"content":" * The \u003ccode\u003eParser\u003c/code\u003e object to parse command line input from user.","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"fy17ohhh"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"fy17ohhh"},"content":"public class Parser {","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"fy17ohhh"},"content":"     * Returns the concatenated string of the descriptions.","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"fy17ohhh"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"fy17ohhh"},"content":"     * @param commands Array of commands.","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"fy17ohhh"},"content":"     * @param start    The string where the description starts in the array,","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"fy17ohhh"},"content":"     *                 if empty then starts at 1 by default.","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"fy17ohhh"},"content":"     * @param end      The string where the description ends in the array,","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"fy17ohhh"},"content":"     *                 if empty then ends at the end of the command by default.","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"fy17ohhh"},"content":"     * @return The concatenated description of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"fy17ohhh"},"content":"     * @throws JadeException If IllegalArgumentException is caught.","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"fy17ohhh"},"content":"    public static String concatStringWithTextBound(String[] commands, String start, String end) throws JadeException {","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"fy17ohhh"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"fy17ohhh"},"content":"            int startIndex \u003d start.isEmpty() ? 1 : Arrays.asList(commands).indexOf(start) + 1;","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"fy17ohhh"},"content":"            int endIndex \u003d end.isEmpty() ? commands.length : Arrays.asList(commands).indexOf(end);","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"fy17ohhh"},"content":"            return String.join(\" \", Arrays.copyOfRange(commands, startIndex, endIndex));","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"fy17ohhh"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"fy17ohhh"},"content":"            throw new JadeException(\"Illegal Argument\");","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"fy17ohhh"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"fy17ohhh"},"content":"     * Checks if the description in the commands is empty,","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"fy17ohhh"},"content":"     * if empty then throws an exception.","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"fy17ohhh"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"fy17ohhh"},"content":"     * @param commands Array of commands.","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"fy17ohhh"},"content":"     * @param length   The expected length of the command array.","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"fy17ohhh"},"content":"     * @throws JadeException If the command length is less than expected length.","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"fy17ohhh"},"content":"    public static void checkEmptyDescription(int length, String... commands) throws JadeException {","lastModifiedDate":"2024-02-09"},{"lineNumber":58,"author":{"gitId":"fy17ohhh"},"content":"        if (commands.length \u003c length) {","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"fy17ohhh"},"content":"            throw new JadeException(\"Your task description cannot be empty!\");","lastModifiedDate":"2024-02-09"},{"lineNumber":60,"author":{"gitId":"fy17ohhh"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":61,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":62,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":63,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":64,"author":{"gitId":"fy17ohhh"},"content":"     * Returns a LocalDateTime object by parsing the dateTime string.","lastModifiedDate":"2024-02-09"},{"lineNumber":65,"author":{"gitId":"fy17ohhh"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":66,"author":{"gitId":"fy17ohhh"},"content":"     * @param dateTime The dateTime to be parsed.","lastModifiedDate":"2024-02-09"},{"lineNumber":67,"author":{"gitId":"fy17ohhh"},"content":"     * @throws JadeException If DateTimeException is caught.","lastModifiedDate":"2024-02-09"},{"lineNumber":68,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":69,"author":{"gitId":"fy17ohhh"},"content":"    public static LocalDateTime parseDateTime(String dateTime, String pattern) throws JadeException {","lastModifiedDate":"2024-02-11"},{"lineNumber":70,"author":{"gitId":"fy17ohhh"},"content":"        try {","lastModifiedDate":"2024-02-09"},{"lineNumber":71,"author":{"gitId":"fy17ohhh"},"content":"            return LocalDateTime.parse(dateTime, DateTimeFormatter.ofPattern(pattern));","lastModifiedDate":"2024-02-11"},{"lineNumber":72,"author":{"gitId":"fy17ohhh"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2024-02-09"},{"lineNumber":73,"author":{"gitId":"fy17ohhh"},"content":"            throw new JadeException(\"Your date format is invalid!\");","lastModifiedDate":"2024-02-09"},{"lineNumber":74,"author":{"gitId":"fy17ohhh"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"fy17ohhh"},"content":"     * Returns a LocalDate object by parsing the date string.","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"fy17ohhh"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"fy17ohhh"},"content":"     * @param date The date to be parsed.","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"fy17ohhh"},"content":"     * @throws JadeException If DateTimeException is caught.","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"fy17ohhh"},"content":"    public static LocalDate parseDate(String date) throws JadeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"fy17ohhh"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"fy17ohhh"},"content":"            return LocalDate.parse(date);","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"fy17ohhh"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"fy17ohhh"},"content":"            throw new JadeException(\"Your date format is invalid!\");","lastModifiedDate":"2024-02-09"},{"lineNumber":88,"author":{"gitId":"fy17ohhh"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":92,"author":{"gitId":"fy17ohhh"},"content":"     * Returns an integer by parsing the string.","lastModifiedDate":"2024-02-02"},{"lineNumber":93,"author":{"gitId":"fy17ohhh"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":94,"author":{"gitId":"fy17ohhh"},"content":"     * @param intStr The integer string to be parsed.","lastModifiedDate":"2024-02-02"},{"lineNumber":95,"author":{"gitId":"fy17ohhh"},"content":"     * @throws JadeException If NumberFormatException is caught.","lastModifiedDate":"2024-02-02"},{"lineNumber":96,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":97,"author":{"gitId":"fy17ohhh"},"content":"    public static int parseInt(String intStr) throws JadeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"fy17ohhh"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":99,"author":{"gitId":"fy17ohhh"},"content":"            return Integer.parseInt(intStr);","lastModifiedDate":"2024-02-01"},{"lineNumber":100,"author":{"gitId":"fy17ohhh"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":101,"author":{"gitId":"fy17ohhh"},"content":"            throw new JadeException(\"Please input a valid number!\");","lastModifiedDate":"2024-02-09"},{"lineNumber":102,"author":{"gitId":"fy17ohhh"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":103,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":104,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":105,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":106,"author":{"gitId":"fy17ohhh"},"content":"     * Returns a Command object by parsing the single line user input.","lastModifiedDate":"2024-02-02"},{"lineNumber":107,"author":{"gitId":"fy17ohhh"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":108,"author":{"gitId":"fy17ohhh"},"content":"     * @param str The single line user input.","lastModifiedDate":"2024-02-02"},{"lineNumber":109,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":110,"author":{"gitId":"fy17ohhh"},"content":"    public static Command parse(String str) {","lastModifiedDate":"2024-02-01"},{"lineNumber":111,"author":{"gitId":"fy17ohhh"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":112,"author":{"gitId":"fy17ohhh"},"content":"            String[] commands \u003d str.split(\" \");","lastModifiedDate":"2024-02-01"},{"lineNumber":113,"author":{"gitId":"fy17ohhh"},"content":"            switch (commands[0]) {","lastModifiedDate":"2024-02-01"},{"lineNumber":114,"author":{"gitId":"fy17ohhh"},"content":"            case \"todo\":","lastModifiedDate":"2024-02-01"},{"lineNumber":115,"author":{"gitId":"fy17ohhh"},"content":"                return parseTodo(commands);","lastModifiedDate":"2024-02-11"},{"lineNumber":116,"author":{"gitId":"fy17ohhh"},"content":"            case \"deadline\":","lastModifiedDate":"2024-02-11"},{"lineNumber":117,"author":{"gitId":"fy17ohhh"},"content":"                return parseDeadline(commands);","lastModifiedDate":"2024-02-11"},{"lineNumber":118,"author":{"gitId":"fy17ohhh"},"content":"            case \"event\":","lastModifiedDate":"2024-02-11"},{"lineNumber":119,"author":{"gitId":"fy17ohhh"},"content":"                return parseEvent(commands);","lastModifiedDate":"2024-02-11"},{"lineNumber":120,"author":{"gitId":"fy17ohhh"},"content":"            case \"list\":","lastModifiedDate":"2024-02-11"},{"lineNumber":121,"author":{"gitId":"fy17ohhh"},"content":"                return parseList(commands);","lastModifiedDate":"2024-02-11"},{"lineNumber":122,"author":{"gitId":"fy17ohhh"},"content":"            case \"mark\":","lastModifiedDate":"2024-02-11"},{"lineNumber":123,"author":{"gitId":"fy17ohhh"},"content":"                return parseMark(commands);","lastModifiedDate":"2024-02-11"},{"lineNumber":124,"author":{"gitId":"fy17ohhh"},"content":"            case \"unmark\":","lastModifiedDate":"2024-02-11"},{"lineNumber":125,"author":{"gitId":"fy17ohhh"},"content":"                return parseUnmark(commands);","lastModifiedDate":"2024-02-11"},{"lineNumber":126,"author":{"gitId":"fy17ohhh"},"content":"            case \"delete\":","lastModifiedDate":"2024-02-11"},{"lineNumber":127,"author":{"gitId":"fy17ohhh"},"content":"                return parseDelete(commands);","lastModifiedDate":"2024-02-11"},{"lineNumber":128,"author":{"gitId":"fy17ohhh"},"content":"            case \"find\":","lastModifiedDate":"2024-02-11"},{"lineNumber":129,"author":{"gitId":"fy17ohhh"},"content":"                return parseFind(commands);","lastModifiedDate":"2024-02-11"},{"lineNumber":130,"author":{"gitId":"fy17ohhh"},"content":"            case \"bye\":","lastModifiedDate":"2024-02-11"},{"lineNumber":131,"author":{"gitId":"fy17ohhh"},"content":"                return parseBye(commands);","lastModifiedDate":"2024-02-11"},{"lineNumber":132,"author":{"gitId":"fy17ohhh"},"content":"            default:","lastModifiedDate":"2024-02-11"},{"lineNumber":133,"author":{"gitId":"fy17ohhh"},"content":"                assert false : commands[0];","lastModifiedDate":"2024-02-11"},{"lineNumber":134,"author":{"gitId":"fy17ohhh"},"content":"                return parseInvalid();","lastModifiedDate":"2024-02-11"},{"lineNumber":135,"author":{"gitId":"fy17ohhh"},"content":"            }","lastModifiedDate":"2024-02-11"},{"lineNumber":136,"author":{"gitId":"fy17ohhh"},"content":"        } catch (JadeException e) {","lastModifiedDate":"2024-02-11"},{"lineNumber":137,"author":{"gitId":"fy17ohhh"},"content":"            return new InvalidCommand(e.getMessage());","lastModifiedDate":"2024-02-11"},{"lineNumber":138,"author":{"gitId":"fy17ohhh"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":139,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":140,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":141,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":142,"author":{"gitId":"fy17ohhh"},"content":"     * Returns an AddCommand when the first parsed string is todo.","lastModifiedDate":"2024-02-11"},{"lineNumber":143,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":144,"author":{"gitId":"fy17ohhh"},"content":"    private static AddCommand parseTodo(String[] commands) throws JadeException {","lastModifiedDate":"2024-02-11"},{"lineNumber":145,"author":{"gitId":"fy17ohhh"},"content":"        checkEmptyDescription(2, commands);","lastModifiedDate":"2024-02-09"},{"lineNumber":146,"author":{"gitId":"fy17ohhh"},"content":"        return new AddCommand(new Todo(concatStringWithTextBound(commands, \"\", \"\")));","lastModifiedDate":"2024-02-09"},{"lineNumber":147,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":148,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":149,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":150,"author":{"gitId":"fy17ohhh"},"content":"     * Returns an AddCommand when the first parsed string is deadline.","lastModifiedDate":"2024-02-11"},{"lineNumber":151,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":152,"author":{"gitId":"fy17ohhh"},"content":"    private static AddCommand parseDeadline(String[] commands) throws JadeException {","lastModifiedDate":"2024-02-11"},{"lineNumber":153,"author":{"gitId":"fy17ohhh"},"content":"        checkEmptyDescription(5, commands);","lastModifiedDate":"2024-02-09"},{"lineNumber":154,"author":{"gitId":"fy17ohhh"},"content":"        return new AddCommand(new Deadline(concatStringWithTextBound(commands, \"\", \"/by\"),","lastModifiedDate":"2024-02-09"},{"lineNumber":155,"author":{"gitId":"fy17ohhh"},"content":"                parseDateTime(concatStringWithTextBound(commands, \"/by\", \"\"), \"yyyy-MM-dd hmma\")));","lastModifiedDate":"2024-02-11"},{"lineNumber":156,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":157,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":158,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":159,"author":{"gitId":"fy17ohhh"},"content":"     * Returns an AddCommand when the first parsed string is event.","lastModifiedDate":"2024-02-11"},{"lineNumber":160,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":161,"author":{"gitId":"fy17ohhh"},"content":"    private static AddCommand parseEvent(String[] commands) throws JadeException {","lastModifiedDate":"2024-02-11"},{"lineNumber":162,"author":{"gitId":"fy17ohhh"},"content":"        checkEmptyDescription(8, commands);","lastModifiedDate":"2024-02-09"},{"lineNumber":163,"author":{"gitId":"fy17ohhh"},"content":"        return new AddCommand(new Event(concatStringWithTextBound(commands, \"\", \"/from\"),","lastModifiedDate":"2024-02-09"},{"lineNumber":164,"author":{"gitId":"fy17ohhh"},"content":"                parseDateTime(concatStringWithTextBound(commands, \"/from\", \"/to\"), \"yyyy-MM-dd hmma\"),","lastModifiedDate":"2024-02-11"},{"lineNumber":165,"author":{"gitId":"fy17ohhh"},"content":"                parseDateTime(concatStringWithTextBound(commands, \"/to\", \"\"), \"yyyy-MM-dd hmma\")));","lastModifiedDate":"2024-02-11"},{"lineNumber":166,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":167,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":168,"author":{"gitId":"fy17ohhh"},"content":"     * Returns a ListCommand when the first parsed string is list.","lastModifiedDate":"2024-02-11"},{"lineNumber":169,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":170,"author":{"gitId":"fy17ohhh"},"content":"    private static ListCommand parseList(String[] commands) throws JadeException {","lastModifiedDate":"2024-02-11"},{"lineNumber":171,"author":{"gitId":"fy17ohhh"},"content":"        if (commands.length !\u003d 1) {","lastModifiedDate":"2024-02-01"},{"lineNumber":172,"author":{"gitId":"fy17ohhh"},"content":"            return new ListCommand(parseDate(concatStringWithTextBound(commands, \"\", \"\")));","lastModifiedDate":"2024-02-09"},{"lineNumber":173,"author":{"gitId":"fy17ohhh"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":174,"author":{"gitId":"fy17ohhh"},"content":"        return new ListCommand();","lastModifiedDate":"2024-02-01"},{"lineNumber":175,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":176,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":177,"author":{"gitId":"fy17ohhh"},"content":"     * Returns a MarkCommand when the first parsed string is mark.","lastModifiedDate":"2024-02-11"},{"lineNumber":178,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":179,"author":{"gitId":"fy17ohhh"},"content":"    private static MarkCommand parseMark(String[] commands) throws JadeException {","lastModifiedDate":"2024-02-11"},{"lineNumber":180,"author":{"gitId":"fy17ohhh"},"content":"        checkEmptyDescription(2, commands);","lastModifiedDate":"2024-02-09"},{"lineNumber":181,"author":{"gitId":"fy17ohhh"},"content":"        return new MarkCommand(parseInt(commands[1]));","lastModifiedDate":"2024-02-01"},{"lineNumber":182,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":183,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":184,"author":{"gitId":"fy17ohhh"},"content":"     * Returns an UnmarkCommand when the first parsed string is unmark.","lastModifiedDate":"2024-02-11"},{"lineNumber":185,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":186,"author":{"gitId":"fy17ohhh"},"content":"    private static UnmarkCommand parseUnmark(String[] commands) throws JadeException {","lastModifiedDate":"2024-02-11"},{"lineNumber":187,"author":{"gitId":"fy17ohhh"},"content":"        checkEmptyDescription(2, commands);","lastModifiedDate":"2024-02-09"},{"lineNumber":188,"author":{"gitId":"fy17ohhh"},"content":"        return new UnmarkCommand(parseInt(commands[1]));","lastModifiedDate":"2024-02-01"},{"lineNumber":189,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":190,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":191,"author":{"gitId":"fy17ohhh"},"content":"     * Returns a DeleteCommand when the first parsed string is delete.","lastModifiedDate":"2024-02-11"},{"lineNumber":192,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":193,"author":{"gitId":"fy17ohhh"},"content":"    private static DeleteCommand parseDelete(String[] commands) throws JadeException {","lastModifiedDate":"2024-02-11"},{"lineNumber":194,"author":{"gitId":"fy17ohhh"},"content":"        checkEmptyDescription(2, commands);","lastModifiedDate":"2024-02-09"},{"lineNumber":195,"author":{"gitId":"fy17ohhh"},"content":"        return new DeleteCommand(parseInt(commands[1]));","lastModifiedDate":"2024-02-01"},{"lineNumber":196,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":197,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":198,"author":{"gitId":"fy17ohhh"},"content":"     * Returns a FindCommand when the first parsed string is find.","lastModifiedDate":"2024-02-11"},{"lineNumber":199,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":200,"author":{"gitId":"fy17ohhh"},"content":"    private static FindCommand parseFind(String[] commands) throws JadeException {","lastModifiedDate":"2024-02-11"},{"lineNumber":201,"author":{"gitId":"fy17ohhh"},"content":"        checkEmptyDescription(2, commands);","lastModifiedDate":"2024-02-09"},{"lineNumber":202,"author":{"gitId":"fy17ohhh"},"content":"        return new FindCommand(concatStringWithTextBound(commands, \"\", \"\"));","lastModifiedDate":"2024-02-09"},{"lineNumber":203,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":204,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":205,"author":{"gitId":"fy17ohhh"},"content":"     * Returns an ExitCommand when the first parsed string is bye.","lastModifiedDate":"2024-02-11"},{"lineNumber":206,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":207,"author":{"gitId":"fy17ohhh"},"content":"    private static ExitCommand parseBye(String[] commands) throws JadeException {","lastModifiedDate":"2024-02-11"},{"lineNumber":208,"author":{"gitId":"fy17ohhh"},"content":"        checkEmptyDescription(1, commands);","lastModifiedDate":"2024-02-09"},{"lineNumber":209,"author":{"gitId":"fy17ohhh"},"content":"        return new ExitCommand();","lastModifiedDate":"2024-02-01"},{"lineNumber":210,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":211,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":212,"author":{"gitId":"fy17ohhh"},"content":"     * Returns an InvalidCommand when the input string is invalid.","lastModifiedDate":"2024-02-11"},{"lineNumber":213,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":214,"author":{"gitId":"fy17ohhh"},"content":"    private static InvalidCommand parseInvalid() {","lastModifiedDate":"2024-02-11"},{"lineNumber":215,"author":{"gitId":"fy17ohhh"},"content":"        return new InvalidCommand();","lastModifiedDate":"2024-02-11"},{"lineNumber":216,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":217,"author":{"gitId":"fy17ohhh"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"fy17ohhh":217}},{"path":"src/main/java/jade/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package jade.storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"import java.io.File;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"fy17ohhh"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"fy17ohhh"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"fy17ohhh"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"fy17ohhh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"fy17ohhh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"fy17ohhh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"fy17ohhh"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"fy17ohhh"},"content":"import java.util.List;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"fy17ohhh"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"fy17ohhh"},"content":"import jade.data.Deadline;","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"fy17ohhh"},"content":"import jade.data.Event;","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"fy17ohhh"},"content":"import jade.data.Task;","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"fy17ohhh"},"content":"import jade.data.TaskList;","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"fy17ohhh"},"content":"import jade.data.Todo;","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"fy17ohhh"},"content":"import jade.exception.JadeException;","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"fy17ohhh"},"content":"import jade.parser.Parser;","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"fy17ohhh"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"fy17ohhh"},"content":" * The \u003ccode\u003eStorage\u003c/code\u003e object for loading user tasks from local file","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"fy17ohhh"},"content":" * and saving changes to the same file after program exits.","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"fy17ohhh"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"fy17ohhh"},"content":"public class Storage {","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"fy17ohhh"},"content":"    private static final String DIR_NOT_EXIT_MSG \u003d \"Dir does not exist\";","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"fy17ohhh"},"content":"    private static final String FILE_NOT_EXIT_MSG \u003d \"File does not exist\";","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"fy17ohhh"},"content":"    private final String filePath; // the file path storing all user tasks","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"fy17ohhh"},"content":"     * Class constructor specifying the local file path.","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"fy17ohhh"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"fy17ohhh"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"fy17ohhh"},"content":"     * Returns all saved user tasks in the local file.","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"fy17ohhh"},"content":"     * If the directory or file does not exit, an empty list is returned.","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"fy17ohhh"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"fy17ohhh"},"content":"     * @return A list of user tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"fy17ohhh"},"content":"     * @throws JadeException If directory or file does not exit","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"fy17ohhh"},"content":"    public List\u003cTask\u003e load() throws JadeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"fy17ohhh"},"content":"        String[] dirs \u003d filePath.split(\"/\");","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"fy17ohhh"},"content":"        String jadeDirStr \u003d System.getProperty(\"user.dir\") + \"/\" + String.join(\"/\", Arrays","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"fy17ohhh"},"content":"                .copyOfRange(dirs, 0, dirs.length - 1));","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"fy17ohhh"},"content":"        createJadeDir(jadeDirStr);","lastModifiedDate":"2024-02-11"},{"lineNumber":50,"author":{"gitId":"fy17ohhh"},"content":"        String jadeFileDirStr \u003d System.getProperty(\"user.dir\") + \"/\" + filePath;","lastModifiedDate":"2024-02-11"},{"lineNumber":51,"author":{"gitId":"fy17ohhh"},"content":"        File jadeFile \u003d createJadeFile(jadeFileDirStr);","lastModifiedDate":"2024-02-11"},{"lineNumber":52,"author":{"gitId":"fy17ohhh"},"content":"        return readFromLocal(jadeFile);","lastModifiedDate":"2024-02-11"},{"lineNumber":53,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":54,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":55,"author":{"gitId":"fy17ohhh"},"content":"     * Creates directory for saving the local file if not exists.","lastModifiedDate":"2024-02-11"},{"lineNumber":56,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":57,"author":{"gitId":"fy17ohhh"},"content":"    private void createJadeDir(String dirStr) throws JadeException {","lastModifiedDate":"2024-02-11"},{"lineNumber":58,"author":{"gitId":"fy17ohhh"},"content":"        File jadeDir \u003d new File(dirStr);","lastModifiedDate":"2024-02-11"},{"lineNumber":59,"author":{"gitId":"fy17ohhh"},"content":"        if (!jadeDir.exists()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"fy17ohhh"},"content":"            jadeDir.mkdir();","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"fy17ohhh"},"content":"            throw new JadeException(DIR_NOT_EXIT_MSG);","lastModifiedDate":"2024-02-11"},{"lineNumber":62,"author":{"gitId":"fy17ohhh"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":64,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":65,"author":{"gitId":"fy17ohhh"},"content":"     * Creates the local file for saving user tasks if not exists.","lastModifiedDate":"2024-02-11"},{"lineNumber":66,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":67,"author":{"gitId":"fy17ohhh"},"content":"    private File createJadeFile(String fileDirStr) throws JadeException {","lastModifiedDate":"2024-02-11"},{"lineNumber":68,"author":{"gitId":"fy17ohhh"},"content":"        try {","lastModifiedDate":"2024-02-11"},{"lineNumber":69,"author":{"gitId":"fy17ohhh"},"content":"            File jadeFile \u003d new File(fileDirStr);","lastModifiedDate":"2024-02-11"},{"lineNumber":70,"author":{"gitId":"fy17ohhh"},"content":"            if (!jadeFile.exists()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"fy17ohhh"},"content":"                jadeFile.createNewFile();","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"fy17ohhh"},"content":"                throw new JadeException(FILE_NOT_EXIT_MSG);","lastModifiedDate":"2024-02-11"},{"lineNumber":73,"author":{"gitId":"fy17ohhh"},"content":"            }","lastModifiedDate":"2024-02-11"},{"lineNumber":74,"author":{"gitId":"fy17ohhh"},"content":"            return jadeFile;","lastModifiedDate":"2024-02-11"},{"lineNumber":75,"author":{"gitId":"fy17ohhh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-11"},{"lineNumber":76,"author":{"gitId":"fy17ohhh"},"content":"            throw new JadeException(e.getMessage());","lastModifiedDate":"2024-02-11"},{"lineNumber":77,"author":{"gitId":"fy17ohhh"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":80,"author":{"gitId":"fy17ohhh"},"content":"     * Reads all strings and add tasks from local file which saves all user tasks.","lastModifiedDate":"2024-02-11"},{"lineNumber":81,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":82,"author":{"gitId":"fy17ohhh"},"content":"    private List\u003cTask\u003e readFromLocal(File file) throws JadeException {","lastModifiedDate":"2024-02-11"},{"lineNumber":83,"author":{"gitId":"fy17ohhh"},"content":"        try {","lastModifiedDate":"2024-02-11"},{"lineNumber":84,"author":{"gitId":"fy17ohhh"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2024-02-11"},{"lineNumber":85,"author":{"gitId":"fy17ohhh"},"content":"            ArrayList\u003cTask\u003e savedTaskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"fy17ohhh"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"fy17ohhh"},"content":"                String[] task \u003d sc.nextLine().split(\" \\\\| \");","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"fy17ohhh"},"content":"                assert task.length \u003e 0 : \"Saved task strings should not be empty.\";","lastModifiedDate":"2024-02-11"},{"lineNumber":89,"author":{"gitId":"fy17ohhh"},"content":"                boolean isDone \u003d task[1].equals(\"1\");","lastModifiedDate":"2024-02-02"},{"lineNumber":90,"author":{"gitId":"fy17ohhh"},"content":"                switch (task[0]) {","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"fy17ohhh"},"content":"                case \"T\":","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"fy17ohhh"},"content":"                    savedTaskList.add(new Todo(task[2], isDone));","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"fy17ohhh"},"content":"                    break;","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"fy17ohhh"},"content":"                case \"D\":","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"fy17ohhh"},"content":"                    savedTaskList.add(new Deadline(task[2], LocalDateTime.parse(task[3],","lastModifiedDate":"2024-02-09"},{"lineNumber":96,"author":{"gitId":"fy17ohhh"},"content":"                            DateTimeFormatter.ofPattern(\"MMM d yyyy hmma\")), isDone));","lastModifiedDate":"2024-02-09"},{"lineNumber":97,"author":{"gitId":"fy17ohhh"},"content":"                    break;","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"fy17ohhh"},"content":"                case \"E\":","lastModifiedDate":"2024-02-01"},{"lineNumber":99,"author":{"gitId":"fy17ohhh"},"content":"                    String[] dateTimes \u003d task[3].split(\" - \");","lastModifiedDate":"2024-02-09"},{"lineNumber":100,"author":{"gitId":"fy17ohhh"},"content":"                    savedTaskList.add(new Event(task[2], LocalDateTime.parse(dateTimes[0], DateTimeFormatter","lastModifiedDate":"2024-02-09"},{"lineNumber":101,"author":{"gitId":"fy17ohhh"},"content":"                            .ofPattern(\"MMM d yyyy hmma\")), LocalDateTime.parse(dateTimes[1], DateTimeFormatter","lastModifiedDate":"2024-02-09"},{"lineNumber":102,"author":{"gitId":"fy17ohhh"},"content":"                            .ofPattern(\"MMM d yyyy hmma\")), isDone));","lastModifiedDate":"2024-02-09"},{"lineNumber":103,"author":{"gitId":"fy17ohhh"},"content":"                    break;","lastModifiedDate":"2024-02-04"},{"lineNumber":104,"author":{"gitId":"fy17ohhh"},"content":"                default:","lastModifiedDate":"2024-02-04"},{"lineNumber":105,"author":{"gitId":"fy17ohhh"},"content":"                    assert false : task[0];","lastModifiedDate":"2024-02-11"},{"lineNumber":106,"author":{"gitId":"fy17ohhh"},"content":"                    break;","lastModifiedDate":"2024-02-01"},{"lineNumber":107,"author":{"gitId":"fy17ohhh"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":108,"author":{"gitId":"fy17ohhh"},"content":"                addTask(savedTaskList, sc.nextLine());","lastModifiedDate":"2024-02-11"},{"lineNumber":109,"author":{"gitId":"fy17ohhh"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":110,"author":{"gitId":"fy17ohhh"},"content":"            sc.close();","lastModifiedDate":"2024-02-01"},{"lineNumber":111,"author":{"gitId":"fy17ohhh"},"content":"            return savedTaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":112,"author":{"gitId":"fy17ohhh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":113,"author":{"gitId":"fy17ohhh"},"content":"            throw new JadeException(e.getMessage());","lastModifiedDate":"2024-02-11"},{"lineNumber":114,"author":{"gitId":"fy17ohhh"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":115,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":116,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":117,"author":{"gitId":"fy17ohhh"},"content":"     * Add all local saved task to the task list.","lastModifiedDate":"2024-02-11"},{"lineNumber":118,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":119,"author":{"gitId":"fy17ohhh"},"content":"    private void addTask(ArrayList\u003cTask\u003e taskList, String line) throws JadeException {","lastModifiedDate":"2024-02-11"},{"lineNumber":120,"author":{"gitId":"fy17ohhh"},"content":"        String[] task \u003d line.split(\" \\\\| \");","lastModifiedDate":"2024-02-11"},{"lineNumber":121,"author":{"gitId":"fy17ohhh"},"content":"        // local tasks indicate done status in binary","lastModifiedDate":"2024-02-11"},{"lineNumber":122,"author":{"gitId":"fy17ohhh"},"content":"        boolean isDone \u003d task[1].equals(\"1\");","lastModifiedDate":"2024-02-02"},{"lineNumber":123,"author":{"gitId":"fy17ohhh"},"content":"        switch (task[0]) {","lastModifiedDate":"2024-02-01"},{"lineNumber":124,"author":{"gitId":"fy17ohhh"},"content":"        case \"T\":","lastModifiedDate":"2024-02-01"},{"lineNumber":125,"author":{"gitId":"fy17ohhh"},"content":"            taskList.add(new Todo(task[2], isDone));","lastModifiedDate":"2024-02-11"},{"lineNumber":126,"author":{"gitId":"fy17ohhh"},"content":"            break;","lastModifiedDate":"2024-02-01"},{"lineNumber":127,"author":{"gitId":"fy17ohhh"},"content":"        case \"D\":","lastModifiedDate":"2024-02-01"},{"lineNumber":128,"author":{"gitId":"fy17ohhh"},"content":"            taskList.add(new Deadline(task[2], Parser.parseDateTime(task[3], \"MMM d yyyy hmma\"), isDone));","lastModifiedDate":"2024-02-11"},{"lineNumber":129,"author":{"gitId":"fy17ohhh"},"content":"            break;","lastModifiedDate":"2024-02-01"},{"lineNumber":130,"author":{"gitId":"fy17ohhh"},"content":"        case \"E\":","lastModifiedDate":"2024-02-01"},{"lineNumber":131,"author":{"gitId":"fy17ohhh"},"content":"            String[] dateTimes \u003d task[3].split(\" - \");","lastModifiedDate":"2024-02-09"},{"lineNumber":132,"author":{"gitId":"fy17ohhh"},"content":"            taskList.add(new Event(task[2], Parser.parseDateTime(dateTimes[0], \"MMM d yyyy hmma\"),","lastModifiedDate":"2024-02-11"},{"lineNumber":133,"author":{"gitId":"fy17ohhh"},"content":"                    Parser.parseDateTime(dateTimes[1], \"MMM d yyyy hmma\"), isDone));","lastModifiedDate":"2024-02-11"},{"lineNumber":134,"author":{"gitId":"fy17ohhh"},"content":"            break;","lastModifiedDate":"2024-02-04"},{"lineNumber":135,"author":{"gitId":"fy17ohhh"},"content":"        default:","lastModifiedDate":"2024-02-04"},{"lineNumber":136,"author":{"gitId":"fy17ohhh"},"content":"            break;","lastModifiedDate":"2024-02-01"},{"lineNumber":137,"author":{"gitId":"fy17ohhh"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":138,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":139,"author":{"gitId":"fy17ohhh"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":140,"author":{"gitId":"fy17ohhh"},"content":"     * Modifies the local file to store updated user tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":141,"author":{"gitId":"fy17ohhh"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":142,"author":{"gitId":"fy17ohhh"},"content":"     * @param taskList The list of updated user tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":143,"author":{"gitId":"fy17ohhh"},"content":"     * @throws JadeException If IOException is caught","lastModifiedDate":"2024-02-02"},{"lineNumber":144,"author":{"gitId":"fy17ohhh"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":145,"author":{"gitId":"fy17ohhh"},"content":"    public void saveChange(TaskList taskList) throws JadeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":146,"author":{"gitId":"fy17ohhh"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":147,"author":{"gitId":"fy17ohhh"},"content":"            Path dataFilePath \u003d java.nio.file.Paths.get(System.getProperty(\"user.dir\"), \"data\", \"jadeList.txt\");","lastModifiedDate":"2024-02-01"},{"lineNumber":148,"author":{"gitId":"fy17ohhh"},"content":"            File jadeList \u003d new File(dataFilePath.toString());","lastModifiedDate":"2024-02-01"},{"lineNumber":149,"author":{"gitId":"fy17ohhh"},"content":"            FileWriter jadeListWriter \u003d new FileWriter(jadeList);","lastModifiedDate":"2024-02-01"},{"lineNumber":150,"author":{"gitId":"fy17ohhh"},"content":"            jadeListWriter.write(taskList.listFormatter());","lastModifiedDate":"2024-02-01"},{"lineNumber":151,"author":{"gitId":"fy17ohhh"},"content":"            jadeListWriter.close();","lastModifiedDate":"2024-02-01"},{"lineNumber":152,"author":{"gitId":"fy17ohhh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":153,"author":{"gitId":"fy17ohhh"},"content":"            throw new JadeException(\"IO Exception\");","lastModifiedDate":"2024-02-01"},{"lineNumber":154,"author":{"gitId":"fy17ohhh"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":155,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":156,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":157,"author":{"gitId":"fy17ohhh"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"fy17ohhh":157}},{"path":"src/main/java/jade/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package jade.ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"fy17ohhh"},"content":" * Represents a user interface for the \u003ccode\u003eJade\u003c/code\u003e object.","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"fy17ohhh"},"content":" * A \u003ccode\u003eUi\u003c/code\u003e saves messages for user feedback.","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"fy17ohhh"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"fy17ohhh"},"content":"public class Ui {","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"fy17ohhh"},"content":"    public static final String LOGO \u003d \"  ____   ___    ____     ______\\n\"","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"fy17ohhh"},"content":"            + \"  |  |  / _ \\\\  |  ___ \\\\ / |____/\\n\"","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"fy17ohhh"},"content":"            + \"  |  | | | | | | |  | | | |____\\n\"","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"fy17ohhh"},"content":"            + \"  |  | | |_| | | |  | | | |____|\\n\"","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"fy17ohhh"},"content":"            + \"|\\\\|  | | ___ | | |__| | | |____\\n\"","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"fy17ohhh"},"content":"            + \" \\\\___| |_| |_| |_____/  \\\\_|____\\\\\\n\"; // logo for the program","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"fy17ohhh"},"content":"    public static final String LAUNCH_MESSAGE \u003d String.format(\"%s\\nHello, I\u0027m Jade, your task manager.\\n\\n\"","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"fy17ohhh"},"content":"            + \"Feel free to set reminders for your task by entering text using the following format:\\n\\n\"","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"fy17ohhh"},"content":"            + \"1. todo {Task Description} e.g. todo read a book\\n\"","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"fy17ohhh"},"content":"            + \"2. deadline {Task Description} /by {yyyy-mm-dd hmma} e.g. deadline read a book /by 2024-12-31 300pm\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"fy17ohhh"},"content":"            + \"3. event {Task Description} /from {yyyy-mm-dd hmma} /to {yyyy-mm-dd hmma} \"","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"fy17ohhh"},"content":"            + \"e.g. read a book /from 2024-12-30 200pm /to 2024-12-31 1000pm\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"fy17ohhh"},"content":"            + \"\\nIf you want to check all tasks on a specific day, use list {yyyy-mm-dd} \"","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"fy17ohhh"},"content":"            + \"e.g. list 2024-12-30\", LOGO);","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"fy17ohhh"},"content":"    public static final String LOADING_ERROR_MESSAGE \u003d \"\\t[There\u0027s no file under current \"","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"fy17ohhh"},"content":"             + \"storage path, a new task file has been created.]\";","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"fy17ohhh"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"fy17ohhh":24}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"fy17ohhh"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"fy17ohhh"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"fy17ohhh"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"fy17ohhh"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"fy17ohhh"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"fy17ohhh"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"fy17ohhh"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"fy17ohhh"},"content":"        \u003cLabel fx:id\u003d\"dialog\" alignment\u003d\"CENTER\" contentDisplay\u003d\"LEFT\" style\u003d\"-fx-background-radius: 10px; -fx-background-color: #48544d; -fx-padding: 10px;\" textFill\u003d\"WHITE\" wrapText\u003d\"true\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"fy17ohhh"},"content":"         \u003cfont\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"fy17ohhh"},"content":"            \u003cFont name\u003d\"Monaco\" size\u003d\"12.0\" /\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"fy17ohhh"},"content":"         \u003c/font\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"fy17ohhh"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"fy17ohhh"},"content":"            \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"fy17ohhh"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"fy17ohhh"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"fy17ohhh"},"content":"            \u003cInsets right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"fy17ohhh"},"content":"         \u003c/HBox.margin\u003e\u003c/Label\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"fy17ohhh"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"65.0\" fitWidth\u003d\"65.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"fy17ohhh"},"content":"         \u003cimage\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"fy17ohhh"},"content":"            \u003cImage url\u003d\"@../images/jade.png\" /\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"fy17ohhh"},"content":"         \u003c/image\u003e\u003c/ImageView\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"fy17ohhh"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"fy17ohhh"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"fy17ohhh"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"fy17ohhh"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"fy17ohhh"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"fy17ohhh":30}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"\u003c?import javafx.scene.Cursor?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"fy17ohhh"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"fy17ohhh"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"fy17ohhh"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"fy17ohhh"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"fy17ohhh"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"fy17ohhh"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"fy17ohhh"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"700.0\" prefWidth\u003d\"500.0\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"jade.gui.MainWindow\"\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"fy17ohhh"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"fy17ohhh"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" opacity\u003d\"0.8\" prefHeight\u003d\"41.0\" prefWidth\u003d\"424.0\" promptText\u003d\"Enter your next command...\" style\u003d\"-fx-border-color: #70c491; -fx-border-width: 2px; -fx-border-radius: 10px; -fx-background-radius: 10px;\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"fy17ohhh"},"content":"         \u003cfont\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"fy17ohhh"},"content":"            \u003cFont name\u003d\"Monaco\" size\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"fy17ohhh"},"content":"         \u003c/font\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"fy17ohhh"},"content":"         \u003ccursor\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"fy17ohhh"},"content":"            \u003cCursor fx:constant\u003d\"DEFAULT\" /\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"fy17ohhh"},"content":"         \u003c/cursor\u003e\u003c/TextField\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"fy17ohhh"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"424.0\" layoutY\u003d\"658.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" style\u003d\"-fx-background-color: #70c491; -fx-background-radius: 10px; -fx-border-radius: 10px;\" text\u003d\"Send\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"fy17ohhh"},"content":"         \u003cfont\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"fy17ohhh"},"content":"            \u003cFont name\u003d\"Monaco\" size\u003d\"16.0\" /\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"fy17ohhh"},"content":"         \u003c/font\u003e\u003c/Button\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"fy17ohhh"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"657.0\" prefWidth\u003d\"500.0\" style\u003d\"-fx-background: #e1ede6;\" vbarPolicy\u003d\"ALWAYS\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"fy17ohhh"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"fy17ohhh"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"488.0\" style\u003d\"-fx-background-color: #e1ede6; -fx-background-radius: 10px; -fx-border-radius: 10px;\" /\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"fy17ohhh"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"fy17ohhh"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"fy17ohhh"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"fy17ohhh"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"fy17ohhh":30}},{"path":"src/test/java/jade/data/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package jade.data;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"fy17ohhh"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"fy17ohhh"},"content":"import java.util.List;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"fy17ohhh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"fy17ohhh"},"content":"public class TaskListTest {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"fy17ohhh"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"fy17ohhh"},"content":"    public void size() {","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"fy17ohhh"},"content":"        assertEquals(0, new TaskList().size());","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"fy17ohhh"},"content":"        assertEquals(1, new TaskList(List.of(new Todo(\"first\"))).size());","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"fy17ohhh"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"fy17ohhh"},"content":"    public void mark_validIndex_success() {","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"fy17ohhh"},"content":"        TaskList testTaskList \u003d new TaskList(List.of(new Todo(\"first\"), new Todo(\"second\")));","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"fy17ohhh"},"content":"        testTaskList.mark(0);","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"fy17ohhh"},"content":"        assertEquals(true, testTaskList.get(0).isDone);","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"fy17ohhh"},"content":"        testTaskList.mark(1);","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"fy17ohhh"},"content":"        assertEquals(true, testTaskList.get(1).isDone);","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"fy17ohhh"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"fy17ohhh"},"content":"    public void mark_invalidIndex_exceptionThrown() {","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"fy17ohhh"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"fy17ohhh"},"content":"            TaskList testTaskList \u003d new TaskList(List.of(new Todo(\"first\")));","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"fy17ohhh"},"content":"            testTaskList.mark(-1);","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"fy17ohhh"},"content":"            fail();","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"fy17ohhh"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"fy17ohhh"},"content":"            assertEquals(\"Index: -1 Size: 1\", e.getMessage());","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"fy17ohhh"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"fy17ohhh"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"fy17ohhh"},"content":"    public void unmark_validIndex_success() {","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"fy17ohhh"},"content":"        TaskList testTaskList \u003d new TaskList(List.of(new Todo(\"first\", true), new Todo(\"second\", true)));","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"fy17ohhh"},"content":"        testTaskList.unmark(0);","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"fy17ohhh"},"content":"        assertEquals(false, testTaskList.get(0).isDone);","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"fy17ohhh"},"content":"        testTaskList.unmark(1);","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"fy17ohhh"},"content":"        assertEquals(false, testTaskList.get(1).isDone);","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"fy17ohhh"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"fy17ohhh"},"content":"    public void unmark_invalidIndex_exceptionThrown() {","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"fy17ohhh"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"fy17ohhh"},"content":"            TaskList testTaskList \u003d new TaskList(List.of(new Todo(\"first\", true)));","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"fy17ohhh"},"content":"            testTaskList.unmark(2);","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"fy17ohhh"},"content":"            fail();","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"fy17ohhh"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"fy17ohhh"},"content":"            assertEquals(\"Index: 2 Size: 1\", e.getMessage());","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"fy17ohhh"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"fy17ohhh"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"fy17ohhh"},"content":"    public void isEmpty() {","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"fy17ohhh"},"content":"        // empty task list","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"fy17ohhh"},"content":"        assertEquals(true, new TaskList().isEmpty());","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"fy17ohhh"},"content":"        // nonempty task list","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"fy17ohhh"},"content":"        assertEquals(false, new TaskList(List.of(new Todo(\"first\"))).isEmpty());","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"fy17ohhh"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"fy17ohhh"},"content":"    public void listFormatter() {","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"fy17ohhh"},"content":"        assertEquals(\"T | 1 | first\\n\", new TaskList(List.of(new Todo(\"first\", true))).listFormatter());","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"fy17ohhh"},"content":"        assertEquals(\"T | 0 | first\\nT | 1 | second\\n\", new TaskList(List.of(new Todo(\"first\", false),","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"fy17ohhh"},"content":"                new Todo(\"second\", true))).listFormatter());","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"fy17ohhh"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"fy17ohhh":72}},{"path":"src/test/java/jade/data/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"package jade.data;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"fy17ohhh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"fy17ohhh"},"content":"public class TaskTest {","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"fy17ohhh"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"fy17ohhh"},"content":"    public void getStatusIcon() {","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"fy17ohhh"},"content":"        // task with done status will return \"X\"","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"fy17ohhh"},"content":"        assertEquals(\"X\", new Task(\"a\", true).getStatusIcon());","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"fy17ohhh"},"content":"        // task with undone status will return \" \"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"fy17ohhh"},"content":"        assertEquals(\" \", new Task(\"a\").getStatusIcon());","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"fy17ohhh"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"fy17ohhh"},"content":"    public void statusFormatter() {","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"fy17ohhh"},"content":"        assertEquals(\"1\", new Task(\"a\", true).statusFormatter());","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"fy17ohhh"},"content":"        assertEquals(\"0\", new Task(\"a\").statusFormatter());","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"fy17ohhh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"fy17ohhh"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"fy17ohhh"},"content":"    public void testStringConversion() {","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"fy17ohhh"},"content":"        assertEquals(\"[ ] read a book\", new Task(\"read a book\").toString());","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"fy17ohhh"},"content":"        assertEquals(\"[X] read two books\", new Task(\"read two books\", true).toString());","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"fy17ohhh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"fy17ohhh"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"fy17ohhh":27}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"fy17ohhh"},"content":"todo read a book","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"fy17ohhh"},"content":"deadline complete assignment 2 /by tomorrow","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"fy17ohhh"},"content":"event visit family /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"fy17ohhh"},"content":"todo write homework 2","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"fy17ohhh"},"content":"mark 2","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"fy17ohhh"},"content":"mark 3","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"fy17ohhh"},"content":"unmark 3","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"fy17ohhh"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"fy17ohhh"},"content":"bye","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"fy17ohhh":9}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"fy17ohhh"},"content":"javac  -cp ..\\src\\main\\java\\jade -Xlint:none -d ..\\bin ..\\src\\main\\java\\jade\\*.java","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"fy17ohhh"},"content":"java -classpath ..\\bin jade.Jade \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"fy17ohhh":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"fy17ohhh"},"content":"if ! javac -cp ../src/main/java/jade -Xlint:none -d ../bin ../src/main/java/jade/*.java","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"fy17ohhh"},"content":"java -classpath ../bin jade.Jade \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"fy17ohhh":2,"-":36}}]
