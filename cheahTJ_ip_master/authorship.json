[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"cheahTJ"},"content":"# pingmebot.PingMe project template","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"cheahTJ"},"content":"3. After that, locate the `src/main/java/pingmebot.PingMe.java` file, right-click it, and choose `Run pingmebot.PingMe.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"cheahTJ":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"cheahTJ"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"cheahTJ"},"content":"checkstyle {","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"cheahTJ"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"cheahTJ"},"content":"    checkstyleMain","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"cheahTJ"},"content":"    checkstyleTest","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"cheahTJ"},"content":"}","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"cheahTJ"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"cheahTJ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"cheahTJ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"cheahTJ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"cheahTJ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"cheahTJ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"cheahTJ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"cheahTJ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"cheahTJ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"cheahTJ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"cheahTJ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"cheahTJ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"cheahTJ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"cheahTJ"},"content":"    mainClass.set(\"pingmebot.PingMe\")","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"cheahTJ"},"content":"    archiveBaseName \u003d \"pingmebot\"","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"cheahTJ"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"cheahTJ":25,"-":39}},{"path":"src/main/java/pingmebot/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheahTJ"},"content":"package pingmebot;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"cheahTJ"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"cheahTJ"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"cheahTJ"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"cheahTJ"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"cheahTJ"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"cheahTJ"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"cheahTJ"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"cheahTJ"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"cheahTJ"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"cheahTJ"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"cheahTJ"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"cheahTJ"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"cheahTJ"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"cheahTJ"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"cheahTJ"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"cheahTJ"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"cheahTJ"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"cheahTJ"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"cheahTJ"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"cheahTJ"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"cheahTJ"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"cheahTJ"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"cheahTJ"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"cheahTJ"},"content":"    @FXML","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"cheahTJ"},"content":"    private Text content;","lastModifiedDate":"2024-02-12"},{"lineNumber":31,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"cheahTJ"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"cheahTJ"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"cheahTJ"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"cheahTJ"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"cheahTJ"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"cheahTJ"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"cheahTJ"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"cheahTJ"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"cheahTJ"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"cheahTJ"},"content":"        content.setText(text);","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"cheahTJ"},"content":"        double heightOfText \u003d content.getBoundsInLocal().getHeight();","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"cheahTJ"},"content":"        setPrefHeight(heightOfText);","lastModifiedDate":"2024-02-12"},{"lineNumber":46,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"cheahTJ"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"cheahTJ"},"content":"    private void flip() {","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"cheahTJ"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"cheahTJ"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"cheahTJ"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"cheahTJ"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"cheahTJ"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"cheahTJ"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"cheahTJ"},"content":"    public static DialogBox getPingMeBotDialog(String text, Image img) {","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"cheahTJ"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-07"},{"lineNumber":65,"author":{"gitId":"cheahTJ"},"content":"        db.flip();","lastModifiedDate":"2024-02-07"},{"lineNumber":66,"author":{"gitId":"cheahTJ"},"content":"        return db;","lastModifiedDate":"2024-02-07"},{"lineNumber":67,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":68,"author":{"gitId":"cheahTJ"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"cheahTJ":68}},{"path":"src/main/java/pingmebot/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheahTJ"},"content":"package pingmebot;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"cheahTJ"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"cheahTJ"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"cheahTJ"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"cheahTJ"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"cheahTJ"},"content":"public class Launcher {","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"cheahTJ"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"cheahTJ"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"cheahTJ"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"cheahTJ":12}},{"path":"src/main/java/pingmebot/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheahTJ"},"content":"package pingmebot;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"cheahTJ"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"cheahTJ"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"cheahTJ"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"cheahTJ"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"cheahTJ"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"cheahTJ"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"cheahTJ"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"cheahTJ"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"cheahTJ"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"cheahTJ"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"cheahTJ"},"content":"    private PingMe pingMe \u003d new PingMe();","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"cheahTJ"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"cheahTJ"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"cheahTJ"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"cheahTJ"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"cheahTJ"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"cheahTJ"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"cheahTJ"},"content":"            scene.getStylesheets().add(getClass().getResource(\"/view/styles.css\").toExternalForm());","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"cheahTJ"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"cheahTJ"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setPingMe(pingMe);","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"cheahTJ"},"content":"            stage.show();","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"cheahTJ"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"cheahTJ"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"cheahTJ"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"cheahTJ":31}},{"path":"src/main/java/pingmebot/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheahTJ"},"content":"package pingmebot;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"cheahTJ"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"cheahTJ"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"cheahTJ"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"cheahTJ"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"cheahTJ"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"cheahTJ"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"cheahTJ"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"cheahTJ"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"cheahTJ"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"cheahTJ"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"cheahTJ"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"cheahTJ"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"cheahTJ"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"cheahTJ"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"cheahTJ"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"cheahTJ"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"cheahTJ"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"cheahTJ"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"cheahTJ"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"cheahTJ"},"content":"    private PingMe pingMe;","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"cheahTJ"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/UserImage.png\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"cheahTJ"},"content":"    private Image pingMeBotImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/PingMeBotImage.png\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"cheahTJ"},"content":"     * Helps to generate a dialog box to welcome the user when the user boots the application.","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"cheahTJ"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"cheahTJ"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"cheahTJ"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"cheahTJ"},"content":"        String greetingMsg \u003d \"Hello! I\u0027m PingMeBot\\n\" + \"What can I do for you?\";","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"cheahTJ"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"cheahTJ"},"content":"                DialogBox.getPingMeBotDialog(greetingMsg, pingMeBotImage)","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"cheahTJ"},"content":"        );","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"cheahTJ"},"content":"    public void setPingMe(PingMe pm) {","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"cheahTJ"},"content":"        pingMe \u003d pm;","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"cheahTJ"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"cheahTJ"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"cheahTJ"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"cheahTJ"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"cheahTJ"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"cheahTJ"},"content":"        String response \u003d pingMe.getResponse(input);","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"cheahTJ"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"cheahTJ"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"cheahTJ"},"content":"                DialogBox.getPingMeBotDialog(response, pingMeBotImage)","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"cheahTJ"},"content":"        );","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"cheahTJ"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"cheahTJ"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"cheahTJ":58}},{"path":"src/main/java/pingmebot/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheahTJ"},"content":"package pingmebot;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"cheahTJ"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"cheahTJ"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"cheahTJ"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"cheahTJ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"cheahTJ"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"cheahTJ"},"content":"import pingmebot.command.*;","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"cheahTJ"},"content":"import pingmebot.task.Deadline;","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"cheahTJ"},"content":"import pingmebot.task.Events;","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"cheahTJ"},"content":"import pingmebot.task.ToDos;","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"cheahTJ"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"cheahTJ"},"content":" * Helps to parse and make sense of user\u0027s inputs.","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"cheahTJ"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"cheahTJ"},"content":"public class Parser {","lastModifiedDate":"2024-01-22"},{"lineNumber":22,"author":{"gitId":"cheahTJ"},"content":"    protected String userInput;","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"cheahTJ"},"content":"    protected ArrayList\u003cString\u003e words;","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"cheahTJ"},"content":"     * Creates a parser class with user\u0027s inputs.","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"cheahTJ"},"content":"     * It also helps to break down user\u0027s commands into an array for better processing afterwards.","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"cheahTJ"},"content":"     * @param userInput User\u0027s inputs.","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"cheahTJ"},"content":"    public Parser(String userInput) {","lastModifiedDate":"2024-01-22"},{"lineNumber":32,"author":{"gitId":"cheahTJ"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2024-01-22"},{"lineNumber":33,"author":{"gitId":"cheahTJ"},"content":"        this.words \u003d new ArrayList\u003c\u003e(Arrays.asList(userInput.split(\" \")));","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":36,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"cheahTJ"},"content":"     * Creates an AddCommand object with a task with specified task description.","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"cheahTJ"},"content":"     * @return A AddCommand object with a task with specified task description.","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"cheahTJ"},"content":"     * @throws PingMeException If the user did not specify any task description or","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"cheahTJ"},"content":"     *                         when the user command is not understood.","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":43,"author":{"gitId":"cheahTJ"},"content":"    public AddCommand parseToDoCommand() throws PingMeException {","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"cheahTJ"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"cheahTJ"},"content":"            if (!words.get(1).isEmpty()) {","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"cheahTJ"},"content":"                StringBuilder description \u003d new StringBuilder(words.get(1));","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"cheahTJ"},"content":"                for (int i \u003d 2; i \u003c words.size(); i++) {","lastModifiedDate":"2024-01-22"},{"lineNumber":48,"author":{"gitId":"cheahTJ"},"content":"                    description.append(\" \").append(words.get(i));","lastModifiedDate":"2024-02-19"},{"lineNumber":49,"author":{"gitId":"cheahTJ"},"content":"                }","lastModifiedDate":"2024-01-22"},{"lineNumber":50,"author":{"gitId":"cheahTJ"},"content":"                return new AddCommand(new ToDos(description.toString()));","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"cheahTJ"},"content":"            } else {","lastModifiedDate":"2024-01-23"},{"lineNumber":53,"author":{"gitId":"cheahTJ"},"content":"                throw new IndexOutOfBoundsException();","lastModifiedDate":"2024-01-23"},{"lineNumber":54,"author":{"gitId":"cheahTJ"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":55,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"cheahTJ"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"cheahTJ"},"content":"            throw new PingMeException(\"OOPS! The command is incomplete. Please provide a task description!\");","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":60,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":61,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":62,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"cheahTJ"},"content":"     * Creates an AddCommand object a Deadline object with  specified task description and a datetime to do the task by.","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"cheahTJ"},"content":"     * @return An AddCommand object with a specified Deadline object.","lastModifiedDate":"2024-02-07"},{"lineNumber":66,"author":{"gitId":"cheahTJ"},"content":"     * @throws PingMeException If the user did not specify any task description or datetime to finish the task,","lastModifiedDate":"2024-02-12"},{"lineNumber":67,"author":{"gitId":"cheahTJ"},"content":"     *                         or when the user command is not understood.","lastModifiedDate":"2024-02-12"},{"lineNumber":68,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":69,"author":{"gitId":"cheahTJ"},"content":"    public AddCommand parseDeadlineCommand() throws PingMeException {","lastModifiedDate":"2024-02-07"},{"lineNumber":70,"author":{"gitId":"cheahTJ"},"content":"        StringBuilder description \u003d new StringBuilder();","lastModifiedDate":"2024-01-23"},{"lineNumber":71,"author":{"gitId":"cheahTJ"},"content":"        StringBuilder by \u003d new StringBuilder();","lastModifiedDate":"2024-01-22"},{"lineNumber":72,"author":{"gitId":"cheahTJ"},"content":"        int index \u003d words.indexOf(\"/by\");","lastModifiedDate":"2024-02-19"},{"lineNumber":73,"author":{"gitId":"cheahTJ"},"content":"        if (index !\u003d -1) {","lastModifiedDate":"2024-01-23"},{"lineNumber":74,"author":{"gitId":"cheahTJ"},"content":"            if (index !\u003d 1) {","lastModifiedDate":"2024-01-23"},{"lineNumber":75,"author":{"gitId":"cheahTJ"},"content":"                description \u003d new StringBuilder(words.get(1)); // if the user forgets to include description field","lastModifiedDate":"2024-02-19"},{"lineNumber":76,"author":{"gitId":"cheahTJ"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":77,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"cheahTJ"},"content":"        } else {","lastModifiedDate":"2024-01-23"},{"lineNumber":79,"author":{"gitId":"cheahTJ"},"content":"            throw new PingMeException(\"I don\u0027t understand your command. \"","lastModifiedDate":"2024-02-12"},{"lineNumber":80,"author":{"gitId":"cheahTJ"},"content":"                    + \"Try writing: deadline (task description) /by (d/m/yyyy HHmm format)\");","lastModifiedDate":"2024-02-12"},{"lineNumber":81,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":82,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":83,"author":{"gitId":"cheahTJ"},"content":"        for (int i \u003d 2; i \u003c words.size(); i++) {","lastModifiedDate":"2024-01-22"},{"lineNumber":84,"author":{"gitId":"cheahTJ"},"content":"            if (i \u003c index) {","lastModifiedDate":"2024-01-22"},{"lineNumber":85,"author":{"gitId":"cheahTJ"},"content":"                description.append(\" \").append(words.get(i));","lastModifiedDate":"2024-01-22"},{"lineNumber":86,"author":{"gitId":"cheahTJ"},"content":"            } else if (i \u003e index) {","lastModifiedDate":"2024-01-22"},{"lineNumber":87,"author":{"gitId":"cheahTJ"},"content":"                by.append(\" \").append(words.get(i));","lastModifiedDate":"2024-01-22"},{"lineNumber":88,"author":{"gitId":"cheahTJ"},"content":"            }","lastModifiedDate":"2024-01-22"},{"lineNumber":89,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":90,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":91,"author":{"gitId":"cheahTJ"},"content":"        if (!(by.toString().isEmpty() || description.toString().isEmpty())) {","lastModifiedDate":"2024-01-23"},{"lineNumber":92,"author":{"gitId":"cheahTJ"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2024-01-28"},{"lineNumber":93,"author":{"gitId":"cheahTJ"},"content":"            LocalDateTime parsedDateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":94,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":95,"author":{"gitId":"cheahTJ"},"content":"            try {","lastModifiedDate":"2024-01-28"},{"lineNumber":96,"author":{"gitId":"cheahTJ"},"content":"                parsedDateTime \u003d LocalDateTime.parse(by.toString().trim(), formatter);","lastModifiedDate":"2024-01-28"},{"lineNumber":97,"author":{"gitId":"cheahTJ"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":98,"author":{"gitId":"cheahTJ"},"content":"                throw new PingMeException(\"I don\u0027t understand your command. \"","lastModifiedDate":"2024-02-12"},{"lineNumber":99,"author":{"gitId":"cheahTJ"},"content":"                        + \"Try writing: deadline (task description) /by (d/m/yyyy HHmm format)\");","lastModifiedDate":"2024-02-12"},{"lineNumber":100,"author":{"gitId":"cheahTJ"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":101,"author":{"gitId":"cheahTJ"},"content":"            return new AddCommand(new Deadline(description.toString(), parsedDateTime));","lastModifiedDate":"2024-02-07"},{"lineNumber":102,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":103,"author":{"gitId":"cheahTJ"},"content":"        } else {","lastModifiedDate":"2024-01-23"},{"lineNumber":104,"author":{"gitId":"cheahTJ"},"content":"            throw new PingMeException(\"You have missing fields! \"","lastModifiedDate":"2024-02-12"},{"lineNumber":105,"author":{"gitId":"cheahTJ"},"content":"                    + \"You need a task description \u0026 a deadline to finish your task, try again!\");","lastModifiedDate":"2024-02-12"},{"lineNumber":106,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":107,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":108,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":109,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":110,"author":{"gitId":"cheahTJ"},"content":"     * Creates an AddCommand object with an Events with a task description, start and end date or time of the event.","lastModifiedDate":"2024-02-07"},{"lineNumber":111,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":112,"author":{"gitId":"cheahTJ"},"content":"     * @return An AddCommand object with a specified Events object.","lastModifiedDate":"2024-02-07"},{"lineNumber":113,"author":{"gitId":"cheahTJ"},"content":"     * @throws PingMeException If the user did not specify any task description,","lastModifiedDate":"2024-02-12"},{"lineNumber":114,"author":{"gitId":"cheahTJ"},"content":"     *                         start and end date or time of the event or when the user command is not understood.","lastModifiedDate":"2024-02-12"},{"lineNumber":115,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":116,"author":{"gitId":"cheahTJ"},"content":"    public AddCommand parseEventsCommand() throws PingMeException {","lastModifiedDate":"2024-02-07"},{"lineNumber":117,"author":{"gitId":"cheahTJ"},"content":"        StringBuilder description \u003d new StringBuilder();","lastModifiedDate":"2024-01-23"},{"lineNumber":118,"author":{"gitId":"cheahTJ"},"content":"        StringBuilder start \u003d new StringBuilder();","lastModifiedDate":"2024-01-22"},{"lineNumber":119,"author":{"gitId":"cheahTJ"},"content":"        StringBuilder end \u003d new StringBuilder();","lastModifiedDate":"2024-01-22"},{"lineNumber":120,"author":{"gitId":"cheahTJ"},"content":"        int indexOfFrom \u003d words.indexOf(\"/from\");","lastModifiedDate":"2024-02-19"},{"lineNumber":121,"author":{"gitId":"cheahTJ"},"content":"        int indexOfTo \u003d words.indexOf(\"/to\");","lastModifiedDate":"2024-02-19"},{"lineNumber":122,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":123,"author":{"gitId":"cheahTJ"},"content":"        if (indexOfFrom \u003d\u003d -1 || indexOfTo \u003d\u003d -1) {","lastModifiedDate":"2024-01-23"},{"lineNumber":124,"author":{"gitId":"cheahTJ"},"content":"            throw new PingMeException(\"I don\u0027t understand your command. \"","lastModifiedDate":"2024-02-12"},{"lineNumber":125,"author":{"gitId":"cheahTJ"},"content":"                    + \"Try writing: event (task description) /from (date/time) /to (date/time)\");","lastModifiedDate":"2024-02-12"},{"lineNumber":126,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":127,"author":{"gitId":"cheahTJ"},"content":"        } else {","lastModifiedDate":"2024-01-23"},{"lineNumber":128,"author":{"gitId":"cheahTJ"},"content":"            if (indexOfFrom \u003d\u003d 1 || indexOfTo \u003d\u003d 1) { } else {","lastModifiedDate":"2024-01-23"},{"lineNumber":129,"author":{"gitId":"cheahTJ"},"content":"                description \u003d new StringBuilder(words.get(1));","lastModifiedDate":"2024-02-19"},{"lineNumber":130,"author":{"gitId":"cheahTJ"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":131,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":132,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":133,"author":{"gitId":"cheahTJ"},"content":"        for (int i \u003d 2; i \u003c words.size(); i++) {","lastModifiedDate":"2024-01-22"},{"lineNumber":134,"author":{"gitId":"cheahTJ"},"content":"            if (i \u003c indexOfFrom) {","lastModifiedDate":"2024-01-22"},{"lineNumber":135,"author":{"gitId":"cheahTJ"},"content":"                description.append(\" \").append(words.get(i));","lastModifiedDate":"2024-01-22"},{"lineNumber":136,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":137,"author":{"gitId":"cheahTJ"},"content":"            } else if (i \u003e indexOfFrom \u0026\u0026 i \u003c indexOfTo) {","lastModifiedDate":"2024-01-22"},{"lineNumber":138,"author":{"gitId":"cheahTJ"},"content":"                start.append(\" \").append(words.get(i));","lastModifiedDate":"2024-01-22"},{"lineNumber":139,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":140,"author":{"gitId":"cheahTJ"},"content":"            } else if (i \u003e indexOfTo) {","lastModifiedDate":"2024-01-22"},{"lineNumber":141,"author":{"gitId":"cheahTJ"},"content":"                end.append(\" \").append(words.get(i));","lastModifiedDate":"2024-01-22"},{"lineNumber":142,"author":{"gitId":"cheahTJ"},"content":"            }","lastModifiedDate":"2024-01-22"},{"lineNumber":143,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":144,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":145,"author":{"gitId":"cheahTJ"},"content":"        if (description.toString().isEmpty() || start.toString().isEmpty()","lastModifiedDate":"2024-02-12"},{"lineNumber":146,"author":{"gitId":"cheahTJ"},"content":"                || end.toString().isEmpty()) {","lastModifiedDate":"2024-02-12"},{"lineNumber":147,"author":{"gitId":"cheahTJ"},"content":"            throw new PingMeException(\"You having missing fields! \"","lastModifiedDate":"2024-02-12"},{"lineNumber":148,"author":{"gitId":"cheahTJ"},"content":"                    + \"You need a task description, start and end date/time for your task, try again!\");","lastModifiedDate":"2024-02-12"},{"lineNumber":149,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":150,"author":{"gitId":"cheahTJ"},"content":"        } else {","lastModifiedDate":"2024-01-23"},{"lineNumber":151,"author":{"gitId":"cheahTJ"},"content":"            return new AddCommand(new Events(description.toString(), start.toString(), end.toString()));","lastModifiedDate":"2024-02-07"},{"lineNumber":152,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":153,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":154,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":155,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":156,"author":{"gitId":"cheahTJ"},"content":"     * Returns a MarkCommand object with the 0-based index of the task to be marked.","lastModifiedDate":"2024-02-07"},{"lineNumber":157,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":158,"author":{"gitId":"cheahTJ"},"content":"     * @param currentNumOfTask The total number of task currently in the tasklist.","lastModifiedDate":"2024-02-01"},{"lineNumber":159,"author":{"gitId":"cheahTJ"},"content":"     * @return A MarkCommand object with the 0-based index of the task to be marked.","lastModifiedDate":"2024-02-07"},{"lineNumber":160,"author":{"gitId":"cheahTJ"},"content":"     * @throws PingMeException If the index of the task in the tasklist is not specified or when it is higher or","lastModifiedDate":"2024-02-07"},{"lineNumber":161,"author":{"gitId":"cheahTJ"},"content":"     *                         lower than the actual total number of tasks currently.","lastModifiedDate":"2024-02-07"},{"lineNumber":162,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":163,"author":{"gitId":"cheahTJ"},"content":"    public MarkCommand parseMarkCommand(int currentNumOfTask) throws PingMeException {","lastModifiedDate":"2024-02-07"},{"lineNumber":164,"author":{"gitId":"cheahTJ"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":165,"author":{"gitId":"cheahTJ"},"content":"            if (!words.get(1).isEmpty()) {","lastModifiedDate":"2024-02-19"},{"lineNumber":166,"author":{"gitId":"cheahTJ"},"content":"                if (Integer.parseInt(words.get(1)) \u003e currentNumOfTask","lastModifiedDate":"2024-02-19"},{"lineNumber":167,"author":{"gitId":"cheahTJ"},"content":"                        || Integer.parseInt(words.get(1)) \u003c\u003d 0) {","lastModifiedDate":"2024-02-19"},{"lineNumber":168,"author":{"gitId":"cheahTJ"},"content":"                    throw new PingMeException(\"You have currently \" + currentNumOfTask + \" tasks. \"","lastModifiedDate":"2024-02-12"},{"lineNumber":169,"author":{"gitId":"cheahTJ"},"content":"                            + \"You cannot mark task larger or smaller than this!\");","lastModifiedDate":"2024-02-12"},{"lineNumber":170,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":171,"author":{"gitId":"cheahTJ"},"content":"                } else {","lastModifiedDate":"2024-01-23"},{"lineNumber":172,"author":{"gitId":"cheahTJ"},"content":"                    return new MarkCommand(Integer.parseInt(words.get(1)) - 1);","lastModifiedDate":"2024-02-19"},{"lineNumber":173,"author":{"gitId":"cheahTJ"},"content":"                }","lastModifiedDate":"2024-01-22"},{"lineNumber":174,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":175,"author":{"gitId":"cheahTJ"},"content":"            } else {","lastModifiedDate":"2024-01-23"},{"lineNumber":176,"author":{"gitId":"cheahTJ"},"content":"                throw new IndexOutOfBoundsException();","lastModifiedDate":"2024-01-23"},{"lineNumber":177,"author":{"gitId":"cheahTJ"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":178,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":179,"author":{"gitId":"cheahTJ"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":180,"author":{"gitId":"cheahTJ"},"content":"            throw new PingMeException(\"I\u0027m not sure which task you wish to mark. \"","lastModifiedDate":"2024-02-12"},{"lineNumber":181,"author":{"gitId":"cheahTJ"},"content":"                    + \"Please specify the task you wish to mark and try again!\");","lastModifiedDate":"2024-02-12"},{"lineNumber":182,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":183,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":184,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":185,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":186,"author":{"gitId":"cheahTJ"},"content":"     * Returns a UnmarkCommand object with the 0-based index of the task to be un-marked.","lastModifiedDate":"2024-02-07"},{"lineNumber":187,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":188,"author":{"gitId":"cheahTJ"},"content":"     * @param currentNumOfTask The total number of task currently in the tasklist.","lastModifiedDate":"2024-02-01"},{"lineNumber":189,"author":{"gitId":"cheahTJ"},"content":"     * @return A UnmarkCommand object with the 0-based index of the task to be un-marked.","lastModifiedDate":"2024-02-07"},{"lineNumber":190,"author":{"gitId":"cheahTJ"},"content":"     * @throws PingMeException If the index of the task in the tasklist is not specified or when it is higher or","lastModifiedDate":"2024-02-07"},{"lineNumber":191,"author":{"gitId":"cheahTJ"},"content":"     *                         lower than the actual total number of tasks currently.","lastModifiedDate":"2024-02-07"},{"lineNumber":192,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":193,"author":{"gitId":"cheahTJ"},"content":"    public UnmarkCommand parseUnmarkCommand(int currentNumOfTask) throws PingMeException {","lastModifiedDate":"2024-02-07"},{"lineNumber":194,"author":{"gitId":"cheahTJ"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":195,"author":{"gitId":"cheahTJ"},"content":"            if (!words.get(1).isEmpty()) {","lastModifiedDate":"2024-02-19"},{"lineNumber":196,"author":{"gitId":"cheahTJ"},"content":"                if (Integer.parseInt(words.get(1)) \u003e currentNumOfTask","lastModifiedDate":"2024-02-19"},{"lineNumber":197,"author":{"gitId":"cheahTJ"},"content":"                        || Integer.parseInt(words.get(1)) \u003c\u003d 0) {","lastModifiedDate":"2024-02-19"},{"lineNumber":198,"author":{"gitId":"cheahTJ"},"content":"                    throw new PingMeException(\"You have currently \" + currentNumOfTask + \" tasks. \"","lastModifiedDate":"2024-02-12"},{"lineNumber":199,"author":{"gitId":"cheahTJ"},"content":"                            + \"You cannot un-mark task larger or smaller than this!\");","lastModifiedDate":"2024-02-12"},{"lineNumber":200,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":201,"author":{"gitId":"cheahTJ"},"content":"                } else {","lastModifiedDate":"2024-01-23"},{"lineNumber":202,"author":{"gitId":"cheahTJ"},"content":"                    return new UnmarkCommand(Integer.parseInt(words.get(1)) - 1);","lastModifiedDate":"2024-02-19"},{"lineNumber":203,"author":{"gitId":"cheahTJ"},"content":"                }","lastModifiedDate":"2024-01-22"},{"lineNumber":204,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":205,"author":{"gitId":"cheahTJ"},"content":"            } else {","lastModifiedDate":"2024-01-23"},{"lineNumber":206,"author":{"gitId":"cheahTJ"},"content":"                throw new IndexOutOfBoundsException();","lastModifiedDate":"2024-01-23"},{"lineNumber":207,"author":{"gitId":"cheahTJ"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":208,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":209,"author":{"gitId":"cheahTJ"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":210,"author":{"gitId":"cheahTJ"},"content":"            throw new PingMeException(\"I\u0027m not sure which task you wish to un-mark. \"","lastModifiedDate":"2024-02-12"},{"lineNumber":211,"author":{"gitId":"cheahTJ"},"content":"                    + \"Please specify the task you wish to un-mark and try again!\");","lastModifiedDate":"2024-02-12"},{"lineNumber":212,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":213,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":214,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":215,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":216,"author":{"gitId":"cheahTJ"},"content":"     * Returns a DeleteCommand with a 0-based index of the task to be deleted.","lastModifiedDate":"2024-02-07"},{"lineNumber":217,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":218,"author":{"gitId":"cheahTJ"},"content":"     * @param currentNumOfTask The total number of task currently in the tasklist.","lastModifiedDate":"2024-02-01"},{"lineNumber":219,"author":{"gitId":"cheahTJ"},"content":"     * @return A DeleteCommand object with a 0-based index of the task to be marked.","lastModifiedDate":"2024-02-07"},{"lineNumber":220,"author":{"gitId":"cheahTJ"},"content":"     * @throws PingMeException If the index of the task in the tasklist is not specified or when it is higher or","lastModifiedDate":"2024-02-07"},{"lineNumber":221,"author":{"gitId":"cheahTJ"},"content":"     *                         lower than the actual total number of tasks currently.","lastModifiedDate":"2024-02-07"},{"lineNumber":222,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":223,"author":{"gitId":"cheahTJ"},"content":"    public DeleteCommand parseDeleteCommand(int currentNumOfTask) throws PingMeException {","lastModifiedDate":"2024-02-07"},{"lineNumber":224,"author":{"gitId":"cheahTJ"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":225,"author":{"gitId":"cheahTJ"},"content":"            if (!words.get(1).isEmpty()) {","lastModifiedDate":"2024-02-19"},{"lineNumber":226,"author":{"gitId":"cheahTJ"},"content":"                if (Integer.parseInt(words.get(1)) \u003e currentNumOfTask","lastModifiedDate":"2024-02-19"},{"lineNumber":227,"author":{"gitId":"cheahTJ"},"content":"                        || Integer.parseInt(words.get(1)) \u003c\u003d 0) {","lastModifiedDate":"2024-02-19"},{"lineNumber":228,"author":{"gitId":"cheahTJ"},"content":"                    throw new PingMeException(\"You have currently \" + currentNumOfTask + \" tasks. \"","lastModifiedDate":"2024-02-12"},{"lineNumber":229,"author":{"gitId":"cheahTJ"},"content":"                            + \"You cannot delete task larger or smaller than this!\");","lastModifiedDate":"2024-02-12"},{"lineNumber":230,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":231,"author":{"gitId":"cheahTJ"},"content":"                } else {","lastModifiedDate":"2024-01-23"},{"lineNumber":232,"author":{"gitId":"cheahTJ"},"content":"                    return new DeleteCommand(Integer.parseInt(words.get(1)) - 1);","lastModifiedDate":"2024-02-19"},{"lineNumber":233,"author":{"gitId":"cheahTJ"},"content":"                }","lastModifiedDate":"2024-01-23"},{"lineNumber":234,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":235,"author":{"gitId":"cheahTJ"},"content":"            } else {","lastModifiedDate":"2024-01-23"},{"lineNumber":236,"author":{"gitId":"cheahTJ"},"content":"                throw new IndexOutOfBoundsException();","lastModifiedDate":"2024-01-23"},{"lineNumber":237,"author":{"gitId":"cheahTJ"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":238,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":239,"author":{"gitId":"cheahTJ"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":240,"author":{"gitId":"cheahTJ"},"content":"            throw new PingMeException(\"I\u0027m not sure which task you wish to delete. Please specify the task \"","lastModifiedDate":"2024-02-12"},{"lineNumber":241,"author":{"gitId":"cheahTJ"},"content":"                    + \"you want to delete and try again!\");","lastModifiedDate":"2024-02-12"},{"lineNumber":242,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":243,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":244,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":245,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":246,"author":{"gitId":"cheahTJ"},"content":"     * Returns the FindCommand object with the keyword of what the user is trying to find in his/her tasklist.","lastModifiedDate":"2024-02-07"},{"lineNumber":247,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":248,"author":{"gitId":"cheahTJ"},"content":"     * @return FindCommand object with the keyword specified by the user.","lastModifiedDate":"2024-02-07"},{"lineNumber":249,"author":{"gitId":"cheahTJ"},"content":"     * @throws PingMeException If the user forgets to input keyword to find.","lastModifiedDate":"2024-02-02"},{"lineNumber":250,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":251,"author":{"gitId":"cheahTJ"},"content":"    public FindCommand parseFindCommand() throws PingMeException {","lastModifiedDate":"2024-02-07"},{"lineNumber":252,"author":{"gitId":"cheahTJ"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":253,"author":{"gitId":"cheahTJ"},"content":"            if (!words.get(1).isEmpty()) {","lastModifiedDate":"2024-02-19"},{"lineNumber":254,"author":{"gitId":"cheahTJ"},"content":"                return new FindCommand(words.get(1));","lastModifiedDate":"2024-02-19"},{"lineNumber":255,"author":{"gitId":"cheahTJ"},"content":"            } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":256,"author":{"gitId":"cheahTJ"},"content":"                throw new IndexOutOfBoundsException();","lastModifiedDate":"2024-02-02"},{"lineNumber":257,"author":{"gitId":"cheahTJ"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":258,"author":{"gitId":"cheahTJ"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":259,"author":{"gitId":"cheahTJ"},"content":"            throw new PingMeException(\"I\u0027m not sure what you are trying to find. \"","lastModifiedDate":"2024-02-12"},{"lineNumber":260,"author":{"gitId":"cheahTJ"},"content":"                    + \"Please specify a keyword and try again!\");","lastModifiedDate":"2024-02-12"},{"lineNumber":261,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":262,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":263,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":264,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":265,"author":{"gitId":"cheahTJ"},"content":"     * Returns the PostponeCommand object with the task which the user is trying to postpone.","lastModifiedDate":"2024-02-19"},{"lineNumber":266,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":267,"author":{"gitId":"cheahTJ"},"content":"     * @return PostponeCommand object with the task number in the task list which the","lastModifiedDate":"2024-02-19"},{"lineNumber":268,"author":{"gitId":"cheahTJ"},"content":"     *         user is trying to postpone, the new start and end timing for an events task,","lastModifiedDate":"2024-02-19"},{"lineNumber":269,"author":{"gitId":"cheahTJ"},"content":"     *         and a finsih by timing for the deadline task.","lastModifiedDate":"2024-02-19"},{"lineNumber":270,"author":{"gitId":"cheahTJ"},"content":"     * @throws PingMeException If the user never includes the task to postpone, or a new start or end time.","lastModifiedDate":"2024-02-19"},{"lineNumber":271,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":272,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":273,"author":{"gitId":"cheahTJ"},"content":"    public PostponeCommand parsePostponeCommand() throws PingMeException {","lastModifiedDate":"2024-02-19"},{"lineNumber":274,"author":{"gitId":"cheahTJ"},"content":"        try {","lastModifiedDate":"2024-02-19"},{"lineNumber":275,"author":{"gitId":"cheahTJ"},"content":"            if (words.get(1).isEmpty()) {","lastModifiedDate":"2024-02-19"},{"lineNumber":276,"author":{"gitId":"cheahTJ"},"content":"                throw new IndexOutOfBoundsException();","lastModifiedDate":"2024-02-19"},{"lineNumber":277,"author":{"gitId":"cheahTJ"},"content":"            }","lastModifiedDate":"2024-02-19"},{"lineNumber":278,"author":{"gitId":"cheahTJ"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":279,"author":{"gitId":"cheahTJ"},"content":"            throw new PingMeException(\"You have to select a task\" +","lastModifiedDate":"2024-02-19"},{"lineNumber":280,"author":{"gitId":"cheahTJ"},"content":"                    \" to postpone! You cannot select a todo task though :)\");","lastModifiedDate":"2024-02-19"},{"lineNumber":281,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":282,"author":{"gitId":"cheahTJ"},"content":"        int taskToPostpone \u003d Integer.parseInt(words.get(1));","lastModifiedDate":"2024-02-19"},{"lineNumber":283,"author":{"gitId":"cheahTJ"},"content":"        int indexOfBy \u003d words.indexOf(\"/by\");","lastModifiedDate":"2024-02-19"},{"lineNumber":284,"author":{"gitId":"cheahTJ"},"content":"        int indexOfFrom \u003d words.indexOf(\"/from\");","lastModifiedDate":"2024-02-19"},{"lineNumber":285,"author":{"gitId":"cheahTJ"},"content":"        int indexOfTo \u003d words.indexOf(\"/to\");","lastModifiedDate":"2024-02-19"},{"lineNumber":286,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":287,"author":{"gitId":"cheahTJ"},"content":"        if (indexOfFrom !\u003d -1) {","lastModifiedDate":"2024-02-19"},{"lineNumber":288,"author":{"gitId":"cheahTJ"},"content":"            if (indexOfTo \u003d\u003d -1) {","lastModifiedDate":"2024-02-19"},{"lineNumber":289,"author":{"gitId":"cheahTJ"},"content":"                throw new PingMeException(\"Make sure to include \" +","lastModifiedDate":"2024-02-19"},{"lineNumber":290,"author":{"gitId":"cheahTJ"},"content":"                        \"/from ___ /to ___ for events object\");","lastModifiedDate":"2024-02-19"},{"lineNumber":291,"author":{"gitId":"cheahTJ"},"content":"            }","lastModifiedDate":"2024-02-19"},{"lineNumber":292,"author":{"gitId":"cheahTJ"},"content":"        } else if (indexOfBy \u003d\u003d -1) {","lastModifiedDate":"2024-02-19"},{"lineNumber":293,"author":{"gitId":"cheahTJ"},"content":"            throw new PingMeException(\"Make sure to include /by ___ for deadline object\" +","lastModifiedDate":"2024-02-19"},{"lineNumber":294,"author":{"gitId":"cheahTJ"},"content":"                    \"and /from ___ /to ___ for events object\");","lastModifiedDate":"2024-02-19"},{"lineNumber":295,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":296,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":297,"author":{"gitId":"cheahTJ"},"content":"        StringBuilder from \u003d new StringBuilder();","lastModifiedDate":"2024-02-19"},{"lineNumber":298,"author":{"gitId":"cheahTJ"},"content":"        StringBuilder to \u003d new StringBuilder();","lastModifiedDate":"2024-02-19"},{"lineNumber":299,"author":{"gitId":"cheahTJ"},"content":"        StringBuilder by \u003d new StringBuilder();","lastModifiedDate":"2024-02-19"},{"lineNumber":300,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":301,"author":{"gitId":"cheahTJ"},"content":"        if (words.size() \u003c 6) {","lastModifiedDate":"2024-02-19"},{"lineNumber":302,"author":{"gitId":"cheahTJ"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2024-02-19"},{"lineNumber":303,"author":{"gitId":"cheahTJ"},"content":"            for (int i \u003d 2; i \u003c words.size(); i++) {","lastModifiedDate":"2024-02-19"},{"lineNumber":304,"author":{"gitId":"cheahTJ"},"content":"                if (i \u003e indexOfBy) {","lastModifiedDate":"2024-02-19"},{"lineNumber":305,"author":{"gitId":"cheahTJ"},"content":"                    by.append(\" \").append(words.get(i));","lastModifiedDate":"2024-02-19"},{"lineNumber":306,"author":{"gitId":"cheahTJ"},"content":"                }","lastModifiedDate":"2024-02-19"},{"lineNumber":307,"author":{"gitId":"cheahTJ"},"content":"            }","lastModifiedDate":"2024-02-19"},{"lineNumber":308,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":309,"author":{"gitId":"cheahTJ"},"content":"            return new PostponeCommand(taskToPostpone - 1, \" \", \" \",","lastModifiedDate":"2024-02-19"},{"lineNumber":310,"author":{"gitId":"cheahTJ"},"content":"                    LocalDateTime.parse(by.toString().trim(), formatter));","lastModifiedDate":"2024-02-19"},{"lineNumber":311,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":312,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":313,"author":{"gitId":"cheahTJ"},"content":"        if (words.size() \u003e 5) {","lastModifiedDate":"2024-02-19"},{"lineNumber":314,"author":{"gitId":"cheahTJ"},"content":"            System.out.println(\"im here\");","lastModifiedDate":"2024-02-19"},{"lineNumber":315,"author":{"gitId":"cheahTJ"},"content":"            for (int i \u003d 2; i \u003c words.size(); i++) {","lastModifiedDate":"2024-02-19"},{"lineNumber":316,"author":{"gitId":"cheahTJ"},"content":"                if (i \u003e indexOfFrom \u0026\u0026 i \u003c indexOfTo) {","lastModifiedDate":"2024-02-19"},{"lineNumber":317,"author":{"gitId":"cheahTJ"},"content":"                    from.append(words.get(i));","lastModifiedDate":"2024-02-19"},{"lineNumber":318,"author":{"gitId":"cheahTJ"},"content":"                } else if (i \u003e indexOfTo) {","lastModifiedDate":"2024-02-19"},{"lineNumber":319,"author":{"gitId":"cheahTJ"},"content":"                    to.append(words.get(i));","lastModifiedDate":"2024-02-19"},{"lineNumber":320,"author":{"gitId":"cheahTJ"},"content":"                }","lastModifiedDate":"2024-02-19"},{"lineNumber":321,"author":{"gitId":"cheahTJ"},"content":"            }","lastModifiedDate":"2024-02-19"},{"lineNumber":322,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":323,"author":{"gitId":"cheahTJ"},"content":"            return new PostponeCommand(taskToPostpone - 1, from.toString(), to.toString(), null);","lastModifiedDate":"2024-02-19"},{"lineNumber":324,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":325,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":326,"author":{"gitId":"cheahTJ"},"content":"        throw new PingMeException(\"Try again with your command!\");","lastModifiedDate":"2024-02-19"},{"lineNumber":327,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":328,"author":{"gitId":"cheahTJ"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"cheahTJ":328}},{"path":"src/main/java/pingmebot/PingMe.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheahTJ"},"content":"package pingmebot;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"cheahTJ"},"content":"import pingmebot.command.Command;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"cheahTJ"},"content":"import pingmebot.command.ExitCommand;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"cheahTJ"},"content":"import pingmebot.command.ListCommand;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"cheahTJ"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"cheahTJ"},"content":" * A simple, interactive task management application.","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"cheahTJ"},"content":" * It allows user to interact with it via command line interface.","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"cheahTJ"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"cheahTJ"},"content":"public class PingMe {","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"cheahTJ"},"content":"    protected static String filePath \u003d \"./data/dukeData.txt\";","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"cheahTJ"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"cheahTJ"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"cheahTJ"},"content":"    private UI ui;","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"cheahTJ"},"content":"    private Parser parser;","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"cheahTJ"},"content":"     * Creates a PingMe object with a specified file path.","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"cheahTJ"},"content":"     * @param filePath The filePath to the storage of data locally.","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"cheahTJ"},"content":"    public PingMe(String filePath) {","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"cheahTJ"},"content":"        ui \u003d new UI();","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"cheahTJ"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"cheahTJ"},"content":"            storage \u003d new Storage(filePath);","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"cheahTJ"},"content":"            tasks \u003d new TaskList(storage.bootingUp());","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"cheahTJ"},"content":"        } catch (PingMeException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"cheahTJ"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"cheahTJ"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":34,"author":{"gitId":"cheahTJ"},"content":"    public PingMe() {","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"cheahTJ"},"content":"        this(filePath);","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"cheahTJ"},"content":"     * Helps to start the main logic of the application.","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"cheahTJ"},"content":"    public void run() {","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"cheahTJ"},"content":"        ui.showWelcome();","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"cheahTJ"},"content":"        while (true) {","lastModifiedDate":"2024-01-21"},{"lineNumber":44,"author":{"gitId":"cheahTJ"},"content":"            String userInput \u003d ui.readCommand();","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"cheahTJ"},"content":"            String response \u003d getResponse(userInput);","lastModifiedDate":"2024-02-12"},{"lineNumber":46,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":50,"author":{"gitId":"cheahTJ"},"content":"     * Returns the response back to the user after keying in a certain command through the GUI.","lastModifiedDate":"2024-02-12"},{"lineNumber":51,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":52,"author":{"gitId":"cheahTJ"},"content":"     * @param input User\u0027s commmand.","lastModifiedDate":"2024-02-12"},{"lineNumber":53,"author":{"gitId":"cheahTJ"},"content":"     * @return The response to the user.","lastModifiedDate":"2024-02-12"},{"lineNumber":54,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":55,"author":{"gitId":"cheahTJ"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"cheahTJ"},"content":"        String[] splitInput \u003d input.split(\" \");","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"cheahTJ"},"content":"        parser \u003d new Parser(input);","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"cheahTJ"},"content":"        String response \u003d \"\";","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"cheahTJ"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"cheahTJ"},"content":"            try {","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"cheahTJ"},"content":"                Command c \u003d new ExitCommand();","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"cheahTJ"},"content":"                c.execute(tasks, storage, ui);","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"cheahTJ"},"content":"                response +\u003d ui.givesBackResponse();","lastModifiedDate":"2024-02-07"},{"lineNumber":65,"author":{"gitId":"cheahTJ"},"content":"            } catch (PingMeException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":66,"author":{"gitId":"cheahTJ"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2024-02-07"},{"lineNumber":67,"author":{"gitId":"cheahTJ"},"content":"                response +\u003d ui.givesBackResponse();","lastModifiedDate":"2024-02-07"},{"lineNumber":68,"author":{"gitId":"cheahTJ"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":69,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":70,"author":{"gitId":"cheahTJ"},"content":"        } else if (input.equals(\"list\")) {","lastModifiedDate":"2024-02-07"},{"lineNumber":71,"author":{"gitId":"cheahTJ"},"content":"            try {","lastModifiedDate":"2024-02-07"},{"lineNumber":72,"author":{"gitId":"cheahTJ"},"content":"                Command c \u003d new ListCommand();","lastModifiedDate":"2024-02-07"},{"lineNumber":73,"author":{"gitId":"cheahTJ"},"content":"                c.execute(tasks, storage, ui);","lastModifiedDate":"2024-02-07"},{"lineNumber":74,"author":{"gitId":"cheahTJ"},"content":"                response +\u003d ui.givesBackResponse();","lastModifiedDate":"2024-02-07"},{"lineNumber":75,"author":{"gitId":"cheahTJ"},"content":"            } catch (PingMeException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":76,"author":{"gitId":"cheahTJ"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2024-02-07"},{"lineNumber":77,"author":{"gitId":"cheahTJ"},"content":"                response +\u003d ui.givesBackResponse();","lastModifiedDate":"2024-02-07"},{"lineNumber":78,"author":{"gitId":"cheahTJ"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":79,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":80,"author":{"gitId":"cheahTJ"},"content":"        } else if (splitInput[0].equals(\"mark\")) {","lastModifiedDate":"2024-02-07"},{"lineNumber":81,"author":{"gitId":"cheahTJ"},"content":"            try {","lastModifiedDate":"2024-02-07"},{"lineNumber":82,"author":{"gitId":"cheahTJ"},"content":"                Command c \u003d parser.parseMarkCommand(tasks.getTaskSize());","lastModifiedDate":"2024-02-07"},{"lineNumber":83,"author":{"gitId":"cheahTJ"},"content":"                c.execute(tasks, storage, ui);","lastModifiedDate":"2024-02-07"},{"lineNumber":84,"author":{"gitId":"cheahTJ"},"content":"                response +\u003d ui.givesBackResponse();","lastModifiedDate":"2024-02-07"},{"lineNumber":85,"author":{"gitId":"cheahTJ"},"content":"            } catch (PingMeException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":86,"author":{"gitId":"cheahTJ"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2024-02-07"},{"lineNumber":87,"author":{"gitId":"cheahTJ"},"content":"                response +\u003d ui.givesBackResponse();","lastModifiedDate":"2024-02-07"},{"lineNumber":88,"author":{"gitId":"cheahTJ"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":89,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":90,"author":{"gitId":"cheahTJ"},"content":"        } else if (splitInput[0].equals(\"unmark\")) {","lastModifiedDate":"2024-02-07"},{"lineNumber":91,"author":{"gitId":"cheahTJ"},"content":"            try {","lastModifiedDate":"2024-02-07"},{"lineNumber":92,"author":{"gitId":"cheahTJ"},"content":"                Command c \u003d parser.parseUnmarkCommand(tasks.getTaskSize());","lastModifiedDate":"2024-02-07"},{"lineNumber":93,"author":{"gitId":"cheahTJ"},"content":"                c.execute(tasks, storage, ui);","lastModifiedDate":"2024-02-07"},{"lineNumber":94,"author":{"gitId":"cheahTJ"},"content":"                response +\u003d ui.givesBackResponse();","lastModifiedDate":"2024-02-07"},{"lineNumber":95,"author":{"gitId":"cheahTJ"},"content":"            } catch (PingMeException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":96,"author":{"gitId":"cheahTJ"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2024-02-07"},{"lineNumber":97,"author":{"gitId":"cheahTJ"},"content":"                response +\u003d ui.givesBackResponse();","lastModifiedDate":"2024-02-07"},{"lineNumber":98,"author":{"gitId":"cheahTJ"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":99,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":100,"author":{"gitId":"cheahTJ"},"content":"        } else if (splitInput[0].equals(\"todo\")) {","lastModifiedDate":"2024-02-07"},{"lineNumber":101,"author":{"gitId":"cheahTJ"},"content":"            try {","lastModifiedDate":"2024-02-07"},{"lineNumber":102,"author":{"gitId":"cheahTJ"},"content":"                Command c \u003d parser.parseToDoCommand();","lastModifiedDate":"2024-02-07"},{"lineNumber":103,"author":{"gitId":"cheahTJ"},"content":"                c.execute(tasks, storage, ui);","lastModifiedDate":"2024-02-07"},{"lineNumber":104,"author":{"gitId":"cheahTJ"},"content":"                response +\u003d ui.givesBackResponse();","lastModifiedDate":"2024-02-07"},{"lineNumber":105,"author":{"gitId":"cheahTJ"},"content":"            } catch (PingMeException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":106,"author":{"gitId":"cheahTJ"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2024-02-07"},{"lineNumber":107,"author":{"gitId":"cheahTJ"},"content":"                response +\u003d ui.givesBackResponse();","lastModifiedDate":"2024-02-07"},{"lineNumber":108,"author":{"gitId":"cheahTJ"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":109,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":110,"author":{"gitId":"cheahTJ"},"content":"        } else if (splitInput[0].equals(\"deadline\")) {","lastModifiedDate":"2024-02-07"},{"lineNumber":111,"author":{"gitId":"cheahTJ"},"content":"            try {","lastModifiedDate":"2024-02-07"},{"lineNumber":112,"author":{"gitId":"cheahTJ"},"content":"                Command c \u003d parser.parseDeadlineCommand();","lastModifiedDate":"2024-02-07"},{"lineNumber":113,"author":{"gitId":"cheahTJ"},"content":"                c.execute(tasks, storage, ui);","lastModifiedDate":"2024-02-07"},{"lineNumber":114,"author":{"gitId":"cheahTJ"},"content":"                response +\u003d ui.givesBackResponse();","lastModifiedDate":"2024-02-07"},{"lineNumber":115,"author":{"gitId":"cheahTJ"},"content":"            } catch (PingMeException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":116,"author":{"gitId":"cheahTJ"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2024-02-02"},{"lineNumber":117,"author":{"gitId":"cheahTJ"},"content":"                response +\u003d ui.givesBackResponse();","lastModifiedDate":"2024-02-07"},{"lineNumber":118,"author":{"gitId":"cheahTJ"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":119,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":120,"author":{"gitId":"cheahTJ"},"content":"        } else if (splitInput[0].equals(\"event\")) {","lastModifiedDate":"2024-02-07"},{"lineNumber":121,"author":{"gitId":"cheahTJ"},"content":"            try {","lastModifiedDate":"2024-02-07"},{"lineNumber":122,"author":{"gitId":"cheahTJ"},"content":"                Command c \u003d parser.parseEventsCommand();","lastModifiedDate":"2024-02-07"},{"lineNumber":123,"author":{"gitId":"cheahTJ"},"content":"                c.execute(tasks, storage, ui);","lastModifiedDate":"2024-02-07"},{"lineNumber":124,"author":{"gitId":"cheahTJ"},"content":"                response +\u003d ui.givesBackResponse();","lastModifiedDate":"2024-02-07"},{"lineNumber":125,"author":{"gitId":"cheahTJ"},"content":"            } catch (PingMeException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":126,"author":{"gitId":"cheahTJ"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2024-02-07"},{"lineNumber":127,"author":{"gitId":"cheahTJ"},"content":"                response +\u003d ui.givesBackResponse();","lastModifiedDate":"2024-02-07"},{"lineNumber":128,"author":{"gitId":"cheahTJ"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":129,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":130,"author":{"gitId":"cheahTJ"},"content":"        } else if (splitInput[0].equals(\"delete\")) {","lastModifiedDate":"2024-02-07"},{"lineNumber":131,"author":{"gitId":"cheahTJ"},"content":"            try {","lastModifiedDate":"2024-02-07"},{"lineNumber":132,"author":{"gitId":"cheahTJ"},"content":"                Command c \u003d parser.parseDeleteCommand(tasks.getTaskSize());","lastModifiedDate":"2024-02-07"},{"lineNumber":133,"author":{"gitId":"cheahTJ"},"content":"                c.execute(tasks, storage, ui);","lastModifiedDate":"2024-02-07"},{"lineNumber":134,"author":{"gitId":"cheahTJ"},"content":"                response +\u003d ui.givesBackResponse();","lastModifiedDate":"2024-02-07"},{"lineNumber":135,"author":{"gitId":"cheahTJ"},"content":"            } catch (PingMeException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":136,"author":{"gitId":"cheahTJ"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2024-02-07"},{"lineNumber":137,"author":{"gitId":"cheahTJ"},"content":"                response +\u003d ui.givesBackResponse();","lastModifiedDate":"2024-02-07"},{"lineNumber":138,"author":{"gitId":"cheahTJ"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":139,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":140,"author":{"gitId":"cheahTJ"},"content":"        } else if (splitInput[0].equals(\"find\")) {","lastModifiedDate":"2024-02-07"},{"lineNumber":141,"author":{"gitId":"cheahTJ"},"content":"            try {","lastModifiedDate":"2024-02-07"},{"lineNumber":142,"author":{"gitId":"cheahTJ"},"content":"                Command c \u003d parser.parseFindCommand();","lastModifiedDate":"2024-02-07"},{"lineNumber":143,"author":{"gitId":"cheahTJ"},"content":"                c.execute(tasks, storage, ui);","lastModifiedDate":"2024-02-07"},{"lineNumber":144,"author":{"gitId":"cheahTJ"},"content":"                response +\u003d ui.givesBackResponse();","lastModifiedDate":"2024-02-07"},{"lineNumber":145,"author":{"gitId":"cheahTJ"},"content":"            } catch (PingMeException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":146,"author":{"gitId":"cheahTJ"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2024-02-07"},{"lineNumber":147,"author":{"gitId":"cheahTJ"},"content":"                response +\u003d ui.givesBackResponse();","lastModifiedDate":"2024-02-07"},{"lineNumber":148,"author":{"gitId":"cheahTJ"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":149,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":150,"author":{"gitId":"cheahTJ"},"content":"        } else if (splitInput[0].equals(\"postpone\")) {","lastModifiedDate":"2024-02-19"},{"lineNumber":151,"author":{"gitId":"cheahTJ"},"content":"            try {","lastModifiedDate":"2024-02-19"},{"lineNumber":152,"author":{"gitId":"cheahTJ"},"content":"                Command c \u003d parser.parsePostponeCommand();","lastModifiedDate":"2024-02-19"},{"lineNumber":153,"author":{"gitId":"cheahTJ"},"content":"                c.execute(tasks, storage, ui);","lastModifiedDate":"2024-02-19"},{"lineNumber":154,"author":{"gitId":"cheahTJ"},"content":"                response +\u003d ui.givesBackResponse();","lastModifiedDate":"2024-02-19"},{"lineNumber":155,"author":{"gitId":"cheahTJ"},"content":"            } catch (PingMeException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":156,"author":{"gitId":"cheahTJ"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2024-02-19"},{"lineNumber":157,"author":{"gitId":"cheahTJ"},"content":"                response +\u003d ui.givesBackResponse();","lastModifiedDate":"2024-02-19"},{"lineNumber":158,"author":{"gitId":"cheahTJ"},"content":"            }","lastModifiedDate":"2024-02-19"},{"lineNumber":159,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":160,"author":{"gitId":"cheahTJ"},"content":"        } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":161,"author":{"gitId":"cheahTJ"},"content":"            ui.showError(\"OOPS! I\u0027m sorry, but I don\u0027t know what that means :\u0027(\");","lastModifiedDate":"2024-01-30"},{"lineNumber":162,"author":{"gitId":"cheahTJ"},"content":"            response +\u003d ui.givesBackResponse();","lastModifiedDate":"2024-02-07"},{"lineNumber":163,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":164,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":165,"author":{"gitId":"cheahTJ"},"content":"        return response;","lastModifiedDate":"2024-02-07"},{"lineNumber":166,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":167,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":168,"author":{"gitId":"cheahTJ"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-30"},{"lineNumber":169,"author":{"gitId":"cheahTJ"},"content":"        new PingMe(filePath).run();","lastModifiedDate":"2024-02-07"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"cheahTJ":169,"-":2}},{"path":"src/main/java/pingmebot/PingMeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheahTJ"},"content":"package pingmebot;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"cheahTJ"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"cheahTJ"},"content":" * Responsible for throwing exception that is specific to the bot application.","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"cheahTJ"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"cheahTJ"},"content":"public class PingMeException extends Exception {","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"cheahTJ"},"content":"    protected String message;","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"cheahTJ"},"content":"     * Creates a specified bot object that has its own error message","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"cheahTJ"},"content":"     * @param message Error message.","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"cheahTJ"},"content":"    public PingMeException(String message) {","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"cheahTJ"},"content":"        super(message);","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"cheahTJ"},"content":"        this.message \u003d message;","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"cheahTJ"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"cheahTJ":17}},{"path":"src/main/java/pingmebot/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheahTJ"},"content":"package pingmebot;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"cheahTJ"},"content":"import java.io.File;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"cheahTJ"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"cheahTJ"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"cheahTJ"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"cheahTJ"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"cheahTJ"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"cheahTJ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"cheahTJ"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"cheahTJ"},"content":"import pingmebot.task.Deadline;","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"cheahTJ"},"content":"import pingmebot.task.Events;","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"cheahTJ"},"content":"import pingmebot.task.Task;","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"cheahTJ"},"content":"import pingmebot.task.ToDos;","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"cheahTJ"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"cheahTJ"},"content":" * Helps to load tasks from and updating tasks to local file.","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"cheahTJ"},"content":" * It provides methods to boot tasks, if any, from and write any new tasks into the local file.","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"cheahTJ"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"cheahTJ"},"content":"public class Storage {","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"cheahTJ"},"content":"    protected File myFile;","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"cheahTJ"},"content":"    protected String filePath;","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"cheahTJ"},"content":"     * Creates a filestorage object with a specified file path.","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"cheahTJ"},"content":"     * @param filePath The file path to the local file.","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"cheahTJ"},"content":"     * @throws PingMeException If the path to the file does not exist.","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"cheahTJ"},"content":"    public Storage(String filePath) throws PingMeException {","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"cheahTJ"},"content":"        this.myFile \u003d new File(filePath);","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"cheahTJ"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"cheahTJ"},"content":"        if (!myFile.exists()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"cheahTJ"},"content":"            try {","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"cheahTJ"},"content":"                if (this.myFile.createNewFile()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"cheahTJ"},"content":"                    System.out.println(\"File has been successfully created\");","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"cheahTJ"},"content":"                } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"cheahTJ"},"content":"                    System.out.println(\"Error creating file...\");","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"cheahTJ"},"content":"                }","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"cheahTJ"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"cheahTJ"},"content":"                throw new PingMeException(e.getMessage());","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"cheahTJ"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"cheahTJ"},"content":"     * Loads tasks into list of tasks which is then used to create the tasklist.","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"cheahTJ"},"content":"     * @return List of tasks, if any, from the local file.","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"cheahTJ"},"content":"     * @throws PingMeException If the path to the file is not found or when syntax of tasks","lastModifiedDate":"2024-02-19"},{"lineNumber":52,"author":{"gitId":"cheahTJ"},"content":"     *                         stored in the localfile is not understood.","lastModifiedDate":"2024-02-19"},{"lineNumber":53,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"cheahTJ"},"content":"    public ArrayList\u003cTask\u003e bootingUp() throws PingMeException {","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"cheahTJ"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"cheahTJ"},"content":"        if (this.myFile.length() \u003d\u003d 0) {","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"cheahTJ"},"content":"            tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"cheahTJ"},"content":"        } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"cheahTJ"},"content":"            try {","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"cheahTJ"},"content":"                Scanner sc \u003d new Scanner(this.myFile);","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"cheahTJ"},"content":"                while (sc.hasNextLine()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"cheahTJ"},"content":"                    String text \u003d sc.nextLine();","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"cheahTJ"},"content":"                    String[] segmentedText \u003d text.split(\"\\\\|\");","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"cheahTJ"},"content":"                    String typeOfTask \u003d segmentedText[0].trim();","lastModifiedDate":"2024-02-13"},{"lineNumber":66,"author":{"gitId":"cheahTJ"},"content":"                    assert (typeOfTask.equals(\"todo\") || typeOfTask.equals(\"deadline\")","lastModifiedDate":"2024-02-13"},{"lineNumber":67,"author":{"gitId":"cheahTJ"},"content":"                            || typeOfTask.equals(\"event\")) : \"Invalid task type when reading in from file\";","lastModifiedDate":"2024-02-13"},{"lineNumber":68,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":69,"author":{"gitId":"cheahTJ"},"content":"                    if (typeOfTask.equals(\"todo\")) {","lastModifiedDate":"2024-02-13"},{"lineNumber":70,"author":{"gitId":"cheahTJ"},"content":"                        int isTaskCompleted \u003d Integer.parseInt(segmentedText[1].trim());","lastModifiedDate":"2024-01-28"},{"lineNumber":71,"author":{"gitId":"cheahTJ"},"content":"                        String description \u003d segmentedText[2].trim();","lastModifiedDate":"2024-01-28"},{"lineNumber":72,"author":{"gitId":"cheahTJ"},"content":"                        ToDos todo \u003d new ToDos(description);","lastModifiedDate":"2024-01-28"},{"lineNumber":73,"author":{"gitId":"cheahTJ"},"content":"                        if (isTaskCompleted \u003d\u003d 1) {","lastModifiedDate":"2024-01-28"},{"lineNumber":74,"author":{"gitId":"cheahTJ"},"content":"                            todo.markAsDone();","lastModifiedDate":"2024-01-28"},{"lineNumber":75,"author":{"gitId":"cheahTJ"},"content":"                        }","lastModifiedDate":"2024-01-28"},{"lineNumber":76,"author":{"gitId":"cheahTJ"},"content":"                        tasks.add(todo);","lastModifiedDate":"2024-01-28"},{"lineNumber":77,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"cheahTJ"},"content":"                    } else if (typeOfTask.equals(\"deadline\")) {","lastModifiedDate":"2024-02-13"},{"lineNumber":79,"author":{"gitId":"cheahTJ"},"content":"                        int isTaskCompleted \u003d Integer.parseInt(segmentedText[1].trim());","lastModifiedDate":"2024-01-28"},{"lineNumber":80,"author":{"gitId":"cheahTJ"},"content":"                        String description \u003d segmentedText[2].trim();","lastModifiedDate":"2024-01-28"},{"lineNumber":81,"author":{"gitId":"cheahTJ"},"content":"                        String deadlineTime \u003d segmentedText[3].trim();","lastModifiedDate":"2024-01-28"},{"lineNumber":82,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":83,"author":{"gitId":"cheahTJ"},"content":"                        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\");","lastModifiedDate":"2024-01-28"},{"lineNumber":84,"author":{"gitId":"cheahTJ"},"content":"                        LocalDateTime parsedDateTime \u003d LocalDateTime.parse(deadlineTime, formatter);","lastModifiedDate":"2024-01-28"},{"lineNumber":85,"author":{"gitId":"cheahTJ"},"content":"                        Deadline deadline \u003d new Deadline(description, parsedDateTime);","lastModifiedDate":"2024-01-28"},{"lineNumber":86,"author":{"gitId":"cheahTJ"},"content":"                        if (isTaskCompleted \u003d\u003d 1) {","lastModifiedDate":"2024-01-28"},{"lineNumber":87,"author":{"gitId":"cheahTJ"},"content":"                            deadline.markAsDone();","lastModifiedDate":"2024-01-28"},{"lineNumber":88,"author":{"gitId":"cheahTJ"},"content":"                        }","lastModifiedDate":"2024-01-28"},{"lineNumber":89,"author":{"gitId":"cheahTJ"},"content":"                        tasks.add(deadline);","lastModifiedDate":"2024-01-28"},{"lineNumber":90,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":91,"author":{"gitId":"cheahTJ"},"content":"                    } else if (segmentedText[0].trim().equals(\"event\")) {","lastModifiedDate":"2024-01-28"},{"lineNumber":92,"author":{"gitId":"cheahTJ"},"content":"                        int isTaskCompleted \u003d Integer.parseInt(segmentedText[1].trim());","lastModifiedDate":"2024-01-28"},{"lineNumber":93,"author":{"gitId":"cheahTJ"},"content":"                        String description \u003d segmentedText[2].trim();","lastModifiedDate":"2024-01-28"},{"lineNumber":94,"author":{"gitId":"cheahTJ"},"content":"                        String from \u003d \" \" + segmentedText[3].trim();","lastModifiedDate":"2024-01-28"},{"lineNumber":95,"author":{"gitId":"cheahTJ"},"content":"                        String to \u003d \" \" + segmentedText[4].trim();","lastModifiedDate":"2024-01-28"},{"lineNumber":96,"author":{"gitId":"cheahTJ"},"content":"                        Events event \u003d new Events(description, from, to);","lastModifiedDate":"2024-01-28"},{"lineNumber":97,"author":{"gitId":"cheahTJ"},"content":"                        if (isTaskCompleted \u003d\u003d 1) {","lastModifiedDate":"2024-01-28"},{"lineNumber":98,"author":{"gitId":"cheahTJ"},"content":"                            event.markAsDone();","lastModifiedDate":"2024-01-28"},{"lineNumber":99,"author":{"gitId":"cheahTJ"},"content":"                        }","lastModifiedDate":"2024-01-28"},{"lineNumber":100,"author":{"gitId":"cheahTJ"},"content":"                        tasks.add(event);","lastModifiedDate":"2024-01-28"},{"lineNumber":101,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":102,"author":{"gitId":"cheahTJ"},"content":"                    } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":103,"author":{"gitId":"cheahTJ"},"content":"                        throw new PingMeException(\"Weird expression found!\");","lastModifiedDate":"2024-02-02"},{"lineNumber":104,"author":{"gitId":"cheahTJ"},"content":"                    }","lastModifiedDate":"2024-01-28"},{"lineNumber":105,"author":{"gitId":"cheahTJ"},"content":"                }","lastModifiedDate":"2024-01-28"},{"lineNumber":106,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":107,"author":{"gitId":"cheahTJ"},"content":"            } catch (FileNotFoundException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":108,"author":{"gitId":"cheahTJ"},"content":"                throw new PingMeException(e.getMessage());","lastModifiedDate":"2024-02-02"},{"lineNumber":109,"author":{"gitId":"cheahTJ"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":110,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":111,"author":{"gitId":"cheahTJ"},"content":"        return tasks;","lastModifiedDate":"2024-01-28"},{"lineNumber":112,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":113,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":114,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":115,"author":{"gitId":"cheahTJ"},"content":"     * Updates and writes all the tasks in the tasklist into the local file.","lastModifiedDate":"2024-02-01"},{"lineNumber":116,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":117,"author":{"gitId":"cheahTJ"},"content":"     * @param tasks The list of all tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":118,"author":{"gitId":"cheahTJ"},"content":"     * @throws PingMeException If the path to the file is not found.","lastModifiedDate":"2024-02-02"},{"lineNumber":119,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":120,"author":{"gitId":"cheahTJ"},"content":"    public void updateFile(ArrayList\u003cTask\u003e tasks) throws PingMeException {","lastModifiedDate":"2024-02-02"},{"lineNumber":121,"author":{"gitId":"cheahTJ"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":122,"author":{"gitId":"cheahTJ"},"content":"            FileWriter fw \u003d new FileWriter(this.filePath);","lastModifiedDate":"2024-01-28"},{"lineNumber":123,"author":{"gitId":"cheahTJ"},"content":"            for (Task t : tasks) {","lastModifiedDate":"2024-01-28"},{"lineNumber":124,"author":{"gitId":"cheahTJ"},"content":"                int isCompleted \u003d t.hasCompleted();","lastModifiedDate":"2024-01-30"},{"lineNumber":125,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":126,"author":{"gitId":"cheahTJ"},"content":"                assert (t instanceof ToDos || t instanceof Deadline ||","lastModifiedDate":"2024-02-13"},{"lineNumber":127,"author":{"gitId":"cheahTJ"},"content":"                        t instanceof Events) : \"Invalid task type when writing to file\";","lastModifiedDate":"2024-02-13"},{"lineNumber":128,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":129,"author":{"gitId":"cheahTJ"},"content":"                if (t instanceof ToDos) {","lastModifiedDate":"2024-01-28"},{"lineNumber":130,"author":{"gitId":"cheahTJ"},"content":"                    String toWrite \u003d ((ToDos) t).updateToDoText(isCompleted);","lastModifiedDate":"2024-01-30"},{"lineNumber":131,"author":{"gitId":"cheahTJ"},"content":"                    fw.write(toWrite + System.lineSeparator());","lastModifiedDate":"2024-01-28"},{"lineNumber":132,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":133,"author":{"gitId":"cheahTJ"},"content":"                } else if (t instanceof Deadline) {","lastModifiedDate":"2024-01-28"},{"lineNumber":134,"author":{"gitId":"cheahTJ"},"content":"                    String toWrite \u003d ((Deadline) t).updateDeadlineText(isCompleted);","lastModifiedDate":"2024-01-30"},{"lineNumber":135,"author":{"gitId":"cheahTJ"},"content":"                    fw.write(toWrite + System.lineSeparator());","lastModifiedDate":"2024-01-28"},{"lineNumber":136,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":137,"author":{"gitId":"cheahTJ"},"content":"                } else if (t instanceof Events) {","lastModifiedDate":"2024-01-28"},{"lineNumber":138,"author":{"gitId":"cheahTJ"},"content":"                    String toWrite \u003d ((Events) t).updateEventText(isCompleted);","lastModifiedDate":"2024-01-30"},{"lineNumber":139,"author":{"gitId":"cheahTJ"},"content":"                    fw.write(toWrite + System.lineSeparator());","lastModifiedDate":"2024-01-28"},{"lineNumber":140,"author":{"gitId":"cheahTJ"},"content":"                }","lastModifiedDate":"2024-01-28"},{"lineNumber":141,"author":{"gitId":"cheahTJ"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":142,"author":{"gitId":"cheahTJ"},"content":"            fw.close();","lastModifiedDate":"2024-01-28"},{"lineNumber":143,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":144,"author":{"gitId":"cheahTJ"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":145,"author":{"gitId":"cheahTJ"},"content":"            throw new PingMeException(\"There is not file to be updated!\");","lastModifiedDate":"2024-02-02"},{"lineNumber":146,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":147,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":148,"author":{"gitId":"cheahTJ"},"content":"}","lastModifiedDate":"2024-01-28"},{"lineNumber":149,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":150,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"cheahTJ":150}},{"path":"src/main/java/pingmebot/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheahTJ"},"content":"package pingmebot;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"cheahTJ"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"cheahTJ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"cheahTJ"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"cheahTJ"},"content":"import org.w3c.dom.events.Event;","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"cheahTJ"},"content":"import pingmebot.task.Deadline;","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"cheahTJ"},"content":"import pingmebot.task.Events;","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"cheahTJ"},"content":"import pingmebot.task.Task;","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"cheahTJ"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"cheahTJ"},"content":" * Stores the list of tasks assigned to the bot.","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"cheahTJ"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"cheahTJ"},"content":"public class TaskList {","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"cheahTJ"},"content":"    protected ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"cheahTJ"},"content":"     * Creates a TaskList object when there are already tasks in the local file.","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"cheahTJ"},"content":"     * @param tasks A specified list of tasks loaded from the local file","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"cheahTJ"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"cheahTJ"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"cheahTJ"},"content":"     * Constructor for creating a TaskList object when there are no tasks already in the local file.","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"cheahTJ"},"content":"    public TaskList() {","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"cheahTJ"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"cheahTJ"},"content":"     * Returns the number of tasks in the current tasklist.","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"cheahTJ"},"content":"     * @return The number of tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"cheahTJ"},"content":"    public int getTaskSize() {","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"cheahTJ"},"content":"        return this.tasks.size();","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"cheahTJ"},"content":"     * Updates the local file of the modification made to the tasklist.","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"cheahTJ"},"content":"     * @param fs The actual file that the method is supposed to write into.","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"cheahTJ"},"content":"     * @throws PingMeException If there is an attempt to write into a non-existent file.","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"cheahTJ"},"content":"    public void updateTaskToStorage(Storage fs) throws PingMeException {","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"cheahTJ"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"cheahTJ"},"content":"            fs.updateFile(this.tasks);","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"cheahTJ"},"content":"        } catch (PingMeException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"cheahTJ"},"content":"            throw new PingMeException(e.getMessage());","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"cheahTJ"},"content":"     * Adds a task to the tasklist.","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"cheahTJ"},"content":"     * @param task The task to be added into the tasklist.","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"cheahTJ"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"cheahTJ"},"content":"        this.tasks.add(task);","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"cheahTJ"},"content":"     * Removes a task from the tasklist.","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"cheahTJ"},"content":"     * @param taskNumber The position of the task in the tasklist to be deleted.","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"cheahTJ"},"content":"    public void removeTask(int taskNumber) {","lastModifiedDate":"2024-01-30"},{"lineNumber":74,"author":{"gitId":"cheahTJ"},"content":"        this.tasks.remove(taskNumber);","lastModifiedDate":"2024-01-30"},{"lineNumber":75,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":76,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":77,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"cheahTJ"},"content":"     * Returns the desired description of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"cheahTJ"},"content":"     * @param taskNumber The position of the task in the tasklist to retrieve its description.","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"cheahTJ"},"content":"     * @return The desired description of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"cheahTJ"},"content":"    public String taskToString(int taskNumber) {","lastModifiedDate":"2024-01-30"},{"lineNumber":84,"author":{"gitId":"cheahTJ"},"content":"        return this.tasks.get(taskNumber).toString();","lastModifiedDate":"2024-01-30"},{"lineNumber":85,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":86,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":87,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"cheahTJ"},"content":"     * Returns the status icon of the task to see if it has been completed.","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"cheahTJ"},"content":"     * @param taskNumber The position of the task in the tasklist to retrieve its status icon.","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"cheahTJ"},"content":"     * @return Status icon of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"cheahTJ"},"content":"    public String taskStatusIcon(int taskNumber) {","lastModifiedDate":"2024-01-30"},{"lineNumber":94,"author":{"gitId":"cheahTJ"},"content":"        return this.tasks.get(taskNumber).getStatusIcon();","lastModifiedDate":"2024-01-30"},{"lineNumber":95,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":96,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":97,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"cheahTJ"},"content":"     * Marks task as completed.","lastModifiedDate":"2024-02-01"},{"lineNumber":99,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":100,"author":{"gitId":"cheahTJ"},"content":"     * @param taskNumber The position of the task in the tasklist to mark as done.","lastModifiedDate":"2024-02-01"},{"lineNumber":101,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":102,"author":{"gitId":"cheahTJ"},"content":"    public void taskMarkAsDone(int taskNumber) {","lastModifiedDate":"2024-01-30"},{"lineNumber":103,"author":{"gitId":"cheahTJ"},"content":"        this.tasks.get(taskNumber).markAsDone();","lastModifiedDate":"2024-01-30"},{"lineNumber":104,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":105,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":106,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":107,"author":{"gitId":"cheahTJ"},"content":"     * Un-marks task.","lastModifiedDate":"2024-02-01"},{"lineNumber":108,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":109,"author":{"gitId":"cheahTJ"},"content":"     * @param taskNumber The position of the task in the tasklist to un-mark.","lastModifiedDate":"2024-02-01"},{"lineNumber":110,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":111,"author":{"gitId":"cheahTJ"},"content":"    public void taskUncheckTask(int taskNumber) {","lastModifiedDate":"2024-01-30"},{"lineNumber":112,"author":{"gitId":"cheahTJ"},"content":"        this.tasks.get(taskNumber).uncheckingTask();","lastModifiedDate":"2024-01-30"},{"lineNumber":113,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":114,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":115,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":116,"author":{"gitId":"cheahTJ"},"content":"     * Returns a list of matching task according to the specified keyword.","lastModifiedDate":"2024-02-02"},{"lineNumber":117,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":118,"author":{"gitId":"cheahTJ"},"content":"     * @param keyword Keyword specified by the user to find.","lastModifiedDate":"2024-02-02"},{"lineNumber":119,"author":{"gitId":"cheahTJ"},"content":"     * @return A list of matching task lists, can be empty as well.","lastModifiedDate":"2024-02-02"},{"lineNumber":120,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":121,"author":{"gitId":"cheahTJ"},"content":"    public ArrayList\u003cTask\u003e findMatchingTask(String keyword) {","lastModifiedDate":"2024-02-02"},{"lineNumber":122,"author":{"gitId":"cheahTJ"},"content":"        return this.tasks.stream().filter(task","lastModifiedDate":"2024-02-02"},{"lineNumber":123,"author":{"gitId":"cheahTJ"},"content":"                -\u003e task.getDescription().contains(keyword)).collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2024-02-02"},{"lineNumber":124,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":125,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":126,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":127,"author":{"gitId":"cheahTJ"},"content":"     * Updates the start and end timing for the events task, and the finish by timing for the deadline task.","lastModifiedDate":"2024-02-19"},{"lineNumber":128,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":129,"author":{"gitId":"cheahTJ"},"content":"     * @param taskNum The task number in the task list which the user is trying to postpone.","lastModifiedDate":"2024-02-19"},{"lineNumber":130,"author":{"gitId":"cheahTJ"},"content":"     * @param timingStart The start timing of the events task.","lastModifiedDate":"2024-02-19"},{"lineNumber":131,"author":{"gitId":"cheahTJ"},"content":"     * @param timingEnd The end timing of the events task.","lastModifiedDate":"2024-02-19"},{"lineNumber":132,"author":{"gitId":"cheahTJ"},"content":"     * @param by The finish by timing of the deadline task.","lastModifiedDate":"2024-02-19"},{"lineNumber":133,"author":{"gitId":"cheahTJ"},"content":"     * @throws PingMeException If the user tries to postpone a todo task.","lastModifiedDate":"2024-02-19"},{"lineNumber":134,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":135,"author":{"gitId":"cheahTJ"},"content":"    public void postponeTask(int taskNum, String timingStart, String timingEnd, LocalDateTime by) throws PingMeException{","lastModifiedDate":"2024-02-19"},{"lineNumber":136,"author":{"gitId":"cheahTJ"},"content":"        Task t \u003d tasks.get(taskNum);","lastModifiedDate":"2024-02-19"},{"lineNumber":137,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":138,"author":{"gitId":"cheahTJ"},"content":"        if (t instanceof Deadline) {","lastModifiedDate":"2024-02-19"},{"lineNumber":139,"author":{"gitId":"cheahTJ"},"content":"            Deadline d \u003d (Deadline) t;","lastModifiedDate":"2024-02-19"},{"lineNumber":140,"author":{"gitId":"cheahTJ"},"content":"            d.setDeadlineByTiming(by);","lastModifiedDate":"2024-02-19"},{"lineNumber":141,"author":{"gitId":"cheahTJ"},"content":"        } else if (t instanceof Events) {","lastModifiedDate":"2024-02-19"},{"lineNumber":142,"author":{"gitId":"cheahTJ"},"content":"            Events e \u003d (Events) t;","lastModifiedDate":"2024-02-19"},{"lineNumber":143,"author":{"gitId":"cheahTJ"},"content":"            e.setEventsFromTiming(timingStart);","lastModifiedDate":"2024-02-19"},{"lineNumber":144,"author":{"gitId":"cheahTJ"},"content":"            e.setEventsToTiming(timingEnd);","lastModifiedDate":"2024-02-19"},{"lineNumber":145,"author":{"gitId":"cheahTJ"},"content":"        } else {","lastModifiedDate":"2024-02-19"},{"lineNumber":146,"author":{"gitId":"cheahTJ"},"content":"            throw new PingMeException(\"You can only postpone deadline or \" +","lastModifiedDate":"2024-02-19"},{"lineNumber":147,"author":{"gitId":"cheahTJ"},"content":"                    \"events task!\");","lastModifiedDate":"2024-02-19"},{"lineNumber":148,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":149,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":150,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":151,"author":{"gitId":"cheahTJ"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"cheahTJ":151}},{"path":"src/main/java/pingmebot/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheahTJ"},"content":"package pingmebot;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"cheahTJ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"cheahTJ"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"cheahTJ"},"content":"import pingmebot.task.Task;","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"cheahTJ"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"cheahTJ"},"content":" * Deals with the user interactivity of the application.","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"cheahTJ"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"cheahTJ"},"content":"public class UI {","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"cheahTJ"},"content":"    private final Scanner scanner;","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"cheahTJ"},"content":"    private ArrayList\u003cString\u003e response \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"cheahTJ"},"content":"     * Creates a UI object with the Scanner object intialised to read user\u0027s inputs.","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"cheahTJ"},"content":"    public UI() {","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"cheahTJ"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"cheahTJ"},"content":"     * Sends welcoming message to the user.","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"cheahTJ"},"content":"    public void showWelcome() {","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"cheahTJ"},"content":"        String greetingMsg \u003d \"Hello! I\u0027m PingMeBot\\n\" + \"What can I do for you?\";","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"cheahTJ"},"content":"        System.out.println(greetingMsg);","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"cheahTJ"},"content":"     * Sends goodbye message to the user.","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"cheahTJ"},"content":"    public void sayGoodbye() {","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"cheahTJ"},"content":"        String exitMsg \u003d \"\\n\" + \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"cheahTJ"},"content":"        System.out.println(exitMsg);","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"cheahTJ"},"content":"        response.add(exitMsg);","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"cheahTJ"},"content":"     * Sends to user an overview message of the tasks the user has.","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"cheahTJ"},"content":"    public void listText(TaskList t) {","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"cheahTJ"},"content":"        String toUserUponListing \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"cheahTJ"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"cheahTJ"},"content":"        for (int i \u003d 0; i \u003c t.tasks.size(); i++) {","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"cheahTJ"},"content":"            if (t.tasks.get(i) \u003d\u003d null) {","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"cheahTJ"},"content":"                break;","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"cheahTJ"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"cheahTJ"},"content":"            int taskNumber \u003d i + 1;","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"cheahTJ"},"content":"            System.out.println(\"\\n\" + taskNumber + \".\" + t.tasks.get(i).toString());","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"cheahTJ"},"content":"            toUserUponListing +\u003d \"\\n\" + taskNumber + \".\" + t.tasks.get(i).toString();","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"cheahTJ"},"content":"        response.add(toUserUponListing);","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"cheahTJ"},"content":"     * Prints an overview text of matching tasks found in the tasklist.","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"cheahTJ"},"content":"    public void listMatchingText(TaskList t) {","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"cheahTJ"},"content":"        String toUserUponMatching \u003d \"Here are the matching tasks in your list:\";","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"cheahTJ"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"cheahTJ"},"content":"        for (int i \u003d 0; i \u003c t.tasks.size(); i++) {","lastModifiedDate":"2024-02-07"},{"lineNumber":66,"author":{"gitId":"cheahTJ"},"content":"            System.out.println((i + 1) + \".\" + t.tasks.get(i).toString());","lastModifiedDate":"2024-02-07"},{"lineNumber":67,"author":{"gitId":"cheahTJ"},"content":"            toUserUponMatching +\u003d (i + 1) + \".\" + t.tasks.get(i).toString();","lastModifiedDate":"2024-02-07"},{"lineNumber":68,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":69,"author":{"gitId":"cheahTJ"},"content":"        response.add(toUserUponMatching);","lastModifiedDate":"2024-02-07"},{"lineNumber":70,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"cheahTJ"},"content":"     * Reads the user\u0027s inputs.","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"cheahTJ"},"content":"     * @return User\u0027s input.","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"cheahTJ"},"content":"    public String readCommand() {","lastModifiedDate":"2024-01-30"},{"lineNumber":78,"author":{"gitId":"cheahTJ"},"content":"        return scanner.nextLine();","lastModifiedDate":"2024-02-19"},{"lineNumber":79,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":80,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":81,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"cheahTJ"},"content":"     * Sends a message to the user when his/her desired task has been added.","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"cheahTJ"},"content":"     * @param task The specified task the user wants to do.","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"cheahTJ"},"content":"     * @param allTasks The tasklist which contains all the user\u0027s tasks in which the user\u0027s new task is to be added.","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"cheahTJ"},"content":"    public void additionToTasksText(Task task, TaskList allTasks) {","lastModifiedDate":"2024-01-30"},{"lineNumber":88,"author":{"gitId":"cheahTJ"},"content":"        String toUserUponAddition \u003d \"\";","lastModifiedDate":"2024-01-30"},{"lineNumber":89,"author":{"gitId":"cheahTJ"},"content":"        toUserUponAddition +\u003d (\"\\n\" + \"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-30"},{"lineNumber":90,"author":{"gitId":"cheahTJ"},"content":"        toUserUponAddition +\u003d \"\\n\" + \"  \" + task.toString();","lastModifiedDate":"2024-01-30"},{"lineNumber":91,"author":{"gitId":"cheahTJ"},"content":"        toUserUponAddition +\u003d \"\\n\" + \"Now you have \" + allTasks.getTaskSize() + \" tasks in the list.\";","lastModifiedDate":"2024-01-30"},{"lineNumber":92,"author":{"gitId":"cheahTJ"},"content":"        System.out.println(toUserUponAddition);","lastModifiedDate":"2024-01-30"},{"lineNumber":93,"author":{"gitId":"cheahTJ"},"content":"        response.add(toUserUponAddition);","lastModifiedDate":"2024-02-07"},{"lineNumber":94,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":95,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":96,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"cheahTJ"},"content":"     * Sends a message to inform the user of the task that he/she wishes to delete.","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":99,"author":{"gitId":"cheahTJ"},"content":"     * @param taskNumber The position of the task in the tasklist which the user wants to delete.","lastModifiedDate":"2024-02-01"},{"lineNumber":100,"author":{"gitId":"cheahTJ"},"content":"     * @param allTasks The list of all the tasks that the user has in which to delete the task from.","lastModifiedDate":"2024-02-01"},{"lineNumber":101,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":102,"author":{"gitId":"cheahTJ"},"content":"    public void deletionToTasksText(int taskNumber, TaskList allTasks) {","lastModifiedDate":"2024-01-30"},{"lineNumber":103,"author":{"gitId":"cheahTJ"},"content":"        String toUserUponDeletion \u003d \"\";","lastModifiedDate":"2024-01-30"},{"lineNumber":104,"author":{"gitId":"cheahTJ"},"content":"        toUserUponDeletion +\u003d \"Noted. I\u0027ve removed this task:\";","lastModifiedDate":"2024-01-30"},{"lineNumber":105,"author":{"gitId":"cheahTJ"},"content":"        toUserUponDeletion +\u003d \"\\n\" + \"  \" + allTasks.taskToString(taskNumber);","lastModifiedDate":"2024-01-30"},{"lineNumber":106,"author":{"gitId":"cheahTJ"},"content":"        allTasks.removeTask(taskNumber);","lastModifiedDate":"2024-01-30"},{"lineNumber":107,"author":{"gitId":"cheahTJ"},"content":"        toUserUponDeletion +\u003d \"\\n\" + \"Now you have \" + allTasks.getTaskSize() + \" tasks in the list.\";","lastModifiedDate":"2024-01-30"},{"lineNumber":108,"author":{"gitId":"cheahTJ"},"content":"        System.out.println(toUserUponDeletion);","lastModifiedDate":"2024-01-30"},{"lineNumber":109,"author":{"gitId":"cheahTJ"},"content":"        response.add(toUserUponDeletion);","lastModifiedDate":"2024-02-07"},{"lineNumber":110,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":111,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":112,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":113,"author":{"gitId":"cheahTJ"},"content":"     * Sends a message to the user when the task that he/she wishes to mark as completed has been marked.","lastModifiedDate":"2024-02-01"},{"lineNumber":114,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":115,"author":{"gitId":"cheahTJ"},"content":"     * @param taskNum The position of the task in the tasklist which the user wants to mark.","lastModifiedDate":"2024-02-01"},{"lineNumber":116,"author":{"gitId":"cheahTJ"},"content":"     * @param allTasks The list of all the tasks that the user has in which to mark the task from.","lastModifiedDate":"2024-02-01"},{"lineNumber":117,"author":{"gitId":"cheahTJ"},"content":"     * @throws PingMeException If the user tries to mark a task which has already been completed.","lastModifiedDate":"2024-02-02"},{"lineNumber":118,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":119,"author":{"gitId":"cheahTJ"},"content":"    public void markTaskText(int taskNum, TaskList allTasks) throws PingMeException {","lastModifiedDate":"2024-02-02"},{"lineNumber":120,"author":{"gitId":"cheahTJ"},"content":"        String toUserUponMarkingTask \u003d \"\";","lastModifiedDate":"2024-01-30"},{"lineNumber":121,"author":{"gitId":"cheahTJ"},"content":"        if (allTasks.taskStatusIcon(taskNum).equals(\"X\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":122,"author":{"gitId":"cheahTJ"},"content":"            throw new PingMeException(\"You cannot mark task again which has been completed!\");","lastModifiedDate":"2024-02-02"},{"lineNumber":123,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":124,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":125,"author":{"gitId":"cheahTJ"},"content":"        allTasks.taskMarkAsDone(taskNum);","lastModifiedDate":"2024-01-30"},{"lineNumber":126,"author":{"gitId":"cheahTJ"},"content":"        toUserUponMarkingTask +\u003d \"Nice! I\u0027ve marked this task as done:\";","lastModifiedDate":"2024-01-30"},{"lineNumber":127,"author":{"gitId":"cheahTJ"},"content":"        toUserUponMarkingTask +\u003d \"\\n\" + \"  \" + allTasks.taskToString(taskNum);","lastModifiedDate":"2024-01-30"},{"lineNumber":128,"author":{"gitId":"cheahTJ"},"content":"        System.out.println(toUserUponMarkingTask);","lastModifiedDate":"2024-01-30"},{"lineNumber":129,"author":{"gitId":"cheahTJ"},"content":"        response.add(toUserUponMarkingTask);","lastModifiedDate":"2024-02-07"},{"lineNumber":130,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":131,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":132,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":133,"author":{"gitId":"cheahTJ"},"content":"     * Sends a message to the user when the task that he/she wishes to un-mark as not completed.","lastModifiedDate":"2024-02-01"},{"lineNumber":134,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":135,"author":{"gitId":"cheahTJ"},"content":"     * @param taskNum The position of the task in the tasklist which the user wants to un-mark.","lastModifiedDate":"2024-02-01"},{"lineNumber":136,"author":{"gitId":"cheahTJ"},"content":"     * @param allTasks The list of all the tasks that the user has in which to un-mark the task from.","lastModifiedDate":"2024-02-01"},{"lineNumber":137,"author":{"gitId":"cheahTJ"},"content":"     * @throws PingMeException If the user tries to un-mark a task which has not been completed.","lastModifiedDate":"2024-02-02"},{"lineNumber":138,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":139,"author":{"gitId":"cheahTJ"},"content":"    public void unmarkTaskText(int taskNum, TaskList allTasks) throws PingMeException {","lastModifiedDate":"2024-02-02"},{"lineNumber":140,"author":{"gitId":"cheahTJ"},"content":"        String toUserUponUnmarkingTask \u003d \"\";","lastModifiedDate":"2024-01-30"},{"lineNumber":141,"author":{"gitId":"cheahTJ"},"content":"        if (allTasks.taskStatusIcon(taskNum).equals(\" \")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":142,"author":{"gitId":"cheahTJ"},"content":"            throw new PingMeException(\"You cannot un-mark task which has not been marked!\");","lastModifiedDate":"2024-02-02"},{"lineNumber":143,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":144,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":145,"author":{"gitId":"cheahTJ"},"content":"        allTasks.taskUncheckTask(taskNum);","lastModifiedDate":"2024-01-30"},{"lineNumber":146,"author":{"gitId":"cheahTJ"},"content":"        toUserUponUnmarkingTask +\u003d \"OK, I\u0027ve marked this task as not done yet:\";","lastModifiedDate":"2024-01-30"},{"lineNumber":147,"author":{"gitId":"cheahTJ"},"content":"        toUserUponUnmarkingTask +\u003d \"\\n\" + \"  \" + allTasks.taskToString(taskNum);","lastModifiedDate":"2024-01-30"},{"lineNumber":148,"author":{"gitId":"cheahTJ"},"content":"        System.out.println(toUserUponUnmarkingTask);","lastModifiedDate":"2024-01-30"},{"lineNumber":149,"author":{"gitId":"cheahTJ"},"content":"        response.add(toUserUponUnmarkingTask);","lastModifiedDate":"2024-02-07"},{"lineNumber":150,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":151,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":152,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":153,"author":{"gitId":"cheahTJ"},"content":"     * Sends the specified error message to the user.","lastModifiedDate":"2024-02-01"},{"lineNumber":154,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":155,"author":{"gitId":"cheahTJ"},"content":"     * @param errorMessage Specified error message.","lastModifiedDate":"2024-02-01"},{"lineNumber":156,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":157,"author":{"gitId":"cheahTJ"},"content":"    public void showError(String errorMessage) {","lastModifiedDate":"2024-01-30"},{"lineNumber":158,"author":{"gitId":"cheahTJ"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2024-01-30"},{"lineNumber":159,"author":{"gitId":"cheahTJ"},"content":"        response.add(errorMessage);","lastModifiedDate":"2024-02-07"},{"lineNumber":160,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":161,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":162,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":163,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":164,"author":{"gitId":"cheahTJ"},"content":"     * Returns back the response stored in the response variable to be rendered on the GUI.","lastModifiedDate":"2024-02-07"},{"lineNumber":165,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":166,"author":{"gitId":"cheahTJ"},"content":"     * @return The response to the user.","lastModifiedDate":"2024-02-07"},{"lineNumber":167,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":168,"author":{"gitId":"cheahTJ"},"content":"    public String givesBackResponse() {","lastModifiedDate":"2024-02-07"},{"lineNumber":169,"author":{"gitId":"cheahTJ"},"content":"        String messageWithNewLine \u003d String.join(\"\\n\", response);","lastModifiedDate":"2024-02-07"},{"lineNumber":170,"author":{"gitId":"cheahTJ"},"content":"        response.clear();","lastModifiedDate":"2024-02-07"},{"lineNumber":171,"author":{"gitId":"cheahTJ"},"content":"        return messageWithNewLine;","lastModifiedDate":"2024-02-07"},{"lineNumber":172,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":173,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":174,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":175,"author":{"gitId":"cheahTJ"},"content":"     * Send a message to the user to inform the user of the task which he/she has postponed.","lastModifiedDate":"2024-02-19"},{"lineNumber":176,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":177,"author":{"gitId":"cheahTJ"},"content":"     * @param taskNum The task number in the task list of the task he/she wants to postpone.","lastModifiedDate":"2024-02-19"},{"lineNumber":178,"author":{"gitId":"cheahTJ"},"content":"     * @param allTasks The list of all tasks to postpone from.","lastModifiedDate":"2024-02-19"},{"lineNumber":179,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":180,"author":{"gitId":"cheahTJ"},"content":"    public void postponeTaskText(int taskNum, TaskList allTasks) {","lastModifiedDate":"2024-02-19"},{"lineNumber":181,"author":{"gitId":"cheahTJ"},"content":"        String toUserUponPostponing \u003d \"\";","lastModifiedDate":"2024-02-19"},{"lineNumber":182,"author":{"gitId":"cheahTJ"},"content":"        toUserUponPostponing +\u003d (\"\\n\" + \"Got it. I\u0027ve postponed this task to:\");","lastModifiedDate":"2024-02-19"},{"lineNumber":183,"author":{"gitId":"cheahTJ"},"content":"        toUserUponPostponing +\u003d \"\\n\" + \"  \" + allTasks.taskToString(taskNum);","lastModifiedDate":"2024-02-19"},{"lineNumber":184,"author":{"gitId":"cheahTJ"},"content":"        System.out.println(toUserUponPostponing);","lastModifiedDate":"2024-02-19"},{"lineNumber":185,"author":{"gitId":"cheahTJ"},"content":"        response.add(toUserUponPostponing);","lastModifiedDate":"2024-02-19"},{"lineNumber":186,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":187,"author":{"gitId":"cheahTJ"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"cheahTJ":187}},{"path":"src/main/java/pingmebot/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheahTJ"},"content":"package pingmebot.command;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"cheahTJ"},"content":"import pingmebot.PingMeException;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"cheahTJ"},"content":"import pingmebot.Storage;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"cheahTJ"},"content":"import pingmebot.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"cheahTJ"},"content":"import pingmebot.UI;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"cheahTJ"},"content":"import pingmebot.task.Task;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"cheahTJ"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"cheahTJ"},"content":" * Represents a command for the user to add a task from the task list in the application.","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"cheahTJ"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"cheahTJ"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"cheahTJ"},"content":"    private Task task;","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"cheahTJ"},"content":"     * Creates an AddCommand object with the specific task specified by the user.","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"cheahTJ"},"content":"     * @param task User\u0027s specified task.","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"cheahTJ"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"cheahTJ"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"cheahTJ"},"content":"     * Executes the command to update user\u0027s desired todo, deadline and events tasks to the task list, storage.","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"cheahTJ"},"content":"     * It also responds the corresponding reply to the user via the ui object.","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"cheahTJ"},"content":"     * @param tasks The task list containing all the tasks which the user has added.","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"cheahTJ"},"content":"     * @param storage The local storage holding all the information about the entire task list.","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"cheahTJ"},"content":"     * @param ui The object responsible for displaying corresponding response to the user.","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"cheahTJ"},"content":"     * @throws PingMeException If an error occurs during the execution process.","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"cheahTJ"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"cheahTJ"},"content":"    public void execute(TaskList tasks, Storage storage, UI ui) throws PingMeException {","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"cheahTJ"},"content":"        tasks.addTask(task);","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"cheahTJ"},"content":"        tasks.updateTaskToStorage(storage);","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"cheahTJ"},"content":"        ui.additionToTasksText(task, tasks);","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"cheahTJ"},"content":"     * Returns a boolean to see if the 2 AddCommand objects are the same by comparing the task that it has.","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"cheahTJ"},"content":"     * @param obj The other command to be compared to.","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"cheahTJ"},"content":"     * @return A boolean to see if the 2 AddCommand objects are the same.","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"cheahTJ"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"cheahTJ"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"cheahTJ"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"cheahTJ"},"content":"            return true;","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"cheahTJ"},"content":"        if (obj \u003d\u003d null || getClass() !\u003d obj.getClass()) {","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"cheahTJ"},"content":"            return false;","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"cheahTJ"},"content":"        AddCommand otherCommand \u003d (AddCommand) obj;","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"cheahTJ"},"content":"        return this.task.equals(otherCommand.task);","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"cheahTJ"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"cheahTJ":61}},{"path":"src/main/java/pingmebot/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheahTJ"},"content":"package pingmebot.command;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"cheahTJ"},"content":"import pingmebot.PingMeException;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"cheahTJ"},"content":"import pingmebot.Storage;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"cheahTJ"},"content":"import pingmebot.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"cheahTJ"},"content":"import pingmebot.UI;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"cheahTJ"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"cheahTJ"},"content":" * Represents an abstract base class for all command objects in the application.","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"cheahTJ"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"cheahTJ"},"content":"public abstract class Command {","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"cheahTJ"},"content":"     * Executes the command to conduct specific actions given by the user, updating the task list, local storage.","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"cheahTJ"},"content":"     * This command will also generate the corresponding response to the user via the ui.","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"cheahTJ"},"content":"     * @param tasks The task list containing all the tasks which the user has added.","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"cheahTJ"},"content":"     * @param storage The local storage holding all the information about the entire task list.","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"cheahTJ"},"content":"     * @param ui The object responsible for displaying corresponding response to the user.","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"cheahTJ"},"content":"     * @throws PingMeException","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"cheahTJ"},"content":"    public abstract void execute(TaskList tasks, Storage storage, UI ui) throws PingMeException;","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"cheahTJ"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"cheahTJ":23}},{"path":"src/main/java/pingmebot/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheahTJ"},"content":"package pingmebot.command;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"cheahTJ"},"content":"import pingmebot.PingMeException;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"cheahTJ"},"content":"import pingmebot.Storage;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"cheahTJ"},"content":"import pingmebot.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"cheahTJ"},"content":"import pingmebot.UI;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"cheahTJ"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"cheahTJ"},"content":" * Represents a command for the user to delete a task from the task list in the application.","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"cheahTJ"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"cheahTJ"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"cheahTJ"},"content":"    private int taskNumber;","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"cheahTJ"},"content":"     * Constructs a DeleteCommand object to allow user to delete the task in his/her task list.","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"cheahTJ"},"content":"     * @param taskNumber The number corresponding to the task in the list the user wants to delete.","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"cheahTJ"},"content":"    public DeleteCommand(int taskNumber) {","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"cheahTJ"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"cheahTJ"},"content":"     * Execute the command to allow user to delete a task from his/her task list and local storage.","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"cheahTJ"},"content":"     * It also responds the corresponding reply to the user via the ui object.","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"cheahTJ"},"content":"     * @param tasks The task list containing all the tasks which the user has added.","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"cheahTJ"},"content":"     * @param storage The local storage holding all the information about the entire task list.","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"cheahTJ"},"content":"     * @param ui The object responsible for displaying corresponding response to the user.","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"cheahTJ"},"content":"     * @throws PingMeException If an error occurs during the execution process.","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"cheahTJ"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"cheahTJ"},"content":"    public void execute(TaskList tasks, Storage storage, UI ui) throws PingMeException {","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"cheahTJ"},"content":"        ui.deletionToTasksText(taskNumber, tasks);","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"cheahTJ"},"content":"        tasks.updateTaskToStorage(storage);","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"cheahTJ"},"content":"     * Returns a boolean to see if the 2 DeleteCommand objects are the same by comparing the task number that it holds.","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"cheahTJ"},"content":"     * @param obj The other command to be compared to.","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"cheahTJ"},"content":"     * @return A boolean to see if the 2 DeleteCommand objects are the same.","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"cheahTJ"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"cheahTJ"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"cheahTJ"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"cheahTJ"},"content":"            return true;","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"cheahTJ"},"content":"        if (obj \u003d\u003d null || getClass() !\u003d obj.getClass()) {","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"cheahTJ"},"content":"            return false;","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"cheahTJ"},"content":"        DeleteCommand otherCommand \u003d (DeleteCommand) obj;","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"cheahTJ"},"content":"        return this.taskNumber \u003d\u003d otherCommand.taskNumber;","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"cheahTJ"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"cheahTJ":59}},{"path":"src/main/java/pingmebot/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheahTJ"},"content":"package pingmebot.command;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"cheahTJ"},"content":"import pingmebot.PingMeException;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"cheahTJ"},"content":"import pingmebot.Storage;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"cheahTJ"},"content":"import pingmebot.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"cheahTJ"},"content":"import pingmebot.UI;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"cheahTJ"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"cheahTJ"},"content":" * Represents a command for the user to exit from the application.","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"cheahTJ"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"cheahTJ"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"cheahTJ"},"content":"     * Executes the command to say goodbye to the user when he/she decides to end the conversation.","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"cheahTJ"},"content":"     * @param tasks The task list containing all the tasks which the user has added.","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"cheahTJ"},"content":"     * @param storage The local storage holding all the information about the entire task list.","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"cheahTJ"},"content":"     * @param ui The object responsible for displaying corresponding response to the user.","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"cheahTJ"},"content":"     * @throws PingMeException If an error occurs during the execution process.","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"cheahTJ"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"cheahTJ"},"content":"    public void execute(TaskList tasks, Storage storage, UI ui) throws PingMeException {","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"cheahTJ"},"content":"        ui.sayGoodbye();","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"cheahTJ"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"cheahTJ":25}},{"path":"src/main/java/pingmebot/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheahTJ"},"content":"package pingmebot.command;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"cheahTJ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"cheahTJ"},"content":"import pingmebot.PingMeException;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"cheahTJ"},"content":"import pingmebot.Storage;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"cheahTJ"},"content":"import pingmebot.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"cheahTJ"},"content":"import pingmebot.UI;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"cheahTJ"},"content":"import pingmebot.task.Task;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"cheahTJ"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"cheahTJ"},"content":" * Represents a command for the user to find a task from the task list in the application.","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"cheahTJ"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"cheahTJ"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"cheahTJ"},"content":"    private String keyword;","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"cheahTJ"},"content":"     * Constructs a find command with a specified keyword which the user wants to find in his/her list.","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"cheahTJ"},"content":"     * @param keyword","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"cheahTJ"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"cheahTJ"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"cheahTJ"},"content":"     * Executes the command to help user locate the task in his/her list, if it exists.","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"cheahTJ"},"content":"     * It also responds the corresponding reply to the user via the ui object.","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"cheahTJ"},"content":"     * @param tasks The task list containing all the tasks which the user has added.","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"cheahTJ"},"content":"     * @param storage The local storage holding all the information about the entire task list.","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"cheahTJ"},"content":"     * @param ui The object responsible for displaying corresponding response to the user.","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"cheahTJ"},"content":"     * @throws PingMeException If an error occurs during the execution process.","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"cheahTJ"},"content":"    public void execute(TaskList tasks, Storage storage, UI ui) throws PingMeException {","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"cheahTJ"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d tasks.findMatchingTask(keyword);","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"cheahTJ"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"cheahTJ"},"content":"            ui.showError(\"No matching results found!\");","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"cheahTJ"},"content":"        } else {","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"cheahTJ"},"content":"            ui.listMatchingText(tasks);","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"cheahTJ"},"content":"     * Returns a boolean to see if the 2 FindCommand objects are the same by comparing the keyword that it holds.","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"cheahTJ"},"content":"     * @param obj The other command to be compared to.","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"cheahTJ"},"content":"     * @return A boolean to see if the 2 FindCommand objects are the same.","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"cheahTJ"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"cheahTJ"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"cheahTJ"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"cheahTJ"},"content":"            return true;","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"cheahTJ"},"content":"        if (obj \u003d\u003d null || getClass() !\u003d obj.getClass()) {","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"cheahTJ"},"content":"            return false;","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"cheahTJ"},"content":"        FindCommand otherCommand \u003d (FindCommand) obj;","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"cheahTJ"},"content":"        return this.keyword.equals(otherCommand.keyword);","lastModifiedDate":"2024-02-07"},{"lineNumber":65,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":66,"author":{"gitId":"cheahTJ"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"cheahTJ":66}},{"path":"src/main/java/pingmebot/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheahTJ"},"content":"package pingmebot.command;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"cheahTJ"},"content":"import pingmebot.PingMeException;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"cheahTJ"},"content":"import pingmebot.Storage;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"cheahTJ"},"content":"import pingmebot.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"cheahTJ"},"content":"import pingmebot.UI;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"cheahTJ"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"cheahTJ"},"content":" * Represents a command for the user to list all tasks from the task list in the application.","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"cheahTJ"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"cheahTJ"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"cheahTJ"},"content":"     * Executes the command to allow the user to list out the total number of tasks in his/her task list currently.","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"cheahTJ"},"content":"     * @param tasks The task list containing all the tasks which the user has added.","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"cheahTJ"},"content":"     * @param storage The local storage holding all the information about the entire task list.","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"cheahTJ"},"content":"     * @param ui The object responsible for displaying corresponding response to the user.","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"cheahTJ"},"content":"     * @throws PingMeException If an error occurs during the execution process.","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"cheahTJ"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"cheahTJ"},"content":"    public void execute(TaskList tasks, Storage storage, UI ui) throws PingMeException {","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"cheahTJ"},"content":"        ui.listText(tasks);","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"cheahTJ"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"cheahTJ":25}},{"path":"src/main/java/pingmebot/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheahTJ"},"content":"package pingmebot.command;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"cheahTJ"},"content":"import pingmebot.PingMeException;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"cheahTJ"},"content":"import pingmebot.Storage;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"cheahTJ"},"content":"import pingmebot.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"cheahTJ"},"content":"import pingmebot.UI;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"cheahTJ"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"cheahTJ"},"content":" * Represents a command for the user to mark a task from the task list in the application.","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"cheahTJ"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"cheahTJ"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"cheahTJ"},"content":"    private int taskNumber;","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"cheahTJ"},"content":"     * Constructs a MarkCommand object to allow user to mark the task in his/her task list as completed.","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"cheahTJ"},"content":"     * @param taskNumber The number corresponding to the task in the list the user wants to mark as completed.","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"cheahTJ"},"content":"    public MarkCommand(int taskNumber) {","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"cheahTJ"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"cheahTJ"},"content":"     * Executes the command to allow user to mark a task as completed and updating the local storage thereafter.","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"cheahTJ"},"content":"     * It also responds the corresponding reply to the user via the ui object.","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"cheahTJ"},"content":"     * @param tasks The task list containing all the tasks which the user has added.","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"cheahTJ"},"content":"     * @param storage The local storage holding all the information about the entire task list.","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"cheahTJ"},"content":"     * @param ui The object responsible for displaying corresponding response to the user.","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"cheahTJ"},"content":"     * @throws PingMeException If an error occurs during the execution process.","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"cheahTJ"},"content":"    public void execute(TaskList tasks, Storage storage, UI ui) throws PingMeException {","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"cheahTJ"},"content":"        tasks.updateTaskToStorage(storage);","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"cheahTJ"},"content":"        ui.markTaskText(taskNumber, tasks);","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"cheahTJ"},"content":"     * Returns a boolean to see if the 2 MarkCommand objects are the same by comparing the task number that it holds.","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"cheahTJ"},"content":"     * @param obj The other command to be compared to.","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"cheahTJ"},"content":"     * @return A boolean to see if the 2 MarkCommand objects are the same.","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"cheahTJ"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"cheahTJ"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"cheahTJ"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"cheahTJ"},"content":"            return true;","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"cheahTJ"},"content":"        if (obj \u003d\u003d null || getClass() !\u003d obj.getClass()) {","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"cheahTJ"},"content":"            return false;","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"cheahTJ"},"content":"        MarkCommand otherCommand \u003d (MarkCommand) obj;","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"cheahTJ"},"content":"        return this.taskNumber \u003d\u003d otherCommand.taskNumber;","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"cheahTJ"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"cheahTJ":56}},{"path":"src/main/java/pingmebot/command/PostponeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheahTJ"},"content":"package pingmebot.command;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"cheahTJ"},"content":"import pingmebot.PingMeException;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"cheahTJ"},"content":"import pingmebot.Storage;","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"cheahTJ"},"content":"import pingmebot.TaskList;","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"cheahTJ"},"content":"import pingmebot.UI;","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"cheahTJ"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"cheahTJ"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"cheahTJ"},"content":" * Represents a command for the user to postpone a task from the task list in the application.","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"cheahTJ"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"cheahTJ"},"content":"public class PostponeCommand extends Command {","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"cheahTJ"},"content":"    private int taskNumber;","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"cheahTJ"},"content":"    private String timingStart;","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"cheahTJ"},"content":"    private String timingEnd;","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"cheahTJ"},"content":"    private LocalDateTime by;","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"cheahTJ"},"content":"     * Creates an PostponeCommand object with the number from the task list, the new start","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"cheahTJ"},"content":"     * and end timing.","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"cheahTJ"},"content":"     * @param taskNumber The number in the task list.","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"cheahTJ"},"content":"     * @param timingStart The new, postponed start timing for the events task.","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"cheahTJ"},"content":"     * @param timingEnd The new, postponed end timing for the events task.","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"cheahTJ"},"content":"     * @param by The new timing to complete the deadline task by.","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"cheahTJ"},"content":"    public PostponeCommand(int taskNumber, String timingStart, String timingEnd, LocalDateTime by) {","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"cheahTJ"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"cheahTJ"},"content":"        this.timingStart \u003d timingStart;","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"cheahTJ"},"content":"        this.timingEnd \u003d timingEnd;","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"cheahTJ"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"cheahTJ"},"content":"     * Executes the command to allow user to postpone a task, updating the","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"cheahTJ"},"content":"     * local storage and showing the message to the user.","lastModifiedDate":"2024-02-19"},{"lineNumber":41,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"cheahTJ"},"content":"     * @param tasks The task list containing all the tasks which the user has added.","lastModifiedDate":"2024-02-19"},{"lineNumber":43,"author":{"gitId":"cheahTJ"},"content":"     * @param storage The local storage holding all the information about the entire task list.","lastModifiedDate":"2024-02-19"},{"lineNumber":44,"author":{"gitId":"cheahTJ"},"content":"     * @param ui The object responsible for displaying corresponding response to the user.","lastModifiedDate":"2024-02-19"},{"lineNumber":45,"author":{"gitId":"cheahTJ"},"content":"     * @throws PingMeException","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"cheahTJ"},"content":"    @Override","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"cheahTJ"},"content":"    public void execute(TaskList tasks, Storage storage, UI ui) throws PingMeException {","lastModifiedDate":"2024-02-19"},{"lineNumber":49,"author":{"gitId":"cheahTJ"},"content":"        tasks.postponeTask(taskNumber, timingStart, timingEnd, by);","lastModifiedDate":"2024-02-19"},{"lineNumber":50,"author":{"gitId":"cheahTJ"},"content":"        tasks.updateTaskToStorage(storage);","lastModifiedDate":"2024-02-19"},{"lineNumber":51,"author":{"gitId":"cheahTJ"},"content":"        ui.postponeTaskText(taskNumber, tasks);","lastModifiedDate":"2024-02-19"},{"lineNumber":52,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":53,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":54,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":55,"author":{"gitId":"cheahTJ"},"content":"}","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"cheahTJ":55}},{"path":"src/main/java/pingmebot/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheahTJ"},"content":"package pingmebot.command;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"cheahTJ"},"content":"import pingmebot.PingMeException;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"cheahTJ"},"content":"import pingmebot.Storage;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"cheahTJ"},"content":"import pingmebot.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"cheahTJ"},"content":"import pingmebot.UI;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"cheahTJ"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"cheahTJ"},"content":" * Represents a command for the user to un-mark a task from the task list in the application.","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"cheahTJ"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"cheahTJ"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"cheahTJ"},"content":"    private int taskNumber;","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"cheahTJ"},"content":"     * Constructs a UnmarkCommand object to allow user to un-mark the task in his/her task list as un-completed.","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"cheahTJ"},"content":"     * @param taskNumber The number corresponding to the task in the list the user wants to un-mark as un-completed.","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"cheahTJ"},"content":"    public UnmarkCommand(int taskNumber) {","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"cheahTJ"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"cheahTJ"},"content":"     * Executes the command to allow user to unmark a task as un-completed and updating the local storage thereafter.","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"cheahTJ"},"content":"     * It also responds the corresponding reply to the user via the ui object.","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"cheahTJ"},"content":"     * @param tasks The task list containing all the tasks which the user has added.","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"cheahTJ"},"content":"     * @param storage The local storage holding all the information about the entire task list.","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"cheahTJ"},"content":"     * @param ui The object responsible for displaying corresponding response to the user.","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"cheahTJ"},"content":"     * @throws PingMeException If an error occurs during the execution process.","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"cheahTJ"},"content":"    public void execute(TaskList tasks, Storage storage, UI ui) throws PingMeException {","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"cheahTJ"},"content":"        tasks.updateTaskToStorage(storage);","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"cheahTJ"},"content":"        ui.unmarkTaskText(taskNumber, tasks);","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"cheahTJ"},"content":"     * Returns a boolean to see if the 2 UnmarkCommand objects are the same by comparing the task number that it holds.","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"cheahTJ"},"content":"     * @param obj The other command to be compared to.","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"cheahTJ"},"content":"     * @return A boolean to see if the 2 UnmarkCommand objects are the same.","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"cheahTJ"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"cheahTJ"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"cheahTJ"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"cheahTJ"},"content":"            return true;","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"cheahTJ"},"content":"        if (obj \u003d\u003d null || getClass() !\u003d obj.getClass()) {","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"cheahTJ"},"content":"            return false;","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"cheahTJ"},"content":"        UnmarkCommand otherCommand \u003d (UnmarkCommand) obj;","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"cheahTJ"},"content":"        return this.taskNumber \u003d\u003d otherCommand.taskNumber;","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"cheahTJ"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"cheahTJ":56}},{"path":"src/main/java/pingmebot/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheahTJ"},"content":"package pingmebot.task;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"cheahTJ"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"cheahTJ"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"cheahTJ"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"cheahTJ"},"content":" * A category of task that has a task description and a datetime to complete it by.","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"cheahTJ"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"cheahTJ"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"cheahTJ"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"cheahTJ"},"content":"    protected String description;","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"cheahTJ"},"content":"     * Creates a Deadline object with a specified task description and a datetime to complete the task by.","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"cheahTJ"},"content":"     * @param description Task\u0027s description.","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"cheahTJ"},"content":"     * @param by Datetime to finish the task by.","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"cheahTJ"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"cheahTJ"},"content":"        super(description);","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"cheahTJ"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"cheahTJ"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"cheahTJ"},"content":"     * Returns a string representation of the deadline task.","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"cheahTJ"},"content":"     * @return A string representation of the deadline task.","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"cheahTJ"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":31,"author":{"gitId":"cheahTJ"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":32,"author":{"gitId":"cheahTJ"},"content":"        return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"cheahTJ"},"content":"                + this.by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy, HHmm\")) + \")\";","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":35,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":36,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"cheahTJ"},"content":"     * Returns a string representation that is saved to the local file whenever a deadline task is completed.","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"cheahTJ"},"content":"     * @param isCompleted Integer boolean flag to indicate if the task is completed.","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"cheahTJ"},"content":"     * @return A string representation when a deadline task is completed.","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"cheahTJ"},"content":"    public String updateDeadlineText(int isCompleted) {","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"cheahTJ"},"content":"        String text \u003d \"\";","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"cheahTJ"},"content":"        text +\u003d \"deadline | \" + isCompleted + \" | \" + this.description + \" | \"","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"cheahTJ"},"content":"                + this.by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\"));","lastModifiedDate":"2024-02-12"},{"lineNumber":46,"author":{"gitId":"cheahTJ"},"content":"        return text;","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"cheahTJ"},"content":"     * Returns true only when 2 objects have the same description and the date time to complete the task by.","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"cheahTJ"},"content":"     * @param obj The object that is being compared to.","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"cheahTJ"},"content":"     * @return A boolean to indicate if 2 objects have the same description and the date time to complete the task by.","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"cheahTJ"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"cheahTJ"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"cheahTJ"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"cheahTJ"},"content":"            return true;","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"cheahTJ"},"content":"        if (obj \u003d\u003d null || getClass() !\u003d obj.getClass()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"cheahTJ"},"content":"            return false;","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"cheahTJ"},"content":"        Deadline otherDeadline \u003d (Deadline) obj;","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"cheahTJ"},"content":"        return this.description.equals(otherDeadline.description)","lastModifiedDate":"2024-02-12"},{"lineNumber":67,"author":{"gitId":"cheahTJ"},"content":"                \u0026\u0026 this.by.equals(otherDeadline.by);","lastModifiedDate":"2024-02-12"},{"lineNumber":68,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":70,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":71,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":72,"author":{"gitId":"cheahTJ"},"content":"     * Sets the deadline task\u0027s finish by timing with a new timing.","lastModifiedDate":"2024-02-19"},{"lineNumber":73,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":74,"author":{"gitId":"cheahTJ"},"content":"     * @param newTiming The new timing to complete the deadline task.","lastModifiedDate":"2024-02-19"},{"lineNumber":75,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":76,"author":{"gitId":"cheahTJ"},"content":"    public void setDeadlineByTiming(LocalDateTime newTiming) {","lastModifiedDate":"2024-02-19"},{"lineNumber":77,"author":{"gitId":"cheahTJ"},"content":"        by \u003d newTiming;","lastModifiedDate":"2024-02-19"},{"lineNumber":78,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":79,"author":{"gitId":"cheahTJ"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"cheahTJ":79}},{"path":"src/main/java/pingmebot/task/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheahTJ"},"content":"package pingmebot.task;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"cheahTJ"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"cheahTJ"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"cheahTJ"},"content":" * A category of task that has a task description, and a start and end date or time to complete the task by.","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"cheahTJ"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"cheahTJ"},"content":"public class Events extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"cheahTJ"},"content":"    protected String start;","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"cheahTJ"},"content":"    protected String end;","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"cheahTJ"},"content":"    protected String description;","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"cheahTJ"},"content":"     * Creates an object with the initialisation of the task\u0027s description, start and end date or time.","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"cheahTJ"},"content":"     * @param description The task\u0027s description.","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"cheahTJ"},"content":"     * @param start The starting date or time of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"cheahTJ"},"content":"     * @param end The ending date or time of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"cheahTJ"},"content":"    public Events(String description, String start, String end) {","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"cheahTJ"},"content":"        super(description);","lastModifiedDate":"2024-01-22"},{"lineNumber":22,"author":{"gitId":"cheahTJ"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"cheahTJ"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"cheahTJ"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":26,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"cheahTJ"},"content":"     * Returns a string representation of the Events task.","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"cheahTJ"},"content":"     * @return A string representation of the Events task.","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"cheahTJ"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":33,"author":{"gitId":"cheahTJ"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":34,"author":{"gitId":"cheahTJ"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + start + \",\" + \" to: \" + end + \")\";","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":36,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"cheahTJ"},"content":"     * Returns a string representation that is saved to the local file whenever an Events task is completed.","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"cheahTJ"},"content":"     * @param isCompleted Integer boolean flag to indicate if the task is completed.","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"cheahTJ"},"content":"     * @return A string representation when a Events task is completed.","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"cheahTJ"},"content":"    public String updateEventText(int isCompleted) {","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"cheahTJ"},"content":"        String text \u003d \"\";","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"cheahTJ"},"content":"        text +\u003d \"event | \" + isCompleted + \" | \" + this.description + \" | \" + this.start + \" | \" + this.end;","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"cheahTJ"},"content":"        return text;","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"cheahTJ"},"content":"     * Returns true only when 2 objects have the same description and the starting and ending date or time of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"cheahTJ"},"content":"     * @param obj The object that is being compared to.","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"cheahTJ"},"content":"     * @return A boolean to indicate if 2 objects have the same description and ending date or time of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"cheahTJ"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"cheahTJ"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"cheahTJ"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"cheahTJ"},"content":"            return true;","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"cheahTJ"},"content":"        if (obj \u003d\u003d null || getClass() !\u003d obj.getClass()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"cheahTJ"},"content":"            return false;","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"cheahTJ"},"content":"        Events otherEvent \u003d (Events) obj;","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"cheahTJ"},"content":"        return this.description.equals(otherEvent.description)","lastModifiedDate":"2024-02-19"},{"lineNumber":67,"author":{"gitId":"cheahTJ"},"content":"                \u0026\u0026 this.start.equals(otherEvent.start) \u0026\u0026 this.end.equals(otherEvent.end);","lastModifiedDate":"2024-02-19"},{"lineNumber":68,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":70,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":71,"author":{"gitId":"cheahTJ"},"content":"     * Sets the events task\u0027s from timing with a new timing.","lastModifiedDate":"2024-02-19"},{"lineNumber":72,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":73,"author":{"gitId":"cheahTJ"},"content":"     * @param from The new start timing of the event task.","lastModifiedDate":"2024-02-19"},{"lineNumber":74,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":75,"author":{"gitId":"cheahTJ"},"content":"    public void setEventsFromTiming(String from) {","lastModifiedDate":"2024-02-19"},{"lineNumber":76,"author":{"gitId":"cheahTJ"},"content":"        start \u003d from;","lastModifiedDate":"2024-02-19"},{"lineNumber":77,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":78,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":79,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":80,"author":{"gitId":"cheahTJ"},"content":"     * Sets the events task\u0027s to timing with a new timing.","lastModifiedDate":"2024-02-19"},{"lineNumber":81,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":82,"author":{"gitId":"cheahTJ"},"content":"     * @param to The new end timing of the event task.","lastModifiedDate":"2024-02-19"},{"lineNumber":83,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":84,"author":{"gitId":"cheahTJ"},"content":"    public void setEventsToTiming(String to) {","lastModifiedDate":"2024-02-19"},{"lineNumber":85,"author":{"gitId":"cheahTJ"},"content":"        end \u003d to;","lastModifiedDate":"2024-02-19"},{"lineNumber":86,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":87,"author":{"gitId":"cheahTJ"},"content":"}","lastModifiedDate":"2024-01-22"},{"lineNumber":88,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":89,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"cheahTJ":89}},{"path":"src/main/java/pingmebot/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheahTJ"},"content":"package pingmebot.task;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"cheahTJ"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"cheahTJ"},"content":" * Represents a task with a task description and a boolean flag to know if the task has been completed.","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"cheahTJ"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"cheahTJ"},"content":"public class Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"cheahTJ"},"content":"    protected String description;","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"cheahTJ"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"cheahTJ"},"content":"     * Creates a task object with the task description and a boolean flag initialised.","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"cheahTJ"},"content":"     * @param description Task\u0027s description.","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"cheahTJ"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"cheahTJ"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"cheahTJ"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"cheahTJ"},"content":"     * Returns a specified task\u0027s status icon.","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"cheahTJ"},"content":"     * @return The specified task\u0027s status icon.","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"cheahTJ"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-22"},{"lineNumber":26,"author":{"gitId":"cheahTJ"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":28,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":29,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"cheahTJ"},"content":"     * Marks the task as completed by setting the isDone boolean flag to true.","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"cheahTJ"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-22"},{"lineNumber":33,"author":{"gitId":"cheahTJ"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-22"},{"lineNumber":34,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":35,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":36,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"cheahTJ"},"content":"     * Unmarks the task as uncompleted by setting the isDone boolean flag to false.","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"cheahTJ"},"content":"    public void uncheckingTask() {","lastModifiedDate":"2024-01-22"},{"lineNumber":40,"author":{"gitId":"cheahTJ"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-22"},{"lineNumber":41,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":42,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":43,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"cheahTJ"},"content":"     * Returns a string representation to know if a task has been completed or not.","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"cheahTJ"},"content":"     * @return A string to indicate if task has been completed or not.","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"cheahTJ"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":49,"author":{"gitId":"cheahTJ"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":50,"author":{"gitId":"cheahTJ"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2024-01-22"},{"lineNumber":51,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":52,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"cheahTJ"},"content":"     * Returns an integer boolean flag of the isDone variable.","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"cheahTJ"},"content":"     * @return An integer representation to indicate if the task has been completed or not.","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"cheahTJ"},"content":"    public int hasCompleted() {","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"cheahTJ"},"content":"        return this.isDone ? 1 : 0;","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"cheahTJ"},"content":"     * Returns the description of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"cheahTJ"},"content":"     * @return Description of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"cheahTJ"},"content":"    public String getDescription() {","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"cheahTJ"},"content":"        return this.description;","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"cheahTJ"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"cheahTJ":71}},{"path":"src/main/java/pingmebot/task/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheahTJ"},"content":"package pingmebot.task;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"cheahTJ"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"cheahTJ"},"content":" * A category of task that has a task description.","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"cheahTJ"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"cheahTJ"},"content":"public class ToDos extends Task {","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"cheahTJ"},"content":"    protected String description;","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"cheahTJ"},"content":"     * Creates a Deadline object with a specified task description.","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"cheahTJ"},"content":"     * @param description Task\u0027s description.","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"cheahTJ"},"content":"    public ToDos(String description) {","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"cheahTJ"},"content":"        super(description);","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"cheahTJ"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"cheahTJ"},"content":"     * Returns a string representation of the ToDos task.","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"cheahTJ"},"content":"     * @return A string representation of the ToDos task.","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"cheahTJ"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"cheahTJ"},"content":"    public String toString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"cheahTJ"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"cheahTJ"},"content":"     * Returns a string representation that is saved to the local file whenever a ToDos task is completed.","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"cheahTJ"},"content":"     * @param isCompleted Integer boolean flag to indicate if the task is completed.","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"cheahTJ"},"content":"     * @return A string representation when a ToDos task is completed.","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"cheahTJ"},"content":"    public String updateToDoText(int isCompleted) {","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"cheahTJ"},"content":"        String text \u003d \"\";","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"cheahTJ"},"content":"        text +\u003d \"todo | \" + isCompleted + \" | \" + this.description;","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"cheahTJ"},"content":"        return text;","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"cheahTJ"},"content":"     * Returns true only when 2 objects have the same description.","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"cheahTJ"},"content":"     * @param obj The object that is being compared to.","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"cheahTJ"},"content":"     * @return A boolean to indicate if 2 objects have the same description.","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"cheahTJ"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"cheahTJ"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"cheahTJ"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"cheahTJ"},"content":"            return true;","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"cheahTJ"},"content":"        if (obj \u003d\u003d null || getClass() !\u003d obj.getClass()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"cheahTJ"},"content":"            return false;","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"cheahTJ"},"content":"        ToDos otherToDo \u003d (ToDos) obj;","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"cheahTJ"},"content":"        return this.description.equals(otherToDo.description);","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"cheahTJ"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"cheahTJ":61}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"cheahTJ"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"cheahTJ"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"cheahTJ"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"cheahTJ"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"cheahTJ"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"cheahTJ"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"cheahTJ"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"cheahTJ"},"content":"        \u003cVBox styleClass\u003d\"dialog-container\" minWidth\u003d\"75.00\" maxWidth\u003d\"1.7976931348623157E308\" maxHeight\u003d\"1.7976931348623157E308\"\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"cheahTJ"},"content":"            \u003cText fx:id\u003d\"content\" styleClass\u003d\"dialog-text\" wrappingWidth\u003d\"180.0\"/\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"cheahTJ"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"cheahTJ"},"content":"        \u003cVBox minWidth\u003d\"7.0\"\u003e\u003c/VBox\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"cheahTJ"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\"  styleClass\u003d\"dialog-image\" fitHeight\u003d\"99.0\" fitWidth\u003d\"60.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"cheahTJ"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"cheahTJ"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"cheahTJ"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"cheahTJ"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"cheahTJ"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"cheahTJ":20}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"cheahTJ"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"cheahTJ"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"cheahTJ"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"cheahTJ"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"cheahTJ"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"cheahTJ"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"cheahTJ"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"pingmebot.MainWindow\"\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"cheahTJ"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"cheahTJ"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"cheahTJ"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"cheahTJ"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"cheahTJ"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"cheahTJ"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"cheahTJ"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"cheahTJ"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"cheahTJ"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"cheahTJ"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"cheahTJ":19}},{"path":"src/test/java/pingmebot/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheahTJ"},"content":"package pingmebot;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"cheahTJ"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"cheahTJ"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"cheahTJ"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"cheahTJ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"cheahTJ"},"content":"import pingmebot.command.AddCommand;","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"cheahTJ"},"content":"import pingmebot.command.DeleteCommand;","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"cheahTJ"},"content":"import pingmebot.command.FindCommand;","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"cheahTJ"},"content":"import pingmebot.command.MarkCommand;","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"cheahTJ"},"content":"import pingmebot.command.UnmarkCommand;","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"cheahTJ"},"content":"import pingmebot.task.Deadline;","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"cheahTJ"},"content":"import pingmebot.task.Events;","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"cheahTJ"},"content":"import pingmebot.task.ToDos;","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"cheahTJ"},"content":"public class ParserTest {","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"cheahTJ"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"cheahTJ"},"content":"    public void parseToDoCommandTest() throws PingMeException {","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"cheahTJ"},"content":"        String command \u003d \"todo project\";","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"cheahTJ"},"content":"        Parser parser \u003d new Parser(command);","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"cheahTJ"},"content":"        assertEquals(new AddCommand(new ToDos(\"project\")), parser.parseToDoCommand());","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"cheahTJ"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"cheahTJ"},"content":"    public void parseDeadlineCommandTest() throws PingMeException {","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"cheahTJ"},"content":"        String command \u003d \"deadline project /by 05/05/2000 1800\";","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"cheahTJ"},"content":"        Parser parser \u003d new Parser(command);","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"cheahTJ"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"cheahTJ"},"content":"        String time \u003d \"05/05/2000 1800\";","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"cheahTJ"},"content":"        assertEquals(new AddCommand(new Deadline(\"project\", LocalDateTime.parse(time, formatter))),","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"cheahTJ"},"content":"                parser.parseDeadlineCommand());","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"cheahTJ"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"cheahTJ"},"content":"    public void parseEventsCommandTest() throws PingMeException {","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"cheahTJ"},"content":"        String command \u003d \"event project /from 9am /to 8pm\";","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"cheahTJ"},"content":"        Parser parser \u003d new Parser(command);","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"cheahTJ"},"content":"        assertEquals(new AddCommand(new Events(\"project\", \" 9am\", \" 8pm\")),","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"cheahTJ"},"content":"                parser.parseEventsCommand());","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"cheahTJ"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"cheahTJ"},"content":"    public void parseMarkCommandTest() throws PingMeException {","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"cheahTJ"},"content":"        String command \u003d \"mark 2\";","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"cheahTJ"},"content":"        int arbituaryNumOfTask \u003d 3;","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"cheahTJ"},"content":"        Parser parser \u003d new Parser(command);","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"cheahTJ"},"content":"        assertEquals(new MarkCommand(1),","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"cheahTJ"},"content":"                parser.parseMarkCommand(arbituaryNumOfTask));","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"cheahTJ"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"cheahTJ"},"content":"    public void parseUnmarkCommandTest() throws PingMeException {","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"cheahTJ"},"content":"        String command \u003d \"unmark 2\";","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"cheahTJ"},"content":"        int arbituaryNumOfTask \u003d 3;","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"cheahTJ"},"content":"        Parser parser \u003d new Parser(command);","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"cheahTJ"},"content":"        assertEquals(new UnmarkCommand(1),","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"cheahTJ"},"content":"                parser.parseUnmarkCommand(arbituaryNumOfTask));","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"cheahTJ"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"cheahTJ"},"content":"    public void parseDeleteCommandTest() throws PingMeException {","lastModifiedDate":"2024-02-07"},{"lineNumber":67,"author":{"gitId":"cheahTJ"},"content":"        String command \u003d \"delete 2\";","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"cheahTJ"},"content":"        int arbituaryNumOfTask \u003d 3;","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"cheahTJ"},"content":"        Parser parser \u003d new Parser(command);","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"cheahTJ"},"content":"        assertEquals(new DeleteCommand(1),","lastModifiedDate":"2024-02-07"},{"lineNumber":71,"author":{"gitId":"cheahTJ"},"content":"                parser.parseDeleteCommand(arbituaryNumOfTask));","lastModifiedDate":"2024-02-07"},{"lineNumber":72,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"cheahTJ"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"cheahTJ"},"content":"    public void parseFindCommandTest() throws PingMeException {","lastModifiedDate":"2024-02-07"},{"lineNumber":76,"author":{"gitId":"cheahTJ"},"content":"        String command \u003d \"find book\";","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"cheahTJ"},"content":"        Parser parser \u003d new Parser(command);","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"cheahTJ"},"content":"        assertEquals(new FindCommand(\"book\"),","lastModifiedDate":"2024-02-07"},{"lineNumber":79,"author":{"gitId":"cheahTJ"},"content":"                parser.parseFindCommand());","lastModifiedDate":"2024-02-07"},{"lineNumber":80,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"cheahTJ"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"cheahTJ":82}},{"path":"src/test/java/pingmebot/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheahTJ"},"content":"package pingmebot;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"cheahTJ"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"cheahTJ"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"cheahTJ"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"cheahTJ"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"cheahTJ"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"cheahTJ"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"cheahTJ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"cheahTJ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"cheahTJ"},"content":"import pingmebot.task.Task;","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"cheahTJ"},"content":"import pingmebot.task.ToDos;","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"cheahTJ"},"content":"public class TaskListTest {","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"cheahTJ"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"cheahTJ"},"content":"    public void getTaskSizeTest() {","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"cheahTJ"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"cheahTJ"},"content":"        TaskList tl \u003d new TaskList(tasks);","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"cheahTJ"},"content":"        tasks.add(new ToDos(\"project 1\"));","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"cheahTJ"},"content":"        tasks.add(new ToDos(\"project 2\"));","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"cheahTJ"},"content":"        tasks.add(new ToDos(\"project 3\"));","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"cheahTJ"},"content":"        assertEquals(3, tl.getTaskSize());","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"cheahTJ"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"cheahTJ"},"content":"    public void updateTaskToStorageTest() {","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"cheahTJ"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"cheahTJ"},"content":"            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"cheahTJ"},"content":"            tasks.add(new ToDos(\"project 1\"));","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"cheahTJ"},"content":"            tasks.add(new ToDos(\"project 2\"));","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"cheahTJ"},"content":"            TaskList tl \u003d new TaskList(tasks);","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"cheahTJ"},"content":"            String filePath \u003d \"./data/dukeData.txt\";","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"cheahTJ"},"content":"            // File will always exist since it will be created in the file storage constructor if not found","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"cheahTJ"},"content":"            tl.updateTaskToStorage(new Storage(filePath));","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"cheahTJ"},"content":"            String line;","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"cheahTJ"},"content":"            String totalLine \u003d \"\";","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"cheahTJ"},"content":"            try (BufferedReader reader \u003d new BufferedReader(new FileReader(Paths.get(filePath).toFile()))) {","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"cheahTJ"},"content":"                while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"cheahTJ"},"content":"                    totalLine +\u003d line + \"\\n\";","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"cheahTJ"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"cheahTJ"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"cheahTJ"},"content":"                fail(\"Test Failed.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"cheahTJ"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"cheahTJ"},"content":"            assertEquals(\"todo | 0 | project 1\" + \"\\n\" + \"todo | 0 | project 2\" + \"\\n\", totalLine);","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"cheahTJ"},"content":"        } catch (PingMeException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"cheahTJ"},"content":"            fail(\"Test Failed.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"cheahTJ"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"cheahTJ"},"content":"    public void addTaskTest() {","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"cheahTJ"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"cheahTJ"},"content":"        TaskList tl \u003d new TaskList(tasks);","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"cheahTJ"},"content":"        tl.addTask(new ToDos(\"project\"));","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"cheahTJ"},"content":"        assertEquals(1, tl.tasks.size());","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"cheahTJ"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"cheahTJ"},"content":"    public void removeTaskTest() {","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"cheahTJ"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"cheahTJ"},"content":"        tasks.add(new ToDos(\"project\"));","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"cheahTJ"},"content":"        TaskList tl \u003d new TaskList(tasks);","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"cheahTJ"},"content":"        // Task number is 0-based","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"cheahTJ"},"content":"        tl.removeTask(0);","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"cheahTJ"},"content":"        assertEquals(0, tl.tasks.size());","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"cheahTJ"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"cheahTJ"},"content":"    public void taskToStringTest() {","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"cheahTJ"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"cheahTJ"},"content":"        tasks.add(new ToDos(\"project\"));","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"cheahTJ"},"content":"        TaskList tl \u003d new TaskList(tasks);","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"cheahTJ"},"content":"        assertEquals(\"[T][ ] project\", tl.taskToString(0));","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"cheahTJ"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"cheahTJ"},"content":"    public void taskStatusIconTest() {","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"cheahTJ"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"cheahTJ"},"content":"        tasks.add(new ToDos(\"project\"));","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"cheahTJ"},"content":"        TaskList tl \u003d new TaskList(tasks);","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"cheahTJ"},"content":"        assertEquals(\" \", tl.taskStatusIcon(0));","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"cheahTJ"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"cheahTJ"},"content":"    public void taskMarkAsDoneTest() {","lastModifiedDate":"2024-01-31"},{"lineNumber":91,"author":{"gitId":"cheahTJ"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":92,"author":{"gitId":"cheahTJ"},"content":"        tasks.add(new ToDos(\"project\"));","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"cheahTJ"},"content":"        TaskList tl \u003d new TaskList(tasks);","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"cheahTJ"},"content":"        tl.taskMarkAsDone(0);","lastModifiedDate":"2024-01-31"},{"lineNumber":95,"author":{"gitId":"cheahTJ"},"content":"        assertEquals(\"[T][X] project\", tl.tasks.get(0).toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":98,"author":{"gitId":"cheahTJ"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":99,"author":{"gitId":"cheahTJ"},"content":"    public void taskUncheckTaskTest() {","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"cheahTJ"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":101,"author":{"gitId":"cheahTJ"},"content":"        tasks.add(new ToDos(\"project\"));","lastModifiedDate":"2024-01-31"},{"lineNumber":102,"author":{"gitId":"cheahTJ"},"content":"        TaskList tl \u003d new TaskList(tasks);","lastModifiedDate":"2024-01-31"},{"lineNumber":103,"author":{"gitId":"cheahTJ"},"content":"        tl.taskMarkAsDone(0);","lastModifiedDate":"2024-01-31"},{"lineNumber":104,"author":{"gitId":"cheahTJ"},"content":"        tl.taskUncheckTask(0);","lastModifiedDate":"2024-01-31"},{"lineNumber":105,"author":{"gitId":"cheahTJ"},"content":"        assertEquals(\"[T][ ] project\", tl.tasks.get(0).toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":106,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":107,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":108,"author":{"gitId":"cheahTJ"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":109,"author":{"gitId":"cheahTJ"},"content":"    public void findMatchingTaskTest() {","lastModifiedDate":"2024-02-02"},{"lineNumber":110,"author":{"gitId":"cheahTJ"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-02"},{"lineNumber":111,"author":{"gitId":"cheahTJ"},"content":"        tasks.add(new ToDos(\"read book\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":112,"author":{"gitId":"cheahTJ"},"content":"        tasks.add(new ToDos(\"borrow book\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":113,"author":{"gitId":"cheahTJ"},"content":"        tasks.add(new ToDos(\"project\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":114,"author":{"gitId":"cheahTJ"},"content":"        TaskList tl \u003d new TaskList(tasks);","lastModifiedDate":"2024-02-02"},{"lineNumber":115,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":116,"author":{"gitId":"cheahTJ"},"content":"        ArrayList\u003cTask\u003e expectedOutput \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-02"},{"lineNumber":117,"author":{"gitId":"cheahTJ"},"content":"        expectedOutput.add(new ToDos(\"read book\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":118,"author":{"gitId":"cheahTJ"},"content":"        expectedOutput.add(new ToDos(\"borrow book\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":119,"author":{"gitId":"cheahTJ"},"content":"        assertEquals(expectedOutput, tl.findMatchingTask(\"book\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":120,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":121,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":122,"author":{"gitId":"cheahTJ"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"cheahTJ":122}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"cheahTJ"},"content":"todo borrow book","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"cheahTJ"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"cheahTJ"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"cheahTJ"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"cheahTJ"},"content":"mark 2","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"cheahTJ"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"cheahTJ"},"content":"unmark 2","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"cheahTJ"},"content":"list","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"cheahTJ":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"cheahTJ"},"content":"java -classpath ..\\bin pingmebot.PingMe \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"cheahTJ":1,"-":20}}]
