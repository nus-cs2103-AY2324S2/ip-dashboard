[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"jjchee77"},"content":"3. After that, locate the `src/main/java/duke/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jjchee77":1,"-":23}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"jjchee77"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.1\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"jjchee77"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.1\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"jjchee77"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"jjchee77"},"content":"    archiveBaseName \u003d \u0027duke\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"jjchee77"},"content":"    archiveVersion \u003d \u00271.0.0\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jjchee77":5,"-":38}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jjchee77"},"content":"package duke;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"jjchee77"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"jjchee77"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"jjchee77"},"content":"import duke.commands.Command;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"jjchee77"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"jjchee77"},"content":"import duke.parser.Parser;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"jjchee77"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"jjchee77"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"jjchee77"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"jjchee77"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"jjchee77"},"content":" * Duke is the main class for the Duke chat-bot that manages tasks for users.","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"jjchee77"},"content":" * It integrates components for UI, storage, and command execution.","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"jjchee77"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"jjchee77"},"content":"public class Duke {","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"jjchee77"},"content":"     * The default file path used for storing tasks data.","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"jjchee77"},"content":"    public static final Path TASKS_FILE_PATH \u003d Paths.get(\".\", \"data\", \"duke.tasks\");","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"jjchee77"},"content":"     * The delimiter used for separating command arguments in the storage file.","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"jjchee77"},"content":"    public static final String ARG_DELIMITER \u003d \"\\u241f\";","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"jjchee77"},"content":"     * The storage field used to load and save tasks data.","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"jjchee77"},"content":"    private final Storage storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"jjchee77"},"content":"     * The tasks field used to store tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"jjchee77"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"jjchee77"},"content":"     * The ui field used to interact visually with the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"jjchee77"},"content":"    private final Ui ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"jjchee77"},"content":"     * Constructs a new Duke object.","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"jjchee77"},"content":"     * Initializes the user interface, storage, and task list components.","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"jjchee77"},"content":"     * Attempts to load existing tasks from the storage; if unsuccessful, starts with an empty task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"jjchee77"},"content":"     * @param filePath The path to the file where tasks data is loaded from and saved to.","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"jjchee77"},"content":"     * @param argDelimiter The delimiter used in the tasks data file for parsing command arguments.","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"jjchee77"},"content":"    public Duke(Path filePath, String argDelimiter) {","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"jjchee77"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"jjchee77"},"content":"        this.storage \u003d new Storage(filePath, argDelimiter);","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"jjchee77"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"jjchee77"},"content":"            this.tasks \u003d new TaskList(this.storage.loadTasks());","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"jjchee77"},"content":"        } catch (DukeException dukeException) {","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"jjchee77"},"content":"            this.ui.showError(dukeException.getMessage());","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"jjchee77"},"content":"            this.tasks \u003d new TaskList();","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"jjchee77"},"content":"     * Executes the main application loop.","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"jjchee77"},"content":"     * Displays a welcome message, then continuously reads and processes user commands","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"jjchee77"},"content":"     * until an exit command is received.","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"jjchee77"},"content":"    private void run() {","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"jjchee77"},"content":"        ui.showWelcome();","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"jjchee77"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"jjchee77"},"content":"        while (!isExit) {","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"jjchee77"},"content":"            try {","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"jjchee77"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"jjchee77"},"content":"                Command command \u003d Parser.parse(fullCommand);","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"jjchee77"},"content":"                command.execute(tasks, ui, storage);","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"jjchee77"},"content":"                isExit \u003d command.isExit();","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"jjchee77"},"content":"            } catch (DukeException dukeException) {","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"jjchee77"},"content":"                ui.showError(dukeException.getMessage());","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"jjchee77"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"jjchee77"},"content":"     * The entry point of the Duke application.","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"jjchee77"},"content":"     * Initializes the application and starts the interaction loop.","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"jjchee77"},"content":"     * @param args Command line arguments (not used).","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"jjchee77"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"jjchee77"},"content":"        Duke duke \u003d new Duke(TASKS_FILE_PATH, ARG_DELIMITER);","lastModifiedDate":"2024-02-03"},{"lineNumber":89,"author":{"gitId":"jjchee77"},"content":"        duke.run();","lastModifiedDate":"2024-02-03"},{"lineNumber":90,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":91,"author":{"gitId":"jjchee77"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"jjchee77":91}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jjchee77"},"content":"package duke.commands;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"jjchee77"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"jjchee77"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"jjchee77"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"jjchee77"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"jjchee77"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"jjchee77"},"content":" * Represents an abstract command in the Duke application. All specific command","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"jjchee77"},"content":" * classes should extend this base class and implement the execute() method.","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"jjchee77"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"jjchee77"},"content":" * Commands are responsible for performing actions in response to user input.","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"jjchee77"},"content":" * They interact with the task list, user interface (UI), and storage components","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"jjchee77"},"content":" * to carry out their respective tasks. Each command may have a specific action","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"jjchee77"},"content":" * associated with it, such as adding a task, listing tasks, marking tasks as done,","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"jjchee77"},"content":" * and more.","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"jjchee77"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"jjchee77"},"content":"public abstract class Command {","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"jjchee77"},"content":"     * Enumeration representing the different types of commands available in the Duke application.","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"jjchee77"},"content":"     * These commands are used to perform various actions and operations within the application.","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"jjchee77"},"content":"    public enum CommandType {","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"jjchee77"},"content":"        /**","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"jjchee77"},"content":"         * Command to list all tasks in the task list.","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"jjchee77"},"content":"         */","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"jjchee77"},"content":"        LIST,","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"jjchee77"},"content":"        /**","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"jjchee77"},"content":"         * Command to exit or quit the Duke application.","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"jjchee77"},"content":"         */","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"jjchee77"},"content":"        BYE,","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"jjchee77"},"content":"        /**","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"jjchee77"},"content":"         * Command to mark a task as completed.","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"jjchee77"},"content":"         */","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"jjchee77"},"content":"        MARK,","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"jjchee77"},"content":"        /**","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"jjchee77"},"content":"         * Command to unmark or mark a task as incomplete.","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"jjchee77"},"content":"         */","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"jjchee77"},"content":"        UNMARK,","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"jjchee77"},"content":"        /**","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"jjchee77"},"content":"         * Command to create and add a \"To-Do\" task to the task list.","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"jjchee77"},"content":"         */","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"jjchee77"},"content":"        TODO,","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"jjchee77"},"content":"        /**","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"jjchee77"},"content":"         * Command to create and add a \"Deadline\" task to the task list.","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"jjchee77"},"content":"         */","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"jjchee77"},"content":"        DEADLINE,","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"jjchee77"},"content":"        /**","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"jjchee77"},"content":"         * Command to create and add an \"Event\" task to the task list.","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"jjchee77"},"content":"         */","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"jjchee77"},"content":"        EVENT,","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"jjchee77"},"content":"        /**","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"jjchee77"},"content":"         * Command to delete a task from the task list.","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"jjchee77"},"content":"         */","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"jjchee77"},"content":"        DELETE,","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"jjchee77"},"content":"        /**","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"jjchee77"},"content":"         * Command to find and display tasks that match a specific keyword.","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"jjchee77"},"content":"         */","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"jjchee77"},"content":"        FIND","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":72,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"jjchee77"},"content":"     * Constructs a new Command object.","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"jjchee77"},"content":"     * This constructor is empty and serves as a placeholder.","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"jjchee77"},"content":"    public Command() {}","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"jjchee77"},"content":"     * Indicates whether executing this command should result in exiting the Duke application.","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"jjchee77"},"content":"     * By default, commands do not trigger an exit.","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"jjchee77"},"content":"     * @return true if executing this command should exit the application, false otherwise.","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"jjchee77"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"jjchee77"},"content":"        return false;","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":89,"author":{"gitId":"jjchee77"},"content":"     * Executes the command\u0027s action, which may involve interacting with the task list,","lastModifiedDate":"2024-02-03"},{"lineNumber":90,"author":{"gitId":"jjchee77"},"content":"     * user interface (UI), and storage. Specific command classes must implement this","lastModifiedDate":"2024-02-03"},{"lineNumber":91,"author":{"gitId":"jjchee77"},"content":"     * method to define their behavior when executed.","lastModifiedDate":"2024-02-03"},{"lineNumber":92,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"jjchee77"},"content":"     * @param tasks   The task list containing tasks managed by the application.","lastModifiedDate":"2024-02-03"},{"lineNumber":94,"author":{"gitId":"jjchee77"},"content":"     * @param ui      The user interface component for displaying messages to the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":95,"author":{"gitId":"jjchee77"},"content":"     * @param storage The storage component responsible for saving and loading tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":96,"author":{"gitId":"jjchee77"},"content":"     * @throws DukeException If an error occurs during the execution of the command.","lastModifiedDate":"2024-02-03"},{"lineNumber":97,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":98,"author":{"gitId":"jjchee77"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2024-02-03"},{"lineNumber":99,"author":{"gitId":"jjchee77"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"jjchee77":99}},{"path":"src/main/java/duke/commands/CommandBye.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jjchee77"},"content":"package duke.commands;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"jjchee77"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"jjchee77"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"jjchee77"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"jjchee77"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"jjchee77"},"content":" * Represents the \"bye\" command in the Duke application. This command allows","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"jjchee77"},"content":" * the user to exit the application.","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"jjchee77"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"jjchee77"},"content":"public class CommandBye extends Command {","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"jjchee77"},"content":"     * Constructs a new CommandBye object.","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"jjchee77"},"content":"     * This constructor is empty as no specific initialization is needed for the \"bye\" command.","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"jjchee77"},"content":"    public CommandBye() {}","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"jjchee77"},"content":"     * Indicates that executing this command should result in exiting the Duke application.","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"jjchee77"},"content":"     * @return true to indicate an exit command, false otherwise.","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"jjchee77"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"jjchee77"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"jjchee77"},"content":"        return true;","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"jjchee77"},"content":"     * Executes the \"bye\" command, which displays a farewell message to the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"jjchee77"},"content":"     * @param tasks   The task list (not used in this command).","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"jjchee77"},"content":"     * @param ui      The user interface component for displaying messages to the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"jjchee77"},"content":"     * @param storage The storage component (not used in this command).","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"jjchee77"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"jjchee77"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"jjchee77"},"content":"        ui.showMessage(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"jjchee77"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"jjchee77":40}},{"path":"src/main/java/duke/commands/CommandDeadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jjchee77"},"content":"package duke.commands;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"jjchee77"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"jjchee77"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"jjchee77"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"jjchee77"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"jjchee77"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"jjchee77"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"jjchee77"},"content":" * Represents the command for adding a deadline task to the task list in the Duke application.","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"jjchee77"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"jjchee77"},"content":"public class CommandDeadline extends Command {","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"jjchee77"},"content":"    private final Deadline deadline;","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"jjchee77"},"content":"     * Constructs a new CommandDeadline object with the specified deadline task.","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"jjchee77"},"content":"     * @param deadline The deadline task to be added to the task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"jjchee77"},"content":"    public CommandDeadline(Deadline deadline) {","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"jjchee77"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"jjchee77"},"content":"     * Executes the \"deadline\" command, which adds the specified deadline task to the task list,","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"jjchee77"},"content":"     * saves the updated task list to storage, and displays a confirmation message to the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"jjchee77"},"content":"     * @param tasks   The task list to which the deadline task will be added.","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"jjchee77"},"content":"     * @param ui      The user interface component for displaying messages to the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"jjchee77"},"content":"     * @param storage The storage component for saving the updated task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"jjchee77"},"content":"     * @throws DukeException If an error occurs while executing the command.","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"jjchee77"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"jjchee77"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"jjchee77"},"content":"        tasks.add(this.deadline);","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"jjchee77"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"jjchee77"},"content":"        ui.showMessage(String.format(\"Got it. I\u0027ve added this task:\\n  %s\\nNow you have %d tasks in the list.\",","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"jjchee77"},"content":"            this.deadline, tasks.size()));","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"jjchee77"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"jjchee77":42}},{"path":"src/main/java/duke/commands/CommandDelete.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jjchee77"},"content":"package duke.commands;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"jjchee77"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"jjchee77"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"jjchee77"},"content":"import duke.tasks.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"jjchee77"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"jjchee77"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"jjchee77"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"jjchee77"},"content":" * Represents the command for deleting a task from the task list in the Duke application.","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"jjchee77"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"jjchee77"},"content":"public class CommandDelete extends Command {","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"jjchee77"},"content":"    private final Integer taskIndex;","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"jjchee77"},"content":"     * Constructs a new CommandDelete object with the specified task index.","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"jjchee77"},"content":"     * @param taskIndex The index of the task to be deleted from the task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"jjchee77"},"content":"    public CommandDelete(Integer taskIndex) {","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"jjchee77"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"jjchee77"},"content":"     * Executes the \"delete\" command, which removes the specified task from the task list,","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"jjchee77"},"content":"     * saves the updated task list to storage, and displays a confirmation message to the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"jjchee77"},"content":"     * @param tasks   The task list from which the task will be deleted.","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"jjchee77"},"content":"     * @param ui      The user interface component for displaying messages to the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"jjchee77"},"content":"     * @param storage The storage component for saving the updated task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"jjchee77"},"content":"     * @throws DukeException If an error occurs while executing the command.","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"jjchee77"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"jjchee77"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"jjchee77"},"content":"        Task task \u003d tasks.remove(this.taskIndex);","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"jjchee77"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"jjchee77"},"content":"        ui.showMessage(String.format(\"Noted. I\u0027ve removed this task:\\n  %s\\nNow you have %d tasks in the list.\",","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"jjchee77"},"content":"            task, tasks.size()));","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"jjchee77"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"jjchee77":42}},{"path":"src/main/java/duke/commands/CommandEvent.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jjchee77"},"content":"package duke.commands;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"jjchee77"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"jjchee77"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"jjchee77"},"content":"import duke.tasks.Event;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"jjchee77"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"jjchee77"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"jjchee77"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"jjchee77"},"content":" * Represents the command for adding an event task to the task list in the Duke application.","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"jjchee77"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"jjchee77"},"content":"public class CommandEvent extends Command {","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"jjchee77"},"content":"    private final Event event;","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"jjchee77"},"content":"     * Constructs a new CommandEvent object with the specified event task.","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"jjchee77"},"content":"     * @param event The event task to be added to the task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"jjchee77"},"content":"    public CommandEvent(Event event) {","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"jjchee77"},"content":"        this.event \u003d event;","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"jjchee77"},"content":"     * Executes the \"event\" command, which adds the specified event task to the task list,","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"jjchee77"},"content":"     * saves the updated task list to storage, and displays a confirmation message to the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"jjchee77"},"content":"     * @param tasks   The task list to which the event task will be added.","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"jjchee77"},"content":"     * @param ui      The user interface component for displaying messages to the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"jjchee77"},"content":"     * @param storage The storage component for saving the updated task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"jjchee77"},"content":"     * @throws DukeException If an error occurs while executing the command.","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"jjchee77"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"jjchee77"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"jjchee77"},"content":"        tasks.add(this.event);","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"jjchee77"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"jjchee77"},"content":"        ui.showMessage(String.format(\"Got it. I\u0027ve added this task:\\n  %s\\nNow you have %d tasks in the list.\",","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"jjchee77"},"content":"            this.event, tasks.size()));","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"jjchee77"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"jjchee77":42}},{"path":"src/main/java/duke/commands/CommandFind.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jjchee77"},"content":"package duke.commands;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"jjchee77"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"jjchee77"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"jjchee77"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"jjchee77"},"content":"import duke.tasks.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"jjchee77"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"jjchee77"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"jjchee77"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"jjchee77"},"content":" * Represents the command for finding tasks that contain a specific keyword in the Duke application.","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"jjchee77"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"jjchee77"},"content":"public class CommandFind extends Command {","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"jjchee77"},"content":"    private final String keyword;","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"jjchee77"},"content":"     * Constructs a new CommandFind object with the specified keyword to search for in tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"jjchee77"},"content":"     * @param keyword The keyword to search for in tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"jjchee77"},"content":"    public CommandFind(String keyword) {","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"jjchee77"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"jjchee77"},"content":"     * Executes the command to find tasks containing the specified keyword and displays the matching tasks to the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"jjchee77"},"content":"     * @param tasks   The task list containing the tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"jjchee77"},"content":"     * @param ui      The user interface component for displaying messages to the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"jjchee77"},"content":"     * @param storage The storage component for saving the task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"jjchee77"},"content":"     * @throws DukeException If there is an error while searching for tasks or displaying the results.","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"jjchee77"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"jjchee77"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"jjchee77"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"jjchee77"},"content":"        stringBuilder.append(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"jjchee77"},"content":"        ArrayList\u003cString\u003e matches \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"jjchee77"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"jjchee77"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"jjchee77"},"content":"            if (task.getDescription().contains(this.keyword)) {","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"jjchee77"},"content":"                matches.add(String.format(\"%d. %s\", i + 1, task));","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"jjchee77"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"jjchee77"},"content":"        String matchesOutput \u003d String.join(\"\\n\", matches);","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"jjchee77"},"content":"        stringBuilder.append(matchesOutput);","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"jjchee77"},"content":"        ui.showMessage(stringBuilder.toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"jjchee77"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"jjchee77":52}},{"path":"src/main/java/duke/commands/CommandList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jjchee77"},"content":"package duke.commands;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"jjchee77"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"jjchee77"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"jjchee77"},"content":"import duke.tasks.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"jjchee77"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"jjchee77"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"jjchee77"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"jjchee77"},"content":" * Represents the command for listing all tasks in the task list in the Duke application.","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"jjchee77"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"jjchee77"},"content":"public class CommandList extends Command {","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"jjchee77"},"content":"     * Constructs a new CommandList object.","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"jjchee77"},"content":"    public CommandList() {}","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"jjchee77"},"content":"     * Executes the \"list\" command, which displays all tasks in the task list to the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"jjchee77"},"content":"     * @param tasks   The task list containing the tasks to be listed.","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"jjchee77"},"content":"     * @param ui      The user interface component for displaying messages to the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"jjchee77"},"content":"     * @param storage The storage component for saving the updated task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"jjchee77"},"content":"     * @throws DukeException If an error occurs while executing the command.","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"jjchee77"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"jjchee77"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"jjchee77"},"content":"        String[] outputs \u003d new String[tasks.size()];","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"jjchee77"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"jjchee77"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"jjchee77"},"content":"            outputs[i] \u003d String.format(\"%d. %s\", i + 1, task);","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"jjchee77"},"content":"        String output \u003d String.join(\"\\n\", outputs);","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"jjchee77"},"content":"        ui.showMessage(output);","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"jjchee77"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"jjchee77":37}},{"path":"src/main/java/duke/commands/CommandMark.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jjchee77"},"content":"package duke.commands;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"jjchee77"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"jjchee77"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"jjchee77"},"content":"import duke.tasks.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"jjchee77"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"jjchee77"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"jjchee77"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"jjchee77"},"content":" * Represents the command for marking a task as done in the Duke application.","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"jjchee77"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"jjchee77"},"content":"public class CommandMark extends Command {","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"jjchee77"},"content":"    private final Integer taskIndex;","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"jjchee77"},"content":"     * Constructs a new CommandMark object with the specified task index.","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"jjchee77"},"content":"     * @param taskIndex The index of the task to be marked as done.","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"jjchee77"},"content":"    public CommandMark(Integer taskIndex) {","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"jjchee77"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"jjchee77"},"content":"     * Executes the \"mark\" command, which marks the specified task as done in the task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"jjchee77"},"content":"     * @param tasks   The task list containing the tasks to be marked.","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"jjchee77"},"content":"     * @param ui      The user interface component for displaying messages to the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"jjchee77"},"content":"     * @param storage The storage component for saving the updated task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"jjchee77"},"content":"     * @throws DukeException If an error occurs while executing the command.","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"jjchee77"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"jjchee77"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"jjchee77"},"content":"        Task task \u003d tasks.get(this.taskIndex);","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"jjchee77"},"content":"        task.mark();","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"jjchee77"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"jjchee77"},"content":"        ui.showMessage(String.format(\"Nice! I\u0027ve marked this task as done:\\n  %s\", task));","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"jjchee77"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"jjchee77":41}},{"path":"src/main/java/duke/commands/CommandTodo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jjchee77"},"content":"package duke.commands;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"jjchee77"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"jjchee77"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"jjchee77"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"jjchee77"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"jjchee77"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"jjchee77"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"jjchee77"},"content":" * Represents the command for adding a todo task in the Duke application.","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"jjchee77"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"jjchee77"},"content":"public class CommandTodo extends Command {","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"jjchee77"},"content":"    private final Todo todo;","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"jjchee77"},"content":"     * Constructs a new CommandTodo object with the specified todo task.","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"jjchee77"},"content":"     * @param todo The todo task to be added.","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"jjchee77"},"content":"    public CommandTodo(Todo todo) {","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"jjchee77"},"content":"        this.todo \u003d todo;","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"jjchee77"},"content":"     * Executes the \"todo\" command, which adds the specified todo task to the task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"jjchee77"},"content":"     * @param tasks   The task list to which the todo task will be added.","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"jjchee77"},"content":"     * @param ui      The user interface component for displaying messages to the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"jjchee77"},"content":"     * @param storage The storage component for saving the updated task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"jjchee77"},"content":"     * @throws DukeException If an error occurs while executing the command.","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"jjchee77"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"jjchee77"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"jjchee77"},"content":"        tasks.add(this.todo);","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"jjchee77"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"jjchee77"},"content":"        ui.showMessage(String.format(\"Got it. I\u0027ve added this task:\\n  %s\\nNow you have %d tasks in the list.\",","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"jjchee77"},"content":"            this.todo, tasks.size()));","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"jjchee77"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"jjchee77":41}},{"path":"src/main/java/duke/commands/CommandUnknown.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jjchee77"},"content":"package duke.commands;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"jjchee77"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"jjchee77"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"jjchee77"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"jjchee77"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"jjchee77"},"content":" * Represents the command for handling unknown or invalid commands in the Duke application.","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"jjchee77"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"jjchee77"},"content":"public class CommandUnknown extends Command {","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"jjchee77"},"content":"     * Constructs a new CommandUnknown object.","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"jjchee77"},"content":"    public CommandUnknown() {}","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"jjchee77"},"content":"     * Executes the command to handle unknown or invalid commands and displays an error message to the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"jjchee77"},"content":"     * @param tasks   The task list (not used in this command).","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"jjchee77"},"content":"     * @param ui      The user interface component for displaying error messages to the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"jjchee77"},"content":"     * @param storage The storage component (not used in this command).","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"jjchee77"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"jjchee77"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"jjchee77"},"content":"        ui.showMessage(\"OOPS!!! I don\u0027t understand that command, try again later.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"jjchee77"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"jjchee77":27}},{"path":"src/main/java/duke/commands/CommandUnmark.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jjchee77"},"content":"package duke.commands;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"jjchee77"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"jjchee77"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"jjchee77"},"content":"import duke.tasks.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"jjchee77"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"jjchee77"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"jjchee77"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"jjchee77"},"content":" * Represents the command for marking a task as not done in the Duke application.","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"jjchee77"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"jjchee77"},"content":"public class CommandUnmark extends Command {","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"jjchee77"},"content":"    private final Integer taskIndex;","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"jjchee77"},"content":"     * Constructs a new CommandUnmark object with the specified task index to unmark.","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"jjchee77"},"content":"     * @param taskIndex The index of the task to unmark.","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"jjchee77"},"content":"    public CommandUnmark(Integer taskIndex) {","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"jjchee77"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"jjchee77"},"content":"     * Executes the command to unmark a task as not done and updates the task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"jjchee77"},"content":"     * Saves the updated task list to storage.","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"jjchee77"},"content":"     * @param tasks   The task list containing the tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"jjchee77"},"content":"     * @param ui      The user interface component for displaying messages to the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"jjchee77"},"content":"     * @param storage The storage component for saving the task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"jjchee77"},"content":"     * @throws DukeException If there is an error while un-marking the task or saving the task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"jjchee77"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"jjchee77"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"jjchee77"},"content":"        Task task \u003d tasks.get(this.taskIndex);","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"jjchee77"},"content":"        task.unmark();","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"jjchee77"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"jjchee77"},"content":"        ui.showMessage(String.format(\"OK, I\u0027ve marked this task as not done yet:\\n  %s\", task));","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"jjchee77"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"jjchee77":42}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jjchee77"},"content":"package duke.exceptions;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"jjchee77"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"jjchee77"},"content":" * Represents the base class for all custom exceptions in the Duke application.","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"jjchee77"},"content":" * This abstract class extends the standard Java {@link Exception} class,","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"jjchee77"},"content":" * providing a framework for handling application-specific exceptions with","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"jjchee77"},"content":" * customized error messages.","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"jjchee77"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"jjchee77"},"content":"public abstract class DukeException extends Exception {","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"jjchee77"},"content":"     * Constructs a new DukeException with the specified detail message.","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"jjchee77"},"content":"     * The detail message is modified to include a standard prefix \"OOPS!!!\" to","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"jjchee77"},"content":"     * signify an error specific to the Duke application.","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"jjchee77"},"content":"     * @param errorMessage The detail message (which is saved for later retrieval","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"jjchee77"},"content":"     *                     by the {@link Throwable#getMessage()} method).","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"jjchee77"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"jjchee77"},"content":"        super(String.format(\"OOPS!!! %s\", errorMessage));","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"jjchee77"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"jjchee77":21}},{"path":"src/main/java/duke/exceptions/parser/InvalidArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jjchee77"},"content":"package duke.exceptions.parser;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"jjchee77"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"jjchee77"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"jjchee77"},"content":" * Represents an exception that is thrown when invalid arguments are detected","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"jjchee77"},"content":" * during the parsing of user commands. This exception is used to signal errors","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"jjchee77"},"content":" * such as missing required arguments, arguments with incorrect formats, or any","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"jjchee77"},"content":" * other condition where the provided arguments do not meet the command\u0027s requirements.","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"jjchee77"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"jjchee77"},"content":" * Extending {@link DukeException}, this class ensures that all argument-related errors","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"jjchee77"},"content":" * are handled uniformly, providing detailed and specific feedback about what went wrong","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"jjchee77"},"content":" * during command parsing. This helps in guiding users to correct their inputs and use","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"jjchee77"},"content":" * the application as intended.","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"jjchee77"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"jjchee77"},"content":"public class InvalidArgumentException extends DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"jjchee77"},"content":"     * Constructs a new InvalidArgumentException with a detailed message","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"jjchee77"},"content":"     * indicating which argument(s) are invalid and why.","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"jjchee77"},"content":"     * @param argName The name of the argument(s) that were found to be invalid.","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"jjchee77"},"content":"     * @param message A message describing why the argument(s) are invalid.","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"jjchee77"},"content":"    public InvalidArgumentException(String argName, String message) {","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"jjchee77"},"content":"        super(String.format(\"Argument(s) \u0027%s\u0027 %s.\", argName, message));","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"jjchee77"},"content":"     * Constructs a new InvalidArgumentException with a detailed message","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"jjchee77"},"content":"     * that includes an external error message, providing additional context.","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"jjchee77"},"content":"     * This constructor is useful when the invalid argument exception is the","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"jjchee77"},"content":"     * result of another exception, and that original error message needs to be","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"jjchee77"},"content":"     * included for clarity.","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"jjchee77"},"content":"     * @param argName The name of the argument(s) that were found to be invalid.","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"jjchee77"},"content":"     * @param message A message describing why the argument(s) are invalid.","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"jjchee77"},"content":"     * @param externalErrMsg An additional message from another exception that","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"jjchee77"},"content":"     *                       occurred during argument processing, providing more","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"jjchee77"},"content":"     *                       detail about the error.","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"jjchee77"},"content":"    public InvalidArgumentException(String argName, String message, String externalErrMsg) {","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"jjchee77"},"content":"        super(String.format(\"Argument(s) \u0027%s\u0027 %s. %s\", argName, message, externalErrMsg));","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"jjchee77"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"jjchee77":45}},{"path":"src/main/java/duke/exceptions/storage/CreateTasksFileFailedException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jjchee77"},"content":"package duke.exceptions.storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"jjchee77"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"jjchee77"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"jjchee77"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"jjchee77"},"content":" * Represents an exception that is thrown when the application fails to create","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"jjchee77"},"content":" * the tasks file. This can occur due to various I/O related issues such as lack","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"jjchee77"},"content":" * of write permissions, disk space insufficiency, or other system errors that","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"jjchee77"},"content":" * prevent the file from being created.","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"jjchee77"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"jjchee77"},"content":" * This class extends {@link DukeException} and encapsulates an {@link IOException},","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"jjchee77"},"content":" * providing more detailed information about the failure cause to the user or the","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"jjchee77"},"content":" * system administrator.","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"jjchee77"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"jjchee77"},"content":"public class CreateTasksFileFailedException extends DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"jjchee77"},"content":"     * Constructs a new CreateTasksFileFailedException with a detailed error message","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"jjchee77"},"content":"     * that includes the original {@link IOException} message.","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"jjchee77"},"content":"     * @param ioException The IOException that triggered this exception, containing","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"jjchee77"},"content":"     *                    the details of the failure.","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"jjchee77"},"content":"    public CreateTasksFileFailedException(IOException ioException) {","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"jjchee77"},"content":"        super(String.format(\"Failed to create tasks file. %s\", ioException.getMessage()));","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"jjchee77"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"jjchee77":28}},{"path":"src/main/java/duke/exceptions/storage/LoadTasksFailedException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jjchee77"},"content":"package duke.exceptions.storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"jjchee77"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"jjchee77"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"jjchee77"},"content":" * Represents an exception that is thrown when the application encounters an error","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"jjchee77"},"content":" * while attempting to load tasks from the tasks file. This could be due to issues","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"jjchee77"},"content":" * such as file corruption, formatting errors, or other problems that prevent the","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"jjchee77"},"content":" * successful parsing of the task data.","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"jjchee77"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"jjchee77"},"content":" * This class extends {@link DukeException} to provide a unified framework for handling","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"jjchee77"},"content":" * exceptions in the application, ensuring that all errors related to task loading","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"jjchee77"},"content":" * are reported in a consistent manner. It includes the original exception message","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"jjchee77"},"content":" * to provide detailed insight into the cause of the failure.","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"jjchee77"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"jjchee77"},"content":"public class LoadTasksFailedException extends DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"jjchee77"},"content":"     * Constructs a new LoadTasksFailedException with a detailed error message","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"jjchee77"},"content":"     * that includes the message from the original exception. This constructor","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"jjchee77"},"content":"     * is typically used when catching a lower-level exception (such as an","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"jjchee77"},"content":"     * IOException or a parsing exception) and wrapping it into a","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"jjchee77"},"content":"     * LoadTasksFailedException to be handled at a higher level.","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"jjchee77"},"content":"     * @param exception The exception that triggered this exception, containing","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"jjchee77"},"content":"     *                  details about the specific error encountered during task loading.","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"jjchee77"},"content":"    public LoadTasksFailedException(Exception exception) {","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"jjchee77"},"content":"        super(String.format(\"Failed to load tasks. %s\", exception.getMessage()));","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"jjchee77"},"content":"     * Constructs a new LoadTasksFailedException with a detailed error message","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"jjchee77"},"content":"     * that includes the message from the original exception. This constructor","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"jjchee77"},"content":"     * is typically used when catching a lower-level exception (such as an","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"jjchee77"},"content":"     * IOException or a parsing exception) and wrapping it into a","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"jjchee77"},"content":"     * LoadTasksFailedException to be handled at a higher level.","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"jjchee77"},"content":"     * @param message The message containing details about the specific error encountered","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"jjchee77"},"content":"     *                during task loading.","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"jjchee77"},"content":"    public LoadTasksFailedException(String message) {","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"jjchee77"},"content":"        super(String.format(\"Failed to load tasks. %s\", message));","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"jjchee77"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"jjchee77":44}},{"path":"src/main/java/duke/exceptions/storage/SaveTasksFailedException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jjchee77"},"content":"package duke.exceptions.storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"jjchee77"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"jjchee77"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"jjchee77"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"jjchee77"},"content":" * Represents an exception that is thrown when the application fails to save","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"jjchee77"},"content":" * the tasks to the tasks file. This exception is typically thrown in response","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"jjchee77"},"content":" * to {@link IOException}s that occur during the write operation, such as when","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"jjchee77"},"content":" * the file is not accessible, there is insufficient disk space, or the file","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"jjchee77"},"content":" * system permissions prevent writing.","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"jjchee77"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"jjchee77"},"content":" * Extending {@link DukeException}, this class provides a consistent error handling","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"jjchee77"},"content":" * approach within the Duke application, ensuring that all file save-related errors","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"jjchee77"},"content":" * are encapsulated within a specific type of exception. It enriches the exception","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"jjchee77"},"content":" * with a detailed message from the underlying {@link IOException}, offering","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"jjchee77"},"content":" * insights into the cause of the failure.","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"jjchee77"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"jjchee77"},"content":"public class SaveTasksFailedException extends DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"jjchee77"},"content":"     * Constructs a new SaveTasksFailedException with an error message that","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"jjchee77"},"content":"     * includes information about the cause of the failure to save tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"jjchee77"},"content":"     * This constructor captures and relays the message from the underlying","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"jjchee77"},"content":"     * {@link IOException}, providing context for the error and facilitating","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"jjchee77"},"content":"     * troubleshooting.","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"jjchee77"},"content":"     * @param ioException The {@link IOException} that triggered this exception,","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"jjchee77"},"content":"     *                    containing details about the specific I/O error encountered.","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"jjchee77"},"content":"    public SaveTasksFailedException(IOException ioException) {","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"jjchee77"},"content":"        super(String.format(\"Failed to save tasks. %s\", ioException.getMessage()));","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"jjchee77"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"jjchee77":34}},{"path":"src/main/java/duke/exceptions/tasks/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jjchee77"},"content":"package duke.exceptions.tasks;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"jjchee77"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"jjchee77"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"jjchee77"},"content":" * Represents an exception that is thrown when a task is initialized with an empty description.","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"jjchee77"},"content":" * This class extends the {@link DukeException} to provide a specific error message","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"jjchee77"},"content":" * indicating that a task description cannot be empty.","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"jjchee77"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"jjchee77"},"content":"public class EmptyDescriptionException extends DukeException {","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"jjchee77"},"content":"    private static final String errorMessage \u003d \"The description of a task cannot be empty.\";","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"jjchee77"},"content":"     * Constructs a new EmptyDescriptionException with a predefined error message.","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"jjchee77"},"content":"     * The message indicates that a task description is required and cannot be left empty.","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"jjchee77"},"content":"    public EmptyDescriptionException() {","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"jjchee77"},"content":"        super(errorMessage);","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"jjchee77"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"jjchee77":20}},{"path":"src/main/java/duke/exceptions/tasks/MissingTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jjchee77"},"content":"package duke.exceptions.tasks;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"jjchee77"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"jjchee77"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"jjchee77"},"content":" * Represents an exception that is thrown when an operation references a task number","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"jjchee77"},"content":" * that does not exist in the task list. This could occur when trying to mark a task as done,","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"jjchee77"},"content":" * delete a task, or access a task\u0027s details using a task number that is out of the valid range.","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"jjchee77"},"content":" * This class extends {@link DukeException} to provide a specific error message for this situation.","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"jjchee77"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"jjchee77"},"content":"public class MissingTaskException extends DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"jjchee77"},"content":"    private static final String errorMessage \u003d \"The specified task does not exist.\";","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"jjchee77"},"content":"     * Constructs a new MissingTaskException with a predefined error message.","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"jjchee77"},"content":"     * The message indicates that the user has referenced a task number that does not correspond","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"jjchee77"},"content":"     * to any task in the current task list, either because the number is too high, too low,","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"jjchee77"},"content":"     * or the task list is empty.","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"jjchee77"},"content":"    public MissingTaskException() {","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"jjchee77"},"content":"        super(errorMessage);","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"jjchee77"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"jjchee77":23}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jjchee77"},"content":"package duke.parser;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"jjchee77"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"jjchee77"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"jjchee77"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"jjchee77"},"content":"import java.util.List;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"jjchee77"},"content":"import duke.commands.Command;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"jjchee77"},"content":"import duke.commands.Command.CommandType;","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"jjchee77"},"content":"import duke.commands.CommandBye;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"jjchee77"},"content":"import duke.commands.CommandDeadline;","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"jjchee77"},"content":"import duke.commands.CommandDelete;","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"jjchee77"},"content":"import duke.commands.CommandEvent;","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"jjchee77"},"content":"import duke.commands.CommandFind;","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"jjchee77"},"content":"import duke.commands.CommandList;","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"jjchee77"},"content":"import duke.commands.CommandMark;","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"jjchee77"},"content":"import duke.commands.CommandTodo;","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"jjchee77"},"content":"import duke.commands.CommandUnknown;","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"jjchee77"},"content":"import duke.commands.CommandUnmark;","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"jjchee77"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"jjchee77"},"content":"import duke.exceptions.parser.InvalidArgumentException;","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"jjchee77"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"jjchee77"},"content":"import duke.tasks.Event;","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"jjchee77"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"jjchee77"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"jjchee77"},"content":" * Parses user input into commands for the Duke application.","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"jjchee77"},"content":" * This class provides static methods to interpret strings of user input","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"jjchee77"},"content":" * and convert them into executable Command objects.","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"jjchee77"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"jjchee77"},"content":"public class Parser {","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"jjchee77"},"content":"     * Parses the \"list\" command.","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"jjchee77"},"content":"     * @return A CommandList instance.","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"jjchee77"},"content":"    private static Command parseCommandList() {","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"jjchee77"},"content":"        return new CommandList();","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"jjchee77"},"content":"     * Parses the \"bye\" command.","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"jjchee77"},"content":"     * @return A CommandBye instance.","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"jjchee77"},"content":"    private static Command parseCommandBye() {","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"jjchee77"},"content":"        return new CommandBye();","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"jjchee77"},"content":"     * Parses the \"mark\" command and its arguments.","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"jjchee77"},"content":"     * @param args The arguments passed with the command.","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"jjchee77"},"content":"     * @return A CommandMark instance with the specified task index.","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"jjchee77"},"content":"     * @throws DukeException If the argument is missing or not an integer.","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"jjchee77"},"content":"    private static Command parseCommandMark(String[] args) throws DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"jjchee77"},"content":"        if (args.length \u003c 2) {","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"jjchee77"},"content":"            throw new InvalidArgumentException(\"task number\", \"is missing\");","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"jjchee77"},"content":"        int taskNum;","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"jjchee77"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"jjchee77"},"content":"            taskNum \u003d Integer.parseInt(args[1]);","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"jjchee77"},"content":"        } catch (NumberFormatException numberFormatException) {","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"jjchee77"},"content":"            throw new InvalidArgumentException(\"task number\", \"cannot be parsed to an integer.\",","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"jjchee77"},"content":"                numberFormatException.getMessage());","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"jjchee77"},"content":"        int taskIndex \u003d taskNum - 1;","lastModifiedDate":"2024-02-04"},{"lineNumber":72,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":73,"author":{"gitId":"jjchee77"},"content":"        return new CommandMark(taskIndex);","lastModifiedDate":"2024-02-04"},{"lineNumber":74,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"jjchee77"},"content":"     * Parses the \"unmark\" command and its arguments.","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"jjchee77"},"content":"     * @param args The arguments passed with the command.","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"jjchee77"},"content":"     * @return A CommandUnmark instance with the specified task index.","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"jjchee77"},"content":"     * @throws DukeException If the argument is missing or not an integer.","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"jjchee77"},"content":"    private static Command parseCommandUnmark(String[] args) throws DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"jjchee77"},"content":"        if (args.length \u003c 2) {","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"jjchee77"},"content":"            throw new InvalidArgumentException(\"task number\", \"is missing\");","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"jjchee77"},"content":"        int taskNum;","lastModifiedDate":"2024-02-04"},{"lineNumber":89,"author":{"gitId":"jjchee77"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":90,"author":{"gitId":"jjchee77"},"content":"            taskNum \u003d Integer.parseInt(args[1]);","lastModifiedDate":"2024-02-04"},{"lineNumber":91,"author":{"gitId":"jjchee77"},"content":"        } catch (NumberFormatException numberFormatException) {","lastModifiedDate":"2024-02-03"},{"lineNumber":92,"author":{"gitId":"jjchee77"},"content":"            throw new InvalidArgumentException(\"task number\", \"cannot be parsed to an integer\",","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"jjchee77"},"content":"                numberFormatException.getMessage());","lastModifiedDate":"2024-02-03"},{"lineNumber":94,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":95,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":96,"author":{"gitId":"jjchee77"},"content":"        int taskIndex \u003d taskNum - 1;","lastModifiedDate":"2024-02-04"},{"lineNumber":97,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":98,"author":{"gitId":"jjchee77"},"content":"        return new CommandUnmark(taskIndex);","lastModifiedDate":"2024-02-04"},{"lineNumber":99,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":100,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":101,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":102,"author":{"gitId":"jjchee77"},"content":"     * Parses the \"todo\" command and its arguments.","lastModifiedDate":"2024-02-03"},{"lineNumber":103,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":104,"author":{"gitId":"jjchee77"},"content":"     * @param args The arguments passed with the command.","lastModifiedDate":"2024-02-03"},{"lineNumber":105,"author":{"gitId":"jjchee77"},"content":"     * @return A CommandTodo instance with the specified description.","lastModifiedDate":"2024-02-03"},{"lineNumber":106,"author":{"gitId":"jjchee77"},"content":"     * @throws DukeException If the task description is missing.","lastModifiedDate":"2024-02-03"},{"lineNumber":107,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":108,"author":{"gitId":"jjchee77"},"content":"    private static Command parseCommandTodo(String[] args) throws DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":109,"author":{"gitId":"jjchee77"},"content":"        if (args.length \u003c 2) {","lastModifiedDate":"2024-02-03"},{"lineNumber":110,"author":{"gitId":"jjchee77"},"content":"            throw new InvalidArgumentException(\"task description\", \"is missing\");","lastModifiedDate":"2024-02-03"},{"lineNumber":111,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":112,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":113,"author":{"gitId":"jjchee77"},"content":"        String[] taskArgs \u003d Arrays.copyOfRange(args, 1, args.length);","lastModifiedDate":"2024-02-03"},{"lineNumber":114,"author":{"gitId":"jjchee77"},"content":"        String description \u003d String.join(\" \", taskArgs);","lastModifiedDate":"2024-02-03"},{"lineNumber":115,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":116,"author":{"gitId":"jjchee77"},"content":"        Todo todo \u003d new Todo(description);","lastModifiedDate":"2024-02-03"},{"lineNumber":117,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":118,"author":{"gitId":"jjchee77"},"content":"        return new CommandTodo(todo);","lastModifiedDate":"2024-02-03"},{"lineNumber":119,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":120,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":121,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":122,"author":{"gitId":"jjchee77"},"content":"    private static Deadline getDeadline(String[] taskArgs) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":123,"author":{"gitId":"jjchee77"},"content":"        List\u003cString\u003e taskArgsList \u003d Arrays.asList(taskArgs);","lastModifiedDate":"2024-02-04"},{"lineNumber":124,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":125,"author":{"gitId":"jjchee77"},"content":"        String byDelim \u003d \"/by\";","lastModifiedDate":"2024-02-04"},{"lineNumber":126,"author":{"gitId":"jjchee77"},"content":"        int byIndex \u003d taskArgsList.indexOf(byDelim);","lastModifiedDate":"2024-02-04"},{"lineNumber":127,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":128,"author":{"gitId":"jjchee77"},"content":"        if (byIndex \u003d\u003d -1 || byIndex \u003e\u003d taskArgs.length - 1) {","lastModifiedDate":"2024-02-04"},{"lineNumber":129,"author":{"gitId":"jjchee77"},"content":"            throw new InvalidArgumentException(\"/by\", \"not found\");","lastModifiedDate":"2024-02-03"},{"lineNumber":130,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":131,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":132,"author":{"gitId":"jjchee77"},"content":"        String description \u003d String.join(\" \", Arrays.copyOfRange(taskArgs, 0, byIndex));","lastModifiedDate":"2024-02-04"},{"lineNumber":133,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":134,"author":{"gitId":"jjchee77"},"content":"        String byStr \u003d taskArgs[byIndex + 1];","lastModifiedDate":"2024-02-04"},{"lineNumber":135,"author":{"gitId":"jjchee77"},"content":"        LocalDate by;","lastModifiedDate":"2024-02-03"},{"lineNumber":136,"author":{"gitId":"jjchee77"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":137,"author":{"gitId":"jjchee77"},"content":"            by \u003d LocalDate.parse(byStr);","lastModifiedDate":"2024-02-03"},{"lineNumber":138,"author":{"gitId":"jjchee77"},"content":"        } catch (DateTimeParseException dateTimeParseException) {","lastModifiedDate":"2024-02-03"},{"lineNumber":139,"author":{"gitId":"jjchee77"},"content":"            throw new InvalidArgumentException(\"/by\", \"is not a valid date\", dateTimeParseException.getMessage());","lastModifiedDate":"2024-02-03"},{"lineNumber":140,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":141,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":142,"author":{"gitId":"jjchee77"},"content":"        return new Deadline(description, by);","lastModifiedDate":"2024-02-03"},{"lineNumber":143,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":144,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":145,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":146,"author":{"gitId":"jjchee77"},"content":"     * Parses the \"deadline\" command and its arguments.","lastModifiedDate":"2024-02-03"},{"lineNumber":147,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":148,"author":{"gitId":"jjchee77"},"content":"     * @param args The arguments passed with the command.","lastModifiedDate":"2024-02-03"},{"lineNumber":149,"author":{"gitId":"jjchee77"},"content":"     * @return A CommandDeadline instance with the specified task.","lastModifiedDate":"2024-02-03"},{"lineNumber":150,"author":{"gitId":"jjchee77"},"content":"     * @throws DukeException If the task description or deadline is missing or invalid.","lastModifiedDate":"2024-02-03"},{"lineNumber":151,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":152,"author":{"gitId":"jjchee77"},"content":"    private static Command parseCommandDeadline(String[] args) throws DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":153,"author":{"gitId":"jjchee77"},"content":"        if (args.length \u003c 3) {","lastModifiedDate":"2024-02-03"},{"lineNumber":154,"author":{"gitId":"jjchee77"},"content":"            throw new InvalidArgumentException(\"task description, /by\", \"are missing\");","lastModifiedDate":"2024-02-03"},{"lineNumber":155,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":156,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":157,"author":{"gitId":"jjchee77"},"content":"        String[] taskArgs \u003d Arrays.copyOfRange(args, 1, args.length);","lastModifiedDate":"2024-02-03"},{"lineNumber":158,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":159,"author":{"gitId":"jjchee77"},"content":"        Deadline deadline \u003d getDeadline(taskArgs);","lastModifiedDate":"2024-02-04"},{"lineNumber":160,"author":{"gitId":"jjchee77"},"content":"        return new CommandDeadline(deadline);","lastModifiedDate":"2024-02-03"},{"lineNumber":161,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":162,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":163,"author":{"gitId":"jjchee77"},"content":"    private static Event getEvent(String[] taskArgs) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":164,"author":{"gitId":"jjchee77"},"content":"        List\u003cString\u003e taskArgsList \u003d Arrays.asList(taskArgs);","lastModifiedDate":"2024-02-04"},{"lineNumber":165,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":166,"author":{"gitId":"jjchee77"},"content":"        String fromDelim \u003d \"/from\";","lastModifiedDate":"2024-02-04"},{"lineNumber":167,"author":{"gitId":"jjchee77"},"content":"        String toDelim \u003d \"/to\";","lastModifiedDate":"2024-02-04"},{"lineNumber":168,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":169,"author":{"gitId":"jjchee77"},"content":"        int fromIndex \u003d taskArgsList.indexOf(fromDelim);","lastModifiedDate":"2024-02-04"},{"lineNumber":170,"author":{"gitId":"jjchee77"},"content":"        int toIndex \u003d taskArgsList.indexOf(toDelim);","lastModifiedDate":"2024-02-04"},{"lineNumber":171,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":172,"author":{"gitId":"jjchee77"},"content":"        if (fromIndex \u003d\u003d -1 || fromIndex \u003e\u003d taskArgs.length - 1) {","lastModifiedDate":"2024-02-04"},{"lineNumber":173,"author":{"gitId":"jjchee77"},"content":"            throw new InvalidArgumentException(\"/from\", \"not found\");","lastModifiedDate":"2024-02-04"},{"lineNumber":174,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":175,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":176,"author":{"gitId":"jjchee77"},"content":"        if (toIndex \u003d\u003d -1 || toIndex \u003e\u003d taskArgs.length - 1) {","lastModifiedDate":"2024-02-04"},{"lineNumber":177,"author":{"gitId":"jjchee77"},"content":"            throw new InvalidArgumentException(\"/to\", \"not found\");","lastModifiedDate":"2024-02-04"},{"lineNumber":178,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":179,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":180,"author":{"gitId":"jjchee77"},"content":"        String fromStr \u003d taskArgs[fromIndex + 1];","lastModifiedDate":"2024-02-04"},{"lineNumber":181,"author":{"gitId":"jjchee77"},"content":"        String toStr \u003d taskArgs[toIndex + 1];","lastModifiedDate":"2024-02-04"},{"lineNumber":182,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":183,"author":{"gitId":"jjchee77"},"content":"        String description \u003d String.join(\" \",","lastModifiedDate":"2024-02-04"},{"lineNumber":184,"author":{"gitId":"jjchee77"},"content":"            Arrays.copyOfRange(taskArgs, 0, Math.min(fromIndex, toIndex)));","lastModifiedDate":"2024-02-04"},{"lineNumber":185,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":186,"author":{"gitId":"jjchee77"},"content":"        LocalDate from;","lastModifiedDate":"2024-02-03"},{"lineNumber":187,"author":{"gitId":"jjchee77"},"content":"        LocalDate to;","lastModifiedDate":"2024-02-03"},{"lineNumber":188,"author":{"gitId":"jjchee77"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":189,"author":{"gitId":"jjchee77"},"content":"            from \u003d LocalDate.parse(fromStr);","lastModifiedDate":"2024-02-03"},{"lineNumber":190,"author":{"gitId":"jjchee77"},"content":"        } catch (DateTimeParseException dateTimeParseException) {","lastModifiedDate":"2024-02-03"},{"lineNumber":191,"author":{"gitId":"jjchee77"},"content":"            throw new InvalidArgumentException(\"/from\", \"is not a valid date\", dateTimeParseException.getMessage());","lastModifiedDate":"2024-02-03"},{"lineNumber":192,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":193,"author":{"gitId":"jjchee77"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":194,"author":{"gitId":"jjchee77"},"content":"            to \u003d LocalDate.parse(toStr);","lastModifiedDate":"2024-02-03"},{"lineNumber":195,"author":{"gitId":"jjchee77"},"content":"        } catch (DateTimeParseException dateTimeParseException) {","lastModifiedDate":"2024-02-03"},{"lineNumber":196,"author":{"gitId":"jjchee77"},"content":"            throw new InvalidArgumentException(\"/to\", \"is not a valid date\", dateTimeParseException.getMessage());","lastModifiedDate":"2024-02-03"},{"lineNumber":197,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":198,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":199,"author":{"gitId":"jjchee77"},"content":"        return new Event(description, from, to);","lastModifiedDate":"2024-02-03"},{"lineNumber":200,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":201,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":202,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":203,"author":{"gitId":"jjchee77"},"content":"     * Parses the \"event\" command and its arguments.","lastModifiedDate":"2024-02-03"},{"lineNumber":204,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":205,"author":{"gitId":"jjchee77"},"content":"     * @param args The arguments passed with the command.","lastModifiedDate":"2024-02-03"},{"lineNumber":206,"author":{"gitId":"jjchee77"},"content":"     * @return A CommandEvent instance with the specified task.","lastModifiedDate":"2024-02-03"},{"lineNumber":207,"author":{"gitId":"jjchee77"},"content":"     * @throws DukeException If the task description, start time, or end time is missing or invalid.","lastModifiedDate":"2024-02-03"},{"lineNumber":208,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":209,"author":{"gitId":"jjchee77"},"content":"    private static Command parseCommandEvent(String[] args) throws DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":210,"author":{"gitId":"jjchee77"},"content":"        if (args.length \u003c 4) {","lastModifiedDate":"2024-02-03"},{"lineNumber":211,"author":{"gitId":"jjchee77"},"content":"            throw new InvalidArgumentException(\"task description, /from, /to\", \"are missing\");","lastModifiedDate":"2024-02-03"},{"lineNumber":212,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":213,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":214,"author":{"gitId":"jjchee77"},"content":"        String[] taskArgs \u003d Arrays.copyOfRange(args, 1, args.length);","lastModifiedDate":"2024-02-03"},{"lineNumber":215,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":216,"author":{"gitId":"jjchee77"},"content":"        Event event \u003d getEvent(taskArgs);","lastModifiedDate":"2024-02-04"},{"lineNumber":217,"author":{"gitId":"jjchee77"},"content":"        return new CommandEvent(event);","lastModifiedDate":"2024-02-03"},{"lineNumber":218,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":219,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":220,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":221,"author":{"gitId":"jjchee77"},"content":"     * Parses the \"delete\" command and its arguments.","lastModifiedDate":"2024-02-03"},{"lineNumber":222,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":223,"author":{"gitId":"jjchee77"},"content":"     * @param args The arguments passed with the command.","lastModifiedDate":"2024-02-03"},{"lineNumber":224,"author":{"gitId":"jjchee77"},"content":"     * @return A CommandDelete instance with the specified task index.","lastModifiedDate":"2024-02-03"},{"lineNumber":225,"author":{"gitId":"jjchee77"},"content":"     * @throws DukeException If the argument is missing or not an integer.","lastModifiedDate":"2024-02-03"},{"lineNumber":226,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":227,"author":{"gitId":"jjchee77"},"content":"    private static Command parseCommandDelete(String[] args) throws DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":228,"author":{"gitId":"jjchee77"},"content":"        if (args.length \u003c 2) {","lastModifiedDate":"2024-02-03"},{"lineNumber":229,"author":{"gitId":"jjchee77"},"content":"            throw new InvalidArgumentException(\"task number\", \"is missing\");","lastModifiedDate":"2024-02-03"},{"lineNumber":230,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":231,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":232,"author":{"gitId":"jjchee77"},"content":"        int taskNum;","lastModifiedDate":"2024-02-04"},{"lineNumber":233,"author":{"gitId":"jjchee77"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":234,"author":{"gitId":"jjchee77"},"content":"            taskNum \u003d Integer.parseInt(args[1]);","lastModifiedDate":"2024-02-04"},{"lineNumber":235,"author":{"gitId":"jjchee77"},"content":"        } catch (NumberFormatException numberFormatException) {","lastModifiedDate":"2024-02-03"},{"lineNumber":236,"author":{"gitId":"jjchee77"},"content":"            throw new InvalidArgumentException(\"task number\", \"cannot be parsed to an integer\",","lastModifiedDate":"2024-02-03"},{"lineNumber":237,"author":{"gitId":"jjchee77"},"content":"                numberFormatException.getMessage());","lastModifiedDate":"2024-02-03"},{"lineNumber":238,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":239,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":240,"author":{"gitId":"jjchee77"},"content":"        int taskIndex \u003d taskNum - 1;","lastModifiedDate":"2024-02-04"},{"lineNumber":241,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":242,"author":{"gitId":"jjchee77"},"content":"        return new CommandDelete(taskIndex);","lastModifiedDate":"2024-02-04"},{"lineNumber":243,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":244,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":245,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":246,"author":{"gitId":"jjchee77"},"content":"     * Parses the \"find\" command and its arguments.","lastModifiedDate":"2024-02-03"},{"lineNumber":247,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":248,"author":{"gitId":"jjchee77"},"content":"     * @param args The arguments passed with the command.","lastModifiedDate":"2024-02-03"},{"lineNumber":249,"author":{"gitId":"jjchee77"},"content":"     * @return A CommandFind instance with the specified keyword.","lastModifiedDate":"2024-02-03"},{"lineNumber":250,"author":{"gitId":"jjchee77"},"content":"     * @throws DukeException If the search keyword is missing.","lastModifiedDate":"2024-02-03"},{"lineNumber":251,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":252,"author":{"gitId":"jjchee77"},"content":"    private static Command parseCommandFind(String[] args) throws DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":253,"author":{"gitId":"jjchee77"},"content":"        if (args.length \u003c 2) {","lastModifiedDate":"2024-02-03"},{"lineNumber":254,"author":{"gitId":"jjchee77"},"content":"            throw new InvalidArgumentException(\"search keyword\", \"is missing\");","lastModifiedDate":"2024-02-03"},{"lineNumber":255,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":256,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":257,"author":{"gitId":"jjchee77"},"content":"        String keyword \u003d args[1];","lastModifiedDate":"2024-02-03"},{"lineNumber":258,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":259,"author":{"gitId":"jjchee77"},"content":"        return new CommandFind(keyword);","lastModifiedDate":"2024-02-03"},{"lineNumber":260,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":261,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":262,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":263,"author":{"gitId":"jjchee77"},"content":"     * Parses an unknown command.","lastModifiedDate":"2024-02-03"},{"lineNumber":264,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":265,"author":{"gitId":"jjchee77"},"content":"     * @return A CommandUnknown instance.","lastModifiedDate":"2024-02-03"},{"lineNumber":266,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":267,"author":{"gitId":"jjchee77"},"content":"    private static Command parseCommandUnknown() {","lastModifiedDate":"2024-02-03"},{"lineNumber":268,"author":{"gitId":"jjchee77"},"content":"        return new CommandUnknown();","lastModifiedDate":"2024-02-03"},{"lineNumber":269,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":270,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":271,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":272,"author":{"gitId":"jjchee77"},"content":"     * Parses the full command input by the user into a Command object.","lastModifiedDate":"2024-02-03"},{"lineNumber":273,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":274,"author":{"gitId":"jjchee77"},"content":"     * @param fullCommand The full line of input from the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":275,"author":{"gitId":"jjchee77"},"content":"     * @return A Command object representing the user\u0027s intent.","lastModifiedDate":"2024-02-03"},{"lineNumber":276,"author":{"gitId":"jjchee77"},"content":"     * @throws DukeException If the input does not conform to the expected format for known commands.","lastModifiedDate":"2024-02-03"},{"lineNumber":277,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":278,"author":{"gitId":"jjchee77"},"content":"    public static Command parse(String fullCommand) throws DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":279,"author":{"gitId":"jjchee77"},"content":"        fullCommand \u003d fullCommand.strip();","lastModifiedDate":"2024-02-03"},{"lineNumber":280,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":281,"author":{"gitId":"jjchee77"},"content":"        String[] args \u003d fullCommand.split(\" \");","lastModifiedDate":"2024-02-03"},{"lineNumber":282,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":283,"author":{"gitId":"jjchee77"},"content":"        String commandTypeStr \u003d args[0];","lastModifiedDate":"2024-02-04"},{"lineNumber":284,"author":{"gitId":"jjchee77"},"content":"        commandTypeStr \u003d commandTypeStr.toUpperCase();","lastModifiedDate":"2024-02-04"},{"lineNumber":285,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":286,"author":{"gitId":"jjchee77"},"content":"        CommandType commandType \u003d CommandType.valueOf(commandTypeStr);","lastModifiedDate":"2024-02-04"},{"lineNumber":287,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":288,"author":{"gitId":"jjchee77"},"content":"        Command command;","lastModifiedDate":"2024-02-03"},{"lineNumber":289,"author":{"gitId":"jjchee77"},"content":"        switch (commandType) {","lastModifiedDate":"2024-02-03"},{"lineNumber":290,"author":{"gitId":"jjchee77"},"content":"        case LIST:","lastModifiedDate":"2024-02-04"},{"lineNumber":291,"author":{"gitId":"jjchee77"},"content":"            command \u003d parseCommandList();","lastModifiedDate":"2024-02-03"},{"lineNumber":292,"author":{"gitId":"jjchee77"},"content":"            break;","lastModifiedDate":"2024-02-03"},{"lineNumber":293,"author":{"gitId":"jjchee77"},"content":"        case BYE:","lastModifiedDate":"2024-02-04"},{"lineNumber":294,"author":{"gitId":"jjchee77"},"content":"            command \u003d parseCommandBye();","lastModifiedDate":"2024-02-03"},{"lineNumber":295,"author":{"gitId":"jjchee77"},"content":"            break;","lastModifiedDate":"2024-02-03"},{"lineNumber":296,"author":{"gitId":"jjchee77"},"content":"        case MARK:","lastModifiedDate":"2024-02-04"},{"lineNumber":297,"author":{"gitId":"jjchee77"},"content":"            command \u003d parseCommandMark(args);","lastModifiedDate":"2024-02-03"},{"lineNumber":298,"author":{"gitId":"jjchee77"},"content":"            break;","lastModifiedDate":"2024-02-03"},{"lineNumber":299,"author":{"gitId":"jjchee77"},"content":"        case UNMARK:","lastModifiedDate":"2024-02-04"},{"lineNumber":300,"author":{"gitId":"jjchee77"},"content":"            command \u003d parseCommandUnmark(args);","lastModifiedDate":"2024-02-03"},{"lineNumber":301,"author":{"gitId":"jjchee77"},"content":"            break;","lastModifiedDate":"2024-02-03"},{"lineNumber":302,"author":{"gitId":"jjchee77"},"content":"        case TODO:","lastModifiedDate":"2024-02-04"},{"lineNumber":303,"author":{"gitId":"jjchee77"},"content":"            command \u003d parseCommandTodo(args);","lastModifiedDate":"2024-02-03"},{"lineNumber":304,"author":{"gitId":"jjchee77"},"content":"            break;","lastModifiedDate":"2024-02-03"},{"lineNumber":305,"author":{"gitId":"jjchee77"},"content":"        case DEADLINE:","lastModifiedDate":"2024-02-04"},{"lineNumber":306,"author":{"gitId":"jjchee77"},"content":"            command \u003d parseCommandDeadline(args);","lastModifiedDate":"2024-02-03"},{"lineNumber":307,"author":{"gitId":"jjchee77"},"content":"            break;","lastModifiedDate":"2024-02-03"},{"lineNumber":308,"author":{"gitId":"jjchee77"},"content":"        case EVENT:","lastModifiedDate":"2024-02-04"},{"lineNumber":309,"author":{"gitId":"jjchee77"},"content":"            command \u003d parseCommandEvent(args);","lastModifiedDate":"2024-02-03"},{"lineNumber":310,"author":{"gitId":"jjchee77"},"content":"            break;","lastModifiedDate":"2024-02-03"},{"lineNumber":311,"author":{"gitId":"jjchee77"},"content":"        case DELETE:","lastModifiedDate":"2024-02-04"},{"lineNumber":312,"author":{"gitId":"jjchee77"},"content":"            command \u003d parseCommandDelete(args);","lastModifiedDate":"2024-02-03"},{"lineNumber":313,"author":{"gitId":"jjchee77"},"content":"            break;","lastModifiedDate":"2024-02-03"},{"lineNumber":314,"author":{"gitId":"jjchee77"},"content":"        case FIND:","lastModifiedDate":"2024-02-04"},{"lineNumber":315,"author":{"gitId":"jjchee77"},"content":"            command \u003d parseCommandFind(args);","lastModifiedDate":"2024-02-03"},{"lineNumber":316,"author":{"gitId":"jjchee77"},"content":"            break;","lastModifiedDate":"2024-02-03"},{"lineNumber":317,"author":{"gitId":"jjchee77"},"content":"        default:","lastModifiedDate":"2024-02-03"},{"lineNumber":318,"author":{"gitId":"jjchee77"},"content":"            command \u003d parseCommandUnknown();","lastModifiedDate":"2024-02-03"},{"lineNumber":319,"author":{"gitId":"jjchee77"},"content":"            break;","lastModifiedDate":"2024-02-03"},{"lineNumber":320,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":321,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":322,"author":{"gitId":"jjchee77"},"content":"        return command;","lastModifiedDate":"2024-02-03"},{"lineNumber":323,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":324,"author":{"gitId":"jjchee77"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"jjchee77":324}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jjchee77"},"content":"package duke.storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"jjchee77"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"jjchee77"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"jjchee77"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"jjchee77"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"jjchee77"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"jjchee77"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"jjchee77"},"content":"import duke.exceptions.storage.CreateTasksFileFailedException;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"jjchee77"},"content":"import duke.exceptions.storage.LoadTasksFailedException;","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"jjchee77"},"content":"import duke.exceptions.storage.SaveTasksFailedException;","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"jjchee77"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"jjchee77"},"content":"import duke.tasks.Event;","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"jjchee77"},"content":"import duke.tasks.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"jjchee77"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"jjchee77"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"jjchee77"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"jjchee77"},"content":" * Handles loading and saving tasks to and from a file.","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"jjchee77"},"content":" * This class provides functionality to read tasks from a file upon starting the application","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"jjchee77"},"content":" * and to save tasks into the file upon exiting.","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"jjchee77"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"jjchee77"},"content":"public class Storage {","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"jjchee77"},"content":"    private final Path filePath;","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"jjchee77"},"content":"    private final String argDelimiter;","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"jjchee77"},"content":"     * Constructs a Storage object with a specified file path and argument delimiter.","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"jjchee77"},"content":"     * @param filePath The file path where tasks are stored.","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"jjchee77"},"content":"     * @param argDelimiter The delimiter used to separate task attributes in the file.","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"jjchee77"},"content":"    public Storage(Path filePath, String argDelimiter) {","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"jjchee77"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"jjchee77"},"content":"        this.argDelimiter \u003d argDelimiter;","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"jjchee77"},"content":"     * Ensures the file for storing tasks exists. If it does not, attempts to create it.","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"jjchee77"},"content":"     * @throws DukeException If creating the file or directories fails.","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"jjchee77"},"content":"    private void createFileIfDontExist() throws DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"jjchee77"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"jjchee77"},"content":"            if (!Files.exists(this.filePath)) {","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"jjchee77"},"content":"                Path parentDir \u003d this.filePath.getParent();","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"jjchee77"},"content":"                if (!Files.exists(parentDir)) {","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"jjchee77"},"content":"                    Files.createDirectories(parentDir);","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"jjchee77"},"content":"                }","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"jjchee77"},"content":"                Files.createFile(this.filePath);","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"jjchee77"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"jjchee77"},"content":"        } catch (IOException ioException) {","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"jjchee77"},"content":"            throw new CreateTasksFileFailedException(ioException);","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"jjchee77"},"content":"     * Parses task arguments into a Task object.","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"jjchee77"},"content":"     * @param taskArgs The array of strings representing task arguments.","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"jjchee77"},"content":"     * @return A Task object if parsing is successful, null otherwise.","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"jjchee77"},"content":"    private Task parseTask(String[] taskArgs) throws Exception {","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"jjchee77"},"content":"        String taskType \u003d taskArgs[0];","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"jjchee77"},"content":"        Task task;","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"jjchee77"},"content":"        String description;","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"jjchee77"},"content":"        boolean isDone;","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"jjchee77"},"content":"        switch (taskType) {","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"jjchee77"},"content":"        case \"deadline\":","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"jjchee77"},"content":"            description \u003d taskArgs[1];","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"jjchee77"},"content":"            LocalDate by \u003d LocalDate.parse(taskArgs[2]);","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"jjchee77"},"content":"            isDone \u003d taskArgs[3].equals(\"1\");","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"jjchee77"},"content":"            task \u003d new Deadline(description, isDone, by);","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"jjchee77"},"content":"            break;","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"jjchee77"},"content":"        case \"event\":","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"jjchee77"},"content":"            description \u003d taskArgs[1];","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"jjchee77"},"content":"            LocalDate from \u003d LocalDate.parse(taskArgs[2]);","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"jjchee77"},"content":"            LocalDate to \u003d LocalDate.parse(taskArgs[3]);","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"jjchee77"},"content":"            isDone \u003d taskArgs[4].equals(\"1\");","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"jjchee77"},"content":"            task \u003d new Event(description, isDone, from, to);","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"jjchee77"},"content":"            break;","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"jjchee77"},"content":"        case \"todo\":","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"jjchee77"},"content":"            description \u003d taskArgs[1];","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"jjchee77"},"content":"            isDone \u003d taskArgs[2].equals(\"1\");","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"jjchee77"},"content":"            task \u003d new Todo(description, isDone);","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"jjchee77"},"content":"            break;","lastModifiedDate":"2024-02-03"},{"lineNumber":89,"author":{"gitId":"jjchee77"},"content":"        default:","lastModifiedDate":"2024-02-03"},{"lineNumber":90,"author":{"gitId":"jjchee77"},"content":"            throw new LoadTasksFailedException(\"Unknown task type.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":91,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":92,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"jjchee77"},"content":"        return task;","lastModifiedDate":"2024-02-03"},{"lineNumber":94,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":95,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":96,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":97,"author":{"gitId":"jjchee77"},"content":"     * Reads tasks from the file and constructs a list of tasks from it.","lastModifiedDate":"2024-02-03"},{"lineNumber":98,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":99,"author":{"gitId":"jjchee77"},"content":"     * @return A list of tasks loaded from the file.","lastModifiedDate":"2024-02-03"},{"lineNumber":100,"author":{"gitId":"jjchee77"},"content":"     * @throws DukeException If reading from the file fails or the file format is incorrect.","lastModifiedDate":"2024-02-03"},{"lineNumber":101,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":102,"author":{"gitId":"jjchee77"},"content":"    private ArrayList\u003cTask\u003e readTasks() throws DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":103,"author":{"gitId":"jjchee77"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":104,"author":{"gitId":"jjchee77"},"content":"            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-03"},{"lineNumber":105,"author":{"gitId":"jjchee77"},"content":"            String fileContent \u003d Files.readString(this.filePath);","lastModifiedDate":"2024-02-03"},{"lineNumber":106,"author":{"gitId":"jjchee77"},"content":"            String[] fileContentSplit \u003d fileContent.split(\"\\n\");","lastModifiedDate":"2024-02-03"},{"lineNumber":107,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":108,"author":{"gitId":"jjchee77"},"content":"            for (String taskArgsStr : fileContentSplit) {","lastModifiedDate":"2024-02-03"},{"lineNumber":109,"author":{"gitId":"jjchee77"},"content":"                String[] taskArgs \u003d taskArgsStr.split(this.argDelimiter);","lastModifiedDate":"2024-02-03"},{"lineNumber":110,"author":{"gitId":"jjchee77"},"content":"                Task task \u003d parseTask(taskArgs);","lastModifiedDate":"2024-02-03"},{"lineNumber":111,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":112,"author":{"gitId":"jjchee77"},"content":"                tasks.add(task);","lastModifiedDate":"2024-02-03"},{"lineNumber":113,"author":{"gitId":"jjchee77"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":114,"author":{"gitId":"jjchee77"},"content":"            return tasks;","lastModifiedDate":"2024-02-03"},{"lineNumber":115,"author":{"gitId":"jjchee77"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2024-02-03"},{"lineNumber":116,"author":{"gitId":"jjchee77"},"content":"            throw new LoadTasksFailedException(exception);","lastModifiedDate":"2024-02-03"},{"lineNumber":117,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":118,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":119,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":120,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":121,"author":{"gitId":"jjchee77"},"content":"     * Loads tasks from the storage file.","lastModifiedDate":"2024-02-03"},{"lineNumber":122,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":123,"author":{"gitId":"jjchee77"},"content":"     * @return An ArrayList of Task objects loaded from the file.","lastModifiedDate":"2024-02-03"},{"lineNumber":124,"author":{"gitId":"jjchee77"},"content":"     * @throws DukeException If the file does not exist and cannot be created, or if tasks cannot be loaded.","lastModifiedDate":"2024-02-03"},{"lineNumber":125,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":126,"author":{"gitId":"jjchee77"},"content":"    public ArrayList\u003cTask\u003e loadTasks() throws DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":127,"author":{"gitId":"jjchee77"},"content":"        this.createFileIfDontExist();","lastModifiedDate":"2024-02-03"},{"lineNumber":128,"author":{"gitId":"jjchee77"},"content":"        return this.readTasks();","lastModifiedDate":"2024-02-03"},{"lineNumber":129,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":130,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":131,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":132,"author":{"gitId":"jjchee77"},"content":"     * Saves the current list of tasks to the file.","lastModifiedDate":"2024-02-03"},{"lineNumber":133,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":134,"author":{"gitId":"jjchee77"},"content":"     * @param tasks The TaskList containing tasks to be saved.","lastModifiedDate":"2024-02-03"},{"lineNumber":135,"author":{"gitId":"jjchee77"},"content":"     * @throws DukeException If saving the tasks to the file fails.","lastModifiedDate":"2024-02-03"},{"lineNumber":136,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":137,"author":{"gitId":"jjchee77"},"content":"    public void saveTasks(TaskList tasks) throws DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":138,"author":{"gitId":"jjchee77"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":139,"author":{"gitId":"jjchee77"},"content":"            ArrayList\u003cString\u003e tasksData \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-03"},{"lineNumber":140,"author":{"gitId":"jjchee77"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-03"},{"lineNumber":141,"author":{"gitId":"jjchee77"},"content":"                tasksData.add(tasks.get(i).serialize());","lastModifiedDate":"2024-02-03"},{"lineNumber":142,"author":{"gitId":"jjchee77"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":143,"author":{"gitId":"jjchee77"},"content":"            Files.writeString(this.filePath, String.join(\"\\n\", tasksData));","lastModifiedDate":"2024-02-03"},{"lineNumber":144,"author":{"gitId":"jjchee77"},"content":"        } catch (IOException ioException) {","lastModifiedDate":"2024-02-03"},{"lineNumber":145,"author":{"gitId":"jjchee77"},"content":"            throw new SaveTasksFailedException(ioException);","lastModifiedDate":"2024-02-03"},{"lineNumber":146,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":147,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":148,"author":{"gitId":"jjchee77"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"jjchee77":148}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jjchee77"},"content":"package duke.tasks;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"jjchee77"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"jjchee77"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"jjchee77"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"jjchee77"},"content":"import duke.Duke;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"jjchee77"},"content":"import duke.exceptions.tasks.EmptyDescriptionException;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"jjchee77"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"jjchee77"},"content":" * Represents a Deadline task in the Duke application.","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"jjchee77"},"content":" * A Deadline task is a task that needs to be done before a specific date.","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"jjchee77"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"jjchee77"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"jjchee77"},"content":"     * The formatter for displaying the deadline date in a human-readable form.","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"jjchee77"},"content":"    private static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"jjchee77"},"content":"     * The deadline date by which the task needs to be completed.","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"jjchee77"},"content":"    private final LocalDate by;","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"jjchee77"},"content":"     * Constructs a new Deadline task with the specified description and deadline date.","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"jjchee77"},"content":"     * The task is initially not completed.","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"jjchee77"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"jjchee77"},"content":"     * @param by The deadline date by which the task needs to be completed.","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"jjchee77"},"content":"     * @throws EmptyDescriptionException If the description is empty.","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"jjchee77"},"content":"    public Deadline(String description, LocalDate by) throws EmptyDescriptionException {","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"jjchee77"},"content":"        super(description);","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"jjchee77"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"jjchee77"},"content":"     * Constructs a new Deadline task with the specified description, completion status, and deadline date.","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"jjchee77"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"jjchee77"},"content":"     * @param isDone The completion status of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"jjchee77"},"content":"     * @param by The deadline date by which the task needs to be completed.","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"jjchee77"},"content":"     * @throws EmptyDescriptionException If the description is empty.","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"jjchee77"},"content":"    public Deadline(String description, boolean isDone, LocalDate by) throws EmptyDescriptionException {","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"jjchee77"},"content":"        super(description, isDone);","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"jjchee77"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"jjchee77"},"content":"     * Returns the deadline date by which the task needs to be completed.","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"jjchee77"},"content":"     * @return The deadline date.","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"jjchee77"},"content":"    public LocalDate getBy() {","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"jjchee77"},"content":"        return this.by;","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"jjchee77"},"content":"     * Serializes the Deadline task to a string format for storage.","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"jjchee77"},"content":"     * This includes the task type, description, deadline date, and completion status.","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"jjchee77"},"content":"     * @return A string representing the serialized form of the Deadline task.","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"jjchee77"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"jjchee77"},"content":"    public String serialize() {","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"jjchee77"},"content":"        ArrayList\u003cString\u003e taskArgs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"jjchee77"},"content":"        taskArgs.add(\"deadline\");","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"jjchee77"},"content":"        taskArgs.add(this.getDescription());","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"jjchee77"},"content":"        taskArgs.add(this.getBy().toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"jjchee77"},"content":"        taskArgs.add(this.isDone() ? \"1\" : \"0\");","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"jjchee77"},"content":"        return String.join(Duke.ARG_DELIMITER, taskArgs);","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"jjchee77"},"content":"     * Returns a string representation of the Deadline task, including its status icon, description, and deadline date.","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"jjchee77"},"content":"     * @return The string representation of the Deadline task.","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"jjchee77"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":84,"author":{"gitId":"jjchee77"},"content":"    public String toString() {","lastModifiedDate":"2024-01-29"},{"lineNumber":85,"author":{"gitId":"jjchee77"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), this.by.format(DATE_TIME_FORMATTER));","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":87,"author":{"gitId":"jjchee77"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"jjchee77":87}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jjchee77"},"content":"package duke.tasks;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"jjchee77"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"jjchee77"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"jjchee77"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"jjchee77"},"content":"import duke.Duke;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"jjchee77"},"content":"import duke.exceptions.tasks.EmptyDescriptionException;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"jjchee77"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"jjchee77"},"content":" * Represents an Event task in the Duke application.","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"jjchee77"},"content":" * An Event task is a task that starts and ends at specific times.","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"jjchee77"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"jjchee77"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"jjchee77"},"content":"     * The formatter for displaying the event dates in a human-readable form.","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"jjchee77"},"content":"    private static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"jjchee77"},"content":"     * The start date of the event.","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"jjchee77"},"content":"    private final LocalDate from;","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"jjchee77"},"content":"     * The end date of the event.","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"jjchee77"},"content":"    private final LocalDate to;","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"jjchee77"},"content":"     * Constructs a new Event task with the specified description and time range (start and end dates).","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"jjchee77"},"content":"     * The task is initially not completed.","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"jjchee77"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"jjchee77"},"content":"     * @param from The start date of the event.","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"jjchee77"},"content":"     * @param to The end date of the event.","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"jjchee77"},"content":"     * @throws EmptyDescriptionException If the description is empty.","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"jjchee77"},"content":"    public Event(String description, LocalDate from, LocalDate to) throws EmptyDescriptionException {","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"jjchee77"},"content":"        super(description);","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"jjchee77"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"jjchee77"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"jjchee77"},"content":"     * Constructs a new Event task with the","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"jjchee77"},"content":"     * specified description, completion status, and time range (start and end dates).","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"jjchee77"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"jjchee77"},"content":"     * @param isDone The completion status of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"jjchee77"},"content":"     * @param from The start date of the event.","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"jjchee77"},"content":"     * @param to The end date of the event.","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"jjchee77"},"content":"     * @throws EmptyDescriptionException If the description is empty.","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"jjchee77"},"content":"    public Event(String description, boolean isDone, LocalDate from, LocalDate to) throws EmptyDescriptionException {","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"jjchee77"},"content":"        super(description, isDone);","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"jjchee77"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"jjchee77"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"jjchee77"},"content":"     * Returns the start date of the event.","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"jjchee77"},"content":"     * @return The start date.","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"jjchee77"},"content":"    public LocalDate getFrom() {","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"jjchee77"},"content":"        return this.from;","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"jjchee77"},"content":"     * Returns the end date of the event.","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"jjchee77"},"content":"     * @return The end date.","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"jjchee77"},"content":"    public LocalDate getTo() {","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"jjchee77"},"content":"        return this.to;","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"jjchee77"},"content":"     * Serializes the Event task to a string format for storage.","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"jjchee77"},"content":"     * This includes the task type, description, start and end dates, and completion status.","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"jjchee77"},"content":"     * @return A string representing the serialized form of the Event task.","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"jjchee77"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"jjchee77"},"content":"    public String serialize() {","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"jjchee77"},"content":"        ArrayList\u003cString\u003e taskArgs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":89,"author":{"gitId":"jjchee77"},"content":"        taskArgs.add(\"event\");","lastModifiedDate":"2024-02-03"},{"lineNumber":90,"author":{"gitId":"jjchee77"},"content":"        taskArgs.add(this.getDescription());","lastModifiedDate":"2024-02-03"},{"lineNumber":91,"author":{"gitId":"jjchee77"},"content":"        taskArgs.add(this.getFrom().toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":92,"author":{"gitId":"jjchee77"},"content":"        taskArgs.add(this.getTo().toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"jjchee77"},"content":"        taskArgs.add(this.isDone() ? \"1\" : \"0\");","lastModifiedDate":"2024-02-03"},{"lineNumber":94,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":95,"author":{"gitId":"jjchee77"},"content":"        return String.join(Duke.ARG_DELIMITER, taskArgs);","lastModifiedDate":"2024-02-03"},{"lineNumber":96,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":97,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":98,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":99,"author":{"gitId":"jjchee77"},"content":"     * Returns a string representation of the Event task, including its status icon, description, and time range.","lastModifiedDate":"2024-02-03"},{"lineNumber":100,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":101,"author":{"gitId":"jjchee77"},"content":"     * @return The string representation of the Event task.","lastModifiedDate":"2024-02-03"},{"lineNumber":102,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":103,"author":{"gitId":"jjchee77"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":104,"author":{"gitId":"jjchee77"},"content":"    public String toString() {","lastModifiedDate":"2024-01-29"},{"lineNumber":105,"author":{"gitId":"jjchee77"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\", super.toString(),","lastModifiedDate":"2024-02-03"},{"lineNumber":106,"author":{"gitId":"jjchee77"},"content":"            this.from.format(DATE_TIME_FORMATTER), this.to.format(DATE_TIME_FORMATTER));","lastModifiedDate":"2024-02-03"},{"lineNumber":107,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":108,"author":{"gitId":"jjchee77"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"jjchee77":108}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jjchee77"},"content":"package duke.tasks;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"jjchee77"},"content":"import duke.exceptions.tasks.EmptyDescriptionException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"jjchee77"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"jjchee77"},"content":" * Represents an abstract Task in the Duke application.","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"jjchee77"},"content":" * This class provides a framework for different types of tasks (e.g., todo, deadline, event)","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"jjchee77"},"content":" * with common properties such as description and completion status.","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"jjchee77"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"jjchee77"},"content":"public abstract class Task {","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"jjchee77"},"content":"    private String description;","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"jjchee77"},"content":"    private boolean isDone;","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"jjchee77"},"content":"     * Constructs a new Task with the specified description. The task is initially not completed.","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"jjchee77"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"jjchee77"},"content":"     * @throws EmptyDescriptionException If the description is empty.","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"jjchee77"},"content":"    public Task(String description) throws EmptyDescriptionException {","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"jjchee77"},"content":"        this.setDescription(description);","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"jjchee77"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"jjchee77"},"content":"     * Constructs a new Task with the specified description and completion status.","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"jjchee77"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"jjchee77"},"content":"     * @param isDone The completion status of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"jjchee77"},"content":"     * @throws EmptyDescriptionException If the description is empty.","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"jjchee77"},"content":"    public Task(String description, boolean isDone) throws EmptyDescriptionException {","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"jjchee77"},"content":"        this.setDescription(description);","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"jjchee77"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"jjchee77"},"content":"     * Serializes the task to a string format for storage.","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"jjchee77"},"content":"     * This method must be implemented by subclasses to define how a task is serialized.","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"jjchee77"},"content":"     * @return A string representing the serialized form of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"jjchee77"},"content":"    public abstract String serialize();","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"jjchee77"},"content":"     * Returns the description of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"jjchee77"},"content":"     * @return The task\u0027s description.","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"jjchee77"},"content":"    public String getDescription() {","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"jjchee77"},"content":"        return this.description;","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"jjchee77"},"content":"     * Returns the status icon of the task, indicating whether it is done.","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"jjchee77"},"content":"     * \"X\" indicates the task is done, and a space indicates it is not done.","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"jjchee77"},"content":"     * @return The status icon as a string.","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"jjchee77"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"jjchee77"},"content":"        return (this.isDone ? \"X\" : \" \");","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"jjchee77"},"content":"     * Sets the description of the task. If the description is empty, an exception is thrown.","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"jjchee77"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"jjchee77"},"content":"     * @throws EmptyDescriptionException If the description is empty.","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"jjchee77"},"content":"    private void setDescription(String description) throws EmptyDescriptionException {","lastModifiedDate":"2024-01-29"},{"lineNumber":71,"author":{"gitId":"jjchee77"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"jjchee77"},"content":"            throw new EmptyDescriptionException();","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"jjchee77"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-29"},{"lineNumber":75,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":76,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":77,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"jjchee77"},"content":"     * Returns whether the task is completed.","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"jjchee77"},"content":"     * @return True if the task is done, false otherwise.","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"jjchee77"},"content":"    public boolean isDone() {","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"jjchee77"},"content":"        return this.isDone;","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"jjchee77"},"content":"     * Marks the task as completed.","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":89,"author":{"gitId":"jjchee77"},"content":"    public void mark() {","lastModifiedDate":"2024-01-29"},{"lineNumber":90,"author":{"gitId":"jjchee77"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-29"},{"lineNumber":91,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":92,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":93,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":94,"author":{"gitId":"jjchee77"},"content":"     * Marks the task as not completed.","lastModifiedDate":"2024-02-03"},{"lineNumber":95,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":96,"author":{"gitId":"jjchee77"},"content":"    public void unmark() {","lastModifiedDate":"2024-01-29"},{"lineNumber":97,"author":{"gitId":"jjchee77"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-29"},{"lineNumber":98,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":99,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":100,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":101,"author":{"gitId":"jjchee77"},"content":"     * Returns a string representation of the task, including its status icon and description.","lastModifiedDate":"2024-02-03"},{"lineNumber":102,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":103,"author":{"gitId":"jjchee77"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":104,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":105,"author":{"gitId":"jjchee77"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":106,"author":{"gitId":"jjchee77"},"content":"    public String toString() {","lastModifiedDate":"2024-01-29"},{"lineNumber":107,"author":{"gitId":"jjchee77"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.getDescription());","lastModifiedDate":"2024-01-29"},{"lineNumber":108,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":109,"author":{"gitId":"jjchee77"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"jjchee77":109}},{"path":"src/main/java/duke/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jjchee77"},"content":"package duke.tasks;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"jjchee77"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"jjchee77"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"jjchee77"},"content":"import duke.exceptions.tasks.MissingTaskException;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"jjchee77"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"jjchee77"},"content":" * Represents a list of tasks in the Duke application.","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"jjchee77"},"content":" * This class encapsulates an ArrayList of Task objects, providing methods","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"jjchee77"},"content":" * to manipulate and access the tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"jjchee77"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"jjchee77"},"content":"public class TaskList {","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"jjchee77"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"jjchee77"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"jjchee77"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"jjchee77"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"jjchee77"},"content":"     * Constructs a TaskList with the specified list of tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"jjchee77"},"content":"     * @param tasks The initial list of tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"jjchee77"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"jjchee77"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"jjchee77"},"content":"     * Retrieves a task from the list at the specified index.","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"jjchee77"},"content":"     * @param index The index of the task to retrieve.","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"jjchee77"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"jjchee77"},"content":"     * @throws DukeException If the index is out of bounds, indicating the task does not exist.","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"jjchee77"},"content":"    public Task get(int index) throws DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"jjchee77"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"jjchee77"},"content":"            return this.tasks.get(index);","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"jjchee77"},"content":"        } catch (IndexOutOfBoundsException indexOutOfBoundsException) {","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"jjchee77"},"content":"            throw new MissingTaskException();","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"jjchee77"},"content":"     * Adds a task to the list.","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"jjchee77"},"content":"     * @param task The task to be added.","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"jjchee77"},"content":"    public void add(Task task) {","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"jjchee77"},"content":"        this.tasks.add(task);","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"jjchee77"},"content":"     * Removes and returns a task from the list at the specified index.","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"jjchee77"},"content":"     * @param index The index of the task to remove.","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"jjchee77"},"content":"     * @return The removed task.","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"jjchee77"},"content":"     * @throws DukeException If the index is out of bounds, indicating the task cannot be removed.","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"jjchee77"},"content":"    public Task remove(int index) throws DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"jjchee77"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"jjchee77"},"content":"            return this.tasks.remove(index);","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"jjchee77"},"content":"        } catch (IndexOutOfBoundsException indexOutOfBoundsException) {","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"jjchee77"},"content":"            throw new MissingTaskException();","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"jjchee77"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"jjchee77"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"jjchee77"},"content":"     * @return The size of the task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"jjchee77"},"content":"    public int size() {","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"jjchee77"},"content":"        return this.tasks.size();","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"jjchee77"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"jjchee77":79}},{"path":"src/main/java/duke/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jjchee77"},"content":"package duke.tasks;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"jjchee77"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"jjchee77"},"content":"import duke.Duke;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"jjchee77"},"content":"import duke.exceptions.tasks.EmptyDescriptionException;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"jjchee77"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"jjchee77"},"content":" * Represents a Todo task in the Duke application.","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"jjchee77"},"content":" * A Todo task is a task without any date/time attached to it.","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"jjchee77"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"jjchee77"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"jjchee77"},"content":"     * Constructs a new Todo task with the specified description.","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"jjchee77"},"content":"     * The task is initially not completed.","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"jjchee77"},"content":"     * @param description The description of the Todo task.","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"jjchee77"},"content":"     * @throws EmptyDescriptionException If the description is empty.","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"jjchee77"},"content":"    public Todo(String description) throws EmptyDescriptionException {","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"jjchee77"},"content":"        super(description);","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"jjchee77"},"content":"     * Constructs a new Todo task with the specified description and completion status.","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"jjchee77"},"content":"     * @param description The description of the Todo task.","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"jjchee77"},"content":"     * @param isDone The completion status of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"jjchee77"},"content":"     * @throws EmptyDescriptionException If the description is empty.","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"jjchee77"},"content":"    public Todo(String description, boolean isDone) throws EmptyDescriptionException {","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"jjchee77"},"content":"        super(description, isDone);","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"jjchee77"},"content":"     * Serializes the Todo task to a string format for storage.","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"jjchee77"},"content":"     * This includes the task type, description, and completion status.","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"jjchee77"},"content":"     * @return A string representing the serialized form of the Todo task.","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"jjchee77"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"jjchee77"},"content":"    public String serialize() {","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"jjchee77"},"content":"        ArrayList\u003cString\u003e taskArgs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"jjchee77"},"content":"        taskArgs.add(\"todo\");","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"jjchee77"},"content":"        taskArgs.add(this.getDescription());","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"jjchee77"},"content":"        taskArgs.add(this.isDone() ? \"1\" : \"0\");","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"jjchee77"},"content":"        return String.join(Duke.ARG_DELIMITER, taskArgs);","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"jjchee77"},"content":"     * Returns a string representation of the Todo task, including its status icon and description.","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"jjchee77"},"content":"     * @return The string representation of the Todo task.","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"jjchee77"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"jjchee77"},"content":"    public String toString() {","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"jjchee77"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"jjchee77"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"jjchee77":61}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jjchee77"},"content":"package duke.ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"jjchee77"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"jjchee77"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"jjchee77"},"content":" * Represents the User Interface component of the Duke application.","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"jjchee77"},"content":" * This class is responsible for all user interactions, including reading user input","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"jjchee77"},"content":" * and displaying messages to the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"jjchee77"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"jjchee77"},"content":"public class Ui {","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"jjchee77"},"content":"     * The name of the chat-bot, used in the welcome message.","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"jjchee77"},"content":"    private static final String NAME \u003d \"Duke\";","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"jjchee77"},"content":"     * The character used to generate borders in the user interface.","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"jjchee77"},"content":"    private static final Character BORDER_CHAR \u003d \u0027_\u0027;","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"jjchee77"},"content":"     * The length of the border generated in the user interface.","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"jjchee77"},"content":"    private static final Integer BORDER_LEN \u003d 60;","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"jjchee77"},"content":"     * Scanner used to read user input.","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"jjchee77"},"content":"    private final Scanner scanner;","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"jjchee77"},"content":"     * Constructs a new Ui object.","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"jjchee77"},"content":"     * Initializes the scanner used to read user input from the console.","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"jjchee77"},"content":"    public Ui() {","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"jjchee77"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"jjchee77"},"content":"     * Displays a horizontal line border to the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"jjchee77"},"content":"     * This is used to separate different parts of the chat-bot messages for clarity.","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"jjchee77"},"content":"    public void showLine() {","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"jjchee77"},"content":"        System.out.println(String.valueOf(BORDER_CHAR).repeat(BORDER_LEN));","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"jjchee77"},"content":"     * Displays a welcome message to the user at the start of the application.","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"jjchee77"},"content":"    public void showWelcome() {","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"jjchee77"},"content":"        this.showMessage(String.format(\"Hello! I\u0027m %s\\nWhat can I do for you?\", NAME));","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"jjchee77"},"content":"     * Displays an error message to the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"jjchee77"},"content":"     * This method is used to show error messages arising from Duke\u0027s operations.","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"jjchee77"},"content":"     * @param error The error message to be displayed.","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"jjchee77"},"content":"    public void showError(String error) {","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"jjchee77"},"content":"        this.showMessage(error);","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"jjchee77"},"content":"     * Displays a message to the user, enclosed within horizontal line borders.","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"jjchee77"},"content":"     * @param message The message to be displayed to the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"jjchee77"},"content":"    public void showMessage(String message) {","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"jjchee77"},"content":"        this.showLine();","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"jjchee77"},"content":"        System.out.println(message);","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"jjchee77"},"content":"        this.showLine();","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"jjchee77"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"jjchee77"},"content":"     * Reads a command from the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"jjchee77"},"content":"     * Waits for and returns the next line of input from the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"jjchee77"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"jjchee77"},"content":"     * @return The command input by the user as a String.","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"jjchee77"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"jjchee77"},"content":"    public String readCommand() {","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"jjchee77"},"content":"        return this.scanner.nextLine();","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"jjchee77"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"jjchee77":84}},{"path":"src/test/java/duke/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jjchee77"},"content":"package duke.parser;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"jjchee77"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"jjchee77"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"jjchee77"},"content":"import duke.exceptions.parser.InvalidArgumentException;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"jjchee77"},"content":"public class ParserTest {","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"jjchee77"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"jjchee77"},"content":"    public void parse_alphabeticalTaskNumber_invalidArgumentExceptionThrown() {","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"jjchee77"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e Parser.parse(\"mark x\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"jjchee77"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"jjchee77":14}},{"path":"src/test/java/duke/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jjchee77"},"content":"package duke.storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"jjchee77"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"jjchee77"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"jjchee77"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"jjchee77"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"jjchee77"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"jjchee77"},"content":"import duke.exceptions.storage.CreateTasksFileFailedException;","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"jjchee77"},"content":"public class StorageTest {","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"jjchee77"},"content":"    private static final Path INVALID_FILE_PATH \u003d Paths.get(\"/ACCESS_DENIED\");","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"jjchee77"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"jjchee77"},"content":"    @BeforeEach","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"jjchee77"},"content":"    public void initFields() {","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"jjchee77"},"content":"        this.storage \u003d new Storage(INVALID_FILE_PATH, \"\");","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"jjchee77"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"jjchee77"},"content":"    public void readTasks_invalidFilePath_loadTasksFailedExceptionThrown() {","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"jjchee77"},"content":"        assertThrows(CreateTasksFileFailedException.class, () -\u003e this.storage.loadTasks());","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"jjchee77"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"jjchee77":26}},{"path":"src/test/java/duke/tasks/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jjchee77"},"content":"package duke.tasks;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"jjchee77"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"jjchee77"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"jjchee77"},"content":"import duke.exceptions.tasks.EmptyDescriptionException;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"jjchee77"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"jjchee77"},"content":"public class TodoTest {","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"jjchee77"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"jjchee77"},"content":"    public void constructor_emptyDescription_emptyDescriptionExceptionThrown() {","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"jjchee77"},"content":"        assertThrows(EmptyDescriptionException.class, () -\u003e new Todo(\"\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"jjchee77"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"jjchee77"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"jjchee77":14}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jjchee77"},"content":"todo borrow book","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"jjchee77"},"content":"deadline buy phone /by 2024-02-04","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"jjchee77"},"content":"event date night /from 2024-02-05 /to 2024-02-06","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"jjchee77"},"content":"list","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"jjchee77"},"content":"mark 1","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"jjchee77"},"content":"list","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"jjchee77"},"content":"meow","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"jjchee77"},"content":"todo","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"jjchee77"},"content":"list","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"jjchee77"},"content":"delete 2","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"jjchee77"},"content":"list","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"jjchee77"},"content":"bye","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"jjchee77":12}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"jjchee77"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jjchee77":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"jjchee77"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jjchee77":1,"-":37}}]
