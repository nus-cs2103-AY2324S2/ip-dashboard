[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"    private LocalDate endDate;","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":"    public Deadline(String name, LocalDate endDate) {","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"        super(name);","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":"    public boolean queryByDate(LocalDate date) {","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":"        if (date.isEqual(this.endDate)) {","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"alfaloo"},"content":"            return true;","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"alfaloo"},"content":"        return false;","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"alfaloo"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":22,"author":{"gitId":"alfaloo"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"alfaloo"},"content":"        String by \u003d this.endDate.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.LONG));","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"        return String.format(\"[D]%s %s (by: %s)\", (super.status ? \"[X]\" : \"[ ]\"), super.name, by);","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"alfaloo":26}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"    private LocalDate startDate;","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"    private LocalDate endDate;","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"    public Event(String name, LocalDate startDate, LocalDate endDate) {","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"        super(name);","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":"    public boolean queryByDate(LocalDate date) {","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"alfaloo"},"content":"        if ((date.isAfter(this.startDate) \u0026\u0026 date.isBefore(this.endDate)) || date.isEqual(this.startDate) || date.isEqual(this.endDate)) {","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"alfaloo"},"content":"            return true;","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"alfaloo"},"content":"        return false;","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"alfaloo"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"alfaloo"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"        String from \u003d this.startDate.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.LONG));","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"        String to \u003d this.endDate.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.LONG));","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"        return String.format(\"[E]%s %s (from: %s to: %s)\", (super.status ? \"[X]\" : \"[ ]\"), super.name, from, to);","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"alfaloo":28}},{"path":"src/main/java/Lulu.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"import exceptions.InvalidCommandException;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"import exceptions.InvalidDateException;","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"import exceptions.InvalidSlashParameterException;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"import exceptions.InvalidStatusUpdateException;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"import java.io.File;","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"alfaloo"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"alfaloo"},"content":"import java.util.List;","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"alfaloo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":20,"author":{"gitId":"alfaloo"},"content":"public class Lulu {","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"alfaloo"},"content":"    private enum Commands {","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"alfaloo"},"content":"        LIST,","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"alfaloo"},"content":"        MARK,","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"        UNMARK,","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"        DELETE,","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"        TODO,","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"alfaloo"},"content":"        DEADLINE,","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"        EVENT,","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"alfaloo"},"content":"        FIND;","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":31,"author":{"gitId":"alfaloo"},"content":"    private List\u003cTask\u003e items;","lastModifiedDate":"2024-01-22"},{"lineNumber":32,"author":{"gitId":"alfaloo"},"content":"    private String fileName \u003d \"src/main/java/data/lulu.txt\";","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"alfaloo"},"content":"    private File file \u003d new File(this.fileName);","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"alfaloo"},"content":"    private Path path \u003d Path.of(this.fileName);","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":36,"author":{"gitId":"alfaloo"},"content":"    public Lulu() {","lastModifiedDate":"2024-01-22"},{"lineNumber":37,"author":{"gitId":"alfaloo"},"content":"        this.items \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-22"},{"lineNumber":38,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":39,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":40,"author":{"gitId":"alfaloo"},"content":"    public void start() {","lastModifiedDate":"2024-01-22"},{"lineNumber":41,"author":{"gitId":"alfaloo"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"alfaloo"},"content":"            Scanner scanner \u003d new Scanner(this.file);","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"alfaloo"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"alfaloo"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2024-01-27"},{"lineNumber":45,"author":{"gitId":"alfaloo"},"content":"                String[] words \u003d line.split(\",\");","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"alfaloo"},"content":"                if (words[0].equals(\"todo\")) {","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"alfaloo"},"content":"                    Todo todo \u003d new Todo(words[1]);","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"alfaloo"},"content":"                    if (words[2].equals(\"true\")) {","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"alfaloo"},"content":"                        todo.updateStatus(true);","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"alfaloo"},"content":"                    }","lastModifiedDate":"2024-01-27"},{"lineNumber":51,"author":{"gitId":"alfaloo"},"content":"                    this.items.add(todo);","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"alfaloo"},"content":"                } else if (words[0].equals(\"deadline\")) {","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"alfaloo"},"content":"                    Deadline deadline \u003d new Deadline(words[1], LocalDate.parse(words[2]));","lastModifiedDate":"2024-01-27"},{"lineNumber":54,"author":{"gitId":"alfaloo"},"content":"                    if (words[3].equals(\"true\")) {","lastModifiedDate":"2024-01-27"},{"lineNumber":55,"author":{"gitId":"alfaloo"},"content":"                        deadline.updateStatus(true);","lastModifiedDate":"2024-01-27"},{"lineNumber":56,"author":{"gitId":"alfaloo"},"content":"                    }","lastModifiedDate":"2024-01-27"},{"lineNumber":57,"author":{"gitId":"alfaloo"},"content":"                    this.items.add(deadline);","lastModifiedDate":"2024-01-27"},{"lineNumber":58,"author":{"gitId":"alfaloo"},"content":"                } else if (words[0].equals(\"event\")) {","lastModifiedDate":"2024-01-27"},{"lineNumber":59,"author":{"gitId":"alfaloo"},"content":"                    Event event \u003d new Event(words[1], LocalDate.parse(words[2]), LocalDate.parse(words[3]));","lastModifiedDate":"2024-01-27"},{"lineNumber":60,"author":{"gitId":"alfaloo"},"content":"                    if (words[4].equals(\"true\")) {","lastModifiedDate":"2024-01-27"},{"lineNumber":61,"author":{"gitId":"alfaloo"},"content":"                        event.updateStatus(true);","lastModifiedDate":"2024-01-27"},{"lineNumber":62,"author":{"gitId":"alfaloo"},"content":"                    }","lastModifiedDate":"2024-01-27"},{"lineNumber":63,"author":{"gitId":"alfaloo"},"content":"                    this.items.add(event);","lastModifiedDate":"2024-01-27"},{"lineNumber":64,"author":{"gitId":"alfaloo"},"content":"                }","lastModifiedDate":"2024-01-27"},{"lineNumber":65,"author":{"gitId":"alfaloo"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":66,"author":{"gitId":"alfaloo"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":67,"author":{"gitId":"alfaloo"},"content":"            print(\"Invalid file path provided, session will not be saved.\");","lastModifiedDate":"2024-01-27"},{"lineNumber":68,"author":{"gitId":"alfaloo"},"content":"        } catch (InvalidStatusUpdateException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":69,"author":{"gitId":"alfaloo"},"content":"            print (e.getMessage());","lastModifiedDate":"2024-01-27"},{"lineNumber":70,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":71,"author":{"gitId":"alfaloo"},"content":"        print(\"Hello! I\u0027m Lulu \\n\\tWhat can I do for you?\");","lastModifiedDate":"2024-01-22"},{"lineNumber":72,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":73,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":74,"author":{"gitId":"alfaloo"},"content":"    public void exit() {","lastModifiedDate":"2024-01-22"},{"lineNumber":75,"author":{"gitId":"alfaloo"},"content":"        print(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-01-22"},{"lineNumber":76,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":77,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":78,"author":{"gitId":"alfaloo"},"content":"    public void respond() {","lastModifiedDate":"2024-01-22"},{"lineNumber":79,"author":{"gitId":"alfaloo"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-22"},{"lineNumber":80,"author":{"gitId":"alfaloo"},"content":"        while (true) {","lastModifiedDate":"2024-01-22"},{"lineNumber":81,"author":{"gitId":"alfaloo"},"content":"            String input \u003d scanner.nextLine().strip();","lastModifiedDate":"2024-01-22"},{"lineNumber":82,"author":{"gitId":"alfaloo"},"content":"            String firstWord \u003d input.split(\" \")[0];","lastModifiedDate":"2024-01-23"},{"lineNumber":83,"author":{"gitId":"alfaloo"},"content":"            try {","lastModifiedDate":"2024-01-23"},{"lineNumber":84,"author":{"gitId":"alfaloo"},"content":"                if (input.toLowerCase().equals(\"bye\")) {","lastModifiedDate":"2024-01-22"},{"lineNumber":85,"author":{"gitId":"alfaloo"},"content":"                    break;","lastModifiedDate":"2024-01-22"},{"lineNumber":86,"author":{"gitId":"alfaloo"},"content":"                } else if (input.toLowerCase().equals(\"list\")) {","lastModifiedDate":"2024-01-22"},{"lineNumber":87,"author":{"gitId":"alfaloo"},"content":"                    manageTasks(Commands.LIST, input);","lastModifiedDate":"2024-01-23"},{"lineNumber":88,"author":{"gitId":"alfaloo"},"content":"                } else if (firstWord.equals(\"mark\")) {","lastModifiedDate":"2024-01-23"},{"lineNumber":89,"author":{"gitId":"alfaloo"},"content":"                    manageTasks(Commands.MARK, input);","lastModifiedDate":"2024-01-23"},{"lineNumber":90,"author":{"gitId":"alfaloo"},"content":"                } else if (firstWord.equals(\"unmark\")) {","lastModifiedDate":"2024-01-23"},{"lineNumber":91,"author":{"gitId":"alfaloo"},"content":"                    manageTasks(Commands.UNMARK, input);","lastModifiedDate":"2024-01-23"},{"lineNumber":92,"author":{"gitId":"alfaloo"},"content":"                } else if (firstWord.equals(\"delete\")) {","lastModifiedDate":"2024-01-23"},{"lineNumber":93,"author":{"gitId":"alfaloo"},"content":"                    manageTasks(Commands.DELETE, input);","lastModifiedDate":"2024-01-23"},{"lineNumber":94,"author":{"gitId":"alfaloo"},"content":"                } else if (firstWord.equals(\"todo\")) {","lastModifiedDate":"2024-01-23"},{"lineNumber":95,"author":{"gitId":"alfaloo"},"content":"                    addTasks(Commands.TODO, input);","lastModifiedDate":"2024-01-23"},{"lineNumber":96,"author":{"gitId":"alfaloo"},"content":"                } else if (firstWord.equals(\"deadline\")) {","lastModifiedDate":"2024-01-23"},{"lineNumber":97,"author":{"gitId":"alfaloo"},"content":"                    addTasks(Commands.DEADLINE, input);","lastModifiedDate":"2024-01-23"},{"lineNumber":98,"author":{"gitId":"alfaloo"},"content":"                } else if (firstWord.equals(\"event\")) {","lastModifiedDate":"2024-01-23"},{"lineNumber":99,"author":{"gitId":"alfaloo"},"content":"                    addTasks(Commands.EVENT, input);","lastModifiedDate":"2024-01-23"},{"lineNumber":100,"author":{"gitId":"alfaloo"},"content":"                } else if (firstWord.equals(\"find\")) {","lastModifiedDate":"2024-01-27"},{"lineNumber":101,"author":{"gitId":"alfaloo"},"content":"                    manageTasks(Commands.FIND, input);","lastModifiedDate":"2024-01-27"},{"lineNumber":102,"author":{"gitId":"alfaloo"},"content":"                } else {","lastModifiedDate":"2024-01-23"},{"lineNumber":103,"author":{"gitId":"alfaloo"},"content":"                    throw new InvalidCommandException();","lastModifiedDate":"2024-01-23"},{"lineNumber":104,"author":{"gitId":"alfaloo"},"content":"                }","lastModifiedDate":"2024-01-23"},{"lineNumber":105,"author":{"gitId":"alfaloo"},"content":"            } catch (InvalidCommandException e) {","lastModifiedDate":"2024-01-23"},{"lineNumber":106,"author":{"gitId":"alfaloo"},"content":"                print(\"Sorry, I dont think I quite understood what you meant...\");","lastModifiedDate":"2024-01-23"},{"lineNumber":107,"author":{"gitId":"alfaloo"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":108,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":109,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":110,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":111,"author":{"gitId":"alfaloo"},"content":"    public void manageTasks(Commands command, String input) throws InvalidCommandException {","lastModifiedDate":"2024-01-23"},{"lineNumber":112,"author":{"gitId":"alfaloo"},"content":"        switch (command) {","lastModifiedDate":"2024-01-23"},{"lineNumber":113,"author":{"gitId":"alfaloo"},"content":"            case LIST:","lastModifiedDate":"2024-01-23"},{"lineNumber":114,"author":{"gitId":"alfaloo"},"content":"                list();","lastModifiedDate":"2024-01-23"},{"lineNumber":115,"author":{"gitId":"alfaloo"},"content":"                break;","lastModifiedDate":"2024-01-23"},{"lineNumber":116,"author":{"gitId":"alfaloo"},"content":"            case MARK:","lastModifiedDate":"2024-01-23"},{"lineNumber":117,"author":{"gitId":"alfaloo"},"content":"                mark(input);","lastModifiedDate":"2024-01-23"},{"lineNumber":118,"author":{"gitId":"alfaloo"},"content":"                break;","lastModifiedDate":"2024-01-23"},{"lineNumber":119,"author":{"gitId":"alfaloo"},"content":"            case UNMARK:","lastModifiedDate":"2024-01-23"},{"lineNumber":120,"author":{"gitId":"alfaloo"},"content":"                unmark(input);","lastModifiedDate":"2024-01-23"},{"lineNumber":121,"author":{"gitId":"alfaloo"},"content":"                break;","lastModifiedDate":"2024-01-23"},{"lineNumber":122,"author":{"gitId":"alfaloo"},"content":"            case DELETE:","lastModifiedDate":"2024-01-23"},{"lineNumber":123,"author":{"gitId":"alfaloo"},"content":"                delete(input);","lastModifiedDate":"2024-01-23"},{"lineNumber":124,"author":{"gitId":"alfaloo"},"content":"                break;","lastModifiedDate":"2024-01-23"},{"lineNumber":125,"author":{"gitId":"alfaloo"},"content":"            case FIND:","lastModifiedDate":"2024-01-27"},{"lineNumber":126,"author":{"gitId":"alfaloo"},"content":"                find(input);","lastModifiedDate":"2024-01-27"},{"lineNumber":127,"author":{"gitId":"alfaloo"},"content":"                break;","lastModifiedDate":"2024-01-27"},{"lineNumber":128,"author":{"gitId":"alfaloo"},"content":"            default:","lastModifiedDate":"2024-01-23"},{"lineNumber":129,"author":{"gitId":"alfaloo"},"content":"                throw new InvalidCommandException();","lastModifiedDate":"2024-01-23"},{"lineNumber":130,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":131,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":132,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":133,"author":{"gitId":"alfaloo"},"content":"    public void addTasks(Commands command, String input) throws InvalidCommandException {","lastModifiedDate":"2024-01-23"},{"lineNumber":134,"author":{"gitId":"alfaloo"},"content":"        switch (command) {","lastModifiedDate":"2024-01-23"},{"lineNumber":135,"author":{"gitId":"alfaloo"},"content":"            case TODO:","lastModifiedDate":"2024-01-23"},{"lineNumber":136,"author":{"gitId":"alfaloo"},"content":"                todo(input);","lastModifiedDate":"2024-01-23"},{"lineNumber":137,"author":{"gitId":"alfaloo"},"content":"                break;","lastModifiedDate":"2024-01-23"},{"lineNumber":138,"author":{"gitId":"alfaloo"},"content":"            case DEADLINE:","lastModifiedDate":"2024-01-23"},{"lineNumber":139,"author":{"gitId":"alfaloo"},"content":"                deadline(input);","lastModifiedDate":"2024-01-23"},{"lineNumber":140,"author":{"gitId":"alfaloo"},"content":"                break;","lastModifiedDate":"2024-01-23"},{"lineNumber":141,"author":{"gitId":"alfaloo"},"content":"            case EVENT:","lastModifiedDate":"2024-01-23"},{"lineNumber":142,"author":{"gitId":"alfaloo"},"content":"                event(input);","lastModifiedDate":"2024-01-23"},{"lineNumber":143,"author":{"gitId":"alfaloo"},"content":"                break;","lastModifiedDate":"2024-01-23"},{"lineNumber":144,"author":{"gitId":"alfaloo"},"content":"            default:","lastModifiedDate":"2024-01-23"},{"lineNumber":145,"author":{"gitId":"alfaloo"},"content":"                throw new InvalidCommandException();","lastModifiedDate":"2024-01-23"},{"lineNumber":146,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":147,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":148,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":149,"author":{"gitId":"alfaloo"},"content":"    public void list() {","lastModifiedDate":"2024-01-23"},{"lineNumber":150,"author":{"gitId":"alfaloo"},"content":"        print(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-01-23"},{"lineNumber":151,"author":{"gitId":"alfaloo"},"content":"        for (int i \u003d 0; i \u003c this.items.size(); i++) {","lastModifiedDate":"2024-01-23"},{"lineNumber":152,"author":{"gitId":"alfaloo"},"content":"            String output \u003d (i + 1) + \".\" + this.items.get(i);","lastModifiedDate":"2024-01-23"},{"lineNumber":153,"author":{"gitId":"alfaloo"},"content":"            print(output);","lastModifiedDate":"2024-01-23"},{"lineNumber":154,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":155,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":156,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":157,"author":{"gitId":"alfaloo"},"content":"    public void mark(String input) {","lastModifiedDate":"2024-01-23"},{"lineNumber":158,"author":{"gitId":"alfaloo"},"content":"        String[] words \u003d input.split(\" \");","lastModifiedDate":"2024-01-27"},{"lineNumber":159,"author":{"gitId":"alfaloo"},"content":"        if (words.length \u003c\u003d 1) {","lastModifiedDate":"2024-01-27"},{"lineNumber":160,"author":{"gitId":"alfaloo"},"content":"            print(\"I didn\u0027t quite understand, could you complete your command with appropriate arguments?\");","lastModifiedDate":"2024-01-23"},{"lineNumber":161,"author":{"gitId":"alfaloo"},"content":"            return;","lastModifiedDate":"2024-01-23"},{"lineNumber":162,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":163,"author":{"gitId":"alfaloo"},"content":"        int index \u003d Integer.valueOf(words[1]) - 1;","lastModifiedDate":"2024-01-27"},{"lineNumber":164,"author":{"gitId":"alfaloo"},"content":"        if (index \u003e\u003d this.items.size() || index \u003c 0) {","lastModifiedDate":"2024-01-22"},{"lineNumber":165,"author":{"gitId":"alfaloo"},"content":"            print(\"Oops! You did not give a valid index.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":166,"author":{"gitId":"alfaloo"},"content":"            return;","lastModifiedDate":"2024-01-23"},{"lineNumber":167,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":168,"author":{"gitId":"alfaloo"},"content":"        Task task \u003d this.items.get(index);","lastModifiedDate":"2024-01-22"},{"lineNumber":169,"author":{"gitId":"alfaloo"},"content":"        try {","lastModifiedDate":"2024-01-23"},{"lineNumber":170,"author":{"gitId":"alfaloo"},"content":"            task.updateStatus(true);","lastModifiedDate":"2024-01-22"},{"lineNumber":171,"author":{"gitId":"alfaloo"},"content":"            print(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-01-22"},{"lineNumber":172,"author":{"gitId":"alfaloo"},"content":"            print(task);","lastModifiedDate":"2024-01-22"},{"lineNumber":173,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":174,"author":{"gitId":"alfaloo"},"content":"            // save","lastModifiedDate":"2024-01-27"},{"lineNumber":175,"author":{"gitId":"alfaloo"},"content":"            String line \u003d readLine(index);","lastModifiedDate":"2024-01-27"},{"lineNumber":176,"author":{"gitId":"alfaloo"},"content":"            String newLine \u003d line.substring(0, line.length() - 5) + \"true\";","lastModifiedDate":"2024-01-27"},{"lineNumber":177,"author":{"gitId":"alfaloo"},"content":"            updateLine(index, newLine);","lastModifiedDate":"2024-01-27"},{"lineNumber":178,"author":{"gitId":"alfaloo"},"content":"        } catch (InvalidStatusUpdateException e) {","lastModifiedDate":"2024-01-23"},{"lineNumber":179,"author":{"gitId":"alfaloo"},"content":"            print(\"This task was already marked!\");","lastModifiedDate":"2024-01-23"},{"lineNumber":180,"author":{"gitId":"alfaloo"},"content":"            print(task);","lastModifiedDate":"2024-01-23"},{"lineNumber":181,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":182,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":183,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":184,"author":{"gitId":"alfaloo"},"content":"    public void unmark(String input) {","lastModifiedDate":"2024-01-23"},{"lineNumber":185,"author":{"gitId":"alfaloo"},"content":"        String[] words \u003d input.split(\" \");","lastModifiedDate":"2024-01-27"},{"lineNumber":186,"author":{"gitId":"alfaloo"},"content":"        if (words.length \u003c\u003d 1) {","lastModifiedDate":"2024-01-27"},{"lineNumber":187,"author":{"gitId":"alfaloo"},"content":"            print(\"I didn\u0027t quite understand, could you complete your command with appropriate arguments?\");","lastModifiedDate":"2024-01-23"},{"lineNumber":188,"author":{"gitId":"alfaloo"},"content":"            return;","lastModifiedDate":"2024-01-23"},{"lineNumber":189,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":190,"author":{"gitId":"alfaloo"},"content":"        int index \u003d Integer.valueOf(words[1]) - 1;","lastModifiedDate":"2024-01-27"},{"lineNumber":191,"author":{"gitId":"alfaloo"},"content":"        if (index \u003e\u003d this.items.size() || index \u003c 0) {","lastModifiedDate":"2024-01-22"},{"lineNumber":192,"author":{"gitId":"alfaloo"},"content":"            print(\"Oops! You did not give a valid index.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":193,"author":{"gitId":"alfaloo"},"content":"            return;","lastModifiedDate":"2024-01-23"},{"lineNumber":194,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":195,"author":{"gitId":"alfaloo"},"content":"        Task task \u003d this.items.get(index);","lastModifiedDate":"2024-01-22"},{"lineNumber":196,"author":{"gitId":"alfaloo"},"content":"        try {","lastModifiedDate":"2024-01-23"},{"lineNumber":197,"author":{"gitId":"alfaloo"},"content":"            task.updateStatus(false);","lastModifiedDate":"2024-01-22"},{"lineNumber":198,"author":{"gitId":"alfaloo"},"content":"            print(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-01-22"},{"lineNumber":199,"author":{"gitId":"alfaloo"},"content":"            print(task);","lastModifiedDate":"2024-01-22"},{"lineNumber":200,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":201,"author":{"gitId":"alfaloo"},"content":"            // save","lastModifiedDate":"2024-01-27"},{"lineNumber":202,"author":{"gitId":"alfaloo"},"content":"            String line \u003d readLine(index);","lastModifiedDate":"2024-01-27"},{"lineNumber":203,"author":{"gitId":"alfaloo"},"content":"            String newLine \u003d line.substring(0, line.length() - 4) + \"false\";","lastModifiedDate":"2024-01-27"},{"lineNumber":204,"author":{"gitId":"alfaloo"},"content":"            updateLine(index, newLine);","lastModifiedDate":"2024-01-27"},{"lineNumber":205,"author":{"gitId":"alfaloo"},"content":"        } catch (InvalidStatusUpdateException e) {","lastModifiedDate":"2024-01-23"},{"lineNumber":206,"author":{"gitId":"alfaloo"},"content":"            print(\"This task was already unmarked!\");","lastModifiedDate":"2024-01-23"},{"lineNumber":207,"author":{"gitId":"alfaloo"},"content":"            print(task);","lastModifiedDate":"2024-01-23"},{"lineNumber":208,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":209,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":210,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":211,"author":{"gitId":"alfaloo"},"content":"    public void delete(String input) {","lastModifiedDate":"2024-01-23"},{"lineNumber":212,"author":{"gitId":"alfaloo"},"content":"        String[] words \u003d input.split(\" \");","lastModifiedDate":"2024-01-27"},{"lineNumber":213,"author":{"gitId":"alfaloo"},"content":"        if (words.length \u003c\u003d 1) {","lastModifiedDate":"2024-01-27"},{"lineNumber":214,"author":{"gitId":"alfaloo"},"content":"            print(\"I didn\u0027t quite understand, could you complete your command with appropriate arguments?\");","lastModifiedDate":"2024-01-23"},{"lineNumber":215,"author":{"gitId":"alfaloo"},"content":"            return;","lastModifiedDate":"2024-01-23"},{"lineNumber":216,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":217,"author":{"gitId":"alfaloo"},"content":"        int index \u003d Integer.valueOf(words[1]) - 1;","lastModifiedDate":"2024-01-27"},{"lineNumber":218,"author":{"gitId":"alfaloo"},"content":"        if (index \u003e\u003d this.items.size() || index \u003c 0) {","lastModifiedDate":"2024-01-23"},{"lineNumber":219,"author":{"gitId":"alfaloo"},"content":"            print(\"Oops! You did not give a valid index.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":220,"author":{"gitId":"alfaloo"},"content":"            return;","lastModifiedDate":"2024-01-23"},{"lineNumber":221,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":222,"author":{"gitId":"alfaloo"},"content":"        Task task \u003d this.items.remove(index);","lastModifiedDate":"2024-01-23"},{"lineNumber":223,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":224,"author":{"gitId":"alfaloo"},"content":"        // save","lastModifiedDate":"2024-01-27"},{"lineNumber":225,"author":{"gitId":"alfaloo"},"content":"        deleteLine(index);","lastModifiedDate":"2024-01-27"},{"lineNumber":226,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":227,"author":{"gitId":"alfaloo"},"content":"        print(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-01-23"},{"lineNumber":228,"author":{"gitId":"alfaloo"},"content":"        print(\"\\t\" + task);","lastModifiedDate":"2024-01-23"},{"lineNumber":229,"author":{"gitId":"alfaloo"},"content":"        print(String.format(\"Now you have %d tasks in the list.\", this.items.size()));","lastModifiedDate":"2024-01-23"},{"lineNumber":230,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":231,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":232,"author":{"gitId":"alfaloo"},"content":"    public void find(String input) {","lastModifiedDate":"2024-01-27"},{"lineNumber":233,"author":{"gitId":"alfaloo"},"content":"        String[] words \u003d input.split(\" \");","lastModifiedDate":"2024-01-27"},{"lineNumber":234,"author":{"gitId":"alfaloo"},"content":"        if (words.length \u003c\u003d 2) {","lastModifiedDate":"2024-01-27"},{"lineNumber":235,"author":{"gitId":"alfaloo"},"content":"            print(\"I didn\u0027t quite understand, could you complete your command with appropriate arguments?\");","lastModifiedDate":"2024-01-27"},{"lineNumber":236,"author":{"gitId":"alfaloo"},"content":"            return;","lastModifiedDate":"2024-01-27"},{"lineNumber":237,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":238,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":239,"author":{"gitId":"alfaloo"},"content":"        String taskType \u003d words[1].toLowerCase();","lastModifiedDate":"2024-01-27"},{"lineNumber":240,"author":{"gitId":"alfaloo"},"content":"        LocalDate date \u003d LocalDate.parse(words[2]);","lastModifiedDate":"2024-01-27"},{"lineNumber":241,"author":{"gitId":"alfaloo"},"content":"        String formattedDate \u003d date.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.LONG));","lastModifiedDate":"2024-01-27"},{"lineNumber":242,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":243,"author":{"gitId":"alfaloo"},"content":"        if (taskType.equals(\"deadline\")) {","lastModifiedDate":"2024-01-27"},{"lineNumber":244,"author":{"gitId":"alfaloo"},"content":"            print(\"Below are deadlines that are due on \" + formattedDate);","lastModifiedDate":"2024-01-27"},{"lineNumber":245,"author":{"gitId":"alfaloo"},"content":"            for (Task task : this.items) {","lastModifiedDate":"2024-01-27"},{"lineNumber":246,"author":{"gitId":"alfaloo"},"content":"                if (task instanceof Deadline \u0026\u0026 task.queryByDate(date)) {","lastModifiedDate":"2024-01-27"},{"lineNumber":247,"author":{"gitId":"alfaloo"},"content":"                    print(task);","lastModifiedDate":"2024-01-27"},{"lineNumber":248,"author":{"gitId":"alfaloo"},"content":"                }","lastModifiedDate":"2024-01-27"},{"lineNumber":249,"author":{"gitId":"alfaloo"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":250,"author":{"gitId":"alfaloo"},"content":"        } else if (taskType.equals(\"event\")) {","lastModifiedDate":"2024-01-27"},{"lineNumber":251,"author":{"gitId":"alfaloo"},"content":"            print(\"Below are events that are operating on \" + formattedDate);","lastModifiedDate":"2024-01-27"},{"lineNumber":252,"author":{"gitId":"alfaloo"},"content":"            for (Task task : this.items) {","lastModifiedDate":"2024-01-27"},{"lineNumber":253,"author":{"gitId":"alfaloo"},"content":"                if (task instanceof Event \u0026\u0026 task.queryByDate(date)) {","lastModifiedDate":"2024-01-27"},{"lineNumber":254,"author":{"gitId":"alfaloo"},"content":"                    print(task);","lastModifiedDate":"2024-01-27"},{"lineNumber":255,"author":{"gitId":"alfaloo"},"content":"                }","lastModifiedDate":"2024-01-27"},{"lineNumber":256,"author":{"gitId":"alfaloo"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":257,"author":{"gitId":"alfaloo"},"content":"        } else {","lastModifiedDate":"2024-01-27"},{"lineNumber":258,"author":{"gitId":"alfaloo"},"content":"            print(\"Could not query give task type\");","lastModifiedDate":"2024-01-27"},{"lineNumber":259,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":260,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":261,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":262,"author":{"gitId":"alfaloo"},"content":"    public void todo(String input) {","lastModifiedDate":"2024-01-23"},{"lineNumber":263,"author":{"gitId":"alfaloo"},"content":"        if (input.split(\" \").length \u003c\u003d 1) {","lastModifiedDate":"2024-01-27"},{"lineNumber":264,"author":{"gitId":"alfaloo"},"content":"            print(\"I didn\u0027t quite understand, could you complete your command with appropriate arguments?\");","lastModifiedDate":"2024-01-23"},{"lineNumber":265,"author":{"gitId":"alfaloo"},"content":"            return;","lastModifiedDate":"2024-01-23"},{"lineNumber":266,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":267,"author":{"gitId":"alfaloo"},"content":"        String name \u003d input.substring(5).strip();","lastModifiedDate":"2024-01-22"},{"lineNumber":268,"author":{"gitId":"alfaloo"},"content":"        Todo todo \u003d new Todo(name);","lastModifiedDate":"2024-01-22"},{"lineNumber":269,"author":{"gitId":"alfaloo"},"content":"        this.items.add(todo);","lastModifiedDate":"2024-01-22"},{"lineNumber":270,"author":{"gitId":"alfaloo"},"content":"        print(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-22"},{"lineNumber":271,"author":{"gitId":"alfaloo"},"content":"        print(\"\\t\" + todo);","lastModifiedDate":"2024-01-22"},{"lineNumber":272,"author":{"gitId":"alfaloo"},"content":"        print(String.format(\"Now you have %d tasks in the list.\", this.items.size()));","lastModifiedDate":"2024-01-22"},{"lineNumber":273,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":274,"author":{"gitId":"alfaloo"},"content":"        // save to file","lastModifiedDate":"2024-01-27"},{"lineNumber":275,"author":{"gitId":"alfaloo"},"content":"        String data \u003d String.format(\"todo,%s,%b\", name, todo.status);","lastModifiedDate":"2024-01-27"},{"lineNumber":276,"author":{"gitId":"alfaloo"},"content":"        writeLine(data);","lastModifiedDate":"2024-01-27"},{"lineNumber":277,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":278,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":279,"author":{"gitId":"alfaloo"},"content":"    public void deadline(String input) {","lastModifiedDate":"2024-01-23"},{"lineNumber":280,"author":{"gitId":"alfaloo"},"content":"        if (input.split(\" \").length \u003c\u003d 1) {","lastModifiedDate":"2024-01-27"},{"lineNumber":281,"author":{"gitId":"alfaloo"},"content":"            print(\"I didn\u0027t quite understand, could you complete your command with appropriate arguments?\");","lastModifiedDate":"2024-01-23"},{"lineNumber":282,"author":{"gitId":"alfaloo"},"content":"            return;","lastModifiedDate":"2024-01-23"},{"lineNumber":283,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":284,"author":{"gitId":"alfaloo"},"content":"        int indexBy \u003d input.indexOf(\u0027/\u0027);","lastModifiedDate":"2024-01-22"},{"lineNumber":285,"author":{"gitId":"alfaloo"},"content":"        try {","lastModifiedDate":"2024-01-23"},{"lineNumber":286,"author":{"gitId":"alfaloo"},"content":"            if (!input.substring(indexBy + 1).split(\" \")[0].equals(\"by\")) {","lastModifiedDate":"2024-01-23"},{"lineNumber":287,"author":{"gitId":"alfaloo"},"content":"                throw new InvalidSlashParameterException();","lastModifiedDate":"2024-01-23"},{"lineNumber":288,"author":{"gitId":"alfaloo"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":289,"author":{"gitId":"alfaloo"},"content":"            String name \u003d input.substring(9, indexBy).strip();","lastModifiedDate":"2024-01-22"},{"lineNumber":290,"author":{"gitId":"alfaloo"},"content":"            String by \u003d input.substring(indexBy + 3).strip();","lastModifiedDate":"2024-01-22"},{"lineNumber":291,"author":{"gitId":"alfaloo"},"content":"            Deadline deadline \u003d new Deadline(name, LocalDate.parse(by));","lastModifiedDate":"2024-01-27"},{"lineNumber":292,"author":{"gitId":"alfaloo"},"content":"            this.items.add(deadline);","lastModifiedDate":"2024-01-22"},{"lineNumber":293,"author":{"gitId":"alfaloo"},"content":"            print(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-22"},{"lineNumber":294,"author":{"gitId":"alfaloo"},"content":"            print(\"\\t\" + deadline);","lastModifiedDate":"2024-01-22"},{"lineNumber":295,"author":{"gitId":"alfaloo"},"content":"            print(String.format(\"Now you have %d tasks in the list.\", this.items.size()));","lastModifiedDate":"2024-01-22"},{"lineNumber":296,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":297,"author":{"gitId":"alfaloo"},"content":"            // save to file","lastModifiedDate":"2024-01-27"},{"lineNumber":298,"author":{"gitId":"alfaloo"},"content":"            String data \u003d String.format(\"deadline,%s,%s,%b\", name, by, deadline.status);","lastModifiedDate":"2024-01-27"},{"lineNumber":299,"author":{"gitId":"alfaloo"},"content":"            writeLine(data);","lastModifiedDate":"2024-01-27"},{"lineNumber":300,"author":{"gitId":"alfaloo"},"content":"        } catch (InvalidSlashParameterException e) {","lastModifiedDate":"2024-01-23"},{"lineNumber":301,"author":{"gitId":"alfaloo"},"content":"            print(\"Sorry, when would you like the deadline to be until?\");","lastModifiedDate":"2024-01-23"},{"lineNumber":302,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":303,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":304,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":305,"author":{"gitId":"alfaloo"},"content":"    public void event(String input) {","lastModifiedDate":"2024-01-23"},{"lineNumber":306,"author":{"gitId":"alfaloo"},"content":"        if (input.split(\" \").length \u003c\u003d 1) {","lastModifiedDate":"2024-01-27"},{"lineNumber":307,"author":{"gitId":"alfaloo"},"content":"            print(\"I didn\u0027t quite understand, could you complete your command with appropriate arguments?\");","lastModifiedDate":"2024-01-23"},{"lineNumber":308,"author":{"gitId":"alfaloo"},"content":"            return;","lastModifiedDate":"2024-01-23"},{"lineNumber":309,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":310,"author":{"gitId":"alfaloo"},"content":"        int indexFrom \u003d input.indexOf(\u0027/\u0027);","lastModifiedDate":"2024-01-22"},{"lineNumber":311,"author":{"gitId":"alfaloo"},"content":"        int indexTo \u003d input.indexOf(\u0027/\u0027, indexFrom + 1);","lastModifiedDate":"2024-01-22"},{"lineNumber":312,"author":{"gitId":"alfaloo"},"content":"        try {","lastModifiedDate":"2024-01-23"},{"lineNumber":313,"author":{"gitId":"alfaloo"},"content":"            if (!input.substring(indexFrom + 1).split(\" \")[0].equals(\"from\")) {","lastModifiedDate":"2024-01-23"},{"lineNumber":314,"author":{"gitId":"alfaloo"},"content":"                throw new InvalidSlashParameterException();","lastModifiedDate":"2024-01-23"},{"lineNumber":315,"author":{"gitId":"alfaloo"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":316,"author":{"gitId":"alfaloo"},"content":"            if (!input.substring(indexTo + 1).split(\" \")[0].equals(\"to\")) {","lastModifiedDate":"2024-01-23"},{"lineNumber":317,"author":{"gitId":"alfaloo"},"content":"                throw new InvalidSlashParameterException();","lastModifiedDate":"2024-01-23"},{"lineNumber":318,"author":{"gitId":"alfaloo"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":319,"author":{"gitId":"alfaloo"},"content":"            String name \u003d input.substring(6, indexFrom).strip();","lastModifiedDate":"2024-01-22"},{"lineNumber":320,"author":{"gitId":"alfaloo"},"content":"            String from \u003d input.substring(indexFrom + 5, indexTo).strip();","lastModifiedDate":"2024-01-22"},{"lineNumber":321,"author":{"gitId":"alfaloo"},"content":"            String to \u003d input.substring(indexTo + 3).strip();","lastModifiedDate":"2024-01-22"},{"lineNumber":322,"author":{"gitId":"alfaloo"},"content":"            if (LocalDate.parse(to).isBefore(LocalDate.parse(from))) {","lastModifiedDate":"2024-01-27"},{"lineNumber":323,"author":{"gitId":"alfaloo"},"content":"                throw new InvalidDateException();","lastModifiedDate":"2024-01-27"},{"lineNumber":324,"author":{"gitId":"alfaloo"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":325,"author":{"gitId":"alfaloo"},"content":"            Event event \u003d new Event(name, LocalDate.parse(from), LocalDate.parse(to));","lastModifiedDate":"2024-01-27"},{"lineNumber":326,"author":{"gitId":"alfaloo"},"content":"            this.items.add(event);","lastModifiedDate":"2024-01-22"},{"lineNumber":327,"author":{"gitId":"alfaloo"},"content":"            print(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-22"},{"lineNumber":328,"author":{"gitId":"alfaloo"},"content":"            print(\"\\t\" + event);","lastModifiedDate":"2024-01-22"},{"lineNumber":329,"author":{"gitId":"alfaloo"},"content":"            print(String.format(\"Now you have %d tasks in the list.\", this.items.size()));","lastModifiedDate":"2024-01-22"},{"lineNumber":330,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":331,"author":{"gitId":"alfaloo"},"content":"            // save to file","lastModifiedDate":"2024-01-27"},{"lineNumber":332,"author":{"gitId":"alfaloo"},"content":"            String data \u003d String.format(\"event,%s,%s,%s,%b\", name, from, to, event.status);","lastModifiedDate":"2024-01-27"},{"lineNumber":333,"author":{"gitId":"alfaloo"},"content":"            writeLine(data);","lastModifiedDate":"2024-01-27"},{"lineNumber":334,"author":{"gitId":"alfaloo"},"content":"        } catch (InvalidSlashParameterException e) {","lastModifiedDate":"2024-01-23"},{"lineNumber":335,"author":{"gitId":"alfaloo"},"content":"            print(\"Sorry, when would you like the event to begin and end?\");","lastModifiedDate":"2024-01-23"},{"lineNumber":336,"author":{"gitId":"alfaloo"},"content":"        } catch (InvalidDateException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":337,"author":{"gitId":"alfaloo"},"content":"            print(\"Please ensure that you are inputting valid start and end dates.\");","lastModifiedDate":"2024-01-27"},{"lineNumber":338,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":339,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":340,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":341,"author":{"gitId":"alfaloo"},"content":"    public void writeLine(String data) {","lastModifiedDate":"2024-01-27"},{"lineNumber":342,"author":{"gitId":"alfaloo"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":343,"author":{"gitId":"alfaloo"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(this.file, true));","lastModifiedDate":"2024-01-27"},{"lineNumber":344,"author":{"gitId":"alfaloo"},"content":"            writer.write(data);","lastModifiedDate":"2024-01-27"},{"lineNumber":345,"author":{"gitId":"alfaloo"},"content":"            writer.newLine();","lastModifiedDate":"2024-01-27"},{"lineNumber":346,"author":{"gitId":"alfaloo"},"content":"            writer.close();","lastModifiedDate":"2024-01-27"},{"lineNumber":347,"author":{"gitId":"alfaloo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":348,"author":{"gitId":"alfaloo"},"content":"            print(e.getMessage());","lastModifiedDate":"2024-01-27"},{"lineNumber":349,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":350,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":351,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":352,"author":{"gitId":"alfaloo"},"content":"    public String readLine(int index) {","lastModifiedDate":"2024-01-27"},{"lineNumber":353,"author":{"gitId":"alfaloo"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":354,"author":{"gitId":"alfaloo"},"content":"            Scanner scanner \u003d new Scanner(this.file);","lastModifiedDate":"2024-01-27"},{"lineNumber":355,"author":{"gitId":"alfaloo"},"content":"            int i \u003d 0;","lastModifiedDate":"2024-01-27"},{"lineNumber":356,"author":{"gitId":"alfaloo"},"content":"            String line \u003d \"\";","lastModifiedDate":"2024-01-27"},{"lineNumber":357,"author":{"gitId":"alfaloo"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":358,"author":{"gitId":"alfaloo"},"content":"                line \u003d scanner.nextLine();","lastModifiedDate":"2024-01-27"},{"lineNumber":359,"author":{"gitId":"alfaloo"},"content":"                if (i \u003d\u003d index) {","lastModifiedDate":"2024-01-27"},{"lineNumber":360,"author":{"gitId":"alfaloo"},"content":"                    return line;","lastModifiedDate":"2024-01-27"},{"lineNumber":361,"author":{"gitId":"alfaloo"},"content":"                }","lastModifiedDate":"2024-01-27"},{"lineNumber":362,"author":{"gitId":"alfaloo"},"content":"                i++;","lastModifiedDate":"2024-01-27"},{"lineNumber":363,"author":{"gitId":"alfaloo"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":364,"author":{"gitId":"alfaloo"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":365,"author":{"gitId":"alfaloo"},"content":"            print(e.getMessage());","lastModifiedDate":"2024-01-27"},{"lineNumber":366,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":367,"author":{"gitId":"alfaloo"},"content":"        return null;","lastModifiedDate":"2024-01-27"},{"lineNumber":368,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":369,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":370,"author":{"gitId":"alfaloo"},"content":"    public void updateLine(int index, String data) {","lastModifiedDate":"2024-01-27"},{"lineNumber":371,"author":{"gitId":"alfaloo"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":372,"author":{"gitId":"alfaloo"},"content":"            List\u003cString\u003e lines \u003d Files.readAllLines(this.path);","lastModifiedDate":"2024-01-27"},{"lineNumber":373,"author":{"gitId":"alfaloo"},"content":"            lines.set(index, data);","lastModifiedDate":"2024-01-27"},{"lineNumber":374,"author":{"gitId":"alfaloo"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(this.file, false));","lastModifiedDate":"2024-01-27"},{"lineNumber":375,"author":{"gitId":"alfaloo"},"content":"            writer.write(\"\");","lastModifiedDate":"2024-01-27"},{"lineNumber":376,"author":{"gitId":"alfaloo"},"content":"            writer \u003d new BufferedWriter(new FileWriter(this.file, true));","lastModifiedDate":"2024-01-27"},{"lineNumber":377,"author":{"gitId":"alfaloo"},"content":"            for (String str : lines) {","lastModifiedDate":"2024-01-27"},{"lineNumber":378,"author":{"gitId":"alfaloo"},"content":"                writer.write(str);","lastModifiedDate":"2024-01-27"},{"lineNumber":379,"author":{"gitId":"alfaloo"},"content":"                writer.newLine();","lastModifiedDate":"2024-01-27"},{"lineNumber":380,"author":{"gitId":"alfaloo"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":381,"author":{"gitId":"alfaloo"},"content":"            writer.close();","lastModifiedDate":"2024-01-27"},{"lineNumber":382,"author":{"gitId":"alfaloo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":383,"author":{"gitId":"alfaloo"},"content":"            print(e.getMessage());","lastModifiedDate":"2024-01-27"},{"lineNumber":384,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":385,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":386,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":387,"author":{"gitId":"alfaloo"},"content":"    public void deleteLine(int index) {","lastModifiedDate":"2024-01-27"},{"lineNumber":388,"author":{"gitId":"alfaloo"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":389,"author":{"gitId":"alfaloo"},"content":"            List\u003cString\u003e lines \u003d Files.readAllLines(this.path);","lastModifiedDate":"2024-01-27"},{"lineNumber":390,"author":{"gitId":"alfaloo"},"content":"            lines.remove(index);","lastModifiedDate":"2024-01-27"},{"lineNumber":391,"author":{"gitId":"alfaloo"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(this.file, false));","lastModifiedDate":"2024-01-27"},{"lineNumber":392,"author":{"gitId":"alfaloo"},"content":"            writer.write(\"\");","lastModifiedDate":"2024-01-27"},{"lineNumber":393,"author":{"gitId":"alfaloo"},"content":"            writer \u003d new BufferedWriter(new FileWriter(this.file, true));","lastModifiedDate":"2024-01-27"},{"lineNumber":394,"author":{"gitId":"alfaloo"},"content":"            for (String str : lines) {","lastModifiedDate":"2024-01-27"},{"lineNumber":395,"author":{"gitId":"alfaloo"},"content":"                writer.write(str);","lastModifiedDate":"2024-01-27"},{"lineNumber":396,"author":{"gitId":"alfaloo"},"content":"                writer.newLine();","lastModifiedDate":"2024-01-27"},{"lineNumber":397,"author":{"gitId":"alfaloo"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":398,"author":{"gitId":"alfaloo"},"content":"            writer.close();","lastModifiedDate":"2024-01-27"},{"lineNumber":399,"author":{"gitId":"alfaloo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":400,"author":{"gitId":"alfaloo"},"content":"            print(e.getMessage());","lastModifiedDate":"2024-01-27"},{"lineNumber":401,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":402,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":403,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":404,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":405,"author":{"gitId":"alfaloo"},"content":"    public void print(Object text) {","lastModifiedDate":"2024-01-22"},{"lineNumber":406,"author":{"gitId":"alfaloo"},"content":"        System.out.println(\"\\t\" + text.toString());","lastModifiedDate":"2024-01-22"},{"lineNumber":407,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":408,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":409,"author":{"gitId":"alfaloo"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-22"},{"lineNumber":410,"author":{"gitId":"alfaloo"},"content":"        Lulu chatbot \u003d new Lulu();","lastModifiedDate":"2024-01-22"},{"lineNumber":411,"author":{"gitId":"alfaloo"},"content":"        chatbot.start();","lastModifiedDate":"2024-01-22"},{"lineNumber":412,"author":{"gitId":"alfaloo"},"content":"        try {","lastModifiedDate":"2024-01-23"},{"lineNumber":413,"author":{"gitId":"alfaloo"},"content":"            chatbot.respond();","lastModifiedDate":"2024-01-22"},{"lineNumber":414,"author":{"gitId":"alfaloo"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-01-23"},{"lineNumber":415,"author":{"gitId":"alfaloo"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-01-27"},{"lineNumber":416,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":417,"author":{"gitId":"alfaloo"},"content":"        chatbot.exit();","lastModifiedDate":"2024-01-22"},{"lineNumber":418,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":419,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"alfaloo":419}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"import exceptions.InvalidStatusUpdateException;","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"public class Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"    protected String name;","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"    protected boolean status;","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":"    public Task(String name) {","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"        this.status \u003d false;","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"    public void updateStatus(boolean status) throws InvalidStatusUpdateException {","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":"        if (this.status \u003d\u003d status) {","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":"            throw new InvalidStatusUpdateException();","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"alfaloo"},"content":"        this.status \u003d status;","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":20,"author":{"gitId":"alfaloo"},"content":"    public boolean queryByDate(LocalDate date) {","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"alfaloo"},"content":"        return false;","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"        return \"[T]\" + (this.status ? \"[X] \" : \"[ ] \") + this.name;","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":29,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"alfaloo":29}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"    public Todo(String name) {","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"        super(name);","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":"        return \"[T]\" + (super.status ? \"[X] \" : \"[ ] \") + super.name;","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"alfaloo":10}},{"path":"src/main/java/data/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"todo todo1","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"deadline deadline1 /by 2023-01-02","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"event event1 /from 2022-03-04 /to 2024-05-06","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"todo todo2","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"alfaloo":4}},{"path":"src/main/java/data/lulu.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"todo,todo1,false","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"deadline,deadline1,2023-01-02,false","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"event,event1,2022-03-04,2024-05-06,false","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"todo,todo2,false","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"event,event1,2022-03-04,2022-03-04,false","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"alfaloo":5}},{"path":"src/main/java/exceptions/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"package exceptions;","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"public class InvalidCommandException extends LuluException {","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"    public InvalidCommandException() {","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"        super(\"Could not decipher input string\");","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"alfaloo":7}},{"path":"src/main/java/exceptions/InvalidDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"package exceptions;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"public class InvalidDateException extends LuluException{","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"    public InvalidDateException() {","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"        super(\"Invalid date detected\");","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"alfaloo":7}},{"path":"src/main/java/exceptions/InvalidSlashParameterException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"package exceptions;","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"public class InvalidSlashParameterException extends LuluException {","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"    public InvalidSlashParameterException() {","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"        super(\"Could not decipher command after slash\");","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"alfaloo":7}},{"path":"src/main/java/exceptions/InvalidStatusUpdateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"package exceptions;","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"public class InvalidStatusUpdateException extends LuluException {","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"    public InvalidStatusUpdateException() {","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"        super(\"Status was already updated to desired value\");","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"alfaloo":7}},{"path":"src/main/java/exceptions/LuluException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"package exceptions;","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"public class LuluException extends Exception {","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"    public LuluException(String message) {","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"        super(message);","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"alfaloo":7}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"todo borrow book","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"alfaloo":4}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"alfaloo"},"content":"java -classpath ../bin Lulu \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"alfaloo":1,"-":37}}]
