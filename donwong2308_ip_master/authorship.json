[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"donwong2308"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"donwong2308"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"donwong2308"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"donwong2308"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"donwong2308"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"donwong2308"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"donwong2308"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"donwong2308"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"donwong2308"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"donwong2308"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"donwong2308"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"donwong2308"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"donwong2308"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    mainClass.set(\"seedu.duke.Duke\")","lastModifiedDate":"2023-08-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"donwong2308":14,"-":42}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"donwong2308"},"content":"D|0|return book|June 6th","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"donwong2308"},"content":"E|1|project meeting|Aug 6th 2pm|4pm","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"donwong2308"},"content":"D|0|deadline library book |by 2 of February 2024, 12:00AM","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"donwong2308"},"content":"E|0|event do 2103t |5 of February 2024, 12:00AM|6 of February 2024, 12:00AM","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"donwong2308"},"content":"T|0|eat macs","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"donwong2308"},"content":"T|0|2103T","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"donwong2308"},"content":"T|0|dotes","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"donwong2308":7}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"donwong2308"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"donwong2308"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"donwong2308"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"donwong2308"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"donwong2308"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"donwong2308"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"donwong2308"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"donwong2308"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"donwong2308"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"donwong2308"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"donwong2308"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"donwong2308"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"donwong2308"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"donwong2308"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"donwong2308"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"donwong2308"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"donwong2308"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"donwong2308"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"donwong2308"},"content":"    @FXML","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"donwong2308"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"donwong2308"},"content":"    @FXML","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"donwong2308"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"donwong2308"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"donwong2308"},"content":"        try {","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"donwong2308"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"donwong2308"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"donwong2308"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"donwong2308"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"donwong2308"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"donwong2308"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"donwong2308"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":35,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":36,"author":{"gitId":"donwong2308"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"donwong2308"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"donwong2308"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":39,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":40,"author":{"gitId":"donwong2308"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":41,"author":{"gitId":"donwong2308"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-08"},{"lineNumber":42,"author":{"gitId":"donwong2308"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":43,"author":{"gitId":"donwong2308"},"content":"    private void flip() {","lastModifiedDate":"2024-02-08"},{"lineNumber":44,"author":{"gitId":"donwong2308"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-08"},{"lineNumber":45,"author":{"gitId":"donwong2308"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-08"},{"lineNumber":46,"author":{"gitId":"donwong2308"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-08"},{"lineNumber":47,"author":{"gitId":"donwong2308"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-08"},{"lineNumber":48,"author":{"gitId":"donwong2308"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":49,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":50,"author":{"gitId":"donwong2308"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-08"},{"lineNumber":51,"author":{"gitId":"donwong2308"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-08"},{"lineNumber":52,"author":{"gitId":"donwong2308"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":53,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":54,"author":{"gitId":"donwong2308"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-02-08"},{"lineNumber":55,"author":{"gitId":"donwong2308"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-08"},{"lineNumber":56,"author":{"gitId":"donwong2308"},"content":"        db.flip();","lastModifiedDate":"2024-02-08"},{"lineNumber":57,"author":{"gitId":"donwong2308"},"content":"        return db;","lastModifiedDate":"2024-02-08"},{"lineNumber":58,"author":{"gitId":"donwong2308"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":59,"author":{"gitId":"donwong2308"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"donwong2308":59}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"donwong2308"},"content":"import duke.*;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"donwong2308"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"donwong2308"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"donwong2308"},"content":"import java.util.Objects;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"donwong2308"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"donwong2308"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"donwong2308"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"donwong2308"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"donwong2308"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"donwong2308"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"donwong2308"},"content":"     * Constructs a Duke object","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"donwong2308"},"content":"     * @param filePath the path to the file containing the tasks","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"donwong2308"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"donwong2308"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"donwong2308"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"donwong2308"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"donwong2308"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"donwong2308"},"content":"            taskList \u003d new TaskList(storage.loadTasks());","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"donwong2308"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"donwong2308"},"content":"            ui.showLoadingError();","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"donwong2308"},"content":"            taskList \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"donwong2308"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"donwong2308"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"donwong2308"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"donwong2308"},"content":"     * default constructor","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"donwong2308"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"donwong2308"},"content":"    public Duke() {","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"donwong2308"},"content":"        this(\"data/duke.txt\");","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"donwong2308"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":35,"author":{"gitId":"donwong2308"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"donwong2308"},"content":"     * Runs the program, takes user input and processes it","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"donwong2308"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"donwong2308"},"content":"    public void run() {","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"donwong2308"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"donwong2308"},"content":"        String userInput \u003d getUserInput(scanner);","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"donwong2308"},"content":"        while (!Objects.equals(userInput.toLowerCase(), \"bye\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"donwong2308"},"content":"            try {","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"donwong2308"},"content":"                DukeException.validateInstn(userInput);","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"donwong2308"},"content":"                String response \u003d Parser.parseUserInput(userInput, taskList);","lastModifiedDate":"2024-02-08"},{"lineNumber":46,"author":{"gitId":"donwong2308"},"content":"                System.out.println(response);","lastModifiedDate":"2024-02-08"},{"lineNumber":47,"author":{"gitId":"donwong2308"},"content":"                if (userInput.contains(\"delete\")) {","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"donwong2308"},"content":"                    taskList.reOrder();","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"donwong2308"},"content":"                }","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"donwong2308"},"content":"                // Save tasks to file after each user input","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"donwong2308"},"content":"                saveTasksToFile();","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"donwong2308"},"content":"            } catch (DukeException d) {","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"donwong2308"},"content":"                System.out.println(d);","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"donwong2308"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"donwong2308"},"content":"            System.out.println(\"What else can I do for you? (try typing my name 3 times with no space in between)\");","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"donwong2308"},"content":"            userInput \u003d getUserInput(scanner);","lastModifiedDate":"2024-02-05"},{"lineNumber":58,"author":{"gitId":"donwong2308"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"donwong2308"},"content":"        ui.showByeMessage();","lastModifiedDate":"2024-02-05"},{"lineNumber":60,"author":{"gitId":"donwong2308"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"donwong2308"},"content":"    private String getUserInput(Scanner scanner) {","lastModifiedDate":"2024-02-05"},{"lineNumber":63,"author":{"gitId":"donwong2308"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2024-02-05"},{"lineNumber":64,"author":{"gitId":"donwong2308"},"content":"        return scanner.nextLine();","lastModifiedDate":"2024-02-05"},{"lineNumber":65,"author":{"gitId":"donwong2308"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":66,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":67,"author":{"gitId":"donwong2308"},"content":"    private void saveTasksToFile() {","lastModifiedDate":"2024-02-05"},{"lineNumber":68,"author":{"gitId":"donwong2308"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"donwong2308"},"content":"            FileWriter writer \u003d new FileWriter(\"data/duke.txt\");","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"donwong2308"},"content":"            for (Task task : taskList.getTaskArr()) {","lastModifiedDate":"2024-02-05"},{"lineNumber":71,"author":{"gitId":"donwong2308"},"content":"                writer.write(task.save() + \"\\n\");","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"donwong2308"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"donwong2308"},"content":"            writer.close();","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"donwong2308"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"donwong2308"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"donwong2308"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"donwong2308"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":78,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":79,"author":{"gitId":"donwong2308"},"content":"    public String getResponse(String userInput) {","lastModifiedDate":"2024-02-08"},{"lineNumber":80,"author":{"gitId":"donwong2308"},"content":"        if (userInput.equalsIgnoreCase(\"bye\")){","lastModifiedDate":"2024-02-08"},{"lineNumber":81,"author":{"gitId":"donwong2308"},"content":"            return \"BYE\";","lastModifiedDate":"2024-02-08"},{"lineNumber":82,"author":{"gitId":"donwong2308"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":83,"author":{"gitId":"donwong2308"},"content":"        try {","lastModifiedDate":"2024-02-08"},{"lineNumber":84,"author":{"gitId":"donwong2308"},"content":"            DukeException.validateInstn(userInput);","lastModifiedDate":"2024-02-08"},{"lineNumber":85,"author":{"gitId":"donwong2308"},"content":"            String result \u003d Parser.parseUserInput(userInput, taskList);","lastModifiedDate":"2024-02-08"},{"lineNumber":86,"author":{"gitId":"donwong2308"},"content":"            if (userInput.contains(\"delete\")) {","lastModifiedDate":"2024-02-08"},{"lineNumber":87,"author":{"gitId":"donwong2308"},"content":"                taskList.reOrder();","lastModifiedDate":"2024-02-08"},{"lineNumber":88,"author":{"gitId":"donwong2308"},"content":"            }","lastModifiedDate":"2024-02-08"},{"lineNumber":89,"author":{"gitId":"donwong2308"},"content":"            // Save tasks to file after each user input","lastModifiedDate":"2024-02-08"},{"lineNumber":90,"author":{"gitId":"donwong2308"},"content":"            saveTasksToFile();","lastModifiedDate":"2024-02-08"},{"lineNumber":91,"author":{"gitId":"donwong2308"},"content":"            return result + \"\\n\" + \"What else can I do for you? (try typing my name 3 times with no space in between)\";","lastModifiedDate":"2024-02-08"},{"lineNumber":92,"author":{"gitId":"donwong2308"},"content":"        } catch (DukeException d) {","lastModifiedDate":"2024-02-08"},{"lineNumber":93,"author":{"gitId":"donwong2308"},"content":"            return d.toString();","lastModifiedDate":"2024-02-08"},{"lineNumber":94,"author":{"gitId":"donwong2308"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":95,"author":{"gitId":"donwong2308"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":96,"author":{"gitId":"donwong2308"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":97,"author":{"gitId":"donwong2308"},"content":"     * Main method that starts the program","lastModifiedDate":"2024-02-05"},{"lineNumber":98,"author":{"gitId":"donwong2308"},"content":"     * @param args the command line arguments","lastModifiedDate":"2024-02-05"},{"lineNumber":99,"author":{"gitId":"donwong2308"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-05"},{"lineNumber":101,"author":{"gitId":"donwong2308"},"content":"        System.out.println(\"Hello! I\u0027m PeWPeWPeW\");","lastModifiedDate":"2024-02-05"},{"lineNumber":102,"author":{"gitId":"donwong2308"},"content":"        new Duke(\"data/duke.txt\").run();","lastModifiedDate":"2024-02-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"donwong2308":100,"-":4}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"donwong2308"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"donwong2308"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"donwong2308"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"donwong2308"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"donwong2308"},"content":"public class Launcher {","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"donwong2308"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"donwong2308"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"donwong2308"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"donwong2308"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"donwong2308":10}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"donwong2308"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"donwong2308"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"donwong2308"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"donwong2308"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"donwong2308"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"donwong2308"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"donwong2308"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"donwong2308"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"donwong2308"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"donwong2308"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"donwong2308"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"donwong2308"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"donwong2308"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"donwong2308"},"content":"        try {","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"donwong2308"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"donwong2308"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"donwong2308"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"donwong2308"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"donwong2308"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"donwong2308"},"content":"            stage.show();","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"donwong2308"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"donwong2308"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"donwong2308"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"donwong2308"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"donwong2308"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"donwong2308":29}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"donwong2308"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"donwong2308"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"donwong2308"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"donwong2308"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"donwong2308"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"donwong2308"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"donwong2308"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"donwong2308"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"donwong2308"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"donwong2308"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"donwong2308"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"donwong2308"},"content":"    @FXML","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"donwong2308"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"donwong2308"},"content":"    @FXML","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"donwong2308"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"donwong2308"},"content":"    @FXML","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"donwong2308"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"donwong2308"},"content":"    @FXML","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"donwong2308"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"donwong2308"},"content":"    private Duke duke;","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"donwong2308"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"donwong2308"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"donwong2308"},"content":"    @FXML","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"donwong2308"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"donwong2308"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"donwong2308"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"donwong2308"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"donwong2308"},"content":"        duke \u003d d;","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"donwong2308"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":35,"author":{"gitId":"donwong2308"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":36,"author":{"gitId":"donwong2308"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"donwong2308"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"donwong2308"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":39,"author":{"gitId":"donwong2308"},"content":"    @FXML","lastModifiedDate":"2024-02-08"},{"lineNumber":40,"author":{"gitId":"donwong2308"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-08"},{"lineNumber":41,"author":{"gitId":"donwong2308"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-08"},{"lineNumber":42,"author":{"gitId":"donwong2308"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2024-02-08"},{"lineNumber":43,"author":{"gitId":"donwong2308"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-08"},{"lineNumber":44,"author":{"gitId":"donwong2308"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-08"},{"lineNumber":45,"author":{"gitId":"donwong2308"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2024-02-08"},{"lineNumber":46,"author":{"gitId":"donwong2308"},"content":"        );","lastModifiedDate":"2024-02-08"},{"lineNumber":47,"author":{"gitId":"donwong2308"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-08"},{"lineNumber":48,"author":{"gitId":"donwong2308"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":49,"author":{"gitId":"donwong2308"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"donwong2308":49}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"donwong2308"},"content":"package duke;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"donwong2308"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"donwong2308"},"content":"    protected String type \u003d \"D\";","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"donwong2308"},"content":"    protected String deadline;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"donwong2308"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"donwong2308"},"content":"     * Constructor for Deadline","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"donwong2308"},"content":"     * @param index the index of the task","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"donwong2308"},"content":"     * @param description the description of the task","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"donwong2308"},"content":"     * @param deadline the deadline of the task","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"donwong2308"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"donwong2308"},"content":"    public Deadline(int index, String description, String deadline) {","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"donwong2308"},"content":"        super(index, description);","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"donwong2308"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"donwong2308"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"donwong2308"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"donwong2308"},"content":"    public String getTask() {","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"donwong2308"},"content":"        return index + \". [\" + type + \"][\" + getStatusIcon() + \"] \" + description + \"(\" + deadline + \")\";","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"donwong2308"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"donwong2308"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"donwong2308"},"content":"    public String save() {","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"donwong2308"},"content":"        return type + \"|\" + (isDone ? \"1\" : \"0\") + \"|\" + description + \"|\" + deadline;","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"donwong2308"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"donwong2308"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"donwong2308":27}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"donwong2308"},"content":"package duke;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"donwong2308"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"donwong2308"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"donwong2308"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"donwong2308"},"content":"import java.util.Locale;","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"donwong2308"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"donwong2308"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"donwong2308"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"donwong2308"},"content":"     * Constructor for DukeException","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"donwong2308"},"content":"     * @param msg error message","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"donwong2308"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"donwong2308"},"content":"    public DukeException(String msg) {","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"donwong2308"},"content":"        super(msg);","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"donwong2308"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"donwong2308"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"donwong2308"},"content":"     * Validates the todo input is not empty","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"donwong2308"},"content":"     * @param str user input for todo task","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"donwong2308"},"content":"     * @throws DukeException if the input is empty after todo","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"donwong2308"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"donwong2308"},"content":"    static void validateToDo(String str) throws DukeException {","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"donwong2308"},"content":"        if (str.split(\" \").length \u003c 2) {","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"donwong2308"},"content":"            throw new DukeException(\"duke.ToDo duke.Task Missing!\");","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"donwong2308"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"donwong2308"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"donwong2308"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"donwong2308"},"content":"     * Validates the instruction is in the list of valid instructions","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"donwong2308"},"content":"     * @param str user input","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"donwong2308"},"content":"     * @throws DukeException if the instruction is not in the list","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"donwong2308"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"donwong2308"},"content":"    public static void validateInstn(String str) throws DukeException {","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"donwong2308"},"content":"        String[] instnArr \u003d {\"todo\", \"deadline\", \"event\", \"mark\", \"unmark\", \"list\", \"delete\", \"find\"};","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"donwong2308"},"content":"        String instn \u003d str.split(\" \")[0].toLowerCase();","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"donwong2308"},"content":"        if (!Arrays.asList(instnArr).contains(instn)) {","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"donwong2308"},"content":"            throw new DukeException(\"Invalid instruction for PeWPeWPeW:(((\");","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"donwong2308"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"donwong2308"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"donwong2308"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"donwong2308"},"content":"     * Validates if the list index to be deleted is valid","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"donwong2308"},"content":"     * @param index list index to be deleted","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"donwong2308"},"content":"     * @param task_arr list of tasks","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"donwong2308"},"content":"     * @throws DukeException if the index is invalid","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"donwong2308"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"donwong2308"},"content":"    static void validateArrIndex(int index, ArrayList\u003cTask\u003e task_arr) throws DukeException {","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"donwong2308"},"content":"        if (index\u003e\u003d task_arr.size()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"donwong2308"},"content":"            throw new DukeException(\"Your task number input is invalid, please try again\");","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"donwong2308"},"content":"        } else if (task_arr.get(index) \u003d\u003d null) {","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"donwong2308"},"content":"            throw new DukeException(\"Your task number input is invalid, please try again\");","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"donwong2308"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"donwong2308"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"donwong2308"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"donwong2308"},"content":"     * Validates of the date and time format is valid","lastModifiedDate":"2024-02-05"},{"lineNumber":58,"author":{"gitId":"donwong2308"},"content":"     * @param str date and time user input","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"donwong2308"},"content":"     * @throws DukeException if the date and time format is invalid","lastModifiedDate":"2024-02-05"},{"lineNumber":60,"author":{"gitId":"donwong2308"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"donwong2308"},"content":"    static void validateDateTime(String str) throws DukeException {","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"donwong2308"},"content":"        // Your existing validation code remains unchanged","lastModifiedDate":"2024-02-05"},{"lineNumber":63,"author":{"gitId":"donwong2308"},"content":"        String[] dateFormats \u003d {","lastModifiedDate":"2024-02-05"},{"lineNumber":64,"author":{"gitId":"donwong2308"},"content":"                \"M/d/yyyy[ HHmm]\",","lastModifiedDate":"2024-02-05"},{"lineNumber":65,"author":{"gitId":"donwong2308"},"content":"                \"yyyy-MM-dd[ HHmm]\",","lastModifiedDate":"2024-02-05"},{"lineNumber":66,"author":{"gitId":"donwong2308"},"content":"                \"dd-MM-yyyy[ HHmm]\",","lastModifiedDate":"2024-02-05"},{"lineNumber":67,"author":{"gitId":"donwong2308"},"content":"                \"d/M/yyyy[ HHmm]\",","lastModifiedDate":"2024-02-05"},{"lineNumber":68,"author":{"gitId":"donwong2308"},"content":"                \"M-d-yyyy[ HHmm]\",","lastModifiedDate":"2024-02-05"},{"lineNumber":69,"author":{"gitId":"donwong2308"},"content":"                \"d-M-yyyy[ HHmm]\"","lastModifiedDate":"2024-02-05"},{"lineNumber":70,"author":{"gitId":"donwong2308"},"content":"        };","lastModifiedDate":"2024-02-05"},{"lineNumber":71,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":72,"author":{"gitId":"donwong2308"},"content":"        boolean isValidFormat \u003d false;","lastModifiedDate":"2024-02-05"},{"lineNumber":73,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":74,"author":{"gitId":"donwong2308"},"content":"        for (String format : dateFormats) {","lastModifiedDate":"2024-02-05"},{"lineNumber":75,"author":{"gitId":"donwong2308"},"content":"            try {","lastModifiedDate":"2024-02-05"},{"lineNumber":76,"author":{"gitId":"donwong2308"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(format, Locale.ENGLISH);","lastModifiedDate":"2024-02-05"},{"lineNumber":77,"author":{"gitId":"donwong2308"},"content":"                formatter.parse(str);","lastModifiedDate":"2024-02-05"},{"lineNumber":78,"author":{"gitId":"donwong2308"},"content":"                isValidFormat \u003d true;","lastModifiedDate":"2024-02-05"},{"lineNumber":79,"author":{"gitId":"donwong2308"},"content":"                break;","lastModifiedDate":"2024-02-05"},{"lineNumber":80,"author":{"gitId":"donwong2308"},"content":"            } catch (DateTimeParseException ignored) {","lastModifiedDate":"2024-02-05"},{"lineNumber":81,"author":{"gitId":"donwong2308"},"content":"                // Ignore exception for the current format, try the next one","lastModifiedDate":"2024-02-05"},{"lineNumber":82,"author":{"gitId":"donwong2308"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":83,"author":{"gitId":"donwong2308"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":84,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":85,"author":{"gitId":"donwong2308"},"content":"        if (!isValidFormat) {","lastModifiedDate":"2024-02-05"},{"lineNumber":86,"author":{"gitId":"donwong2308"},"content":"            throw new DukeException(\"Invalid date and time format, use the following formats: \" +","lastModifiedDate":"2024-02-05"},{"lineNumber":87,"author":{"gitId":"donwong2308"},"content":"                    \"\\n\" + Arrays.toString(dateFormats));","lastModifiedDate":"2024-02-05"},{"lineNumber":88,"author":{"gitId":"donwong2308"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":89,"author":{"gitId":"donwong2308"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":90,"author":{"gitId":"donwong2308"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"donwong2308":90}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"donwong2308"},"content":"package duke;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"donwong2308"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"donwong2308"},"content":"    protected String type \u003d \"E\";","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"donwong2308"},"content":"    protected String start;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"donwong2308"},"content":"    protected String end;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"donwong2308"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"donwong2308"},"content":"     * Constructor for Event","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"donwong2308"},"content":"     * @param index index of the task","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"donwong2308"},"content":"     * @param description description of the task","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"donwong2308"},"content":"     * @param start start date and time of the task","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"donwong2308"},"content":"     * @param end end date and time of the task","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"donwong2308"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"donwong2308"},"content":"    public Event(int index, String description, String start, String end) {","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"donwong2308"},"content":"        super(index, description);","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"donwong2308"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"donwong2308"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"donwong2308"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"donwong2308"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"donwong2308"},"content":"    public String getTask() {","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"donwong2308"},"content":"        return index + \". [\" + type + \"][\" + getStatusIcon() + \"] \" + description + \"(from: \" + start + \" to: \" + end + \")\";","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"donwong2308"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"donwong2308"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"donwong2308"},"content":"    public String save() {","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"donwong2308"},"content":"        return type + \"|\" + (isDone ? \"1\" : \"0\") + \"|\" + description + \"|\" + start + \"|\" + end;","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"donwong2308"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"donwong2308"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"donwong2308":30}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"donwong2308"},"content":"package duke;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"donwong2308"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"donwong2308"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"donwong2308"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"donwong2308"},"content":"import java.util.Locale;","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"donwong2308"},"content":"import java.util.Objects;","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"donwong2308"},"content":"public class Parser {","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"donwong2308"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"donwong2308"},"content":"     * Converts the input string to LocalDateTime","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"donwong2308"},"content":"     * @param inputStr the input date and time string","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"donwong2308"},"content":"     * @return the LocalDateTime","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"donwong2308"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"donwong2308"},"content":"    public static String formatDateTime(String inputStr) {","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"donwong2308"},"content":"        String[] dateAndTimeParts \u003d inputStr.split(\"\\\\s+\");","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"donwong2308"},"content":"        // Split the input into parts","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"donwong2308"},"content":"        String[] dateParts \u003d new String[0];","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"donwong2308"},"content":"        if (inputStr.contains(\"-\")) {","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"donwong2308"},"content":"            dateParts \u003d dateAndTimeParts[0].split(\"-\");","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"donwong2308"},"content":"        } else if (inputStr.contains(\"/\")) {","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"donwong2308"},"content":"            dateParts \u003d dateAndTimeParts[0].split(\"/\");","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"donwong2308"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"donwong2308"},"content":"        // Parse the date part","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"donwong2308"},"content":"        int day \u003d Integer.parseInt(dateParts[0]);","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"donwong2308"},"content":"        int month \u003d Integer.parseInt(dateParts[1]);","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"donwong2308"},"content":"        int year \u003d Integer.parseInt(dateParts[2]);","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"donwong2308"},"content":"        // Parse the time part","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"donwong2308"},"content":"        int hour \u003d 0; // Default hour value","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"donwong2308"},"content":"        int minute \u003d 0; // Default minute value","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"donwong2308"},"content":"        if (dateAndTimeParts.length \u003e 1) {","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"donwong2308"},"content":"            String timePart \u003d dateAndTimeParts[1];","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"donwong2308"},"content":"            hour \u003d Integer.parseInt(timePart.substring(0, 2));","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"donwong2308"},"content":"            minute \u003d Integer.parseInt(timePart.substring(2));","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"donwong2308"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"donwong2308"},"content":"        // Create a LocalDateTime with the parsed parts","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"donwong2308"},"content":"        LocalDateTime localDateTime \u003d LocalDateTime.of(year, month, day, hour, minute);","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"donwong2308"},"content":"        // Format the LocalDateTime as desired","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"donwong2308"},"content":"        DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"d \u0027of\u0027 MMMM yyyy, h:mma\", Locale.ENGLISH);","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"donwong2308"},"content":"        return localDateTime.format(outputFormatter);","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"donwong2308"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"donwong2308"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"donwong2308"},"content":"     * Parses the user input and calls the appropriate method","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"donwong2308"},"content":"     * @param userInput the user input","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"donwong2308"},"content":"     * @param taskList the list of tasks","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"donwong2308"},"content":"     * @return the message result of the user input","lastModifiedDate":"2024-02-08"},{"lineNumber":52,"author":{"gitId":"donwong2308"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"donwong2308"},"content":"    public static String parseUserInput(String userInput, TaskList taskList) {","lastModifiedDate":"2024-02-08"},{"lineNumber":54,"author":{"gitId":"donwong2308"},"content":"        // Your existing parsing logic from the main method","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"donwong2308"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"donwong2308"},"content":"            DukeException.validateInstn(userInput);","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"donwong2308"},"content":"            int index \u003d taskList.getTaskArr().size();","lastModifiedDate":"2024-02-05"},{"lineNumber":58,"author":{"gitId":"donwong2308"},"content":"            if (Objects.equals(userInput.toLowerCase(), \"pewpewpew\")) {","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"donwong2308"},"content":"                return \"PeWPeWPeWPeWPeWPeWPeWPeWPeWPeWPeWPeW\";","lastModifiedDate":"2024-02-08"},{"lineNumber":60,"author":{"gitId":"donwong2308"},"content":"            } else if (userInput.toLowerCase().contains(\"find\")) {","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"donwong2308"},"content":"                String keyword \u003d userInput.substring(5);","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"donwong2308"},"content":"                ArrayList\u003cTask\u003e results \u003d taskList.findTasks(keyword);","lastModifiedDate":"2024-02-05"},{"lineNumber":63,"author":{"gitId":"donwong2308"},"content":"                if (results.isEmpty()) {","lastModifiedDate":"2024-02-05"},{"lineNumber":64,"author":{"gitId":"donwong2308"},"content":"                    return \"Sorry, I couldn\u0027t find any matching tasks in your list.\";","lastModifiedDate":"2024-02-08"},{"lineNumber":65,"author":{"gitId":"donwong2308"},"content":"                } else {","lastModifiedDate":"2024-02-08"},{"lineNumber":66,"author":{"gitId":"donwong2308"},"content":"                    StringBuilder message \u003d new StringBuilder(\"Here are the matching tasks in your list: \");","lastModifiedDate":"2024-02-08"},{"lineNumber":67,"author":{"gitId":"donwong2308"},"content":"                    for (Task task : results) {","lastModifiedDate":"2024-02-05"},{"lineNumber":68,"author":{"gitId":"donwong2308"},"content":"                        message.append(\"\\n\").append(task.getTask());","lastModifiedDate":"2024-02-08"},{"lineNumber":69,"author":{"gitId":"donwong2308"},"content":"                    }","lastModifiedDate":"2024-02-05"},{"lineNumber":70,"author":{"gitId":"donwong2308"},"content":"                    return message.toString();","lastModifiedDate":"2024-02-08"},{"lineNumber":71,"author":{"gitId":"donwong2308"},"content":"                }","lastModifiedDate":"2024-02-05"},{"lineNumber":72,"author":{"gitId":"donwong2308"},"content":"            } else if (Objects.equals(userInput.toLowerCase(), \"list\")) {","lastModifiedDate":"2024-02-05"},{"lineNumber":73,"author":{"gitId":"donwong2308"},"content":"                return taskList.listAllTasks();","lastModifiedDate":"2024-02-08"},{"lineNumber":74,"author":{"gitId":"donwong2308"},"content":"            } else if (userInput.toLowerCase().contains(\"unmark\")) {","lastModifiedDate":"2024-02-05"},{"lineNumber":75,"author":{"gitId":"donwong2308"},"content":"                int markedIndex \u003d Integer.parseInt(userInput.replaceAll(\"[^0-9]\", \"\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":76,"author":{"gitId":"donwong2308"},"content":"                try {","lastModifiedDate":"2024-02-05"},{"lineNumber":77,"author":{"gitId":"donwong2308"},"content":"                    DukeException.validateArrIndex(markedIndex, taskList.getTaskArr());","lastModifiedDate":"2024-02-05"},{"lineNumber":78,"author":{"gitId":"donwong2308"},"content":"                    taskList.unmarkTask(markedIndex);","lastModifiedDate":"2024-02-05"},{"lineNumber":79,"author":{"gitId":"donwong2308"},"content":"                    return \"OK, I\u0027ve marked this task as not done yet:\\n\" + taskList.printSelectedTask(markedIndex);","lastModifiedDate":"2024-02-08"},{"lineNumber":80,"author":{"gitId":"donwong2308"},"content":"                } catch (DukeException d) {","lastModifiedDate":"2024-02-05"},{"lineNumber":81,"author":{"gitId":"donwong2308"},"content":"                    return d.toString();","lastModifiedDate":"2024-02-08"},{"lineNumber":82,"author":{"gitId":"donwong2308"},"content":"                }","lastModifiedDate":"2024-02-05"},{"lineNumber":83,"author":{"gitId":"donwong2308"},"content":"            } else if (userInput.toLowerCase().contains(\"mark\")) {","lastModifiedDate":"2024-02-05"},{"lineNumber":84,"author":{"gitId":"donwong2308"},"content":"                int markedIndex \u003d Integer.parseInt(userInput.replaceAll(\"[^0-9]\", \"\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":85,"author":{"gitId":"donwong2308"},"content":"                try {","lastModifiedDate":"2024-02-05"},{"lineNumber":86,"author":{"gitId":"donwong2308"},"content":"                    DukeException.validateArrIndex(markedIndex, taskList.getTaskArr());","lastModifiedDate":"2024-02-05"},{"lineNumber":87,"author":{"gitId":"donwong2308"},"content":"                    taskList.markTask(markedIndex);","lastModifiedDate":"2024-02-05"},{"lineNumber":88,"author":{"gitId":"donwong2308"},"content":"                    return \"Nice! I\u0027ve marked this task as done:\\n\" + taskList.printSelectedTask(markedIndex);","lastModifiedDate":"2024-02-08"},{"lineNumber":89,"author":{"gitId":"donwong2308"},"content":"                } catch (DukeException d) {","lastModifiedDate":"2024-02-05"},{"lineNumber":90,"author":{"gitId":"donwong2308"},"content":"                    return d.toString();","lastModifiedDate":"2024-02-08"},{"lineNumber":91,"author":{"gitId":"donwong2308"},"content":"                }","lastModifiedDate":"2024-02-05"},{"lineNumber":92,"author":{"gitId":"donwong2308"},"content":"            } else if (userInput.toLowerCase().contains(\"delete\")) {","lastModifiedDate":"2024-02-05"},{"lineNumber":93,"author":{"gitId":"donwong2308"},"content":"                int markedIndex \u003d Integer.parseInt(userInput.replaceAll(\"[^0-9]\", \"\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":94,"author":{"gitId":"donwong2308"},"content":"                try {","lastModifiedDate":"2024-02-05"},{"lineNumber":95,"author":{"gitId":"donwong2308"},"content":"                    DukeException.validateArrIndex(markedIndex - 1, taskList.getTaskArr());","lastModifiedDate":"2024-02-05"},{"lineNumber":96,"author":{"gitId":"donwong2308"},"content":"                    String message \u003d \"Noted. I\u0027ve removed this task:\\n\" + taskList.printSelectedTask(markedIndex) + \"\\n\";","lastModifiedDate":"2024-02-08"},{"lineNumber":97,"author":{"gitId":"donwong2308"},"content":"                    taskList.deleteTask(markedIndex);","lastModifiedDate":"2024-02-05"},{"lineNumber":98,"author":{"gitId":"donwong2308"},"content":"                    message +\u003d \"Now you have \" + taskList.size() + \" tasks in the list\";","lastModifiedDate":"2024-02-08"},{"lineNumber":99,"author":{"gitId":"donwong2308"},"content":"                    return message;","lastModifiedDate":"2024-02-08"},{"lineNumber":100,"author":{"gitId":"donwong2308"},"content":"                } catch (DukeException d) {","lastModifiedDate":"2024-02-05"},{"lineNumber":101,"author":{"gitId":"donwong2308"},"content":"                    return d.toString();","lastModifiedDate":"2024-02-08"},{"lineNumber":102,"author":{"gitId":"donwong2308"},"content":"                }","lastModifiedDate":"2024-02-05"},{"lineNumber":103,"author":{"gitId":"donwong2308"},"content":"            } else if (userInput.toLowerCase().contains(\"todo\")) {","lastModifiedDate":"2024-02-05"},{"lineNumber":104,"author":{"gitId":"donwong2308"},"content":"                try {","lastModifiedDate":"2024-02-05"},{"lineNumber":105,"author":{"gitId":"donwong2308"},"content":"                    DukeException.validateToDo(userInput);","lastModifiedDate":"2024-02-05"},{"lineNumber":106,"author":{"gitId":"donwong2308"},"content":"                    taskList.addTask(new ToDo(index, userInput.substring(5)));","lastModifiedDate":"2024-02-05"},{"lineNumber":107,"author":{"gitId":"donwong2308"},"content":"                    String message \u003d \"Got it. I\u0027ve added this task:\\n\" + taskList.printSelectedTask(index + 1) + \"\\n\";","lastModifiedDate":"2024-02-08"},{"lineNumber":108,"author":{"gitId":"donwong2308"},"content":"                    message +\u003d \"Now you have \" + taskList.size() + \" tasks in the list\";","lastModifiedDate":"2024-02-08"},{"lineNumber":109,"author":{"gitId":"donwong2308"},"content":"                    return message;","lastModifiedDate":"2024-02-08"},{"lineNumber":110,"author":{"gitId":"donwong2308"},"content":"                } catch (DukeException d) {","lastModifiedDate":"2024-02-05"},{"lineNumber":111,"author":{"gitId":"donwong2308"},"content":"                    return d.toString();","lastModifiedDate":"2024-02-08"},{"lineNumber":112,"author":{"gitId":"donwong2308"},"content":"                }","lastModifiedDate":"2024-02-05"},{"lineNumber":113,"author":{"gitId":"donwong2308"},"content":"            } else if (userInput.toLowerCase().contains(\"deadline\")) {","lastModifiedDate":"2024-02-05"},{"lineNumber":114,"author":{"gitId":"donwong2308"},"content":"                try {","lastModifiedDate":"2024-02-05"},{"lineNumber":115,"author":{"gitId":"donwong2308"},"content":"                    String[] str \u003d userInput.split(\"/by \");","lastModifiedDate":"2024-02-05"},{"lineNumber":116,"author":{"gitId":"donwong2308"},"content":"                    DukeException.validateDateTime(str[1]);","lastModifiedDate":"2024-02-05"},{"lineNumber":117,"author":{"gitId":"donwong2308"},"content":"                    String deadline \u003d \"by \" + formatDateTime(str[1]);","lastModifiedDate":"2024-02-05"},{"lineNumber":118,"author":{"gitId":"donwong2308"},"content":"                    taskList.addTask(new Deadline(index, str[0], deadline));","lastModifiedDate":"2024-02-05"},{"lineNumber":119,"author":{"gitId":"donwong2308"},"content":"                    String message \u003d \"Got it. I\u0027ve added this task:\\n\" + taskList.printSelectedTask(index + 1) + \"\\n\";","lastModifiedDate":"2024-02-08"},{"lineNumber":120,"author":{"gitId":"donwong2308"},"content":"                    message +\u003d \"Now you have \" + taskList.size() + \" tasks in the list\";","lastModifiedDate":"2024-02-08"},{"lineNumber":121,"author":{"gitId":"donwong2308"},"content":"                    return message;","lastModifiedDate":"2024-02-08"},{"lineNumber":122,"author":{"gitId":"donwong2308"},"content":"                } catch (DukeException d) {","lastModifiedDate":"2024-02-05"},{"lineNumber":123,"author":{"gitId":"donwong2308"},"content":"                    return d.toString();","lastModifiedDate":"2024-02-08"},{"lineNumber":124,"author":{"gitId":"donwong2308"},"content":"                }","lastModifiedDate":"2024-02-05"},{"lineNumber":125,"author":{"gitId":"donwong2308"},"content":"            } else if (userInput.toLowerCase().contains(\"event\")) {","lastModifiedDate":"2024-02-05"},{"lineNumber":126,"author":{"gitId":"donwong2308"},"content":"                try {","lastModifiedDate":"2024-02-05"},{"lineNumber":127,"author":{"gitId":"donwong2308"},"content":"                    String[] front \u003d userInput.split(\"/from \");","lastModifiedDate":"2024-02-05"},{"lineNumber":128,"author":{"gitId":"donwong2308"},"content":"                    String[] back \u003d front[1].split(\"/to \");","lastModifiedDate":"2024-02-05"},{"lineNumber":129,"author":{"gitId":"donwong2308"},"content":"                    String start \u003d back[0].trim();","lastModifiedDate":"2024-02-05"},{"lineNumber":130,"author":{"gitId":"donwong2308"},"content":"                    String end \u003d back[1];","lastModifiedDate":"2024-02-05"},{"lineNumber":131,"author":{"gitId":"donwong2308"},"content":"                    DukeException.validateDateTime(start);","lastModifiedDate":"2024-02-05"},{"lineNumber":132,"author":{"gitId":"donwong2308"},"content":"                    DukeException.validateDateTime(end);","lastModifiedDate":"2024-02-05"},{"lineNumber":133,"author":{"gitId":"donwong2308"},"content":"                    taskList.addTask(new Event(index, front[0], formatDateTime(start), formatDateTime(end)));","lastModifiedDate":"2024-02-05"},{"lineNumber":134,"author":{"gitId":"donwong2308"},"content":"                    String message \u003d \"Got it. I\u0027ve added this task:\\n\" + taskList.printSelectedTask(index + 1) + \"\\n\";","lastModifiedDate":"2024-02-08"},{"lineNumber":135,"author":{"gitId":"donwong2308"},"content":"                    message +\u003d \"Now you have \" + taskList.size() + \" tasks in the list\";","lastModifiedDate":"2024-02-08"},{"lineNumber":136,"author":{"gitId":"donwong2308"},"content":"                    return message;","lastModifiedDate":"2024-02-08"},{"lineNumber":137,"author":{"gitId":"donwong2308"},"content":"                } catch (DukeException d) {","lastModifiedDate":"2024-02-05"},{"lineNumber":138,"author":{"gitId":"donwong2308"},"content":"                    return d.toString();","lastModifiedDate":"2024-02-08"},{"lineNumber":139,"author":{"gitId":"donwong2308"},"content":"                }","lastModifiedDate":"2024-02-05"},{"lineNumber":140,"author":{"gitId":"donwong2308"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":141,"author":{"gitId":"donwong2308"},"content":"        } catch (DukeException d) {","lastModifiedDate":"2024-02-05"},{"lineNumber":142,"author":{"gitId":"donwong2308"},"content":"            return d.toString();","lastModifiedDate":"2024-02-08"},{"lineNumber":143,"author":{"gitId":"donwong2308"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":144,"author":{"gitId":"donwong2308"},"content":"        return \"Sorry, I don\u0027t understand. Please try again.\";","lastModifiedDate":"2024-02-08"},{"lineNumber":145,"author":{"gitId":"donwong2308"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":146,"author":{"gitId":"donwong2308"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"donwong2308":146}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"donwong2308"},"content":"package duke;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"donwong2308"},"content":"import java.io.File;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"donwong2308"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"donwong2308"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"donwong2308"},"content":"import java.util.Objects;","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"donwong2308"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"donwong2308"},"content":"public class Storage {","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"donwong2308"},"content":"    private String filePath;","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"donwong2308"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"donwong2308"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"donwong2308"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"donwong2308"},"content":"    public ArrayList\u003cTask\u003e loadTasks() throws DukeException {","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"donwong2308"},"content":"        ArrayList\u003cTask\u003e task_arr \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"donwong2308"},"content":"        int index \u003d 0;","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"donwong2308"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"donwong2308"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"donwong2308"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"donwong2308"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"donwong2308"},"content":"                // Load tasks from file and populate taskArr","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"donwong2308"},"content":"                // ... (your existing file reading logic)","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"donwong2308"},"content":"                String[] line \u003d scanner.nextLine().split(\"\\\\|\");","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"donwong2308"},"content":"                String type \u003d line[0];","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"donwong2308"},"content":"                boolean isDone \u003d line[1].equals(\"1\");","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"donwong2308"},"content":"                String description \u003d line[2];","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"donwong2308"},"content":"                if (Objects.equals(type, \"T\")) {","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"donwong2308"},"content":"                    task_arr.add(new ToDo(index, description));","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"donwong2308"},"content":"                    if (isDone) {","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"donwong2308"},"content":"                        task_arr.get(index).mark();","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"donwong2308"},"content":"                    }","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"donwong2308"},"content":"                    index++;","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"donwong2308"},"content":"                } else if (Objects.equals(type, \"D\")) {","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"donwong2308"},"content":"                    String deadline \u003d line[3];","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"donwong2308"},"content":"                    task_arr.add(new Deadline(index, description, deadline));","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"donwong2308"},"content":"                    if (isDone) {","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"donwong2308"},"content":"                        task_arr.get(index).mark();","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"donwong2308"},"content":"                    }","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"donwong2308"},"content":"                    index++;","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"donwong2308"},"content":"                } else if (Objects.equals(type, \"E\")) {","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"donwong2308"},"content":"                    String start \u003d line[3];","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"donwong2308"},"content":"                    String end \u003d line[4];","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"donwong2308"},"content":"                    task_arr.add(new Event(index, description, start, end));","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"donwong2308"},"content":"                    if (isDone) {","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"donwong2308"},"content":"                        task_arr.get(index).mark();","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"donwong2308"},"content":"                    }","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"donwong2308"},"content":"                    index++;","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"donwong2308"},"content":"                }","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"donwong2308"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"donwong2308"},"content":"            scanner.close();","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"donwong2308"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"donwong2308"},"content":"            throw new DukeException(\"File not found: \" + e);","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"donwong2308"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":58,"author":{"gitId":"donwong2308"},"content":"        return task_arr;","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"donwong2308"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":60,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"donwong2308"},"content":"    // Add other methods for saving tasks if needed","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"donwong2308"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"donwong2308":62}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"donwong2308"},"content":"package duke;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"donwong2308"},"content":"public class Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"donwong2308"},"content":"    protected String description;","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"donwong2308"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"donwong2308"},"content":"    protected int index;","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"donwong2308"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"donwong2308"},"content":"     * Constructor for the Task class","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"donwong2308"},"content":"     * @param index the index of the task","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"donwong2308"},"content":"     * @param description the description of the task","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"donwong2308"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"donwong2308"},"content":"    public Task(int index, String description) {","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"donwong2308"},"content":"        this.index \u003d index + 1;","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"donwong2308"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"donwong2308"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"donwong2308"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"donwong2308"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"donwong2308"},"content":"     * marks the task as done","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"donwong2308"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"donwong2308"},"content":"    public void mark() {","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"donwong2308"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"donwong2308"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"donwong2308"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"donwong2308"},"content":"     * marks the task as not done","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"donwong2308"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"donwong2308"},"content":"    public void unmark() {","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"donwong2308"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"donwong2308"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"donwong2308"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"donwong2308"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"donwong2308"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"donwong2308"},"content":"    public String getTask() {","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"donwong2308"},"content":"        return index + \". [\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"donwong2308"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"donwong2308"},"content":"    public String getDescription() {","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"donwong2308"},"content":"        return description;","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"donwong2308"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"donwong2308"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"donwong2308"},"content":"     * change the index of the task","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"donwong2308"},"content":"     * @param newIndex the new index of the task","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"donwong2308"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"donwong2308"},"content":"    public void changeindex(int newIndex) {","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"donwong2308"},"content":"        this.index \u003d newIndex;","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"donwong2308"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"donwong2308"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"donwong2308"},"content":"     * saves the task as a string","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"donwong2308"},"content":"     * @return the string representation of the task","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"donwong2308"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"donwong2308"},"content":"    public String save() {","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"donwong2308"},"content":"        return index + \"|\" + (isDone ? \"1\" : \"0\") + \"|\" + description;","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"donwong2308"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"donwong2308"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"donwong2308":59}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"donwong2308"},"content":"package duke;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"donwong2308"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"donwong2308"},"content":"public class TaskList {","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"donwong2308"},"content":"    private ArrayList\u003cTask\u003e taskArr;","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"donwong2308"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskArr) {","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"donwong2308"},"content":"        this.taskArr \u003d taskArr;","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"donwong2308"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"donwong2308"},"content":"    // Add methods to manipulate the task list (e.g., add, delete tasks)","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"donwong2308"},"content":"    public ArrayList\u003cTask\u003e getTaskArr() {","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"donwong2308"},"content":"        return taskArr;","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"donwong2308"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"donwong2308"},"content":"    public ArrayList\u003cTask\u003e reOrder() {","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"donwong2308"},"content":"        int index \u003d 1;","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"donwong2308"},"content":"        for (Task task : taskArr) {","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"donwong2308"},"content":"            task.changeindex(index);","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"donwong2308"},"content":"            index++;","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"donwong2308"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"donwong2308"},"content":"        return taskArr;","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"donwong2308"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"donwong2308"},"content":"    public ArrayList\u003cTask\u003e findTasks(String keyword) {","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"donwong2308"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"donwong2308"},"content":"        for (Task task : taskArr) {","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"donwong2308"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"donwong2308"},"content":"                tasks.add(task);","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"donwong2308"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"donwong2308"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"donwong2308"},"content":"        return tasks;","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"donwong2308"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"donwong2308"},"content":"    public String listAllTasks() {","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"donwong2308"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"donwong2308"},"content":"        for (Task task : taskArr) {","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"donwong2308"},"content":"            result.append(task.getTask()).append(\"\\n\");","lastModifiedDate":"2024-02-08"},{"lineNumber":40,"author":{"gitId":"donwong2308"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"donwong2308"},"content":"        return result.toString();","lastModifiedDate":"2024-02-08"},{"lineNumber":42,"author":{"gitId":"donwong2308"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"donwong2308"},"content":"    public void unmarkTask(int index) {","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"donwong2308"},"content":"        taskArr.get(index - 1).unmark();","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"donwong2308"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"donwong2308"},"content":"    public void markTask(int index) {","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"donwong2308"},"content":"        taskArr.get(index - 1).mark();","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"donwong2308"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"donwong2308"},"content":"    public Task getTaskObject(int index) {","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"donwong2308"},"content":"        return taskArr.get(index - 1);","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"donwong2308"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"donwong2308"},"content":"    public String printSelectedTask(int index) {","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"donwong2308"},"content":"        return taskArr.get(index - 1).getTask();","lastModifiedDate":"2024-02-05"},{"lineNumber":58,"author":{"gitId":"donwong2308"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":60,"author":{"gitId":"donwong2308"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"donwong2308"},"content":"        taskArr.remove(index - 1);","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"donwong2308"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":63,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":64,"author":{"gitId":"donwong2308"},"content":"    public int size() {","lastModifiedDate":"2024-02-05"},{"lineNumber":65,"author":{"gitId":"donwong2308"},"content":"        return taskArr.size();","lastModifiedDate":"2024-02-05"},{"lineNumber":66,"author":{"gitId":"donwong2308"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":67,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":68,"author":{"gitId":"donwong2308"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-02-05"},{"lineNumber":69,"author":{"gitId":"donwong2308"},"content":"        taskArr.add(task);","lastModifiedDate":"2024-02-05"},{"lineNumber":70,"author":{"gitId":"donwong2308"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":71,"author":{"gitId":"donwong2308"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"donwong2308":71}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"donwong2308"},"content":"package duke;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"donwong2308"},"content":"public class ToDo extends Task{","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"donwong2308"},"content":"    protected String type \u003d \"T\";","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"donwong2308"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"donwong2308"},"content":"     * Constructor for ToDo","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"donwong2308"},"content":"     * @param index the index of the task","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"donwong2308"},"content":"     * @param description the description of the task","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"donwong2308"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"donwong2308"},"content":"    public ToDo(int index, String description) {","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"donwong2308"},"content":"        super(index, description);","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"donwong2308"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"donwong2308"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"donwong2308"},"content":"    public String getTask() {","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"donwong2308"},"content":"        return index + \". [\" + type + \"][\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"donwong2308"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"donwong2308"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"donwong2308"},"content":"    public String save() {","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"donwong2308"},"content":"        return type + \"|\" + (isDone ? \"1\" : \"0\") + \"|\" + description;","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"donwong2308"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"donwong2308"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"donwong2308":24}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"donwong2308"},"content":"package duke;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"donwong2308"},"content":"public class Ui {","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"donwong2308"},"content":"    public void showLoadingError() {","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"donwong2308"},"content":"        System.out.println(\"Error loading tasks from file.\");","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"donwong2308"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"donwong2308"},"content":"    public void showByeMessage() {","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"donwong2308"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"donwong2308"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"donwong2308"},"content":"    // Add other UI-related methods as needed","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"donwong2308"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"donwong2308":13}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"donwong2308"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"donwong2308"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"donwong2308"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"donwong2308"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"donwong2308"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"donwong2308"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"donwong2308"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"donwong2308"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"donwong2308"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"donwong2308"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"donwong2308"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"donwong2308"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"donwong2308"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"donwong2308"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"donwong2308":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"donwong2308"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"donwong2308"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"donwong2308"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"donwong2308"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"donwong2308"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"donwong2308"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"donwong2308"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"donwong2308"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"donwong2308"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"donwong2308"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"donwong2308"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"donwong2308"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"donwong2308"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"donwong2308"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"donwong2308"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"donwong2308"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"donwong2308"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"donwong2308":19}},{"path":"src/test/java/duke/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"donwong2308"},"content":"package duke;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"donwong2308"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"donwong2308"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"donwong2308"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"donwong2308"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"donwong2308"},"content":"public class TodoTest {","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"donwong2308"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"donwong2308"},"content":"    public void todo_getTask_success() throws DukeException{","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"donwong2308"},"content":"        assertEquals(\"1. [T][ ] pray\", new ToDo(0, \"pray\").getTask());","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"donwong2308"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"donwong2308"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"donwong2308"},"content":"    public void deadline_getTask_invalidDate_exceptionThrown(){","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"donwong2308"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"donwong2308"},"content":"            DukeException.validateDateTime(\"111/11/1111\");","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"donwong2308"},"content":"            assertEquals(\"fail\", new Deadline(1, \"fail\", \"111/11/1111\").getTask());","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"donwong2308"},"content":"        } catch (DukeException d) {","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"donwong2308"},"content":"            String[] dateFormats \u003d {","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"donwong2308"},"content":"                    \"M/d/yyyy[ HHmm]\",","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"donwong2308"},"content":"                    \"yyyy-MM-dd[ HHmm]\",","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"donwong2308"},"content":"                    \"dd-MM-yyyy[ HHmm]\",","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"donwong2308"},"content":"                    \"d/M/yyyy[ HHmm]\",","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"donwong2308"},"content":"                    \"M-d-yyyy[ HHmm]\",","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"donwong2308"},"content":"                    \"d-M-yyyy[ HHmm]\"","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"donwong2308"},"content":"            };","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"donwong2308"},"content":"            assertEquals(\"Invalid date and time format, use the following formats: \" +","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"donwong2308"},"content":"                    \"\\n\" + Arrays.toString(dateFormats), d.getMessage());","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"donwong2308"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"donwong2308"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"donwong2308"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"donwong2308"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"donwong2308":35}},{"path":"text-ui-test/EXPECTED.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"donwong2308"},"content":"Hello! I\u0027m PeWPeWPeW","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"donwong2308"},"content":"What can I do for you?","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"donwong2308"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"donwong2308"},"content":"1. [T][ ] play","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"donwong2308"},"content":"Now you have 1 tasks in the list","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"donwong2308"},"content":"What else can I do for you? (try typing my name 3 times with no space in between)","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"donwong2308"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"donwong2308"},"content":"2. [D][ ] deadline do homework (by Sun)","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"donwong2308"},"content":"Now you have 2 tasks in the list","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"donwong2308"},"content":"What else can I do for you? (try typing my name 3 times with no space in between)","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"donwong2308"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"donwong2308"},"content":"3. [E][ ] event project meeting (from: Mon 2pm  to: 4pm)","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"donwong2308"},"content":"Now you have 3 tasks in the list","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"donwong2308"},"content":"What else can I do for you? (try typing my name 3 times with no space in between)","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"donwong2308"},"content":"1. [T][ ] play","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"donwong2308"},"content":"2. [D][ ] deadline do homework (by Sun)","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"donwong2308"},"content":"3. [E][ ] event project meeting (from: Mon 2pm  to: 4pm)","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"donwong2308"},"content":"What else can I do for you? (try typing my name 3 times with no space in between)","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"donwong2308"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"donwong2308"},"content":"2. [D][X] deadline do homework (by Sun)","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"donwong2308"},"content":"Now you have 2 tasks in the list","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"donwong2308"},"content":"What else can I do for you? (try typing my name 3 times with no space in between)","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"donwong2308"},"content":"1. [T][ ] play","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"donwong2308"},"content":"3. [E][ ] event project meeting (from: Mon 2pm  to: 4pm)","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"donwong2308"},"content":"What else can I do for you? (try typing my name 3 times with no space in between)","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"donwong2308"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"donwong2308":26}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"donwong2308"},"content":"todo play","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"donwong2308"},"content":"deadline do homework /by Sun","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"donwong2308"},"content":"event project meeting /Mon 2pm /4pm","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"donwong2308"},"content":"list","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"donwong2308"},"content":"mark 2","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"donwong2308"},"content":"delete 2","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"donwong2308"},"content":"bye","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"donwong2308":7}}]
