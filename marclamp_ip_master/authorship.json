[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"# Chaterpillar project template","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"marclamp"},"content":"3. After that, locate the `src/main/java/Chaterpillar.java` file, right-click it, and choose `Run Chaterpillar.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"marclamp":2,"-":22}},{"path":"src/main/java/Chaterpillar.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"marclamp"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"marclamp"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"marclamp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"marclamp"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"marclamp"},"content":"public class Chaterpillar {","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"marclamp"},"content":"    public static boolean exited \u003d false;","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"marclamp"},"content":"    public static ArrayList\u003cTask\u003e listoftasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"marclamp"},"content":"    public static void greet() {","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":"        print_horizontal_line();","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"marclamp"},"content":"        System.out.println(\"Hello! I\u0027m Chaterpillar\");","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"marclamp"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"marclamp"},"content":"        print_horizontal_line();","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"marclamp"},"content":"    public static void exit() {","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"marclamp"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"marclamp"},"content":"    public static void echo(String s) {","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"marclamp"},"content":"        System.out.println(s);","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"marclamp"},"content":"    public static void print_horizontal_line() {","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"marclamp"},"content":"        String line \u003d \"-\".repeat(50);","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"marclamp"},"content":"        System.out.println(line);","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"marclamp"},"content":"    public static void parse_input(BufferedReader reader) throws IOException {","lastModifiedDate":"2024-01-26"},{"lineNumber":27,"author":{"gitId":"marclamp"},"content":"        String input \u003d reader.readLine();","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"marclamp"},"content":"        String[] input_sp \u003d input.split(\" \");","lastModifiedDate":"2024-01-26"},{"lineNumber":29,"author":{"gitId":"marclamp"},"content":"        print_horizontal_line();","lastModifiedDate":"2024-01-26"},{"lineNumber":30,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":31,"author":{"gitId":"marclamp"},"content":"        int num;","lastModifiedDate":"2024-01-26"},{"lineNumber":32,"author":{"gitId":"marclamp"},"content":"        Task curr_task;","lastModifiedDate":"2024-01-26"},{"lineNumber":33,"author":{"gitId":"marclamp"},"content":"        switch(input_sp[0]) {","lastModifiedDate":"2024-01-26"},{"lineNumber":34,"author":{"gitId":"marclamp"},"content":"            case \"list\":","lastModifiedDate":"2024-01-26"},{"lineNumber":35,"author":{"gitId":"marclamp"},"content":"                echo(\"Here are the tasks in your list: \");","lastModifiedDate":"2024-01-26"},{"lineNumber":36,"author":{"gitId":"marclamp"},"content":"                int i \u003d 1;","lastModifiedDate":"2024-01-26"},{"lineNumber":37,"author":{"gitId":"marclamp"},"content":"                for (Task each_task : listoftasks) {","lastModifiedDate":"2024-01-26"},{"lineNumber":38,"author":{"gitId":"marclamp"},"content":"                    echo(i++ + \". \" + each_task);","lastModifiedDate":"2024-01-26"},{"lineNumber":39,"author":{"gitId":"marclamp"},"content":"                }","lastModifiedDate":"2024-01-26"},{"lineNumber":40,"author":{"gitId":"marclamp"},"content":"                break;","lastModifiedDate":"2024-01-26"},{"lineNumber":41,"author":{"gitId":"marclamp"},"content":"            case \"mark\":","lastModifiedDate":"2024-01-26"},{"lineNumber":42,"author":{"gitId":"marclamp"},"content":"                echo(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-01-26"},{"lineNumber":43,"author":{"gitId":"marclamp"},"content":"                num \u003d Integer.parseInt(input_sp[1]);","lastModifiedDate":"2024-01-26"},{"lineNumber":44,"author":{"gitId":"marclamp"},"content":"                curr_task \u003d listoftasks.get(num-1);","lastModifiedDate":"2024-01-26"},{"lineNumber":45,"author":{"gitId":"marclamp"},"content":"                curr_task.mark();","lastModifiedDate":"2024-01-26"},{"lineNumber":46,"author":{"gitId":"marclamp"},"content":"                echo(curr_task.toString());","lastModifiedDate":"2024-01-26"},{"lineNumber":47,"author":{"gitId":"marclamp"},"content":"                break;","lastModifiedDate":"2024-01-26"},{"lineNumber":48,"author":{"gitId":"marclamp"},"content":"            case \"unmark\":","lastModifiedDate":"2024-01-26"},{"lineNumber":49,"author":{"gitId":"marclamp"},"content":"                echo(\"Ok, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-01-26"},{"lineNumber":50,"author":{"gitId":"marclamp"},"content":"                num \u003d Integer.parseInt(input_sp[1]);","lastModifiedDate":"2024-01-26"},{"lineNumber":51,"author":{"gitId":"marclamp"},"content":"                curr_task \u003d listoftasks.get(num-1);","lastModifiedDate":"2024-01-26"},{"lineNumber":52,"author":{"gitId":"marclamp"},"content":"                curr_task.unmark();","lastModifiedDate":"2024-01-26"},{"lineNumber":53,"author":{"gitId":"marclamp"},"content":"                echo(curr_task.toString());","lastModifiedDate":"2024-01-26"},{"lineNumber":54,"author":{"gitId":"marclamp"},"content":"                break;","lastModifiedDate":"2024-01-26"},{"lineNumber":55,"author":{"gitId":"marclamp"},"content":"            case \"bye\":","lastModifiedDate":"2024-01-26"},{"lineNumber":56,"author":{"gitId":"marclamp"},"content":"                // exits the program","lastModifiedDate":"2024-01-26"},{"lineNumber":57,"author":{"gitId":"marclamp"},"content":"                exited \u003d true;","lastModifiedDate":"2024-01-26"},{"lineNumber":58,"author":{"gitId":"marclamp"},"content":"                exit();","lastModifiedDate":"2024-01-26"},{"lineNumber":59,"author":{"gitId":"marclamp"},"content":"                break;","lastModifiedDate":"2024-01-26"},{"lineNumber":60,"author":{"gitId":"marclamp"},"content":"            default:","lastModifiedDate":"2024-01-26"},{"lineNumber":61,"author":{"gitId":"marclamp"},"content":"                // if not asked to exit the chatbot","lastModifiedDate":"2024-01-26"},{"lineNumber":62,"author":{"gitId":"marclamp"},"content":"                // add to array list and","lastModifiedDate":"2024-01-26"},{"lineNumber":63,"author":{"gitId":"marclamp"},"content":"                // prints what is added","lastModifiedDate":"2024-01-26"},{"lineNumber":64,"author":{"gitId":"marclamp"},"content":"                Task task \u003d new Task(input);","lastModifiedDate":"2024-01-26"},{"lineNumber":65,"author":{"gitId":"marclamp"},"content":"                listoftasks.add(task);","lastModifiedDate":"2024-01-26"},{"lineNumber":66,"author":{"gitId":"marclamp"},"content":"                echo(\"added: \" + task.taskname);","lastModifiedDate":"2024-01-26"},{"lineNumber":67,"author":{"gitId":"marclamp"},"content":"                break;","lastModifiedDate":"2024-01-26"},{"lineNumber":68,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":69,"author":{"gitId":"marclamp"},"content":"        print_horizontal_line();","lastModifiedDate":"2024-01-26"},{"lineNumber":70,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":71,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":72,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":73,"author":{"gitId":"marclamp"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-26"},{"lineNumber":74,"author":{"gitId":"marclamp"},"content":"        greet();","lastModifiedDate":"2024-01-26"},{"lineNumber":75,"author":{"gitId":"marclamp"},"content":"        BufferedReader reader \u003d new BufferedReader(","lastModifiedDate":"2024-01-26"},{"lineNumber":76,"author":{"gitId":"marclamp"},"content":"                new InputStreamReader((System.in)));","lastModifiedDate":"2024-01-26"},{"lineNumber":77,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":78,"author":{"gitId":"marclamp"},"content":"        while (!exited) {","lastModifiedDate":"2024-01-26"},{"lineNumber":79,"author":{"gitId":"marclamp"},"content":"            try {","lastModifiedDate":"2024-01-26"},{"lineNumber":80,"author":{"gitId":"marclamp"},"content":"                parse_input(reader);","lastModifiedDate":"2024-01-26"},{"lineNumber":81,"author":{"gitId":"marclamp"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":82,"author":{"gitId":"marclamp"},"content":"                System.out.println(\"IOException occurred.\");","lastModifiedDate":"2024-01-26"},{"lineNumber":83,"author":{"gitId":"marclamp"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":84,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":85,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":86,"author":{"gitId":"marclamp"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"marclamp":86}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"public class Task {","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"marclamp"},"content":"    public String taskname;","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"marclamp"},"content":"    public boolean marked;","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"marclamp"},"content":"    // Basic Constructor","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"marclamp"},"content":"    public Task(String taskname) {","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"marclamp"},"content":"        this.taskname \u003d taskname;","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"marclamp"},"content":"        this.marked \u003d false;","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":"    public void mark() {","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"marclamp"},"content":"        this.marked \u003d true;","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"marclamp"},"content":"    public void unmark() {","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"marclamp"},"content":"        this.marked \u003d false;","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"marclamp"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"marclamp"},"content":"    public String toString() {","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"marclamp"},"content":"        return (this.marked ? \"[X] \" : \"[ ] \") + this.taskname;","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"marclamp"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"marclamp":23}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"marclamp"},"content":"java -classpath ..\\bin Chaterpillar \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"marclamp":1,"-":20}}]
