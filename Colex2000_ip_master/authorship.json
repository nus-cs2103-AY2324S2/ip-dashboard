[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Colex2000"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"Colex2000"},"content":"    protected String by;","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"Colex2000"},"content":"    public Deadline(String description, String by){","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"Colex2000"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"Colex2000"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"Colex2000"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"Colex2000"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"Colex2000"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"Colex2000"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"Colex2000":14}},{"path":"src/main/java/Demon.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Colex2000"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"Colex2000"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"Colex2000"},"content":"import java.util.List;","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"Colex2000"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"Colex2000"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"Colex2000"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"Colex2000"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"Colex2000"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"Colex2000"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"Colex2000"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"Colex2000"},"content":"public class Demon {","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"Colex2000"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"Colex2000"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"Colex2000"},"content":"        System.out.println(\"Hello Master, I\u0027m Demon \\nWhat can I do for you today?\");","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"Colex2000"},"content":"        String input \u003d sc.nextLine();","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"Colex2000"},"content":"        // list to store actions specified by user.","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"Colex2000"},"content":"        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"Colex2000"},"content":"        String taskFilePath \u003d \"src/main/taskList.txt\";","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"Colex2000"},"content":"        ","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"Colex2000"},"content":"        // Load file into list array","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"Colex2000"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"Colex2000"},"content":"            // Create a FileReader","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"Colex2000"},"content":"            FileReader fileReader \u003d new FileReader(taskFilePath);","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"Colex2000"},"content":"            // Create a BufferedReader","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"Colex2000"},"content":"            BufferedReader bufferedReader \u003d new BufferedReader(fileReader);","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"Colex2000"},"content":"            String line;","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"Colex2000"},"content":"            // Read file line by line","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"Colex2000"},"content":"            while ((line \u003d bufferedReader.readLine()) !\u003d null) {","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"Colex2000"},"content":"                // Process the line","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"Colex2000"},"content":"                Task item;","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"Colex2000"},"content":"                String isCompleted;","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"Colex2000"},"content":"                char firstChar \u003d line.charAt(0);","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"Colex2000"},"content":"                if (firstChar \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"Colex2000"},"content":"                    isCompleted \u003d line.split(\"\\\\|\")[1].trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"Colex2000"},"content":"                    String description \u003d line.split(\"\\\\|\")[2].trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"Colex2000"},"content":"                    String by \u003d line.split(\"\\\\|\")[3].trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"Colex2000"},"content":"                    item \u003d new Deadline(description, by);","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"Colex2000"},"content":"                } else if (firstChar \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"Colex2000"},"content":"                    isCompleted \u003d line.split(\"\\\\|\")[1].trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"Colex2000"},"content":"                    String description \u003d line.split(\"\\\\|\")[2].trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"Colex2000"},"content":"                    item \u003d new Todo(description);","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"Colex2000"},"content":"                } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"Colex2000"},"content":"                    isCompleted \u003d line.split(\"\\\\|\")[1].trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"Colex2000"},"content":"                    String description \u003d line.split(\"\\\\|\")[2].trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"Colex2000"},"content":"                    String from \u003d line.split(\"\\\\|\")[3].trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"Colex2000"},"content":"                    String to \u003d line.split(\"\\\\|\")[4].trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"Colex2000"},"content":"                    item \u003d new Event(description, from, to);","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"Colex2000"},"content":"                } ","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"Colex2000"},"content":"                list.add(item);","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"Colex2000"},"content":"                if (isCompleted.equals(\"1\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"Colex2000"},"content":"                    item.markDone();","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"Colex2000"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"Colex2000"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"Colex2000"},"content":"            // Close the BufferedReader","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"Colex2000"},"content":"            bufferedReader.close();","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"Colex2000"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"Colex2000"},"content":"            System.err.println(\"No previous tasks loaded.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"Colex2000"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":68,"author":{"gitId":"Colex2000"},"content":"        while (!input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2024-01-24"},{"lineNumber":69,"author":{"gitId":"Colex2000"},"content":"            System.out.println(\"Entered: \u0027\" + input + \"\u0027\");","lastModifiedDate":"2024-01-24"},{"lineNumber":70,"author":{"gitId":"Colex2000"},"content":"            if (input.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2024-01-24"},{"lineNumber":71,"author":{"gitId":"Colex2000"},"content":"                printDivider();","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"Colex2000"},"content":"                System.out.print(\"List of things to do :\\n\");","lastModifiedDate":"2024-01-24"},{"lineNumber":73,"author":{"gitId":"Colex2000"},"content":"                for (int i \u003d 1; i \u003c\u003d list.size(); i++) {","lastModifiedDate":"2024-01-24"},{"lineNumber":74,"author":{"gitId":"Colex2000"},"content":"                    Task item \u003d list.get(i-1);","lastModifiedDate":"2024-01-24"},{"lineNumber":75,"author":{"gitId":"Colex2000"},"content":"                    System.out.println(\"\\t\" + i + \".\" + item.toString());","lastModifiedDate":"2024-01-24"},{"lineNumber":76,"author":{"gitId":"Colex2000"},"content":"                }","lastModifiedDate":"2024-01-24"},{"lineNumber":77,"author":{"gitId":"Colex2000"},"content":"                printDivider();","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"Colex2000"},"content":"                System.out.println(\"Anything else? Please let me know: \");","lastModifiedDate":"2024-01-24"},{"lineNumber":79,"author":{"gitId":"Colex2000"},"content":"                input \u003d sc.nextLine();","lastModifiedDate":"2024-01-24"},{"lineNumber":80,"author":{"gitId":"Colex2000"},"content":"            } else if (input.split(\" \",2)[0].equalsIgnoreCase(\"unmark\")) {","lastModifiedDate":"2024-01-24"},{"lineNumber":81,"author":{"gitId":"Colex2000"},"content":"                int num \u003d Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2024-01-24"},{"lineNumber":82,"author":{"gitId":"Colex2000"},"content":"                if (num \u003c 1 | num \u003e list.size()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"Colex2000"},"content":"                    System.out.println(\"Please provide valid integer within 1 to \" + list.size());","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"Colex2000"},"content":"                } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"Colex2000"},"content":"                    try {","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"Colex2000"},"content":"                        Task item \u003d list.get(num-1);","lastModifiedDate":"2024-01-24"},{"lineNumber":87,"author":{"gitId":"Colex2000"},"content":"                        if (item.getStatusIcon().equals(\"X\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"Colex2000"},"content":"                            item.markNotDone();","lastModifiedDate":"2024-01-24"},{"lineNumber":89,"author":{"gitId":"Colex2000"},"content":"                            printDivider();","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"Colex2000"},"content":"                            System.out.println(\"Sure Master, I\u0027ve marked this task as not done :\");","lastModifiedDate":"2024-01-24"},{"lineNumber":91,"author":{"gitId":"Colex2000"},"content":"                            System.out.println(item);","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"Colex2000"},"content":"                            reWriteFile(taskFilePath, num);","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"Colex2000"},"content":"                            printDivider();","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"Colex2000"},"content":"                            System.out.println(\"Anything else? Please let me know: \");","lastModifiedDate":"2024-01-24"},{"lineNumber":95,"author":{"gitId":"Colex2000"},"content":"                        } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"Colex2000"},"content":"                            System.out.println(\"Oops! Task already NOT done!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"Colex2000"},"content":"                        }","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"Colex2000"},"content":"                    } catch (NumberFormatException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-24"},{"lineNumber":99,"author":{"gitId":"Colex2000"},"content":"                        System.out.println(e + \". Please provide valid integer.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":100,"author":{"gitId":"Colex2000"},"content":"                    } ","lastModifiedDate":"2024-01-24"},{"lineNumber":101,"author":{"gitId":"Colex2000"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":102,"author":{"gitId":"Colex2000"},"content":"                input \u003d sc.nextLine();","lastModifiedDate":"2024-02-01"},{"lineNumber":103,"author":{"gitId":"Colex2000"},"content":"            } else if (input.split(\" \",2)[0].equalsIgnoreCase(\"mark\")) {","lastModifiedDate":"2024-01-24"},{"lineNumber":104,"author":{"gitId":"Colex2000"},"content":"                int num \u003d Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2024-01-24"},{"lineNumber":105,"author":{"gitId":"Colex2000"},"content":"                if (num \u003c 1 | num \u003e list.size()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":106,"author":{"gitId":"Colex2000"},"content":"                    System.out.println(\"Please provide valid integer within 1 to \" + list.size());","lastModifiedDate":"2024-02-01"},{"lineNumber":107,"author":{"gitId":"Colex2000"},"content":"                } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":108,"author":{"gitId":"Colex2000"},"content":"                    try {","lastModifiedDate":"2024-02-01"},{"lineNumber":109,"author":{"gitId":"Colex2000"},"content":"                        Task item \u003d list.get(num-1);","lastModifiedDate":"2024-01-24"},{"lineNumber":110,"author":{"gitId":"Colex2000"},"content":"                        if (item.getStatusIcon().equals(\" \")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":111,"author":{"gitId":"Colex2000"},"content":"                            item.markDone();","lastModifiedDate":"2024-01-24"},{"lineNumber":112,"author":{"gitId":"Colex2000"},"content":"                            printDivider();","lastModifiedDate":"2024-02-01"},{"lineNumber":113,"author":{"gitId":"Colex2000"},"content":"                            System.out.println(\"Sure Master, I\u0027ve marked this task as done :\");","lastModifiedDate":"2024-01-24"},{"lineNumber":114,"author":{"gitId":"Colex2000"},"content":"                            System.out.println(item);","lastModifiedDate":"2024-02-01"},{"lineNumber":115,"author":{"gitId":"Colex2000"},"content":"                            reWriteFile(taskFilePath, num);","lastModifiedDate":"2024-02-01"},{"lineNumber":116,"author":{"gitId":"Colex2000"},"content":"                            printDivider();","lastModifiedDate":"2024-02-01"},{"lineNumber":117,"author":{"gitId":"Colex2000"},"content":"                            System.out.println(\"Anything else? Please let me know: \");","lastModifiedDate":"2024-01-24"},{"lineNumber":118,"author":{"gitId":"Colex2000"},"content":"                        } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":119,"author":{"gitId":"Colex2000"},"content":"                            System.out.println(\"Oops! Task already done!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":120,"author":{"gitId":"Colex2000"},"content":"                        }","lastModifiedDate":"2024-02-01"},{"lineNumber":121,"author":{"gitId":"Colex2000"},"content":"                    } catch (NumberFormatException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-24"},{"lineNumber":122,"author":{"gitId":"Colex2000"},"content":"                        System.out.println(e + \". Please provide valid integer.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":123,"author":{"gitId":"Colex2000"},"content":"                    } ","lastModifiedDate":"2024-01-24"},{"lineNumber":124,"author":{"gitId":"Colex2000"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":125,"author":{"gitId":"Colex2000"},"content":"                input \u003d sc.nextLine();","lastModifiedDate":"2024-02-01"},{"lineNumber":126,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":127,"author":{"gitId":"Colex2000"},"content":"            } else if (input.split(\" \",2)[0].equalsIgnoreCase(\"deadline\")) {","lastModifiedDate":"2024-01-24"},{"lineNumber":128,"author":{"gitId":"Colex2000"},"content":"                try {","lastModifiedDate":"2024-01-24"},{"lineNumber":129,"author":{"gitId":"Colex2000"},"content":"                    String[] parts \u003d input.split(\" \",2);","lastModifiedDate":"2024-01-24"},{"lineNumber":130,"author":{"gitId":"Colex2000"},"content":"                    if (parts.length \u003c 2) {","lastModifiedDate":"2024-01-24"},{"lineNumber":131,"author":{"gitId":"Colex2000"},"content":"                        throw new EmptyDescriptionException(\"Description is EMPTY!\");","lastModifiedDate":"2024-01-24"},{"lineNumber":132,"author":{"gitId":"Colex2000"},"content":"                    }","lastModifiedDate":"2024-01-24"},{"lineNumber":133,"author":{"gitId":"Colex2000"},"content":"                    String deadline \u003d parts[1];","lastModifiedDate":"2024-01-24"},{"lineNumber":134,"author":{"gitId":"Colex2000"},"content":"                    String[] parts2 \u003d deadline.split(\"/by\");","lastModifiedDate":"2024-01-24"},{"lineNumber":135,"author":{"gitId":"Colex2000"},"content":"                    if (parts2.length \u003c 2) {","lastModifiedDate":"2024-01-24"},{"lineNumber":136,"author":{"gitId":"Colex2000"},"content":"                        throw new NoTimingException(\"WOI! Please include deadline!\");","lastModifiedDate":"2024-01-24"},{"lineNumber":137,"author":{"gitId":"Colex2000"},"content":"                    }","lastModifiedDate":"2024-01-24"},{"lineNumber":138,"author":{"gitId":"Colex2000"},"content":"                    String description \u003d parts2[0].trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":139,"author":{"gitId":"Colex2000"},"content":"                    String by \u003d parts2[1].trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":140,"author":{"gitId":"Colex2000"},"content":"                    Deadline item_deadline \u003d new Deadline(description, by);","lastModifiedDate":"2024-01-24"},{"lineNumber":141,"author":{"gitId":"Colex2000"},"content":"                    list.add(item_deadline);","lastModifiedDate":"2024-01-24"},{"lineNumber":142,"author":{"gitId":"Colex2000"},"content":"                    String stringToSave \u003d \"D | \" + (item_deadline.getStatusIcon().equals(\"X\") ? \"1\" : \"0\") + \" | \" + description + \" | \" + by + \"\\n\";","lastModifiedDate":"2024-02-01"},{"lineNumber":143,"author":{"gitId":"Colex2000"},"content":"                    // May produce IOException","lastModifiedDate":"2024-02-01"},{"lineNumber":144,"author":{"gitId":"Colex2000"},"content":"                    writeToFile(taskFilePath, stringToSave);","lastModifiedDate":"2024-02-01"},{"lineNumber":145,"author":{"gitId":"Colex2000"},"content":"                    printDivider();","lastModifiedDate":"2024-02-01"},{"lineNumber":146,"author":{"gitId":"Colex2000"},"content":"                    System.out.println(\"Yes Master, I\u0027ve added this task: \");","lastModifiedDate":"2024-01-24"},{"lineNumber":147,"author":{"gitId":"Colex2000"},"content":"                    System.out.println(item_deadline);","lastModifiedDate":"2024-02-01"},{"lineNumber":148,"author":{"gitId":"Colex2000"},"content":"                    System.out.println(\"Now you have \" + list.size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":149,"author":{"gitId":"Colex2000"},"content":"                    printDivider();","lastModifiedDate":"2024-02-01"},{"lineNumber":150,"author":{"gitId":"Colex2000"},"content":"                    System.out.println(\"Anything else? Please let me know: \");","lastModifiedDate":"2024-01-24"},{"lineNumber":151,"author":{"gitId":"Colex2000"},"content":"                } catch (NoTimingException | EmptyDescriptionException | IOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":152,"author":{"gitId":"Colex2000"},"content":"                    System.out.println(\"Error -\u003e \" + e);","lastModifiedDate":"2024-01-24"},{"lineNumber":153,"author":{"gitId":"Colex2000"},"content":"                } finally {","lastModifiedDate":"2024-01-24"},{"lineNumber":154,"author":{"gitId":"Colex2000"},"content":"                    input \u003d sc.nextLine();","lastModifiedDate":"2024-01-24"},{"lineNumber":155,"author":{"gitId":"Colex2000"},"content":"                }","lastModifiedDate":"2024-01-24"},{"lineNumber":156,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":157,"author":{"gitId":"Colex2000"},"content":"            } else if (input.split(\" \",2)[0].equalsIgnoreCase(\"todo\")) {","lastModifiedDate":"2024-01-24"},{"lineNumber":158,"author":{"gitId":"Colex2000"},"content":"                try {","lastModifiedDate":"2024-01-24"},{"lineNumber":159,"author":{"gitId":"Colex2000"},"content":"                    String[] parts \u003d input.split(\" \",2);","lastModifiedDate":"2024-01-24"},{"lineNumber":160,"author":{"gitId":"Colex2000"},"content":"                    if (parts.length \u003c 2) {","lastModifiedDate":"2024-01-24"},{"lineNumber":161,"author":{"gitId":"Colex2000"},"content":"                        throw new EmptyDescriptionException(\"Description is EMPTY!\");","lastModifiedDate":"2024-01-24"},{"lineNumber":162,"author":{"gitId":"Colex2000"},"content":"                    }","lastModifiedDate":"2024-01-24"},{"lineNumber":163,"author":{"gitId":"Colex2000"},"content":"                    String toDo \u003d parts[1];","lastModifiedDate":"2024-01-24"},{"lineNumber":164,"author":{"gitId":"Colex2000"},"content":"                    Todo item_toDo \u003d new Todo(toDo);","lastModifiedDate":"2024-01-24"},{"lineNumber":165,"author":{"gitId":"Colex2000"},"content":"                    list.add(item_toDo);","lastModifiedDate":"2024-01-24"},{"lineNumber":166,"author":{"gitId":"Colex2000"},"content":"                    String stringToSave \u003d \"T | \" + (item_toDo.getStatusIcon().equals(\"X\") ? \"1\" : \"0\") + \" | \" + toDo +\"\\n\";","lastModifiedDate":"2024-02-01"},{"lineNumber":167,"author":{"gitId":"Colex2000"},"content":"                    // May produce IOException","lastModifiedDate":"2024-02-01"},{"lineNumber":168,"author":{"gitId":"Colex2000"},"content":"                    writeToFile(taskFilePath, stringToSave);","lastModifiedDate":"2024-02-01"},{"lineNumber":169,"author":{"gitId":"Colex2000"},"content":"                    printDivider();","lastModifiedDate":"2024-02-01"},{"lineNumber":170,"author":{"gitId":"Colex2000"},"content":"                    System.out.println(\"Yes Master, I\u0027ve added this task: \");","lastModifiedDate":"2024-01-24"},{"lineNumber":171,"author":{"gitId":"Colex2000"},"content":"                    System.out.println(item_toDo);","lastModifiedDate":"2024-02-01"},{"lineNumber":172,"author":{"gitId":"Colex2000"},"content":"                    System.out.println(\"Now you have \" + list.size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":173,"author":{"gitId":"Colex2000"},"content":"                    printDivider();","lastModifiedDate":"2024-02-01"},{"lineNumber":174,"author":{"gitId":"Colex2000"},"content":"                    System.out.println(\"Anything else? Please let me know: \");","lastModifiedDate":"2024-01-24"},{"lineNumber":175,"author":{"gitId":"Colex2000"},"content":"                } catch (EmptyDescriptionException | IOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":176,"author":{"gitId":"Colex2000"},"content":"                    System.out.println(\"Error -\u003e \" + e);","lastModifiedDate":"2024-01-24"},{"lineNumber":177,"author":{"gitId":"Colex2000"},"content":"                } finally {","lastModifiedDate":"2024-01-24"},{"lineNumber":178,"author":{"gitId":"Colex2000"},"content":"                    input \u003d sc.nextLine();","lastModifiedDate":"2024-01-24"},{"lineNumber":179,"author":{"gitId":"Colex2000"},"content":"                }","lastModifiedDate":"2024-01-24"},{"lineNumber":180,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":181,"author":{"gitId":"Colex2000"},"content":"            } else if (input.split(\" \",2)[0].equalsIgnoreCase(\"event\")) {","lastModifiedDate":"2024-01-24"},{"lineNumber":182,"author":{"gitId":"Colex2000"},"content":"                try {","lastModifiedDate":"2024-01-24"},{"lineNumber":183,"author":{"gitId":"Colex2000"},"content":"                    String[] parts \u003d input.split(\" \",2);","lastModifiedDate":"2024-01-24"},{"lineNumber":184,"author":{"gitId":"Colex2000"},"content":"                    if (parts.length \u003c 2) {","lastModifiedDate":"2024-01-24"},{"lineNumber":185,"author":{"gitId":"Colex2000"},"content":"                        throw new EmptyDescriptionException(\"Description is EMPTY!\");","lastModifiedDate":"2024-01-24"},{"lineNumber":186,"author":{"gitId":"Colex2000"},"content":"                    }","lastModifiedDate":"2024-01-24"},{"lineNumber":187,"author":{"gitId":"Colex2000"},"content":"                    String description_date \u003d parts[1];","lastModifiedDate":"2024-01-24"},{"lineNumber":188,"author":{"gitId":"Colex2000"},"content":"                    String[] parts2 \u003d description_date.split(\"/from \");","lastModifiedDate":"2024-01-24"},{"lineNumber":189,"author":{"gitId":"Colex2000"},"content":"                    if (parts2.length \u003c 2) {","lastModifiedDate":"2024-01-24"},{"lineNumber":190,"author":{"gitId":"Colex2000"},"content":"                        throw new NoTimingException(\"WOI! Please include deadline!\");","lastModifiedDate":"2024-01-24"},{"lineNumber":191,"author":{"gitId":"Colex2000"},"content":"                    }","lastModifiedDate":"2024-01-24"},{"lineNumber":192,"author":{"gitId":"Colex2000"},"content":"                    String[] details \u003d parts2[1].split(\"/to \");","lastModifiedDate":"2024-01-24"},{"lineNumber":193,"author":{"gitId":"Colex2000"},"content":"                    String description \u003d parts2[0].trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":194,"author":{"gitId":"Colex2000"},"content":"                    String from \u003d details[0].trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":195,"author":{"gitId":"Colex2000"},"content":"                    String to \u003d details[1].trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":196,"author":{"gitId":"Colex2000"},"content":"                    Event item_event \u003d new Event(description, from, to);","lastModifiedDate":"2024-01-24"},{"lineNumber":197,"author":{"gitId":"Colex2000"},"content":"                    list.add(item_event);","lastModifiedDate":"2024-01-24"},{"lineNumber":198,"author":{"gitId":"Colex2000"},"content":"                    String stringToSave \u003d \"E | \" + (item_event.getStatusIcon().equals(\"X\") ? \"1\" : \"0\") + \" | \" + description + \" | \" + from + \" | \" + to + \"\\n\";","lastModifiedDate":"2024-02-01"},{"lineNumber":199,"author":{"gitId":"Colex2000"},"content":"                    // May produce IOException","lastModifiedDate":"2024-02-01"},{"lineNumber":200,"author":{"gitId":"Colex2000"},"content":"                    writeToFile(taskFilePath, stringToSave);","lastModifiedDate":"2024-02-01"},{"lineNumber":201,"author":{"gitId":"Colex2000"},"content":"                    printDivider();","lastModifiedDate":"2024-02-01"},{"lineNumber":202,"author":{"gitId":"Colex2000"},"content":"                    System.out.println(\"Yes Master, I\u0027ve added this task: \");","lastModifiedDate":"2024-01-24"},{"lineNumber":203,"author":{"gitId":"Colex2000"},"content":"                    System.out.println(item_event);","lastModifiedDate":"2024-02-01"},{"lineNumber":204,"author":{"gitId":"Colex2000"},"content":"                    System.out.println(\"Now you have \" + list.size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":205,"author":{"gitId":"Colex2000"},"content":"                    printDivider();","lastModifiedDate":"2024-02-01"},{"lineNumber":206,"author":{"gitId":"Colex2000"},"content":"                    System.out.println(\"Anything else? Please let me know: \");","lastModifiedDate":"2024-01-24"},{"lineNumber":207,"author":{"gitId":"Colex2000"},"content":"                } catch (NoTimingException | EmptyDescriptionException | IOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":208,"author":{"gitId":"Colex2000"},"content":"                    System.out.println(\"Error -\u003e \" + e);","lastModifiedDate":"2024-01-24"},{"lineNumber":209,"author":{"gitId":"Colex2000"},"content":"                } finally {","lastModifiedDate":"2024-01-24"},{"lineNumber":210,"author":{"gitId":"Colex2000"},"content":"                    input \u003d sc.nextLine();","lastModifiedDate":"2024-01-24"},{"lineNumber":211,"author":{"gitId":"Colex2000"},"content":"                }","lastModifiedDate":"2024-01-24"},{"lineNumber":212,"author":{"gitId":"Colex2000"},"content":"            } else if (input.split(\" \",2)[0].equalsIgnoreCase(\"delete\")) {","lastModifiedDate":"2024-01-24"},{"lineNumber":213,"author":{"gitId":"Colex2000"},"content":"                try {","lastModifiedDate":"2024-01-24"},{"lineNumber":214,"author":{"gitId":"Colex2000"},"content":"                    String[] parts \u003d input.split(\" \");","lastModifiedDate":"2024-01-24"},{"lineNumber":215,"author":{"gitId":"Colex2000"},"content":"                    if (parts.length \u003c 2) {","lastModifiedDate":"2024-01-24"},{"lineNumber":216,"author":{"gitId":"Colex2000"},"content":"                        throw new EmptyDescriptionException(\"You did not specify an number!\");","lastModifiedDate":"2024-01-24"},{"lineNumber":217,"author":{"gitId":"Colex2000"},"content":"                    }","lastModifiedDate":"2024-01-24"},{"lineNumber":218,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":219,"author":{"gitId":"Colex2000"},"content":"                    printDivider();","lastModifiedDate":"2024-02-01"},{"lineNumber":220,"author":{"gitId":"Colex2000"},"content":"                    System.out.println(\"Noted Master. I\u0027ve removed this task:\");","lastModifiedDate":"2024-01-24"},{"lineNumber":221,"author":{"gitId":"Colex2000"},"content":"                    System.out.println(list.get(Integer.parseInt(parts[1]) - 1).toString());","lastModifiedDate":"2024-01-24"},{"lineNumber":222,"author":{"gitId":"Colex2000"},"content":"                    list.remove(Integer.parseInt(parts[1]) - 1);","lastModifiedDate":"2024-01-24"},{"lineNumber":223,"author":{"gitId":"Colex2000"},"content":"                    System.out.println(\"Now you have \" + list.size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":224,"author":{"gitId":"Colex2000"},"content":"                    printDivider();","lastModifiedDate":"2024-02-01"},{"lineNumber":225,"author":{"gitId":"Colex2000"},"content":"                    System.out.println(\"Anything else? Please let me know: \");","lastModifiedDate":"2024-01-24"},{"lineNumber":226,"author":{"gitId":"Colex2000"},"content":"                } catch (EmptyDescriptionException e) {","lastModifiedDate":"2024-01-24"},{"lineNumber":227,"author":{"gitId":"Colex2000"},"content":"                    System.out.println(\"Error -\u003e e\");","lastModifiedDate":"2024-01-24"},{"lineNumber":228,"author":{"gitId":"Colex2000"},"content":"                } finally {","lastModifiedDate":"2024-01-24"},{"lineNumber":229,"author":{"gitId":"Colex2000"},"content":"                    input \u003d sc.nextLine();","lastModifiedDate":"2024-01-24"},{"lineNumber":230,"author":{"gitId":"Colex2000"},"content":"                }","lastModifiedDate":"2024-01-24"},{"lineNumber":231,"author":{"gitId":"Colex2000"},"content":"            } else {","lastModifiedDate":"2024-01-24"},{"lineNumber":232,"author":{"gitId":"Colex2000"},"content":"                printDivider();","lastModifiedDate":"2024-02-01"},{"lineNumber":233,"author":{"gitId":"Colex2000"},"content":"                System.out.println(\"OOPS! Looks like you have entered an invalid command! Try again.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":234,"author":{"gitId":"Colex2000"},"content":"                printDivider();","lastModifiedDate":"2024-02-01"},{"lineNumber":235,"author":{"gitId":"Colex2000"},"content":"                input \u003d sc.nextLine();","lastModifiedDate":"2024-01-24"},{"lineNumber":236,"author":{"gitId":"Colex2000"},"content":"            }","lastModifiedDate":"2024-01-24"},{"lineNumber":237,"author":{"gitId":"Colex2000"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":238,"author":{"gitId":"Colex2000"},"content":"        System.out.println(\"Entered: \u0027\" + input + \"\u0027\");","lastModifiedDate":"2024-01-24"},{"lineNumber":239,"author":{"gitId":"Colex2000"},"content":"        printDivider();","lastModifiedDate":"2024-02-01"},{"lineNumber":240,"author":{"gitId":"Colex2000"},"content":"        System.out.println(\"Bye Master, hope you had a great time, see you!\");","lastModifiedDate":"2024-01-24"},{"lineNumber":241,"author":{"gitId":"Colex2000"},"content":"        printDivider();","lastModifiedDate":"2024-02-01"},{"lineNumber":242,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":243,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":244,"author":{"gitId":"Colex2000"},"content":"    private static void writeToFile(String filePath, String textToAdd) throws IOException {","lastModifiedDate":"2024-02-01"},{"lineNumber":245,"author":{"gitId":"Colex2000"},"content":"        FileWriter fw \u003d new FileWriter(filePath, true);","lastModifiedDate":"2024-02-01"},{"lineNumber":246,"author":{"gitId":"Colex2000"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2024-02-01"},{"lineNumber":247,"author":{"gitId":"Colex2000"},"content":"        fw.close();","lastModifiedDate":"2024-02-01"},{"lineNumber":248,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":249,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":250,"author":{"gitId":"Colex2000"},"content":"    private static void reWriteFile(String filePath, int lineToEdit) {","lastModifiedDate":"2024-02-01"},{"lineNumber":251,"author":{"gitId":"Colex2000"},"content":"        Path path \u003d Paths.get(filePath);","lastModifiedDate":"2024-02-01"},{"lineNumber":252,"author":{"gitId":"Colex2000"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":253,"author":{"gitId":"Colex2000"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(filePath));","lastModifiedDate":"2024-02-01"},{"lineNumber":254,"author":{"gitId":"Colex2000"},"content":"            String currentLineContent;","lastModifiedDate":"2024-02-01"},{"lineNumber":255,"author":{"gitId":"Colex2000"},"content":"            int currentLineNum \u003d 0;","lastModifiedDate":"2024-02-01"},{"lineNumber":256,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":257,"author":{"gitId":"Colex2000"},"content":"            while ((currentLineContent \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2024-02-01"},{"lineNumber":258,"author":{"gitId":"Colex2000"},"content":"                currentLineNum++;","lastModifiedDate":"2024-02-01"},{"lineNumber":259,"author":{"gitId":"Colex2000"},"content":"                if (currentLineNum \u003d\u003d lineToEdit) break;","lastModifiedDate":"2024-02-01"},{"lineNumber":260,"author":{"gitId":"Colex2000"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":261,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":262,"author":{"gitId":"Colex2000"},"content":"            assert currentLineContent !\u003d null;","lastModifiedDate":"2024-02-01"},{"lineNumber":263,"author":{"gitId":"Colex2000"},"content":"            String[] partsOfString \u003d currentLineContent.split(\"\\\\|\");","lastModifiedDate":"2024-02-01"},{"lineNumber":264,"author":{"gitId":"Colex2000"},"content":"            partsOfString[1] \u003d partsOfString[1].trim().equals(\"1\") ? \" 0 \" : \" 1 \";","lastModifiedDate":"2024-02-01"},{"lineNumber":265,"author":{"gitId":"Colex2000"},"content":"            String newContent \u003d String.join(\"|\", partsOfString);","lastModifiedDate":"2024-02-01"},{"lineNumber":266,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":267,"author":{"gitId":"Colex2000"},"content":"            // Read all lines from the file","lastModifiedDate":"2024-02-01"},{"lineNumber":268,"author":{"gitId":"Colex2000"},"content":"            List\u003cString\u003e lines \u003d Files.readAllLines(path);","lastModifiedDate":"2024-02-01"},{"lineNumber":269,"author":{"gitId":"Colex2000"},"content":"    ","lastModifiedDate":"2024-02-01"},{"lineNumber":270,"author":{"gitId":"Colex2000"},"content":"            // Check if the line to edit is within the file\u0027s line count","lastModifiedDate":"2024-02-01"},{"lineNumber":271,"author":{"gitId":"Colex2000"},"content":"            if (lineToEdit \u003c\u003d lines.size()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":272,"author":{"gitId":"Colex2000"},"content":"                // Modify the specific line (adjust for 0-based index)","lastModifiedDate":"2024-02-01"},{"lineNumber":273,"author":{"gitId":"Colex2000"},"content":"                lines.set(lineToEdit - 1, newContent);","lastModifiedDate":"2024-02-01"},{"lineNumber":274,"author":{"gitId":"Colex2000"},"content":"            } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":275,"author":{"gitId":"Colex2000"},"content":"                System.out.println(\"The line number to edit is beyond the file\u0027s line count.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":276,"author":{"gitId":"Colex2000"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":277,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":278,"author":{"gitId":"Colex2000"},"content":"            Files.write(path, lines);","lastModifiedDate":"2024-02-01"},{"lineNumber":279,"author":{"gitId":"Colex2000"},"content":"            reader.close();","lastModifiedDate":"2024-02-01"},{"lineNumber":280,"author":{"gitId":"Colex2000"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":281,"author":{"gitId":"Colex2000"},"content":"            System.err.println(\"An error occurred.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":282,"author":{"gitId":"Colex2000"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-01"},{"lineNumber":283,"author":{"gitId":"Colex2000"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":284,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":285,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":286,"author":{"gitId":"Colex2000"},"content":"    private static void printDivider() {","lastModifiedDate":"2024-02-01"},{"lineNumber":287,"author":{"gitId":"Colex2000"},"content":"        System.out.println(\"--------------------------------------------------------\");","lastModifiedDate":"2024-01-24"},{"lineNumber":288,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":289,"author":{"gitId":"Colex2000"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"Colex2000":289}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"Colex2000"},"content":"        System.out.println(\"Hello Master, I\u0027m Demon 👿\\nWhat can I do for you today?\");","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"Colex2000"},"content":"        System.out.println(\"--------------------------------------------------------\");","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"Colex2000"},"content":"        System.out.println(\"Bye Master, hope you had a great time, see you ♥!\");","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"Colex2000"},"content":"        System.out.println(\"--------------------------------------------------------\");","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Colex2000":4,"-":4}},{"path":"src/main/java/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Colex2000"},"content":"public class EmptyDescriptionException extends Exception {","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"Colex2000"},"content":"    public EmptyDescriptionException(String msg) {","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"Colex2000"},"content":"        super(msg);","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"Colex2000"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"Colex2000":6}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Colex2000"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"Colex2000"},"content":"    protected String from;","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"Colex2000"},"content":"    protected String to;","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"Colex2000"},"content":"    public Event(String description, String from, String to){","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"Colex2000"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"Colex2000"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"Colex2000"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"Colex2000"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"Colex2000"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"Colex2000"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"Colex2000"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"Colex2000":16}},{"path":"src/main/java/NoTimingException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Colex2000"},"content":"public class NoTimingException extends Exception {","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"Colex2000"},"content":"    public NoTimingException(String msg) {","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"Colex2000"},"content":"        super(msg);","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"Colex2000"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"Colex2000":6}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Colex2000"},"content":"public class Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"Colex2000"},"content":"    protected String description;","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"Colex2000"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"Colex2000"},"content":"    public Task(String description){","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"Colex2000"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"Colex2000"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"Colex2000"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"Colex2000"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"Colex2000"},"content":"    public void markDone() {","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"Colex2000"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"Colex2000"},"content":"    public void markNotDone() {","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"Colex2000"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"Colex2000"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"Colex2000"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"Colex2000"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"Colex2000":24}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Colex2000"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"Colex2000"},"content":"    public Todo(String description){","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"Colex2000"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"Colex2000"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"Colex2000"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"Colex2000"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"Colex2000"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"Colex2000":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Colex2000"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"Colex2000"},"content":"todo sleep","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"Colex2000"},"content":"bye","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Colex2000":3}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Colex2000"},"content":"java -classpath ..\\bin Demon \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Colex2000":1,"-":20}}]
