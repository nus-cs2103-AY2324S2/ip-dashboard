[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"biinnnggggg"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"biinnnggggg"},"content":"}","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"biinnnggggg"},"content":"checkstyle {","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"biinnnggggg"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"biinnnggggg"},"content":"    mainClass.set(\"Main\")","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"biinnnggggg"},"content":"    archiveBaseName \u003d \"mike\"","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":44,"author":{"gitId":"biinnnggggg"},"content":"    archiveFileName \u003d \"mike.jar\"","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"biinnnggggg":9,"-":40}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"biinnnggggg"},"content":"import mike.Mike;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"biinnnggggg"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"biinnnggggg"},"content":" * Main class serves as an entry point for Mike.","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"biinnnggggg"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"biinnnggggg"},"content":"public class Main {","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"biinnnggggg"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"biinnnggggg"},"content":"     * Main method.","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"biinnnggggg"},"content":"     * @param args","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"biinnnggggg"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"biinnnggggg"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"biinnnggggg"},"content":"        Mike mike \u003d new Mike();","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"biinnnggggg"},"content":"        mike.run();","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"biinnnggggg"},"content":"        mike.end();","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"biinnnggggg"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"biinnnggggg":16}},{"path":"src/main/java/mike/CommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"biinnnggggg"},"content":"package mike;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"biinnnggggg"},"content":"import java.util.List;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"biinnnggggg"},"content":"import mike.command.AddDeadlineCommand;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"biinnnggggg"},"content":"import mike.command.AddEventCommand;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"biinnnggggg"},"content":"import mike.command.AddTodoCommand;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"biinnnggggg"},"content":"import mike.command.Command;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"biinnnggggg"},"content":"import mike.command.DeleteCommand;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"biinnnggggg"},"content":"import mike.command.ExitCommand;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"biinnnggggg"},"content":"import mike.command.FindCommand;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"biinnnggggg"},"content":"import mike.command.ListCommand;","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"biinnnggggg"},"content":"import mike.command.MarkCommand;","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"biinnnggggg"},"content":"import mike.command.UnmarkCommand;","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"biinnnggggg"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"biinnnggggg"},"content":" * CommandParser is the class responsible for parsing the command input and generating {@link Command} objects,","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"biinnnggggg"},"content":" * @author ningc","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"biinnnggggg"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"biinnnggggg"},"content":"class CommandParser {","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"biinnnggggg"},"content":"    private final List\u003cToken\u003e tokens;","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"biinnnggggg"},"content":"    private int current;","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"biinnnggggg"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"biinnnggggg"},"content":"     * Constructor.","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"biinnnggggg"},"content":"     * @param tokens List of tokens generated by {@link CommandScanner}.","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"biinnnggggg"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"biinnnggggg"},"content":"    CommandParser(List\u003cToken\u003e tokens) {","lastModifiedDate":"2024-01-26"},{"lineNumber":29,"author":{"gitId":"biinnnggggg"},"content":"        this.tokens \u003d tokens;","lastModifiedDate":"2024-01-26"},{"lineNumber":30,"author":{"gitId":"biinnnggggg"},"content":"        this.current \u003d 0;","lastModifiedDate":"2024-01-26"},{"lineNumber":31,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"biinnnggggg"},"content":"    /**","lastModifiedDate":"2024-01-26"},{"lineNumber":34,"author":{"gitId":"biinnnggggg"},"content":"     * Parses the token list to generate a Command object which is returned.","lastModifiedDate":"2024-01-26"},{"lineNumber":35,"author":{"gitId":"biinnnggggg"},"content":"     * @return Command that can be executed.","lastModifiedDate":"2024-01-26"},{"lineNumber":36,"author":{"gitId":"biinnnggggg"},"content":"     * @throws MikeException If there is no command input or the command is not recognized.","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"biinnnggggg"},"content":"     */","lastModifiedDate":"2024-01-26"},{"lineNumber":38,"author":{"gitId":"biinnnggggg"},"content":"    public Command parse() throws MikeException {","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"biinnnggggg"},"content":"        Token commandToken \u003d advance();","lastModifiedDate":"2024-01-26"},{"lineNumber":40,"author":{"gitId":"biinnnggggg"},"content":"        switch (commandToken.getType()) {","lastModifiedDate":"2024-01-26"},{"lineNumber":41,"author":{"gitId":"biinnnggggg"},"content":"        case EXIT:","lastModifiedDate":"2024-01-26"},{"lineNumber":42,"author":{"gitId":"biinnnggggg"},"content":"            return parseExit();","lastModifiedDate":"2024-01-26"},{"lineNumber":43,"author":{"gitId":"biinnnggggg"},"content":"        case LIST:","lastModifiedDate":"2024-01-26"},{"lineNumber":44,"author":{"gitId":"biinnnggggg"},"content":"            return parseList();","lastModifiedDate":"2024-01-26"},{"lineNumber":45,"author":{"gitId":"biinnnggggg"},"content":"        case MARK:","lastModifiedDate":"2024-01-26"},{"lineNumber":46,"author":{"gitId":"biinnnggggg"},"content":"            return parseMark();","lastModifiedDate":"2024-01-26"},{"lineNumber":47,"author":{"gitId":"biinnnggggg"},"content":"        case UNMARK:","lastModifiedDate":"2024-01-26"},{"lineNumber":48,"author":{"gitId":"biinnnggggg"},"content":"            return parseUnmark();","lastModifiedDate":"2024-01-26"},{"lineNumber":49,"author":{"gitId":"biinnnggggg"},"content":"        case TODO:","lastModifiedDate":"2024-01-26"},{"lineNumber":50,"author":{"gitId":"biinnnggggg"},"content":"            return parseTodo();","lastModifiedDate":"2024-01-26"},{"lineNumber":51,"author":{"gitId":"biinnnggggg"},"content":"        case DEADLINE:","lastModifiedDate":"2024-01-26"},{"lineNumber":52,"author":{"gitId":"biinnnggggg"},"content":"            return parseDeadline();","lastModifiedDate":"2024-01-26"},{"lineNumber":53,"author":{"gitId":"biinnnggggg"},"content":"        case EVENT:","lastModifiedDate":"2024-01-26"},{"lineNumber":54,"author":{"gitId":"biinnnggggg"},"content":"            return parseEvent();","lastModifiedDate":"2024-01-26"},{"lineNumber":55,"author":{"gitId":"biinnnggggg"},"content":"        case DELETE:","lastModifiedDate":"2024-01-26"},{"lineNumber":56,"author":{"gitId":"biinnnggggg"},"content":"            return parseDelete();","lastModifiedDate":"2024-01-26"},{"lineNumber":57,"author":{"gitId":"biinnnggggg"},"content":"        case FIND:","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"biinnnggggg"},"content":"            return parseFind();","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"biinnnggggg"},"content":"        case EOC:","lastModifiedDate":"2024-01-26"},{"lineNumber":60,"author":{"gitId":"biinnnggggg"},"content":"            throw error(\"Say something.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"biinnnggggg"},"content":"        default:","lastModifiedDate":"2024-01-26"},{"lineNumber":62,"author":{"gitId":"biinnnggggg"},"content":"            String errorMessage \u003d \"\u0027\" + commandToken.getText() + \"\u0027 is not recognized as a command.\\n\"","lastModifiedDate":"2024-01-26"},{"lineNumber":63,"author":{"gitId":"biinnnggggg"},"content":"                    + \"That is the weirdest thing you\u0027ve ever said.\";","lastModifiedDate":"2024-01-26"},{"lineNumber":64,"author":{"gitId":"biinnnggggg"},"content":"            throw error(errorMessage);","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":66,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":67,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":68,"author":{"gitId":"biinnnggggg"},"content":"    private Command parseExit() throws MikeException {","lastModifiedDate":"2024-01-26"},{"lineNumber":69,"author":{"gitId":"biinnnggggg"},"content":"        consume(TokenType.EOC, \"Usage: bye\");","lastModifiedDate":"2024-01-26"},{"lineNumber":70,"author":{"gitId":"biinnnggggg"},"content":"        return new ExitCommand();","lastModifiedDate":"2024-01-25"},{"lineNumber":71,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":72,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":73,"author":{"gitId":"biinnnggggg"},"content":"    private Command parseList() throws MikeException {","lastModifiedDate":"2024-01-25"},{"lineNumber":74,"author":{"gitId":"biinnnggggg"},"content":"        String usage \u003d \"Usage: list\";","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"biinnnggggg"},"content":"        if (match(TokenType.FORWARD_DASH) \u0026\u0026 match(TokenType.PARAM)) {","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"biinnnggggg"},"content":"            usage \u003d usage + \" /view [type] /attribute [attribute]\";","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"biinnnggggg"},"content":"            Token paramToken \u003d previousToken();","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"biinnnggggg"},"content":"            if (!paramToken.getText().equals(\"view\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"biinnnggggg"},"content":"                throw error(usage);","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"biinnnggggg"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"biinnnggggg"},"content":"            consume(TokenType.LITERAL, usage);","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"biinnnggggg"},"content":"            String type \u003d previousToken().getText().strip();","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"biinnnggggg"},"content":"            ListViewType listViewType;","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"biinnnggggg"},"content":"            switch (type) {","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"biinnnggggg"},"content":"            case \"date\":","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"biinnnggggg"},"content":"                listViewType \u003d ListViewType.DATE;","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"biinnnggggg"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"biinnnggggg"},"content":"            case \"description\":","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"biinnnggggg"},"content":"                listViewType \u003d ListViewType.DESCRIPTION;","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"biinnnggggg"},"content":"                break;","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"biinnnggggg"},"content":"            default:","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"biinnnggggg"},"content":"                throw error(\"Invalid type\");","lastModifiedDate":"2024-01-31"},{"lineNumber":95,"author":{"gitId":"biinnnggggg"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"biinnnggggg"},"content":"            consume(TokenType.FORWARD_DASH, usage);","lastModifiedDate":"2024-01-31"},{"lineNumber":98,"author":{"gitId":"biinnnggggg"},"content":"            consume(TokenType.PARAM, usage);","lastModifiedDate":"2024-01-31"},{"lineNumber":99,"author":{"gitId":"biinnnggggg"},"content":"            paramToken \u003d previousToken();","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"biinnnggggg"},"content":"            if (!paramToken.getText().equals(\"attribute\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":101,"author":{"gitId":"biinnnggggg"},"content":"                throw error(usage);","lastModifiedDate":"2024-01-31"},{"lineNumber":102,"author":{"gitId":"biinnnggggg"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":103,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":104,"author":{"gitId":"biinnnggggg"},"content":"            consume(TokenType.LITERAL, usage);","lastModifiedDate":"2024-01-31"},{"lineNumber":105,"author":{"gitId":"biinnnggggg"},"content":"            String attribute \u003d previousToken().getText();","lastModifiedDate":"2024-01-31"},{"lineNumber":106,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":107,"author":{"gitId":"biinnnggggg"},"content":"            consume(TokenType.EOC, usage);","lastModifiedDate":"2024-01-31"},{"lineNumber":108,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":109,"author":{"gitId":"biinnnggggg"},"content":"            ListView listView \u003d new ListView(listViewType, attribute);","lastModifiedDate":"2024-01-31"},{"lineNumber":110,"author":{"gitId":"biinnnggggg"},"content":"            return new ListCommand(listView);","lastModifiedDate":"2024-01-31"},{"lineNumber":111,"author":{"gitId":"biinnnggggg"},"content":"        } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":112,"author":{"gitId":"biinnnggggg"},"content":"            consume(TokenType.EOC, \"Usage: list\");","lastModifiedDate":"2024-01-26"},{"lineNumber":113,"author":{"gitId":"biinnnggggg"},"content":"            return new ListCommand(new ListView(ListViewType.NONE));","lastModifiedDate":"2024-01-31"},{"lineNumber":114,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":115,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":116,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":117,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":118,"author":{"gitId":"biinnnggggg"},"content":"    private Command parseMark() throws MikeException {","lastModifiedDate":"2024-01-25"},{"lineNumber":119,"author":{"gitId":"biinnnggggg"},"content":"        String usage \u003d \"Usage: mark [number]\";","lastModifiedDate":"2024-01-26"},{"lineNumber":120,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":121,"author":{"gitId":"biinnnggggg"},"content":"        consume(TokenType.LITERAL, usage);","lastModifiedDate":"2024-01-26"},{"lineNumber":122,"author":{"gitId":"biinnnggggg"},"content":"        String argument \u003d previousToken().getText();","lastModifiedDate":"2024-01-26"},{"lineNumber":123,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":124,"author":{"gitId":"biinnnggggg"},"content":"        consume(TokenType.EOC, usage);","lastModifiedDate":"2024-01-26"},{"lineNumber":125,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":126,"author":{"gitId":"biinnnggggg"},"content":"        try {","lastModifiedDate":"2024-01-25"},{"lineNumber":127,"author":{"gitId":"biinnnggggg"},"content":"            int taskNumber \u003d Integer.parseInt(argument);","lastModifiedDate":"2024-01-25"},{"lineNumber":128,"author":{"gitId":"biinnnggggg"},"content":"            return new MarkCommand(taskNumber);","lastModifiedDate":"2024-01-25"},{"lineNumber":129,"author":{"gitId":"biinnnggggg"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":130,"author":{"gitId":"biinnnggggg"},"content":"            String errorMessage \u003d \"One, two, three, four, get the kid back through the door!\\n\u0027\"","lastModifiedDate":"2024-02-11"},{"lineNumber":131,"author":{"gitId":"biinnnggggg"},"content":"                    + argument + \"\u0027 is not an integer Sulley...\";","lastModifiedDate":"2024-02-11"},{"lineNumber":132,"author":{"gitId":"biinnnggggg"},"content":"            throw error(errorMessage);","lastModifiedDate":"2024-01-31"},{"lineNumber":133,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":134,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":135,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":136,"author":{"gitId":"biinnnggggg"},"content":"    private Command parseUnmark() throws MikeException {","lastModifiedDate":"2024-01-25"},{"lineNumber":137,"author":{"gitId":"biinnnggggg"},"content":"        String usage \u003d \"Usage: unmark [number]\";","lastModifiedDate":"2024-01-26"},{"lineNumber":138,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":139,"author":{"gitId":"biinnnggggg"},"content":"        consume(TokenType.LITERAL, usage);","lastModifiedDate":"2024-01-26"},{"lineNumber":140,"author":{"gitId":"biinnnggggg"},"content":"        String argument \u003d previousToken().getText();","lastModifiedDate":"2024-01-26"},{"lineNumber":141,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":142,"author":{"gitId":"biinnnggggg"},"content":"        consume(TokenType.EOC, usage);","lastModifiedDate":"2024-01-26"},{"lineNumber":143,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":144,"author":{"gitId":"biinnnggggg"},"content":"        try {","lastModifiedDate":"2024-01-25"},{"lineNumber":145,"author":{"gitId":"biinnnggggg"},"content":"            int taskNumber \u003d Integer.parseInt(argument);","lastModifiedDate":"2024-01-25"},{"lineNumber":146,"author":{"gitId":"biinnnggggg"},"content":"            return new UnmarkCommand(taskNumber);","lastModifiedDate":"2024-01-25"},{"lineNumber":147,"author":{"gitId":"biinnnggggg"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":148,"author":{"gitId":"biinnnggggg"},"content":"            String errorMessage \u003d \"One, two, three, four, get the kid back through the door!\\n\u0027\"","lastModifiedDate":"2024-02-11"},{"lineNumber":149,"author":{"gitId":"biinnnggggg"},"content":"                    + argument + \"\u0027 is not an integer Sulley...\";","lastModifiedDate":"2024-02-11"},{"lineNumber":150,"author":{"gitId":"biinnnggggg"},"content":"            throw error(errorMessage);","lastModifiedDate":"2024-01-31"},{"lineNumber":151,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":152,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":153,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":154,"author":{"gitId":"biinnnggggg"},"content":"    private Command parseTodo() throws MikeException {","lastModifiedDate":"2024-01-25"},{"lineNumber":155,"author":{"gitId":"biinnnggggg"},"content":"        String usage \u003d \"Usage: todo [description]\";","lastModifiedDate":"2024-01-26"},{"lineNumber":156,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":157,"author":{"gitId":"biinnnggggg"},"content":"        consume(TokenType.LITERAL, \"Description missing.\\n\" + usage);","lastModifiedDate":"2024-01-26"},{"lineNumber":158,"author":{"gitId":"biinnnggggg"},"content":"        String description \u003d previousToken().getText().strip();","lastModifiedDate":"2024-01-26"},{"lineNumber":159,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":160,"author":{"gitId":"biinnnggggg"},"content":"        consume(TokenType.EOC, usage);","lastModifiedDate":"2024-01-26"},{"lineNumber":161,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":162,"author":{"gitId":"biinnnggggg"},"content":"        return new AddTodoCommand(description);","lastModifiedDate":"2024-01-26"},{"lineNumber":163,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":164,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":165,"author":{"gitId":"biinnnggggg"},"content":"    private Command parseDeadline() throws MikeException {","lastModifiedDate":"2024-01-25"},{"lineNumber":166,"author":{"gitId":"biinnnggggg"},"content":"        String usage \u003d \"Usage: deadline [description] /by [date]\";","lastModifiedDate":"2024-01-26"},{"lineNumber":167,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":168,"author":{"gitId":"biinnnggggg"},"content":"        consume(TokenType.LITERAL, \"Description missing.\\n\" + usage);","lastModifiedDate":"2024-01-26"},{"lineNumber":169,"author":{"gitId":"biinnnggggg"},"content":"        String description \u003d previousToken().getText().strip();","lastModifiedDate":"2024-01-26"},{"lineNumber":170,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":171,"author":{"gitId":"biinnnggggg"},"content":"        consume(TokenType.FORWARD_DASH, usage);","lastModifiedDate":"2024-01-26"},{"lineNumber":172,"author":{"gitId":"biinnnggggg"},"content":"        consume(TokenType.PARAM, usage);","lastModifiedDate":"2024-01-26"},{"lineNumber":173,"author":{"gitId":"biinnnggggg"},"content":"        Token paramToken \u003d previousToken();","lastModifiedDate":"2024-01-26"},{"lineNumber":174,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":175,"author":{"gitId":"biinnnggggg"},"content":"        if (!paramToken.getText().equals(\"by\")) {","lastModifiedDate":"2024-01-26"},{"lineNumber":176,"author":{"gitId":"biinnnggggg"},"content":"            throw error(usage);","lastModifiedDate":"2024-01-26"},{"lineNumber":177,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":178,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":179,"author":{"gitId":"biinnnggggg"},"content":"        consume(TokenType.LITERAL, usage);","lastModifiedDate":"2024-01-26"},{"lineNumber":180,"author":{"gitId":"biinnnggggg"},"content":"        String deadline \u003d previousToken().getText().strip();","lastModifiedDate":"2024-01-26"},{"lineNumber":181,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":182,"author":{"gitId":"biinnnggggg"},"content":"        consume(TokenType.EOC, usage);","lastModifiedDate":"2024-01-26"},{"lineNumber":183,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":184,"author":{"gitId":"biinnnggggg"},"content":"        return new AddDeadlineCommand(description, deadline);","lastModifiedDate":"2024-01-26"},{"lineNumber":185,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":186,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":187,"author":{"gitId":"biinnnggggg"},"content":"    private Command parseEvent() throws MikeException {","lastModifiedDate":"2024-01-25"},{"lineNumber":188,"author":{"gitId":"biinnnggggg"},"content":"        String usage \u003d \"Usage: event [description] /from [date] /to [date]\";","lastModifiedDate":"2024-01-26"},{"lineNumber":189,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":190,"author":{"gitId":"biinnnggggg"},"content":"        consume(TokenType.LITERAL, \"Description missing.\\n\" + usage);","lastModifiedDate":"2024-01-26"},{"lineNumber":191,"author":{"gitId":"biinnnggggg"},"content":"        String description \u003d previousToken().getText().strip();","lastModifiedDate":"2024-01-26"},{"lineNumber":192,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":193,"author":{"gitId":"biinnnggggg"},"content":"        consume(TokenType.FORWARD_DASH, usage);","lastModifiedDate":"2024-01-26"},{"lineNumber":194,"author":{"gitId":"biinnnggggg"},"content":"        consume(TokenType.PARAM, usage);","lastModifiedDate":"2024-01-26"},{"lineNumber":195,"author":{"gitId":"biinnnggggg"},"content":"        Token paramToken \u003d previousToken();","lastModifiedDate":"2024-01-26"},{"lineNumber":196,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":197,"author":{"gitId":"biinnnggggg"},"content":"        if (!paramToken.getText().equals(\"from\")) {","lastModifiedDate":"2024-01-26"},{"lineNumber":198,"author":{"gitId":"biinnnggggg"},"content":"            throw error(usage);","lastModifiedDate":"2024-01-26"},{"lineNumber":199,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":200,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":201,"author":{"gitId":"biinnnggggg"},"content":"        consume(TokenType.LITERAL, \"Start date missing.\\n\" + usage);","lastModifiedDate":"2024-01-26"},{"lineNumber":202,"author":{"gitId":"biinnnggggg"},"content":"        String startDate \u003d previousToken().getText().strip();","lastModifiedDate":"2024-01-26"},{"lineNumber":203,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":204,"author":{"gitId":"biinnnggggg"},"content":"        consume(TokenType.FORWARD_DASH, usage);","lastModifiedDate":"2024-01-26"},{"lineNumber":205,"author":{"gitId":"biinnnggggg"},"content":"        consume(TokenType.PARAM, usage);","lastModifiedDate":"2024-01-26"},{"lineNumber":206,"author":{"gitId":"biinnnggggg"},"content":"        paramToken \u003d previousToken();","lastModifiedDate":"2024-01-26"},{"lineNumber":207,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":208,"author":{"gitId":"biinnnggggg"},"content":"        if (!paramToken.getText().equals(\"to\")) {","lastModifiedDate":"2024-01-26"},{"lineNumber":209,"author":{"gitId":"biinnnggggg"},"content":"            throw error(usage);","lastModifiedDate":"2024-01-26"},{"lineNumber":210,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":211,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":212,"author":{"gitId":"biinnnggggg"},"content":"        consume(TokenType.LITERAL, \"End date missing.\\n\" + usage);","lastModifiedDate":"2024-01-26"},{"lineNumber":213,"author":{"gitId":"biinnnggggg"},"content":"        String endDate \u003d previousToken().getText().strip();","lastModifiedDate":"2024-01-26"},{"lineNumber":214,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":215,"author":{"gitId":"biinnnggggg"},"content":"        consume(TokenType.EOC, usage);","lastModifiedDate":"2024-01-26"},{"lineNumber":216,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":217,"author":{"gitId":"biinnnggggg"},"content":"        return new AddEventCommand(description, startDate, endDate);","lastModifiedDate":"2024-01-26"},{"lineNumber":218,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":219,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":220,"author":{"gitId":"biinnnggggg"},"content":"    private Command parseDelete() throws MikeException {","lastModifiedDate":"2024-01-25"},{"lineNumber":221,"author":{"gitId":"biinnnggggg"},"content":"        String usage \u003d \"Usage: delete [number]\";","lastModifiedDate":"2024-01-26"},{"lineNumber":222,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":223,"author":{"gitId":"biinnnggggg"},"content":"        consume(TokenType.LITERAL, usage);","lastModifiedDate":"2024-01-26"},{"lineNumber":224,"author":{"gitId":"biinnnggggg"},"content":"        String argument \u003d previousToken().getText();","lastModifiedDate":"2024-01-26"},{"lineNumber":225,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":226,"author":{"gitId":"biinnnggggg"},"content":"        consume(TokenType.EOC, usage);","lastModifiedDate":"2024-01-26"},{"lineNumber":227,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":228,"author":{"gitId":"biinnnggggg"},"content":"        try {","lastModifiedDate":"2024-01-25"},{"lineNumber":229,"author":{"gitId":"biinnnggggg"},"content":"            int taskNumber \u003d Integer.parseInt(argument);","lastModifiedDate":"2024-01-25"},{"lineNumber":230,"author":{"gitId":"biinnnggggg"},"content":"            return new DeleteCommand(taskNumber);","lastModifiedDate":"2024-01-25"},{"lineNumber":231,"author":{"gitId":"biinnnggggg"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":232,"author":{"gitId":"biinnnggggg"},"content":"            String errorMessage \u003d \"One, two, three, four, get the kid back through the door!\\n\u0027\"","lastModifiedDate":"2024-02-11"},{"lineNumber":233,"author":{"gitId":"biinnnggggg"},"content":"                    + argument + \"\u0027 is not an integer Sulley...\";","lastModifiedDate":"2024-02-11"},{"lineNumber":234,"author":{"gitId":"biinnnggggg"},"content":"            throw error(errorMessage);","lastModifiedDate":"2024-01-31"},{"lineNumber":235,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":236,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":237,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":238,"author":{"gitId":"biinnnggggg"},"content":"    private Command parseFind() throws MikeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":239,"author":{"gitId":"biinnnggggg"},"content":"        String usage \u003d \"Usage: find [keyword]\";","lastModifiedDate":"2024-02-01"},{"lineNumber":240,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":241,"author":{"gitId":"biinnnggggg"},"content":"        consume(TokenType.LITERAL, usage);","lastModifiedDate":"2024-02-01"},{"lineNumber":242,"author":{"gitId":"biinnnggggg"},"content":"        String keyword \u003d previousToken().getText().strip();","lastModifiedDate":"2024-02-01"},{"lineNumber":243,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":244,"author":{"gitId":"biinnnggggg"},"content":"        consume(TokenType.EOC, usage);","lastModifiedDate":"2024-02-01"},{"lineNumber":245,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":246,"author":{"gitId":"biinnnggggg"},"content":"        return new FindCommand(keyword);","lastModifiedDate":"2024-02-01"},{"lineNumber":247,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":248,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":249,"author":{"gitId":"biinnnggggg"},"content":"    private boolean match(TokenType...types) {","lastModifiedDate":"2024-01-31"},{"lineNumber":250,"author":{"gitId":"biinnnggggg"},"content":"        for (TokenType type : types) {","lastModifiedDate":"2024-01-31"},{"lineNumber":251,"author":{"gitId":"biinnnggggg"},"content":"            if (check(type)) {","lastModifiedDate":"2024-01-31"},{"lineNumber":252,"author":{"gitId":"biinnnggggg"},"content":"                advance();","lastModifiedDate":"2024-01-31"},{"lineNumber":253,"author":{"gitId":"biinnnggggg"},"content":"                return true;","lastModifiedDate":"2024-01-31"},{"lineNumber":254,"author":{"gitId":"biinnnggggg"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":255,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":256,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":257,"author":{"gitId":"biinnnggggg"},"content":"        return false;","lastModifiedDate":"2024-01-31"},{"lineNumber":258,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":259,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":260,"author":{"gitId":"biinnnggggg"},"content":"    private MikeException error(String message) {","lastModifiedDate":"2024-01-26"},{"lineNumber":261,"author":{"gitId":"biinnnggggg"},"content":"        return new MikeException(message);","lastModifiedDate":"2024-01-26"},{"lineNumber":262,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":263,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":264,"author":{"gitId":"biinnnggggg"},"content":"    private Token consume(TokenType type, String message) throws MikeException {","lastModifiedDate":"2024-01-26"},{"lineNumber":265,"author":{"gitId":"biinnnggggg"},"content":"        if (check(type)) {","lastModifiedDate":"2024-02-01"},{"lineNumber":266,"author":{"gitId":"biinnnggggg"},"content":"            return advance();","lastModifiedDate":"2024-02-01"},{"lineNumber":267,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":268,"author":{"gitId":"biinnnggggg"},"content":"        throw error(message);","lastModifiedDate":"2024-01-26"},{"lineNumber":269,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":270,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":271,"author":{"gitId":"biinnnggggg"},"content":"    private boolean check(TokenType type) {","lastModifiedDate":"2024-01-26"},{"lineNumber":272,"author":{"gitId":"biinnnggggg"},"content":"        return peekToken().getType() \u003d\u003d type;","lastModifiedDate":"2024-01-26"},{"lineNumber":273,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":274,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":275,"author":{"gitId":"biinnnggggg"},"content":"    private Token advance() {","lastModifiedDate":"2024-01-26"},{"lineNumber":276,"author":{"gitId":"biinnnggggg"},"content":"        if (!isAtEnd()) {","lastModifiedDate":"2024-01-26"},{"lineNumber":277,"author":{"gitId":"biinnnggggg"},"content":"            current++;","lastModifiedDate":"2024-01-26"},{"lineNumber":278,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":279,"author":{"gitId":"biinnnggggg"},"content":"        return previousToken();","lastModifiedDate":"2024-01-26"},{"lineNumber":280,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":281,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":282,"author":{"gitId":"biinnnggggg"},"content":"    private Token previousToken() {","lastModifiedDate":"2024-01-26"},{"lineNumber":283,"author":{"gitId":"biinnnggggg"},"content":"        return tokens.get(current - 1);","lastModifiedDate":"2024-01-26"},{"lineNumber":284,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":285,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":286,"author":{"gitId":"biinnnggggg"},"content":"    private boolean isAtEnd() {","lastModifiedDate":"2024-01-26"},{"lineNumber":287,"author":{"gitId":"biinnnggggg"},"content":"        return peekToken().getType() \u003d\u003d TokenType.EOC;","lastModifiedDate":"2024-01-26"},{"lineNumber":288,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":289,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":290,"author":{"gitId":"biinnnggggg"},"content":"    private Token peekToken() {","lastModifiedDate":"2024-01-26"},{"lineNumber":291,"author":{"gitId":"biinnnggggg"},"content":"        return tokens.get(current);","lastModifiedDate":"2024-01-26"},{"lineNumber":292,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":293,"author":{"gitId":"biinnnggggg"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"biinnnggggg":293}},{"path":"src/main/java/mike/CommandScanner.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"biinnnggggg"},"content":"package mike;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"biinnnggggg"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"biinnnggggg"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"biinnnggggg"},"content":"import java.util.List;","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"biinnnggggg"},"content":"import java.util.Map;","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"biinnnggggg"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"biinnnggggg"},"content":" * CommandScanner is the class responsible or scanning the command input","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"biinnnggggg"},"content":" * @author ningc","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"biinnnggggg"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"biinnnggggg"},"content":"class CommandScanner {","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"biinnnggggg"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"biinnnggggg"},"content":"     * Look up table for commands.","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"biinnnggggg"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"biinnnggggg"},"content":"    private static final Map\u003cString, TokenType\u003e commands;","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"biinnnggggg"},"content":"    static {","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"biinnnggggg"},"content":"        commands \u003d new HashMap\u003cString, TokenType\u003e(0);","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"biinnnggggg"},"content":"        commands.put(\"bye\", TokenType.EXIT);","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"biinnnggggg"},"content":"        commands.put(\"list\", TokenType.LIST);","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"biinnnggggg"},"content":"        commands.put(\"mark\", TokenType.MARK);","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"biinnnggggg"},"content":"        commands.put(\"unmark\", TokenType.UNMARK);","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"biinnnggggg"},"content":"        commands.put(\"todo\", TokenType.TODO);","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"biinnnggggg"},"content":"        commands.put(\"deadline\", TokenType.DEADLINE);","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"biinnnggggg"},"content":"        commands.put(\"event\", TokenType.EVENT);","lastModifiedDate":"2024-01-26"},{"lineNumber":27,"author":{"gitId":"biinnnggggg"},"content":"        commands.put(\"delete\", TokenType.DELETE);","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"biinnnggggg"},"content":"        commands.put(\"find\", TokenType.FIND);","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":30,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":31,"author":{"gitId":"biinnnggggg"},"content":"    private final String source;","lastModifiedDate":"2024-01-26"},{"lineNumber":32,"author":{"gitId":"biinnnggggg"},"content":"    private final List\u003cToken\u003e tokens;","lastModifiedDate":"2024-01-26"},{"lineNumber":33,"author":{"gitId":"biinnnggggg"},"content":"    private int start;","lastModifiedDate":"2024-01-26"},{"lineNumber":34,"author":{"gitId":"biinnnggggg"},"content":"    private int current;","lastModifiedDate":"2024-01-26"},{"lineNumber":35,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":36,"author":{"gitId":"biinnnggggg"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"biinnnggggg"},"content":"     * Constructor.","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"biinnnggggg"},"content":"     * @param source The raw command input.","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"biinnnggggg"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"biinnnggggg"},"content":"    CommandScanner(String source) {","lastModifiedDate":"2024-01-26"},{"lineNumber":41,"author":{"gitId":"biinnnggggg"},"content":"        this.source \u003d source;","lastModifiedDate":"2024-01-26"},{"lineNumber":42,"author":{"gitId":"biinnnggggg"},"content":"        this.tokens \u003d new ArrayList\u003cToken\u003e();","lastModifiedDate":"2024-01-26"},{"lineNumber":43,"author":{"gitId":"biinnnggggg"},"content":"        this.start \u003d 0;","lastModifiedDate":"2024-01-26"},{"lineNumber":44,"author":{"gitId":"biinnnggggg"},"content":"        this.current \u003d 0;","lastModifiedDate":"2024-01-26"},{"lineNumber":45,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":46,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":47,"author":{"gitId":"biinnnggggg"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"biinnnggggg"},"content":"     * Scans the command input to return a list of tokens. See {@link mike.Token}.","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"biinnnggggg"},"content":"     * @return the list of tokens characterizing the command input.","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"biinnnggggg"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"biinnnggggg"},"content":"    public List\u003cToken\u003e scanTokens() {","lastModifiedDate":"2024-01-26"},{"lineNumber":52,"author":{"gitId":"biinnnggggg"},"content":"        // command token","lastModifiedDate":"2024-01-26"},{"lineNumber":53,"author":{"gitId":"biinnnggggg"},"content":"        tokens.add(getStartToken());","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"biinnnggggg"},"content":"        // argument tokens","lastModifiedDate":"2024-01-26"},{"lineNumber":56,"author":{"gitId":"biinnnggggg"},"content":"        while (!isAtEnd()) {","lastModifiedDate":"2024-01-26"},{"lineNumber":57,"author":{"gitId":"biinnnggggg"},"content":"            start \u003d current;","lastModifiedDate":"2024-01-26"},{"lineNumber":58,"author":{"gitId":"biinnnggggg"},"content":"            tokens.addAll(getNextTokens());","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":60,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":61,"author":{"gitId":"biinnnggggg"},"content":"        // EOC token","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"biinnnggggg"},"content":"        tokens.add(getEndToken());","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"biinnnggggg"},"content":"        return tokens;","lastModifiedDate":"2024-01-26"},{"lineNumber":64,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":65,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":66,"author":{"gitId":"biinnnggggg"},"content":"    private Token getEndToken() {","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"biinnnggggg"},"content":"        return new Token(TokenType.EOC, \"\");","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":69,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":70,"author":{"gitId":"biinnnggggg"},"content":"    private ArrayList\u003cToken\u003e getNextTokens() {","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"biinnnggggg"},"content":"        char c \u003d advance();","lastModifiedDate":"2024-01-26"},{"lineNumber":72,"author":{"gitId":"biinnnggggg"},"content":"        ArrayList\u003cToken\u003e nextTokens \u003d new ArrayList\u003cToken\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"biinnnggggg"},"content":"        switch (c) {","lastModifiedDate":"2024-01-26"},{"lineNumber":74,"author":{"gitId":"biinnnggggg"},"content":"        case \u0027/\u0027:","lastModifiedDate":"2024-01-26"},{"lineNumber":75,"author":{"gitId":"biinnnggggg"},"content":"            nextTokens.add(getPrefix());","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"biinnnggggg"},"content":"            nextTokens.add(getParameter());","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"biinnnggggg"},"content":"            return nextTokens;","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"biinnnggggg"},"content":"        case \u0027 \u0027:","lastModifiedDate":"2024-01-26"},{"lineNumber":79,"author":{"gitId":"biinnnggggg"},"content":"        case \u0027\\r\u0027:","lastModifiedDate":"2024-01-26"},{"lineNumber":80,"author":{"gitId":"biinnnggggg"},"content":"        case \u0027\\t\u0027:","lastModifiedDate":"2024-01-26"},{"lineNumber":81,"author":{"gitId":"biinnnggggg"},"content":"            // ignore whitespace","lastModifiedDate":"2024-01-26"},{"lineNumber":82,"author":{"gitId":"biinnnggggg"},"content":"            break;","lastModifiedDate":"2024-01-26"},{"lineNumber":83,"author":{"gitId":"biinnnggggg"},"content":"        default:","lastModifiedDate":"2024-01-26"},{"lineNumber":84,"author":{"gitId":"biinnnggggg"},"content":"            nextTokens.add(getLiteral());","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"biinnnggggg"},"content":"            return nextTokens;","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":87,"author":{"gitId":"biinnnggggg"},"content":"        return nextTokens;","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":89,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":90,"author":{"gitId":"biinnnggggg"},"content":"    private Token getLiteral() {","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"biinnnggggg"},"content":"        while (peek() !\u003d \u0027/\u0027 \u0026\u0026 !isAtEnd()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"biinnnggggg"},"content":"            advance();","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"biinnnggggg"},"content":"        return createToken(TokenType.LITERAL);","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":96,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":97,"author":{"gitId":"biinnnggggg"},"content":"    private Token getParameter() {","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"biinnnggggg"},"content":"        start \u003d current;","lastModifiedDate":"2024-01-26"},{"lineNumber":99,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":100,"author":{"gitId":"biinnnggggg"},"content":"        while (!isWhiteSpace(peek()) \u0026\u0026 !isAtEnd()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":101,"author":{"gitId":"biinnnggggg"},"content":"            advance();","lastModifiedDate":"2024-02-01"},{"lineNumber":102,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":103,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":104,"author":{"gitId":"biinnnggggg"},"content":"        return createToken(TokenType.PARAM);","lastModifiedDate":"2024-02-01"},{"lineNumber":105,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":106,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":107,"author":{"gitId":"biinnnggggg"},"content":"    private Token getPrefix() {","lastModifiedDate":"2024-02-01"},{"lineNumber":108,"author":{"gitId":"biinnnggggg"},"content":"        return createToken(TokenType.FORWARD_DASH);","lastModifiedDate":"2024-02-01"},{"lineNumber":109,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":110,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":111,"author":{"gitId":"biinnnggggg"},"content":"    private Token getStartToken() {","lastModifiedDate":"2024-02-01"},{"lineNumber":112,"author":{"gitId":"biinnnggggg"},"content":"        while (!isWhiteSpace(peek()) \u0026\u0026 !isAtEnd()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":113,"author":{"gitId":"biinnnggggg"},"content":"            advance();","lastModifiedDate":"2024-02-01"},{"lineNumber":114,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":115,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":116,"author":{"gitId":"biinnnggggg"},"content":"        String text \u003d source.substring(start, current);","lastModifiedDate":"2024-01-26"},{"lineNumber":117,"author":{"gitId":"biinnnggggg"},"content":"        TokenType type \u003d commands.get(text);","lastModifiedDate":"2024-01-26"},{"lineNumber":118,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":119,"author":{"gitId":"biinnnggggg"},"content":"        if (type \u003d\u003d null) {","lastModifiedDate":"2024-02-01"},{"lineNumber":120,"author":{"gitId":"biinnnggggg"},"content":"            type \u003d TokenType.LITERAL; // flag that LITERAL is not recognised command when parsing","lastModifiedDate":"2024-02-01"},{"lineNumber":121,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":122,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":123,"author":{"gitId":"biinnnggggg"},"content":"        return createToken(type);","lastModifiedDate":"2024-02-01"},{"lineNumber":124,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":125,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":126,"author":{"gitId":"biinnnggggg"},"content":"    private Token createToken(TokenType type) {","lastModifiedDate":"2024-02-01"},{"lineNumber":127,"author":{"gitId":"biinnnggggg"},"content":"        String text \u003d source.substring(start, current).strip();","lastModifiedDate":"2024-02-03"},{"lineNumber":128,"author":{"gitId":"biinnnggggg"},"content":"        return new Token(type, text);","lastModifiedDate":"2024-02-01"},{"lineNumber":129,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":130,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":131,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":132,"author":{"gitId":"biinnnggggg"},"content":"    private char peek() {","lastModifiedDate":"2024-01-26"},{"lineNumber":133,"author":{"gitId":"biinnnggggg"},"content":"        if (isAtEnd()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":134,"author":{"gitId":"biinnnggggg"},"content":"            return \u0027\\0\u0027;","lastModifiedDate":"2024-02-01"},{"lineNumber":135,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":136,"author":{"gitId":"biinnnggggg"},"content":"        return source.charAt(current);","lastModifiedDate":"2024-01-26"},{"lineNumber":137,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":138,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":139,"author":{"gitId":"biinnnggggg"},"content":"    private boolean isWhiteSpace(char c) {","lastModifiedDate":"2024-01-26"},{"lineNumber":140,"author":{"gitId":"biinnnggggg"},"content":"        return c \u003d\u003d \u0027 \u0027 || c \u003d\u003d \u0027\\t\u0027 || c \u003d\u003d \u0027\\r\u0027;","lastModifiedDate":"2024-01-26"},{"lineNumber":141,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":142,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":143,"author":{"gitId":"biinnnggggg"},"content":"    private char advance() {","lastModifiedDate":"2024-01-26"},{"lineNumber":144,"author":{"gitId":"biinnnggggg"},"content":"        return source.charAt(current++);","lastModifiedDate":"2024-01-26"},{"lineNumber":145,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":146,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":147,"author":{"gitId":"biinnnggggg"},"content":"    private boolean isAtEnd() {","lastModifiedDate":"2024-01-26"},{"lineNumber":148,"author":{"gitId":"biinnnggggg"},"content":"        return current \u003e\u003d source.length();","lastModifiedDate":"2024-01-26"},{"lineNumber":149,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":150,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":151,"author":{"gitId":"biinnnggggg"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"biinnnggggg":151}},{"path":"src/main/java/mike/ListView.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"biinnnggggg"},"content":"package mike;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"biinnnggggg"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"biinnnggggg"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"biinnnggggg"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"biinnnggggg"},"content":" * ListView class is responsible for filtering tasks to be viewed by the user.","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"biinnnggggg"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"biinnnggggg"},"content":"public class ListView {","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"biinnnggggg"},"content":"    private final ListViewType type;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"biinnnggggg"},"content":"    private final String attribute;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"biinnnggggg"},"content":"    private LocalDate date;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"biinnnggggg"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"biinnnggggg"},"content":"     * Constructor.","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"biinnnggggg"},"content":"     * @param type The type of list view, usually a field.","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"biinnnggggg"},"content":"     * @param attribute THe value a field should take.","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"biinnnggggg"},"content":"     * @throws MikeException If","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"biinnnggggg"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"biinnnggggg"},"content":"    public ListView(ListViewType type, String attribute) throws MikeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"biinnnggggg"},"content":"        this.type \u003d type;","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"biinnnggggg"},"content":"        this.attribute \u003d attribute;","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"biinnnggggg"},"content":"        if (type.equals(ListViewType.DATE)) {","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"biinnnggggg"},"content":"            try {","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"biinnnggggg"},"content":"                this.date \u003d LocalDate.parse(attribute);","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"biinnnggggg"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"biinnnggggg"},"content":"                throw new MikeException(\"Please enter a valid date in YYYY-MM-DD format.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"biinnnggggg"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"biinnnggggg"},"content":"    public ListView(ListViewType type) throws MikeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"biinnnggggg"},"content":"        this(type, \"\");","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"biinnnggggg"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"biinnnggggg"},"content":"     * Getter.","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"biinnnggggg"},"content":"     * @return The type of list view.","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"biinnnggggg"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"biinnnggggg"},"content":"    public ListViewType getType() {","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"biinnnggggg"},"content":"        return type;","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"biinnnggggg"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"biinnnggggg"},"content":"     * Filters tasks by dates.","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"biinnnggggg"},"content":"     * @param taskDate The task date.","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"biinnnggggg"},"content":"     * @return True if the task date is permissible by the list view, otherwise false.","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"biinnnggggg"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"biinnnggggg"},"content":"    public boolean dateFilter(LocalDate taskDate) {","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"biinnnggggg"},"content":"        return !type.equals(ListViewType.DATE) || date.equals(taskDate);","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"biinnnggggg"},"content":"    public boolean descriptionFilter(String description) {","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"biinnnggggg"},"content":"        return !type.equals(ListViewType.DESCRIPTION) || description.contains(attribute);","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"biinnnggggg"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"biinnnggggg"},"content":"    public String toString() {","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"biinnnggggg"},"content":"        return \"LISTVIEW \" + type + attribute;","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"biinnnggggg"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"biinnnggggg":62}},{"path":"src/main/java/mike/ListViewType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"biinnnggggg"},"content":"package mike;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"biinnnggggg"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"biinnnggggg"},"content":" * Types of list views.","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"biinnnggggg"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"biinnnggggg"},"content":"public enum ListViewType {","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"biinnnggggg"},"content":"    NONE, DATE, DESCRIPTION","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"biinnnggggg"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"biinnnggggg":8}},{"path":"src/main/java/mike/Mike.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"biinnnggggg"},"content":"package mike;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"biinnnggggg"},"content":"import java.util.List;","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"biinnnggggg"},"content":"import mike.command.Command;","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"biinnnggggg"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"biinnnggggg"},"content":" * Mike class.","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"biinnnggggg"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"biinnnggggg"},"content":"public class Mike {","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"biinnnggggg"},"content":"    private static final String FILE_PATH \u003d \"./data/mike.txt\";","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"biinnnggggg"},"content":"    private final TaskList taskList;","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"biinnnggggg"},"content":"    private final Ui ui;","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"biinnnggggg"},"content":"    private final Storage storage;","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"biinnnggggg"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"biinnnggggg"},"content":"     * Constructor.","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"biinnnggggg"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"biinnnggggg"},"content":"    public Mike() {","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"biinnnggggg"},"content":"        // Referenced from https://nus-cs2103-ay2324s2.github.io/website/schedule/week3/project.html#a-moreoop","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"biinnnggggg"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"biinnnggggg"},"content":"        this.storage \u003d new Storage(FILE_PATH);","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"biinnnggggg"},"content":"        this.taskList \u003d storage.load();","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"biinnnggggg"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"biinnnggggg"},"content":"     * Starts the main control loop of Mike.","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"biinnnggggg"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"biinnnggggg"},"content":"    public void run() {","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"biinnnggggg"},"content":"        ui.displayWelcome();","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"biinnnggggg"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"biinnnggggg"},"content":"        // Referenced from https://nus-cs2103-ay2324s2.github.io/website/schedule/week3/project.html#a-moreoop","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"biinnnggggg"},"content":"        while (!isExit) {","lastModifiedDate":"2024-02-11"},{"lineNumber":36,"author":{"gitId":"biinnnggggg"},"content":"            try {","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"biinnnggggg"},"content":"                String userInput \u003d ui.scanInput();","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"biinnnggggg"},"content":"                Ui.displayLine();","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"biinnnggggg"},"content":"                List\u003cToken\u003e tokens \u003d new CommandScanner(userInput).scanTokens();","lastModifiedDate":"2024-01-26"},{"lineNumber":41,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"biinnnggggg"},"content":"                Command command \u003d new CommandParser(tokens).parse();","lastModifiedDate":"2024-01-26"},{"lineNumber":43,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"biinnnggggg"},"content":"                String response \u003d command.execute(taskList);","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"biinnnggggg"},"content":"                Ui.display(response);","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"biinnnggggg"},"content":"                if (command.isExit()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"biinnnggggg"},"content":"                    isExit \u003d true;","lastModifiedDate":"2024-02-11"},{"lineNumber":49,"author":{"gitId":"biinnnggggg"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"biinnnggggg"},"content":"            } catch (MikeException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"biinnnggggg"},"content":"                Ui.displayError(e.getMessage());","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"biinnnggggg"},"content":"            } finally {","lastModifiedDate":"2024-01-25"},{"lineNumber":53,"author":{"gitId":"biinnnggggg"},"content":"                Ui.displayLine();","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"biinnnggggg"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":55,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":56,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"biinnnggggg"},"content":"        storage.writeToFile(taskList);","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"biinnnggggg"},"content":"        Ui.display(\"Session terminated: data saved successfully.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":60,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":61,"author":{"gitId":"biinnnggggg"},"content":"    public void end() {","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"biinnnggggg"},"content":"        ui.close();","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":64,"author":{"gitId":"biinnnggggg"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"biinnnggggg":64}},{"path":"src/main/java/mike/MikeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"biinnnggggg"},"content":"package mike;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"biinnnggggg"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"biinnnggggg"},"content":" * The exception class for unsupported behaviour specific to {@link Mike}.","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"biinnnggggg"},"content":" * @author ningc","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"biinnnggggg"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"biinnnggggg"},"content":"public class MikeException extends Exception {","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"biinnnggggg"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"biinnnggggg"},"content":"     * Constructor.","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"biinnnggggg"},"content":"     * @param message The error message with the exception.","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"biinnnggggg"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"biinnnggggg"},"content":"    public MikeException(String message) {","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"biinnnggggg"},"content":"        super(message);","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"biinnnggggg"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"biinnnggggg":16}},{"path":"src/main/java/mike/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"biinnnggggg"},"content":"package mike;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"biinnnggggg"},"content":"import java.io.File;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"biinnnggggg"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"biinnnggggg"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"biinnnggggg"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"biinnnggggg"},"content":"import mike.task.Deadline;","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"biinnnggggg"},"content":"import mike.task.Event;","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"biinnnggggg"},"content":"import mike.task.Task;","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"biinnnggggg"},"content":"import mike.task.Todo;","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"biinnnggggg"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"biinnnggggg"},"content":" * Storage is responsible for loading and saving {@link TaskList} instance data.","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"biinnnggggg"},"content":" * @author ningc","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"biinnnggggg"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"biinnnggggg"},"content":"class Storage {","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"biinnnggggg"},"content":"    private final String fileDirectory;","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"biinnnggggg"},"content":"    private final String filePath;","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"biinnnggggg"},"content":"    private File file;","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"biinnnggggg"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"biinnnggggg"},"content":"     * Constructor.","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"biinnnggggg"},"content":"     * @param filePath The relative path to the storage file.","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"biinnnggggg"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"biinnnggggg"},"content":"    Storage(String filePath) {","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"biinnnggggg"},"content":"        this.fileDirectory \u003d filePath.split(\"/\")[1];","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"biinnnggggg"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"biinnnggggg"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"biinnnggggg"},"content":"     * Return a TaskList object constructed from file data.","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"biinnnggggg"},"content":"     * @return TaskList","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"biinnnggggg"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"biinnnggggg"},"content":"    public TaskList load() {","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"biinnnggggg"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"biinnnggggg"},"content":"            if (new File(fileDirectory).mkdirs()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"biinnnggggg"},"content":"                Ui.display(\"File location created at \" + filePath);","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"biinnnggggg"},"content":"            } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"biinnnggggg"},"content":"                Ui.display(\"File location already exists\");","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"biinnnggggg"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"biinnnggggg"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"biinnnggggg"},"content":"            this.file \u003d file;","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"biinnnggggg"},"content":"            if (file.createNewFile()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"biinnnggggg"},"content":"                Ui.display(\"File created: \" + file.getName());","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"biinnnggggg"},"content":"            } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"biinnnggggg"},"content":"                Ui.display(\"File already exists\");","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"biinnnggggg"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"biinnnggggg"},"content":"            Scanner fileScanner \u003d new Scanner(file);","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"biinnnggggg"},"content":"            String line;","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"biinnnggggg"},"content":"            Task newTask;","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"biinnnggggg"},"content":"            TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"biinnnggggg"},"content":"            while (fileScanner.hasNext()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"biinnnggggg"},"content":"                line \u003d fileScanner.nextLine();","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"biinnnggggg"},"content":"                newTask \u003d extractTask(line);","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"biinnnggggg"},"content":"                taskList.add(newTask);","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"biinnnggggg"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"biinnnggggg"},"content":"            return taskList;","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"biinnnggggg"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"biinnnggggg"},"content":"            Ui.displayError(\"404 File not found\");","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"biinnnggggg"},"content":"            return new TaskList();","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"biinnnggggg"},"content":"        } catch (MikeException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"biinnnggggg"},"content":"            Ui.displayError(e.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"biinnnggggg"},"content":"            return new TaskList();","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":73,"author":{"gitId":"biinnnggggg"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"biinnnggggg"},"content":"     * Writes taskList data into file.","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"biinnnggggg"},"content":"     * @param taskList The list of tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"biinnnggggg"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"biinnnggggg"},"content":"    public void writeToFile(TaskList taskList) {","lastModifiedDate":"2024-01-30"},{"lineNumber":78,"author":{"gitId":"biinnnggggg"},"content":"        try (PrintWriter out \u003d new PrintWriter(filePath)) {","lastModifiedDate":"2024-01-30"},{"lineNumber":79,"author":{"gitId":"biinnnggggg"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2024-01-30"},{"lineNumber":80,"author":{"gitId":"biinnnggggg"},"content":"                out.println(task.getFileEncoding());","lastModifiedDate":"2024-01-30"},{"lineNumber":81,"author":{"gitId":"biinnnggggg"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":82,"author":{"gitId":"biinnnggggg"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":83,"author":{"gitId":"biinnnggggg"},"content":"            Ui.display(e.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":84,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":85,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":86,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":87,"author":{"gitId":"biinnnggggg"},"content":"    private Task extractTask(String line) throws IndexOutOfBoundsException, MikeException {","lastModifiedDate":"2024-01-30"},{"lineNumber":88,"author":{"gitId":"biinnnggggg"},"content":"        String[] taskInformation \u003d line.split(\",\");","lastModifiedDate":"2024-01-30"},{"lineNumber":89,"author":{"gitId":"biinnnggggg"},"content":"        String taskType \u003d taskInformation[0];","lastModifiedDate":"2024-01-30"},{"lineNumber":90,"author":{"gitId":"biinnnggggg"},"content":"        String taskDescription \u003d taskInformation[1];","lastModifiedDate":"2024-01-30"},{"lineNumber":91,"author":{"gitId":"biinnnggggg"},"content":"        boolean isTaskCompleted \u003d taskInformation[2].equals(\"true\");","lastModifiedDate":"2024-02-11"},{"lineNumber":92,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":93,"author":{"gitId":"biinnnggggg"},"content":"        Task newTask;","lastModifiedDate":"2024-01-30"},{"lineNumber":94,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":95,"author":{"gitId":"biinnnggggg"},"content":"        switch (taskType) {","lastModifiedDate":"2024-01-30"},{"lineNumber":96,"author":{"gitId":"biinnnggggg"},"content":"        case \"Todo\":","lastModifiedDate":"2024-01-30"},{"lineNumber":97,"author":{"gitId":"biinnnggggg"},"content":"            newTask \u003d new Todo(taskDescription);","lastModifiedDate":"2024-01-30"},{"lineNumber":98,"author":{"gitId":"biinnnggggg"},"content":"            break;","lastModifiedDate":"2024-01-30"},{"lineNumber":99,"author":{"gitId":"biinnnggggg"},"content":"        case \"Deadline\": // format: taskType,taskDescription,taskDone,deadline","lastModifiedDate":"2024-01-30"},{"lineNumber":100,"author":{"gitId":"biinnnggggg"},"content":"            String deadline \u003d taskInformation[3];","lastModifiedDate":"2024-01-30"},{"lineNumber":101,"author":{"gitId":"biinnnggggg"},"content":"            newTask \u003d new Deadline(taskDescription, deadline);","lastModifiedDate":"2024-01-30"},{"lineNumber":102,"author":{"gitId":"biinnnggggg"},"content":"            break;","lastModifiedDate":"2024-01-30"},{"lineNumber":103,"author":{"gitId":"biinnnggggg"},"content":"        case \"Event\": // format: taskType,taskDescription,taskDone,startDate,endDate","lastModifiedDate":"2024-01-30"},{"lineNumber":104,"author":{"gitId":"biinnnggggg"},"content":"            String startDate \u003d taskInformation[3];","lastModifiedDate":"2024-01-30"},{"lineNumber":105,"author":{"gitId":"biinnnggggg"},"content":"            String endDate \u003d taskInformation[4];","lastModifiedDate":"2024-01-30"},{"lineNumber":106,"author":{"gitId":"biinnnggggg"},"content":"            newTask \u003d new Event(taskDescription, startDate, endDate);","lastModifiedDate":"2024-01-30"},{"lineNumber":107,"author":{"gitId":"biinnnggggg"},"content":"            break;","lastModifiedDate":"2024-01-30"},{"lineNumber":108,"author":{"gitId":"biinnnggggg"},"content":"        default:","lastModifiedDate":"2024-01-30"},{"lineNumber":109,"author":{"gitId":"biinnnggggg"},"content":"            throw new MikeException(\"File corrupted. Unable to load saved data.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":110,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":111,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":112,"author":{"gitId":"biinnnggggg"},"content":"        if (isTaskCompleted) {","lastModifiedDate":"2024-02-11"},{"lineNumber":113,"author":{"gitId":"biinnnggggg"},"content":"            newTask.markAsDone();","lastModifiedDate":"2024-01-30"},{"lineNumber":114,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":115,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":116,"author":{"gitId":"biinnnggggg"},"content":"        return newTask;","lastModifiedDate":"2024-01-30"},{"lineNumber":117,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":118,"author":{"gitId":"biinnnggggg"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"biinnnggggg":118}},{"path":"src/main/java/mike/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"biinnnggggg"},"content":"package mike;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"biinnnggggg"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"biinnnggggg"},"content":"import mike.task.Task;","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"biinnnggggg"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"biinnnggggg"},"content":" * TaskList is a wrapper class for an ArrayList of {@link Task} objects.","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"biinnnggggg"},"content":" * @author ningc","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"biinnnggggg"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"biinnnggggg"},"content":"public class TaskList extends ArrayList\u003cTask\u003e {","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"biinnnggggg"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"biinnnggggg"},"content":"     * Filters the view of the task list to tasks permitted by ListView object.","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"biinnnggggg"},"content":"     * @param listView","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"biinnnggggg"},"content":"     * @return string representation of filtered task list.","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"biinnnggggg"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"biinnnggggg"},"content":"    public String view(ListView listView) {","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"biinnnggggg"},"content":"        return this","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"biinnnggggg"},"content":"                .stream()","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"biinnnggggg"},"content":"                .filter(task -\u003e task.inListView(listView))","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"biinnnggggg"},"content":"                .map(task -\u003e {","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"biinnnggggg"},"content":"                    int index \u003d this.indexOf(task) + 1;","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"biinnnggggg"},"content":"                    return index + \".\" + task;","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"biinnnggggg"},"content":"                })","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"biinnnggggg"},"content":"                .reduce(\"\", (s1, s2) -\u003e s1 + \"\\n\" + s2);","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"biinnnggggg"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"biinnnggggg":28}},{"path":"src/main/java/mike/Token.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"biinnnggggg"},"content":"package mike;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"biinnnggggg"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"biinnnggggg"},"content":" * Representation of source text and context.","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"biinnnggggg"},"content":" * @author ningc","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"biinnnggggg"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"biinnnggggg"},"content":"class Token {","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"biinnnggggg"},"content":"    public final TokenType type;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"biinnnggggg"},"content":"    public final String text;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"biinnnggggg"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"biinnnggggg"},"content":"     * Constructor.","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"biinnnggggg"},"content":"     * @param type The token type.","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"biinnnggggg"},"content":"     * @param text The source text contained in the token.","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"biinnnggggg"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"biinnnggggg"},"content":"    Token(TokenType type, String text) {","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"biinnnggggg"},"content":"        this.type \u003d type;","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"biinnnggggg"},"content":"        this.text \u003d text;","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"biinnnggggg"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"biinnnggggg"},"content":"     * Returns the type of the token as a {@link TokenType}.","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"biinnnggggg"},"content":"     * @return the token type.","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"biinnnggggg"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"biinnnggggg"},"content":"    public TokenType getType() {","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"biinnnggggg"},"content":"        return type;","lastModifiedDate":"2024-01-26"},{"lineNumber":27,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":29,"author":{"gitId":"biinnnggggg"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"biinnnggggg"},"content":"     * Returns the text stored in the token as a String.","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"biinnnggggg"},"content":"     * @return the token text.","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"biinnnggggg"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"biinnnggggg"},"content":"    public String getText() {","lastModifiedDate":"2024-01-26"},{"lineNumber":34,"author":{"gitId":"biinnnggggg"},"content":"        return text;","lastModifiedDate":"2024-01-26"},{"lineNumber":35,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":36,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":37,"author":{"gitId":"biinnnggggg"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":38,"author":{"gitId":"biinnnggggg"},"content":"    public String toString() {","lastModifiedDate":"2024-01-26"},{"lineNumber":39,"author":{"gitId":"biinnnggggg"},"content":"        return type + \" \" + text;","lastModifiedDate":"2024-01-26"},{"lineNumber":40,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":41,"author":{"gitId":"biinnnggggg"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"biinnnggggg":41}},{"path":"src/main/java/mike/TokenType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"biinnnggggg"},"content":"package mike;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"biinnnggggg"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"biinnnggggg"},"content":" * Types of tokens in the command input.","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"biinnnggggg"},"content":" * @author ningc","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"biinnnggggg"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"biinnnggggg"},"content":"enum TokenType {","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"biinnnggggg"},"content":"    // primary command tokens","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"biinnnggggg"},"content":"    EXIT, LIST, MARK, UNMARK, TODO, DEADLINE, EVENT, DELETE, FIND,","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"biinnnggggg"},"content":"    // prefix character tokens","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"biinnnggggg"},"content":"    FORWARD_DASH,","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"biinnnggggg"},"content":"    // parameter tokens","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"biinnnggggg"},"content":"    PARAM,","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"biinnnggggg"},"content":"    // argument tokens","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"biinnnggggg"},"content":"    LITERAL,","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"biinnnggggg"},"content":"    // end of command","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"biinnnggggg"},"content":"    EOC","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"biinnnggggg"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"biinnnggggg":22}},{"path":"src/main/java/mike/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"biinnnggggg"},"content":"package mike;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"biinnnggggg"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"biinnnggggg"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"biinnnggggg"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"biinnnggggg"},"content":" * Ui is the class responsible for the user interface, i.e., user input and response.","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"biinnnggggg"},"content":" * @author ningc","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"biinnnggggg"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"biinnnggggg"},"content":"public class Ui {","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"biinnnggggg"},"content":"    private static final String logo \u003d \"                   .\\n\"","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"biinnnggggg"},"content":"            + \"          \u0026#  #*\u0026/,,(@%*. (#\\n\"","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"biinnnggggg"},"content":"            + \"           %#((,.      #%,*,\\n\"","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"biinnnggggg"},"content":"            + \"         %%%(/,.. *(     /,.**\\n\"","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"biinnnggggg"},"content":"            + \"      .%%%%#/**,%(@@\u0026@    /.,,/\\n\"","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"biinnnggggg"},"content":"            + \"      %%%%#(((/*(#*(%\u0026    ..,,,*(\\n\"","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"biinnnggggg"},"content":"            + \"    *#%%%##(/,#(/**,,...,...,,,**/\\n\"","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"biinnnggggg"},"content":"            + \"   .#%%%%%##(((//#(//*......,,,**//\\n\"","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"biinnnggggg"},"content":"            + \"   \u0026#%%%%%%###(///*,,..,,,,,,,***/#*\\n\"","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"biinnnggggg"},"content":"            + \"   \u0026#%%%%%%#####@@@@@@(,,**,****/(#*\\n\"","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"biinnnggggg"},"content":"            + \"  *\u0026%#%%\u0026\u0026\u0026%%%@@@@@@@@@@\u0026**/////(.\u0026/*\\n\"","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"biinnnggggg"},"content":"            + \"  #\u0026, #%\u0026\u0026\u0026\u0026\u0026\u0026%(((/*****((((((##.  #(\\n\"","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"biinnnggggg"},"content":"            + \"  ##    #\u0026\u0026\u0026\u0026\u0026\u0026\u0026\u0026\u0026\u0026%%%%%%###%%(    (*\\n\"","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"biinnnggggg"},"content":"            + \"  .#/     /%%%%%%%%%%%%%%%%#       //\\n\"","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"biinnnggggg"},"content":"            + \"   #(     /##            *#,       (/\\n\"","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"biinnnggggg"},"content":"            + \"   %*     /#(             #,       //\\n\"","lastModifiedDate":"2024-02-11"},{"lineNumber":27,"author":{"gitId":"biinnnggggg"},"content":"            + \"   %(/.    %(            .%\u0026      //*/\\n\"","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"biinnnggggg"},"content":"            + \"   %/,\u0026,   \u0026(            #%/      (#//,\\n\"","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"biinnnggggg"},"content":"            + \"   /(*     ##*           #%       \u0026*#%\\n\"","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"biinnnggggg"},"content":"            + \"     @/@*  (#*.          #(.      /%%\\n\"","lastModifiedDate":"2024-02-11"},{"lineNumber":31,"author":{"gitId":"biinnnggggg"},"content":"            + \"      (/(/##(...........##(//\u0026#(\u0026/.\\n\"","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"biinnnggggg"},"content":"            + \"     (@%(\u0026@@,#,..........,*@@\u0026\u0026@\u0026*,\\n\";","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"biinnnggggg"},"content":"    private static final String horizontalLine \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";","lastModifiedDate":"2024-02-11"},{"lineNumber":34,"author":{"gitId":"biinnnggggg"},"content":"    private final Scanner scanner;","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":36,"author":{"gitId":"biinnnggggg"},"content":"    Ui() {","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"biinnnggggg"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"biinnnggggg"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"biinnnggggg"},"content":"     *  Returns the user command input.","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"biinnnggggg"},"content":"     * @return the user command as a String.","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"biinnnggggg"},"content":"     * @throws MikeException if user command input is empty.","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"biinnnggggg"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"biinnnggggg"},"content":"    public String scanInput() throws MikeException {","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"biinnnggggg"},"content":"        try {","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"biinnnggggg"},"content":"            return scanner.nextLine().strip();","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"biinnnggggg"},"content":"        } catch (NoSuchElementException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"biinnnggggg"},"content":"            throw new MikeException(\"That is the weirdest thing you\u0027ve ever said.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":52,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":53,"author":{"gitId":"biinnnggggg"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"biinnnggggg"},"content":"     * Displays the object to the user.","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"biinnnggggg"},"content":"     * @param object to be displayed.","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"biinnnggggg"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"biinnnggggg"},"content":"    public static void display(Object object) {","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"biinnnggggg"},"content":"        System.out.println(object);","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"biinnnggggg"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"biinnnggggg"},"content":"     * Displays errorMessage to the user.","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"biinnnggggg"},"content":"     * @param errorMessage to be displayed.","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"biinnnggggg"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"biinnnggggg"},"content":"    public static void displayError(String errorMessage) {","lastModifiedDate":"2024-01-29"},{"lineNumber":66,"author":{"gitId":"biinnnggggg"},"content":"        display(errorMessage);","lastModifiedDate":"2024-01-25"},{"lineNumber":67,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":68,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"biinnnggggg"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"biinnnggggg"},"content":"     * Displays a welcome message to the user.","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"biinnnggggg"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"biinnnggggg"},"content":"    public void displayWelcome() {","lastModifiedDate":"2024-01-25"},{"lineNumber":73,"author":{"gitId":"biinnnggggg"},"content":"        displayLogo();","lastModifiedDate":"2024-01-25"},{"lineNumber":74,"author":{"gitId":"biinnnggggg"},"content":"        displayGreeting();","lastModifiedDate":"2024-01-25"},{"lineNumber":75,"author":{"gitId":"biinnnggggg"},"content":"        displayLine();","lastModifiedDate":"2024-01-25"},{"lineNumber":76,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":77,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":78,"author":{"gitId":"biinnnggggg"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":79,"author":{"gitId":"biinnnggggg"},"content":"     * Prints the Wazowski logo as ASCII art.","lastModifiedDate":"2024-01-25"},{"lineNumber":80,"author":{"gitId":"biinnnggggg"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":81,"author":{"gitId":"biinnnggggg"},"content":"    private void displayLogo() {","lastModifiedDate":"2024-01-25"},{"lineNumber":82,"author":{"gitId":"biinnnggggg"},"content":"        display(logo);","lastModifiedDate":"2024-01-25"},{"lineNumber":83,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":84,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":85,"author":{"gitId":"biinnnggggg"},"content":"    private void displayGreeting() {","lastModifiedDate":"2024-01-25"},{"lineNumber":86,"author":{"gitId":"biinnnggggg"},"content":"        String greeting \u003d","lastModifiedDate":"2024-01-25"},{"lineNumber":87,"author":{"gitId":"biinnnggggg"},"content":"                \" Hello! I\u0027m mike WAZOWSKI.\\n\"","lastModifiedDate":"2024-02-11"},{"lineNumber":88,"author":{"gitId":"biinnnggggg"},"content":"                + \" What can I do for you?\";","lastModifiedDate":"2024-02-11"},{"lineNumber":89,"author":{"gitId":"biinnnggggg"},"content":"        display(greeting);","lastModifiedDate":"2024-01-25"},{"lineNumber":90,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":91,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":92,"author":{"gitId":"biinnnggggg"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"biinnnggggg"},"content":"     * Displays a horizontal line to the user.","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"biinnnggggg"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"biinnnggggg"},"content":"    public static void displayLine() {","lastModifiedDate":"2024-01-29"},{"lineNumber":96,"author":{"gitId":"biinnnggggg"},"content":"        display(horizontalLine);","lastModifiedDate":"2024-01-25"},{"lineNumber":97,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":98,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":99,"author":{"gitId":"biinnnggggg"},"content":"    public void close() {","lastModifiedDate":"2024-02-03"},{"lineNumber":100,"author":{"gitId":"biinnnggggg"},"content":"        scanner.close();","lastModifiedDate":"2024-02-03"},{"lineNumber":101,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":102,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":103,"author":{"gitId":"biinnnggggg"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"biinnnggggg":103}},{"path":"src/main/java/mike/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"biinnnggggg"},"content":"package mike.command;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"biinnnggggg"},"content":"import mike.TaskList;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"biinnnggggg"},"content":"import mike.task.Task;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"biinnnggggg"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"biinnnggggg"},"content":" * Base class for all commands to add tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"biinnnggggg"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"biinnnggggg"},"content":"public abstract class AddCommand extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"biinnnggggg"},"content":"    protected final String description;","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"biinnnggggg"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"biinnnggggg"},"content":"     * Constructor.","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"biinnnggggg"},"content":"     * @param description The add command description.","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"biinnnggggg"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"biinnnggggg"},"content":"    public AddCommand(String description) {","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"biinnnggggg"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"biinnnggggg"},"content":"    protected String response(TaskList taskList, Task newTask) {","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"biinnnggggg"},"content":"        return \"Got it, I\u0027ve added this task:\\n  \"","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"biinnnggggg"},"content":"                + newTask + \"\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"biinnnggggg"},"content":"                + \"Now you have \" + taskList.size() + \" tasks in the list.\";","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"biinnnggggg"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"biinnnggggg":25}},{"path":"src/main/java/mike/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"biinnnggggg"},"content":"package mike.command;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"biinnnggggg"},"content":"import mike.MikeException;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"biinnnggggg"},"content":"import mike.TaskList;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"biinnnggggg"},"content":"import mike.task.Deadline;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"biinnnggggg"},"content":"import mike.task.Task;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"biinnnggggg"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"biinnnggggg"},"content":" * Adds deadline to the task list.","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"biinnnggggg"},"content":" * @author ningc","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"biinnnggggg"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"biinnnggggg"},"content":"public class AddDeadlineCommand extends AddCommand {","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"biinnnggggg"},"content":"    private final String deadline;","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"biinnnggggg"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"biinnnggggg"},"content":"     * Constructor.","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"biinnnggggg"},"content":"     * @param description What the task is.","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"biinnnggggg"},"content":"     * @param deadline When the task is due.","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"biinnnggggg"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"biinnnggggg"},"content":"    public AddDeadlineCommand(String description, String deadline) {","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"biinnnggggg"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"biinnnggggg"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"biinnnggggg"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"biinnnggggg"},"content":"    public String execute(TaskList taskList) throws MikeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"biinnnggggg"},"content":"        Task newTask \u003d new Deadline(description, deadline);","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"biinnnggggg"},"content":"        taskList.add(newTask);","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"biinnnggggg"},"content":"        return response(taskList, newTask);","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"biinnnggggg"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"biinnnggggg"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"biinnnggggg"},"content":"        return false;","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"biinnnggggg"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"biinnnggggg"},"content":"    public String toString() {","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"biinnnggggg"},"content":"        return \"ADD DEADLINE \" + description + \" \" + deadline;","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"biinnnggggg"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"biinnnggggg":41}},{"path":"src/main/java/mike/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"biinnnggggg"},"content":"package mike.command;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"biinnnggggg"},"content":"import mike.MikeException;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"biinnnggggg"},"content":"import mike.TaskList;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"biinnnggggg"},"content":"import mike.task.Event;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"biinnnggggg"},"content":"import mike.task.Task;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"biinnnggggg"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"biinnnggggg"},"content":" * Adds event to the task list.","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"biinnnggggg"},"content":" * @author ningc","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"biinnnggggg"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"biinnnggggg"},"content":"public class AddEventCommand extends AddCommand {","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"biinnnggggg"},"content":"    private final String startDate;","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"biinnnggggg"},"content":"    private final String endDate;","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"biinnnggggg"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"biinnnggggg"},"content":"     * Constructor.","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"biinnnggggg"},"content":"     * @param description What the event is about.","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"biinnnggggg"},"content":"     * @param startDate When the event starts.","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"biinnnggggg"},"content":"     * @param endDate When the event ends.","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"biinnnggggg"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"biinnnggggg"},"content":"    public AddEventCommand(String description, String startDate, String endDate) {","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"biinnnggggg"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"biinnnggggg"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"biinnnggggg"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"biinnnggggg"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"biinnnggggg"},"content":"    public String execute(TaskList taskList) throws MikeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"biinnnggggg"},"content":"        Task newTask \u003d new Event(description, startDate, endDate);","lastModifiedDate":"2024-01-26"},{"lineNumber":31,"author":{"gitId":"biinnnggggg"},"content":"        taskList.add(newTask);","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"biinnnggggg"},"content":"        return response(taskList, newTask);","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"biinnnggggg"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"biinnnggggg"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"biinnnggggg"},"content":"        return false;","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"biinnnggggg"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"biinnnggggg"},"content":"    public String toString() {","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"biinnnggggg"},"content":"        return \"ADD EVENT \" + description + \" \" + startDate + \" \" + endDate;","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"biinnnggggg"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"biinnnggggg":44}},{"path":"src/main/java/mike/command/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"biinnnggggg"},"content":"package mike.command;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"biinnnggggg"},"content":"import mike.MikeException;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"biinnnggggg"},"content":"import mike.TaskList;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"biinnnggggg"},"content":"import mike.task.Task;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"biinnnggggg"},"content":"import mike.task.Todo;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"biinnnggggg"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"biinnnggggg"},"content":" * Adds a Todo to the task list.","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"biinnnggggg"},"content":" * @author ningc","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"biinnnggggg"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"biinnnggggg"},"content":"public class AddTodoCommand extends AddCommand {","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"biinnnggggg"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"biinnnggggg"},"content":"     * Constructor.","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"biinnnggggg"},"content":"     * @param description What the todo task is about.","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"biinnnggggg"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"biinnnggggg"},"content":"    public AddTodoCommand(String description) {","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"biinnnggggg"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"biinnnggggg"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"biinnnggggg"},"content":"    public String execute(TaskList taskList) throws MikeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"biinnnggggg"},"content":"        Task newTask \u003d new Todo(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"biinnnggggg"},"content":"        taskList.add(newTask);","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"biinnnggggg"},"content":"        return response(taskList, newTask);","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"biinnnggggg"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"biinnnggggg"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"biinnnggggg"},"content":"        return false;","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"biinnnggggg"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"biinnnggggg"},"content":"    public String toString() {","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"biinnnggggg"},"content":"        return \"ADD TODO \" + description;","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"biinnnggggg"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"biinnnggggg":38}},{"path":"src/main/java/mike/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"biinnnggggg"},"content":"package mike.command;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"biinnnggggg"},"content":"import mike.MikeException;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"biinnnggggg"},"content":"import mike.TaskList;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"biinnnggggg"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"biinnnggggg"},"content":" * Base class for all commands.","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"biinnnggggg"},"content":" * Represents common attributes shared among different types of commands.","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"biinnnggggg"},"content":" * @author ningc","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"biinnnggggg"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"biinnnggggg"},"content":"public abstract class Command {","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"biinnnggggg"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"biinnnggggg"},"content":"     * Execute the command.","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"biinnnggggg"},"content":"     * @param taskList The list of tasks to be updated.","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"biinnnggggg"},"content":"     * @throws MikeException If command is not executed successfully then the exception is thrown.","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"biinnnggggg"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"biinnnggggg"},"content":"    public abstract String execute(TaskList taskList) throws MikeException;","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"biinnnggggg"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"biinnnggggg"},"content":"     * Getter.","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"biinnnggggg"},"content":"     * @return True is the command is to exit, otherwise false.","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"biinnnggggg"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"biinnnggggg"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"biinnnggggg"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"biinnnggggg":26}},{"path":"src/main/java/mike/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"biinnnggggg"},"content":"package mike.command;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"biinnnggggg"},"content":"import mike.MikeException;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"biinnnggggg"},"content":"import mike.TaskList;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"biinnnggggg"},"content":"import mike.task.Task;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"biinnnggggg"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"biinnnggggg"},"content":" * Deletes a task.","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"biinnnggggg"},"content":" * @author ningc","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"biinnnggggg"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"biinnnggggg"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"biinnnggggg"},"content":"    private final int taskNumber;","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"biinnnggggg"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"biinnnggggg"},"content":"     * Constructor.","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"biinnnggggg"},"content":"     * @param taskNumber The number referring to the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"biinnnggggg"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"biinnnggggg"},"content":"    public DeleteCommand(int taskNumber) {","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"biinnnggggg"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"biinnnggggg"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"biinnnggggg"},"content":"    public String execute(TaskList taskList) throws MikeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"biinnnggggg"},"content":"        int taskIndex \u003d taskNumber - 1;","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"biinnnggggg"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"biinnnggggg"},"content":"            throw new MikeException(\"There are no tasks to remove.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"biinnnggggg"},"content":"        } else if (taskIndex \u003e\u003d taskList.size() || taskIndex \u003c 0) {","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"biinnnggggg"},"content":"            throw new MikeException(\"That task doesn\u0027t exist. Please enter a number in the range 1-\"","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"biinnnggggg"},"content":"                    + taskList.size() + \".\");","lastModifiedDate":"2024-02-11"},{"lineNumber":31,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"biinnnggggg"},"content":"        Task task \u003d taskList.get(taskIndex);","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"biinnnggggg"},"content":"        taskList.remove(taskIndex);","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"biinnnggggg"},"content":"        return response(taskList, task);","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"biinnnggggg"},"content":"    private String response(TaskList taskList, Task deletedTask) {","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"biinnnggggg"},"content":"        return \"Noted! I\u0027ve removed this task:\\n  \"","lastModifiedDate":"2024-02-11"},{"lineNumber":41,"author":{"gitId":"biinnnggggg"},"content":"                + deletedTask + \"\\n\"","lastModifiedDate":"2024-02-11"},{"lineNumber":42,"author":{"gitId":"biinnnggggg"},"content":"                + \"Now you have \" + taskList.size() + \" tasks in the list.\";","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"biinnnggggg"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"biinnnggggg"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"biinnnggggg"},"content":"        return false;","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"biinnnggggg"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"biinnnggggg"},"content":"    public String toString() {","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"biinnnggggg"},"content":"        return \"DELETE TASK \" + taskNumber;","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"biinnnggggg"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"biinnnggggg":55}},{"path":"src/main/java/mike/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"biinnnggggg"},"content":"package mike.command;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"biinnnggggg"},"content":"import mike.TaskList;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"biinnnggggg"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"biinnnggggg"},"content":" * Exits the program.","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"biinnnggggg"},"content":" * @author ningc","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"biinnnggggg"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"biinnnggggg"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"biinnnggggg"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"biinnnggggg"},"content":"    public String execute(TaskList taskList) {","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"biinnnggggg"},"content":"        return response();","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"biinnnggggg"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"biinnnggggg"},"content":"     * Returns a farewell message with Wazowski pizazz.","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"biinnnggggg"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"biinnnggggg"},"content":"    private String response() {","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"biinnnggggg"},"content":"        return \" Where are you going? We\u0027ll talk.\\n\"","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"biinnnggggg"},"content":"                + \" We\u0027ll have a latte.\";","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"biinnnggggg"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"biinnnggggg"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"biinnnggggg"},"content":"        return true;","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"biinnnggggg"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"biinnnggggg"},"content":"    public String toString() {","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"biinnnggggg"},"content":"        return \"EXIT\";","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"biinnnggggg"},"content":"}","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"biinnnggggg":34}},{"path":"src/main/java/mike/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"biinnnggggg"},"content":"package mike.command;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"biinnnggggg"},"content":"import mike.ListView;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"biinnnggggg"},"content":"import mike.ListViewType;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"biinnnggggg"},"content":"import mike.MikeException;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"biinnnggggg"},"content":"import mike.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"biinnnggggg"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"biinnnggggg"},"content":" * Lists the tasks containing a keyword.","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"biinnnggggg"},"content":" * @author ningc","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"biinnnggggg"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"biinnnggggg"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"biinnnggggg"},"content":"    private final String keyword;","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"biinnnggggg"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"biinnnggggg"},"content":"     * Constructor.","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"biinnnggggg"},"content":"     * @param keyword Keyword to be found.","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"biinnnggggg"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"biinnnggggg"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"biinnnggggg"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"biinnnggggg"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"biinnnggggg"},"content":"    public String execute(TaskList taskList) throws MikeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"biinnnggggg"},"content":"        ListView listView \u003d new ListView(ListViewType.DESCRIPTION, keyword);","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"biinnnggggg"},"content":"        return new ListCommand(listView).execute(taskList);","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"biinnnggggg"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"biinnnggggg"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"biinnnggggg"},"content":"        return false;","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"biinnnggggg"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"biinnnggggg"},"content":"    public String toString() {","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"biinnnggggg"},"content":"        return \"FIND \" + keyword;","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"biinnnggggg"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"biinnnggggg":38}},{"path":"src/main/java/mike/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"biinnnggggg"},"content":"package mike.command;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"biinnnggggg"},"content":"import mike.ListView;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"biinnnggggg"},"content":"import mike.MikeException;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"biinnnggggg"},"content":"import mike.TaskList;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"biinnnggggg"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"biinnnggggg"},"content":" * Lists the tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"biinnnggggg"},"content":" * @author ningc","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"biinnnggggg"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"biinnnggggg"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"biinnnggggg"},"content":"    private final ListView listView;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"biinnnggggg"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"biinnnggggg"},"content":"     * Constructor.","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"biinnnggggg"},"content":"     * @param listView The view of the list subject to a filter.","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"biinnnggggg"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"biinnnggggg"},"content":"    public ListCommand(ListView listView) {","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"biinnnggggg"},"content":"        this.listView \u003d listView;","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"biinnnggggg"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"biinnnggggg"},"content":"    public String execute(TaskList taskList) throws MikeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"biinnnggggg"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"biinnnggggg"},"content":"            throw new MikeException(\"You have no more tasks Sulley...\");","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"biinnnggggg"},"content":"        return response(taskList);","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"biinnnggggg"},"content":"    private String response(TaskList taskList) {","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"biinnnggggg"},"content":"        return \"You and I are a team.\\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"biinnnggggg"},"content":"                + \"Here is the task list:\"","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"biinnnggggg"},"content":"                + taskList.view(listView);","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"biinnnggggg"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"biinnnggggg"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"biinnnggggg"},"content":"        return false;","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"biinnnggggg"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"biinnnggggg"},"content":"    public String toString() {","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"biinnnggggg"},"content":"        return \"LIST \" + listView;","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"biinnnggggg"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"biinnnggggg":45}},{"path":"src/main/java/mike/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"biinnnggggg"},"content":"package mike.command;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"biinnnggggg"},"content":"import mike.MikeException;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"biinnnggggg"},"content":"import mike.TaskList;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"biinnnggggg"},"content":"import mike.task.Task;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"biinnnggggg"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"biinnnggggg"},"content":" * Marks task as done.","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"biinnnggggg"},"content":" * @author ningc","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"biinnnggggg"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"biinnnggggg"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"biinnnggggg"},"content":"    private final int taskNumber;","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"biinnnggggg"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"biinnnggggg"},"content":"     * Constructor.","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"biinnnggggg"},"content":"     * @param taskNumber The number that refers to the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"biinnnggggg"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"biinnnggggg"},"content":"    public MarkCommand(int taskNumber) {","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"biinnnggggg"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"biinnnggggg"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"biinnnggggg"},"content":"    public String execute(TaskList taskList) throws MikeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"biinnnggggg"},"content":"        int taskIndex \u003d taskNumber - 1;","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"biinnnggggg"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"biinnnggggg"},"content":"            throw new MikeException(\"There are no tasks to mark. Please add a task first.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"biinnnggggg"},"content":"        } else if (taskIndex \u003e\u003d taskList.size() || taskIndex \u003c 0) {","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"biinnnggggg"},"content":"            throw new MikeException(\"That\u0027s suspicious. Please enter a number in the range 1-\" + taskList.size() + \".\");","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"biinnnggggg"},"content":"        Task task \u003d taskList.get(taskIndex);","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"biinnnggggg"},"content":"        return task.markAsDone();","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"biinnnggggg"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"biinnnggggg"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"biinnnggggg"},"content":"        return false;","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"biinnnggggg"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"biinnnggggg"},"content":"    public String toString() {","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"biinnnggggg"},"content":"        return \"MARK \" + taskNumber;","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"biinnnggggg"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"biinnnggggg":45}},{"path":"src/main/java/mike/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"biinnnggggg"},"content":"package mike.command;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"biinnnggggg"},"content":"import mike.MikeException;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"biinnnggggg"},"content":"import mike.TaskList;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"biinnnggggg"},"content":"import mike.task.Task;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"biinnnggggg"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"biinnnggggg"},"content":" * Command to unmark a task.","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"biinnnggggg"},"content":" * @author ningc","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"biinnnggggg"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"biinnnggggg"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"biinnnggggg"},"content":"    private final int taskNumber;","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"biinnnggggg"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"biinnnggggg"},"content":"     * Constructor.","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"biinnnggggg"},"content":"     * @param taskNumber The number indexing the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"biinnnggggg"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"biinnnggggg"},"content":"    public UnmarkCommand(int taskNumber) {","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"biinnnggggg"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"biinnnggggg"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"biinnnggggg"},"content":"    public String execute(TaskList taskList) throws MikeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"biinnnggggg"},"content":"        int taskIndex \u003d taskNumber - 1;","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"biinnnggggg"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"biinnnggggg"},"content":"            throw new MikeException(\"There are no tasks to mark. Please add a task first.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"biinnnggggg"},"content":"        } else if (taskIndex \u003e\u003d taskList.size() || taskIndex \u003c 0) {","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"biinnnggggg"},"content":"            throw new MikeException(\"That\u0027s suspicious. Please enter a number in the range 1-\" + taskList.size() + \".\");","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"biinnnggggg"},"content":"        Task task \u003d taskList.get(taskIndex);","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"biinnnggggg"},"content":"        return task.markAsNotDone();","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"biinnnggggg"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"biinnnggggg"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"biinnnggggg"},"content":"        return false;","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"biinnnggggg"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"biinnnggggg"},"content":"    public String toString() {","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"biinnnggggg"},"content":"        return \"UNMARK \" + taskNumber;","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"biinnnggggg"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"biinnnggggg":45}},{"path":"src/main/java/mike/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"biinnnggggg"},"content":"package mike.task;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"biinnnggggg"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"biinnnggggg"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"biinnnggggg"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"biinnnggggg"},"content":"import mike.ListView;","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"biinnnggggg"},"content":"import mike.ListViewType;","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"biinnnggggg"},"content":"import mike.MikeException;","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"biinnnggggg"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"biinnnggggg"},"content":" * A Deadline task.","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"biinnnggggg"},"content":" * @author ningc","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"biinnnggggg"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"biinnnggggg"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"biinnnggggg"},"content":"    private static final String TYPE \u003d \"Deadline\";","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"biinnnggggg"},"content":"    private final LocalDate deadline;","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"biinnnggggg"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"biinnnggggg"},"content":"     * Constructor.","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"biinnnggggg"},"content":"     * @param description The deadline task.","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"biinnnggggg"},"content":"     * @param deadline When the task is due.","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"biinnnggggg"},"content":"     * @throws MikeException If deadline String cannot be parsed as a {@link LocalDate} object.","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"biinnnggggg"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"biinnnggggg"},"content":"    public Deadline(String description, String deadline) throws MikeException {","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"biinnnggggg"},"content":"        super(description, TYPE);","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"biinnnggggg"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"biinnnggggg"},"content":"            this.deadline \u003d LocalDate.parse(deadline);","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"biinnnggggg"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"biinnnggggg"},"content":"            throw new MikeException(\"Please enter a valid date in YYYY-MM-DD format.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"biinnnggggg"},"content":"        tags.add(ListViewType.DATE);","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"biinnnggggg"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"biinnnggggg"},"content":"    public boolean inListView(ListView listView) {","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"biinnnggggg"},"content":"        return super.inListView(listView) \u0026\u0026 listView.dateFilter(deadline) \u0026\u0026 listView.descriptionFilter(description);","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":39,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":40,"author":{"gitId":"biinnnggggg"},"content":"    private String getDeadline() {","lastModifiedDate":"2024-01-26"},{"lineNumber":41,"author":{"gitId":"biinnnggggg"},"content":"        return deadline.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"biinnnggggg"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"biinnnggggg"},"content":"    public String getFileEncoding() {","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"biinnnggggg"},"content":"        return super.getFileEncoding() + \",\" + deadline;","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"biinnnggggg"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"biinnnggggg"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"biinnnggggg"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + getDeadline() + \")\";","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":53,"author":{"gitId":"biinnnggggg"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"biinnnggggg":53}},{"path":"src/main/java/mike/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"biinnnggggg"},"content":"package mike.task;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"biinnnggggg"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"biinnnggggg"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"biinnnggggg"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"biinnnggggg"},"content":"import mike.ListView;","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"biinnnggggg"},"content":"import mike.ListViewType;","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"biinnnggggg"},"content":"import mike.MikeException;","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"biinnnggggg"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"biinnnggggg"},"content":" * An event, with a start date and end date.","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"biinnnggggg"},"content":" * @author ningc","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"biinnnggggg"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"biinnnggggg"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"biinnnggggg"},"content":"    private static final String TYPE \u003d \"Event\";","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"biinnnggggg"},"content":"    private final LocalDate startDate;","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"biinnnggggg"},"content":"    private final LocalDate endDate;","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"biinnnggggg"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"biinnnggggg"},"content":"     * Constructor.","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"biinnnggggg"},"content":"     * @param description The event description.","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"biinnnggggg"},"content":"     * @param startDate When the event starts.","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"biinnnggggg"},"content":"     * @param endDate When the event ends.","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"biinnnggggg"},"content":"     * @throws MikeException If the start date or end date cannot be parsed as a {@link LocalDate} object.","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"biinnnggggg"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"biinnnggggg"},"content":"    public Event(String description, String startDate, String endDate) throws MikeException {","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"biinnnggggg"},"content":"        super(description, TYPE);","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"biinnnggggg"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"biinnnggggg"},"content":"            this.startDate \u003d LocalDate.parse(startDate);","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"biinnnggggg"},"content":"            this.endDate \u003d LocalDate.parse(endDate);","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"biinnnggggg"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"biinnnggggg"},"content":"            // todo: move this to parser?","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"biinnnggggg"},"content":"            throw new MikeException(\"Please enter a valid date in YYYY-MM-DD format.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"biinnnggggg"},"content":"        tags.add(ListViewType.DATE);","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"biinnnggggg"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"biinnnggggg"},"content":"    public boolean inListView(ListView listView) {","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"biinnnggggg"},"content":"        return super.inListView(listView) \u0026\u0026 listView.dateFilter(startDate);","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":43,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":44,"author":{"gitId":"biinnnggggg"},"content":"    private String getStartDate() {","lastModifiedDate":"2024-01-26"},{"lineNumber":45,"author":{"gitId":"biinnnggggg"},"content":"        return startDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":47,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":48,"author":{"gitId":"biinnnggggg"},"content":"    private String getEndDate() {","lastModifiedDate":"2024-01-26"},{"lineNumber":49,"author":{"gitId":"biinnnggggg"},"content":"        return endDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"biinnnggggg"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"biinnnggggg"},"content":"    public String getFileEncoding() {","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"biinnnggggg"},"content":"        return super.getFileEncoding() + \",\" + getStartDate() + \",\" + getEndDate();","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":56,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":57,"author":{"gitId":"biinnnggggg"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":58,"author":{"gitId":"biinnnggggg"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":59,"author":{"gitId":"biinnnggggg"},"content":"        return \"[E]\" + super.toString() + \" (from:\" + getStartDate() + \" to:\" + getEndDate() + \")\";","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":61,"author":{"gitId":"biinnnggggg"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"biinnnggggg":61}},{"path":"src/main/java/mike/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"biinnnggggg"},"content":"package mike.task;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"biinnnggggg"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"biinnnggggg"},"content":"import mike.ListView;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"biinnnggggg"},"content":"import mike.ListViewType;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"biinnnggggg"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"biinnnggggg"},"content":" * Base class for all tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"biinnnggggg"},"content":" * Represents common attributes shared among different types of tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"biinnnggggg"},"content":" * @author ningc","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"biinnnggggg"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"biinnnggggg"},"content":"public abstract class Task {","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"biinnnggggg"},"content":"    protected final String description;","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"biinnnggggg"},"content":"    protected final ArrayList\u003cListViewType\u003e tags;","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"biinnnggggg"},"content":"    private final String type;","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"biinnnggggg"},"content":"    private boolean isDone;","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"biinnnggggg"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"biinnnggggg"},"content":"     * Constructor.","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"biinnnggggg"},"content":"     * @param description What the task does.","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"biinnnggggg"},"content":"     * @param type The type of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"biinnnggggg"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"biinnnggggg"},"content":"    public Task(String description, String type) {","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"biinnnggggg"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"biinnnggggg"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"biinnnggggg"},"content":"        this.type \u003d type;","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"biinnnggggg"},"content":"        this.tags \u003d new ArrayList\u003cListViewType\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"biinnnggggg"},"content":"        tags.add(ListViewType.NONE);","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"biinnnggggg"},"content":"        tags.add(ListViewType.DESCRIPTION);","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"biinnnggggg"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"biinnnggggg"},"content":"     * Check if the event should be in the list view.","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"biinnnggggg"},"content":"     * @param listView View of the list visible to user.","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"biinnnggggg"},"content":"     * @return True if event should be in list view, otherwise false.","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"biinnnggggg"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"biinnnggggg"},"content":"    public boolean inListView(ListView listView) {","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"biinnnggggg"},"content":"        return tags.contains(listView.getType()) \u0026\u0026 listView.descriptionFilter(description);","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"biinnnggggg"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"biinnnggggg"},"content":"     * Mark a task as done.","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"biinnnggggg"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"biinnnggggg"},"content":"    public String markAsDone() {","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"biinnnggggg"},"content":"        String response \u003d this.isDone ? \"This task is already done:\" : \"Nice! I\u0027ve marked this task as done:\";","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"biinnnggggg"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"biinnnggggg"},"content":"        return response + \"\\n\" + this;","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"biinnnggggg"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"biinnnggggg"},"content":"     * Mark a task as not done.","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"biinnnggggg"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"biinnnggggg"},"content":"    public String markAsNotDone() {","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"biinnnggggg"},"content":"        String response \u003d this.isDone ? \"I\u0027ve marked this task as not done:\" : \"This task was never done:\";","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"biinnnggggg"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":57,"author":{"gitId":"biinnnggggg"},"content":"        return response + \"\\n\" + this;","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":59,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":60,"author":{"gitId":"biinnnggggg"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"biinnnggggg"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-01-25"},{"lineNumber":62,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":63,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":64,"author":{"gitId":"biinnnggggg"},"content":"    private String getDescription() {","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"biinnnggggg"},"content":"        return description;","lastModifiedDate":"2024-01-25"},{"lineNumber":66,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":67,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":68,"author":{"gitId":"biinnnggggg"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"biinnnggggg"},"content":"     * Getter.","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"biinnnggggg"},"content":"     * @return string representation of Task status.","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"biinnnggggg"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"biinnnggggg"},"content":"    public String getIsDone() {","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"biinnnggggg"},"content":"        return isDone ? \"true\" : \"false\";","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":75,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":76,"author":{"gitId":"biinnnggggg"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"biinnnggggg"},"content":"     * Getter.","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"biinnnggggg"},"content":"     * @return string representation of Task type.","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"biinnnggggg"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"biinnnggggg"},"content":"    public String getType() {","lastModifiedDate":"2024-01-29"},{"lineNumber":81,"author":{"gitId":"biinnnggggg"},"content":"        return type;","lastModifiedDate":"2024-01-29"},{"lineNumber":82,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":83,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":84,"author":{"gitId":"biinnnggggg"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"biinnnggggg"},"content":"     * Getter.","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"biinnnggggg"},"content":"     * @return The encoding of Task that is written to file.","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"biinnnggggg"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"biinnnggggg"},"content":"    public String getFileEncoding() {","lastModifiedDate":"2024-01-29"},{"lineNumber":89,"author":{"gitId":"biinnnggggg"},"content":"        return getType() + \",\" + getDescription() + \",\" + getIsDone();","lastModifiedDate":"2024-01-29"},{"lineNumber":90,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":91,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":92,"author":{"gitId":"biinnnggggg"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":93,"author":{"gitId":"biinnnggggg"},"content":"        return \"[\" + getStatusIcon() + \"] \" + getDescription();","lastModifiedDate":"2024-01-26"},{"lineNumber":94,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":95,"author":{"gitId":"biinnnggggg"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"biinnnggggg":95}},{"path":"src/main/java/mike/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"biinnnggggg"},"content":"package mike.task;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"biinnnggggg"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"biinnnggggg"},"content":" * A Todo task.","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"biinnnggggg"},"content":" * @author ningc","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"biinnnggggg"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"biinnnggggg"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"biinnnggggg"},"content":"    private static final String TYPE \u003d \"Todo\";","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"biinnnggggg"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"biinnnggggg"},"content":"     * Todo task contains a description of what to do.","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"biinnnggggg"},"content":"     * @param description what it is the user needs to do.","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"biinnnggggg"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"biinnnggggg"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"biinnnggggg"},"content":"        super(description, TYPE);","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"biinnnggggg"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"biinnnggggg"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"biinnnggggg"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"biinnnggggg"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"biinnnggggg":22}},{"path":"src/test/java/mike/CommandParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"biinnnggggg"},"content":"package mike;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"biinnnggggg"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"biinnnggggg"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"biinnnggggg"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"biinnnggggg"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"biinnnggggg"},"content":"import java.util.List;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"biinnnggggg"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"biinnnggggg"},"content":"import mike.command.Command;","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"biinnnggggg"},"content":"import mike.command.ExitCommand;","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"biinnnggggg"},"content":"import mike.command.ListCommand;","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"biinnnggggg"},"content":"import mike.command.MarkCommand;","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"biinnnggggg"},"content":"public class CommandParserTest {","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"biinnnggggg"},"content":"    // command tokens","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"biinnnggggg"},"content":"    private static final Token exitToken \u003d new Token(TokenType.EXIT, \"exit\");","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"biinnnggggg"},"content":"    private static final Token listToken \u003d new Token(TokenType.LIST, \"list\");","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"biinnnggggg"},"content":"    private static final Token todoToken \u003d new Token(TokenType.TODO, \"todo\");","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"biinnnggggg"},"content":"    private static final Token deadlineToken \u003d new Token(TokenType.DEADLINE, \"deadline\");","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"biinnnggggg"},"content":"    private static final Token eventToken \u003d new Token(TokenType.EVENT, \"event\");","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"biinnnggggg"},"content":"    private static final Token markToken \u003d new Token(TokenType.MARK, \"mark\");","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"biinnnggggg"},"content":"    private static final Token unmarkToken \u003d new Token(TokenType.UNMARK, \"unmark\");","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"biinnnggggg"},"content":"    private static final Token findToken \u003d new Token(TokenType.FIND, \"find\");","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"biinnnggggg"},"content":"    // other","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"biinnnggggg"},"content":"    private static final Token forwardDashToken \u003d new Token(TokenType.FORWARD_DASH, \"/\");","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"biinnnggggg"},"content":"    private static final Token eocToken \u003d new Token(TokenType.EOC, \"\");","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"biinnnggggg"},"content":"    // parameter tokens","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"biinnnggggg"},"content":"    private static final Token byParamToken \u003d new Token(TokenType.PARAM, \"by\");","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"biinnnggggg"},"content":"    private static final Token fromParamToken \u003d new Token(TokenType.PARAM, \"from\");","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"biinnnggggg"},"content":"    private static final Token toParamToken \u003d new Token(TokenType.PARAM, \"to\");","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"biinnnggggg"},"content":"    private static final Token viewParamToken \u003d new Token(TokenType.PARAM, \"view\");","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"biinnnggggg"},"content":"    private static final Token attributeParamToken \u003d new Token(TokenType.PARAM, \"attribute\");","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"biinnnggggg"},"content":"    // literal tokens","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"biinnnggggg"},"content":"    private static final Token literalToken \u003d new Token(TokenType.LITERAL, \"random literal\");","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"biinnnggggg"},"content":"    private static final Token descriptionToken \u003d new Token(TokenType.LITERAL, \"task description\");","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"biinnnggggg"},"content":"    private static final Token dateToken1 \u003d new Token(TokenType.LITERAL, \"2024-01-31\");","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"biinnnggggg"},"content":"    private static final Token dateToken2 \u003d new Token(TokenType.LITERAL, \"2024-02-31\");","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"biinnnggggg"},"content":"    private static final Token dateArgumentToken \u003d new Token(TokenType.LITERAL, \"date\");","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"biinnnggggg"},"content":"    private static final Token numberToken \u003d new Token(TokenType.LITERAL, \"1\");","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"biinnnggggg"},"content":"    private static final Token descriptionArgumentToken \u003d new Token(TokenType.LITERAL, \"description\");","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"biinnnggggg"},"content":"    private static final Token keywordToken \u003d new Token(TokenType.LITERAL, \"desc\");","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"biinnnggggg"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"biinnnggggg"},"content":"    public void parse_exitValidTokenList_exitCommand() throws MikeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"biinnnggggg"},"content":"        List\u003cToken\u003e tokens \u003d createTokenList(exitToken, eocToken);","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"biinnnggggg"},"content":"        ExitCommand expectedCommand \u003d new ExitCommand();","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"biinnnggggg"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"biinnnggggg"},"content":"            assertEquals(new CommandParser(tokens).parse().toString(), expectedCommand.toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"biinnnggggg"},"content":"        } catch (MikeException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"biinnnggggg"},"content":"            assertEquals(\"Usage: bye\", e.getMessage());","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"biinnnggggg"},"content":"            fail();","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"biinnnggggg"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"biinnnggggg"},"content":"    public void parse_exitInvalidTokenList_exceptionThrown() {","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"biinnnggggg"},"content":"        List\u003cToken\u003e tokens;","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"biinnnggggg"},"content":"        // literal after exit command","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"biinnnggggg"},"content":"        tokens \u003d createTokenList(exitToken, literalToken, eocToken);","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"biinnnggggg"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"biinnnggggg"},"content":"            new CommandParser(tokens).parse();","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"biinnnggggg"},"content":"            fail();","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"biinnnggggg"},"content":"        } catch (MikeException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"biinnnggggg"},"content":"            assertEquals(\"Usage: bye\", e.getMessage());","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"biinnnggggg"},"content":"        // forward dash after exit command","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"biinnnggggg"},"content":"        tokens \u003d createTokenList(exitToken, forwardDashToken, eocToken);","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"biinnnggggg"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"biinnnggggg"},"content":"            new CommandParser(tokens).parse();","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"biinnnggggg"},"content":"            fail();","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"biinnnggggg"},"content":"        } catch (MikeException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"biinnnggggg"},"content":"            assertEquals(\"Usage: bye\", e.getMessage());","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"biinnnggggg"},"content":"        // forward dash, parameter, argument after exit command","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"biinnnggggg"},"content":"        tokens \u003d createTokenList(exitToken, forwardDashToken, byParamToken, literalToken, eocToken);","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"biinnnggggg"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"biinnnggggg"},"content":"            new CommandParser(tokens).parse();","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"biinnnggggg"},"content":"            fail();","lastModifiedDate":"2024-02-03"},{"lineNumber":89,"author":{"gitId":"biinnnggggg"},"content":"        } catch (MikeException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":90,"author":{"gitId":"biinnnggggg"},"content":"            assertEquals(\"Usage: bye\", e.getMessage());","lastModifiedDate":"2024-02-03"},{"lineNumber":91,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":92,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"biinnnggggg"},"content":"        // no eoc","lastModifiedDate":"2024-02-03"},{"lineNumber":94,"author":{"gitId":"biinnnggggg"},"content":"        /*tokens \u003d createTokenList(exitToken);","lastModifiedDate":"2024-02-03"},{"lineNumber":95,"author":{"gitId":"biinnnggggg"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":96,"author":{"gitId":"biinnnggggg"},"content":"            new CommandParser(tokens).parse();","lastModifiedDate":"2024-02-03"},{"lineNumber":97,"author":{"gitId":"biinnnggggg"},"content":"            fail();","lastModifiedDate":"2024-02-03"},{"lineNumber":98,"author":{"gitId":"biinnnggggg"},"content":"        } catch (MikeException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":99,"author":{"gitId":"biinnnggggg"},"content":"            assertEquals(\"Usage: bye\", e.getMessage());","lastModifiedDate":"2024-02-03"},{"lineNumber":100,"author":{"gitId":"biinnnggggg"},"content":"        }*/","lastModifiedDate":"2024-02-03"},{"lineNumber":101,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":102,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":103,"author":{"gitId":"biinnnggggg"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":104,"author":{"gitId":"biinnnggggg"},"content":"    public void parse_listValidTokenList_listCommand() {","lastModifiedDate":"2024-02-03"},{"lineNumber":105,"author":{"gitId":"biinnnggggg"},"content":"        List\u003cToken\u003e tokens;","lastModifiedDate":"2024-02-03"},{"lineNumber":106,"author":{"gitId":"biinnnggggg"},"content":"        Command outputCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":107,"author":{"gitId":"biinnnggggg"},"content":"        ListCommand expectedCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":108,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":109,"author":{"gitId":"biinnnggggg"},"content":"        // list default","lastModifiedDate":"2024-02-03"},{"lineNumber":110,"author":{"gitId":"biinnnggggg"},"content":"        tokens \u003d createTokenList(listToken, eocToken);","lastModifiedDate":"2024-02-03"},{"lineNumber":111,"author":{"gitId":"biinnnggggg"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":112,"author":{"gitId":"biinnnggggg"},"content":"            expectedCommand \u003d new ListCommand(new ListView(ListViewType.NONE));","lastModifiedDate":"2024-02-03"},{"lineNumber":113,"author":{"gitId":"biinnnggggg"},"content":"            outputCommand \u003d new CommandParser(tokens).parse();","lastModifiedDate":"2024-02-03"},{"lineNumber":114,"author":{"gitId":"biinnnggggg"},"content":"            assertEquals(outputCommand.toString(), expectedCommand.toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":115,"author":{"gitId":"biinnnggggg"},"content":"        } catch (MikeException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":116,"author":{"gitId":"biinnnggggg"},"content":"            fail();","lastModifiedDate":"2024-02-03"},{"lineNumber":117,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":118,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":119,"author":{"gitId":"biinnnggggg"},"content":"        // list with view date","lastModifiedDate":"2024-02-03"},{"lineNumber":120,"author":{"gitId":"biinnnggggg"},"content":"        tokens \u003d createTokenList(listToken,","lastModifiedDate":"2024-02-03"},{"lineNumber":121,"author":{"gitId":"biinnnggggg"},"content":"                forwardDashToken, viewParamToken, dateArgumentToken,","lastModifiedDate":"2024-02-03"},{"lineNumber":122,"author":{"gitId":"biinnnggggg"},"content":"                forwardDashToken, attributeParamToken, dateToken1,","lastModifiedDate":"2024-02-03"},{"lineNumber":123,"author":{"gitId":"biinnnggggg"},"content":"                eocToken);","lastModifiedDate":"2024-02-03"},{"lineNumber":124,"author":{"gitId":"biinnnggggg"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":125,"author":{"gitId":"biinnnggggg"},"content":"            expectedCommand \u003d new ListCommand(new ListView(ListViewType.DATE, dateToken1.getText()));","lastModifiedDate":"2024-02-03"},{"lineNumber":126,"author":{"gitId":"biinnnggggg"},"content":"            outputCommand \u003d new CommandParser(tokens).parse();","lastModifiedDate":"2024-02-03"},{"lineNumber":127,"author":{"gitId":"biinnnggggg"},"content":"            assertEquals(outputCommand.toString(), expectedCommand.toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":128,"author":{"gitId":"biinnnggggg"},"content":"        } catch (MikeException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":129,"author":{"gitId":"biinnnggggg"},"content":"            fail();","lastModifiedDate":"2024-02-03"},{"lineNumber":130,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":131,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":132,"author":{"gitId":"biinnnggggg"},"content":"        // list with view keyword","lastModifiedDate":"2024-02-03"},{"lineNumber":133,"author":{"gitId":"biinnnggggg"},"content":"        tokens \u003d createTokenList(listToken,","lastModifiedDate":"2024-02-03"},{"lineNumber":134,"author":{"gitId":"biinnnggggg"},"content":"                forwardDashToken, viewParamToken, descriptionArgumentToken,","lastModifiedDate":"2024-02-03"},{"lineNumber":135,"author":{"gitId":"biinnnggggg"},"content":"                forwardDashToken, attributeParamToken, keywordToken,","lastModifiedDate":"2024-02-03"},{"lineNumber":136,"author":{"gitId":"biinnnggggg"},"content":"                eocToken);","lastModifiedDate":"2024-02-03"},{"lineNumber":137,"author":{"gitId":"biinnnggggg"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":138,"author":{"gitId":"biinnnggggg"},"content":"            expectedCommand \u003d new ListCommand(new ListView(ListViewType.DESCRIPTION, keywordToken.getText()));","lastModifiedDate":"2024-02-03"},{"lineNumber":139,"author":{"gitId":"biinnnggggg"},"content":"            outputCommand \u003d new CommandParser(tokens).parse();","lastModifiedDate":"2024-02-03"},{"lineNumber":140,"author":{"gitId":"biinnnggggg"},"content":"            assertEquals(outputCommand.toString(), expectedCommand.toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":141,"author":{"gitId":"biinnnggggg"},"content":"        } catch (MikeException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":142,"author":{"gitId":"biinnnggggg"},"content":"            fail();","lastModifiedDate":"2024-02-03"},{"lineNumber":143,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":144,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":145,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":146,"author":{"gitId":"biinnnggggg"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":147,"author":{"gitId":"biinnnggggg"},"content":"    public void parse_listInvalidList_exceptionThrown() {","lastModifiedDate":"2024-02-03"},{"lineNumber":148,"author":{"gitId":"biinnnggggg"},"content":"        List\u003cToken\u003e tokens;","lastModifiedDate":"2024-02-03"},{"lineNumber":149,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":150,"author":{"gitId":"biinnnggggg"},"content":"        // unexpected literal","lastModifiedDate":"2024-02-03"},{"lineNumber":151,"author":{"gitId":"biinnnggggg"},"content":"        tokens \u003d createTokenList(listToken, literalToken, eocToken);","lastModifiedDate":"2024-02-03"},{"lineNumber":152,"author":{"gitId":"biinnnggggg"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":153,"author":{"gitId":"biinnnggggg"},"content":"            new CommandParser(tokens).parse();","lastModifiedDate":"2024-02-03"},{"lineNumber":154,"author":{"gitId":"biinnnggggg"},"content":"            fail();","lastModifiedDate":"2024-02-03"},{"lineNumber":155,"author":{"gitId":"biinnnggggg"},"content":"        } catch (MikeException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":156,"author":{"gitId":"biinnnggggg"},"content":"            assertEquals(\"Usage: list\", e.getMessage());","lastModifiedDate":"2024-02-03"},{"lineNumber":157,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":158,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":159,"author":{"gitId":"biinnnggggg"},"content":"        // unexpected literal","lastModifiedDate":"2024-02-03"},{"lineNumber":160,"author":{"gitId":"biinnnggggg"},"content":"        tokens \u003d createTokenList(listToken, literalToken,","lastModifiedDate":"2024-02-03"},{"lineNumber":161,"author":{"gitId":"biinnnggggg"},"content":"                forwardDashToken, viewParamToken, descriptionArgumentToken,","lastModifiedDate":"2024-02-03"},{"lineNumber":162,"author":{"gitId":"biinnnggggg"},"content":"                forwardDashToken, attributeParamToken, keywordToken,","lastModifiedDate":"2024-02-03"},{"lineNumber":163,"author":{"gitId":"biinnnggggg"},"content":"                eocToken);","lastModifiedDate":"2024-02-03"},{"lineNumber":164,"author":{"gitId":"biinnnggggg"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":165,"author":{"gitId":"biinnnggggg"},"content":"            new CommandParser(tokens).parse();","lastModifiedDate":"2024-02-03"},{"lineNumber":166,"author":{"gitId":"biinnnggggg"},"content":"            fail();","lastModifiedDate":"2024-02-03"},{"lineNumber":167,"author":{"gitId":"biinnnggggg"},"content":"        } catch (MikeException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":168,"author":{"gitId":"biinnnggggg"},"content":"            assertEquals(\"Usage: list\", e.getMessage());","lastModifiedDate":"2024-02-03"},{"lineNumber":169,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":170,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":171,"author":{"gitId":"biinnnggggg"},"content":"        // double forward dash","lastModifiedDate":"2024-02-03"},{"lineNumber":172,"author":{"gitId":"biinnnggggg"},"content":"        tokens \u003d createTokenList(listToken, forwardDashToken, attributeParamToken, eocToken);","lastModifiedDate":"2024-02-03"},{"lineNumber":173,"author":{"gitId":"biinnnggggg"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":174,"author":{"gitId":"biinnnggggg"},"content":"            new CommandParser(tokens).parse();","lastModifiedDate":"2024-02-03"},{"lineNumber":175,"author":{"gitId":"biinnnggggg"},"content":"            fail();","lastModifiedDate":"2024-02-03"},{"lineNumber":176,"author":{"gitId":"biinnnggggg"},"content":"        } catch (MikeException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":177,"author":{"gitId":"biinnnggggg"},"content":"            assertEquals(\"Usage: list /view [type] /attribute [attribute]\", e.getMessage());","lastModifiedDate":"2024-02-03"},{"lineNumber":178,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":179,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":180,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":181,"author":{"gitId":"biinnnggggg"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":182,"author":{"gitId":"biinnnggggg"},"content":"    public void parse_markValidTokenList_markCommand() {","lastModifiedDate":"2024-02-03"},{"lineNumber":183,"author":{"gitId":"biinnnggggg"},"content":"        List\u003cToken\u003e tokens;","lastModifiedDate":"2024-02-03"},{"lineNumber":184,"author":{"gitId":"biinnnggggg"},"content":"        Command outputCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":185,"author":{"gitId":"biinnnggggg"},"content":"        MarkCommand expectedCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":186,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":187,"author":{"gitId":"biinnnggggg"},"content":"        // mark default","lastModifiedDate":"2024-02-03"},{"lineNumber":188,"author":{"gitId":"biinnnggggg"},"content":"        tokens \u003d createTokenList(markToken, numberToken, eocToken);","lastModifiedDate":"2024-02-03"},{"lineNumber":189,"author":{"gitId":"biinnnggggg"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":190,"author":{"gitId":"biinnnggggg"},"content":"            expectedCommand \u003d new MarkCommand(Integer.parseInt(numberToken.getText()));","lastModifiedDate":"2024-02-03"},{"lineNumber":191,"author":{"gitId":"biinnnggggg"},"content":"            outputCommand \u003d new CommandParser(tokens).parse();","lastModifiedDate":"2024-02-03"},{"lineNumber":192,"author":{"gitId":"biinnnggggg"},"content":"            assertEquals(outputCommand.toString(), expectedCommand.toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":193,"author":{"gitId":"biinnnggggg"},"content":"        } catch (MikeException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":194,"author":{"gitId":"biinnnggggg"},"content":"            fail();","lastModifiedDate":"2024-02-03"},{"lineNumber":195,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":196,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":197,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":198,"author":{"gitId":"biinnnggggg"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":199,"author":{"gitId":"biinnnggggg"},"content":"    public void parse_markInvalidTokenList_exceptionThrown() {","lastModifiedDate":"2024-02-03"},{"lineNumber":200,"author":{"gitId":"biinnnggggg"},"content":"        List\u003cToken\u003e tokens;","lastModifiedDate":"2024-02-03"},{"lineNumber":201,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":202,"author":{"gitId":"biinnnggggg"},"content":"        // no argument","lastModifiedDate":"2024-02-03"},{"lineNumber":203,"author":{"gitId":"biinnnggggg"},"content":"        tokens \u003d createTokenList(markToken, eocToken);","lastModifiedDate":"2024-02-03"},{"lineNumber":204,"author":{"gitId":"biinnnggggg"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":205,"author":{"gitId":"biinnnggggg"},"content":"            new CommandParser(tokens).parse();","lastModifiedDate":"2024-02-03"},{"lineNumber":206,"author":{"gitId":"biinnnggggg"},"content":"            fail();","lastModifiedDate":"2024-02-03"},{"lineNumber":207,"author":{"gitId":"biinnnggggg"},"content":"        } catch (MikeException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":208,"author":{"gitId":"biinnnggggg"},"content":"            assertEquals(\"Usage: mark [number]\", e.getMessage());","lastModifiedDate":"2024-02-03"},{"lineNumber":209,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":210,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":211,"author":{"gitId":"biinnnggggg"},"content":"        // not a number","lastModifiedDate":"2024-02-03"},{"lineNumber":212,"author":{"gitId":"biinnnggggg"},"content":"        tokens \u003d createTokenList(markToken, literalToken, eocToken);","lastModifiedDate":"2024-02-03"},{"lineNumber":213,"author":{"gitId":"biinnnggggg"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":214,"author":{"gitId":"biinnnggggg"},"content":"            new CommandParser(tokens).parse();","lastModifiedDate":"2024-02-03"},{"lineNumber":215,"author":{"gitId":"biinnnggggg"},"content":"            fail();","lastModifiedDate":"2024-02-03"},{"lineNumber":216,"author":{"gitId":"biinnnggggg"},"content":"        } catch (MikeException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":217,"author":{"gitId":"biinnnggggg"},"content":"            assertEquals(\"One, two, three, four, get the kid back through the door!\\n\"","lastModifiedDate":"2024-02-11"},{"lineNumber":218,"author":{"gitId":"biinnnggggg"},"content":"                    + \"\u0027random literal\u0027 is not an integer Sulley...\", e.getMessage());","lastModifiedDate":"2024-02-11"},{"lineNumber":219,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":220,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":221,"author":{"gitId":"biinnnggggg"},"content":"        // option","lastModifiedDate":"2024-02-03"},{"lineNumber":222,"author":{"gitId":"biinnnggggg"},"content":"        tokens \u003d createTokenList(markToken, numberToken,","lastModifiedDate":"2024-02-03"},{"lineNumber":223,"author":{"gitId":"biinnnggggg"},"content":"                forwardDashToken, toParamToken, dateToken1, eocToken);","lastModifiedDate":"2024-02-03"},{"lineNumber":224,"author":{"gitId":"biinnnggggg"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":225,"author":{"gitId":"biinnnggggg"},"content":"            new CommandParser(tokens).parse();","lastModifiedDate":"2024-02-03"},{"lineNumber":226,"author":{"gitId":"biinnnggggg"},"content":"            fail();","lastModifiedDate":"2024-02-03"},{"lineNumber":227,"author":{"gitId":"biinnnggggg"},"content":"        } catch (MikeException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":228,"author":{"gitId":"biinnnggggg"},"content":"            assertEquals(\"Usage: mark [number]\", e.getMessage());","lastModifiedDate":"2024-02-03"},{"lineNumber":229,"author":{"gitId":"biinnnggggg"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":230,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":231,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":232,"author":{"gitId":"biinnnggggg"},"content":"    private List\u003cToken\u003e createTokenList(Token... tokens) {","lastModifiedDate":"2024-02-03"},{"lineNumber":233,"author":{"gitId":"biinnnggggg"},"content":"        return new ArrayList\u003cToken\u003e(Arrays.asList(tokens));","lastModifiedDate":"2024-02-03"},{"lineNumber":234,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":235,"author":{"gitId":"biinnnggggg"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"biinnnggggg":235}},{"path":"src/test/java/mike/CommandScannerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"biinnnggggg"},"content":"package mike;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"biinnnggggg"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"biinnnggggg"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"biinnnggggg"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"biinnnggggg"},"content":"import java.util.List;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"biinnnggggg"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"biinnnggggg"},"content":"public class CommandScannerTest {","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"biinnnggggg"},"content":"    // command tokens","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"biinnnggggg"},"content":"    private static final Token exitToken \u003d new Token(TokenType.EXIT, \"exit\");","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"biinnnggggg"},"content":"    private static final Token listToken \u003d new Token(TokenType.LIST, \"list\");","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"biinnnggggg"},"content":"    private static final Token todoToken \u003d new Token(TokenType.TODO, \"todo\");","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"biinnnggggg"},"content":"    private static final Token deadlineToken \u003d new Token(TokenType.DEADLINE, \"deadline\");","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"biinnnggggg"},"content":"    private static final Token eventToken \u003d new Token(TokenType.EVENT, \"event\");","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"biinnnggggg"},"content":"    private static final Token markToken \u003d new Token(TokenType.MARK, \"mark\");","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"biinnnggggg"},"content":"    private static final Token unmarkToken \u003d new Token(TokenType.UNMARK, \"unmark\");","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"biinnnggggg"},"content":"    private static final Token findToken \u003d new Token(TokenType.FIND, \"find\");","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"biinnnggggg"},"content":"    // other","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"biinnnggggg"},"content":"    private static final Token forwardDashToken \u003d new Token(TokenType.FORWARD_DASH, \"/\");","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"biinnnggggg"},"content":"    private static final Token eocToken \u003d new Token(TokenType.EOC, \"\");","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"biinnnggggg"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"biinnnggggg"},"content":"    public void scanTokens_commandInput_tokenList() {","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"biinnnggggg"},"content":"        Token tempLiteralToken;","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"biinnnggggg"},"content":"        // literal","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"biinnnggggg"},"content":"        List\u003cToken\u003e outputList \u003d new CommandScanner(\"hi\").scanTokens();","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"biinnnggggg"},"content":"        Token hiToken \u003d new Token(TokenType.LITERAL, \"hi\");","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"biinnnggggg"},"content":"        List\u003cToken\u003e expectedList \u003d createTokenList(hiToken, eocToken);","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"biinnnggggg"},"content":"        assertEquals(expectedList.toString(), outputList.toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"biinnnggggg"},"content":"        // unfinished param declaration","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"biinnnggggg"},"content":"        outputList \u003d new CommandScanner(\"mark /\").scanTokens();","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"biinnnggggg"},"content":"        Token emptyParamToken \u003d new Token(TokenType.PARAM, \"\");","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"biinnnggggg"},"content":"        expectedList \u003d createTokenList(markToken, forwardDashToken, emptyParamToken, eocToken);","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"biinnnggggg"},"content":"        assertEquals(expectedList.toString(), outputList.toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"biinnnggggg"},"content":"        // unmark as literal not command","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"biinnnggggg"},"content":"        outputList \u003d new CommandScanner(\"mark unmark\").scanTokens();","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"biinnnggggg"},"content":"        tempLiteralToken \u003d new Token(TokenType.LITERAL, \"unmark\");","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"biinnnggggg"},"content":"        expectedList \u003d createTokenList(markToken, tempLiteralToken, eocToken);","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"biinnnggggg"},"content":"        assertEquals(expectedList.toString(), outputList.toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"biinnnggggg"},"content":"        // space in literal","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"biinnnggggg"},"content":"        outputList \u003d new CommandScanner(\"todo hello sir\").scanTokens();","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"biinnnggggg"},"content":"        tempLiteralToken \u003d new Token(TokenType.LITERAL, \"hello sir\");","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"biinnnggggg"},"content":"        expectedList \u003d createTokenList(todoToken, tempLiteralToken, eocToken);","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"biinnnggggg"},"content":"        assertEquals(expectedList.toString(), outputList.toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"biinnnggggg"},"content":"        // double spaces","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"biinnnggggg"},"content":"        outputList \u003d new CommandScanner(\"todo  hello sir   \").scanTokens();","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"biinnnggggg"},"content":"        tempLiteralToken \u003d new Token(TokenType.LITERAL, \"hello sir\");","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"biinnnggggg"},"content":"        expectedList \u003d createTokenList(todoToken, tempLiteralToken, eocToken);","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"biinnnggggg"},"content":"        assertEquals(expectedList.toString(), outputList.toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"biinnnggggg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"biinnnggggg"},"content":"    private List\u003cToken\u003e createTokenList(Token... tokens) {","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"biinnnggggg"},"content":"        return new ArrayList\u003cToken\u003e(Arrays.asList(tokens));","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"biinnnggggg"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"biinnnggggg"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"biinnnggggg":64}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"biinnnggggg"},"content":"todo read book","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"biinnnggggg"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"biinnnggggg"},"content":"mark 1","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"biinnnggggg"},"content":"deadline return book /by friday","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"biinnnggggg"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"biinnnggggg"},"content":"mark 2","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"biinnnggggg"},"content":"random text","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"biinnnggggg"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"biinnnggggg"},"content":"event book club /from saturday 5pm /to 7pm","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"biinnnggggg"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"biinnnggggg"},"content":"mark 4","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"biinnnggggg"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"biinnnggggg"},"content":"event /from saturday 5pm /to 7pm","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"biinnnggggg"},"content":"event book club /from saturday 5pm /from /to 7pm","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"biinnnggggg"},"content":"event book club /to saturday 5pm /from 7pm","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"biinnnggggg"},"content":"bye","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"biinnnggggg":16}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"biinnnggggg"},"content":"java -classpath ..\\bin Mike \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"biinnnggggg":1,"-":20}}]
