[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"BryanL2303"},"content":"# Klee project","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"BryanL2303"},"content":"This is a chatbot modeled after a character Klee from a game Genshin Impact.","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"BryanL2303"},"content":"3. After that, locate the `src/main/java/klee/Launcher.java` file, right-click it, and choose `Run Launcer.main()` (if the code editor is showing compile errors, try restarting the IDE).","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"BryanL2303"},"content":"If the app starts running a GUi should appear and Klee should greet you with a message!","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"BryanL2303":4,"-":13}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"BryanL2303"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"BryanL2303"},"content":"}","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"BryanL2303"},"content":"checkstyle {","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"BryanL2303"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"BryanL2303"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"BryanL2303"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"BryanL2303"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"BryanL2303"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"BryanL2303"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"BryanL2303"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"BryanL2303"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"BryanL2303"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"BryanL2303"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"BryanL2303"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"BryanL2303"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"BryanL2303"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"BryanL2303"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"BryanL2303"},"content":"    mainClass.set(\"klee.Launcher\")","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"BryanL2303"},"content":"    archiveBaseName \u003d \"Launcher\"","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"BryanL2303":22,"-":40}},{"path":"src/main/java/klee/Klee.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryanL2303"},"content":"package klee;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"BryanL2303"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"BryanL2303"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"BryanL2303"},"content":"import javafx.event.EventHandler;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"BryanL2303"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"BryanL2303"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"BryanL2303"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"BryanL2303"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"BryanL2303"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"BryanL2303"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"BryanL2303"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"BryanL2303"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"BryanL2303"},"content":"import klee.command.Bye;","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"BryanL2303"},"content":"import klee.command.Command;","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"BryanL2303"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"BryanL2303"},"content":" * Main class for the program Klee","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"BryanL2303"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"BryanL2303"},"content":"public class Klee extends Application {","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"BryanL2303"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"BryanL2303"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"BryanL2303"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"BryanL2303"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"BryanL2303"},"content":"    private Scene scene;","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"BryanL2303"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"BryanL2303"},"content":"        // ...","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"BryanL2303"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"BryanL2303"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"BryanL2303"},"content":"        //Step 1. Setting up required components","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"BryanL2303"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"BryanL2303"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"BryanL2303"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"BryanL2303"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"BryanL2303"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"BryanL2303"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"BryanL2303"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"BryanL2303"},"content":"        Ui ui \u003d new Ui(dialogContainer);","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"BryanL2303"},"content":"        TaskList tasks \u003d storage.retrieveTasks(ui);","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"BryanL2303"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"BryanL2303"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"BryanL2303"},"content":"        //Step 2. Formatting the window to look as expected","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"BryanL2303"},"content":"        stage.setTitle(\"Klee\");","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"BryanL2303"},"content":"        stage.setResizable(false);","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"BryanL2303"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"BryanL2303"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"BryanL2303"},"content":"        mainLayout.setPrefSize(600.0, 600.0);","lastModifiedDate":"2024-02-11"},{"lineNumber":56,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"BryanL2303"},"content":"        scrollPane.setPrefSize(585, 535);","lastModifiedDate":"2024-02-11"},{"lineNumber":58,"author":{"gitId":"BryanL2303"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"BryanL2303"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"BryanL2303"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"BryanL2303"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"BryanL2303"},"content":"        //You will need to import `javafx.scene.layout.Region` for this.","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"BryanL2303"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"BryanL2303"},"content":"        userInput.setPrefWidth(525.0);","lastModifiedDate":"2024-02-11"},{"lineNumber":68,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"BryanL2303"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"BryanL2303"},"content":"        sendButton.setOnAction(new EventHandler\u003cActionEvent\u003e() {","lastModifiedDate":"2024-02-04"},{"lineNumber":72,"author":{"gitId":"BryanL2303"},"content":"            @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":73,"author":{"gitId":"BryanL2303"},"content":"            public void handle(ActionEvent event) {","lastModifiedDate":"2024-02-04"},{"lineNumber":74,"author":{"gitId":"BryanL2303"},"content":"                ui.echoUser(userInput.getText());","lastModifiedDate":"2024-02-04"},{"lineNumber":75,"author":{"gitId":"BryanL2303"},"content":"                try {","lastModifiedDate":"2024-01-28"},{"lineNumber":76,"author":{"gitId":"BryanL2303"},"content":"                    Command command \u003d parser.parseInput(userInput.getText());","lastModifiedDate":"2024-02-04"},{"lineNumber":77,"author":{"gitId":"BryanL2303"},"content":"                    assert command !\u003d null;","lastModifiedDate":"2024-02-09"},{"lineNumber":78,"author":{"gitId":"BryanL2303"},"content":"                    command.runCommand(ui, storage, tasks);","lastModifiedDate":"2024-01-28"},{"lineNumber":79,"author":{"gitId":"BryanL2303"},"content":"                    if (command.getClass() \u003d\u003d Bye.class) {","lastModifiedDate":"2024-01-28"},{"lineNumber":80,"author":{"gitId":"BryanL2303"},"content":"                        stage.close();","lastModifiedDate":"2024-02-04"},{"lineNumber":81,"author":{"gitId":"BryanL2303"},"content":"                    }","lastModifiedDate":"2024-01-28"},{"lineNumber":82,"author":{"gitId":"BryanL2303"},"content":"                    userInput.setText(\"\");","lastModifiedDate":"2024-02-04"},{"lineNumber":83,"author":{"gitId":"BryanL2303"},"content":"                } catch (KleeException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":84,"author":{"gitId":"BryanL2303"},"content":"                    ui.showError(e.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":85,"author":{"gitId":"BryanL2303"},"content":"                    userInput.setText(\"\");","lastModifiedDate":"2024-02-04"},{"lineNumber":86,"author":{"gitId":"BryanL2303"},"content":"                }","lastModifiedDate":"2024-01-28"},{"lineNumber":87,"author":{"gitId":"BryanL2303"},"content":"                scrollPane.setVvalue(scrollPane.getVmax());","lastModifiedDate":"2024-02-04"},{"lineNumber":88,"author":{"gitId":"BryanL2303"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":89,"author":{"gitId":"BryanL2303"},"content":"        });","lastModifiedDate":"2024-02-04"},{"lineNumber":90,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":91,"author":{"gitId":"BryanL2303"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2024-02-04"},{"lineNumber":92,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":93,"author":{"gitId":"BryanL2303"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2024-02-04"},{"lineNumber":94,"author":{"gitId":"BryanL2303"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2024-02-04"},{"lineNumber":95,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":96,"author":{"gitId":"BryanL2303"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2024-02-04"},{"lineNumber":97,"author":{"gitId":"BryanL2303"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2024-02-04"},{"lineNumber":98,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":99,"author":{"gitId":"BryanL2303"},"content":"        //More code to be added here later","lastModifiedDate":"2024-02-04"},{"lineNumber":100,"author":{"gitId":"BryanL2303"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2024-02-04"},{"lineNumber":101,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":102,"author":{"gitId":"BryanL2303"},"content":"        stage.setScene(scene);","lastModifiedDate":"2024-02-04"},{"lineNumber":103,"author":{"gitId":"BryanL2303"},"content":"        stage.show();","lastModifiedDate":"2024-02-04"},{"lineNumber":104,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":105,"author":{"gitId":"BryanL2303"},"content":"        ui.showWelcome();","lastModifiedDate":"2024-02-04"},{"lineNumber":106,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":107,"author":{"gitId":"BryanL2303"},"content":"}","lastModifiedDate":"2024-01-28"},{"lineNumber":108,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":109,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"BryanL2303":109}},{"path":"src/main/java/klee/KleeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryanL2303"},"content":"package klee;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"BryanL2303"},"content":"/**","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"BryanL2303"},"content":" * Represents the exceptions that Klee can catch.","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"BryanL2303"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"BryanL2303"},"content":"public class KleeException extends Exception {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"BryanL2303"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"BryanL2303"},"content":"     * Constructor of KleeException class.","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"BryanL2303"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"BryanL2303"},"content":"     * @param errorMessage","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"BryanL2303"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"BryanL2303"},"content":"    public KleeException(String errorMessage) {","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"BryanL2303"},"content":"        super(errorMessage);","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"BryanL2303"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"BryanL2303"},"content":"     * Checks if obj is the same KleeException.","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"BryanL2303"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"BryanL2303"},"content":"     * @param obj","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"BryanL2303"},"content":"     * @return If obj has the same error as this instance.","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"BryanL2303"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"BryanL2303"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"BryanL2303"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"BryanL2303"},"content":"        if (obj.getClass() \u003d\u003d KleeException.class) {","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"BryanL2303"},"content":"            return this.getMessage().equals(((KleeException) obj).getMessage());","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"BryanL2303"},"content":"        } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"BryanL2303"},"content":"            return false;","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"BryanL2303"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"BryanL2303":30}},{"path":"src/main/java/klee/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryanL2303"},"content":"package klee;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"BryanL2303"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"BryanL2303"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"BryanL2303"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"BryanL2303"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"BryanL2303"},"content":"public class Launcher {","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"BryanL2303"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"BryanL2303"},"content":"        Application.launch(Klee.class, args);","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"BryanL2303"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"BryanL2303":12}},{"path":"src/main/java/klee/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryanL2303"},"content":"package klee;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"BryanL2303"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"BryanL2303"},"content":"import klee.command.Bye;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"BryanL2303"},"content":"import klee.command.Command;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"BryanL2303"},"content":"import klee.command.Deadline;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"BryanL2303"},"content":"import klee.command.Delete;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"BryanL2303"},"content":"import klee.command.Event;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"BryanL2303"},"content":"import klee.command.Find;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"BryanL2303"},"content":"import klee.command.List;","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"BryanL2303"},"content":"import klee.command.Mark;","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"BryanL2303"},"content":"import klee.command.ToDo;","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"BryanL2303"},"content":"import klee.command.Unmark;","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"BryanL2303"},"content":"/**","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"BryanL2303"},"content":" * Represents a parser to parse String input from the user.","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"BryanL2303"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"BryanL2303"},"content":"public class Parser {","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"BryanL2303"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"BryanL2303"},"content":"     * Constructor for Parser class.","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"BryanL2303"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"BryanL2303"},"content":"    public Parser() {}","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"BryanL2303"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"BryanL2303"},"content":"     * Function to handle the input case \u0027mark\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"BryanL2303"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"BryanL2303"},"content":"     * @param inputComponents","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"BryanL2303"},"content":"     * @return The Command Mark if the input is valid","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"BryanL2303"},"content":"     * @throws KleeException","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"BryanL2303"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"BryanL2303"},"content":"    public static Command caseMark(String[] inputComponents) throws KleeException {","lastModifiedDate":"2024-02-10"},{"lineNumber":33,"author":{"gitId":"BryanL2303"},"content":"        if (inputComponents.length \u003d\u003d 2) {","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"BryanL2303"},"content":"            try {","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"BryanL2303"},"content":"                Integer index \u003d Integer.parseInt(inputComponents[1]) - 1;","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"BryanL2303"},"content":"                if (index \u003e\u003d 0) {","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"BryanL2303"},"content":"                    return new Mark(index);","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"BryanL2303"},"content":"                } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"BryanL2303"},"content":"                    throw new KleeException(\"Is that a negative number? \"","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"BryanL2303"},"content":"                            + \"I usually start counting from number 1...\");","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"BryanL2303"},"content":"                }","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"BryanL2303"},"content":"            } catch (Exception e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"BryanL2303"},"content":"                throw new KleeException(\"There should be an integer after mark to indicate which \"","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"BryanL2303"},"content":"                        + \"task to mark!\");","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"BryanL2303"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"BryanL2303"},"content":"        } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"BryanL2303"},"content":"            throw new KleeException(\"There should be an integer after mark to indicate which task to mark!\");","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":50,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":51,"author":{"gitId":"BryanL2303"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":52,"author":{"gitId":"BryanL2303"},"content":"     * Function to handle the input case \u0027unmark\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":53,"author":{"gitId":"BryanL2303"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":54,"author":{"gitId":"BryanL2303"},"content":"     * @param inputComponents","lastModifiedDate":"2024-02-10"},{"lineNumber":55,"author":{"gitId":"BryanL2303"},"content":"     * @return The Command Unmark if the input is valid","lastModifiedDate":"2024-02-10"},{"lineNumber":56,"author":{"gitId":"BryanL2303"},"content":"     * @throws KleeException","lastModifiedDate":"2024-02-10"},{"lineNumber":57,"author":{"gitId":"BryanL2303"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":58,"author":{"gitId":"BryanL2303"},"content":"    public static Command caseUnmark(String[] inputComponents) throws KleeException {","lastModifiedDate":"2024-02-10"},{"lineNumber":59,"author":{"gitId":"BryanL2303"},"content":"        if (inputComponents.length \u003d\u003d 2) {","lastModifiedDate":"2024-02-09"},{"lineNumber":60,"author":{"gitId":"BryanL2303"},"content":"            try {","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"BryanL2303"},"content":"                Integer index \u003d Integer.parseInt(inputComponents[1]) - 1;","lastModifiedDate":"2024-02-09"},{"lineNumber":62,"author":{"gitId":"BryanL2303"},"content":"                if (index \u003e\u003d 0) {","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"BryanL2303"},"content":"                    return new Unmark(index);","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"BryanL2303"},"content":"                } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"BryanL2303"},"content":"                    throw new KleeException(\"Is that a negative number? \"","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"BryanL2303"},"content":"                            + \"I usually start counting from number 1...\");","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"BryanL2303"},"content":"                }","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"BryanL2303"},"content":"            } catch (Exception e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":69,"author":{"gitId":"BryanL2303"},"content":"                throw new KleeException(\"There should be an integer after unmark to indicate which task \"","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"BryanL2303"},"content":"                        + \"to unmark!\");","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"BryanL2303"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":72,"author":{"gitId":"BryanL2303"},"content":"        } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"BryanL2303"},"content":"            throw new KleeException(\"There should be an integer after unmark to indicate which task to \"","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"BryanL2303"},"content":"                    + \"unmark!\");","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":76,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":77,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":78,"author":{"gitId":"BryanL2303"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":79,"author":{"gitId":"BryanL2303"},"content":"     * Function to handle the input case \u0027todo\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":80,"author":{"gitId":"BryanL2303"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":81,"author":{"gitId":"BryanL2303"},"content":"     * @param input full input by user","lastModifiedDate":"2024-02-11"},{"lineNumber":82,"author":{"gitId":"BryanL2303"},"content":"     * @return The Command ToDo if the input is valid","lastModifiedDate":"2024-02-10"},{"lineNumber":83,"author":{"gitId":"BryanL2303"},"content":"     * @throws KleeException","lastModifiedDate":"2024-02-10"},{"lineNumber":84,"author":{"gitId":"BryanL2303"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":85,"author":{"gitId":"BryanL2303"},"content":"    public static Command caseToDo(String input) throws KleeException {","lastModifiedDate":"2024-02-10"},{"lineNumber":86,"author":{"gitId":"BryanL2303"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":87,"author":{"gitId":"BryanL2303"},"content":"            String description \u003d input.split(\"todo \")[1];","lastModifiedDate":"2024-01-28"},{"lineNumber":88,"author":{"gitId":"BryanL2303"},"content":"            return new ToDo(description);","lastModifiedDate":"2024-01-28"},{"lineNumber":89,"author":{"gitId":"BryanL2303"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":90,"author":{"gitId":"BryanL2303"},"content":"            throw new KleeException(\"The correct way to indicate a todo is `todo [description]`\");","lastModifiedDate":"2024-01-28"},{"lineNumber":91,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":92,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":93,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":94,"author":{"gitId":"BryanL2303"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":95,"author":{"gitId":"BryanL2303"},"content":"     * Function to handle the input case \u0027deadline\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":96,"author":{"gitId":"BryanL2303"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":97,"author":{"gitId":"BryanL2303"},"content":"     * @param input full input by user","lastModifiedDate":"2024-02-11"},{"lineNumber":98,"author":{"gitId":"BryanL2303"},"content":"     * @return The Command Deadline if the input is valid","lastModifiedDate":"2024-02-10"},{"lineNumber":99,"author":{"gitId":"BryanL2303"},"content":"     * @throws KleeException","lastModifiedDate":"2024-02-10"},{"lineNumber":100,"author":{"gitId":"BryanL2303"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":101,"author":{"gitId":"BryanL2303"},"content":"    public static Command caseDeadline(String input) throws KleeException {","lastModifiedDate":"2024-02-10"},{"lineNumber":102,"author":{"gitId":"BryanL2303"},"content":"        String[] deadlineComponents \u003d input.split(\"deadline \");","lastModifiedDate":"2024-02-09"},{"lineNumber":103,"author":{"gitId":"BryanL2303"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":104,"author":{"gitId":"BryanL2303"},"content":"            String[] deadlineProps \u003d deadlineComponents[1].split(\" /by \");","lastModifiedDate":"2024-02-09"},{"lineNumber":105,"author":{"gitId":"BryanL2303"},"content":"            return new Deadline(deadlineProps[0], parseDateTime(deadlineProps[1]));","lastModifiedDate":"2024-01-28"},{"lineNumber":106,"author":{"gitId":"BryanL2303"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":107,"author":{"gitId":"BryanL2303"},"content":"            throw new KleeException(\"The correct way to indicate a deadline is `deadline [description] \"","lastModifiedDate":"2024-02-03"},{"lineNumber":108,"author":{"gitId":"BryanL2303"},"content":"                    + \"/by [date and time]`\");","lastModifiedDate":"2024-02-03"},{"lineNumber":109,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":110,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":111,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":112,"author":{"gitId":"BryanL2303"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":113,"author":{"gitId":"BryanL2303"},"content":"     * Function to handle the input case \u0027event\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":114,"author":{"gitId":"BryanL2303"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":115,"author":{"gitId":"BryanL2303"},"content":"     * @param input full input by user","lastModifiedDate":"2024-02-11"},{"lineNumber":116,"author":{"gitId":"BryanL2303"},"content":"     * @return The Command Event if the input is valid","lastModifiedDate":"2024-02-10"},{"lineNumber":117,"author":{"gitId":"BryanL2303"},"content":"     * @throws KleeException","lastModifiedDate":"2024-02-10"},{"lineNumber":118,"author":{"gitId":"BryanL2303"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":119,"author":{"gitId":"BryanL2303"},"content":"    public static Command caseEvent(String input) throws KleeException {","lastModifiedDate":"2024-02-10"},{"lineNumber":120,"author":{"gitId":"BryanL2303"},"content":"        String[] eventComponents \u003d input.split(\"event \");","lastModifiedDate":"2024-02-09"},{"lineNumber":121,"author":{"gitId":"BryanL2303"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":122,"author":{"gitId":"BryanL2303"},"content":"            String[] eventProps \u003d eventComponents[1].split(\" /from \");","lastModifiedDate":"2024-02-09"},{"lineNumber":123,"author":{"gitId":"BryanL2303"},"content":"            String description \u003d eventProps[0];","lastModifiedDate":"2024-01-28"},{"lineNumber":124,"author":{"gitId":"BryanL2303"},"content":"            eventProps \u003d eventProps[1].split(\" /to \");","lastModifiedDate":"2024-01-28"},{"lineNumber":125,"author":{"gitId":"BryanL2303"},"content":"            return new Event(description, parseDateTime(eventProps[0]), parseDateTime(eventProps[1]));","lastModifiedDate":"2024-01-28"},{"lineNumber":126,"author":{"gitId":"BryanL2303"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":127,"author":{"gitId":"BryanL2303"},"content":"            throw new KleeException(\"The correct way to indicate a event is `event [description] \"","lastModifiedDate":"2024-02-03"},{"lineNumber":128,"author":{"gitId":"BryanL2303"},"content":"                    + \"/from [date and time] /to [date and time]`\");","lastModifiedDate":"2024-02-03"},{"lineNumber":129,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":130,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":131,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":132,"author":{"gitId":"BryanL2303"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":133,"author":{"gitId":"BryanL2303"},"content":"     * Function to handle the input case \u0027find\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":134,"author":{"gitId":"BryanL2303"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":135,"author":{"gitId":"BryanL2303"},"content":"     * @param input full input by user","lastModifiedDate":"2024-02-11"},{"lineNumber":136,"author":{"gitId":"BryanL2303"},"content":"     * @return The Command Find if the input is valid","lastModifiedDate":"2024-02-10"},{"lineNumber":137,"author":{"gitId":"BryanL2303"},"content":"     * @throws KleeException","lastModifiedDate":"2024-02-10"},{"lineNumber":138,"author":{"gitId":"BryanL2303"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":139,"author":{"gitId":"BryanL2303"},"content":"    public static Command caseFind(String input) throws KleeException {","lastModifiedDate":"2024-02-10"},{"lineNumber":140,"author":{"gitId":"BryanL2303"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":141,"author":{"gitId":"BryanL2303"},"content":"            String searchTerm \u003d input.split(\"find \")[1];","lastModifiedDate":"2024-01-29"},{"lineNumber":142,"author":{"gitId":"BryanL2303"},"content":"            return new Find(searchTerm);","lastModifiedDate":"2024-01-29"},{"lineNumber":143,"author":{"gitId":"BryanL2303"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":144,"author":{"gitId":"BryanL2303"},"content":"            throw new KleeException(\"The correct way to find a task is `find [Search Term]`\");","lastModifiedDate":"2024-01-29"},{"lineNumber":145,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":146,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":147,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":148,"author":{"gitId":"BryanL2303"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":149,"author":{"gitId":"BryanL2303"},"content":"     * Function to handle the input case \u0027delete\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":150,"author":{"gitId":"BryanL2303"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":151,"author":{"gitId":"BryanL2303"},"content":"     * @param inputComponents the input split by blank space","lastModifiedDate":"2024-02-11"},{"lineNumber":152,"author":{"gitId":"BryanL2303"},"content":"     * @return The Command Delete if the input is valid","lastModifiedDate":"2024-02-10"},{"lineNumber":153,"author":{"gitId":"BryanL2303"},"content":"     * @throws KleeException","lastModifiedDate":"2024-02-10"},{"lineNumber":154,"author":{"gitId":"BryanL2303"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":155,"author":{"gitId":"BryanL2303"},"content":"    public static Command caseDelete(String[] inputComponents) throws KleeException {","lastModifiedDate":"2024-02-10"},{"lineNumber":156,"author":{"gitId":"BryanL2303"},"content":"        if (inputComponents.length \u003d\u003d 2) {","lastModifiedDate":"2024-02-09"},{"lineNumber":157,"author":{"gitId":"BryanL2303"},"content":"            try {","lastModifiedDate":"2024-01-28"},{"lineNumber":158,"author":{"gitId":"BryanL2303"},"content":"                Integer index \u003d Integer.parseInt(inputComponents[1]) - 1;","lastModifiedDate":"2024-02-09"},{"lineNumber":159,"author":{"gitId":"BryanL2303"},"content":"                if (index \u003e\u003d 0) {","lastModifiedDate":"2024-01-29"},{"lineNumber":160,"author":{"gitId":"BryanL2303"},"content":"                    return new Delete(index);","lastModifiedDate":"2024-01-29"},{"lineNumber":161,"author":{"gitId":"BryanL2303"},"content":"                } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":162,"author":{"gitId":"BryanL2303"},"content":"                    throw new KleeException(\"Is that a negative number? I usually start counting from \"","lastModifiedDate":"2024-02-03"},{"lineNumber":163,"author":{"gitId":"BryanL2303"},"content":"                            + \"number 1...\");","lastModifiedDate":"2024-02-03"},{"lineNumber":164,"author":{"gitId":"BryanL2303"},"content":"                }","lastModifiedDate":"2024-01-29"},{"lineNumber":165,"author":{"gitId":"BryanL2303"},"content":"            } catch (Exception e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":166,"author":{"gitId":"BryanL2303"},"content":"                throw new KleeException(\"There should be an integer after delete to indicate which task to \"","lastModifiedDate":"2024-02-03"},{"lineNumber":167,"author":{"gitId":"BryanL2303"},"content":"                        + \"delete!\");","lastModifiedDate":"2024-02-03"},{"lineNumber":168,"author":{"gitId":"BryanL2303"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":169,"author":{"gitId":"BryanL2303"},"content":"        } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":170,"author":{"gitId":"BryanL2303"},"content":"            throw new KleeException(\"There should be an integer after delete to indicate which task to \"","lastModifiedDate":"2024-02-03"},{"lineNumber":171,"author":{"gitId":"BryanL2303"},"content":"                    + \"delete!\");","lastModifiedDate":"2024-02-03"},{"lineNumber":172,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":173,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":174,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":175,"author":{"gitId":"BryanL2303"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":176,"author":{"gitId":"BryanL2303"},"content":"     * Parse the String dateTime into a LocalDateTime instance.","lastModifiedDate":"2024-02-10"},{"lineNumber":177,"author":{"gitId":"BryanL2303"},"content":"     * If the syntax of dateTime cannot be understood throw KleeException.","lastModifiedDate":"2024-02-10"},{"lineNumber":178,"author":{"gitId":"BryanL2303"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":179,"author":{"gitId":"BryanL2303"},"content":"     * @param dateTime","lastModifiedDate":"2024-02-10"},{"lineNumber":180,"author":{"gitId":"BryanL2303"},"content":"     * @return LocalDateTime instance.","lastModifiedDate":"2024-02-10"},{"lineNumber":181,"author":{"gitId":"BryanL2303"},"content":"     * @throws KleeException","lastModifiedDate":"2024-02-10"},{"lineNumber":182,"author":{"gitId":"BryanL2303"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":183,"author":{"gitId":"BryanL2303"},"content":"    public static LocalDateTime parseDateTime(String dateTime) throws KleeException {","lastModifiedDate":"2024-02-10"},{"lineNumber":184,"author":{"gitId":"BryanL2303"},"content":"        String[] dateTimeComponents \u003d dateTime.split(\" \");","lastModifiedDate":"2024-02-10"},{"lineNumber":185,"author":{"gitId":"BryanL2303"},"content":"        int year \u003d 0;","lastModifiedDate":"2024-02-10"},{"lineNumber":186,"author":{"gitId":"BryanL2303"},"content":"        int month \u003d 0;","lastModifiedDate":"2024-02-10"},{"lineNumber":187,"author":{"gitId":"BryanL2303"},"content":"        int day \u003d 0;","lastModifiedDate":"2024-02-10"},{"lineNumber":188,"author":{"gitId":"BryanL2303"},"content":"        int hour \u003d 0;","lastModifiedDate":"2024-02-10"},{"lineNumber":189,"author":{"gitId":"BryanL2303"},"content":"        int minute \u003d 0;","lastModifiedDate":"2024-02-10"},{"lineNumber":190,"author":{"gitId":"BryanL2303"},"content":"        boolean hasTime \u003d false;","lastModifiedDate":"2024-02-10"},{"lineNumber":191,"author":{"gitId":"BryanL2303"},"content":"        if (dateTimeComponents.length \u003e 2) {","lastModifiedDate":"2024-02-10"},{"lineNumber":192,"author":{"gitId":"BryanL2303"},"content":"            // The input does not fit the syntax","lastModifiedDate":"2024-02-10"},{"lineNumber":193,"author":{"gitId":"BryanL2303"},"content":"            throw new KleeException(\"Time and date should be written with only 1 space between them.\");","lastModifiedDate":"2024-02-10"},{"lineNumber":194,"author":{"gitId":"BryanL2303"},"content":"        } else if (dateTimeComponents.length \u003d\u003d 2) {","lastModifiedDate":"2024-02-10"},{"lineNumber":195,"author":{"gitId":"BryanL2303"},"content":"            //There is a space which indicates that time is given","lastModifiedDate":"2024-02-10"},{"lineNumber":196,"author":{"gitId":"BryanL2303"},"content":"            hour \u003d Integer.parseInt(dateTimeComponents[1].substring(0, 2));","lastModifiedDate":"2024-02-10"},{"lineNumber":197,"author":{"gitId":"BryanL2303"},"content":"            minute \u003d Integer.parseInt(dateTimeComponents[1].substring(2, 4));","lastModifiedDate":"2024-02-10"},{"lineNumber":198,"author":{"gitId":"BryanL2303"},"content":"            hasTime \u003d true;","lastModifiedDate":"2024-02-10"},{"lineNumber":199,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":200,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":201,"author":{"gitId":"BryanL2303"},"content":"        // Test which syntax of date was used","lastModifiedDate":"2024-02-10"},{"lineNumber":202,"author":{"gitId":"BryanL2303"},"content":"        String[] dateComponents \u003d dateTimeComponents[0].split(\"-\");","lastModifiedDate":"2024-02-10"},{"lineNumber":203,"author":{"gitId":"BryanL2303"},"content":"        if (dateComponents.length \u003d\u003d 3) {","lastModifiedDate":"2024-02-10"},{"lineNumber":204,"author":{"gitId":"BryanL2303"},"content":"            year \u003d Integer.parseInt(dateComponents[0]);","lastModifiedDate":"2024-02-10"},{"lineNumber":205,"author":{"gitId":"BryanL2303"},"content":"            month \u003d Integer.parseInt(dateComponents[1]);","lastModifiedDate":"2024-02-10"},{"lineNumber":206,"author":{"gitId":"BryanL2303"},"content":"            day \u003d Integer.parseInt(dateComponents[2]);","lastModifiedDate":"2024-02-10"},{"lineNumber":207,"author":{"gitId":"BryanL2303"},"content":"        } else if (dateComponents.length \u003d\u003d 1) {","lastModifiedDate":"2024-02-10"},{"lineNumber":208,"author":{"gitId":"BryanL2303"},"content":"            dateComponents \u003d dateTimeComponents[0].split(\"/\");","lastModifiedDate":"2024-02-10"},{"lineNumber":209,"author":{"gitId":"BryanL2303"},"content":"            if (dateComponents.length \u003d\u003d 3) {","lastModifiedDate":"2024-02-10"},{"lineNumber":210,"author":{"gitId":"BryanL2303"},"content":"                year \u003d Integer.parseInt(dateComponents[2]);","lastModifiedDate":"2024-02-10"},{"lineNumber":211,"author":{"gitId":"BryanL2303"},"content":"                month \u003d Integer.parseInt(dateComponents[1]);","lastModifiedDate":"2024-02-10"},{"lineNumber":212,"author":{"gitId":"BryanL2303"},"content":"                day \u003d Integer.parseInt(dateComponents[0]);","lastModifiedDate":"2024-02-10"},{"lineNumber":213,"author":{"gitId":"BryanL2303"},"content":"            } else {","lastModifiedDate":"2024-02-10"},{"lineNumber":214,"author":{"gitId":"BryanL2303"},"content":"                throw new KleeException(\"Dates should only be written like 27/1/2024 or 2024-1-27\");","lastModifiedDate":"2024-02-10"},{"lineNumber":215,"author":{"gitId":"BryanL2303"},"content":"            }","lastModifiedDate":"2024-02-10"},{"lineNumber":216,"author":{"gitId":"BryanL2303"},"content":"        } else {","lastModifiedDate":"2024-02-10"},{"lineNumber":217,"author":{"gitId":"BryanL2303"},"content":"            throw new KleeException(\"Dates should only be written like 27/1/2024 or 2024-1-27\");","lastModifiedDate":"2024-02-10"},{"lineNumber":218,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":219,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":220,"author":{"gitId":"BryanL2303"},"content":"        LocalDateTime returnVariable \u003d LocalDateTime.of(year, month, day, hour, minute);","lastModifiedDate":"2024-02-10"},{"lineNumber":221,"author":{"gitId":"BryanL2303"},"content":"        return returnVariable;","lastModifiedDate":"2024-02-10"},{"lineNumber":222,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":223,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":224,"author":{"gitId":"BryanL2303"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":225,"author":{"gitId":"BryanL2303"},"content":"     * Given input String try to derive which command it is and return an instance of Command.","lastModifiedDate":"2024-02-10"},{"lineNumber":226,"author":{"gitId":"BryanL2303"},"content":"     * If input is in the wrong syntax throw KleeException.","lastModifiedDate":"2024-02-10"},{"lineNumber":227,"author":{"gitId":"BryanL2303"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":228,"author":{"gitId":"BryanL2303"},"content":"     * @param input","lastModifiedDate":"2024-02-10"},{"lineNumber":229,"author":{"gitId":"BryanL2303"},"content":"     * @return Command instance","lastModifiedDate":"2024-02-10"},{"lineNumber":230,"author":{"gitId":"BryanL2303"},"content":"     * @throws KleeException","lastModifiedDate":"2024-02-10"},{"lineNumber":231,"author":{"gitId":"BryanL2303"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":232,"author":{"gitId":"BryanL2303"},"content":"    public Command parseInput(String input) throws KleeException {","lastModifiedDate":"2024-02-10"},{"lineNumber":233,"author":{"gitId":"BryanL2303"},"content":"        switch (input) {","lastModifiedDate":"2024-02-10"},{"lineNumber":234,"author":{"gitId":"BryanL2303"},"content":"        case \"bye\":","lastModifiedDate":"2024-02-10"},{"lineNumber":235,"author":{"gitId":"BryanL2303"},"content":"            return new Bye();","lastModifiedDate":"2024-02-10"},{"lineNumber":236,"author":{"gitId":"BryanL2303"},"content":"        case \"list\":","lastModifiedDate":"2024-02-10"},{"lineNumber":237,"author":{"gitId":"BryanL2303"},"content":"            return new List();","lastModifiedDate":"2024-02-10"},{"lineNumber":238,"author":{"gitId":"BryanL2303"},"content":"        default:","lastModifiedDate":"2024-02-10"},{"lineNumber":239,"author":{"gitId":"BryanL2303"},"content":"            String[] inputComponents \u003d input.split(\" \");","lastModifiedDate":"2024-02-10"},{"lineNumber":240,"author":{"gitId":"BryanL2303"},"content":"            switch (inputComponents[0]) {","lastModifiedDate":"2024-02-10"},{"lineNumber":241,"author":{"gitId":"BryanL2303"},"content":"            case \"mark\":","lastModifiedDate":"2024-02-10"},{"lineNumber":242,"author":{"gitId":"BryanL2303"},"content":"                return caseMark(inputComponents);","lastModifiedDate":"2024-02-10"},{"lineNumber":243,"author":{"gitId":"BryanL2303"},"content":"            case \"unmark\":","lastModifiedDate":"2024-02-10"},{"lineNumber":244,"author":{"gitId":"BryanL2303"},"content":"                return caseUnmark(inputComponents);","lastModifiedDate":"2024-02-10"},{"lineNumber":245,"author":{"gitId":"BryanL2303"},"content":"            case \"todo\":","lastModifiedDate":"2024-02-10"},{"lineNumber":246,"author":{"gitId":"BryanL2303"},"content":"                return caseToDo(input);","lastModifiedDate":"2024-02-10"},{"lineNumber":247,"author":{"gitId":"BryanL2303"},"content":"            case \"deadline\":","lastModifiedDate":"2024-02-10"},{"lineNumber":248,"author":{"gitId":"BryanL2303"},"content":"                return caseDeadline(input);","lastModifiedDate":"2024-02-10"},{"lineNumber":249,"author":{"gitId":"BryanL2303"},"content":"            case \"event\":","lastModifiedDate":"2024-02-10"},{"lineNumber":250,"author":{"gitId":"BryanL2303"},"content":"                return caseEvent(input);","lastModifiedDate":"2024-02-10"},{"lineNumber":251,"author":{"gitId":"BryanL2303"},"content":"            case \"find\":","lastModifiedDate":"2024-02-10"},{"lineNumber":252,"author":{"gitId":"BryanL2303"},"content":"                return caseFind(input);","lastModifiedDate":"2024-02-10"},{"lineNumber":253,"author":{"gitId":"BryanL2303"},"content":"            case \"delete\":","lastModifiedDate":"2024-02-10"},{"lineNumber":254,"author":{"gitId":"BryanL2303"},"content":"                return caseDelete(inputComponents);","lastModifiedDate":"2024-02-10"},{"lineNumber":255,"author":{"gitId":"BryanL2303"},"content":"            default:","lastModifiedDate":"2024-01-28"},{"lineNumber":256,"author":{"gitId":"BryanL2303"},"content":"                throw new KleeException(\"Klee doesn\u0027t understand, what are you talking about?\");","lastModifiedDate":"2024-01-28"},{"lineNumber":257,"author":{"gitId":"BryanL2303"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":258,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":259,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":260,"author":{"gitId":"BryanL2303"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"BryanL2303":260}},{"path":"src/main/java/klee/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryanL2303"},"content":"package klee;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"BryanL2303"},"content":"import java.io.File;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"BryanL2303"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"BryanL2303"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"BryanL2303"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"BryanL2303"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"BryanL2303"},"content":"import klee.task.Deadline;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"BryanL2303"},"content":"import klee.task.Event;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"BryanL2303"},"content":"import klee.task.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"BryanL2303"},"content":"import klee.task.ToDo;","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"BryanL2303"},"content":"/**","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"BryanL2303"},"content":" * Represents the Storage which contains the tasks listed in TaskList.","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"BryanL2303"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"BryanL2303"},"content":"public class Storage {","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"BryanL2303"},"content":"    private static String path \u003d \"data\";","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"BryanL2303"},"content":"    private static String fileName \u003d \"data/Klee.txt\";","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"BryanL2303"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"BryanL2303"},"content":"     * Constructor for Storage class.","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"BryanL2303"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"BryanL2303"},"content":"    public Storage() {}","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"BryanL2303"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"BryanL2303"},"content":"     * Parse String returned from txt file into an instance of LocalDateTime.","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"BryanL2303"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"BryanL2303"},"content":"     * @param txt","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"BryanL2303"},"content":"     * @return LocalDateTime instance","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"BryanL2303"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"BryanL2303"},"content":"    public static LocalDateTime parseDateTimeTxt(String txt) {","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"BryanL2303"},"content":"        String[] dateComponents \u003d txt.split(\" \");","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"BryanL2303"},"content":"        int year \u003d Integer.parseInt(dateComponents[0]);","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"BryanL2303"},"content":"        int month \u003d Integer.parseInt(dateComponents[1]);","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"BryanL2303"},"content":"        int day \u003d Integer.parseInt(dateComponents[2]);","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"BryanL2303"},"content":"        int hour \u003d Integer.parseInt(dateComponents[3]);","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"BryanL2303"},"content":"        int minute \u003d Integer.parseInt(dateComponents[4]);","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"BryanL2303"},"content":"        LocalDateTime returnVariable \u003d LocalDateTime.of(year, month, day, hour, minute);","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"BryanL2303"},"content":"        return returnVariable;","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"BryanL2303"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"BryanL2303"},"content":"     * Save tasks inside TaskList into a txt file.","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"BryanL2303"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"BryanL2303"},"content":"     * @param tasks","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"BryanL2303"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"BryanL2303"},"content":"    public void saveTasks(TaskList tasks) {","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"BryanL2303"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"BryanL2303"},"content":"            FileWriter file \u003d new FileWriter(\"data/Klee.txt\");","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"BryanL2303"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"BryanL2303"},"content":"                Task currentTask \u003d tasks.get(i);","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"BryanL2303"},"content":"                String line \u003d currentTask.toText();","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"BryanL2303"},"content":"                file.write(line + \"\\n\");","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"BryanL2303"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"BryanL2303"},"content":"            file.close();","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"BryanL2303"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"BryanL2303"},"content":"            System.out.println(\"Klee has run out of ink! I cannot write this down!\");","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"BryanL2303"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"BryanL2303"},"content":"     * Open txt file and parse all tasks, save them into a new instance of TaskList and return it.","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"BryanL2303"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"BryanL2303"},"content":"     * @param ui","lastModifiedDate":"2024-01-29"},{"lineNumber":66,"author":{"gitId":"BryanL2303"},"content":"     * @return TaskList with all tasks inside txt file.","lastModifiedDate":"2024-01-29"},{"lineNumber":67,"author":{"gitId":"BryanL2303"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"BryanL2303"},"content":"    public TaskList retrieveTasks(Ui ui) {","lastModifiedDate":"2024-01-28"},{"lineNumber":69,"author":{"gitId":"BryanL2303"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2024-01-28"},{"lineNumber":70,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":71,"author":{"gitId":"BryanL2303"},"content":"        //Create /data directory only if it does not exist","lastModifiedDate":"2024-01-28"},{"lineNumber":72,"author":{"gitId":"BryanL2303"},"content":"        new File(path).mkdirs();","lastModifiedDate":"2024-01-28"},{"lineNumber":73,"author":{"gitId":"BryanL2303"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":74,"author":{"gitId":"BryanL2303"},"content":"            File data \u003d new File(fileName);","lastModifiedDate":"2024-01-28"},{"lineNumber":75,"author":{"gitId":"BryanL2303"},"content":"            if (!data.exists()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":76,"author":{"gitId":"BryanL2303"},"content":"                data.createNewFile();","lastModifiedDate":"2024-01-28"},{"lineNumber":77,"author":{"gitId":"BryanL2303"},"content":"            } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":78,"author":{"gitId":"BryanL2303"},"content":"                Scanner readFile \u003d new Scanner(data);","lastModifiedDate":"2024-01-28"},{"lineNumber":79,"author":{"gitId":"BryanL2303"},"content":"                while (readFile.hasNext()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":80,"author":{"gitId":"BryanL2303"},"content":"                    String read \u003d readFile.nextLine();","lastModifiedDate":"2024-01-28"},{"lineNumber":81,"author":{"gitId":"BryanL2303"},"content":"                    String[] components \u003d read.split(\" / \");","lastModifiedDate":"2024-02-09"},{"lineNumber":82,"author":{"gitId":"BryanL2303"},"content":"                    assert (components[0].equals(\"T\") || components[0].equals(\"D\") || components[0].equals(\"E\"));","lastModifiedDate":"2024-02-11"},{"lineNumber":83,"author":{"gitId":"BryanL2303"},"content":"                    switch (components[0]) {","lastModifiedDate":"2024-02-09"},{"lineNumber":84,"author":{"gitId":"BryanL2303"},"content":"                    case \"T\":","lastModifiedDate":"2024-01-28"},{"lineNumber":85,"author":{"gitId":"BryanL2303"},"content":"                        tasks.add(ToDo.fromText(components[2], components[1]));","lastModifiedDate":"2024-02-09"},{"lineNumber":86,"author":{"gitId":"BryanL2303"},"content":"                        break;","lastModifiedDate":"2024-01-28"},{"lineNumber":87,"author":{"gitId":"BryanL2303"},"content":"                    case \"D\":","lastModifiedDate":"2024-01-28"},{"lineNumber":88,"author":{"gitId":"BryanL2303"},"content":"                        tasks.add(Deadline.fromText(components[2], components[1], parseDateTimeTxt(components[3])));","lastModifiedDate":"2024-02-09"},{"lineNumber":89,"author":{"gitId":"BryanL2303"},"content":"                        break;","lastModifiedDate":"2024-01-28"},{"lineNumber":90,"author":{"gitId":"BryanL2303"},"content":"                    case \"E\":","lastModifiedDate":"2024-01-28"},{"lineNumber":91,"author":{"gitId":"BryanL2303"},"content":"                        tasks.add(Event.fromText(components[2], components[1], parseDateTimeTxt(components[3]),","lastModifiedDate":"2024-02-09"},{"lineNumber":92,"author":{"gitId":"BryanL2303"},"content":"                                parseDateTimeTxt(components[4])));","lastModifiedDate":"2024-02-09"},{"lineNumber":93,"author":{"gitId":"BryanL2303"},"content":"                        break;","lastModifiedDate":"2024-02-03"},{"lineNumber":94,"author":{"gitId":"BryanL2303"},"content":"                    default:","lastModifiedDate":"2024-02-03"},{"lineNumber":95,"author":{"gitId":"BryanL2303"},"content":"                        break;","lastModifiedDate":"2024-01-28"},{"lineNumber":96,"author":{"gitId":"BryanL2303"},"content":"                    }","lastModifiedDate":"2024-01-28"},{"lineNumber":97,"author":{"gitId":"BryanL2303"},"content":"                }","lastModifiedDate":"2024-01-28"},{"lineNumber":98,"author":{"gitId":"BryanL2303"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":99,"author":{"gitId":"BryanL2303"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":100,"author":{"gitId":"BryanL2303"},"content":"            ui.showError(\"Klee could not find the book we wrote on last time... I\u0027m sorry...\");","lastModifiedDate":"2024-01-28"},{"lineNumber":101,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":102,"author":{"gitId":"BryanL2303"},"content":"        return tasks;","lastModifiedDate":"2024-01-28"},{"lineNumber":103,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":104,"author":{"gitId":"BryanL2303"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"BryanL2303":104}},{"path":"src/main/java/klee/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryanL2303"},"content":"package klee;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"BryanL2303"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"BryanL2303"},"content":"import klee.task.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"BryanL2303"},"content":"/**","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"BryanL2303"},"content":" * Contains function for interacting with the list of tasks.","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"BryanL2303"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"BryanL2303"},"content":"public class TaskList {","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"BryanL2303"},"content":"    protected ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"BryanL2303"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"BryanL2303"},"content":"     * Constructor for TaskList class.","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"BryanL2303"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"BryanL2303"},"content":"    public TaskList() {","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"BryanL2303"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"BryanL2303"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"BryanL2303"},"content":"     * Add task into tasks.","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"BryanL2303"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"BryanL2303"},"content":"     * @param task","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"BryanL2303"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"BryanL2303"},"content":"    public void add(Task task) {","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"BryanL2303"},"content":"        tasks.add(task);","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"BryanL2303"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"BryanL2303"},"content":"     * Remove task in index i from tasks.","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"BryanL2303"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"BryanL2303"},"content":"     * @param i","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"BryanL2303"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"BryanL2303"},"content":"    public void remove(int i) {","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"BryanL2303"},"content":"        tasks.remove(i);","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"BryanL2303"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"BryanL2303"},"content":"     * Return the task in index i of tasks.","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"BryanL2303"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"BryanL2303"},"content":"     * @param i","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"BryanL2303"},"content":"     * @return instance of Task.","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"BryanL2303"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"BryanL2303"},"content":"    public Task get(int i) {","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"BryanL2303"},"content":"        return tasks.get(i);","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"BryanL2303"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"BryanL2303"},"content":"     * Return number of tasks.","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"BryanL2303"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"BryanL2303"},"content":"     * @return number of tasks in tasks.","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"BryanL2303"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"BryanL2303"},"content":"    public int size() {","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"BryanL2303"},"content":"        return tasks.size();","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"BryanL2303"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"BryanL2303"},"content":"     * Checks if every task in obj is the same as this instance.","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"BryanL2303"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"BryanL2303"},"content":"     * @param obj","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"BryanL2303"},"content":"     * @return If obj is equal to this.","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"BryanL2303"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"BryanL2303"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"BryanL2303"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"BryanL2303"},"content":"        if (obj.getClass() \u003d\u003d TaskList.class) {","lastModifiedDate":"2024-01-28"},{"lineNumber":66,"author":{"gitId":"BryanL2303"},"content":"            try {","lastModifiedDate":"2024-01-28"},{"lineNumber":67,"author":{"gitId":"BryanL2303"},"content":"                if (this.size() \u003d\u003d ((TaskList) obj).size()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":68,"author":{"gitId":"BryanL2303"},"content":"                    for (int i \u003d 0; i \u003c this.size(); i++) {","lastModifiedDate":"2024-01-28"},{"lineNumber":69,"author":{"gitId":"BryanL2303"},"content":"                        if (this.get(i) \u003d\u003d ((TaskList) obj).get(i)) {","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"BryanL2303"},"content":"                            return false;","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"BryanL2303"},"content":"                        }","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"BryanL2303"},"content":"                    }","lastModifiedDate":"2024-01-28"},{"lineNumber":73,"author":{"gitId":"BryanL2303"},"content":"                    return true;","lastModifiedDate":"2024-01-28"},{"lineNumber":74,"author":{"gitId":"BryanL2303"},"content":"                } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":75,"author":{"gitId":"BryanL2303"},"content":"                    return false;","lastModifiedDate":"2024-01-29"},{"lineNumber":76,"author":{"gitId":"BryanL2303"},"content":"                }","lastModifiedDate":"2024-01-29"},{"lineNumber":77,"author":{"gitId":"BryanL2303"},"content":"            } catch (Exception e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":78,"author":{"gitId":"BryanL2303"},"content":"                return false;","lastModifiedDate":"2024-01-28"},{"lineNumber":79,"author":{"gitId":"BryanL2303"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":80,"author":{"gitId":"BryanL2303"},"content":"        } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":81,"author":{"gitId":"BryanL2303"},"content":"            return false;","lastModifiedDate":"2024-01-29"},{"lineNumber":82,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":83,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":84,"author":{"gitId":"BryanL2303"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"BryanL2303":84}},{"path":"src/main/java/klee/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryanL2303"},"content":"package klee;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"BryanL2303"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"BryanL2303"},"content":"import javafx.scene.Group;","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"BryanL2303"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"BryanL2303"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"BryanL2303"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"BryanL2303"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"BryanL2303"},"content":"import klee.task.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"BryanL2303"},"content":"/**","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"BryanL2303"},"content":" * Contains functions to output to the user.","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"BryanL2303"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"BryanL2303"},"content":"public class Ui {","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"BryanL2303"},"content":"    protected String divider \u003d \"____________________________________________________________________________\"","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"BryanL2303"},"content":"            + \"______________________________________\";","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"BryanL2303"},"content":"    protected VBox dialogContainer;","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"BryanL2303"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"BryanL2303"},"content":"     * Constructor for Ui class.","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"BryanL2303"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"BryanL2303"},"content":"    public Ui(VBox dialogContainer) {","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"BryanL2303"},"content":"        assert dialogContainer !\u003d null;","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"BryanL2303"},"content":"        this.dialogContainer \u003d dialogContainer;","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"BryanL2303"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"BryanL2303"},"content":"     * Welcome the user with a greeting.","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"BryanL2303"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"BryanL2303"},"content":"    public void showWelcome() {","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"BryanL2303"},"content":"        Label outputText \u003d new Label();","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"BryanL2303"},"content":"        outputText.setAlignment(Pos.BASELINE_LEFT);","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"BryanL2303"},"content":"        outputText.setText(\"Hello! My name is Klee. \"","lastModifiedDate":"2024-02-11"},{"lineNumber":34,"author":{"gitId":"BryanL2303"},"content":"                + \"\\nAre you here to break Klee out of solitary confinement?\");","lastModifiedDate":"2024-02-11"},{"lineNumber":35,"author":{"gitId":"BryanL2303"},"content":"        outputText.setTranslateX(100);","lastModifiedDate":"2024-02-11"},{"lineNumber":36,"author":{"gitId":"BryanL2303"},"content":"        outputText.setTranslateY(25);","lastModifiedDate":"2024-02-11"},{"lineNumber":37,"author":{"gitId":"BryanL2303"},"content":"        Group output;","lastModifiedDate":"2024-02-11"},{"lineNumber":38,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":39,"author":{"gitId":"BryanL2303"},"content":"        Image kleeImage \u003d new Image(getClass().getResourceAsStream(\"/images/Klee_star_eyes.jpg_large\"));","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"BryanL2303"},"content":"        ImageView kleeView \u003d new ImageView(kleeImage);","lastModifiedDate":"2024-02-11"},{"lineNumber":41,"author":{"gitId":"BryanL2303"},"content":"        kleeView.setX(0);","lastModifiedDate":"2024-02-11"},{"lineNumber":42,"author":{"gitId":"BryanL2303"},"content":"        kleeView.setY(0);","lastModifiedDate":"2024-02-11"},{"lineNumber":43,"author":{"gitId":"BryanL2303"},"content":"        kleeView.setPreserveRatio(true);","lastModifiedDate":"2024-02-11"},{"lineNumber":44,"author":{"gitId":"BryanL2303"},"content":"        kleeView.setFitHeight(100);","lastModifiedDate":"2024-02-11"},{"lineNumber":45,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":46,"author":{"gitId":"BryanL2303"},"content":"        Image paimonImage \u003d new Image(getClass().getResourceAsStream(\"/images/Paimon_proud.png\"));","lastModifiedDate":"2024-02-11"},{"lineNumber":47,"author":{"gitId":"BryanL2303"},"content":"        ImageView paimonView \u003d new ImageView(paimonImage);","lastModifiedDate":"2024-02-11"},{"lineNumber":48,"author":{"gitId":"BryanL2303"},"content":"        paimonView.setX(485);","lastModifiedDate":"2024-02-11"},{"lineNumber":49,"author":{"gitId":"BryanL2303"},"content":"        paimonView.setY(0);","lastModifiedDate":"2024-02-11"},{"lineNumber":50,"author":{"gitId":"BryanL2303"},"content":"        paimonView.setPreserveRatio(true);","lastModifiedDate":"2024-02-11"},{"lineNumber":51,"author":{"gitId":"BryanL2303"},"content":"        paimonView.setFitHeight(100);","lastModifiedDate":"2024-02-11"},{"lineNumber":52,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":53,"author":{"gitId":"BryanL2303"},"content":"        output \u003d new Group(kleeView, paimonView, outputText);","lastModifiedDate":"2024-02-11"},{"lineNumber":54,"author":{"gitId":"BryanL2303"},"content":"        dialogContainer.getChildren().add(output);","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":56,"author":{"gitId":"BryanL2303"},"content":"        Label dividerBlock \u003d new Label();","lastModifiedDate":"2024-02-11"},{"lineNumber":57,"author":{"gitId":"BryanL2303"},"content":"        dividerBlock.setText(divider);","lastModifiedDate":"2024-02-11"},{"lineNumber":58,"author":{"gitId":"BryanL2303"},"content":"        dialogContainer.getChildren().add(dividerBlock);","lastModifiedDate":"2024-02-11"},{"lineNumber":59,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"BryanL2303"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"BryanL2303"},"content":"     * Display the errorMessage given.","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"BryanL2303"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"BryanL2303"},"content":"     * @param errorMessage","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"BryanL2303"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":66,"author":{"gitId":"BryanL2303"},"content":"    public void showError(String errorMessage) {","lastModifiedDate":"2024-01-28"},{"lineNumber":67,"author":{"gitId":"BryanL2303"},"content":"        Label outputText \u003d new Label();","lastModifiedDate":"2024-02-11"},{"lineNumber":68,"author":{"gitId":"BryanL2303"},"content":"        outputText.setText(errorMessage);","lastModifiedDate":"2024-02-11"},{"lineNumber":69,"author":{"gitId":"BryanL2303"},"content":"        outputText.setTranslateX(120);","lastModifiedDate":"2024-02-11"},{"lineNumber":70,"author":{"gitId":"BryanL2303"},"content":"        outputText.setTranslateY(40);","lastModifiedDate":"2024-02-11"},{"lineNumber":71,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":72,"author":{"gitId":"BryanL2303"},"content":"        Image kleeImage \u003d new Image(getClass().getResourceAsStream(\"/images/Klee_thinking.jpg\"));","lastModifiedDate":"2024-02-11"},{"lineNumber":73,"author":{"gitId":"BryanL2303"},"content":"        ImageView kleeView \u003d new ImageView(kleeImage);","lastModifiedDate":"2024-02-11"},{"lineNumber":74,"author":{"gitId":"BryanL2303"},"content":"        kleeView.setX(0);","lastModifiedDate":"2024-02-11"},{"lineNumber":75,"author":{"gitId":"BryanL2303"},"content":"        kleeView.setY(0);","lastModifiedDate":"2024-02-11"},{"lineNumber":76,"author":{"gitId":"BryanL2303"},"content":"        kleeView.setPreserveRatio(true);","lastModifiedDate":"2024-02-11"},{"lineNumber":77,"author":{"gitId":"BryanL2303"},"content":"        kleeView.setFitHeight(100);","lastModifiedDate":"2024-02-11"},{"lineNumber":78,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":79,"author":{"gitId":"BryanL2303"},"content":"        Group output \u003d new Group(kleeView, outputText);","lastModifiedDate":"2024-02-11"},{"lineNumber":80,"author":{"gitId":"BryanL2303"},"content":"        dialogContainer.getChildren().add(output);","lastModifiedDate":"2024-02-04"},{"lineNumber":81,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":82,"author":{"gitId":"BryanL2303"},"content":"        Label dividerBlock \u003d new Label();","lastModifiedDate":"2024-02-11"},{"lineNumber":83,"author":{"gitId":"BryanL2303"},"content":"        dividerBlock.setText(divider);","lastModifiedDate":"2024-02-11"},{"lineNumber":84,"author":{"gitId":"BryanL2303"},"content":"        dialogContainer.getChildren().add(dividerBlock);","lastModifiedDate":"2024-02-11"},{"lineNumber":85,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":86,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":87,"author":{"gitId":"BryanL2303"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":88,"author":{"gitId":"BryanL2303"},"content":"     * List out all the tasks given.","lastModifiedDate":"2024-01-29"},{"lineNumber":89,"author":{"gitId":"BryanL2303"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":90,"author":{"gitId":"BryanL2303"},"content":"     * @param tasks","lastModifiedDate":"2024-01-29"},{"lineNumber":91,"author":{"gitId":"BryanL2303"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":92,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":93,"author":{"gitId":"BryanL2303"},"content":"    public void showTasks(TaskList tasks) {","lastModifiedDate":"2024-01-28"},{"lineNumber":94,"author":{"gitId":"BryanL2303"},"content":"        Group outputText \u003d new Group();","lastModifiedDate":"2024-02-11"},{"lineNumber":95,"author":{"gitId":"BryanL2303"},"content":"        Label outputLine \u003d new Label();","lastModifiedDate":"2024-02-11"},{"lineNumber":96,"author":{"gitId":"BryanL2303"},"content":"        outputLine.setText(\"These are all the things that we have to do today:\");","lastModifiedDate":"2024-02-11"},{"lineNumber":97,"author":{"gitId":"BryanL2303"},"content":"        outputText.getChildren().add(outputLine);","lastModifiedDate":"2024-02-11"},{"lineNumber":98,"author":{"gitId":"BryanL2303"},"content":"        outputText.setTranslateX(180);","lastModifiedDate":"2024-02-11"},{"lineNumber":99,"author":{"gitId":"BryanL2303"},"content":"        outputText.setTranslateY(0);","lastModifiedDate":"2024-02-11"},{"lineNumber":100,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":101,"author":{"gitId":"BryanL2303"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-01-28"},{"lineNumber":102,"author":{"gitId":"BryanL2303"},"content":"            outputLine \u003d new Label();","lastModifiedDate":"2024-02-11"},{"lineNumber":103,"author":{"gitId":"BryanL2303"},"content":"            outputLine.setText((i + 1) + \". \" + tasks.get(i).getStatus());","lastModifiedDate":"2024-02-11"},{"lineNumber":104,"author":{"gitId":"BryanL2303"},"content":"            double offset \u003d (1 + i) * 16;","lastModifiedDate":"2024-02-11"},{"lineNumber":105,"author":{"gitId":"BryanL2303"},"content":"            outputLine.setTranslateY(offset);","lastModifiedDate":"2024-02-11"},{"lineNumber":106,"author":{"gitId":"BryanL2303"},"content":"            outputText.getChildren().add(outputLine);","lastModifiedDate":"2024-02-11"},{"lineNumber":107,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":108,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":109,"author":{"gitId":"BryanL2303"},"content":"        Image kleeImage \u003d new Image(getClass().getResourceAsStream(\"/images/Klee_drawing.jpg\"));","lastModifiedDate":"2024-02-11"},{"lineNumber":110,"author":{"gitId":"BryanL2303"},"content":"        ImageView kleeView \u003d new ImageView(kleeImage);","lastModifiedDate":"2024-02-11"},{"lineNumber":111,"author":{"gitId":"BryanL2303"},"content":"        kleeView.setX(0);","lastModifiedDate":"2024-02-11"},{"lineNumber":112,"author":{"gitId":"BryanL2303"},"content":"        kleeView.setY(0);","lastModifiedDate":"2024-02-11"},{"lineNumber":113,"author":{"gitId":"BryanL2303"},"content":"        kleeView.setPreserveRatio(true);","lastModifiedDate":"2024-02-11"},{"lineNumber":114,"author":{"gitId":"BryanL2303"},"content":"        kleeView.setFitHeight(100);","lastModifiedDate":"2024-02-11"},{"lineNumber":115,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":116,"author":{"gitId":"BryanL2303"},"content":"        Group output \u003d new Group(kleeView, outputText);","lastModifiedDate":"2024-02-11"},{"lineNumber":117,"author":{"gitId":"BryanL2303"},"content":"        dialogContainer.getChildren().add(output);","lastModifiedDate":"2024-02-04"},{"lineNumber":118,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":119,"author":{"gitId":"BryanL2303"},"content":"        Label dividerBlock \u003d new Label();","lastModifiedDate":"2024-02-11"},{"lineNumber":120,"author":{"gitId":"BryanL2303"},"content":"        dividerBlock.setText(divider);","lastModifiedDate":"2024-02-11"},{"lineNumber":121,"author":{"gitId":"BryanL2303"},"content":"        dialogContainer.getChildren().add(dividerBlock);","lastModifiedDate":"2024-02-11"},{"lineNumber":122,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":123,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":124,"author":{"gitId":"BryanL2303"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":125,"author":{"gitId":"BryanL2303"},"content":"     * Output all the status of the task that are in tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":126,"author":{"gitId":"BryanL2303"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":127,"author":{"gitId":"BryanL2303"},"content":"     * @param tasks","lastModifiedDate":"2024-02-02"},{"lineNumber":128,"author":{"gitId":"BryanL2303"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":129,"author":{"gitId":"BryanL2303"},"content":"    public void showFilteredTasks(TaskList tasks) {","lastModifiedDate":"2024-02-02"},{"lineNumber":130,"author":{"gitId":"BryanL2303"},"content":"        Group outputText \u003d new Group();","lastModifiedDate":"2024-02-11"},{"lineNumber":131,"author":{"gitId":"BryanL2303"},"content":"        Label outputLine \u003d new Label();","lastModifiedDate":"2024-02-11"},{"lineNumber":132,"author":{"gitId":"BryanL2303"},"content":"        outputLine.setText(\"These are all the things that are similar to what you are looking for:\");","lastModifiedDate":"2024-02-11"},{"lineNumber":133,"author":{"gitId":"BryanL2303"},"content":"        outputText.getChildren().add(outputLine);","lastModifiedDate":"2024-02-11"},{"lineNumber":134,"author":{"gitId":"BryanL2303"},"content":"        outputText.setTranslateX(180);","lastModifiedDate":"2024-02-11"},{"lineNumber":135,"author":{"gitId":"BryanL2303"},"content":"        outputText.setTranslateY(0);","lastModifiedDate":"2024-02-11"},{"lineNumber":136,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":137,"author":{"gitId":"BryanL2303"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-02"},{"lineNumber":138,"author":{"gitId":"BryanL2303"},"content":"            outputLine \u003d new Label();","lastModifiedDate":"2024-02-11"},{"lineNumber":139,"author":{"gitId":"BryanL2303"},"content":"            outputLine.setText((i + 1) + \". \" + tasks.get(i).getStatus());","lastModifiedDate":"2024-02-11"},{"lineNumber":140,"author":{"gitId":"BryanL2303"},"content":"            double offset \u003d (1 + i) * 16;","lastModifiedDate":"2024-02-11"},{"lineNumber":141,"author":{"gitId":"BryanL2303"},"content":"            outputLine.setTranslateY(offset);","lastModifiedDate":"2024-02-11"},{"lineNumber":142,"author":{"gitId":"BryanL2303"},"content":"            outputText.getChildren().add(outputLine);","lastModifiedDate":"2024-02-11"},{"lineNumber":143,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":144,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":145,"author":{"gitId":"BryanL2303"},"content":"        Image kleeImage \u003d new Image(getClass().getResourceAsStream(\"/images/Klee_drawing.jpg\"));","lastModifiedDate":"2024-02-11"},{"lineNumber":146,"author":{"gitId":"BryanL2303"},"content":"        ImageView kleeView \u003d new ImageView(kleeImage);","lastModifiedDate":"2024-02-11"},{"lineNumber":147,"author":{"gitId":"BryanL2303"},"content":"        kleeView.setX(0);","lastModifiedDate":"2024-02-11"},{"lineNumber":148,"author":{"gitId":"BryanL2303"},"content":"        kleeView.setY(0);","lastModifiedDate":"2024-02-11"},{"lineNumber":149,"author":{"gitId":"BryanL2303"},"content":"        kleeView.setPreserveRatio(true);","lastModifiedDate":"2024-02-11"},{"lineNumber":150,"author":{"gitId":"BryanL2303"},"content":"        kleeView.setFitHeight(100);","lastModifiedDate":"2024-02-11"},{"lineNumber":151,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":152,"author":{"gitId":"BryanL2303"},"content":"        Group output \u003d new Group(kleeView, outputText);","lastModifiedDate":"2024-02-11"},{"lineNumber":153,"author":{"gitId":"BryanL2303"},"content":"        dialogContainer.getChildren().add(output);","lastModifiedDate":"2024-02-04"},{"lineNumber":154,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":155,"author":{"gitId":"BryanL2303"},"content":"        Label dividerBlock \u003d new Label();","lastModifiedDate":"2024-02-11"},{"lineNumber":156,"author":{"gitId":"BryanL2303"},"content":"        dividerBlock.setText(divider);","lastModifiedDate":"2024-02-11"},{"lineNumber":157,"author":{"gitId":"BryanL2303"},"content":"        dialogContainer.getChildren().add(dividerBlock);","lastModifiedDate":"2024-02-11"},{"lineNumber":158,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":159,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":160,"author":{"gitId":"BryanL2303"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":161,"author":{"gitId":"BryanL2303"},"content":"     * Shows that the task was successfully created.","lastModifiedDate":"2024-01-29"},{"lineNumber":162,"author":{"gitId":"BryanL2303"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":163,"author":{"gitId":"BryanL2303"},"content":"     * @param task","lastModifiedDate":"2024-01-29"},{"lineNumber":164,"author":{"gitId":"BryanL2303"},"content":"     * @param size","lastModifiedDate":"2024-01-29"},{"lineNumber":165,"author":{"gitId":"BryanL2303"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":166,"author":{"gitId":"BryanL2303"},"content":"    public void showCreation(Task task, int size) {","lastModifiedDate":"2024-01-28"},{"lineNumber":167,"author":{"gitId":"BryanL2303"},"content":"        Label outputText \u003d new Label();","lastModifiedDate":"2024-02-11"},{"lineNumber":168,"author":{"gitId":"BryanL2303"},"content":"        outputText.setText(\"Klee will help you write that down! : \"","lastModifiedDate":"2024-02-11"},{"lineNumber":169,"author":{"gitId":"BryanL2303"},"content":"                + \"\\n\" + task.getStatus()","lastModifiedDate":"2024-02-04"},{"lineNumber":170,"author":{"gitId":"BryanL2303"},"content":"                + \"\\n\" + \"Now you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2024-02-11"},{"lineNumber":171,"author":{"gitId":"BryanL2303"},"content":"        outputText.setTranslateX(180);","lastModifiedDate":"2024-02-11"},{"lineNumber":172,"author":{"gitId":"BryanL2303"},"content":"        outputText.setTranslateY(25);","lastModifiedDate":"2024-02-11"},{"lineNumber":173,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":174,"author":{"gitId":"BryanL2303"},"content":"        Image kleeImage \u003d new Image(getClass().getResourceAsStream(\"/images/Klee_drawing.jpg\"));","lastModifiedDate":"2024-02-11"},{"lineNumber":175,"author":{"gitId":"BryanL2303"},"content":"        ImageView kleeView \u003d new ImageView(kleeImage);","lastModifiedDate":"2024-02-11"},{"lineNumber":176,"author":{"gitId":"BryanL2303"},"content":"        kleeView.setX(0);","lastModifiedDate":"2024-02-11"},{"lineNumber":177,"author":{"gitId":"BryanL2303"},"content":"        kleeView.setY(0);","lastModifiedDate":"2024-02-11"},{"lineNumber":178,"author":{"gitId":"BryanL2303"},"content":"        kleeView.setPreserveRatio(true);","lastModifiedDate":"2024-02-11"},{"lineNumber":179,"author":{"gitId":"BryanL2303"},"content":"        kleeView.setFitHeight(100);","lastModifiedDate":"2024-02-11"},{"lineNumber":180,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":181,"author":{"gitId":"BryanL2303"},"content":"        Group output \u003d new Group(kleeView, outputText);","lastModifiedDate":"2024-02-11"},{"lineNumber":182,"author":{"gitId":"BryanL2303"},"content":"        dialogContainer.getChildren().add(output);","lastModifiedDate":"2024-02-04"},{"lineNumber":183,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":184,"author":{"gitId":"BryanL2303"},"content":"        Label dividerBlock \u003d new Label();","lastModifiedDate":"2024-02-11"},{"lineNumber":185,"author":{"gitId":"BryanL2303"},"content":"        dividerBlock.setText(divider);","lastModifiedDate":"2024-02-11"},{"lineNumber":186,"author":{"gitId":"BryanL2303"},"content":"        dialogContainer.getChildren().add(dividerBlock);","lastModifiedDate":"2024-02-11"},{"lineNumber":187,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":188,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":189,"author":{"gitId":"BryanL2303"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":190,"author":{"gitId":"BryanL2303"},"content":"     * Shows that the task was successfully marked.","lastModifiedDate":"2024-01-29"},{"lineNumber":191,"author":{"gitId":"BryanL2303"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":192,"author":{"gitId":"BryanL2303"},"content":"     * @param task","lastModifiedDate":"2024-01-29"},{"lineNumber":193,"author":{"gitId":"BryanL2303"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":194,"author":{"gitId":"BryanL2303"},"content":"    public void showMarked(Task task) {","lastModifiedDate":"2024-01-28"},{"lineNumber":195,"author":{"gitId":"BryanL2303"},"content":"        Label outputText \u003d new Label();","lastModifiedDate":"2024-02-11"},{"lineNumber":196,"author":{"gitId":"BryanL2303"},"content":"        outputText.setText(\"Great! Klee will put a big cross on this box:\"","lastModifiedDate":"2024-02-11"},{"lineNumber":197,"author":{"gitId":"BryanL2303"},"content":"                + \"\\n\" + task.getStatus());","lastModifiedDate":"2024-02-11"},{"lineNumber":198,"author":{"gitId":"BryanL2303"},"content":"        outputText.setTranslateX(180);","lastModifiedDate":"2024-02-11"},{"lineNumber":199,"author":{"gitId":"BryanL2303"},"content":"        outputText.setTranslateY(25);","lastModifiedDate":"2024-02-11"},{"lineNumber":200,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":201,"author":{"gitId":"BryanL2303"},"content":"        Image kleeImage \u003d new Image(getClass().getResourceAsStream(\"/images/Klee_drawing.jpg\"));","lastModifiedDate":"2024-02-11"},{"lineNumber":202,"author":{"gitId":"BryanL2303"},"content":"        ImageView kleeView \u003d new ImageView(kleeImage);","lastModifiedDate":"2024-02-11"},{"lineNumber":203,"author":{"gitId":"BryanL2303"},"content":"        kleeView.setX(0);","lastModifiedDate":"2024-02-11"},{"lineNumber":204,"author":{"gitId":"BryanL2303"},"content":"        kleeView.setY(0);","lastModifiedDate":"2024-02-11"},{"lineNumber":205,"author":{"gitId":"BryanL2303"},"content":"        kleeView.setPreserveRatio(true);","lastModifiedDate":"2024-02-11"},{"lineNumber":206,"author":{"gitId":"BryanL2303"},"content":"        kleeView.setFitHeight(100);","lastModifiedDate":"2024-02-11"},{"lineNumber":207,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":208,"author":{"gitId":"BryanL2303"},"content":"        Group output \u003d new Group(kleeView, outputText);","lastModifiedDate":"2024-02-11"},{"lineNumber":209,"author":{"gitId":"BryanL2303"},"content":"        dialogContainer.getChildren().add(output);","lastModifiedDate":"2024-02-04"},{"lineNumber":210,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":211,"author":{"gitId":"BryanL2303"},"content":"        Label dividerBlock \u003d new Label();","lastModifiedDate":"2024-02-11"},{"lineNumber":212,"author":{"gitId":"BryanL2303"},"content":"        dividerBlock.setText(divider);","lastModifiedDate":"2024-02-11"},{"lineNumber":213,"author":{"gitId":"BryanL2303"},"content":"        dialogContainer.getChildren().add(dividerBlock);","lastModifiedDate":"2024-02-11"},{"lineNumber":214,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":215,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":216,"author":{"gitId":"BryanL2303"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":217,"author":{"gitId":"BryanL2303"},"content":"     * Shows that the task was successfully unmarked.","lastModifiedDate":"2024-01-29"},{"lineNumber":218,"author":{"gitId":"BryanL2303"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":219,"author":{"gitId":"BryanL2303"},"content":"     * @param task","lastModifiedDate":"2024-01-29"},{"lineNumber":220,"author":{"gitId":"BryanL2303"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":221,"author":{"gitId":"BryanL2303"},"content":"    public void showUnMarked(Task task) {","lastModifiedDate":"2024-01-28"},{"lineNumber":222,"author":{"gitId":"BryanL2303"},"content":"        Label outputText \u003d new Label();","lastModifiedDate":"2024-02-11"},{"lineNumber":223,"author":{"gitId":"BryanL2303"},"content":"        outputText.setText(\"Oh no! Klee will burn the cross away...:\"","lastModifiedDate":"2024-02-11"},{"lineNumber":224,"author":{"gitId":"BryanL2303"},"content":"                + \"\\n\" + task.getStatus());","lastModifiedDate":"2024-02-11"},{"lineNumber":225,"author":{"gitId":"BryanL2303"},"content":"        outputText.setTranslateX(180);","lastModifiedDate":"2024-02-11"},{"lineNumber":226,"author":{"gitId":"BryanL2303"},"content":"        outputText.setTranslateY(25);","lastModifiedDate":"2024-02-11"},{"lineNumber":227,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":228,"author":{"gitId":"BryanL2303"},"content":"        Image kleeImage \u003d new Image(getClass().getResourceAsStream(\"/images/Klee_drawing.jpg\"));","lastModifiedDate":"2024-02-11"},{"lineNumber":229,"author":{"gitId":"BryanL2303"},"content":"        ImageView kleeView \u003d new ImageView(kleeImage);","lastModifiedDate":"2024-02-11"},{"lineNumber":230,"author":{"gitId":"BryanL2303"},"content":"        kleeView.setX(0);","lastModifiedDate":"2024-02-11"},{"lineNumber":231,"author":{"gitId":"BryanL2303"},"content":"        kleeView.setY(0);","lastModifiedDate":"2024-02-11"},{"lineNumber":232,"author":{"gitId":"BryanL2303"},"content":"        kleeView.setPreserveRatio(true);","lastModifiedDate":"2024-02-11"},{"lineNumber":233,"author":{"gitId":"BryanL2303"},"content":"        kleeView.setFitHeight(100);","lastModifiedDate":"2024-02-11"},{"lineNumber":234,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":235,"author":{"gitId":"BryanL2303"},"content":"        Group output \u003d new Group(kleeView, outputText);","lastModifiedDate":"2024-02-11"},{"lineNumber":236,"author":{"gitId":"BryanL2303"},"content":"        dialogContainer.getChildren().add(output);","lastModifiedDate":"2024-02-04"},{"lineNumber":237,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":238,"author":{"gitId":"BryanL2303"},"content":"        Label dividerBlock \u003d new Label();","lastModifiedDate":"2024-02-11"},{"lineNumber":239,"author":{"gitId":"BryanL2303"},"content":"        dividerBlock.setText(divider);","lastModifiedDate":"2024-02-11"},{"lineNumber":240,"author":{"gitId":"BryanL2303"},"content":"        dialogContainer.getChildren().add(dividerBlock);","lastModifiedDate":"2024-02-11"},{"lineNumber":241,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":242,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":243,"author":{"gitId":"BryanL2303"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":244,"author":{"gitId":"BryanL2303"},"content":"     * Shows that the task was successfully deleted.","lastModifiedDate":"2024-01-29"},{"lineNumber":245,"author":{"gitId":"BryanL2303"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":246,"author":{"gitId":"BryanL2303"},"content":"     * @param task","lastModifiedDate":"2024-01-29"},{"lineNumber":247,"author":{"gitId":"BryanL2303"},"content":"     * @param size","lastModifiedDate":"2024-01-29"},{"lineNumber":248,"author":{"gitId":"BryanL2303"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":249,"author":{"gitId":"BryanL2303"},"content":"    public void showDeletion(Task task, int size) {","lastModifiedDate":"2024-01-28"},{"lineNumber":250,"author":{"gitId":"BryanL2303"},"content":"        Label outputText \u003d new Label();","lastModifiedDate":"2024-02-11"},{"lineNumber":251,"author":{"gitId":"BryanL2303"},"content":"        outputText.setText(\"Okay, Klee will wipe this task away!\"","lastModifiedDate":"2024-02-11"},{"lineNumber":252,"author":{"gitId":"BryanL2303"},"content":"                + \"\\n\" + task.getStatus()","lastModifiedDate":"2024-02-04"},{"lineNumber":253,"author":{"gitId":"BryanL2303"},"content":"                + \"\\nNow you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2024-02-11"},{"lineNumber":254,"author":{"gitId":"BryanL2303"},"content":"        outputText.setTranslateX(180);","lastModifiedDate":"2024-02-11"},{"lineNumber":255,"author":{"gitId":"BryanL2303"},"content":"        outputText.setTranslateY(25);","lastModifiedDate":"2024-02-11"},{"lineNumber":256,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":257,"author":{"gitId":"BryanL2303"},"content":"        Image kleeImage \u003d new Image(getClass().getResourceAsStream(\"/images/Klee_drawing.jpg\"));","lastModifiedDate":"2024-02-11"},{"lineNumber":258,"author":{"gitId":"BryanL2303"},"content":"        ImageView kleeView \u003d new ImageView(kleeImage);","lastModifiedDate":"2024-02-11"},{"lineNumber":259,"author":{"gitId":"BryanL2303"},"content":"        kleeView.setX(0);","lastModifiedDate":"2024-02-11"},{"lineNumber":260,"author":{"gitId":"BryanL2303"},"content":"        kleeView.setY(0);","lastModifiedDate":"2024-02-11"},{"lineNumber":261,"author":{"gitId":"BryanL2303"},"content":"        kleeView.setPreserveRatio(true);","lastModifiedDate":"2024-02-11"},{"lineNumber":262,"author":{"gitId":"BryanL2303"},"content":"        kleeView.setFitHeight(100);","lastModifiedDate":"2024-02-11"},{"lineNumber":263,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":264,"author":{"gitId":"BryanL2303"},"content":"        Group output \u003d new Group(kleeView, outputText);","lastModifiedDate":"2024-02-11"},{"lineNumber":265,"author":{"gitId":"BryanL2303"},"content":"        dialogContainer.getChildren().add(output);","lastModifiedDate":"2024-02-04"},{"lineNumber":266,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":267,"author":{"gitId":"BryanL2303"},"content":"        Label dividerBlock \u003d new Label();","lastModifiedDate":"2024-02-11"},{"lineNumber":268,"author":{"gitId":"BryanL2303"},"content":"        dividerBlock.setText(divider);","lastModifiedDate":"2024-02-11"},{"lineNumber":269,"author":{"gitId":"BryanL2303"},"content":"        dialogContainer.getChildren().add(dividerBlock);","lastModifiedDate":"2024-02-11"},{"lineNumber":270,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":271,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":272,"author":{"gitId":"BryanL2303"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":273,"author":{"gitId":"BryanL2303"},"content":"     * Says goodbye to the user.","lastModifiedDate":"2024-01-29"},{"lineNumber":274,"author":{"gitId":"BryanL2303"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":275,"author":{"gitId":"BryanL2303"},"content":"    public void showBye() {","lastModifiedDate":"2024-01-28"},{"lineNumber":276,"author":{"gitId":"BryanL2303"},"content":"        Label output \u003d new Label();","lastModifiedDate":"2024-02-04"},{"lineNumber":277,"author":{"gitId":"BryanL2303"},"content":"        output.setAlignment(Pos.BASELINE_LEFT);","lastModifiedDate":"2024-02-04"},{"lineNumber":278,"author":{"gitId":"BryanL2303"},"content":"        output.setText(\"Goodbye. Klee will go back to solitary confinement now...\");","lastModifiedDate":"2024-02-11"},{"lineNumber":279,"author":{"gitId":"BryanL2303"},"content":"        dialogContainer.getChildren().add(output);","lastModifiedDate":"2024-02-04"},{"lineNumber":280,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":281,"author":{"gitId":"BryanL2303"},"content":"        Label dividerBlock \u003d new Label();","lastModifiedDate":"2024-02-11"},{"lineNumber":282,"author":{"gitId":"BryanL2303"},"content":"        dividerBlock.setText(divider);","lastModifiedDate":"2024-02-11"},{"lineNumber":283,"author":{"gitId":"BryanL2303"},"content":"        dialogContainer.getChildren().add(dividerBlock);","lastModifiedDate":"2024-02-11"},{"lineNumber":284,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":285,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":286,"author":{"gitId":"BryanL2303"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":287,"author":{"gitId":"BryanL2303"},"content":"     * Echo the user input.","lastModifiedDate":"2024-02-04"},{"lineNumber":288,"author":{"gitId":"BryanL2303"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":289,"author":{"gitId":"BryanL2303"},"content":"    public void echoUser(String userInput) {","lastModifiedDate":"2024-02-04"},{"lineNumber":290,"author":{"gitId":"BryanL2303"},"content":"        Label input \u003d new Label();","lastModifiedDate":"2024-02-04"},{"lineNumber":291,"author":{"gitId":"BryanL2303"},"content":"        input.setText(userInput);","lastModifiedDate":"2024-02-11"},{"lineNumber":292,"author":{"gitId":"BryanL2303"},"content":"        input.setTranslateY(25);","lastModifiedDate":"2024-02-11"},{"lineNumber":293,"author":{"gitId":"BryanL2303"},"content":"        input.setTranslateX(25);","lastModifiedDate":"2024-02-11"},{"lineNumber":294,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":295,"author":{"gitId":"BryanL2303"},"content":"        Image paimonImage \u003d new Image(getClass().getResourceAsStream(\"/images/Paimon_user.jpg\"));","lastModifiedDate":"2024-02-11"},{"lineNumber":296,"author":{"gitId":"BryanL2303"},"content":"        ImageView paimonView \u003d new ImageView(paimonImage);","lastModifiedDate":"2024-02-11"},{"lineNumber":297,"author":{"gitId":"BryanL2303"},"content":"        paimonView.setX(435);","lastModifiedDate":"2024-02-11"},{"lineNumber":298,"author":{"gitId":"BryanL2303"},"content":"        paimonView.setY(0);","lastModifiedDate":"2024-02-11"},{"lineNumber":299,"author":{"gitId":"BryanL2303"},"content":"        paimonView.setPreserveRatio(true);","lastModifiedDate":"2024-02-11"},{"lineNumber":300,"author":{"gitId":"BryanL2303"},"content":"        paimonView.setFitWidth(150);","lastModifiedDate":"2024-02-11"},{"lineNumber":301,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":302,"author":{"gitId":"BryanL2303"},"content":"        Group output \u003d new Group(paimonView, input);","lastModifiedDate":"2024-02-11"},{"lineNumber":303,"author":{"gitId":"BryanL2303"},"content":"        dialogContainer.getChildren().add(output);","lastModifiedDate":"2024-02-11"},{"lineNumber":304,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":305,"author":{"gitId":"BryanL2303"},"content":"        Label dividerBlock \u003d new Label();","lastModifiedDate":"2024-02-11"},{"lineNumber":306,"author":{"gitId":"BryanL2303"},"content":"        dividerBlock.setText(divider);","lastModifiedDate":"2024-02-11"},{"lineNumber":307,"author":{"gitId":"BryanL2303"},"content":"        dialogContainer.getChildren().add(dividerBlock);","lastModifiedDate":"2024-02-11"},{"lineNumber":308,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":309,"author":{"gitId":"BryanL2303"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"BryanL2303":309}},{"path":"src/main/java/klee/command/Bye.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryanL2303"},"content":"package klee.command;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"BryanL2303"},"content":"import klee.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"BryanL2303"},"content":"import klee.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"BryanL2303"},"content":"import klee.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"BryanL2303"},"content":"/**","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"BryanL2303"},"content":" * Represents the command for the user to end the program.","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"BryanL2303"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"BryanL2303"},"content":"public class Bye extends Command {","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"BryanL2303"},"content":"    public Bye() {}","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"BryanL2303"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"BryanL2303"},"content":"     * Invoke the UI to say goodbye to the user.","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"BryanL2303"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"BryanL2303"},"content":"     * @param ui","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"BryanL2303"},"content":"     * @param storage","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"BryanL2303"},"content":"     * @param tasks","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"BryanL2303"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"BryanL2303"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"BryanL2303"},"content":"    public void runCommand(Ui ui, Storage storage, TaskList tasks) {","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"BryanL2303"},"content":"        ui.showBye();","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"BryanL2303"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"BryanL2303"},"content":"     * Check if the obj is an instance of class Bye.","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"BryanL2303"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"BryanL2303"},"content":"     * @param obj","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"BryanL2303"},"content":"     * @return If the obj is an instance of class Bye.","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"BryanL2303"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"BryanL2303"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"BryanL2303"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"BryanL2303"},"content":"        return obj.getClass() \u003d\u003d Bye.class;","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"BryanL2303"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"BryanL2303":35}},{"path":"src/main/java/klee/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryanL2303"},"content":"package klee.command;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"BryanL2303"},"content":"import klee.KleeException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"BryanL2303"},"content":"import klee.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"BryanL2303"},"content":"import klee.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"BryanL2303"},"content":"import klee.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"BryanL2303"},"content":"/**","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"BryanL2303"},"content":" * Represents a command that Klee can run.","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"BryanL2303"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"BryanL2303"},"content":"public abstract class Command {","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"BryanL2303"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"BryanL2303"},"content":"     * To execute the command given by the user.","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"BryanL2303"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"BryanL2303"},"content":"     * @param ui","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"BryanL2303"},"content":"     * @param storage","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"BryanL2303"},"content":"     * @param tasks","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"BryanL2303"},"content":"     * @throws KleeException","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"BryanL2303"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"BryanL2303"},"content":"    public abstract void runCommand(Ui ui, Storage storage, TaskList tasks) throws KleeException;","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"BryanL2303"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"BryanL2303":21}},{"path":"src/main/java/klee/command/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryanL2303"},"content":"package klee.command;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"BryanL2303"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"BryanL2303"},"content":"import klee.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"BryanL2303"},"content":"import klee.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"BryanL2303"},"content":"import klee.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"BryanL2303"},"content":"import klee.task.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"BryanL2303"},"content":"/**","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"BryanL2303"},"content":" * Represents the command to create a deadline and add it to the list of tasks.","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"BryanL2303"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"BryanL2303"},"content":"public class Deadline extends Command {","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"BryanL2303"},"content":"    protected String description;","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"BryanL2303"},"content":"    protected LocalDateTime deadline;","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"BryanL2303"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"BryanL2303"},"content":"     * Constructor for Deadline class.","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"BryanL2303"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"BryanL2303"},"content":"     * @param description","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"BryanL2303"},"content":"     * @param deadline","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"BryanL2303"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"BryanL2303"},"content":"    public Deadline(String description, LocalDateTime deadline) {","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"BryanL2303"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"BryanL2303"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"BryanL2303"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"BryanL2303"},"content":"     * To execute the command.","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"BryanL2303"},"content":"     * Creates new instance of Deadline class and adds it to tasks.","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"BryanL2303"},"content":"     * Invokes the ui to show user that task has been added.","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"BryanL2303"},"content":"     * Invokes the storage to write the current updated tasks into txt file.","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"BryanL2303"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"BryanL2303"},"content":"     * @param ui","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"BryanL2303"},"content":"     * @param storage","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"BryanL2303"},"content":"     * @param tasks","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"BryanL2303"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"BryanL2303"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"BryanL2303"},"content":"    public void runCommand(Ui ui, Storage storage, TaskList tasks) {","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"BryanL2303"},"content":"        Task task \u003d new klee.task.Deadline(description, deadline);","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"BryanL2303"},"content":"        tasks.add(task);","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"BryanL2303"},"content":"        ui.showCreation(task, tasks.size());","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"BryanL2303"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"BryanL2303"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"BryanL2303"},"content":"     * Check if given obj is an instance of Deadline with the same description and deadline.","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"BryanL2303"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"BryanL2303"},"content":"     * @param obj","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"BryanL2303"},"content":"     * @return If obj has the same fields.","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"BryanL2303"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"BryanL2303"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"BryanL2303"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"BryanL2303"},"content":"        if (obj.getClass() \u003d\u003d Deadline.class) {","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"BryanL2303"},"content":"            boolean hasSameFields \u003d this.description.equals(((Deadline) obj).description)","lastModifiedDate":"2024-02-10"},{"lineNumber":56,"author":{"gitId":"BryanL2303"},"content":"                    \u0026\u0026 this.deadline.equals((((Deadline) obj).deadline));","lastModifiedDate":"2024-02-10"},{"lineNumber":57,"author":{"gitId":"BryanL2303"},"content":"            return (hasSameFields);","lastModifiedDate":"2024-02-10"},{"lineNumber":58,"author":{"gitId":"BryanL2303"},"content":"        } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"BryanL2303"},"content":"            return false;","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"BryanL2303"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"BryanL2303":62}},{"path":"src/main/java/klee/command/Delete.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryanL2303"},"content":"package klee.command;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"BryanL2303"},"content":"import klee.KleeException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"BryanL2303"},"content":"import klee.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"BryanL2303"},"content":"import klee.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"BryanL2303"},"content":"import klee.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"BryanL2303"},"content":"import klee.task.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"BryanL2303"},"content":"/**","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"BryanL2303"},"content":" * Represents the command for Klee to delete a task.","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"BryanL2303"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"BryanL2303"},"content":"public class Delete extends Command {","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"BryanL2303"},"content":"    protected int index;","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"BryanL2303"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"BryanL2303"},"content":"     * Constructor for the Delete class.","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"BryanL2303"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"BryanL2303"},"content":"     * @param index","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"BryanL2303"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"BryanL2303"},"content":"    public Delete(int index) {","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"BryanL2303"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"BryanL2303"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"BryanL2303"},"content":"     * Execute the command to delete a task.","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"BryanL2303"},"content":"     * Check if the task exists, remove the task from tasks.","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"BryanL2303"},"content":"     * Invoke ui to let users know about deletion.","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"BryanL2303"},"content":"     * Invoke storage to save the current tasks into txt file.","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"BryanL2303"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"BryanL2303"},"content":"     * @param ui","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"BryanL2303"},"content":"     * @param storage","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"BryanL2303"},"content":"     * @param tasks","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"BryanL2303"},"content":"     * @throws KleeException","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"BryanL2303"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"BryanL2303"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"BryanL2303"},"content":"    public void runCommand(Ui ui, Storage storage, TaskList tasks) throws KleeException {","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"BryanL2303"},"content":"        if (index \u003c tasks.size()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"BryanL2303"},"content":"            Task task \u003d tasks.get(index);","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"BryanL2303"},"content":"            tasks.remove(index);","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"BryanL2303"},"content":"            ui.showDeletion(task, tasks.size());","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"BryanL2303"},"content":"            storage.saveTasks(tasks);","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"BryanL2303"},"content":"        } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"BryanL2303"},"content":"            throw new KleeException(\"But we only have \" + tasks.size() + \" tasks in the list...\");","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"BryanL2303"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"BryanL2303"},"content":"     * Return if the obj is an instance of Delete class with the same index.","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"BryanL2303"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"BryanL2303"},"content":"     * @param obj","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"BryanL2303"},"content":"     * @return If obj is Delete with same index.","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"BryanL2303"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"BryanL2303"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"BryanL2303"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"BryanL2303"},"content":"        if (obj.getClass() \u003d\u003d Delete.class) {","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"BryanL2303"},"content":"            return this.index \u003d\u003d ((Delete) obj).index;","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"BryanL2303"},"content":"        } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"BryanL2303"},"content":"            return false;","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"BryanL2303"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"BryanL2303":61}},{"path":"src/main/java/klee/command/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryanL2303"},"content":"package klee.command;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"BryanL2303"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"BryanL2303"},"content":"import klee.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"BryanL2303"},"content":"import klee.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"BryanL2303"},"content":"import klee.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"BryanL2303"},"content":"import klee.task.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"BryanL2303"},"content":"/**","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"BryanL2303"},"content":" * Represents the command for Klee to create a new Event and add it into tasks.","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"BryanL2303"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"BryanL2303"},"content":"public class Event extends Command {","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"BryanL2303"},"content":"    protected String description;","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"BryanL2303"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"BryanL2303"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"BryanL2303"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"BryanL2303"},"content":"     * Constructor for Event class.","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"BryanL2303"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"BryanL2303"},"content":"     * @param description","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"BryanL2303"},"content":"     * @param from","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"BryanL2303"},"content":"     * @param to","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"BryanL2303"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"BryanL2303"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"BryanL2303"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"BryanL2303"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"BryanL2303"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"BryanL2303"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"BryanL2303"},"content":"     * Execute the command to create Event.","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"BryanL2303"},"content":"     * Add new instance of Event into tasks.","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"BryanL2303"},"content":"     * Invoke ui to show that Event was added.","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"BryanL2303"},"content":"     * Invoke storage to save tasks into txt file.","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"BryanL2303"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"BryanL2303"},"content":"     * @param ui","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"BryanL2303"},"content":"     * @param storage","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"BryanL2303"},"content":"     * @param tasks","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"BryanL2303"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"BryanL2303"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"BryanL2303"},"content":"    public void runCommand(Ui ui, Storage storage, TaskList tasks) {","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"BryanL2303"},"content":"        Task task \u003d new klee.task.Event(description, from, to);","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"BryanL2303"},"content":"        tasks.add(task);","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"BryanL2303"},"content":"        ui.showCreation(task, tasks.size());","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"BryanL2303"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"BryanL2303"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"BryanL2303"},"content":"     * Check if obj is equivalent to this instance.","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"BryanL2303"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"BryanL2303"},"content":"     * @param obj","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"BryanL2303"},"content":"     * @return If obj is instance of Event with the same fields.","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"BryanL2303"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"BryanL2303"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"BryanL2303"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"BryanL2303"},"content":"        if (obj.getClass() \u003d\u003d Event.class) {","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"BryanL2303"},"content":"            boolean hasSameFields \u003d this.description.equals(((Event) obj).description)","lastModifiedDate":"2024-02-11"},{"lineNumber":59,"author":{"gitId":"BryanL2303"},"content":"                    \u0026\u0026 this.from.equals((((Event) obj).from)) \u0026\u0026 this.to.equals((((Event) obj).to));","lastModifiedDate":"2024-02-11"},{"lineNumber":60,"author":{"gitId":"BryanL2303"},"content":"            return (hasSameFields);","lastModifiedDate":"2024-02-10"},{"lineNumber":61,"author":{"gitId":"BryanL2303"},"content":"        } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"BryanL2303"},"content":"            return false;","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"BryanL2303"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"BryanL2303":65}},{"path":"src/main/java/klee/command/Find.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryanL2303"},"content":"package klee.command;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"BryanL2303"},"content":"import klee.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"BryanL2303"},"content":"import klee.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"BryanL2303"},"content":"import klee.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"BryanL2303"},"content":"import klee.task.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"BryanL2303"},"content":"/**","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"BryanL2303"},"content":" * Represent the command to filter tasks by their description.","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"BryanL2303"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"BryanL2303"},"content":"public class Find extends Command {","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"BryanL2303"},"content":"    protected String searchTerm;","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"BryanL2303"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"BryanL2303"},"content":"     * Constructor for Find class.","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"BryanL2303"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"BryanL2303"},"content":"     * @param searchTerm","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"BryanL2303"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"BryanL2303"},"content":"    public Find(String searchTerm) {","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"BryanL2303"},"content":"        this.searchTerm \u003d searchTerm;","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"BryanL2303"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"BryanL2303"},"content":"     * With the search term given, filter all tasks to check if they contain the search term.","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"BryanL2303"},"content":"     * Invoke ui to display all filtered tasks.","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"BryanL2303"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"BryanL2303"},"content":"     * @param ui","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"BryanL2303"},"content":"     * @param storage","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"BryanL2303"},"content":"     * @param tasks","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"BryanL2303"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"BryanL2303"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"BryanL2303"},"content":"    public void runCommand(Ui ui, Storage storage, TaskList tasks) {","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"BryanL2303"},"content":"        TaskList filteredTasks \u003d new TaskList();","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"BryanL2303"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"BryanL2303"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"BryanL2303"},"content":"            if (task.include(searchTerm)) {","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"BryanL2303"},"content":"                filteredTasks.add(task);","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"BryanL2303"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"BryanL2303"},"content":"        ui.showFilteredTasks(filteredTasks);","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"BryanL2303"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"BryanL2303"},"content":"     * Check if obj is instance of Find with same fields.","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"BryanL2303"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"BryanL2303"},"content":"     * @param obj","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"BryanL2303"},"content":"     * @return If obj is equal to this.","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"BryanL2303"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"BryanL2303"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"BryanL2303"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"BryanL2303"},"content":"        return obj.getClass() \u003d\u003d Find.class;","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"BryanL2303"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"BryanL2303":53}},{"path":"src/main/java/klee/command/List.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryanL2303"},"content":"package klee.command;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"BryanL2303"},"content":"import klee.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"BryanL2303"},"content":"import klee.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"BryanL2303"},"content":"import klee.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"BryanL2303"},"content":"/**","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"BryanL2303"},"content":" * Represents the command for Klee to list all tasks.","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"BryanL2303"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"BryanL2303"},"content":"public class List extends Command {","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"BryanL2303"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"BryanL2303"},"content":"     * Execute command to list all tasks.","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"BryanL2303"},"content":"     * Invoke ui to show all tasks.","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"BryanL2303"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"BryanL2303"},"content":"     * @param ui","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"BryanL2303"},"content":"     * @param storage","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"BryanL2303"},"content":"     * @param tasks","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"BryanL2303"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"BryanL2303"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"BryanL2303"},"content":"    public void runCommand(Ui ui, Storage storage, TaskList tasks) {","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"BryanL2303"},"content":"        ui.showTasks(tasks);","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"BryanL2303"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"BryanL2303"},"content":"     * Check if obj is instance of class List.","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"BryanL2303"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"BryanL2303"},"content":"     * @param obj","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"BryanL2303"},"content":"     * @return If obj is instance of List.","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"BryanL2303"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"BryanL2303"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"BryanL2303"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"BryanL2303"},"content":"        return obj.getClass() \u003d\u003d List.class;","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"BryanL2303"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"BryanL2303":34}},{"path":"src/main/java/klee/command/Mark.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryanL2303"},"content":"package klee.command;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"BryanL2303"},"content":"import klee.KleeException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"BryanL2303"},"content":"import klee.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"BryanL2303"},"content":"import klee.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"BryanL2303"},"content":"import klee.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"BryanL2303"},"content":"import klee.task.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"BryanL2303"},"content":"/**","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"BryanL2303"},"content":" * Represents the command for Klee to mark a task as complete.","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"BryanL2303"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"BryanL2303"},"content":"public class Mark extends Command {","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"BryanL2303"},"content":"    protected int index;","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"BryanL2303"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"BryanL2303"},"content":"     * Constructor for Mark class.","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"BryanL2303"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"BryanL2303"},"content":"     * @param index","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"BryanL2303"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"BryanL2303"},"content":"    public Mark(int index) {","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"BryanL2303"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"BryanL2303"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"BryanL2303"},"content":"     * Execute command to mark a task.","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"BryanL2303"},"content":"     * Marks the task.","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"BryanL2303"},"content":"     * Invoke ui to show that task was marked.","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"BryanL2303"},"content":"     * Invoke storage to save tasks into txt file.","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"BryanL2303"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"BryanL2303"},"content":"     * @param ui","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"BryanL2303"},"content":"     * @param storage","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"BryanL2303"},"content":"     * @param tasks","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"BryanL2303"},"content":"     * @throws KleeException","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"BryanL2303"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"BryanL2303"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"BryanL2303"},"content":"    public void runCommand(Ui ui, Storage storage, TaskList tasks) throws KleeException {","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"BryanL2303"},"content":"        if (index \u003c tasks.size()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"BryanL2303"},"content":"            Task task \u003d tasks.get(index);","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"BryanL2303"},"content":"            task.mark();","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"BryanL2303"},"content":"            storage.saveTasks(tasks);","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"BryanL2303"},"content":"            ui.showMarked(task);","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"BryanL2303"},"content":"        } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"BryanL2303"},"content":"            throw new KleeException(\"We do not have that many tasks on the list!\");","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"BryanL2303"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"BryanL2303"},"content":"     * Check if obj is instance of Mark class with same fields.","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"BryanL2303"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"BryanL2303"},"content":"     * @param obj","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"BryanL2303"},"content":"     * @return If obj belongs to Mark class with same index.","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"BryanL2303"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"BryanL2303"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"BryanL2303"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"BryanL2303"},"content":"        if (obj.getClass() \u003d\u003d Mark.class) {","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"BryanL2303"},"content":"            return this.index \u003d\u003d ((Mark) obj).index;","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"BryanL2303"},"content":"        } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"BryanL2303"},"content":"            return false;","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"BryanL2303"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"BryanL2303":61}},{"path":"src/main/java/klee/command/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryanL2303"},"content":"package klee.command;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"BryanL2303"},"content":"import klee.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"BryanL2303"},"content":"import klee.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"BryanL2303"},"content":"import klee.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"BryanL2303"},"content":"import klee.task.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"BryanL2303"},"content":"/**","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"BryanL2303"},"content":" * Represents command for Klee to create new ToDo and add it to tasks.","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"BryanL2303"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"BryanL2303"},"content":"public class ToDo extends Command {","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"BryanL2303"},"content":"    protected String description;","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"BryanL2303"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"BryanL2303"},"content":"     * Constructor for ToDo class.","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"BryanL2303"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"BryanL2303"},"content":"     * @param description","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"BryanL2303"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"BryanL2303"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"BryanL2303"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"BryanL2303"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"BryanL2303"},"content":"     * Execute command to create new ToDo and add it to tasks.","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"BryanL2303"},"content":"     * Create new instance of ToDo class and add it to tasks.","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"BryanL2303"},"content":"     * Invoke ui to show that task was added.","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"BryanL2303"},"content":"     * Invoke storage to save tasks into a txt file.","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"BryanL2303"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"BryanL2303"},"content":"     * @param ui","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"BryanL2303"},"content":"     * @param storage","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"BryanL2303"},"content":"     * @param tasks","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"BryanL2303"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"BryanL2303"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"BryanL2303"},"content":"    public void runCommand(Ui ui, Storage storage, TaskList tasks) {","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"BryanL2303"},"content":"        Task task \u003d new klee.task.ToDo(description);","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"BryanL2303"},"content":"        tasks.add(task);","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"BryanL2303"},"content":"        ui.showCreation(task, tasks.size());","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"BryanL2303"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"BryanL2303"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"BryanL2303"},"content":"     * Check if obj is instance of ToDo class with same fields.","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"BryanL2303"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"BryanL2303"},"content":"     * @param obj","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"BryanL2303"},"content":"     * @return If obj is instance of ToDo with same fields.","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"BryanL2303"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"BryanL2303"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"BryanL2303"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"BryanL2303"},"content":"        if (obj.getClass() \u003d\u003d ToDo.class) {","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"BryanL2303"},"content":"            return this.description.equals(((ToDo) obj).description);","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"BryanL2303"},"content":"        } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"BryanL2303"},"content":"            return false;","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"BryanL2303"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"BryanL2303":55}},{"path":"src/main/java/klee/command/Unmark.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryanL2303"},"content":"package klee.command;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"BryanL2303"},"content":"import klee.KleeException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"BryanL2303"},"content":"import klee.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"BryanL2303"},"content":"import klee.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"BryanL2303"},"content":"import klee.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"BryanL2303"},"content":"import klee.task.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"BryanL2303"},"content":"/**","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"BryanL2303"},"content":" * Represents the command for Klee to unmark a task as incomplete.","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"BryanL2303"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"BryanL2303"},"content":"public class Unmark extends Command {","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"BryanL2303"},"content":"    protected int index;","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"BryanL2303"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"BryanL2303"},"content":"     * Constructor of Unmark class.","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"BryanL2303"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"BryanL2303"},"content":"     * @param index","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"BryanL2303"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"BryanL2303"},"content":"    public Unmark(int index) {","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"BryanL2303"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"BryanL2303"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"BryanL2303"},"content":"     * Execute command to unmark a task.","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"BryanL2303"},"content":"     * Unmark task.","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"BryanL2303"},"content":"     * Invoke ui to show that task was unmarked.","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"BryanL2303"},"content":"     * Invoke storage to save tasks into a txt file.","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"BryanL2303"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"BryanL2303"},"content":"     * @param ui","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"BryanL2303"},"content":"     * @param storage","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"BryanL2303"},"content":"     * @param tasks","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"BryanL2303"},"content":"     * @throws KleeException","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"BryanL2303"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"BryanL2303"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"BryanL2303"},"content":"    public void runCommand(Ui ui, Storage storage, TaskList tasks) throws KleeException {","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"BryanL2303"},"content":"        if (index \u003c tasks.size()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"BryanL2303"},"content":"            Task task \u003d tasks.get(index);","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"BryanL2303"},"content":"            task.unMark();","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"BryanL2303"},"content":"            storage.saveTasks(tasks);","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"BryanL2303"},"content":"            ui.showUnMarked(task);","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"BryanL2303"},"content":"        } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"BryanL2303"},"content":"            throw new KleeException(\"We do not have that many tasks on the list!\");","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"BryanL2303"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"BryanL2303"},"content":"     * Check if obj is equal to current instance.","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"BryanL2303"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"BryanL2303"},"content":"     * @param obj","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"BryanL2303"},"content":"     * @return If obj is instance of Unmark and has same index.","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"BryanL2303"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"BryanL2303"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"BryanL2303"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"BryanL2303"},"content":"        if (obj.getClass() \u003d\u003d Unmark.class) {","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"BryanL2303"},"content":"            return this.index \u003d\u003d ((Unmark) obj).index;","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"BryanL2303"},"content":"        } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"BryanL2303"},"content":"            return false;","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"BryanL2303"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"BryanL2303":61}},{"path":"src/main/java/klee/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryanL2303"},"content":"package klee.task;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"BryanL2303"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"BryanL2303"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"BryanL2303"},"content":"/**","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"BryanL2303"},"content":" * Represents a task that has to be completed with a deadline.","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"BryanL2303"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"BryanL2303"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"BryanL2303"},"content":"    protected LocalDateTime deadline;","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"BryanL2303"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"BryanL2303"},"content":"     * Constructor for Deadline class.","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"BryanL2303"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"BryanL2303"},"content":"     * @param description","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"BryanL2303"},"content":"     * @param deadline","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"BryanL2303"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"BryanL2303"},"content":"    public Deadline(String description, LocalDateTime deadline) {","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"BryanL2303"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"BryanL2303"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"BryanL2303"},"content":"        this.type \u003d \"D\";","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"BryanL2303"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"BryanL2303"},"content":"     * Returns the type and current completion status of task with its deadline.","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"BryanL2303"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"BryanL2303"},"content":"     * @return String to represent current state of class.","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"BryanL2303"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"BryanL2303"},"content":"    public String getStatus() {","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"BryanL2303"},"content":"        String statusIcon \u003d (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"BryanL2303"},"content":"        return \"[\" + type + \"][\" + statusIcon + \"] \" + description + \" (by: \"","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"BryanL2303"},"content":"                + deadline.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy h:ma\")) + \")\";","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":34,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":35,"author":{"gitId":"BryanL2303"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"BryanL2303"},"content":"     * Creates a String to represent this task in the txt file.","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"BryanL2303"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"BryanL2303"},"content":"     * @return String to be stored in txt file.","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"BryanL2303"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"BryanL2303"},"content":"    public String toText() {","lastModifiedDate":"2024-01-26"},{"lineNumber":41,"author":{"gitId":"BryanL2303"},"content":"        return super.toText() + \" / \" + deadline.format(DateTimeFormatter.ofPattern(\"yyyy MM dd H m\"));","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":43,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":44,"author":{"gitId":"BryanL2303"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"BryanL2303"},"content":"     * Given input from txt file create new instance of Deadline.","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"BryanL2303"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"BryanL2303"},"content":"     * @param description","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"BryanL2303"},"content":"     * @param done","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"BryanL2303"},"content":"     * @param by","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"BryanL2303"},"content":"     * @return Instance of Task.","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"BryanL2303"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"BryanL2303"},"content":"    public static Task fromText(String description, String done, LocalDateTime by) {","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"BryanL2303"},"content":"        Task task \u003d new Deadline(description, by);","lastModifiedDate":"2024-01-26"},{"lineNumber":54,"author":{"gitId":"BryanL2303"},"content":"        task.isDone \u003d done.equals(\"1\");","lastModifiedDate":"2024-01-26"},{"lineNumber":55,"author":{"gitId":"BryanL2303"},"content":"        return task;","lastModifiedDate":"2024-01-26"},{"lineNumber":56,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":57,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"BryanL2303"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"BryanL2303"},"content":"     * Checks if obj is the same as the current instance.","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"BryanL2303"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"BryanL2303"},"content":"     * @param obj","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"BryanL2303"},"content":"     * @return If obj has the same fields as this.","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"BryanL2303"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"BryanL2303"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"BryanL2303"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-01-28"},{"lineNumber":66,"author":{"gitId":"BryanL2303"},"content":"        if (Task.class.isAssignableFrom(obj.getClass())) {","lastModifiedDate":"2024-01-29"},{"lineNumber":67,"author":{"gitId":"BryanL2303"},"content":"            boolean hasSameFields \u003d this.deadline \u003d\u003d ((Deadline) obj).deadline;","lastModifiedDate":"2024-02-10"},{"lineNumber":68,"author":{"gitId":"BryanL2303"},"content":"            return super.equals(obj) \u0026\u0026 hasSameFields;","lastModifiedDate":"2024-02-10"},{"lineNumber":69,"author":{"gitId":"BryanL2303"},"content":"        } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":70,"author":{"gitId":"BryanL2303"},"content":"            return false;","lastModifiedDate":"2024-01-29"},{"lineNumber":71,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":73,"author":{"gitId":"BryanL2303"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"BryanL2303":73}},{"path":"src/main/java/klee/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryanL2303"},"content":"package klee.task;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"BryanL2303"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"BryanL2303"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"BryanL2303"},"content":"/**","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"BryanL2303"},"content":" * Represents an event with a duration.","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"BryanL2303"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"BryanL2303"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"BryanL2303"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"BryanL2303"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"BryanL2303"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"BryanL2303"},"content":"     * Constructor for Event class.","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"BryanL2303"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"BryanL2303"},"content":"     * @param description","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"BryanL2303"},"content":"     * @param from","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"BryanL2303"},"content":"     * @param to","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"BryanL2303"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"BryanL2303"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"BryanL2303"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"BryanL2303"},"content":"        this.type \u003d \"E\";","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"BryanL2303"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"BryanL2303"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"BryanL2303"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"BryanL2303"},"content":"     * Returns the type and current completion status of event with its start and end date.","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"BryanL2303"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"BryanL2303"},"content":"     * @return String to represent current state of class.","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"BryanL2303"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"BryanL2303"},"content":"    public String getStatus() {","lastModifiedDate":"2024-01-24"},{"lineNumber":33,"author":{"gitId":"BryanL2303"},"content":"        String statusIcon \u003d (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-01-24"},{"lineNumber":34,"author":{"gitId":"BryanL2303"},"content":"        return \"[\" + type + \"][\" + statusIcon + \"] \" + description + \" (from: \"","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"BryanL2303"},"content":"                + from.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy h:ma\")) + \" to: \"","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"BryanL2303"},"content":"                + to.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy h:ma\")) + \")\";","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":38,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":39,"author":{"gitId":"BryanL2303"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"BryanL2303"},"content":"     * Creates a String to represent this task in the txt file.","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"BryanL2303"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"BryanL2303"},"content":"     * @return String to be stored in txt file.","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"BryanL2303"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"BryanL2303"},"content":"    public String toText() {","lastModifiedDate":"2024-01-26"},{"lineNumber":45,"author":{"gitId":"BryanL2303"},"content":"        return super.toText() + \" / \" + from.format(DateTimeFormatter.ofPattern(\"yyyy MM dd H m\")) + \" / \"","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"BryanL2303"},"content":"                + to.format(DateTimeFormatter.ofPattern(\"yyyy MM dd H m\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":48,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":49,"author":{"gitId":"BryanL2303"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"BryanL2303"},"content":"     * Given input from txt file create new instance of Event.","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"BryanL2303"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"BryanL2303"},"content":"     * @param description","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"BryanL2303"},"content":"     * @param done","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"BryanL2303"},"content":"     * @param from","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"BryanL2303"},"content":"     * @param to","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"BryanL2303"},"content":"     * @return instance of Task.","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"BryanL2303"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"BryanL2303"},"content":"    public static Task fromText(String description, String done, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"BryanL2303"},"content":"        Task task \u003d new Event(description, from, to);","lastModifiedDate":"2024-01-26"},{"lineNumber":60,"author":{"gitId":"BryanL2303"},"content":"        task.isDone \u003d done.equals(\"1\");","lastModifiedDate":"2024-01-26"},{"lineNumber":61,"author":{"gitId":"BryanL2303"},"content":"        return task;","lastModifiedDate":"2024-01-26"},{"lineNumber":62,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":63,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"BryanL2303"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"BryanL2303"},"content":"     * Checks if obj is the same as the current instance.","lastModifiedDate":"2024-01-29"},{"lineNumber":66,"author":{"gitId":"BryanL2303"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":67,"author":{"gitId":"BryanL2303"},"content":"     * @param obj","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"BryanL2303"},"content":"     * @return If obj has the same fields as this.","lastModifiedDate":"2024-01-29"},{"lineNumber":69,"author":{"gitId":"BryanL2303"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":70,"author":{"gitId":"BryanL2303"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":71,"author":{"gitId":"BryanL2303"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-01-28"},{"lineNumber":72,"author":{"gitId":"BryanL2303"},"content":"        if (Task.class.isAssignableFrom(obj.getClass())) {","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"BryanL2303"},"content":"            boolean hasSameFields \u003d this.from \u003d\u003d ((Event) obj).from \u0026\u0026 this.to \u003d\u003d ((Event) obj).to;","lastModifiedDate":"2024-02-10"},{"lineNumber":74,"author":{"gitId":"BryanL2303"},"content":"            return super.equals(obj) \u0026\u0026 hasSameFields;","lastModifiedDate":"2024-02-10"},{"lineNumber":75,"author":{"gitId":"BryanL2303"},"content":"        } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":76,"author":{"gitId":"BryanL2303"},"content":"            return false;","lastModifiedDate":"2024-01-29"},{"lineNumber":77,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":78,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":79,"author":{"gitId":"BryanL2303"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"BryanL2303":79}},{"path":"src/main/java/klee/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryanL2303"},"content":"package klee.task;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"BryanL2303"},"content":"/**","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"BryanL2303"},"content":" * Represent a task for Klee to note down.","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"BryanL2303"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"BryanL2303"},"content":"public class Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"BryanL2303"},"content":"    protected String description;","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"BryanL2303"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"BryanL2303"},"content":"    protected String type;","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"BryanL2303"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"BryanL2303"},"content":"     * Constructor for Task class.","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"BryanL2303"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"BryanL2303"},"content":"     * @param description","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"BryanL2303"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"BryanL2303"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"BryanL2303"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"BryanL2303"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"BryanL2303"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"BryanL2303"},"content":"     * Gets the current completion state of a task in String form.","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"BryanL2303"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"BryanL2303"},"content":"     * @return String representation for task.","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"BryanL2303"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"BryanL2303"},"content":"    public String getStatus() {","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"BryanL2303"},"content":"        String statusIcon \u003d (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"BryanL2303"},"content":"        return \"[\" + statusIcon + \"] \" + description;","lastModifiedDate":"2024-01-23"},{"lineNumber":29,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":30,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":31,"author":{"gitId":"BryanL2303"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"BryanL2303"},"content":"     * Returns if the task is done.","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"BryanL2303"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"BryanL2303"},"content":"     * @return If the task is done.","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"BryanL2303"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"BryanL2303"},"content":"    public boolean isDone() {","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"BryanL2303"},"content":"        return isDone;","lastModifiedDate":"2024-01-23"},{"lineNumber":38,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":39,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":40,"author":{"gitId":"BryanL2303"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"BryanL2303"},"content":"     * Returns the type of the task represented by a letter.","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"BryanL2303"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"BryanL2303"},"content":"     * @return String of the character type.","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"BryanL2303"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"BryanL2303"},"content":"    public String type() {","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"BryanL2303"},"content":"        return type;","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":49,"author":{"gitId":"BryanL2303"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"BryanL2303"},"content":"     * Returns a String representation of this task which will be saved into the txt file by Storage.","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"BryanL2303"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"BryanL2303"},"content":"     * @return String to represent the task in the txt file.","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"BryanL2303"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"BryanL2303"},"content":"    public String toText() {","lastModifiedDate":"2024-01-26"},{"lineNumber":55,"author":{"gitId":"BryanL2303"},"content":"        return type + \" / \" + (isDone ? \"1\" : \"0\") + \" / \" + description;","lastModifiedDate":"2024-01-26"},{"lineNumber":56,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":57,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":58,"author":{"gitId":"BryanL2303"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"BryanL2303"},"content":"     * Marks the task as complete.","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"BryanL2303"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"BryanL2303"},"content":"    public void mark() {","lastModifiedDate":"2024-01-23"},{"lineNumber":62,"author":{"gitId":"BryanL2303"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-01-23"},{"lineNumber":63,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":64,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":65,"author":{"gitId":"BryanL2303"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":66,"author":{"gitId":"BryanL2303"},"content":"     * Unmarks the task as not done.","lastModifiedDate":"2024-01-29"},{"lineNumber":67,"author":{"gitId":"BryanL2303"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"BryanL2303"},"content":"    public void unMark() {","lastModifiedDate":"2024-01-23"},{"lineNumber":69,"author":{"gitId":"BryanL2303"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-01-23"},{"lineNumber":70,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":71,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":72,"author":{"gitId":"BryanL2303"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"BryanL2303"},"content":"     * Check if task description contains searchTerm, capitalisation does not matter.","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"BryanL2303"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":75,"author":{"gitId":"BryanL2303"},"content":"     * @param searchTerm","lastModifiedDate":"2024-01-29"},{"lineNumber":76,"author":{"gitId":"BryanL2303"},"content":"     * @return","lastModifiedDate":"2024-01-29"},{"lineNumber":77,"author":{"gitId":"BryanL2303"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":78,"author":{"gitId":"BryanL2303"},"content":"    public boolean include(String searchTerm) {","lastModifiedDate":"2024-01-29"},{"lineNumber":79,"author":{"gitId":"BryanL2303"},"content":"        return this.description.toLowerCase().contains(searchTerm.toLowerCase());","lastModifiedDate":"2024-01-29"},{"lineNumber":80,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":81,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":82,"author":{"gitId":"BryanL2303"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":83,"author":{"gitId":"BryanL2303"},"content":"     * Checks if the obj has the same fields as the current instance.","lastModifiedDate":"2024-01-29"},{"lineNumber":84,"author":{"gitId":"BryanL2303"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":85,"author":{"gitId":"BryanL2303"},"content":"     * @param obj","lastModifiedDate":"2024-01-29"},{"lineNumber":86,"author":{"gitId":"BryanL2303"},"content":"     * @return If obj has the same fields as the current instance.","lastModifiedDate":"2024-01-29"},{"lineNumber":87,"author":{"gitId":"BryanL2303"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":88,"author":{"gitId":"BryanL2303"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":89,"author":{"gitId":"BryanL2303"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-01-28"},{"lineNumber":90,"author":{"gitId":"BryanL2303"},"content":"        System.out.println(\"Gets called\");","lastModifiedDate":"2024-01-28"},{"lineNumber":91,"author":{"gitId":"BryanL2303"},"content":"        if (Task.class.isAssignableFrom(obj.getClass())) {","lastModifiedDate":"2024-01-28"},{"lineNumber":92,"author":{"gitId":"BryanL2303"},"content":"            boolean hasSameFields \u003d this.isDone \u003d\u003d ((Task) obj).isDone \u0026\u0026 this.description","lastModifiedDate":"2024-02-10"},{"lineNumber":93,"author":{"gitId":"BryanL2303"},"content":"                    \u003d\u003d ((Task) obj).description \u0026\u0026 this.type \u003d\u003d ((Task) obj).type;","lastModifiedDate":"2024-02-03"},{"lineNumber":94,"author":{"gitId":"BryanL2303"},"content":"            return hasSameFields;","lastModifiedDate":"2024-02-10"},{"lineNumber":95,"author":{"gitId":"BryanL2303"},"content":"        } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":96,"author":{"gitId":"BryanL2303"},"content":"            return false;","lastModifiedDate":"2024-01-29"},{"lineNumber":97,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":98,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":99,"author":{"gitId":"BryanL2303"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"BryanL2303":99}},{"path":"src/main/java/klee/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryanL2303"},"content":"package klee.task;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"BryanL2303"},"content":"/**","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"BryanL2303"},"content":" * Represents a task that has to be completed.","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"BryanL2303"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"BryanL2303"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"BryanL2303"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"BryanL2303"},"content":"     * Constructor for ToDo class.","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"BryanL2303"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"BryanL2303"},"content":"     * @param description","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"BryanL2303"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"BryanL2303"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"BryanL2303"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"BryanL2303"},"content":"        this.type \u003d \"T\";","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"BryanL2303"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"BryanL2303"},"content":"     * Returns the type and current completion status of task.","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"BryanL2303"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"BryanL2303"},"content":"     * @return String to represent current state of class.","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"BryanL2303"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"BryanL2303"},"content":"    public String getStatus() {","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"BryanL2303"},"content":"        String statusIcon \u003d (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"BryanL2303"},"content":"        return \"[\" + type + \"][\" + statusIcon + \"] \" + description;","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":27,"author":{"gitId":"BryanL2303"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"BryanL2303"},"content":"     * Given input from txt file create new instance of ToDo.","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"BryanL2303"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"BryanL2303"},"content":"     * @param description","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"BryanL2303"},"content":"     * @param done","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"BryanL2303"},"content":"     * @return Instance of Task.","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"BryanL2303"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"BryanL2303"},"content":"    public static Task fromText(String description, String done) {","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"BryanL2303"},"content":"        Task task \u003d new ToDo(description);","lastModifiedDate":"2024-01-26"},{"lineNumber":36,"author":{"gitId":"BryanL2303"},"content":"        task.isDone \u003d done.equals(\"1\");","lastModifiedDate":"2024-01-26"},{"lineNumber":37,"author":{"gitId":"BryanL2303"},"content":"        return task;","lastModifiedDate":"2024-01-26"},{"lineNumber":38,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":39,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"BryanL2303"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"BryanL2303"},"content":"     * Checks if obj is the same as the current instance.","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"BryanL2303"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"BryanL2303"},"content":"     * @param obj","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"BryanL2303"},"content":"     * @return If obj has the same description and type as this.","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"BryanL2303"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"BryanL2303"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"BryanL2303"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"BryanL2303"},"content":"        if (Task.class.isAssignableFrom(obj.getClass())) {","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"BryanL2303"},"content":"            return super.equals(obj);","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"BryanL2303"},"content":"        } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"BryanL2303"},"content":"            return false;","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"BryanL2303"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"BryanL2303":54}},{"path":"src/test/java/klee/KleeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryanL2303"},"content":"package klee;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"BryanL2303"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"BryanL2303"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"BryanL2303"},"content":"public class KleeTest {","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"BryanL2303"},"content":"    public void dummyTest() {","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"BryanL2303"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"BryanL2303"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"BryanL2303"},"content":"    public void anotherDummyTest() {","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"BryanL2303"},"content":"        assertEquals(4, 4);","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"BryanL2303"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"BryanL2303":16}},{"path":"src/test/java/klee/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryanL2303"},"content":"package klee;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"BryanL2303"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"BryanL2303"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"BryanL2303"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"BryanL2303"},"content":"import klee.command.Bye;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"BryanL2303"},"content":"import klee.command.Command;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"BryanL2303"},"content":"import klee.command.Deadline;","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"BryanL2303"},"content":"import klee.command.Delete;","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"BryanL2303"},"content":"import klee.command.Event;","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"BryanL2303"},"content":"import klee.command.List;","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"BryanL2303"},"content":"import klee.command.Mark;","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"BryanL2303"},"content":"import klee.command.ToDo;","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"BryanL2303"},"content":"import klee.command.Unmark;","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"BryanL2303"},"content":"public class ParserTest {","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"BryanL2303"},"content":"    private Parser parserTest \u003d new Parser();","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"BryanL2303"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"BryanL2303"},"content":"    public void testGeneralInputs() throws Exception {","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"BryanL2303"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"BryanL2303"},"content":"            Command actual \u003d parserTest.parseInput(\"\");","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"BryanL2303"},"content":"        } catch (KleeException actual) {","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"BryanL2303"},"content":"            KleeException expected \u003d new KleeException(\"Klee doesn\u0027t understand, what are you talking about?\");","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"BryanL2303"},"content":"            assertEquals(expected, actual);","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"BryanL2303"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"BryanL2303"},"content":"            Command actual \u003d parserTest.parseInput(\"blah\");","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"BryanL2303"},"content":"        } catch (KleeException actual) {","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"BryanL2303"},"content":"            KleeException expected \u003d new KleeException(\"Klee doesn\u0027t understand, what are you talking about?\");","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"BryanL2303"},"content":"            assertEquals(expected, actual);","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"BryanL2303"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"BryanL2303"},"content":"            Command expected \u003d new Bye();","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"BryanL2303"},"content":"            Command actual \u003d parserTest.parseInput(\"bye\");","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"BryanL2303"},"content":"            assertEquals(expected, actual);","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"BryanL2303"},"content":"        } catch (KleeException actual) {","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"BryanL2303"},"content":"            throw new Exception(\"Test Failed\");","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"BryanL2303"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"BryanL2303"},"content":"            Command expected \u003d new List();","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"BryanL2303"},"content":"            Command actual \u003d parserTest.parseInput(\"list\");","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"BryanL2303"},"content":"            assertEquals(expected, actual);","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"BryanL2303"},"content":"        } catch (KleeException actual) {","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"BryanL2303"},"content":"            throw new Exception(\"Test Failed\");","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"BryanL2303"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"BryanL2303"},"content":"    public void testToDoInputs() throws Exception {","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"BryanL2303"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"BryanL2303"},"content":"            Command expected \u003d new ToDo(\"test\");","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"BryanL2303"},"content":"            Command actual \u003d parserTest.parseInput(\"todo test\");","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"BryanL2303"},"content":"            assertEquals(expected, actual);","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"BryanL2303"},"content":"        } catch (KleeException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"BryanL2303"},"content":"            throw new Exception(\"Test Failed\");","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"BryanL2303"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":66,"author":{"gitId":"BryanL2303"},"content":"            Command actual \u003d parserTest.parseInput(\"todo \");","lastModifiedDate":"2024-01-28"},{"lineNumber":67,"author":{"gitId":"BryanL2303"},"content":"        } catch (KleeException actual) {","lastModifiedDate":"2024-01-28"},{"lineNumber":68,"author":{"gitId":"BryanL2303"},"content":"            KleeException expected \u003d new KleeException(\"The correct way to indicate a todo is `todo [description]`\");","lastModifiedDate":"2024-01-28"},{"lineNumber":69,"author":{"gitId":"BryanL2303"},"content":"            assertEquals(expected, actual);","lastModifiedDate":"2024-01-28"},{"lineNumber":70,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":71,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":72,"author":{"gitId":"BryanL2303"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":73,"author":{"gitId":"BryanL2303"},"content":"            Command actual \u003d parserTest.parseInput(\"todo\");","lastModifiedDate":"2024-01-28"},{"lineNumber":74,"author":{"gitId":"BryanL2303"},"content":"        } catch (KleeException actual) {","lastModifiedDate":"2024-01-28"},{"lineNumber":75,"author":{"gitId":"BryanL2303"},"content":"            KleeException expected \u003d new KleeException(\"The correct way to indicate a todo is `todo [description]`\");","lastModifiedDate":"2024-01-28"},{"lineNumber":76,"author":{"gitId":"BryanL2303"},"content":"            assertEquals(expected, actual);","lastModifiedDate":"2024-01-28"},{"lineNumber":77,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":78,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":79,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":80,"author":{"gitId":"BryanL2303"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":81,"author":{"gitId":"BryanL2303"},"content":"    public void testDeadlineInputs() throws Exception {","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"BryanL2303"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":83,"author":{"gitId":"BryanL2303"},"content":"            Command expected \u003d new Deadline(\"test\",","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"BryanL2303"},"content":"                    LocalDateTime.of(2024, 1, 1, 18, 30));","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"BryanL2303"},"content":"            Command actual \u003d parserTest.parseInput(\"deadline test /by 2024-1-1 1830\");","lastModifiedDate":"2024-01-28"},{"lineNumber":86,"author":{"gitId":"BryanL2303"},"content":"            assertEquals(expected, actual);","lastModifiedDate":"2024-01-28"},{"lineNumber":87,"author":{"gitId":"BryanL2303"},"content":"        } catch (KleeException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"BryanL2303"},"content":"            throw new Exception(\"Test Failed\");","lastModifiedDate":"2024-02-03"},{"lineNumber":89,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":90,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":91,"author":{"gitId":"BryanL2303"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":92,"author":{"gitId":"BryanL2303"},"content":"            Command expected \u003d new Deadline(\"test\",","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"BryanL2303"},"content":"                    LocalDateTime.of(2024, 1, 1, 18, 30));","lastModifiedDate":"2024-02-03"},{"lineNumber":94,"author":{"gitId":"BryanL2303"},"content":"            Command actual \u003d parserTest.parseInput(\"deadline test /by 1/1/2024 1830\");","lastModifiedDate":"2024-01-28"},{"lineNumber":95,"author":{"gitId":"BryanL2303"},"content":"            assertEquals(expected, actual);","lastModifiedDate":"2024-01-28"},{"lineNumber":96,"author":{"gitId":"BryanL2303"},"content":"        } catch (KleeException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":97,"author":{"gitId":"BryanL2303"},"content":"            throw new Exception(\"Test Failed\");","lastModifiedDate":"2024-02-03"},{"lineNumber":98,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":99,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":100,"author":{"gitId":"BryanL2303"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":101,"author":{"gitId":"BryanL2303"},"content":"            Command actual \u003d parserTest.parseInput(\"deadline \");","lastModifiedDate":"2024-01-28"},{"lineNumber":102,"author":{"gitId":"BryanL2303"},"content":"        } catch (KleeException actual) {","lastModifiedDate":"2024-01-28"},{"lineNumber":103,"author":{"gitId":"BryanL2303"},"content":"            KleeException expected \u003d new KleeException(\"The correct way to indicate a deadline is \"","lastModifiedDate":"2024-02-03"},{"lineNumber":104,"author":{"gitId":"BryanL2303"},"content":"                    + \"`deadline [description] /by [date and time]`\");","lastModifiedDate":"2024-02-03"},{"lineNumber":105,"author":{"gitId":"BryanL2303"},"content":"            assertEquals(expected, actual);","lastModifiedDate":"2024-01-28"},{"lineNumber":106,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":107,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":108,"author":{"gitId":"BryanL2303"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":109,"author":{"gitId":"BryanL2303"},"content":"            Command actual \u003d parserTest.parseInput(\"deadline\");","lastModifiedDate":"2024-01-28"},{"lineNumber":110,"author":{"gitId":"BryanL2303"},"content":"        } catch (KleeException actual) {","lastModifiedDate":"2024-01-28"},{"lineNumber":111,"author":{"gitId":"BryanL2303"},"content":"            KleeException expected \u003d new KleeException(\"The correct way to indicate a deadline is \"","lastModifiedDate":"2024-02-03"},{"lineNumber":112,"author":{"gitId":"BryanL2303"},"content":"                    + \"`deadline [description] /by [date and time]`\");","lastModifiedDate":"2024-02-03"},{"lineNumber":113,"author":{"gitId":"BryanL2303"},"content":"            assertEquals(expected, actual);","lastModifiedDate":"2024-01-28"},{"lineNumber":114,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":115,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":116,"author":{"gitId":"BryanL2303"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":117,"author":{"gitId":"BryanL2303"},"content":"            Command actual \u003d parserTest.parseInput(\"deadline test\");","lastModifiedDate":"2024-01-28"},{"lineNumber":118,"author":{"gitId":"BryanL2303"},"content":"        } catch (KleeException actual) {","lastModifiedDate":"2024-01-28"},{"lineNumber":119,"author":{"gitId":"BryanL2303"},"content":"            KleeException expected \u003d new KleeException(\"The correct way to indicate a deadline is \"","lastModifiedDate":"2024-02-03"},{"lineNumber":120,"author":{"gitId":"BryanL2303"},"content":"                    + \"`deadline [description] /by [date and time]`\");","lastModifiedDate":"2024-02-03"},{"lineNumber":121,"author":{"gitId":"BryanL2303"},"content":"            assertEquals(expected, actual);","lastModifiedDate":"2024-01-28"},{"lineNumber":122,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":123,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":124,"author":{"gitId":"BryanL2303"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":125,"author":{"gitId":"BryanL2303"},"content":"            Command actual \u003d parserTest.parseInput(\"deadline test /by\");","lastModifiedDate":"2024-01-28"},{"lineNumber":126,"author":{"gitId":"BryanL2303"},"content":"        } catch (KleeException actual) {","lastModifiedDate":"2024-01-28"},{"lineNumber":127,"author":{"gitId":"BryanL2303"},"content":"            KleeException expected \u003d new KleeException(\"The correct way to indicate a deadline is \"","lastModifiedDate":"2024-02-03"},{"lineNumber":128,"author":{"gitId":"BryanL2303"},"content":"                    + \"`deadline [description] /by [date and time]`\");","lastModifiedDate":"2024-02-03"},{"lineNumber":129,"author":{"gitId":"BryanL2303"},"content":"            assertEquals(expected, actual);","lastModifiedDate":"2024-01-28"},{"lineNumber":130,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":131,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":132,"author":{"gitId":"BryanL2303"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":133,"author":{"gitId":"BryanL2303"},"content":"            Command actual \u003d parserTest.parseInput(\"deadline test/by 2024-1-1 1830\");","lastModifiedDate":"2024-01-28"},{"lineNumber":134,"author":{"gitId":"BryanL2303"},"content":"        } catch (KleeException actual) {","lastModifiedDate":"2024-01-28"},{"lineNumber":135,"author":{"gitId":"BryanL2303"},"content":"            KleeException expected \u003d new KleeException(\"The correct way to indicate a deadline is \"","lastModifiedDate":"2024-02-03"},{"lineNumber":136,"author":{"gitId":"BryanL2303"},"content":"                    + \"`deadline [description] /by [date and time]`\");","lastModifiedDate":"2024-02-03"},{"lineNumber":137,"author":{"gitId":"BryanL2303"},"content":"            assertEquals(expected, actual);","lastModifiedDate":"2024-01-28"},{"lineNumber":138,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":139,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":140,"author":{"gitId":"BryanL2303"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":141,"author":{"gitId":"BryanL2303"},"content":"            Command actual \u003d parserTest.parseInput(\"deadline test /by \");","lastModifiedDate":"2024-01-28"},{"lineNumber":142,"author":{"gitId":"BryanL2303"},"content":"        } catch (KleeException actual) {","lastModifiedDate":"2024-01-28"},{"lineNumber":143,"author":{"gitId":"BryanL2303"},"content":"            KleeException expected \u003d new KleeException(\"The correct way to indicate a deadline is \"","lastModifiedDate":"2024-02-03"},{"lineNumber":144,"author":{"gitId":"BryanL2303"},"content":"                    + \"`deadline [description] /by [date and time]`\");","lastModifiedDate":"2024-02-03"},{"lineNumber":145,"author":{"gitId":"BryanL2303"},"content":"            assertEquals(expected, actual);","lastModifiedDate":"2024-01-28"},{"lineNumber":146,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":147,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":148,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":149,"author":{"gitId":"BryanL2303"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":150,"author":{"gitId":"BryanL2303"},"content":"    public void testEventInputs() throws Exception {","lastModifiedDate":"2024-02-03"},{"lineNumber":151,"author":{"gitId":"BryanL2303"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":152,"author":{"gitId":"BryanL2303"},"content":"            Command expected \u003d new Event(\"test\",","lastModifiedDate":"2024-02-03"},{"lineNumber":153,"author":{"gitId":"BryanL2303"},"content":"                    LocalDateTime.of(2024, 1, 1, 18, 30),","lastModifiedDate":"2024-02-03"},{"lineNumber":154,"author":{"gitId":"BryanL2303"},"content":"                    LocalDateTime.of(2024, 1, 31, 18, 30));","lastModifiedDate":"2024-02-03"},{"lineNumber":155,"author":{"gitId":"BryanL2303"},"content":"            Command actual \u003d parserTest.parseInput(\"event test /from 2024-1-1 1830 /to 2024-1-31 1830\");","lastModifiedDate":"2024-01-28"},{"lineNumber":156,"author":{"gitId":"BryanL2303"},"content":"            assertEquals(expected, actual);","lastModifiedDate":"2024-01-28"},{"lineNumber":157,"author":{"gitId":"BryanL2303"},"content":"        } catch (KleeException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":158,"author":{"gitId":"BryanL2303"},"content":"            throw new Exception(\"Test Failed\");","lastModifiedDate":"2024-02-03"},{"lineNumber":159,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":160,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":161,"author":{"gitId":"BryanL2303"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":162,"author":{"gitId":"BryanL2303"},"content":"            Command expected \u003d new Event(\"test\",","lastModifiedDate":"2024-02-03"},{"lineNumber":163,"author":{"gitId":"BryanL2303"},"content":"                    LocalDateTime.of(2024, 1, 1, 18, 30),","lastModifiedDate":"2024-02-03"},{"lineNumber":164,"author":{"gitId":"BryanL2303"},"content":"                    LocalDateTime.of(2024, 1, 31, 18, 30));","lastModifiedDate":"2024-02-03"},{"lineNumber":165,"author":{"gitId":"BryanL2303"},"content":"            Command actual \u003d parserTest.parseInput(\"event test /from 2024-1-1 1830 /to 31/1/2024 1830\");","lastModifiedDate":"2024-01-28"},{"lineNumber":166,"author":{"gitId":"BryanL2303"},"content":"            assertEquals(expected, actual);","lastModifiedDate":"2024-01-28"},{"lineNumber":167,"author":{"gitId":"BryanL2303"},"content":"        } catch (KleeException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":168,"author":{"gitId":"BryanL2303"},"content":"            throw new Exception(\"Test Failed\");","lastModifiedDate":"2024-02-03"},{"lineNumber":169,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":170,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":171,"author":{"gitId":"BryanL2303"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":172,"author":{"gitId":"BryanL2303"},"content":"            Command actual \u003d parserTest.parseInput(\"event \");","lastModifiedDate":"2024-01-28"},{"lineNumber":173,"author":{"gitId":"BryanL2303"},"content":"        } catch (KleeException actual) {","lastModifiedDate":"2024-01-28"},{"lineNumber":174,"author":{"gitId":"BryanL2303"},"content":"            KleeException expected \u003d new KleeException(\"The correct way to indicate a event is \"","lastModifiedDate":"2024-02-03"},{"lineNumber":175,"author":{"gitId":"BryanL2303"},"content":"                    + \"`event [description] /from [date and time] /to [date and time]`\");","lastModifiedDate":"2024-02-03"},{"lineNumber":176,"author":{"gitId":"BryanL2303"},"content":"            assertEquals(expected, actual);","lastModifiedDate":"2024-01-28"},{"lineNumber":177,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":178,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":179,"author":{"gitId":"BryanL2303"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":180,"author":{"gitId":"BryanL2303"},"content":"            Command actual \u003d parserTest.parseInput(\"event\");","lastModifiedDate":"2024-01-28"},{"lineNumber":181,"author":{"gitId":"BryanL2303"},"content":"        } catch (KleeException actual) {","lastModifiedDate":"2024-01-28"},{"lineNumber":182,"author":{"gitId":"BryanL2303"},"content":"            KleeException expected \u003d new KleeException(\"The correct way to indicate a event is \"","lastModifiedDate":"2024-02-03"},{"lineNumber":183,"author":{"gitId":"BryanL2303"},"content":"                    + \"`event [description] /from [date and time] /to [date and time]`\");","lastModifiedDate":"2024-02-03"},{"lineNumber":184,"author":{"gitId":"BryanL2303"},"content":"            assertEquals(expected, actual);","lastModifiedDate":"2024-01-28"},{"lineNumber":185,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":186,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":187,"author":{"gitId":"BryanL2303"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":188,"author":{"gitId":"BryanL2303"},"content":"            Command actual \u003d parserTest.parseInput(\"event test\");","lastModifiedDate":"2024-01-28"},{"lineNumber":189,"author":{"gitId":"BryanL2303"},"content":"        } catch (KleeException actual) {","lastModifiedDate":"2024-01-28"},{"lineNumber":190,"author":{"gitId":"BryanL2303"},"content":"            KleeException expected \u003d new KleeException(\"The correct way to indicate a event is \"","lastModifiedDate":"2024-02-03"},{"lineNumber":191,"author":{"gitId":"BryanL2303"},"content":"                    + \"`event [description] /from [date and time] /to [date and time]`\");","lastModifiedDate":"2024-02-03"},{"lineNumber":192,"author":{"gitId":"BryanL2303"},"content":"            assertEquals(expected, actual);","lastModifiedDate":"2024-01-28"},{"lineNumber":193,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":194,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":195,"author":{"gitId":"BryanL2303"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":196,"author":{"gitId":"BryanL2303"},"content":"            Command actual \u003d parserTest.parseInput(\"event test /from\");","lastModifiedDate":"2024-01-28"},{"lineNumber":197,"author":{"gitId":"BryanL2303"},"content":"        } catch (KleeException actual) {","lastModifiedDate":"2024-01-28"},{"lineNumber":198,"author":{"gitId":"BryanL2303"},"content":"            KleeException expected \u003d new KleeException(\"The correct way to indicate a event is \"","lastModifiedDate":"2024-02-03"},{"lineNumber":199,"author":{"gitId":"BryanL2303"},"content":"                    + \"`event [description] /from [date and time] /to [date and time]`\");","lastModifiedDate":"2024-02-03"},{"lineNumber":200,"author":{"gitId":"BryanL2303"},"content":"            assertEquals(expected, actual);","lastModifiedDate":"2024-01-28"},{"lineNumber":201,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":202,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":203,"author":{"gitId":"BryanL2303"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":204,"author":{"gitId":"BryanL2303"},"content":"            Command actual \u003d parserTest.parseInput(\"event test /from 1/1/2024\");","lastModifiedDate":"2024-01-28"},{"lineNumber":205,"author":{"gitId":"BryanL2303"},"content":"        } catch (KleeException actual) {","lastModifiedDate":"2024-01-28"},{"lineNumber":206,"author":{"gitId":"BryanL2303"},"content":"            KleeException expected \u003d new KleeException(\"The correct way to indicate a event is \"","lastModifiedDate":"2024-02-03"},{"lineNumber":207,"author":{"gitId":"BryanL2303"},"content":"                    + \"`event [description] /from [date and time] /to [date and time]`\");","lastModifiedDate":"2024-02-03"},{"lineNumber":208,"author":{"gitId":"BryanL2303"},"content":"            assertEquals(expected, actual);","lastModifiedDate":"2024-01-28"},{"lineNumber":209,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":210,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":211,"author":{"gitId":"BryanL2303"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":212,"author":{"gitId":"BryanL2303"},"content":"            Command actual \u003d parserTest.parseInput(\"event test /from 1/1/2024 /to\");","lastModifiedDate":"2024-01-28"},{"lineNumber":213,"author":{"gitId":"BryanL2303"},"content":"        } catch (KleeException actual) {","lastModifiedDate":"2024-01-28"},{"lineNumber":214,"author":{"gitId":"BryanL2303"},"content":"            KleeException expected \u003d new KleeException(\"The correct way to indicate a event is \"","lastModifiedDate":"2024-02-03"},{"lineNumber":215,"author":{"gitId":"BryanL2303"},"content":"                    + \"`event [description] /from [date and time] /to [date and time]`\");","lastModifiedDate":"2024-02-03"},{"lineNumber":216,"author":{"gitId":"BryanL2303"},"content":"            assertEquals(expected, actual);","lastModifiedDate":"2024-01-28"},{"lineNumber":217,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":218,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":219,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":220,"author":{"gitId":"BryanL2303"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":221,"author":{"gitId":"BryanL2303"},"content":"    public void testMarkInputs() throws Exception {","lastModifiedDate":"2024-02-03"},{"lineNumber":222,"author":{"gitId":"BryanL2303"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":223,"author":{"gitId":"BryanL2303"},"content":"            Command expected \u003d new Mark(0);","lastModifiedDate":"2024-01-28"},{"lineNumber":224,"author":{"gitId":"BryanL2303"},"content":"            Command actual \u003d parserTest.parseInput(\"mark 1\");","lastModifiedDate":"2024-01-28"},{"lineNumber":225,"author":{"gitId":"BryanL2303"},"content":"            assertEquals(expected, actual);","lastModifiedDate":"2024-01-28"},{"lineNumber":226,"author":{"gitId":"BryanL2303"},"content":"        } catch (KleeException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":227,"author":{"gitId":"BryanL2303"},"content":"            throw new Exception(\"Test Failed\");","lastModifiedDate":"2024-02-03"},{"lineNumber":228,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":229,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":230,"author":{"gitId":"BryanL2303"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":231,"author":{"gitId":"BryanL2303"},"content":"            Command actual \u003d parserTest.parseInput(\"mark\");","lastModifiedDate":"2024-01-28"},{"lineNumber":232,"author":{"gitId":"BryanL2303"},"content":"        } catch (KleeException actual) {","lastModifiedDate":"2024-01-28"},{"lineNumber":233,"author":{"gitId":"BryanL2303"},"content":"            KleeException expected \u003d new KleeException(\"There should be an integer after mark to indicate \"","lastModifiedDate":"2024-02-03"},{"lineNumber":234,"author":{"gitId":"BryanL2303"},"content":"                    + \"which task to mark!\");","lastModifiedDate":"2024-02-03"},{"lineNumber":235,"author":{"gitId":"BryanL2303"},"content":"            assertEquals(expected, actual);","lastModifiedDate":"2024-01-28"},{"lineNumber":236,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":237,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":238,"author":{"gitId":"BryanL2303"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":239,"author":{"gitId":"BryanL2303"},"content":"            Command actual \u003d parserTest.parseInput(\"mark tasks\");","lastModifiedDate":"2024-01-28"},{"lineNumber":240,"author":{"gitId":"BryanL2303"},"content":"        } catch (KleeException actual) {","lastModifiedDate":"2024-01-28"},{"lineNumber":241,"author":{"gitId":"BryanL2303"},"content":"            KleeException expected \u003d new KleeException(\"There should be an integer after mark to indicate \"","lastModifiedDate":"2024-02-03"},{"lineNumber":242,"author":{"gitId":"BryanL2303"},"content":"                    + \"which task to mark!\");","lastModifiedDate":"2024-02-03"},{"lineNumber":243,"author":{"gitId":"BryanL2303"},"content":"            assertEquals(expected, actual);","lastModifiedDate":"2024-01-28"},{"lineNumber":244,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":245,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":246,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":247,"author":{"gitId":"BryanL2303"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":248,"author":{"gitId":"BryanL2303"},"content":"    public void testUnMarkInputs() throws Exception {","lastModifiedDate":"2024-02-03"},{"lineNumber":249,"author":{"gitId":"BryanL2303"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":250,"author":{"gitId":"BryanL2303"},"content":"            Command expected \u003d new Unmark(0);","lastModifiedDate":"2024-01-28"},{"lineNumber":251,"author":{"gitId":"BryanL2303"},"content":"            Command actual \u003d parserTest.parseInput(\"unmark 1\");","lastModifiedDate":"2024-01-28"},{"lineNumber":252,"author":{"gitId":"BryanL2303"},"content":"            assertEquals(expected, actual);","lastModifiedDate":"2024-01-28"},{"lineNumber":253,"author":{"gitId":"BryanL2303"},"content":"        } catch (KleeException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":254,"author":{"gitId":"BryanL2303"},"content":"            throw new Exception(\"Test Failed\");","lastModifiedDate":"2024-02-03"},{"lineNumber":255,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":256,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":257,"author":{"gitId":"BryanL2303"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":258,"author":{"gitId":"BryanL2303"},"content":"            Command actual \u003d parserTest.parseInput(\"unmark\");","lastModifiedDate":"2024-01-28"},{"lineNumber":259,"author":{"gitId":"BryanL2303"},"content":"        } catch (KleeException actual) {","lastModifiedDate":"2024-01-28"},{"lineNumber":260,"author":{"gitId":"BryanL2303"},"content":"            KleeException expected \u003d new KleeException(\"There should be an integer after unmark to indicate \"","lastModifiedDate":"2024-02-03"},{"lineNumber":261,"author":{"gitId":"BryanL2303"},"content":"                    + \"which task to unmark!\");","lastModifiedDate":"2024-02-03"},{"lineNumber":262,"author":{"gitId":"BryanL2303"},"content":"            assertEquals(expected, actual);","lastModifiedDate":"2024-01-28"},{"lineNumber":263,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":264,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":265,"author":{"gitId":"BryanL2303"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":266,"author":{"gitId":"BryanL2303"},"content":"            Command actual \u003d parserTest.parseInput(\"unmark tasks\");","lastModifiedDate":"2024-01-28"},{"lineNumber":267,"author":{"gitId":"BryanL2303"},"content":"        } catch (KleeException actual) {","lastModifiedDate":"2024-01-28"},{"lineNumber":268,"author":{"gitId":"BryanL2303"},"content":"            KleeException expected \u003d new KleeException(\"There should be an integer after unmark to indicate \"","lastModifiedDate":"2024-02-03"},{"lineNumber":269,"author":{"gitId":"BryanL2303"},"content":"                    + \"which task to unmark!\");","lastModifiedDate":"2024-02-03"},{"lineNumber":270,"author":{"gitId":"BryanL2303"},"content":"            assertEquals(expected, actual);","lastModifiedDate":"2024-01-28"},{"lineNumber":271,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":272,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":273,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":274,"author":{"gitId":"BryanL2303"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":275,"author":{"gitId":"BryanL2303"},"content":"    public void testDeleteInputs() throws Exception {","lastModifiedDate":"2024-02-03"},{"lineNumber":276,"author":{"gitId":"BryanL2303"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":277,"author":{"gitId":"BryanL2303"},"content":"            Command expected \u003d new Delete(0);","lastModifiedDate":"2024-01-28"},{"lineNumber":278,"author":{"gitId":"BryanL2303"},"content":"            Command actual \u003d parserTest.parseInput(\"delete 1\");","lastModifiedDate":"2024-01-28"},{"lineNumber":279,"author":{"gitId":"BryanL2303"},"content":"            assertEquals(expected, actual);","lastModifiedDate":"2024-01-28"},{"lineNumber":280,"author":{"gitId":"BryanL2303"},"content":"        } catch (KleeException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":281,"author":{"gitId":"BryanL2303"},"content":"            throw new Exception(\"Test Failed\");","lastModifiedDate":"2024-02-03"},{"lineNumber":282,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":283,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":284,"author":{"gitId":"BryanL2303"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":285,"author":{"gitId":"BryanL2303"},"content":"            Command actual \u003d parserTest.parseInput(\"delete\");","lastModifiedDate":"2024-01-28"},{"lineNumber":286,"author":{"gitId":"BryanL2303"},"content":"        } catch (KleeException actual) {","lastModifiedDate":"2024-01-28"},{"lineNumber":287,"author":{"gitId":"BryanL2303"},"content":"            KleeException expected \u003d new KleeException(\"There should be an integer after delete to indicate \"","lastModifiedDate":"2024-02-03"},{"lineNumber":288,"author":{"gitId":"BryanL2303"},"content":"                    + \"which task to delete!\");","lastModifiedDate":"2024-02-03"},{"lineNumber":289,"author":{"gitId":"BryanL2303"},"content":"            assertEquals(expected, actual);","lastModifiedDate":"2024-01-28"},{"lineNumber":290,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":291,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":292,"author":{"gitId":"BryanL2303"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":293,"author":{"gitId":"BryanL2303"},"content":"            Command actual \u003d parserTest.parseInput(\"delete tasks\");","lastModifiedDate":"2024-01-28"},{"lineNumber":294,"author":{"gitId":"BryanL2303"},"content":"        } catch (KleeException actual) {","lastModifiedDate":"2024-01-28"},{"lineNumber":295,"author":{"gitId":"BryanL2303"},"content":"            KleeException expected \u003d new KleeException(\"There should be an integer after delete to indicate \"","lastModifiedDate":"2024-02-03"},{"lineNumber":296,"author":{"gitId":"BryanL2303"},"content":"                    + \"which task to delete!\");","lastModifiedDate":"2024-02-03"},{"lineNumber":297,"author":{"gitId":"BryanL2303"},"content":"            assertEquals(expected, actual);","lastModifiedDate":"2024-01-28"},{"lineNumber":298,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":299,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":300,"author":{"gitId":"BryanL2303"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"BryanL2303":300}},{"path":"src/test/java/klee/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryanL2303"},"content":"package klee;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"BryanL2303"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"BryanL2303"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"BryanL2303"},"content":"import klee.task.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"BryanL2303"},"content":"import klee.task.ToDo;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"BryanL2303"},"content":"public class TaskListTest {","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"BryanL2303"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"BryanL2303"},"content":"    public void testAddTask() {","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"BryanL2303"},"content":"        int expected \u003d 0;","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"BryanL2303"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"BryanL2303"},"content":"        int actual \u003d tasks.size();","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"BryanL2303"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"BryanL2303"},"content":"        tasks.add(new ToDo(\"test\"));","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"BryanL2303"},"content":"        expected \u003d 1;","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"BryanL2303"},"content":"        actual \u003d tasks.size();","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"BryanL2303"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"BryanL2303"},"content":"        tasks.add(new ToDo(\"test\"));","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"BryanL2303"},"content":"        expected \u003d 2;","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"BryanL2303"},"content":"        actual \u003d tasks.size();","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"BryanL2303"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"BryanL2303"},"content":"        tasks.add(new ToDo(\"test\"));","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"BryanL2303"},"content":"        expected \u003d 3;","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"BryanL2303"},"content":"        actual \u003d tasks.size();","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"BryanL2303"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"BryanL2303"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"BryanL2303"},"content":"    public void testRemoveTask() {","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"BryanL2303"},"content":"        int expected \u003d 3;","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"BryanL2303"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"BryanL2303"},"content":"        tasks.add(new ToDo(\"test\"));","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"BryanL2303"},"content":"        tasks.add(new ToDo(\"test\"));","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"BryanL2303"},"content":"        tasks.add(new ToDo(\"test\"));","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"BryanL2303"},"content":"        int actual \u003d tasks.size();","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"BryanL2303"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"BryanL2303"},"content":"        tasks.remove(0);","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"BryanL2303"},"content":"        expected \u003d 2;","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"BryanL2303"},"content":"        actual \u003d tasks.size();","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"BryanL2303"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"BryanL2303"},"content":"        tasks.remove(0);","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"BryanL2303"},"content":"        expected \u003d 1;","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"BryanL2303"},"content":"        actual \u003d tasks.size();","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"BryanL2303"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"BryanL2303"},"content":"        tasks.remove(0);","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"BryanL2303"},"content":"        expected \u003d 0;","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"BryanL2303"},"content":"        actual \u003d tasks.size();","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"BryanL2303"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"BryanL2303"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"BryanL2303"},"content":"    public void testGetSize() {","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"BryanL2303"},"content":"        int expected \u003d 1;","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"BryanL2303"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"BryanL2303"},"content":"        tasks.add(new ToDo(\"test\"));","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"BryanL2303"},"content":"        int actual \u003d tasks.size();","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"BryanL2303"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"BryanL2303"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"BryanL2303"},"content":"    public void testGetTask() {","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"BryanL2303"},"content":"        ToDo expected \u003d new ToDo(\"test\");","lastModifiedDate":"2024-01-28"},{"lineNumber":66,"author":{"gitId":"BryanL2303"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2024-01-28"},{"lineNumber":67,"author":{"gitId":"BryanL2303"},"content":"        tasks.add(new ToDo(\"test\"));","lastModifiedDate":"2024-01-28"},{"lineNumber":68,"author":{"gitId":"BryanL2303"},"content":"        Task actual \u003d tasks.get(0);","lastModifiedDate":"2024-01-28"},{"lineNumber":69,"author":{"gitId":"BryanL2303"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2024-01-28"},{"lineNumber":70,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":71,"author":{"gitId":"BryanL2303"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"BryanL2303":71}},{"path":"src/test/java/klee/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryanL2303"},"content":"package klee;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"BryanL2303"},"content":"public class UiTest {","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"BryanL2303"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"BryanL2303":4}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"BryanL2303"},"content":"todo Make bomb","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"BryanL2303"},"content":"deadline Blast lake /by 30/1/2024","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"BryanL2303"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"BryanL2303"},"content":"mark 1","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"BryanL2303"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"BryanL2303"},"content":"unmark 1","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"BryanL2303"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"BryanL2303"},"content":"bye","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"BryanL2303":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"BryanL2303"},"content":"java -classpath ..\\bin klee.klee \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"BryanL2303":1,"-":20}}]
