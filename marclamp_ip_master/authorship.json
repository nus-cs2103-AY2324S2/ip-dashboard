[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"# Chaterpillar project template","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"marclamp"},"content":"3. After that, locate the `src/main/java/Chaterpillar.java` file, right-click it, and choose `Run Chaterpillar.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"marclamp":2,"-":22}},{"path":"src/main/java/Chaterpillar.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"marclamp"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"marclamp"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"marclamp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"marclamp"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"marclamp"},"content":"public class Chaterpillar {","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"marclamp"},"content":"    public static boolean exited \u003d false;","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"marclamp"},"content":"    public static ArrayList\u003cTask\u003e listoftasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"marclamp"},"content":"    public static void greet() {","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":"        print_horizontal_line();","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"marclamp"},"content":"        System.out.println(\"Hello! I\u0027m Chaterpillar\");","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"marclamp"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"marclamp"},"content":"        print_horizontal_line();","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"marclamp"},"content":"    public static void exit() {","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"marclamp"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"marclamp"},"content":"    public static void echo(String s) {","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"marclamp"},"content":"        System.out.println(s);","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"marclamp"},"content":"    public static void print_horizontal_line() {","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"marclamp"},"content":"        String line \u003d \"-\".repeat(50);","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"marclamp"},"content":"        System.out.println(line);","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"marclamp"},"content":"    public static void parse_input(BufferedReader reader) throws IOException {","lastModifiedDate":"2024-01-26"},{"lineNumber":27,"author":{"gitId":"marclamp"},"content":"        String input \u003d reader.readLine();","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"marclamp"},"content":"        String[] input_sp \u003d input.split(\" \");","lastModifiedDate":"2024-01-26"},{"lineNumber":29,"author":{"gitId":"marclamp"},"content":"        print_horizontal_line();","lastModifiedDate":"2024-01-26"},{"lineNumber":30,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":31,"author":{"gitId":"marclamp"},"content":"        int num;","lastModifiedDate":"2024-01-26"},{"lineNumber":32,"author":{"gitId":"marclamp"},"content":"        Task curr_task;","lastModifiedDate":"2024-01-26"},{"lineNumber":33,"author":{"gitId":"marclamp"},"content":"        String name;","lastModifiedDate":"2024-01-26"},{"lineNumber":34,"author":{"gitId":"marclamp"},"content":"        String[] temp;","lastModifiedDate":"2024-01-26"},{"lineNumber":35,"author":{"gitId":"marclamp"},"content":"        switch(input_sp[0]) {","lastModifiedDate":"2024-01-26"},{"lineNumber":36,"author":{"gitId":"marclamp"},"content":"            case \"list\":","lastModifiedDate":"2024-01-26"},{"lineNumber":37,"author":{"gitId":"marclamp"},"content":"                echo(\"Here are the tasks in your list: \");","lastModifiedDate":"2024-01-26"},{"lineNumber":38,"author":{"gitId":"marclamp"},"content":"                int i \u003d 1;","lastModifiedDate":"2024-01-26"},{"lineNumber":39,"author":{"gitId":"marclamp"},"content":"                for (Task each_task : listoftasks) {","lastModifiedDate":"2024-01-26"},{"lineNumber":40,"author":{"gitId":"marclamp"},"content":"                    echo(i++ + \". \" + each_task);","lastModifiedDate":"2024-01-26"},{"lineNumber":41,"author":{"gitId":"marclamp"},"content":"                }","lastModifiedDate":"2024-01-26"},{"lineNumber":42,"author":{"gitId":"marclamp"},"content":"                break;","lastModifiedDate":"2024-01-26"},{"lineNumber":43,"author":{"gitId":"marclamp"},"content":"            case \"mark\":","lastModifiedDate":"2024-01-26"},{"lineNumber":44,"author":{"gitId":"marclamp"},"content":"                echo(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-01-26"},{"lineNumber":45,"author":{"gitId":"marclamp"},"content":"                num \u003d Integer.parseInt(input_sp[1]);","lastModifiedDate":"2024-01-26"},{"lineNumber":46,"author":{"gitId":"marclamp"},"content":"                curr_task \u003d listoftasks.get(num-1);","lastModifiedDate":"2024-01-26"},{"lineNumber":47,"author":{"gitId":"marclamp"},"content":"                curr_task.mark();","lastModifiedDate":"2024-01-26"},{"lineNumber":48,"author":{"gitId":"marclamp"},"content":"                echo(curr_task.toString());","lastModifiedDate":"2024-01-26"},{"lineNumber":49,"author":{"gitId":"marclamp"},"content":"                break;","lastModifiedDate":"2024-01-26"},{"lineNumber":50,"author":{"gitId":"marclamp"},"content":"            case \"unmark\":","lastModifiedDate":"2024-01-26"},{"lineNumber":51,"author":{"gitId":"marclamp"},"content":"                echo(\"Ok, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-01-26"},{"lineNumber":52,"author":{"gitId":"marclamp"},"content":"                num \u003d Integer.parseInt(input_sp[1]);","lastModifiedDate":"2024-01-26"},{"lineNumber":53,"author":{"gitId":"marclamp"},"content":"                curr_task \u003d listoftasks.get(num-1);","lastModifiedDate":"2024-01-26"},{"lineNumber":54,"author":{"gitId":"marclamp"},"content":"                curr_task.unmark();","lastModifiedDate":"2024-01-26"},{"lineNumber":55,"author":{"gitId":"marclamp"},"content":"                echo(curr_task.toString());","lastModifiedDate":"2024-01-26"},{"lineNumber":56,"author":{"gitId":"marclamp"},"content":"                break;","lastModifiedDate":"2024-01-26"},{"lineNumber":57,"author":{"gitId":"marclamp"},"content":"            case \"bye\":","lastModifiedDate":"2024-01-26"},{"lineNumber":58,"author":{"gitId":"marclamp"},"content":"                // exits the program","lastModifiedDate":"2024-01-26"},{"lineNumber":59,"author":{"gitId":"marclamp"},"content":"                exited \u003d true;","lastModifiedDate":"2024-01-26"},{"lineNumber":60,"author":{"gitId":"marclamp"},"content":"                exit();","lastModifiedDate":"2024-01-26"},{"lineNumber":61,"author":{"gitId":"marclamp"},"content":"                break;","lastModifiedDate":"2024-01-26"},{"lineNumber":62,"author":{"gitId":"marclamp"},"content":"            case \"todo\":","lastModifiedDate":"2024-01-26"},{"lineNumber":63,"author":{"gitId":"marclamp"},"content":"                try {","lastModifiedDate":"2024-01-26"},{"lineNumber":64,"author":{"gitId":"marclamp"},"content":"                    name \u003d input.substring(5);","lastModifiedDate":"2024-01-26"},{"lineNumber":65,"author":{"gitId":"marclamp"},"content":"                    curr_task \u003d new TodoTask(name);","lastModifiedDate":"2024-01-26"},{"lineNumber":66,"author":{"gitId":"marclamp"},"content":"                    add_task(curr_task);","lastModifiedDate":"2024-01-26"},{"lineNumber":67,"author":{"gitId":"marclamp"},"content":"                } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":68,"author":{"gitId":"marclamp"},"content":"                    echo(\"Sorry, the name of the task todo cannot be empty.\\n\" +","lastModifiedDate":"2024-01-26"},{"lineNumber":69,"author":{"gitId":"marclamp"},"content":"                            \"The way to use the command is as such: todo taskname\");","lastModifiedDate":"2024-01-26"},{"lineNumber":70,"author":{"gitId":"marclamp"},"content":"                }","lastModifiedDate":"2024-01-26"},{"lineNumber":71,"author":{"gitId":"marclamp"},"content":"                break;","lastModifiedDate":"2024-01-26"},{"lineNumber":72,"author":{"gitId":"marclamp"},"content":"            case \"deadline\":","lastModifiedDate":"2024-01-26"},{"lineNumber":73,"author":{"gitId":"marclamp"},"content":"                try {","lastModifiedDate":"2024-01-26"},{"lineNumber":74,"author":{"gitId":"marclamp"},"content":"                    temp \u003d input.split(\"/\");","lastModifiedDate":"2024-01-26"},{"lineNumber":75,"author":{"gitId":"marclamp"},"content":"                    name \u003d temp[0].substring(9);","lastModifiedDate":"2024-01-26"},{"lineNumber":76,"author":{"gitId":"marclamp"},"content":"                    String date \u003d temp[1].substring(3);","lastModifiedDate":"2024-01-26"},{"lineNumber":77,"author":{"gitId":"marclamp"},"content":"                    curr_task \u003d new DeadlineTask(name, date);","lastModifiedDate":"2024-01-26"},{"lineNumber":78,"author":{"gitId":"marclamp"},"content":"                    add_task(curr_task);","lastModifiedDate":"2024-01-26"},{"lineNumber":79,"author":{"gitId":"marclamp"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":80,"author":{"gitId":"marclamp"},"content":"                    echo(\"Sorry, this command is in the wrong format.\\n\" +","lastModifiedDate":"2024-01-26"},{"lineNumber":81,"author":{"gitId":"marclamp"},"content":"                            \"The way to use the command is: deadline taskname /by date_and_time\");","lastModifiedDate":"2024-01-26"},{"lineNumber":82,"author":{"gitId":"marclamp"},"content":"                }","lastModifiedDate":"2024-01-26"},{"lineNumber":83,"author":{"gitId":"marclamp"},"content":"                break;","lastModifiedDate":"2024-01-26"},{"lineNumber":84,"author":{"gitId":"marclamp"},"content":"            case \"event\":","lastModifiedDate":"2024-01-26"},{"lineNumber":85,"author":{"gitId":"marclamp"},"content":"                try {","lastModifiedDate":"2024-01-26"},{"lineNumber":86,"author":{"gitId":"marclamp"},"content":"                    temp \u003d input.split(\"/\");","lastModifiedDate":"2024-01-26"},{"lineNumber":87,"author":{"gitId":"marclamp"},"content":"                    name \u003d temp[0].substring(6);","lastModifiedDate":"2024-01-26"},{"lineNumber":88,"author":{"gitId":"marclamp"},"content":"                    String date1 \u003d temp[1].substring(5);","lastModifiedDate":"2024-01-26"},{"lineNumber":89,"author":{"gitId":"marclamp"},"content":"                    String date2 \u003d temp[2].substring(3);","lastModifiedDate":"2024-01-26"},{"lineNumber":90,"author":{"gitId":"marclamp"},"content":"                    curr_task \u003d new EventTask(name, date1, date2);","lastModifiedDate":"2024-01-26"},{"lineNumber":91,"author":{"gitId":"marclamp"},"content":"                    add_task(curr_task);","lastModifiedDate":"2024-01-26"},{"lineNumber":92,"author":{"gitId":"marclamp"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":93,"author":{"gitId":"marclamp"},"content":"                    echo(\"Sorry, this command is in the wrong format.\\n\" +","lastModifiedDate":"2024-01-26"},{"lineNumber":94,"author":{"gitId":"marclamp"},"content":"                            \"The way to use the command is: event taskname /from date_and_time /to date_and_time\");","lastModifiedDate":"2024-01-26"},{"lineNumber":95,"author":{"gitId":"marclamp"},"content":"                }","lastModifiedDate":"2024-01-26"},{"lineNumber":96,"author":{"gitId":"marclamp"},"content":"                break;","lastModifiedDate":"2024-01-26"},{"lineNumber":97,"author":{"gitId":"marclamp"},"content":"            case \"delete\":","lastModifiedDate":"2024-01-26"},{"lineNumber":98,"author":{"gitId":"marclamp"},"content":"                try {","lastModifiedDate":"2024-01-26"},{"lineNumber":99,"author":{"gitId":"marclamp"},"content":"                    temp \u003d input.split(\" \");","lastModifiedDate":"2024-01-26"},{"lineNumber":100,"author":{"gitId":"marclamp"},"content":"                    int index \u003d Integer.parseInt(temp[1])-1;","lastModifiedDate":"2024-01-26"},{"lineNumber":101,"author":{"gitId":"marclamp"},"content":"                    delete_task(index);","lastModifiedDate":"2024-01-26"},{"lineNumber":102,"author":{"gitId":"marclamp"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":103,"author":{"gitId":"marclamp"},"content":"                    echo(\"Sorry, there is no number detected.\\n\" +","lastModifiedDate":"2024-01-26"},{"lineNumber":104,"author":{"gitId":"marclamp"},"content":"                            \"The correct way to use the command is: delete number\");","lastModifiedDate":"2024-01-26"},{"lineNumber":105,"author":{"gitId":"marclamp"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":106,"author":{"gitId":"marclamp"},"content":"                    echo(\"Sorry, the format for this command is wrong.\\n\" +","lastModifiedDate":"2024-01-26"},{"lineNumber":107,"author":{"gitId":"marclamp"},"content":"                            \"The correct way to use the command is: delete number\");","lastModifiedDate":"2024-01-26"},{"lineNumber":108,"author":{"gitId":"marclamp"},"content":"                }","lastModifiedDate":"2024-01-26"},{"lineNumber":109,"author":{"gitId":"marclamp"},"content":"                break;","lastModifiedDate":"2024-01-26"},{"lineNumber":110,"author":{"gitId":"marclamp"},"content":"            case \"help\":","lastModifiedDate":"2024-01-26"},{"lineNumber":111,"author":{"gitId":"marclamp"},"content":"                String help_message \u003d \"Hi! Here are the list of commands I recognise: \\n\\n\" +","lastModifiedDate":"2024-01-26"},{"lineNumber":112,"author":{"gitId":"marclamp"},"content":"                        \"\u0027list\u0027 - lists the tasks registered in the list\\n\" +","lastModifiedDate":"2024-01-26"},{"lineNumber":113,"author":{"gitId":"marclamp"},"content":"                        \"\u0027todo\u0027 - adds an item that has no due date\\n\" +","lastModifiedDate":"2024-01-26"},{"lineNumber":114,"author":{"gitId":"marclamp"},"content":"                        \"\u0027deadline\u0027 - adds an item with a due date\\n\" +","lastModifiedDate":"2024-01-26"},{"lineNumber":115,"author":{"gitId":"marclamp"},"content":"                        \"\u0027event\u0027 - adds an item that has a duration\\n\" +","lastModifiedDate":"2024-01-26"},{"lineNumber":116,"author":{"gitId":"marclamp"},"content":"                        \"\u0027mark\u0027 - marks the task as completed\\n\" +","lastModifiedDate":"2024-01-26"},{"lineNumber":117,"author":{"gitId":"marclamp"},"content":"                        \"\u0027unmark\u0027 - marks the task as not completed\\n\" +","lastModifiedDate":"2024-01-26"},{"lineNumber":118,"author":{"gitId":"marclamp"},"content":"                        \"\u0027help\u0027 - opens the list of commands available\\n\" +","lastModifiedDate":"2024-01-26"},{"lineNumber":119,"author":{"gitId":"marclamp"},"content":"                        \"\u0027bye\u0027 - exits the chatbot\";","lastModifiedDate":"2024-01-26"},{"lineNumber":120,"author":{"gitId":"marclamp"},"content":"                echo(help_message);","lastModifiedDate":"2024-01-26"},{"lineNumber":121,"author":{"gitId":"marclamp"},"content":"                break;","lastModifiedDate":"2024-01-26"},{"lineNumber":122,"author":{"gitId":"marclamp"},"content":"            default:","lastModifiedDate":"2024-01-26"},{"lineNumber":123,"author":{"gitId":"marclamp"},"content":"                String unrecognised \u003d \"Oops, I have no idea what that means. \" +","lastModifiedDate":"2024-01-26"},{"lineNumber":124,"author":{"gitId":"marclamp"},"content":"                        \"Use \u0027help\u0027 for a list of commands I recognise.\";","lastModifiedDate":"2024-01-26"},{"lineNumber":125,"author":{"gitId":"marclamp"},"content":"                echo(unrecognised);","lastModifiedDate":"2024-01-26"},{"lineNumber":126,"author":{"gitId":"marclamp"},"content":"                break;","lastModifiedDate":"2024-01-26"},{"lineNumber":127,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":128,"author":{"gitId":"marclamp"},"content":"        print_horizontal_line();","lastModifiedDate":"2024-01-26"},{"lineNumber":129,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":130,"author":{"gitId":"marclamp"},"content":"    public static void add_task(Task task) {","lastModifiedDate":"2024-01-26"},{"lineNumber":131,"author":{"gitId":"marclamp"},"content":"        listoftasks.add(task);","lastModifiedDate":"2024-01-26"},{"lineNumber":132,"author":{"gitId":"marclamp"},"content":"        echo(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-26"},{"lineNumber":133,"author":{"gitId":"marclamp"},"content":"        echo(task.toString());","lastModifiedDate":"2024-01-26"},{"lineNumber":134,"author":{"gitId":"marclamp"},"content":"        echo(\"Now you have \" + listoftasks.size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-26"},{"lineNumber":135,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":136,"author":{"gitId":"marclamp"},"content":"    public static void delete_task(int index) {","lastModifiedDate":"2024-01-26"},{"lineNumber":137,"author":{"gitId":"marclamp"},"content":"        Task task \u003d listoftasks.remove(index);","lastModifiedDate":"2024-01-26"},{"lineNumber":138,"author":{"gitId":"marclamp"},"content":"        echo(\"Got it. I\u0027ve removed this task:\");","lastModifiedDate":"2024-01-26"},{"lineNumber":139,"author":{"gitId":"marclamp"},"content":"        echo(task.toString());","lastModifiedDate":"2024-01-26"},{"lineNumber":140,"author":{"gitId":"marclamp"},"content":"        echo(\"Now you have \" + listoftasks.size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-26"},{"lineNumber":141,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":142,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":143,"author":{"gitId":"marclamp"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-26"},{"lineNumber":144,"author":{"gitId":"marclamp"},"content":"        greet();","lastModifiedDate":"2024-01-26"},{"lineNumber":145,"author":{"gitId":"marclamp"},"content":"        BufferedReader reader \u003d new BufferedReader(","lastModifiedDate":"2024-01-26"},{"lineNumber":146,"author":{"gitId":"marclamp"},"content":"                new InputStreamReader((System.in)));","lastModifiedDate":"2024-01-26"},{"lineNumber":147,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":148,"author":{"gitId":"marclamp"},"content":"        while (!exited) {","lastModifiedDate":"2024-01-26"},{"lineNumber":149,"author":{"gitId":"marclamp"},"content":"            try {","lastModifiedDate":"2024-01-26"},{"lineNumber":150,"author":{"gitId":"marclamp"},"content":"                parse_input(reader);","lastModifiedDate":"2024-01-26"},{"lineNumber":151,"author":{"gitId":"marclamp"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":152,"author":{"gitId":"marclamp"},"content":"                System.out.println(\"IOException occurred.\");","lastModifiedDate":"2024-01-26"},{"lineNumber":153,"author":{"gitId":"marclamp"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":154,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":155,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":156,"author":{"gitId":"marclamp"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"marclamp":156}},{"path":"src/main/java/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"marclamp"},"content":"    public String date_time;","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"marclamp"},"content":"    public DeadlineTask(String taskname) {","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"marclamp"},"content":"        super(taskname);","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"marclamp"},"content":"        this.date_time \u003d \"\";","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"marclamp"},"content":"    public DeadlineTask(String taskname, String date_time) {","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"marclamp"},"content":"        super(taskname);","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"marclamp"},"content":"        this.date_time \u003d date_time;","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"marclamp"},"content":"    public String toString() {","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"marclamp"},"content":"        return \"[D]\" + super.toString() +","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"marclamp"},"content":"                String.format(\"(by: %s)\", this.date_time);","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"marclamp"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"marclamp":16}},{"path":"src/main/java/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"public class EventTask extends Task {","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"marclamp"},"content":"    public String date_time1;","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"marclamp"},"content":"    public String date_time2;","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"marclamp"},"content":"    public EventTask(String taskname) {","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"marclamp"},"content":"        super(taskname);","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"marclamp"},"content":"        this.date_time1 \u003d \"\";","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"marclamp"},"content":"        this.date_time2 \u003d \"\";","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"marclamp"},"content":"    public EventTask(String taskname, String date_time1, String date_time2) {","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"marclamp"},"content":"        super(taskname);","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":"        this.date_time1 \u003d date_time1;","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"marclamp"},"content":"        this.date_time2 \u003d date_time2;","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"marclamp"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"marclamp"},"content":"    public String toString() {","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"marclamp"},"content":"        return \"[D]\" + super.toString() +","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"marclamp"},"content":"                String.format(\"(from: %sto: %s)\", this.date_time1, this.date_time2);","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"marclamp"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"marclamp":19}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"public class Task {","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"marclamp"},"content":"    public String taskname;","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"marclamp"},"content":"    public boolean marked;","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"marclamp"},"content":"    // Basic Constructor","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"marclamp"},"content":"    public Task(String taskname) {","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"marclamp"},"content":"        this.taskname \u003d taskname;","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"marclamp"},"content":"        this.marked \u003d false;","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":"    public void mark() {","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"marclamp"},"content":"        this.marked \u003d true;","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"marclamp"},"content":"    public void unmark() {","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"marclamp"},"content":"        this.marked \u003d false;","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"marclamp"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"marclamp"},"content":"    public String toString() {","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"marclamp"},"content":"        return (this.marked ? \"[X] \" : \"[ ] \") + this.taskname;","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"marclamp"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"marclamp":23}},{"path":"src/main/java/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"public class TodoTask extends Task {","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"marclamp"},"content":"    public TodoTask(String taskname) {","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"marclamp"},"content":"        super(taskname);","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"marclamp"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"marclamp"},"content":"    public String toString() {","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"marclamp"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"marclamp"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"marclamp":9}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"todo read book","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"marclamp"},"content":"deadline return book /by June 6th","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"marclamp"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"marclamp"},"content":"todo join sports club","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"marclamp"},"content":"todo borrow book","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"marclamp"},"content":"mark 1","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"marclamp"},"content":"mark 2","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"marclamp"},"content":"mark 4","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"marclamp"},"content":"list","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"marclamp"},"content":"delete 3","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":"list","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"marclamp":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"marclamp"},"content":"java -classpath ..\\bin Chaterpillar \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"marclamp":1,"-":20}}]
