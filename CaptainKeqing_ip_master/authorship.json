[{"path":"src/main/java/Lindi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.commands.Command;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.parser.Parser;","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.storage.Storage;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.storage.StorageLoadException;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.task.TaskList;","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.ui.Ui;","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"CaptainKeqing"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"CaptainKeqing"},"content":" * Entry point of Lindi Application.","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"CaptainKeqing"},"content":" * Initializes the application and starts the interaction with the user.","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"CaptainKeqing"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"CaptainKeqing"},"content":"public class Lindi {","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"CaptainKeqing"},"content":"    private final Storage storage;","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"CaptainKeqing"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"CaptainKeqing"},"content":"    private final Ui ui;","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"CaptainKeqing"},"content":"    private final String NAME \u003d \"Lindi\";  // Log It N Do It -\u003e LINDI","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"CaptainKeqing"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"CaptainKeqing"},"content":"     * Initializes Lindi","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"CaptainKeqing"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"CaptainKeqing"},"content":"     * @param dataDir directory of data file","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"CaptainKeqing"},"content":"     * @param dataFileName name of data file","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"CaptainKeqing"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"CaptainKeqing"},"content":"    public Lindi(String dataDir, String dataFileName) {","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"CaptainKeqing"},"content":"        this.storage \u003d new Storage(dataDir, dataFileName);","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"CaptainKeqing"},"content":"        this.ui \u003d new Ui(this.NAME);","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"CaptainKeqing"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"CaptainKeqing"},"content":"            this.tasks \u003d this.storage.loadFromFile();","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"CaptainKeqing"},"content":"        } catch (StorageLoadException e) {","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"CaptainKeqing"},"content":"            this.ui.displayError(e);","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"CaptainKeqing"},"content":"            this.tasks \u003d new TaskList();","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"CaptainKeqing"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"CaptainKeqing"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"CaptainKeqing"},"content":"     * Runs the program. This loops until terminated by user with lindi.commands.ExitCommand.","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"CaptainKeqing"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"CaptainKeqing"},"content":"    public void run() {","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"CaptainKeqing"},"content":"        this.ui.greeting();","lastModifiedDate":"2024-02-06"},{"lineNumber":40,"author":{"gitId":"CaptainKeqing"},"content":"        boolean toExit \u003d false;","lastModifiedDate":"2024-02-06"},{"lineNumber":41,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":42,"author":{"gitId":"CaptainKeqing"},"content":"        while (!toExit) {","lastModifiedDate":"2024-02-06"},{"lineNumber":43,"author":{"gitId":"CaptainKeqing"},"content":"            String userInput \u003d this.ui.getUserInput();","lastModifiedDate":"2024-02-06"},{"lineNumber":44,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":45,"author":{"gitId":"CaptainKeqing"},"content":"            Command c \u003d Parser.parse(userInput);","lastModifiedDate":"2024-02-06"},{"lineNumber":46,"author":{"gitId":"CaptainKeqing"},"content":"            c.execute(this.tasks, this.storage);","lastModifiedDate":"2024-02-06"},{"lineNumber":47,"author":{"gitId":"CaptainKeqing"},"content":"            this.ui.displayCommand(c);","lastModifiedDate":"2024-02-06"},{"lineNumber":48,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":49,"author":{"gitId":"CaptainKeqing"},"content":"            toExit \u003d c.isExit();","lastModifiedDate":"2024-02-06"},{"lineNumber":50,"author":{"gitId":"CaptainKeqing"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":51,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":52,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":53,"author":{"gitId":"CaptainKeqing"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-06"},{"lineNumber":54,"author":{"gitId":"CaptainKeqing"},"content":"        new Lindi(\"./.data\", \"LindiData.txt\").run();","lastModifiedDate":"2024-02-06"},{"lineNumber":55,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":56,"author":{"gitId":"CaptainKeqing"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"CaptainKeqing":56}},{"path":"src/main/java/lindi/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CaptainKeqing"},"content":"package lindi.commands;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.storage.Storage;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.task.TaskList;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"CaptainKeqing"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"CaptainKeqing"},"content":" * Represents a user command to be executed","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"CaptainKeqing"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"CaptainKeqing"},"content":"public abstract class Command {","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"CaptainKeqing"},"content":"    protected String statusMsg \u003d \"Not executed yet\";","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"CaptainKeqing"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"CaptainKeqing"},"content":"     * Returns if the command is to exit. lindi.commands.ExitCommand overrides this method to return true.","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"CaptainKeqing"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"CaptainKeqing"},"content":"     * @return true if it is an lindi.commands.ExitCommand","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"CaptainKeqing"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"CaptainKeqing"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"CaptainKeqing"},"content":"        return false;","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"CaptainKeqing"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"CaptainKeqing"},"content":"     * Returns the status message of this command.","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"CaptainKeqing"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"CaptainKeqing"},"content":"    public String status() {","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"CaptainKeqing"},"content":"        return this.statusMsg;","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"CaptainKeqing"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"CaptainKeqing"},"content":"     * Executes the command. Updates status msg accordingly.","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"CaptainKeqing"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"CaptainKeqing"},"content":"     * @param tasks lindi.task.TaskList to be used in execution. May be modified.","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"CaptainKeqing"},"content":"     * @param storage lindi.storage.Storage for automatic saving of changes","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"CaptainKeqing"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"CaptainKeqing"},"content":"    public abstract void execute(TaskList tasks, Storage storage);","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"CaptainKeqing"},"content":"//    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"CaptainKeqing"},"content":"//    public String toString() {","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"CaptainKeqing"},"content":"//        return commandStatus();","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"CaptainKeqing"},"content":"//    }","lastModifiedDate":"2024-02-06"},{"lineNumber":40,"author":{"gitId":"CaptainKeqing"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"CaptainKeqing":40}},{"path":"src/main/java/lindi/commands/CreateTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CaptainKeqing"},"content":"package lindi.commands;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.storage.Storage;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.task.Task;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.task.TaskList;","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.task.CreateTaskException;","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"CaptainKeqing"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"CaptainKeqing"},"content":" * Represents a command that creates a lindi.task.Task upon execution","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"CaptainKeqing"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"CaptainKeqing"},"content":"public class CreateTaskCommand extends Command {","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"CaptainKeqing"},"content":"    private final String commandString;","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"CaptainKeqing"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"CaptainKeqing"},"content":"     * Creates command to create lindi.task.Task with the arguments supplied by the user","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"CaptainKeqing"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"CaptainKeqing"},"content":"     * @param commandString user input string","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"CaptainKeqing"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"CaptainKeqing"},"content":"    public CreateTaskCommand(String commandString) {","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"CaptainKeqing"},"content":"        this.commandString \u003d commandString;","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"CaptainKeqing"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"CaptainKeqing"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"CaptainKeqing"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"CaptainKeqing"},"content":"     * Creates lindi.task relying on lindi.task.Task class factory method, adds it to lindi.task list.","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"CaptainKeqing"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"CaptainKeqing"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"CaptainKeqing"},"content":"    public void execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"CaptainKeqing"},"content":"        try{","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"CaptainKeqing"},"content":"            Task createdtask \u003d Task.create(this.commandString);","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"CaptainKeqing"},"content":"            tasks.add(createdtask);","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"CaptainKeqing"},"content":"            this.statusMsg \u003d String.format(\"Okay. I\u0027ve deleted this lindi.task:\\n\\t%s\\nNow you have %d tasks in the list.\",","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"CaptainKeqing"},"content":"                    createdtask, tasks.size());","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"CaptainKeqing"},"content":"            storage.saveToFile(tasks);","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"CaptainKeqing"},"content":"        } catch (CreateTaskException e) {","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"CaptainKeqing"},"content":"            this.statusMsg \u003d e.getMessage();","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"CaptainKeqing"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":40,"author":{"gitId":"CaptainKeqing"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"CaptainKeqing":40}},{"path":"src/main/java/lindi/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CaptainKeqing"},"content":"package lindi.commands;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.storage.Storage;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.task.Task;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.task.TaskList;","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"CaptainKeqing"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"CaptainKeqing"},"content":" * Represents a command that deletes a lindi.task.Task upon execution","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"CaptainKeqing"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"CaptainKeqing"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"CaptainKeqing"},"content":"    private final int listIndex;","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"CaptainKeqing"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"CaptainKeqing"},"content":"     * Creates command to delete a lindi.task.Task from the lindi.task list","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"CaptainKeqing"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"CaptainKeqing"},"content":"     * @param listIndex index of lindi.task to delete","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"CaptainKeqing"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"CaptainKeqing"},"content":"    public DeleteCommand(int listIndex) {","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"CaptainKeqing"},"content":"        this.listIndex \u003d listIndex;","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"CaptainKeqing"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"CaptainKeqing"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"CaptainKeqing"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"CaptainKeqing"},"content":"     * Delete the lindi.task at listIndex from tasks.","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"CaptainKeqing"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"CaptainKeqing"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"CaptainKeqing"},"content":"    public void execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"CaptainKeqing"},"content":"        try {","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"CaptainKeqing"},"content":"            Task deletedTask \u003d tasks.delete(this.listIndex);","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"CaptainKeqing"},"content":"            this.statusMsg \u003d String.format(\"Okay. I\u0027ve deleted this lindi.task:\\n\\t%s\\nNow you have %d tasks in the list.\",","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"CaptainKeqing"},"content":"                    deletedTask, tasks.size());","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"CaptainKeqing"},"content":"            storage.saveToFile(tasks);","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"CaptainKeqing"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"CaptainKeqing"},"content":"            this.statusMsg \u003d \"Sorry, I can\u0027t find that lindi.task. Please enter a valid index\\n\" +","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"CaptainKeqing"},"content":"                    \"You can see the tasks list by inputting \\\"list\\\"\";","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"CaptainKeqing"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"CaptainKeqing"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"CaptainKeqing":39}},{"path":"src/main/java/lindi/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CaptainKeqing"},"content":"package lindi.commands;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.storage.Storage;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.task.TaskList;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"CaptainKeqing"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"CaptainKeqing"},"content":" * Represents a command that exits the program upon execution","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"CaptainKeqing"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"CaptainKeqing"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"CaptainKeqing"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"CaptainKeqing"},"content":"    public void execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"CaptainKeqing"},"content":"        this.statusMsg \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"CaptainKeqing"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"CaptainKeqing"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"CaptainKeqing"},"content":"        return true;","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"CaptainKeqing"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"CaptainKeqing":19}},{"path":"src/main/java/lindi/commands/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CaptainKeqing"},"content":"package lindi.commands;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.storage.Storage;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.task.TaskList;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"CaptainKeqing"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"CaptainKeqing"},"content":" * Represents an invalid command that has no effect","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"CaptainKeqing"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"CaptainKeqing"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"CaptainKeqing"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"CaptainKeqing"},"content":"     * Creates the invalid command","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"CaptainKeqing"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"CaptainKeqing"},"content":"     * @param invalidMessage reason for invalidity","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"CaptainKeqing"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"CaptainKeqing"},"content":"    public InvalidCommand(String invalidMessage) {","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"CaptainKeqing"},"content":"        this.statusMsg \u003d invalidMessage;","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"CaptainKeqing"},"content":"    ","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"CaptainKeqing"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"CaptainKeqing"},"content":"    public void execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"CaptainKeqing"},"content":"        return; // Do nothing","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"CaptainKeqing"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"CaptainKeqing":23}},{"path":"src/main/java/lindi/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CaptainKeqing"},"content":"package lindi.commands;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.storage.Storage;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.task.TaskList;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"CaptainKeqing"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"CaptainKeqing"},"content":" * Represents a command that lists out tasks in the lindi.task list upon execution","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"CaptainKeqing"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"CaptainKeqing"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"CaptainKeqing"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"CaptainKeqing"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"CaptainKeqing"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"CaptainKeqing"},"content":"     * Loads the tasks in lindi.task list into status msg to be printed.","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"CaptainKeqing"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"CaptainKeqing"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"CaptainKeqing"},"content":"    public void execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"CaptainKeqing"},"content":"        this.statusMsg \u003d tasks.toString();","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"CaptainKeqing"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"CaptainKeqing":19}},{"path":"src/main/java/lindi/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CaptainKeqing"},"content":"package lindi.commands;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.storage.Storage;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.task.Task;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.task.TaskList;","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"CaptainKeqing"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"CaptainKeqing"},"content":" * Represents a command that marks a lindi.task as done upon execution","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"CaptainKeqing"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"CaptainKeqing"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"CaptainKeqing"},"content":"    private final int listIndex;","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"CaptainKeqing"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"CaptainKeqing"},"content":"     * Creates command that marks a lindi.task.Task in the lindi.task.Task List","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"CaptainKeqing"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"CaptainKeqing"},"content":"     * @param listIndex index of lindi.task to mark","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"CaptainKeqing"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"CaptainKeqing"},"content":"    public MarkCommand(int listIndex) {","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"CaptainKeqing"},"content":"        this.listIndex \u003d listIndex;","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"CaptainKeqing"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"CaptainKeqing"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"CaptainKeqing"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"CaptainKeqing"},"content":"     * Marks the lindi.task at listIndex in tasks as done.","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"CaptainKeqing"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"CaptainKeqing"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"CaptainKeqing"},"content":"    public void execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"CaptainKeqing"},"content":"        try {","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"CaptainKeqing"},"content":"            Task markedTask \u003d tasks.mark(this.listIndex);","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"CaptainKeqing"},"content":"            this.statusMsg \u003d \"Nice! I\u0027ve marked this lindi.task as done:\\n\\t\" + markedTask;","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"CaptainKeqing"},"content":"            storage.saveToFile(tasks);","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"CaptainKeqing"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"CaptainKeqing"},"content":"            this.statusMsg \u003d \"Sorry, I can\u0027t find that lindi.task. Please enter a valid index\\n\" +","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"CaptainKeqing"},"content":"                    \"You can see the tasks list by inputting \\\"list\\\"\";","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"CaptainKeqing"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"CaptainKeqing"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"CaptainKeqing":38}},{"path":"src/main/java/lindi/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CaptainKeqing"},"content":"package lindi.commands;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.storage.Storage;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.task.Task;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.task.TaskList;","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"CaptainKeqing"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"CaptainKeqing"},"content":" * Represents a command that marks a lindi.task as not done upon execution","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"CaptainKeqing"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"CaptainKeqing"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"CaptainKeqing"},"content":"    private final int listIndex;","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"CaptainKeqing"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"CaptainKeqing"},"content":"     * Creates command that unmarks a lindi.task.Task in the lindi.task.Task List","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"CaptainKeqing"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"CaptainKeqing"},"content":"     * @param listIndex index of lindi.task to unmark","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"CaptainKeqing"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"CaptainKeqing"},"content":"    public UnmarkCommand(int listIndex) {","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"CaptainKeqing"},"content":"        this.listIndex \u003d listIndex;","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"CaptainKeqing"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"CaptainKeqing"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"CaptainKeqing"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"CaptainKeqing"},"content":"     * Marks the lindi.task at listIndex in tasks as `not` done.","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"CaptainKeqing"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"CaptainKeqing"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"CaptainKeqing"},"content":"    public void execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"CaptainKeqing"},"content":"        try {","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"CaptainKeqing"},"content":"            Task unmarkedTask \u003d tasks.unmark(this.listIndex);","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"CaptainKeqing"},"content":"            this.statusMsg \u003d \"Nice! I\u0027ve marked this lindi.task as not done yet:\\n\\t\" + unmarkedTask;","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"CaptainKeqing"},"content":"            storage.saveToFile(tasks);","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"CaptainKeqing"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"CaptainKeqing"},"content":"            this.statusMsg \u003d \"Sorry, I can\u0027t find that lindi.task. Please enter a valid index\\n\" +","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"CaptainKeqing"},"content":"                    \"You can see the tasks list by inputting \\\"list\\\"\";","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"CaptainKeqing"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"CaptainKeqing"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"CaptainKeqing":38}},{"path":"src/main/java/lindi/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CaptainKeqing"},"content":"package lindi.parser;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.commands.Command;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.commands.CreateTaskCommand;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.commands.DeleteCommand;","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.commands.ExitCommand;","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.commands.InvalidCommand;","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.commands.ListCommand;","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.commands.MarkCommand;","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.commands.UnmarkCommand;","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"CaptainKeqing"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"CaptainKeqing"},"content":" * Deals with making sense (parsing) of the user command.","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"CaptainKeqing"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"CaptainKeqing"},"content":"public class Parser {","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"CaptainKeqing"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"CaptainKeqing"},"content":"     * Parses the user input and returns the corresponding lindi.commands.Command","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"CaptainKeqing"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"CaptainKeqing"},"content":"     * @param userInput the user input command string","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"CaptainKeqing"},"content":"     * @return the lindi.commands.Command corresponding to the input string.","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"CaptainKeqing"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"CaptainKeqing"},"content":"    public static Command parse(String userInput) {","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"CaptainKeqing"},"content":"        // if command called, will be index 0, rest of string (args) in index 1","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"CaptainKeqing"},"content":"        String[] userInputTokens \u003d userInput.split(\" \", 2);","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"CaptainKeqing"},"content":"        String commandWord \u003d userInputTokens[0];","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"CaptainKeqing"},"content":"        String args \u003d userInputTokens.length \u003d\u003d 2 ? userInputTokens[1] : null;","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"CaptainKeqing"},"content":"        switch (commandWord) {","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"CaptainKeqing"},"content":"            case \"list\":","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"CaptainKeqing"},"content":"                return new ListCommand();","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"CaptainKeqing"},"content":"            case \"unmark\":","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"CaptainKeqing"},"content":"                return prepareUnmark(args);","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"CaptainKeqing"},"content":"            case \"mark\":","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"CaptainKeqing"},"content":"                return prepareMark(args);","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"CaptainKeqing"},"content":"            case \"delete\":","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"CaptainKeqing"},"content":"                return prepareDelete(args);","lastModifiedDate":"2024-02-06"},{"lineNumber":40,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":41,"author":{"gitId":"CaptainKeqing"},"content":"            case \"todo\":","lastModifiedDate":"2024-02-06"},{"lineNumber":42,"author":{"gitId":"CaptainKeqing"},"content":"                // Fallthrough","lastModifiedDate":"2024-02-06"},{"lineNumber":43,"author":{"gitId":"CaptainKeqing"},"content":"            case \"event\":","lastModifiedDate":"2024-02-06"},{"lineNumber":44,"author":{"gitId":"CaptainKeqing"},"content":"                // Fallthrough","lastModifiedDate":"2024-02-06"},{"lineNumber":45,"author":{"gitId":"CaptainKeqing"},"content":"            case \"deadline\":","lastModifiedDate":"2024-02-06"},{"lineNumber":46,"author":{"gitId":"CaptainKeqing"},"content":"                return new CreateTaskCommand(userInput);","lastModifiedDate":"2024-02-06"},{"lineNumber":47,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":48,"author":{"gitId":"CaptainKeqing"},"content":"            case \"bye\":","lastModifiedDate":"2024-02-06"},{"lineNumber":49,"author":{"gitId":"CaptainKeqing"},"content":"                return new ExitCommand();","lastModifiedDate":"2024-02-06"},{"lineNumber":50,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":51,"author":{"gitId":"CaptainKeqing"},"content":"            default:","lastModifiedDate":"2024-02-06"},{"lineNumber":52,"author":{"gitId":"CaptainKeqing"},"content":"                return new InvalidCommand(\"Uhh, English please? Haha, just kidding...\\n\" +","lastModifiedDate":"2024-02-06"},{"lineNumber":53,"author":{"gitId":"CaptainKeqing"},"content":"                        \"but for reals I didn\u0027t really understand that :(\");","lastModifiedDate":"2024-02-06"},{"lineNumber":54,"author":{"gitId":"CaptainKeqing"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":55,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":56,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":57,"author":{"gitId":"CaptainKeqing"},"content":"    private static int getIndexFromArgs(String args) throws NumberFormatException {","lastModifiedDate":"2024-02-06"},{"lineNumber":58,"author":{"gitId":"CaptainKeqing"},"content":"        return Integer.parseInt(args);","lastModifiedDate":"2024-02-06"},{"lineNumber":59,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":60,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":61,"author":{"gitId":"CaptainKeqing"},"content":"    private static Command prepareUnmark(String args) {","lastModifiedDate":"2024-02-06"},{"lineNumber":62,"author":{"gitId":"CaptainKeqing"},"content":"        if (args \u003d\u003d null) {","lastModifiedDate":"2024-02-06"},{"lineNumber":63,"author":{"gitId":"CaptainKeqing"},"content":"            return new InvalidCommand(\"Uh oh ! You have to give me the index \" +","lastModifiedDate":"2024-02-06"},{"lineNumber":64,"author":{"gitId":"CaptainKeqing"},"content":"                    \"of the lindi.task you want to modify :)\");","lastModifiedDate":"2024-02-06"},{"lineNumber":65,"author":{"gitId":"CaptainKeqing"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":66,"author":{"gitId":"CaptainKeqing"},"content":"        try {","lastModifiedDate":"2024-02-06"},{"lineNumber":67,"author":{"gitId":"CaptainKeqing"},"content":"            int listIndex \u003d getIndexFromArgs(args);","lastModifiedDate":"2024-02-06"},{"lineNumber":68,"author":{"gitId":"CaptainKeqing"},"content":"            return new UnmarkCommand(listIndex);","lastModifiedDate":"2024-02-06"},{"lineNumber":69,"author":{"gitId":"CaptainKeqing"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-06"},{"lineNumber":70,"author":{"gitId":"CaptainKeqing"},"content":"            return new InvalidCommand(\"I\u0027m pretty sure I gave you the indexes in base 10...\\n\" +","lastModifiedDate":"2024-02-06"},{"lineNumber":71,"author":{"gitId":"CaptainKeqing"},"content":"                    \"there shouldn\u0027t be any characters!! :(\");","lastModifiedDate":"2024-02-06"},{"lineNumber":72,"author":{"gitId":"CaptainKeqing"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":73,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":74,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":75,"author":{"gitId":"CaptainKeqing"},"content":"    private static Command prepareMark(String args) {","lastModifiedDate":"2024-02-06"},{"lineNumber":76,"author":{"gitId":"CaptainKeqing"},"content":"        if (args \u003d\u003d null) {","lastModifiedDate":"2024-02-06"},{"lineNumber":77,"author":{"gitId":"CaptainKeqing"},"content":"            return new InvalidCommand(\"Uh oh ! You have to give me the index \" +","lastModifiedDate":"2024-02-06"},{"lineNumber":78,"author":{"gitId":"CaptainKeqing"},"content":"                    \"of the lindi.task you want to modify :)\");","lastModifiedDate":"2024-02-06"},{"lineNumber":79,"author":{"gitId":"CaptainKeqing"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":80,"author":{"gitId":"CaptainKeqing"},"content":"        try {","lastModifiedDate":"2024-02-06"},{"lineNumber":81,"author":{"gitId":"CaptainKeqing"},"content":"            int listIndex \u003d getIndexFromArgs(args);","lastModifiedDate":"2024-02-06"},{"lineNumber":82,"author":{"gitId":"CaptainKeqing"},"content":"            return new MarkCommand(listIndex);","lastModifiedDate":"2024-02-06"},{"lineNumber":83,"author":{"gitId":"CaptainKeqing"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-06"},{"lineNumber":84,"author":{"gitId":"CaptainKeqing"},"content":"            return new InvalidCommand(\"I\u0027m pretty sure I gave you the indexes in base 10...\\n\" +","lastModifiedDate":"2024-02-06"},{"lineNumber":85,"author":{"gitId":"CaptainKeqing"},"content":"                    \"there shouldn\u0027t be any characters!! :(\");","lastModifiedDate":"2024-02-06"},{"lineNumber":86,"author":{"gitId":"CaptainKeqing"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":87,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":88,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":89,"author":{"gitId":"CaptainKeqing"},"content":"    private static Command prepareDelete(String args) {","lastModifiedDate":"2024-02-06"},{"lineNumber":90,"author":{"gitId":"CaptainKeqing"},"content":"        if (args \u003d\u003d null) {","lastModifiedDate":"2024-02-06"},{"lineNumber":91,"author":{"gitId":"CaptainKeqing"},"content":"            return new InvalidCommand(\"Uh oh ! You have to give me the index \" +","lastModifiedDate":"2024-02-06"},{"lineNumber":92,"author":{"gitId":"CaptainKeqing"},"content":"                    \"of the lindi.task you want to modify :)\");","lastModifiedDate":"2024-02-06"},{"lineNumber":93,"author":{"gitId":"CaptainKeqing"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":94,"author":{"gitId":"CaptainKeqing"},"content":"        try {","lastModifiedDate":"2024-02-06"},{"lineNumber":95,"author":{"gitId":"CaptainKeqing"},"content":"            int listIndex \u003d getIndexFromArgs(args);","lastModifiedDate":"2024-02-06"},{"lineNumber":96,"author":{"gitId":"CaptainKeqing"},"content":"            return new DeleteCommand(listIndex);","lastModifiedDate":"2024-02-06"},{"lineNumber":97,"author":{"gitId":"CaptainKeqing"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-06"},{"lineNumber":98,"author":{"gitId":"CaptainKeqing"},"content":"            return new InvalidCommand(\"I\u0027m pretty sure I gave you the indexes in base 10...\\n\" +","lastModifiedDate":"2024-02-06"},{"lineNumber":99,"author":{"gitId":"CaptainKeqing"},"content":"                    \"there shouldn\u0027t be any characters!! :(\");","lastModifiedDate":"2024-02-06"},{"lineNumber":100,"author":{"gitId":"CaptainKeqing"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":101,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":102,"author":{"gitId":"CaptainKeqing"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"CaptainKeqing":102}},{"path":"src/main/java/lindi/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CaptainKeqing"},"content":"package lindi.storage;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"CaptainKeqing"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"CaptainKeqing"},"content":"import java.io.File;","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"CaptainKeqing"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"CaptainKeqing"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"CaptainKeqing"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.task.CreateTaskException;","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.task.Task;","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.task.TaskList;","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"CaptainKeqing"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"CaptainKeqing"},"content":" * Represents the lindi.storage unit for the application. Deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"CaptainKeqing"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"CaptainKeqing"},"content":"public class Storage {","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"CaptainKeqing"},"content":"    private FileWriter fileWriter;","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"CaptainKeqing"},"content":"    private Scanner fileScanner;","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"CaptainKeqing"},"content":"    String dataDir;","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"CaptainKeqing"},"content":"    String dataFileName;","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"CaptainKeqing"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"CaptainKeqing"},"content":"     * Initialises lindi.storage.Storage to load data from and save data to a file. Creates","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"CaptainKeqing"},"content":"     * the required directories and files if necessary.","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"CaptainKeqing"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"CaptainKeqing"},"content":"     * @param dataDir directory to store the data file","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"CaptainKeqing"},"content":"     * @param dataFileName name of data file (.txt format)","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"CaptainKeqing"},"content":"     * @throws IOException - if an I/O operation occurred using File","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"CaptainKeqing"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"CaptainKeqing"},"content":"    public Storage(String dataDir, String dataFileName) {","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"CaptainKeqing"},"content":"        this.dataDir \u003d dataDir;","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"CaptainKeqing"},"content":"        this.dataFileName \u003d dataFileName;","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"CaptainKeqing"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"CaptainKeqing"},"content":"     * Saves the  lindi.task list to the designated text file for storing data for the program.","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"CaptainKeqing"},"content":"     * Creates one if it does not exist yet.","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"CaptainKeqing"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":40,"author":{"gitId":"CaptainKeqing"},"content":"     * @param tasks lindi.task.Task list to save to file","lastModifiedDate":"2024-02-06"},{"lineNumber":41,"author":{"gitId":"CaptainKeqing"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":42,"author":{"gitId":"CaptainKeqing"},"content":"    public void saveToFile(TaskList tasks) {","lastModifiedDate":"2024-02-06"},{"lineNumber":43,"author":{"gitId":"CaptainKeqing"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-02-06"},{"lineNumber":44,"author":{"gitId":"CaptainKeqing"},"content":"        // Loops through taskList, appends them to string with the specified format","lastModifiedDate":"2024-02-06"},{"lineNumber":45,"author":{"gitId":"CaptainKeqing"},"content":"        tasks.getTasks().forEachRemaining(","lastModifiedDate":"2024-02-06"},{"lineNumber":46,"author":{"gitId":"CaptainKeqing"},"content":"                task -\u003e {","lastModifiedDate":"2024-02-06"},{"lineNumber":47,"author":{"gitId":"CaptainKeqing"},"content":"                    String parsedTask \u003d task.parsedFormatToSave();","lastModifiedDate":"2024-02-06"},{"lineNumber":48,"author":{"gitId":"CaptainKeqing"},"content":"                    sb.append(parsedTask).append(\u0027\\n\u0027);","lastModifiedDate":"2024-02-06"},{"lineNumber":49,"author":{"gitId":"CaptainKeqing"},"content":"                }","lastModifiedDate":"2024-02-06"},{"lineNumber":50,"author":{"gitId":"CaptainKeqing"},"content":"        );","lastModifiedDate":"2024-02-06"},{"lineNumber":51,"author":{"gitId":"CaptainKeqing"},"content":"        try {","lastModifiedDate":"2024-02-06"},{"lineNumber":52,"author":{"gitId":"CaptainKeqing"},"content":"            // Creates the directories if they do not exist yet. No effect if it exists.","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"CaptainKeqing"},"content":"            File dir \u003d new File(dataDir);","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"CaptainKeqing"},"content":"            dir.mkdirs();","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"CaptainKeqing"},"content":"            // Creates the file if it does not exist yet. No effect if it exists.","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"CaptainKeqing"},"content":"            File dataFile \u003d new File(dir, dataFileName);","lastModifiedDate":"2024-02-05"},{"lineNumber":58,"author":{"gitId":"CaptainKeqing"},"content":"            dataFile.createNewFile();","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":60,"author":{"gitId":"CaptainKeqing"},"content":"            this.fileWriter \u003d new FileWriter(dataFile);","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"CaptainKeqing"},"content":"            this.fileWriter.write(sb.toString());","lastModifiedDate":"2024-02-06"},{"lineNumber":63,"author":{"gitId":"CaptainKeqing"},"content":"            this.fileWriter.close();","lastModifiedDate":"2024-02-05"},{"lineNumber":64,"author":{"gitId":"CaptainKeqing"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":65,"author":{"gitId":"CaptainKeqing"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2024-02-05"},{"lineNumber":66,"author":{"gitId":"CaptainKeqing"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":67,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":68,"author":{"gitId":"CaptainKeqing"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":69,"author":{"gitId":"CaptainKeqing"},"content":"     * Loads the taskList from the data file for this session","lastModifiedDate":"2024-02-05"},{"lineNumber":70,"author":{"gitId":"CaptainKeqing"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":71,"author":{"gitId":"CaptainKeqing"},"content":"     * @throws FileNotFoundException if data file not exist at file path","lastModifiedDate":"2024-02-06"},{"lineNumber":72,"author":{"gitId":"CaptainKeqing"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":73,"author":{"gitId":"CaptainKeqing"},"content":"    public TaskList loadFromFile() throws StorageLoadException {","lastModifiedDate":"2024-02-06"},{"lineNumber":74,"author":{"gitId":"CaptainKeqing"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":75,"author":{"gitId":"CaptainKeqing"},"content":"            this.fileScanner \u003d new Scanner(new File(dataDir, dataFileName));","lastModifiedDate":"2024-02-06"},{"lineNumber":76,"author":{"gitId":"CaptainKeqing"},"content":"            TaskList tasksToReturn \u003d new TaskList();","lastModifiedDate":"2024-02-06"},{"lineNumber":77,"author":{"gitId":"CaptainKeqing"},"content":"            // Data file exist in folder, load it into our taskList","lastModifiedDate":"2024-02-05"},{"lineNumber":78,"author":{"gitId":"CaptainKeqing"},"content":"            while (fileScanner.hasNextLine()) {","lastModifiedDate":"2024-02-05"},{"lineNumber":79,"author":{"gitId":"CaptainKeqing"},"content":"                String parsedString \u003d fileScanner.nextLine();","lastModifiedDate":"2024-02-05"},{"lineNumber":80,"author":{"gitId":"CaptainKeqing"},"content":"                Task task \u003d Task.createFromParsedString(parsedString);","lastModifiedDate":"2024-02-05"},{"lineNumber":81,"author":{"gitId":"CaptainKeqing"},"content":"                tasksToReturn.add(task);","lastModifiedDate":"2024-02-06"},{"lineNumber":82,"author":{"gitId":"CaptainKeqing"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":83,"author":{"gitId":"CaptainKeqing"},"content":"            return tasksToReturn;","lastModifiedDate":"2024-02-06"},{"lineNumber":84,"author":{"gitId":"CaptainKeqing"},"content":"        } catch (CreateTaskException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":85,"author":{"gitId":"CaptainKeqing"},"content":"            throw new StorageLoadException(\"Error loading tasks from save file. Might be corrupted...\\n\"","lastModifiedDate":"2024-02-06"},{"lineNumber":86,"author":{"gitId":"CaptainKeqing"},"content":"                    + e.getMessage());","lastModifiedDate":"2024-02-06"},{"lineNumber":87,"author":{"gitId":"CaptainKeqing"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-06"},{"lineNumber":88,"author":{"gitId":"CaptainKeqing"},"content":"            throw new StorageLoadException(\"Error loading tasks from save file. \" +","lastModifiedDate":"2024-02-06"},{"lineNumber":89,"author":{"gitId":"CaptainKeqing"},"content":"                    \"File not found at path specified...\\n\" + new File(dataDir, dataFileName));","lastModifiedDate":"2024-02-06"},{"lineNumber":90,"author":{"gitId":"CaptainKeqing"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":91,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":92,"author":{"gitId":"CaptainKeqing"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"CaptainKeqing":92}},{"path":"src/main/java/lindi/storage/StorageLoadException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CaptainKeqing"},"content":"package lindi.storage;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"CaptainKeqing"},"content":"public class StorageLoadException extends Exception {","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"CaptainKeqing"},"content":"    public StorageLoadException(String s) {","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"CaptainKeqing"},"content":"        super(s);","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"CaptainKeqing"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"CaptainKeqing":7}},{"path":"src/main/java/lindi/task/CreateDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CaptainKeqing"},"content":"package lindi.task;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"CaptainKeqing"},"content":"public class CreateDeadlineException extends CreateTaskException {","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"CaptainKeqing"},"content":"    public CreateDeadlineException(String s) {","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"CaptainKeqing"},"content":"        super(s);","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"CaptainKeqing"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"CaptainKeqing":7}},{"path":"src/main/java/lindi/task/CreateEventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CaptainKeqing"},"content":"package lindi.task;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"CaptainKeqing"},"content":"public class CreateEventException extends CreateTaskException {","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"CaptainKeqing"},"content":"    public CreateEventException(String s) {","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"CaptainKeqing"},"content":"        super(s);","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"CaptainKeqing"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"CaptainKeqing":7}},{"path":"src/main/java/lindi/task/CreateTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CaptainKeqing"},"content":"package lindi.task;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"CaptainKeqing"},"content":"public class CreateTaskException extends Exception {","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"CaptainKeqing"},"content":"    public CreateTaskException(String s) {","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"CaptainKeqing"},"content":"        super(s);","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"CaptainKeqing"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"CaptainKeqing":7}},{"path":"src/main/java/lindi/task/CreateToDoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CaptainKeqing"},"content":"package lindi.task;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"CaptainKeqing"},"content":"public class CreateToDoException extends CreateTaskException {","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"CaptainKeqing"},"content":"    public CreateToDoException(String s) {","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"CaptainKeqing"},"content":"        super(s);","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"CaptainKeqing"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"CaptainKeqing":7}},{"path":"src/main/java/lindi/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CaptainKeqing"},"content":"package lindi.task;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"CaptainKeqing"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"CaptainKeqing"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"CaptainKeqing"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"CaptainKeqing"},"content":"    private LocalDateTime by;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"CaptainKeqing"},"content":"    public Deadline(String description, String by) throws CreateDeadlineException {","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"CaptainKeqing"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"CaptainKeqing"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"CaptainKeqing"},"content":"            this.by \u003d LocalDateTime.parse(by, this.saveLoadDateTimeFormat);","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"CaptainKeqing"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"CaptainKeqing"},"content":"            throw new CreateDeadlineException(String.format(\"lindi.task.Deadline /by argument in the wrong format. Use \" +","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"CaptainKeqing"},"content":"                    \"format \u0027%s\u0027 instead. Not saving seconds and below :)\", this.saveLoadDtFormatString));","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"CaptainKeqing"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"CaptainKeqing"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"CaptainKeqing"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"CaptainKeqing"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.by.format(this.displayDateTimeFormat) + \")\";","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"CaptainKeqing"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"CaptainKeqing"},"content":"    public String parsedFormatToSave() {","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"CaptainKeqing"},"content":"        return String.format(\"D | %c | %s | %s\",","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"CaptainKeqing"},"content":"                this.isDone ? \u0027y\u0027 : \u0027n\u0027, this.description,","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"CaptainKeqing"},"content":"                this.by.format(this.saveLoadDateTimeFormat));","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"CaptainKeqing"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"CaptainKeqing":29}},{"path":"src/main/java/lindi/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CaptainKeqing"},"content":"package lindi.task;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"CaptainKeqing"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"CaptainKeqing"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"CaptainKeqing"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"CaptainKeqing"},"content":"    private LocalDateTime from;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"CaptainKeqing"},"content":"    private LocalDateTime to;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"CaptainKeqing"},"content":"    public Event(String description, String from, String to) throws CreateEventException {","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"CaptainKeqing"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"CaptainKeqing"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"CaptainKeqing"},"content":"            this.from \u003d LocalDateTime.parse(from, this.saveLoadDateTimeFormat);","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"CaptainKeqing"},"content":"            this.to \u003d LocalDateTime.parse(to, this.saveLoadDateTimeFormat);","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"CaptainKeqing"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"CaptainKeqing"},"content":"            throw new CreateEventException(String.format(\"lindi.task.Event /from or /to argument in the wrong format. Use \" +","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"CaptainKeqing"},"content":"                    \"format \u0027%s\u0027 for each instead. Not saving seconds and below :)\", this.saveLoadDtFormatString));","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"CaptainKeqing"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"CaptainKeqing"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"CaptainKeqing"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"CaptainKeqing"},"content":"        return \"[E]\" + super.toString() + String.format(\" (when: %s - %s)\",","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"CaptainKeqing"},"content":"                this.from.format(this.displayDateTimeFormat),","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"CaptainKeqing"},"content":"                        this.to.format(this.displayDateTimeFormat));","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"CaptainKeqing"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"CaptainKeqing"},"content":"    public String parsedFormatToSave() {","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"CaptainKeqing"},"content":"        return String.format(\"E | %c | %s | %s | %s\",","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"CaptainKeqing"},"content":"                this.isDone ? \u0027y\u0027 : \u0027n\u0027, this.description,","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"CaptainKeqing"},"content":"                        this.from.format(this.saveLoadDateTimeFormat),","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"CaptainKeqing"},"content":"                                this.to.format(this.saveLoadDateTimeFormat));","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"CaptainKeqing"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"CaptainKeqing":35}},{"path":"src/main/java/lindi/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CaptainKeqing"},"content":"package lindi.task;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"CaptainKeqing"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"CaptainKeqing"},"content":"public abstract class Task { // Adapted from Course Website","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"CaptainKeqing"},"content":"    protected String description;","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"CaptainKeqing"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"CaptainKeqing"},"content":"    protected final String displayDtFormatString \u003d \"MMM dd yyyy HH:mm\";","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"CaptainKeqing"},"content":"    protected final String saveLoadDtFormatString \u003d \"yyyy-MM-dd-HH-mm\";","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"CaptainKeqing"},"content":"    protected final DateTimeFormatter displayDateTimeFormat \u003d DateTimeFormatter.ofPattern(displayDtFormatString);","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"CaptainKeqing"},"content":"    protected final DateTimeFormatter saveLoadDateTimeFormat \u003d DateTimeFormatter.ofPattern(saveLoadDtFormatString);","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"CaptainKeqing"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"CaptainKeqing"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"CaptainKeqing"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"CaptainKeqing"},"content":"    public static Task create(String fullString) throws CreateTaskException {","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"CaptainKeqing"},"content":"        // s is either `todo`, `event` or `deadline`","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"CaptainKeqing"},"content":"        String[] sTokens \u003d fullString.split(\" \", 2);","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"CaptainKeqing"},"content":"        if (sTokens.length \u003c 2) {","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"CaptainKeqing"},"content":"            throw new CreateTaskException(\"soo what exactly are you trying to do? :)\");","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"CaptainKeqing"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"CaptainKeqing"},"content":"        String command \u003d sTokens[0];","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"CaptainKeqing"},"content":"        String taskString \u003d sTokens[1];","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"CaptainKeqing"},"content":"        switch (command) {","lastModifiedDate":"2024-01-26"},{"lineNumber":27,"author":{"gitId":"CaptainKeqing"},"content":"            case \"todo\":","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"CaptainKeqing"},"content":"                return new ToDo(taskString);","lastModifiedDate":"2024-01-26"},{"lineNumber":29,"author":{"gitId":"CaptainKeqing"},"content":"            case \"deadline\":","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"CaptainKeqing"},"content":"                // Further split the remaining string based on /by","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"CaptainKeqing"},"content":"                if (!taskString.contains(\"/by\")) {","lastModifiedDate":"2024-01-26"},{"lineNumber":32,"author":{"gitId":"CaptainKeqing"},"content":"                    throw new CreateDeadlineException(","lastModifiedDate":"2024-01-26"},{"lineNumber":33,"author":{"gitId":"CaptainKeqing"},"content":"                            \"You can\u0027t expect me to track a deadline if you don\u0027t give me the.. deadline right? haha\\n\" +","lastModifiedDate":"2024-01-26"},{"lineNumber":34,"author":{"gitId":"CaptainKeqing"},"content":"                                    \"please include \u0027/by\u0027 followed by the deadline :)\");","lastModifiedDate":"2024-01-26"},{"lineNumber":35,"author":{"gitId":"CaptainKeqing"},"content":"                }","lastModifiedDate":"2024-01-26"},{"lineNumber":36,"author":{"gitId":"CaptainKeqing"},"content":"                String[] descriptionNBy \u003d taskString.split(\"/by\");","lastModifiedDate":"2024-01-26"},{"lineNumber":37,"author":{"gitId":"CaptainKeqing"},"content":"                if (descriptionNBy.length \u003e 2) {","lastModifiedDate":"2024-01-26"},{"lineNumber":38,"author":{"gitId":"CaptainKeqing"},"content":"                    throw new CreateDeadlineException(\"Don\u0027t procrastinate with multiple deadlines !! :)\");","lastModifiedDate":"2024-01-26"},{"lineNumber":39,"author":{"gitId":"CaptainKeqing"},"content":"                }","lastModifiedDate":"2024-01-26"},{"lineNumber":40,"author":{"gitId":"CaptainKeqing"},"content":"                return new Deadline(descriptionNBy[0].trim(),","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"CaptainKeqing"},"content":"                                    descriptionNBy[1].trim());","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"CaptainKeqing"},"content":"            case \"event\":","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"CaptainKeqing"},"content":"                // Further split the remaining string based on /from and /to","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"CaptainKeqing"},"content":"                if (!taskString.contains(\"/from\") || !taskString.contains(\"/to\")) {","lastModifiedDate":"2024-01-26"},{"lineNumber":45,"author":{"gitId":"CaptainKeqing"},"content":"                    throw new CreateEventException(","lastModifiedDate":"2024-01-26"},{"lineNumber":46,"author":{"gitId":"CaptainKeqing"},"content":"                            \"I\u0027m not sure how you\u0027re going for an event without a start time or end time\\n\" +","lastModifiedDate":"2024-01-26"},{"lineNumber":47,"author":{"gitId":"CaptainKeqing"},"content":"                                    \"please include \u0027/from\u0027 and \u0027/to\u0027 so I can keep track for you :)\");","lastModifiedDate":"2024-01-26"},{"lineNumber":48,"author":{"gitId":"CaptainKeqing"},"content":"                }","lastModifiedDate":"2024-01-26"},{"lineNumber":49,"author":{"gitId":"CaptainKeqing"},"content":"                if (taskString.indexOf(\"/from\") \u003e taskString.indexOf(\"/to\")) {","lastModifiedDate":"2024-01-26"},{"lineNumber":50,"author":{"gitId":"CaptainKeqing"},"content":"                    throw new CreateEventException(\"Sorry! /from must appear before /to :)\");","lastModifiedDate":"2024-01-26"},{"lineNumber":51,"author":{"gitId":"CaptainKeqing"},"content":"                }","lastModifiedDate":"2024-01-26"},{"lineNumber":52,"author":{"gitId":"CaptainKeqing"},"content":"                String[] descriptionNFromNTo \u003d taskString.split(\"/from |/to \");","lastModifiedDate":"2024-01-26"},{"lineNumber":53,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":54,"author":{"gitId":"CaptainKeqing"},"content":"                if (descriptionNFromNTo.length \u003e 3) {","lastModifiedDate":"2024-01-26"},{"lineNumber":55,"author":{"gitId":"CaptainKeqing"},"content":"                    throw new CreateEventException(\"um.. I\u0027m not sure how I can track for you an event that has\\n\" +","lastModifiedDate":"2024-01-26"},{"lineNumber":56,"author":{"gitId":"CaptainKeqing"},"content":"                            \"more than 1 start or end time! :)\");","lastModifiedDate":"2024-01-26"},{"lineNumber":57,"author":{"gitId":"CaptainKeqing"},"content":"                }","lastModifiedDate":"2024-01-26"},{"lineNumber":58,"author":{"gitId":"CaptainKeqing"},"content":"                return new Event(descriptionNFromNTo[0].trim(),","lastModifiedDate":"2024-01-25"},{"lineNumber":59,"author":{"gitId":"CaptainKeqing"},"content":"                                 descriptionNFromNTo[1].trim(),","lastModifiedDate":"2024-01-25"},{"lineNumber":60,"author":{"gitId":"CaptainKeqing"},"content":"                                 descriptionNFromNTo[2].trim());","lastModifiedDate":"2024-01-25"},{"lineNumber":61,"author":{"gitId":"CaptainKeqing"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":62,"author":{"gitId":"CaptainKeqing"},"content":"        return null; // shouldn\u0027t come here, since we have done the check already before calling this factory function","lastModifiedDate":"2024-01-26"},{"lineNumber":63,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":64,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"CaptainKeqing"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"CaptainKeqing"},"content":"     * Returns a new lindi.task.Task created from the parsedString taken from the saved data file.","lastModifiedDate":"2024-02-06"},{"lineNumber":67,"author":{"gitId":"CaptainKeqing"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"CaptainKeqing"},"content":"     * @param parsedString string from data file","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"CaptainKeqing"},"content":"     * @return a subclass of lindi.task.Task (lindi.task.ToDo, lindi.task.Event, lindi.task.Deadline)","lastModifiedDate":"2024-02-06"},{"lineNumber":70,"author":{"gitId":"CaptainKeqing"},"content":"     * @throws CreateTaskException if save file corrupted or edited such that format is not what is expected","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"CaptainKeqing"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":72,"author":{"gitId":"CaptainKeqing"},"content":"    public static Task createFromParsedString(String parsedString) throws CreateTaskException {","lastModifiedDate":"2024-02-04"},{"lineNumber":73,"author":{"gitId":"CaptainKeqing"},"content":"        // Get trimmed tokens","lastModifiedDate":"2024-02-04"},{"lineNumber":74,"author":{"gitId":"CaptainKeqing"},"content":"        // ToDos -\u003e T | y or n | description","lastModifiedDate":"2024-02-04"},{"lineNumber":75,"author":{"gitId":"CaptainKeqing"},"content":"        // Deadlines -\u003e D | y or n | description | by","lastModifiedDate":"2024-02-04"},{"lineNumber":76,"author":{"gitId":"CaptainKeqing"},"content":"        // Events -\u003e E | y or n | description | from | to","lastModifiedDate":"2024-02-04"},{"lineNumber":77,"author":{"gitId":"CaptainKeqing"},"content":"        String[] parsedTokens \u003d parsedString.split(\"\\\\|\");","lastModifiedDate":"2024-02-04"},{"lineNumber":78,"author":{"gitId":"CaptainKeqing"},"content":"        for (int i \u003d 0; i \u003c parsedTokens.length; i++) {","lastModifiedDate":"2024-02-04"},{"lineNumber":79,"author":{"gitId":"CaptainKeqing"},"content":"            parsedTokens[i] \u003d parsedTokens[i].trim();","lastModifiedDate":"2024-02-04"},{"lineNumber":80,"author":{"gitId":"CaptainKeqing"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":81,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":82,"author":{"gitId":"CaptainKeqing"},"content":"        // The check below considers todos having minimum of 3 tokens, and events having maximum of 5 tokens.","lastModifiedDate":"2024-02-04"},{"lineNumber":83,"author":{"gitId":"CaptainKeqing"},"content":"        if (parsedTokens.length \u003c 3 || parsedTokens.length \u003e 5) {","lastModifiedDate":"2024-02-04"},{"lineNumber":84,"author":{"gitId":"CaptainKeqing"},"content":"            throw new CreateTaskException(\"Token count not valid. File corrupted.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":85,"author":{"gitId":"CaptainKeqing"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":86,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":87,"author":{"gitId":"CaptainKeqing"},"content":"        boolean taskIsDone \u003d parsedTokens[1].equals(\"y\");","lastModifiedDate":"2024-02-04"},{"lineNumber":88,"author":{"gitId":"CaptainKeqing"},"content":"        String taskDescription \u003d parsedTokens[2];","lastModifiedDate":"2024-02-04"},{"lineNumber":89,"author":{"gitId":"CaptainKeqing"},"content":"        String taskType \u003d parsedTokens[0].equals(\"T\") ? \"todo\"","lastModifiedDate":"2024-02-04"},{"lineNumber":90,"author":{"gitId":"CaptainKeqing"},"content":"                : parsedTokens[0].equals(\"D\") ? \"deadline\"","lastModifiedDate":"2024-02-04"},{"lineNumber":91,"author":{"gitId":"CaptainKeqing"},"content":"                : parsedTokens[0].equals(\"E\") ? \"event\"","lastModifiedDate":"2024-02-04"},{"lineNumber":92,"author":{"gitId":"CaptainKeqing"},"content":"                : \"unknown\";","lastModifiedDate":"2024-02-04"},{"lineNumber":93,"author":{"gitId":"CaptainKeqing"},"content":"        if (taskType.equals(\"unknown\")) {","lastModifiedDate":"2024-02-04"},{"lineNumber":94,"author":{"gitId":"CaptainKeqing"},"content":"            throw new CreateTaskException(\"taskType invalid. File corrupted.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":95,"author":{"gitId":"CaptainKeqing"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":96,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":97,"author":{"gitId":"CaptainKeqing"},"content":"        String commandString \u003d String.format(\"%s %s\", taskType, taskDescription);","lastModifiedDate":"2024-02-04"},{"lineNumber":98,"author":{"gitId":"CaptainKeqing"},"content":"        Task newTask;","lastModifiedDate":"2024-02-04"},{"lineNumber":99,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":100,"author":{"gitId":"CaptainKeqing"},"content":"        // Create the new lindi.task using the user input string constructor","lastModifiedDate":"2024-02-06"},{"lineNumber":101,"author":{"gitId":"CaptainKeqing"},"content":"        if (taskType.equals(\"todo\") \u0026\u0026 parsedTokens.length \u003d\u003d 3) {","lastModifiedDate":"2024-02-04"},{"lineNumber":102,"author":{"gitId":"CaptainKeqing"},"content":"            newTask \u003d Task.create(commandString);","lastModifiedDate":"2024-02-04"},{"lineNumber":103,"author":{"gitId":"CaptainKeqing"},"content":"        } else if (taskType.equals(\"deadline\") \u0026\u0026 parsedTokens.length \u003d\u003d 4) {","lastModifiedDate":"2024-02-04"},{"lineNumber":104,"author":{"gitId":"CaptainKeqing"},"content":"            newTask \u003d Task.create(commandString + String.format(\"/by %s\", parsedTokens[3]));","lastModifiedDate":"2024-02-04"},{"lineNumber":105,"author":{"gitId":"CaptainKeqing"},"content":"        } else if (taskType.equals(\"event\") \u0026\u0026 parsedTokens.length \u003d\u003d 5) {","lastModifiedDate":"2024-02-04"},{"lineNumber":106,"author":{"gitId":"CaptainKeqing"},"content":"            newTask \u003d Task.create(commandString + String.format(\"/from %s /to %s\", parsedTokens[3], parsedTokens[4]));","lastModifiedDate":"2024-02-04"},{"lineNumber":107,"author":{"gitId":"CaptainKeqing"},"content":"        } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":108,"author":{"gitId":"CaptainKeqing"},"content":"            throw new CreateTaskException(\"lindi.task.Task type and token count not matched. File corrupted.\");","lastModifiedDate":"2024-02-06"},{"lineNumber":109,"author":{"gitId":"CaptainKeqing"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":110,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":111,"author":{"gitId":"CaptainKeqing"},"content":"        // Finally mark if lindi.task is done or not","lastModifiedDate":"2024-02-06"},{"lineNumber":112,"author":{"gitId":"CaptainKeqing"},"content":"        if (taskIsDone) {","lastModifiedDate":"2024-02-04"},{"lineNumber":113,"author":{"gitId":"CaptainKeqing"},"content":"            assert newTask !\u003d null;","lastModifiedDate":"2024-02-04"},{"lineNumber":114,"author":{"gitId":"CaptainKeqing"},"content":"            newTask.markDone();","lastModifiedDate":"2024-02-04"},{"lineNumber":115,"author":{"gitId":"CaptainKeqing"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":116,"author":{"gitId":"CaptainKeqing"},"content":"        return newTask;","lastModifiedDate":"2024-02-04"},{"lineNumber":117,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":118,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":119,"author":{"gitId":"CaptainKeqing"},"content":"    public void markDone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":120,"author":{"gitId":"CaptainKeqing"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-25"},{"lineNumber":121,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":122,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":123,"author":{"gitId":"CaptainKeqing"},"content":"    public void unmarkDone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":124,"author":{"gitId":"CaptainKeqing"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":125,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":126,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":127,"author":{"gitId":"CaptainKeqing"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":128,"author":{"gitId":"CaptainKeqing"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":129,"author":{"gitId":"CaptainKeqing"},"content":"        return String.format(\"[%s] %s\",","lastModifiedDate":"2024-01-25"},{"lineNumber":130,"author":{"gitId":"CaptainKeqing"},"content":"                                isDone ? \"X\" : \" \",","lastModifiedDate":"2024-01-25"},{"lineNumber":131,"author":{"gitId":"CaptainKeqing"},"content":"                                this.description);","lastModifiedDate":"2024-01-25"},{"lineNumber":132,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":133,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":134,"author":{"gitId":"CaptainKeqing"},"content":"    public abstract String parsedFormatToSave();","lastModifiedDate":"2024-02-04"},{"lineNumber":135,"author":{"gitId":"CaptainKeqing"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"CaptainKeqing":135}},{"path":"src/main/java/lindi/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CaptainKeqing"},"content":"package lindi.task;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"CaptainKeqing"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"CaptainKeqing"},"content":"import java.util.Iterator;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"CaptainKeqing"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"CaptainKeqing"},"content":" * Represents the taskList to be used in the application.","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"CaptainKeqing"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"CaptainKeqing"},"content":"public class TaskList {","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"CaptainKeqing"},"content":"    private final ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"CaptainKeqing"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"CaptainKeqing"},"content":"     * Returns the number of tasks in the lindi.task list.","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"CaptainKeqing"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"CaptainKeqing"},"content":"    public int size() {","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"CaptainKeqing"},"content":"        return tasks.size();","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"CaptainKeqing"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"CaptainKeqing"},"content":"     * Adds a lindi.task to the lindi.task list","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"CaptainKeqing"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"CaptainKeqing"},"content":"    public void add(Task task) {","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"CaptainKeqing"},"content":"        tasks.add(task);","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"CaptainKeqing"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"CaptainKeqing"},"content":"     * Deletes the lindi.task at index from lindi.task list, and returns it","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"CaptainKeqing"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"CaptainKeqing"},"content":"     * @param listIndex index of lindi.task to delete as shown by list command","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"CaptainKeqing"},"content":"     * @return the lindi.task that was deleted","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"CaptainKeqing"},"content":"     * @throws IndexOutOfBoundsException if index is out of bounds","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"CaptainKeqing"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"CaptainKeqing"},"content":"    public Task delete(int listIndex) throws IndexOutOfBoundsException {","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"CaptainKeqing"},"content":"        return tasks.remove(listIndex - 1);","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"CaptainKeqing"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"CaptainKeqing"},"content":"     * Marks the item in lindi.task list at index as done, and returns it","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"CaptainKeqing"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":40,"author":{"gitId":"CaptainKeqing"},"content":"     * @param listIndex index of lindi.task to mark as shown by list command","lastModifiedDate":"2024-02-06"},{"lineNumber":41,"author":{"gitId":"CaptainKeqing"},"content":"     * @return the lindi.task that was marked","lastModifiedDate":"2024-02-06"},{"lineNumber":42,"author":{"gitId":"CaptainKeqing"},"content":"     * @throws IndexOutOfBoundsException if index is out of bounds","lastModifiedDate":"2024-02-06"},{"lineNumber":43,"author":{"gitId":"CaptainKeqing"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":44,"author":{"gitId":"CaptainKeqing"},"content":"    public Task mark(int listIndex) throws IndexOutOfBoundsException {","lastModifiedDate":"2024-02-06"},{"lineNumber":45,"author":{"gitId":"CaptainKeqing"},"content":"        Task task \u003d tasks.get(listIndex - 1);","lastModifiedDate":"2024-02-06"},{"lineNumber":46,"author":{"gitId":"CaptainKeqing"},"content":"        task.markDone();","lastModifiedDate":"2024-02-06"},{"lineNumber":47,"author":{"gitId":"CaptainKeqing"},"content":"        return task;","lastModifiedDate":"2024-02-06"},{"lineNumber":48,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":49,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":50,"author":{"gitId":"CaptainKeqing"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":51,"author":{"gitId":"CaptainKeqing"},"content":"     * Unmarks the item in lindi.task list at index as done, and returns it","lastModifiedDate":"2024-02-06"},{"lineNumber":52,"author":{"gitId":"CaptainKeqing"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"CaptainKeqing"},"content":"     * @param listIndex index of lindi.task to unmark as shown by list command","lastModifiedDate":"2024-02-06"},{"lineNumber":54,"author":{"gitId":"CaptainKeqing"},"content":"     * @return the lindi.task that was unmarked","lastModifiedDate":"2024-02-06"},{"lineNumber":55,"author":{"gitId":"CaptainKeqing"},"content":"     * @throws IndexOutOfBoundsException if index is out of bounds","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"CaptainKeqing"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"CaptainKeqing"},"content":"    public Task unmark(int listIndex) throws IndexOutOfBoundsException {","lastModifiedDate":"2024-02-06"},{"lineNumber":58,"author":{"gitId":"CaptainKeqing"},"content":"        Task task \u003d tasks.get(listIndex - 1);","lastModifiedDate":"2024-02-06"},{"lineNumber":59,"author":{"gitId":"CaptainKeqing"},"content":"        task.unmarkDone();","lastModifiedDate":"2024-02-06"},{"lineNumber":60,"author":{"gitId":"CaptainKeqing"},"content":"        return task;","lastModifiedDate":"2024-02-06"},{"lineNumber":61,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":63,"author":{"gitId":"CaptainKeqing"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":64,"author":{"gitId":"CaptainKeqing"},"content":"     * Returns the tasks as an Iterator to prevent modification. Meant to be only used by lindi.storage.Storage to save this data","lastModifiedDate":"2024-02-06"},{"lineNumber":65,"author":{"gitId":"CaptainKeqing"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":66,"author":{"gitId":"CaptainKeqing"},"content":"    public Iterator\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-02-06"},{"lineNumber":67,"author":{"gitId":"CaptainKeqing"},"content":"        return this.tasks.iterator();","lastModifiedDate":"2024-02-06"},{"lineNumber":68,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":69,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":70,"author":{"gitId":"CaptainKeqing"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":71,"author":{"gitId":"CaptainKeqing"},"content":"    public String toString() {","lastModifiedDate":"2024-02-05"},{"lineNumber":72,"author":{"gitId":"CaptainKeqing"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-02-05"},{"lineNumber":73,"author":{"gitId":"CaptainKeqing"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-05"},{"lineNumber":74,"author":{"gitId":"CaptainKeqing"},"content":"            sb.append(String.format(\"%d. %s \\n\", i + 1, tasks.get(i).toString()));","lastModifiedDate":"2024-02-05"},{"lineNumber":75,"author":{"gitId":"CaptainKeqing"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":76,"author":{"gitId":"CaptainKeqing"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2024-02-05"},{"lineNumber":77,"author":{"gitId":"CaptainKeqing"},"content":"            sb.append(\"There are no tasks for you today. Enjoy :)\");","lastModifiedDate":"2024-02-05"},{"lineNumber":78,"author":{"gitId":"CaptainKeqing"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":79,"author":{"gitId":"CaptainKeqing"},"content":"        return sb.toString();","lastModifiedDate":"2024-02-05"},{"lineNumber":80,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":81,"author":{"gitId":"CaptainKeqing"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"CaptainKeqing":81}},{"path":"src/main/java/lindi/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CaptainKeqing"},"content":"package lindi.task;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"CaptainKeqing"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"CaptainKeqing"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"CaptainKeqing"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"CaptainKeqing"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"CaptainKeqing"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"CaptainKeqing"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"CaptainKeqing"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"CaptainKeqing"},"content":"    public String parsedFormatToSave() {","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"CaptainKeqing"},"content":"        return String.format(\"T | %c | %s\",","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"CaptainKeqing"},"content":"                this.isDone ? \u0027y\u0027 : \u0027n\u0027, this.description);","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"CaptainKeqing"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"CaptainKeqing":18}},{"path":"src/main/java/lindi/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CaptainKeqing"},"content":"package lindi.ui;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"CaptainKeqing"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"CaptainKeqing"},"content":"import lindi.commands.Command;","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"CaptainKeqing"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"CaptainKeqing"},"content":" * Text based UI of the application. Deals with interactions with the user","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"CaptainKeqing"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"CaptainKeqing"},"content":"public class Ui {","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"CaptainKeqing"},"content":"    private static final String LINE_SEPARATOR \u003d \"-\".repeat(50); // For visibility purposes","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"CaptainKeqing"},"content":"    private final Scanner in;","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"CaptainKeqing"},"content":"    private final String name;","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"CaptainKeqing"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"CaptainKeqing"},"content":"     * Creates a user interface with system.in input","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"CaptainKeqing"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"CaptainKeqing"},"content":"    public Ui(String name) {","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"CaptainKeqing"},"content":"        this.in \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"CaptainKeqing"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"CaptainKeqing"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"CaptainKeqing"},"content":"     * Returns the input line read in from user","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"CaptainKeqing"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"CaptainKeqing"},"content":"    public String getUserInput() {","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"CaptainKeqing"},"content":"        return in.nextLine();","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"CaptainKeqing"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"CaptainKeqing"},"content":"     * Prints the given string, decorated with a line separator for better visibility","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"CaptainKeqing"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"CaptainKeqing"},"content":"    private void print(String s) {","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"CaptainKeqing"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"CaptainKeqing"},"content":"        System.out.println(s);","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"CaptainKeqing"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"CaptainKeqing"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":40,"author":{"gitId":"CaptainKeqing"},"content":"     * Displays to the user the status of the given command.","lastModifiedDate":"2024-02-06"},{"lineNumber":41,"author":{"gitId":"CaptainKeqing"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":42,"author":{"gitId":"CaptainKeqing"},"content":"    public void displayCommand(Command command) {","lastModifiedDate":"2024-02-06"},{"lineNumber":43,"author":{"gitId":"CaptainKeqing"},"content":"        this.print(command.status());","lastModifiedDate":"2024-02-06"},{"lineNumber":44,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":45,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":46,"author":{"gitId":"CaptainKeqing"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":47,"author":{"gitId":"CaptainKeqing"},"content":"     * Displays to the user the exception.","lastModifiedDate":"2024-02-06"},{"lineNumber":48,"author":{"gitId":"CaptainKeqing"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":49,"author":{"gitId":"CaptainKeqing"},"content":"    public void displayError(Exception e) {","lastModifiedDate":"2024-02-06"},{"lineNumber":50,"author":{"gitId":"CaptainKeqing"},"content":"        this.print(\"Oops ! There was an error:\\n\" + e.getMessage());","lastModifiedDate":"2024-02-06"},{"lineNumber":51,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":52,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":53,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":54,"author":{"gitId":"CaptainKeqing"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":55,"author":{"gitId":"CaptainKeqing"},"content":"     * Displays a greeting message.","lastModifiedDate":"2024-02-06"},{"lineNumber":56,"author":{"gitId":"CaptainKeqing"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":57,"author":{"gitId":"CaptainKeqing"},"content":"    public void greeting() {","lastModifiedDate":"2024-02-06"},{"lineNumber":58,"author":{"gitId":"CaptainKeqing"},"content":"        this.print(String.format(\"Hello I\u0027m %s\\nWhat can I do for you?\", this.name));","lastModifiedDate":"2024-02-06"},{"lineNumber":59,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":60,"author":{"gitId":"CaptainKeqing"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"CaptainKeqing":60}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"CaptainKeqing"},"content":"hello","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"CaptainKeqing"},"content":"list","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"CaptainKeqing"},"content":"todo practice piano","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"CaptainKeqing"},"content":"deadline finish iP /by Sat 26 2359","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"CaptainKeqing"},"content":"event volunteering /from Sat 930am /to 1130am","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"CaptainKeqing"},"content":"list","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"CaptainKeqing"},"content":"mark 2","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"CaptainKeqing"},"content":"mark 1","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"CaptainKeqing"},"content":"list","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"CaptainKeqing"},"content":"event cca practice /to 10pm","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"CaptainKeqing"},"content":"event cca practice /to 10pm /from 8pm","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"CaptainKeqing"},"content":"deadline cca leader selection","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"CaptainKeqing"},"content":"bye","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"CaptainKeqing":13}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"CaptainKeqing"},"content":"java -classpath ../bin Lindi \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"CaptainKeqing"},"content":"#dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":36,"CaptainKeqing":2}}]
